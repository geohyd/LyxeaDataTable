var Td = Object.defineProperty;
var vf = Object.getOwnPropertySymbols;
var Fd = Object.prototype.hasOwnProperty, Id = Object.prototype.propertyIsEnumerable;
var Is = (a, p, g) => p in a ? Td(a, p, { enumerable: !0, configurable: !0, writable: !0, value: g }) : a[p] = g, Vi = (a, p) => {
  for (var g in p || (p = {}))
    Fd.call(p, g) && Is(a, g, p[g]);
  if (vf)
    for (var g of vf(p))
      Id.call(p, g) && Is(a, g, p[g]);
  return a;
};
var mr = (a, p, g) => (Is(a, typeof p != "symbol" ? p + "" : p, g), g), Ds = (a, p, g) => {
  if (!p.has(a))
    throw TypeError("Cannot " + g);
};
var un = (a, p, g) => (Ds(a, p, "read from private field"), g ? g.call(a) : p.get(a)), ta = (a, p, g) => {
  if (p.has(a))
    throw TypeError("Cannot add the same private member more than once");
  p instanceof WeakSet ? p.add(a) : p.set(a, g);
}, Rn = (a, p, g, w) => (Ds(a, p, "write to private field"), w ? w.call(a, g) : p.set(a, g), g);
var Lo = (a, p, g) => (Ds(a, p, "access private method"), g);
var ea = (a, p, g) => new Promise((w, L) => {
  var B = (t) => {
    try {
      d(g.next(t));
    } catch (i) {
      L(i);
    }
  }, f = (t) => {
    try {
      d(g.throw(t));
    } catch (i) {
      L(i);
    }
  }, d = (t) => t.done ? w(t.value) : Promise.resolve(t.value).then(B, f);
  d((g = g.apply(a, p)).next());
});
import Wn from "jquery";
/*! DataTables 2.2.2
 * Â© SpryMedia Ltd - datatables.net/license
 */
var Xt = Wn, de = function(a, p) {
  if (de.factory(a, p))
    return de;
  if (this instanceof de)
    return Xt(a).DataTable(p);
  p = a;
  var g = this, w = p === void 0, L = this.length;
  return w && (p = {}), this.api = function() {
    return new Fr(this);
  }, this.each(function() {
    var B = {}, f = L > 1 ? (
      // optimisation for single table case
      Cf(B, p, !0)
    ) : p, d = 0, t, i = this.getAttribute("id"), r = de.defaults, n = Xt(this);
    if (this.nodeName.toLowerCase() != "table") {
      ca(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
      return;
    }
    Xt(this).trigger("options.dt", f), gf(r), Wf(r.column), za(r, r, !0), za(r.column, r.column, !0), za(r, Xt.extend(f, n.data()), !0);
    var o = de.settings;
    for (d = 0, t = o.length; d < t; d++) {
      var h = o[d];
      if (h.nTable == this || h.nTHead && h.nTHead.parentNode == this || h.nTFoot && h.nTFoot.parentNode == this) {
        var u = f.bRetrieve !== void 0 ? f.bRetrieve : r.bRetrieve, l = f.bDestroy !== void 0 ? f.bDestroy : r.bDestroy;
        if (w || u)
          return h.oInstance;
        if (l) {
          new de.Api(h).destroy();
          break;
        } else {
          ca(h, 0, "Cannot reinitialise DataTable", 3);
          return;
        }
      }
      if (h.sTableId == this.id) {
        o.splice(d, 1);
        break;
      }
    }
    (i === null || i === "") && (i = "DataTables_Table_" + de.ext._unique++, this.id = i);
    var c = Xt.extend(!0, {}, de.models.oSettings, {
      sDestroyWidth: n[0].style.width,
      sInstance: i,
      sTableId: i,
      colgroup: Xt("<colgroup>").prependTo(this),
      fastData: function(I, O, M) {
        return ha(c, I, O, M);
      }
    });
    c.nTable = this, c.oInit = f, o.push(c), c.api = new Fr(c), c.oInstance = g.length === 1 ? g : n.dataTable(), gf(f), f.aLengthMenu && !f.iDisplayLength && (f.iDisplayLength = Array.isArray(f.aLengthMenu[0]) ? f.aLengthMenu[0][0] : Xt.isPlainObject(f.aLengthMenu[0]) ? f.aLengthMenu[0].value : f.aLengthMenu[0]), f = Cf(Xt.extend(!0, {}, r), f), Ha(c.oFeatures, f, [
      "bPaginate",
      "bLengthChange",
      "bFilter",
      "bSort",
      "bSortMulti",
      "bInfo",
      "bProcessing",
      "bAutoWidth",
      "bSortClasses",
      "bServerSide",
      "bDeferRender"
    ]), Ha(c, f, [
      "ajax",
      "fnFormatNumber",
      "sServerMethod",
      "aaSorting",
      "aaSortingFixed",
      "aLengthMenu",
      "sPaginationType",
      "iStateDuration",
      "bSortCellsTop",
      "iTabIndex",
      "sDom",
      "fnStateLoadCallback",
      "fnStateSaveCallback",
      "renderer",
      "searchDelay",
      "rowId",
      "caption",
      "layout",
      "orderDescReverse",
      "typeDetect",
      ["iCookieDuration", "iStateDuration"],
      // backwards compat
      ["oSearch", "oPreviousSearch"],
      ["aoSearchCols", "aoPreSearchCols"],
      ["iDisplayLength", "_iDisplayLength"]
    ]), Ha(c.oScroll, f, [
      ["sScrollX", "sX"],
      ["sScrollXInner", "sXInner"],
      ["sScrollY", "sY"],
      ["bScrollCollapse", "bCollapse"]
    ]), Ha(c.oLanguage, f, "fnInfoCallback"), ua(c, "aoDrawCallback", f.fnDrawCallback), ua(c, "aoStateSaveParams", f.fnStateSaveParams), ua(c, "aoStateLoadParams", f.fnStateLoadParams), ua(c, "aoStateLoaded", f.fnStateLoaded), ua(c, "aoRowCallback", f.fnRowCallback), ua(c, "aoRowCreatedCallback", f.fnCreatedRow), ua(c, "aoHeaderCallback", f.fnHeaderCallback), ua(c, "aoFooterCallback", f.fnFooterCallback), ua(c, "aoInitComplete", f.fnInitComplete), ua(c, "aoPreDrawCallback", f.fnPreDrawCallback), c.rowIdFn = wi(f.rowId), Ld(c);
    var s = c.oClasses;
    Xt.extend(s, de.ext.classes, f.oClasses), n.addClass(s.table), c.oFeatures.bPaginate || (f.iDisplayStart = 0), c.iInitDisplayStart === void 0 && (c.iInitDisplayStart = f.iDisplayStart, c._iDisplayStart = f.iDisplayStart);
    var v = f.iDeferLoading;
    if (v !== null) {
      c.deferLoading = !0;
      var y = Array.isArray(v);
      c._iRecordsDisplay = y ? v[0] : v, c._iRecordsTotal = y ? v[1] : v;
    }
    var x = [], e = this.getElementsByTagName("thead"), b = Yf(c, e[0]);
    if (f.aoColumns)
      x = f.aoColumns;
    else if (b.length)
      for (d = 0, t = b[0].length; d < t; d++)
        x.push(null);
    for (d = 0, t = x.length; d < t; d++)
      Hf(c);
    kd(c, f.aoColumnDefs, x, b, function(I, O) {
      zs(c, I, O);
    });
    var A = n.children("tbody").find("tr").eq(0);
    if (A.length) {
      var P = function(I, O) {
        return I.getAttribute("data-" + O) !== null ? O : null;
      };
      Xt(A[0]).children("th, td").each(function(I, O) {
        var M = c.aoColumns[I];
        if (M || ca(c, 0, "Incorrect column count", 18), M.mData === I) {
          var N = P(O, "sort") || P(O, "order"), G = P(O, "filter") || P(O, "search");
          (N !== null || G !== null) && (M.mData = {
            _: I + ".display",
            sort: N !== null ? I + ".@data-" + N : void 0,
            type: N !== null ? I + ".@data-" + N : void 0,
            filter: G !== null ? I + ".@data-" + G : void 0
          }, M._isArrayHost = !0, zs(c, I));
        }
      });
    }
    ua(c, "aoDrawCallback", is);
    var D = c.oFeatures;
    if (f.bStateSave && (D.bStateSave = !0), f.aaSorting === void 0) {
      var E = c.aaSorting;
      for (d = 0, t = E.length; d < t; d++)
        E[d][1] = c.aoColumns[d].asSorting[0];
    }
    js(c), ua(c, "aoDrawCallback", function() {
      (c.bSorted || sa(c) === "ssp" || D.bDeferRender) && js(c);
    });
    var T = n.children("caption");
    c.caption && (T.length === 0 && (T = Xt("<caption/>").appendTo(n)), T.html(c.caption)), T.length && (T[0]._captionSide = T.css("caption-side"), c.captionNode = T[0]), e.length === 0 && (e = Xt("<thead/>").appendTo(n)), c.nTHead = e[0];
    var C = n.children("tbody");
    C.length === 0 && (C = Xt("<tbody/>").insertAfter(e)), c.nTBody = C[0];
    var F = n.children("tfoot");
    F.length === 0 && (F = Xt("<tfoot/>").appendTo(n)), c.nTFoot = F[0], c.aiDisplay = c.aiDisplayMaster.slice(), c.bInitialised = !0;
    var m = c.oLanguage;
    Xt.extend(!0, m, f.oLanguage), m.sUrl ? Xt.ajax({
      dataType: "json",
      url: m.sUrl,
      success: function(I) {
        za(r.oLanguage, I), Xt.extend(!0, m, I, c.oInit.oLanguage), zr(c, null, "i18n", [c], !0), Ho(c);
      },
      error: function() {
        ca(c, 0, "i18n file loading error", 21), Ho(c);
      }
    }) : (zr(c, null, "i18n", [c], !0), Ho(c));
  }), g = null, this;
};
de.ext = En = {
  /**
   * Buttons. For use with the Buttons extension for DataTables. This is
   * defined here so other extensions can define buttons regardless of load
   * order. It is _not_ used by DataTables core.
   *
   *  @type object
   *  @default {}
   */
  buttons: {},
  /**
   * Element class names
   *
   *  @type object
   *  @default {}
   */
  classes: {},
  /**
   * DataTables build type (expanded by the download builder)
   *
   *  @type string
   */
  builder: "-source-",
  /**
   * Error reporting.
   * 
   * How should DataTables report an error. Can take the value 'alert',
   * 'throw', 'none' or a function.
   *
   *  @type string|function
   *  @default alert
   */
  errMode: "alert",
  /**
   * Legacy so v1 plug-ins don't throw js errors on load
   */
  feature: [],
  /**
   * Feature plug-ins.
   * 
   * This is an object of callbacks which provide the features for DataTables
   * to be initialised via the `layout` option.
   */
  features: {},
  /**
   * Row searching.
   * 
   * This method of searching is complimentary to the default type based
   * searching, and a lot more comprehensive as it allows you complete control
   * over the searching logic. Each element in this array is a function
   * (parameters described below) that is called for every row in the table,
   * and your logic decides if it should be included in the searching data set
   * or not.
   *
   * Searching functions have the following input parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{array|object}` Data for the row to be processed (same as the
   *    original format that was passed in as the data source, or an array
   *    from a DOM data source
   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
   *    can be useful to retrieve the `TR` element if you need DOM interaction.
   *
   * And the following return is expected:
   *
   * * {boolean} Include the row in the searched result set (true) or not
   *   (false)
   *
   * Note that as with the main search ability in DataTables, technically this
   * is "filtering", since it is subtractive. However, for consistency in
   * naming we call it searching here.
   *
   *  @type array
   *  @default []
   *
   *  @example
   *    // The following example shows custom search being applied to the
   *    // fourth column (i.e. the data[3] index) based on two input values
   *    // from the end-user, matching the data in a certain range.
   *    $.fn.dataTable.ext.search.push(
   *      function( settings, data, dataIndex ) {
   *        var min = document.getElementById('min').value * 1;
   *        var max = document.getElementById('max').value * 1;
   *        var version = data[3] == "-" ? 0 : data[3]*1;
   *
   *        if ( min == "" && max == "" ) {
   *          return true;
   *        }
   *        else if ( min == "" && version < max ) {
   *          return true;
   *        }
   *        else if ( min < version && "" == max ) {
   *          return true;
   *        }
   *        else if ( min < version && version < max ) {
   *          return true;
   *        }
   *        return false;
   *      }
   *    );
   */
  search: [],
  /**
   * Selector extensions
   *
   * The `selector` option can be used to extend the options available for the
   * selector modifier options (`selector-modifier` object data type) that
   * each of the three built in selector types offer (row, column and cell +
   * their plural counterparts). For example the Select extension uses this
   * mechanism to provide an option to select only rows, columns and cells
   * that have been marked as selected by the end user (`{selected: true}`),
   * which can be used in conjunction with the existing built in selector
   * options.
   *
   * Each property is an array to which functions can be pushed. The functions
   * take three attributes:
   *
   * * Settings object for the host table
   * * Options object (`selector-modifier` object type)
   * * Array of selected item indexes
   *
   * The return is an array of the resulting item indexes after the custom
   * selector has been applied.
   *
   *  @type object
   */
  selector: {
    cell: [],
    column: [],
    row: []
  },
  /**
   * Legacy configuration options. Enable and disable legacy options that
   * are available in DataTables.
   *
   *  @type object
   */
  legacy: {
    /**
     * Enable / disable DataTables 1.9 compatible server-side processing
     * requests
     *
     *  @type boolean
     *  @default null
     */
    ajax: null
  },
  /**
   * Pagination plug-in methods.
   * 
   * Each entry in this object is a function and defines which buttons should
   * be shown by the pagination rendering method that is used for the table:
   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
   * buttons are displayed in the document, while the functions here tell it
   * what buttons to display. This is done by returning an array of button
   * descriptions (what each button will do).
   *
   * Pagination types (the four built in options and any additional plug-in
   * options defined here) can be used through the `paginationType`
   * initialisation parameter.
   *
   * The functions defined take two parameters:
   *
   * 1. `{int} page` The current page index
   * 2. `{int} pages` The number of pages in the table
   *
   * Each function is expected to return an array where each element of the
   * array can be one of:
   *
   * * `first` - Jump to first page when activated
   * * `last` - Jump to last page when activated
   * * `previous` - Show previous page when activated
   * * `next` - Show next page when activated
   * * `{int}` - Show page of the index given
   * * `{array}` - A nested array containing the above elements to add a
   *   containing 'DIV' element (might be useful for styling).
   *
   * Note that DataTables v1.9- used this object slightly differently whereby
   * an object with two functions would be defined for each plug-in. That
   * ability is still supported by DataTables 1.10+ to provide backwards
   * compatibility, but this option of use is now decremented and no longer
   * documented in DataTables 1.10+.
   *
   *  @type object
   *  @default {}
   *
   *  @example
   *    // Show previous, next and current page buttons only
   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
   *      return [ 'previous', page, 'next' ];
   *    };
   */
  pager: {},
  renderer: {
    pageButton: {},
    header: {}
  },
  /**
   * Ordering plug-ins - custom data source
   * 
   * The extension options for ordering of data available here is complimentary
   * to the default type based ordering that DataTables typically uses. It
   * allows much greater control over the the data that is being used to
   * order a column, but is necessarily therefore more complex.
   * 
   * This type of ordering is useful if you want to do ordering based on data
   * live from the DOM (for example the contents of an 'input' element) rather
   * than just the static string that DataTables knows of.
   * 
   * The way these plug-ins work is that you create an array of the values you
   * wish to be ordering for the column in question and then return that
   * array. The data in the array much be in the index order of the rows in
   * the table (not the currently ordering order!). Which order data gathering
   * function is run here depends on the `dt-init columns.orderDataType`
   * parameter that is used for the column (if any).
   *
   * The functions defined take two parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{int}` Target column index
   *
   * Each function is expected to return an array:
   *
   * * `{array}` Data for the column to be ordering upon
   *
   *  @type array
   *
   *  @example
   *    // Ordering using `input` node values
   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
   *    {
   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
   *        return $('input', td).val();
   *      } );
   *    }
   */
  order: {},
  /**
   * Type based plug-ins.
   *
   * Each column in DataTables has a type assigned to it, either by automatic
   * detection or by direct assignment using the `type` option for the column.
   * The type of a column will effect how it is ordering and search (plug-ins
   * can also make use of the column type if required).
   *
   * @namespace
   */
  type: {
    /**
     * Automatic column class assignment
     */
    className: {},
    /**
     * Type detection functions.
     *
     * The functions defined in this object are used to automatically detect
     * a column's type, making initialisation of DataTables super easy, even
     * when complex data is in the table.
     *
     * The functions defined take two parameters:
     *
        *  1. `{*}` Data from the column cell to be analysed
        *  2. `{settings}` DataTables settings object. This can be used to
        *     perform context specific type detection - for example detection
        *     based on language settings such as using a comma for a decimal
        *     place. Generally speaking the options from the settings will not
        *     be required
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Data type detected, or null if unknown (and thus
     *   pass it on to the other type detection functions.
     *
     *  @type array
     *
     *  @example
     *    // Currency type detection plug-in:
     *    $.fn.dataTable.ext.type.detect.push(
     *      function ( data, settings ) {
     *        // Check the numeric part
     *        if ( ! data.substring(1).match(/[0-9]/) ) {
     *          return null;
     *        }
     *
     *        // Check prefixed by currency
     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
     *          return 'currency';
     *        }
     *        return null;
     *      }
     *    );
     */
    detect: [],
    /**
     * Automatic renderer assignment
     */
    render: {},
    /**
     * Type based search formatting.
     *
     * The type based searching functions can be used to pre-format the
     * data to be search on. For example, it can be used to strip HTML
     * tags or to de-format telephone numbers for numeric only searching.
     *
     * Note that is a search is not defined for a column of a given type,
     * no search formatting will be performed.
     * 
     * Pre-processing of searching data plug-ins - When you assign the sType
     * for a column (or have it automatically detected for you by DataTables
     * or a type detection plug-in), you will typically be using this for
     * custom sorting, but it can also be used to provide custom searching
     * by allowing you to pre-processing the data and returning the data in
     * the format that should be searched upon. This is done by adding
     * functions this object with a parameter name which matches the sType
     * for that target column. This is the corollary of <i>afnSortData</i>
     * for searching data.
     *
     * The functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for searching
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Formatted string that will be used for the searching.
     *
     *  @type object
     *  @default {}
     *
     *  @example
     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
     *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
     *    }
     */
    search: {},
    /**
     * Type based ordering.
     *
     * The column type tells DataTables what ordering to apply to the table
     * when a column is sorted upon. The order for each type that is defined,
     * is defined by the functions available in this object.
     *
     * Each ordering option can be described by three properties added to
     * this object:
     *
     * * `{type}-pre` - Pre-formatting function
     * * `{type}-asc` - Ascending order function
     * * `{type}-desc` - Descending order function
     *
     * All three can be used together, only `{type}-pre` or only
     * `{type}-asc` and `{type}-desc` together. It is generally recommended
     * that only `{type}-pre` is used, as this provides the optimal
     * implementation in terms of speed, although the others are provided
     * for compatibility with existing Javascript sort functions.
     *
     * `{type}-pre`: Functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for ordering
     *
     * And return:
     *
     * * `{*}` Data to be sorted upon
     *
     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
     * functions, taking two parameters:
     *
        *  1. `{*}` Data to compare to the second parameter
        *  2. `{*}` Data to compare to the first parameter
     *
     * And returning:
     *
     * * `{*}` Ordering match: <0 if first parameter should be sorted lower
     *   than the second parameter, ===0 if the two parameters are equal and
     *   >0 if the first parameter should be sorted height than the second
     *   parameter.
     * 
     *  @type object
     *  @default {}
     *
     *  @example
     *    // Numeric ordering of formatted numbers with a pre-formatter
     *    $.extend( $.fn.dataTable.ext.type.order, {
     *      "string-pre": function(x) {
     *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
     *        return parseFloat( a );
     *      }
     *    } );
     *
     *  @example
     *    // Case-sensitive string ordering, with no pre-formatting method
     *    $.extend( $.fn.dataTable.ext.order, {
     *      "string-case-asc": function(x,y) {
     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
     *      },
     *      "string-case-desc": function(x,y) {
     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
     *      }
     *    } );
     */
    order: {}
  },
  /**
   * Unique DataTables instance counter
   *
   * @type int
   * @private
   */
  _unique: 0,
  //
  // Depreciated
  // The following properties are retained for backwards compatibility only.
  // The should not be used in new projects and will be removed in a future
  // version
  //
  /**
   * Version check function.
   *  @type function
   *  @depreciated Since 1.10
   */
  fnVersionCheck: de.fnVersionCheck,
  /**
   * Index for what 'this' index API functions should use
   *  @type int
   *  @deprecated Since v1.10
   */
  iApiIndex: 0,
  /**
   * Software version
   *  @type string
   *  @deprecated Since v1.10
   */
  sVersion: de.version
};
Xt.extend(En, {
  afnFiltering: En.search,
  aTypes: En.type.detect,
  ofnSearch: En.type.search,
  oSort: En.type.order,
  afnSortData: En.order,
  aoFeatures: En.feature,
  oStdClasses: En.classes,
  oPagination: En.pager
});
Xt.extend(de.ext.classes, {
  container: "dt-container",
  empty: {
    row: "dt-empty"
  },
  info: {
    container: "dt-info"
  },
  layout: {
    row: "dt-layout-row",
    cell: "dt-layout-cell",
    tableRow: "dt-layout-table",
    tableCell: "",
    start: "dt-layout-start",
    end: "dt-layout-end",
    full: "dt-layout-full"
  },
  length: {
    container: "dt-length",
    select: "dt-input"
  },
  order: {
    canAsc: "dt-orderable-asc",
    canDesc: "dt-orderable-desc",
    isAsc: "dt-ordering-asc",
    isDesc: "dt-ordering-desc",
    none: "dt-orderable-none",
    position: "sorting_"
  },
  processing: {
    container: "dt-processing"
  },
  scrolling: {
    body: "dt-scroll-body",
    container: "dt-scroll",
    footer: {
      self: "dt-scroll-foot",
      inner: "dt-scroll-footInner"
    },
    header: {
      self: "dt-scroll-head",
      inner: "dt-scroll-headInner"
    }
  },
  search: {
    container: "dt-search",
    input: "dt-input"
  },
  table: "dataTable",
  tbody: {
    cell: "",
    row: ""
  },
  thead: {
    cell: "",
    row: ""
  },
  tfoot: {
    cell: "",
    row: ""
  },
  paging: {
    active: "current",
    button: "dt-paging-button",
    container: "dt-paging",
    disabled: "disabled",
    nav: ""
  }
});
var En, Fr, Qe, Qr, Ps = {}, Dd = /[\r\n\u2028]/g, Js = /<([^>]*>)/g, Pd = Math.pow(2, 28), pf = /^\d{2,4}[./-]\d{1,2}[./-]\d{1,2}([T ]{1}\d{1,2}[:.]\d{2}([.:]\d{2})?)?$/, Od = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")", "g"), Qs = /['\u00A0,$Â£â¬Â¥%\u2009\u202F\u20BD\u20a9\u20BArfkÉÎ]/gi, ia = function(a) {
  return !a || a === !0 || a === "-";
}, kf = function(a) {
  var p = parseInt(a, 10);
  return !isNaN(p) && isFinite(a) ? p : null;
}, Uf = function(a, p) {
  return Ps[p] || (Ps[p] = new RegExp(Hs(p), "g")), typeof a == "string" && p !== "." ? a.replace(/\./g, "").replace(Ps[p], ".") : a;
}, Qi = function(a, p, g, w) {
  var L = typeof a, B = L === "string";
  return L === "number" || L === "bigint" || w && ia(a) ? !0 : (p && B && (a = Uf(a, p)), g && B && (a = a.replace(Qs, "")), !isNaN(parseFloat(a)) && isFinite(a));
}, Bd = function(a) {
  return ia(a) || typeof a == "string";
}, Go = function(a, p, g, w) {
  if (w && ia(a))
    return !0;
  if (typeof a == "string" && a.match(/<(input|select)/i))
    return null;
  var L = Bd(a);
  return L && Qi(Pa(a), p, g, w) ? !0 : null;
}, Ln = function(a, p, g) {
  var w = [], L = 0, B = a.length;
  if (g !== void 0)
    for (; L < B; L++)
      a[L] && a[L][p] && w.push(a[L][p][g]);
  else
    for (; L < B; L++)
      a[L] && w.push(a[L][p]);
  return w;
}, eo = function(a, p, g, w) {
  var L = [], B = 0, f = p.length;
  if (w !== void 0)
    for (; B < f; B++)
      a[p[B]] && a[p[B]][g] && L.push(a[p[B]][g][w]);
  else
    for (; B < f; B++)
      a[p[B]] && L.push(a[p[B]][g]);
  return L;
}, Ua = function(a, p) {
  var g = [], w;
  p === void 0 ? (p = 0, w = a) : (w = p, p = a);
  for (var L = p; L < w; L++)
    g.push(L);
  return g;
}, zf = function(a) {
  for (var p = [], g = 0, w = a.length; g < w; g++)
    a[g] && p.push(a[g]);
  return p;
}, Pa = function(a) {
  if (!a || typeof a != "string")
    return a;
  if (a.length > Pd)
    throw new Error("Exceeded max str len");
  var p;
  a = a.replace(Js, "");
  do
    p = a, a = a.replace(/<script/i, "");
  while (a !== p);
  return p;
}, di = function(a) {
  return Array.isArray(a) && (a = a.join(",")), typeof a == "string" ? a.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;") : a;
}, Vo = function(a, p) {
  if (typeof a != "string")
    return a;
  var g = a.normalize ? a.normalize("NFD") : a;
  return g.length !== a.length ? (p === !0 ? a + " " : "") + g.replace(/[\u0300-\u036f]/g, "") : g;
}, Rd = function(a) {
  if (a.length < 2)
    return !0;
  for (var p = a.slice().sort(), g = p[0], w = 1, L = p.length; w < L; w++) {
    if (p[w] === g)
      return !1;
    g = p[w];
  }
  return !0;
}, ei = function(a) {
  if (Array.from && Set)
    return Array.from(new Set(a));
  if (Rd(a))
    return a.slice();
  var p = [], g, w, L = a.length, B, f = 0;
  t:
    for (w = 0; w < L; w++) {
      for (g = a[w], B = 0; B < f; B++)
        if (p[B] === g)
          continue t;
      p.push(g), f++;
    }
  return p;
}, $s = function(a, p) {
  if (Array.isArray(p))
    for (var g = 0; g < p.length; g++)
      $s(a, p[g]);
  else
    a.push(p);
  return a;
};
function vi(a, p) {
  p && p.split(" ").forEach(function(g) {
    g && a.classList.add(g);
  });
}
de.util = {
  /**
   * Return a string with diacritic characters decomposed
   * @param {*} mixed Function or string to normalize
   * @param {*} both Return original string and the normalized string
   * @returns String or undefined
   */
  diacritics: function(a, p) {
    var g = typeof a;
    if (g !== "function")
      return Vo(a, p);
    Vo = a;
  },
  /**
   * Debounce a function
   *
   * @param {function} fn Function to be called
   * @param {integer} freq Call frequency in mS
   * @return {function} Wrapped function
   */
  debounce: function(a, p) {
    var g;
    return function() {
      var w = this, L = arguments;
      clearTimeout(g), g = setTimeout(function() {
        a.apply(w, L);
      }, p || 250);
    };
  },
  /**
   * Throttle the calls to a function. Arguments and context are maintained
   * for the throttled function.
   *
   * @param {function} fn Function to be called
   * @param {integer} freq Call frequency in mS
   * @return {function} Wrapped function
   */
  throttle: function(a, p) {
    var g = p !== void 0 ? p : 200, w, L;
    return function() {
      var B = this, f = +/* @__PURE__ */ new Date(), d = arguments;
      w && f < w + g ? (clearTimeout(L), L = setTimeout(function() {
        w = void 0, a.apply(B, d);
      }, g)) : (w = f, a.apply(B, d));
    };
  },
  /**
   * Escape a string such that it can be used in a regular expression
   *
   *  @param {string} val string to escape
   *  @returns {string} escaped string
   */
  escapeRegex: function(a) {
    return a.replace(Od, "\\$1");
  },
  /**
   * Create a function that will write to a nested object or array
   * @param {*} source JSON notation string
   * @returns Write function
   */
  set: function(a) {
    if (Xt.isPlainObject(a))
      return de.util.set(a._);
    if (a === null)
      return function() {
      };
    if (typeof a == "function")
      return function(g, w, L) {
        a(g, "set", w, L);
      };
    if (typeof a == "string" && (a.indexOf(".") !== -1 || a.indexOf("[") !== -1 || a.indexOf("(") !== -1)) {
      var p = function(g, w, L) {
        for (var B = yf(L), f, d = B[B.length - 1], t, i, r, n, o = 0, h = B.length - 1; o < h; o++) {
          if (B[o] === "__proto__" || B[o] === "constructor")
            throw new Error("Cannot set prototype values");
          if (t = B[o].match(Xi), i = B[o].match(si), t) {
            if (B[o] = B[o].replace(Xi, ""), g[B[o]] = [], f = B.slice(), f.splice(0, o + 1), n = f.join("."), Array.isArray(w))
              for (var u = 0, l = w.length; u < l; u++)
                r = {}, p(r, w[u], n), g[B[o]].push(r);
            else
              g[B[o]] = w;
            return;
          } else
            i && (B[o] = B[o].replace(si, ""), g = g[B[o]](w));
          (g[B[o]] === null || g[B[o]] === void 0) && (g[B[o]] = {}), g = g[B[o]];
        }
        d.match(si) ? g = g[d.replace(si, "")](w) : g[d.replace(Xi, "")] = w;
      };
      return function(g, w) {
        return p(g, w, a);
      };
    } else
      return function(g, w) {
        g[a] = w;
      };
  },
  /**
   * Create a function that will read nested objects from arrays, based on JSON notation
   * @param {*} source JSON notation string
   * @returns Value read
   */
  get: function(a) {
    if (Xt.isPlainObject(a)) {
      var p = {};
      return Xt.each(a, function(w, L) {
        L && (p[w] = de.util.get(L));
      }), function(w, L, B, f) {
        var d = p[L] || p._;
        return d !== void 0 ? d(w, L, B, f) : w;
      };
    } else {
      if (a === null)
        return function(w) {
          return w;
        };
      if (typeof a == "function")
        return function(w, L, B, f) {
          return a(w, L, B, f);
        };
      if (typeof a == "string" && (a.indexOf(".") !== -1 || a.indexOf("[") !== -1 || a.indexOf("(") !== -1)) {
        var g = function(w, L, B) {
          var f, d, t, i;
          if (B !== "")
            for (var r = yf(B), n = 0, o = r.length; n < o; n++) {
              if (f = r[n].match(Xi), d = r[n].match(si), f) {
                if (r[n] = r[n].replace(Xi, ""), r[n] !== "" && (w = w[r[n]]), t = [], r.splice(0, n + 1), i = r.join("."), Array.isArray(w))
                  for (var h = 0, u = w.length; h < u; h++)
                    t.push(g(w[h], L, i));
                var l = f[0].substring(1, f[0].length - 1);
                w = l === "" ? t : t.join(l);
                break;
              } else if (d) {
                r[n] = r[n].replace(si, ""), w = w[r[n]]();
                continue;
              }
              if (w === null || w[r[n]] === null)
                return null;
              if (w === void 0 || w[r[n]] === void 0)
                return;
              w = w[r[n]];
            }
          return w;
        };
        return function(w, L) {
          return g(w, L, a);
        };
      } else
        return function(w) {
          return w[a];
        };
    }
  },
  stripHtml: function(a) {
    var p = typeof a;
    if (p === "function") {
      Pa = a;
      return;
    } else if (p === "string")
      return Pa(a);
    return a;
  },
  escapeHtml: function(a) {
    var p = typeof a;
    if (p === "function") {
      di = a;
      return;
    } else if (p === "string" || Array.isArray(a))
      return di(a);
    return a;
  },
  unique: ei
};
function qo(a) {
  var p = "a aa ai ao as b fn i m o s ", g, w, L = {};
  Xt.each(a, function(B) {
    g = B.match(/^([^A-Z]+?)([A-Z])/), g && p.indexOf(g[1] + " ") !== -1 && (w = B.replace(g[0], g[2].toLowerCase()), L[w] = B, g[1] === "o" && qo(a[B]));
  }), a._hungarianMap = L;
}
function za(a, p, g) {
  a._hungarianMap || qo(a);
  var w;
  Xt.each(p, function(L) {
    w = a._hungarianMap[L], w !== void 0 && (g || p[w] === void 0) && (w.charAt(0) === "o" ? (p[w] || (p[w] = {}), Xt.extend(!0, p[w], p[L]), za(a[w], p[w], g)) : p[w] = p[L]);
  });
}
var Kn = function(a, p, g) {
  a[p] !== void 0 && (a[g] = a[p]);
};
function gf(a) {
  Kn(a, "ordering", "bSort"), Kn(a, "orderMulti", "bSortMulti"), Kn(a, "orderClasses", "bSortClasses"), Kn(a, "orderCellsTop", "bSortCellsTop"), Kn(a, "order", "aaSorting"), Kn(a, "orderFixed", "aaSortingFixed"), Kn(a, "paging", "bPaginate"), Kn(a, "pagingType", "sPaginationType"), Kn(a, "pageLength", "iDisplayLength"), Kn(a, "searching", "bFilter"), typeof a.sScrollX == "boolean" && (a.sScrollX = a.sScrollX ? "100%" : ""), typeof a.scrollX == "boolean" && (a.scrollX = a.scrollX ? "100%" : "");
  var p = a.aoSearchCols;
  if (p)
    for (var g = 0, w = p.length; g < w; g++)
      p[g] && za(de.models.oSearch, p[g]);
  a.serverSide && !a.searchDelay && (a.searchDelay = 400);
}
function Wf(a) {
  Kn(a, "orderable", "bSortable"), Kn(a, "orderData", "aDataSort"), Kn(a, "orderSequence", "asSorting"), Kn(a, "orderDataType", "sortDataType");
  var p = a.aDataSort;
  typeof p == "number" && !Array.isArray(p) && (a.aDataSort = [p]);
}
function Ld(a) {
  if (!de.__browser) {
    var p = {};
    de.__browser = p;
    var g = Xt("<div/>").css({
      position: "fixed",
      top: 0,
      left: -1 * window.pageXOffset,
      // allow for scrolling
      height: 1,
      width: 1,
      overflow: "hidden"
    }).append(
      Xt("<div/>").css({
        position: "absolute",
        top: 1,
        left: 1,
        width: 100,
        overflow: "scroll"
      }).append(
        Xt("<div/>").css({
          width: "100%",
          height: 10
        })
      )
    ).appendTo("body"), w = g.children(), L = w.children();
    p.barWidth = w[0].offsetWidth - w[0].clientWidth, p.bScrollbarLeft = Math.round(L.offset().left) !== 1, g.remove();
  }
  Xt.extend(a.oBrowser, de.__browser), a.oScroll.iBarWidth = de.__browser.barWidth;
}
function Hf(a) {
  var p = de.defaults.column, g = a.aoColumns.length, w = Xt.extend({}, de.models.oColumn, p, {
    aDataSort: p.aDataSort ? p.aDataSort : [g],
    mData: p.mData ? p.mData : g,
    idx: g,
    searchFixed: {},
    colEl: Xt("<col>").attr("data-dt-column", g)
  });
  a.aoColumns.push(w);
  var L = a.aoPreSearchCols;
  L[g] = Xt.extend({}, de.models.oSearch, L[g]);
}
function zs(a, p, g) {
  var w = a.aoColumns[p];
  if (g != null) {
    Wf(g), za(de.defaults.column, g, !0), g.mDataProp !== void 0 && !g.mData && (g.mData = g.mDataProp), g.sType && (w._sManualType = g.sType), g.className && !g.sClass && (g.sClass = g.className);
    var L = w.sClass;
    Xt.extend(w, g), Ha(w, g, "sWidth", "sWidthOrig"), L !== w.sClass && (w.sClass = L + " " + w.sClass), g.iDataSort !== void 0 && (w.aDataSort = [g.iDataSort]), Ha(w, g, "aDataSort");
  }
  var B = w.mData, f = wi(B);
  if (w.mRender && Array.isArray(w.mRender)) {
    var d = w.mRender.slice(), t = d.shift();
    w.mRender = de.render[t].apply(window, d);
  }
  w._render = w.mRender ? wi(w.mRender) : null;
  var i = function(r) {
    return typeof r == "string" && r.indexOf("@") !== -1;
  };
  w._bAttrSrc = Xt.isPlainObject(B) && (i(B.sort) || i(B.type) || i(B.filter)), w._setter = null, w.fnGetData = function(r, n, o) {
    var h = f(r, n, void 0, o);
    return w._render && n ? w._render(h, n, r, o) : h;
  }, w.fnSetData = function(r, n, o) {
    return $a(B)(r, n, o);
  }, typeof B != "number" && !w._isArrayHost && (a._rowReadObject = !0), a.oFeatures.bSort || (w.bSortable = !1);
}
function _o(a) {
  qd(a), Nd(a);
  var p = a.oScroll;
  (p.sY !== "" || p.sX !== "") && $f(a), zr(a, null, "column-sizing", [a]);
}
function Nd(a) {
  for (var p = a.aoColumns, g = 0; g < p.length; g++) {
    var w = jf(a, [g], !1, !1);
    p[g].colEl.css("width", w), a.oScroll.sX && p[g].colEl.css("min-width", w);
  }
}
function qs(a, p) {
  var g = _s(a, "bVisible");
  return typeof g[p] == "number" ? g[p] : null;
}
function ro(a, p) {
  var g = _s(a, "bVisible"), w = g.indexOf(p);
  return w !== -1 ? w : null;
}
function ts(a) {
  var p = a.aoHeader, g = a.aoColumns, w = 0;
  if (p.length)
    for (var L = 0, B = p[0].length; L < B; L++)
      g[L].bVisible && Xt(p[0][L].cell).css("display") !== "none" && w++;
  return w;
}
function _s(a, p) {
  var g = [];
  return a.aoColumns.map(function(w, L) {
    w[p] && g.push(L);
  }), g;
}
function Os(a, p) {
  return p === !0 ? a._name : p;
}
function es(a) {
  var p = a.aoColumns, g = a.aoData, w = de.ext.type.detect, L, B, f, d, t, i, r, n, o;
  for (L = 0, B = p.length; L < B; L++) {
    if (r = p[L], o = [], !r.sType && r._sManualType)
      r.sType = r._sManualType;
    else if (!r.sType) {
      if (!a.typeDetect)
        return;
      for (f = 0, d = w.length; f < d; f++) {
        var h = w[f], u = h.oneOf, l = h.allOf || h, c = h.init, s = !1;
        if (n = null, c && (n = Os(h, c(a, r, L)), n)) {
          r.sType = n;
          break;
        }
        for (t = 0, i = g.length; t < i && !(g[t] && (o[t] === void 0 && (o[t] = ha(a, t, L, "type")), u && !s && (s = Os(h, u(o[t], a))), n = Os(h, l(o[t], a)), !n && f !== w.length - 3 || n === "html" && !ia(o[t]))); t++)
          ;
        if (u && s && n || !u && n) {
          r.sType = n;
          break;
        }
      }
      r.sType || (r.sType = "string");
    }
    var v = En.type.className[r.sType];
    v && (mf(a.aoHeader, L, v), mf(a.aoFooter, L, v));
    var y = En.type.render[r.sType];
    y && !r._render && (r._render = de.util.get(y), Md(a, L));
  }
}
function Md(a, p) {
  for (var g = a.aoData, w = 0; w < g.length; w++)
    if (g[w].nTr) {
      var L = ha(a, w, p, "display");
      g[w].displayData[p] = L, Xo(g[w].anCells[p], L);
    }
}
function mf(a, p, g) {
  a.forEach(function(w) {
    w[p] && w[p].unique && vi(w[p].cell, g);
  });
}
function kd(a, p, g, w, L) {
  var B, f, d, t, i, r, n, o = a.aoColumns;
  if (g)
    for (B = 0, f = g.length; B < f; B++)
      g[B] && g[B].name && (o[B].sName = g[B].name);
  if (p)
    for (B = p.length - 1; B >= 0; B--) {
      n = p[B];
      var h = n.target !== void 0 ? n.target : n.targets !== void 0 ? n.targets : n.aTargets;
      for (Array.isArray(h) || (h = [h]), d = 0, t = h.length; d < t; d++) {
        var u = h[d];
        if (typeof u == "number" && u >= 0) {
          for (; o.length <= u; )
            Hf(a);
          L(u, n);
        } else if (typeof u == "number" && u < 0)
          L(o.length + u, n);
        else if (typeof u == "string")
          for (i = 0, r = o.length; i < r; i++)
            u === "_all" ? L(i, n) : u.indexOf(":name") !== -1 ? o[i].sName === u.replace(":name", "") && L(i, n) : w.forEach(function(l) {
              if (l[i]) {
                var c = Xt(l[i].cell);
                u.match(/^[a-z][\w-]*$/i) && (u = "." + u), c.is(u) && L(i, n);
              }
            });
      }
    }
  if (g)
    for (B = 0, f = g.length; B < f; B++)
      L(B, g[B]);
}
function jf(a, p, g, w) {
  Array.isArray(p) || (p = t0(p));
  for (var L = 0, B, f = a.aoColumns, d = 0, t = p.length; d < t; d++) {
    var i = f[p[d]], r = g ? i.sWidthOrig : i.sWidth;
    if (!(!w && i.bVisible === !1)) {
      if (r == null)
        return null;
      if (typeof r == "number")
        B = "px", L += r;
      else {
        var n = r.match(/([\d\.]+)([^\d]*)/);
        n && (L += n[1] * 1, B = n.length === 3 ? n[2] : "px");
      }
    }
  }
  return L + B;
}
function t0(a) {
  var p = Xt(a).closest("[data-dt-column]").attr("data-dt-column");
  return p ? p.split(",").map(function(g) {
    return g * 1;
  }) : [];
}
function _a(a, p, g, w) {
  var L = a.aoData.length, B = Xt.extend(!0, {}, de.models.oRow, {
    src: g ? "dom" : "data",
    idx: L
  });
  B._aData = p, a.aoData.push(B);
  for (var f = a.aoColumns, d = 0, t = f.length; d < t; d++)
    f[d].sType = null;
  a.aiDisplayMaster.push(L);
  var i = a.rowIdFn(p);
  return i !== void 0 && (a.aIds[i] = B), (g || !a.oFeatures.bDeferRender) && Vf(a, L, g, w), L;
}
function e0(a, p) {
  var g;
  return p instanceof Xt || (p = Xt(p)), p.map(function(w, L) {
    return g = Gf(a, L), _a(a, g.data, L, g.cells);
  });
}
function ha(a, p, g, w) {
  w === "search" ? w = "filter" : w === "order" && (w = "sort");
  var L = a.aoData[p];
  if (L) {
    var B = a.iDraw, f = a.aoColumns[g], d = L._aData, t = f.sDefaultContent, i = f.fnGetData(d, w, {
      settings: a,
      row: p,
      col: g
    });
    if (w !== "display" && i && typeof i == "object" && i.nodeName && (i = i.innerHTML), i === void 0)
      return a.iDrawError != B && t === null && (ca(a, 0, "Requested unknown parameter " + (typeof f.mData == "function" ? "{function}" : "'" + f.mData + "'") + " for row " + p + ", column " + g, 4), a.iDrawError = B), t;
    if ((i === d || i === null) && t !== null && w !== void 0)
      i = t;
    else if (typeof i == "function")
      return i.call(d);
    if (i === null && w === "display")
      return "";
    if (w === "filter") {
      var r = de.ext.type.search;
      r[f.sType] && (i = r[f.sType](i));
    }
    return i;
  }
}
function Ud(a, p, g, w) {
  var L = a.aoColumns[g], B = a.aoData[p]._aData;
  L.fnSetData(B, w, {
    settings: a,
    row: p,
    col: g
  });
}
function Xo(a, p) {
  p && typeof p == "object" && p.nodeName ? Xt(a).empty().append(p) : a.innerHTML = p;
}
var Xi = /\[.*?\]$/, si = /\(\)$/;
function yf(a) {
  var p = a.match(/(\\.|[^.])+/g) || [""];
  return p.map(function(g) {
    return g.replace(/\\\./g, ".");
  });
}
var wi = de.util.get, $a = de.util.set;
function xf(a) {
  return Ln(a.aoData, "_aData");
}
function r0(a) {
  a.aoData.length = 0, a.aiDisplayMaster.length = 0, a.aiDisplay.length = 0, a.aIds = {};
}
function rs(a, p, g, w) {
  var L = a.aoData[p], B, f;
  if (L._aSortData = null, L._aFilterData = null, L.displayData = null, g === "dom" || (!g || g === "auto") && L.src === "dom")
    L._aData = Gf(
      a,
      L,
      w,
      w === void 0 ? void 0 : L._aData
    ).data;
  else {
    var d = L.anCells, t = n0(a, p);
    if (d)
      if (w !== void 0)
        Xo(d[w], t[w]);
      else
        for (B = 0, f = d.length; B < f; B++)
          Xo(d[B], t[B]);
  }
  var i = a.aoColumns;
  if (w !== void 0)
    i[w].sType = null, i[w].maxLenString = null;
  else {
    for (B = 0, f = i.length; B < f; B++)
      i[B].sType = null, i[B].maxLenString = null;
    Xf(a, L);
  }
}
function Gf(a, p, g, w) {
  var L = [], B = p.firstChild, f, d, t = 0, i, r = a.aoColumns, n = a._rowReadObject;
  w = w !== void 0 ? w : n ? {} : [];
  var o = function(v, y) {
    if (typeof v == "string") {
      var x = v.indexOf("@");
      if (x !== -1) {
        var e = v.substring(x + 1), b = $a(v);
        b(w, y.getAttribute(e));
      }
    }
  }, h = function(v) {
    if (g === void 0 || g === t)
      if (d = r[t], i = v.innerHTML.trim(), d && d._bAttrSrc) {
        var y = $a(d.mData._);
        y(w, i), o(d.mData.sort, v), o(d.mData.type, v), o(d.mData.filter, v);
      } else
        n ? (d._setter || (d._setter = $a(d.mData)), d._setter(w, i)) : w[t] = i;
    t++;
  };
  if (B)
    for (; B; )
      f = B.nodeName.toUpperCase(), (f == "TD" || f == "TH") && (h(B), L.push(B)), B = B.nextSibling;
  else {
    L = p.anCells;
    for (var u = 0, l = L.length; u < l; u++)
      h(L[u]);
  }
  var c = p.firstChild ? p : p.nTr;
  if (c) {
    var s = c.getAttribute("id");
    s && $a(a.rowId)(w, s);
  }
  return {
    data: w,
    cells: L
  };
}
function n0(a, p) {
  var g = a.aoData[p], w = a.aoColumns;
  if (!g.displayData) {
    g.displayData = [];
    for (var L = 0, B = w.length; L < B; L++)
      g.displayData.push(
        ha(a, p, L, "display")
      );
  }
  return g.displayData;
}
function Vf(a, p, g, w) {
  var L = a.aoData[p], B = L._aData, f = [], d, t, i, r, n, o, h = a.oClasses.tbody.row;
  if (L.nTr === null) {
    for (d = g || document.createElement("tr"), L.nTr = d, L.anCells = f, vi(d, h), d._DT_RowIndex = p, Xf(a, L), r = 0, n = a.aoColumns.length; r < n; r++) {
      i = a.aoColumns[r], o = !(g && w[r]), t = o ? document.createElement(i.sCellType) : w[r], t || ca(a, 0, "Incorrect column count", 18), t._DT_CellIndex = {
        row: p,
        column: r
      }, f.push(t);
      var u = n0(a, p);
      (o || (i.mRender || i.mData !== r) && (!Xt.isPlainObject(i.mData) || i.mData._ !== r + ".display")) && Xo(t, u[r]), vi(t, i.sClass), i.bVisible && o ? d.appendChild(t) : !i.bVisible && !o && t.parentNode.removeChild(t), i.fnCreatedCell && i.fnCreatedCell.call(
        a.oInstance,
        t,
        ha(a, p, r),
        B,
        p,
        r
      );
    }
    zr(a, "aoRowCreatedCallback", "row-created", [d, B, p, f]);
  } else
    vi(L.nTr, h);
}
function Xf(a, p) {
  var g = p.nTr, w = p._aData;
  if (g) {
    var L = a.rowIdFn(w);
    if (L && (g.id = L), w.DT_RowClass) {
      var B = w.DT_RowClass.split(" ");
      p.__rowc = p.__rowc ? ei(p.__rowc.concat(B)) : B, Xt(g).removeClass(p.__rowc.join(" ")).addClass(w.DT_RowClass);
    }
    w.DT_RowAttr && Xt(g).attr(w.DT_RowAttr), w.DT_RowData && Xt(g).data(w.DT_RowData);
  }
}
function bf(a, p) {
  var g = a.oClasses, w = a.aoColumns, L, B, f, d = p === "header" ? a.nTHead : a.nTFoot, t = p === "header" ? "sTitle" : p;
  if (d) {
    if ((p === "header" || Ln(a.aoColumns, t).join("")) && (f = Xt("tr", d), f.length || (f = Xt("<tr/>").appendTo(d)), f.length === 1)) {
      var i = 0;
      for (Xt("td, th", f).each(function() {
        i += this.colSpan;
      }), L = i, B = w.length; L < B; L++)
        Xt("<th/>").html(w[L][t] || "").appendTo(f);
    }
    var r = Yf(a, d, !0);
    p === "header" ? (a.aoHeader = r, Xt("tr", d).addClass(g.thead.row)) : (a.aoFooter = r, Xt("tr", d).addClass(g.tfoot.row)), Xt(d).children("tr").children("th, td").each(function() {
      Ko(a, p)(
        a,
        Xt(this),
        g
      );
    });
  }
}
function Zf(a, p, g) {
  var w, L, B, f = [], d = [], t = a.aoColumns, i = t.length, r, n;
  if (p) {
    for (g || (g = Ua(i).filter(function(u) {
      return t[u].bVisible;
    })), w = 0; w < p.length; w++)
      f[w] = p[w].slice().filter(function(u, l) {
        return g.includes(l);
      }), d.push([]);
    for (w = 0; w < f.length; w++)
      for (L = 0; L < f[w].length; L++)
        if (r = 1, n = 1, d[w][L] === void 0) {
          for (B = f[w][L].cell; f[w + r] !== void 0 && f[w][L].cell == f[w + r][L].cell; )
            d[w + r][L] = null, r++;
          for (; f[w][L + n] !== void 0 && f[w][L].cell == f[w][L + n].cell; ) {
            for (var o = 0; o < r; o++)
              d[w + o][L + n] = null;
            n++;
          }
          var h = Xt("span.dt-column-title", B);
          d[w][L] = {
            cell: B,
            colspan: n,
            rowspan: r,
            title: h.length ? h.html() : Xt(B).html()
          };
        }
    return d;
  }
}
function Zo(a, p) {
  for (var g = Zf(a, p), w, L, B = 0; B < p.length; B++) {
    if (w = p[B].row, w)
      for (; L = w.firstChild; )
        w.removeChild(L);
    for (var f = 0; f < g[B].length; f++) {
      var d = g[B][f];
      d && Xt(d.cell).appendTo(w).attr("rowspan", d.rowspan).attr("colspan", d.colspan);
    }
  }
}
function Si(a, p) {
  Gd(a);
  var g = zr(a, "aoPreDrawCallback", "preDraw", [a]);
  if (g.indexOf(!1) !== -1) {
    oa(a, !1);
    return;
  }
  var w = [], L = 0, B = sa(a) == "ssp", f = a.aiDisplay, d = a._iDisplayStart, t = a.fnDisplayEnd(), i = a.aoColumns, r = Xt(a.nTBody);
  if (a.bDrawing = !0, a.deferLoading)
    a.deferLoading = !1, a.iDraw++, oa(a, !1);
  else if (!B)
    a.iDraw++;
  else if (!a.bDestroying && !p) {
    a.iDraw === 0 && r.empty().append(wf(a)), Vd(a);
    return;
  }
  if (f.length !== 0)
    for (var n = B ? 0 : d, o = B ? a.aoData.length : t, h = n; h < o; h++) {
      var u = f[h], l = a.aoData[u];
      l.nTr === null && Vf(a, u);
      for (var c = l.nTr, s = 0; s < i.length; s++) {
        var v = i[s], y = l.anCells[s];
        vi(y, En.type.className[v.sType]), vi(y, a.oClasses.tbody.cell);
      }
      zr(
        a,
        "aoRowCallback",
        null,
        [c, l._aData, L, h, u]
      ), w.push(c), L++;
    }
  else
    w[0] = wf(a);
  zr(a, "aoHeaderCallback", "header", [
    Xt(a.nTHead).children("tr")[0],
    xf(a),
    d,
    t,
    f
  ]), zr(a, "aoFooterCallback", "footer", [
    Xt(a.nTFoot).children("tr")[0],
    xf(a),
    d,
    t,
    f
  ]), r[0].replaceChildren ? r[0].replaceChildren.apply(r[0], w) : (r.children().detach(), r.append(Xt(w))), Xt(a.nTableWrapper).toggleClass("dt-empty-footer", Xt("tr", a.nTFoot).length === 0), zr(a, "aoDrawCallback", "draw", [a], !0), a.bSorted = !1, a.bFiltered = !1, a.bDrawing = !1;
}
function Ai(a, p, g) {
  var w = a.oFeatures, L = w.bSort, B = w.bFilter;
  (g === void 0 || g === !0) && (es(a), L && o0(a), B ? $i(a, a.oPreviousSearch) : a.aiDisplay = a.aiDisplayMaster.slice()), p !== !0 && (a._iDisplayStart = 0), a._drawHold = p, Si(a), a._drawHold = !1;
}
function wf(a) {
  var p = a.oLanguage, g = p.sZeroRecords, w = sa(a);
  return a.iDraw < 1 && w === "ssp" || a.iDraw <= 1 && w === "ajax" ? g = p.sLoadingRecords : p.sEmptyTable && a.fnRecordsTotal() === 0 && (g = p.sEmptyTable), Xt("<tr/>").append(Xt("<td />", {
    colSpan: ts(a),
    class: a.oClasses.empty.row
  }).html(g))[0];
}
function Ws(a, p, g) {
  if (Array.isArray(g)) {
    for (var w = 0; w < g.length; w++)
      Ws(a, p, g[w]);
    return;
  }
  var L = a[p];
  Xt.isPlainObject(g) ? g.features ? (g.rowId && (a.id = g.rowId), g.rowClass && (a.className = g.rowClass), L.id = g.id, L.className = g.className, Ws(a, p, g.features)) : Object.keys(g).map(function(B) {
    L.contents.push({
      feature: B,
      opts: g[B]
    });
  }) : L.contents.push(g);
}
function zd(a, p, g) {
  for (var w, L = 0; L < a.length; L++)
    if (w = a[L], w.rowNum === p && (g === "full" && w.full || (g === "start" || g === "end") && (w.start || w.end)))
      return w[g] || (w[g] = {
        contents: []
      }), w;
  return w = {
    rowNum: p
  }, w[g] = {
    contents: []
  }, a.push(w), w;
}
function Af(a, p, g) {
  var w = [];
  Xt.each(p, function(B, f) {
    if (f !== null) {
      var d = B.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/), t = d[2] ? d[2] * 1 : 0, i = d[3] ? d[3].toLowerCase() : "full";
      if (d[1] === g) {
        var r = zd(w, t, i);
        Ws(r, i, f);
      }
    }
  }), w.sort(function(B, f) {
    var d = B.rowNum, t = f.rowNum;
    if (d === t) {
      var i = B.full && !f.full ? -1 : 1;
      return g === "bottom" ? i * -1 : i;
    }
    return t - d;
  }), g === "bottom" && w.reverse();
  for (var L = 0; L < w.length; L++)
    delete w[L].rowNum, Wd(a, w[L]);
  return w;
}
function Wd(a, p) {
  var g = function(L, B) {
    return En.features[L] || ca(a, 0, "Unknown feature: " + L), En.features[L].apply(this, [a, B]);
  }, w = function(L) {
    if (p[L])
      for (var B = p[L].contents, f = 0, d = B.length; f < d; f++)
        if (B[f]) {
          if (typeof B[f] == "string")
            B[f] = g(B[f], null);
          else if (Xt.isPlainObject(B[f]))
            B[f] = g(B[f].feature, B[f].opts);
          else if (typeof B[f].node == "function")
            B[f] = B[f].node(a);
          else if (typeof B[f] == "function") {
            var t = B[f](a);
            B[f] = typeof t.node == "function" ? t.node() : t;
          }
        } else
          continue;
  };
  w("start"), w("end"), w("full");
}
function Hd(a) {
  var p = a.oClasses, g = Xt(a.nTable), w = Xt("<div/>").attr({
    id: a.sTableId + "_wrapper",
    class: p.container
  }).insertBefore(g);
  if (a.nTableWrapper = w[0], a.sDom)
    jd(a, a.sDom, w);
  else {
    var L = Af(a, a.layout, "top"), B = Af(a, a.layout, "bottom"), f = Ko(a, "layout");
    L.forEach(function(d) {
      f(a, w, d);
    }), f(a, w, {
      full: {
        table: !0,
        contents: [Qf(a)]
      }
    }), B.forEach(function(d) {
      f(a, w, d);
    });
  }
  $d(a);
}
function jd(a, p, g) {
  for (var w = p.match(/(".*?")|('.*?')|./g), L, B, f, d, t, i = 0; i < w.length; i++) {
    if (L = null, B = w[i], B == "<") {
      if (f = Xt("<div/>"), d = w[i + 1], d[0] == "'" || d[0] == '"') {
        t = d.replace(/['"]/g, "");
        var r = "", n;
        if (t.indexOf(".") != -1) {
          var o = t.split(".");
          r = o[0], n = o[1];
        } else
          t[0] == "#" ? r = t : n = t;
        f.attr("id", r.substring(1)).addClass(n), i++;
      }
      g.append(f), g = f;
    } else
      B == ">" ? g = g.parent() : B == "t" ? L = Qf(a) : de.ext.feature.forEach(function(h) {
        B == h.cFeature && (L = h.fnInit(a));
      });
    L && g.append(L);
  }
}
function Yf(a, p, g) {
  var w = a.aoColumns, L = Xt(p).children("tr"), B, f, d, t, i, r, n, o, h, u, l = p && p.nodeName.toLowerCase() === "thead", c = [], s, v = function(A, P, D) {
    for (var E = A[P]; E[D]; )
      D++;
    return D;
  };
  for (d = 0, r = L.length; d < r; d++)
    c.push([]);
  for (d = 0, r = L.length; d < r; d++)
    for (B = L[d], o = 0, f = B.firstChild; f; ) {
      if (f.nodeName.toUpperCase() == "TD" || f.nodeName.toUpperCase() == "TH") {
        var y = [];
        if (h = f.getAttribute("colspan") * 1, u = f.getAttribute("rowspan") * 1, h = !h || h === 0 || h === 1 ? 1 : h, u = !u || u === 0 || u === 1 ? 1 : u, n = v(c, d, o), s = h === 1, g) {
          if (s) {
            zs(a, n, Xt(f).data());
            var x = w[n], e = f.getAttribute("width") || null, b = f.style.width.match(/width:\s*(\d+[pxem%]+)/);
            b && (e = b[1]), x.sWidthOrig = x.sWidth || e, l ? (x.sTitle !== null && !x.autoTitle && (f.innerHTML = x.sTitle), !x.sTitle && s && (x.sTitle = Pa(f.innerHTML), x.autoTitle = !0)) : x.footer && (f.innerHTML = x.footer), x.ariaTitle || (x.ariaTitle = Xt(f).attr("aria-label") || x.sTitle), x.className && Xt(f).addClass(x.className);
          }
          Xt("span.dt-column-title", f).length === 0 && Xt("<span>").addClass("dt-column-title").append(f.childNodes).appendTo(f), l && Xt("span.dt-column-order", f).length === 0 && Xt("<span>").addClass("dt-column-order").appendTo(f);
        }
        for (i = 0; i < h; i++) {
          for (t = 0; t < u; t++)
            c[d + t][n + i] = {
              cell: f,
              unique: s
            }, c[d + t].row = B;
          y.push(n + i);
        }
        f.setAttribute("data-dt-column", ei(y).join(","));
      }
      f = f.nextSibling;
    }
  return c;
}
function Gd(a) {
  var p = sa(a) == "ssp", g = a.iInitDisplayStart;
  g !== void 0 && g !== -1 && (a._iDisplayStart = p ? g : g >= a.fnRecordsDisplay() ? 0 : g, a.iInitDisplayStart = -1);
}
function a0(a, p, g) {
  var w, L = a.ajax, B = a.oInstance, f = function(r) {
    var n = a.jqXHR ? a.jqXHR.status : null;
    (r === null || typeof n == "number" && n == 204) && (r = {}, ns(a, r, []));
    var o = r.error || r.sError;
    if (o && ca(a, 0, o), r.d && typeof r.d == "string")
      try {
        r = JSON.parse(r.d);
      } catch (h) {
      }
    a.json = r, zr(a, null, "xhr", [a, r, a.jqXHR], !0), g(r);
  };
  if (Xt.isPlainObject(L) && L.data) {
    w = L.data;
    var d = typeof w == "function" ? w(p, a) : (
      // fn can manipulate data or return
      w
    );
    p = typeof w == "function" && d ? d : Xt.extend(!0, p, d), delete L.data;
  }
  var t = {
    url: typeof L == "string" ? L : "",
    data: p,
    success: f,
    dataType: "json",
    cache: !1,
    type: a.sServerMethod,
    error: function(r, n) {
      var o = zr(a, null, "xhr", [a, null, a.jqXHR], !0);
      o.indexOf(!0) === -1 && (n == "parsererror" ? ca(a, 0, "Invalid JSON response", 1) : r.readyState === 4 && ca(a, 0, "Ajax error", 7)), oa(a, !1);
    }
  };
  if (Xt.isPlainObject(L) && Xt.extend(t, L), a.oAjaxData = p, zr(a, null, "preXhr", [a, p, t], !0), typeof L == "function")
    a.jqXHR = L.call(B, p, f, a);
  else if (L.url === "") {
    var i = {};
    de.util.set(L.dataSrc)(i, []), f(i);
  } else
    a.jqXHR = Xt.ajax(t);
  w && (L.data = w);
}
function Vd(a) {
  a.iDraw++, oa(a, !0), a0(
    a,
    Xd(a),
    function(p) {
      Zd(a, p);
    }
  );
}
function Xd(a) {
  var p = a.aoColumns, g = a.oFeatures, w = a.oPreviousSearch, L = a.aoPreSearchCols, B = function(f, d) {
    return typeof p[f][d] == "function" ? "function" : p[f][d];
  };
  return {
    draw: a.iDraw,
    columns: p.map(function(f, d) {
      return {
        data: B(d, "mData"),
        name: f.sName,
        searchable: f.bSearchable,
        orderable: f.bSortable,
        search: {
          value: L[d].search,
          regex: L[d].regex,
          fixed: Object.keys(f.searchFixed).map(function(t) {
            return {
              name: t,
              term: f.searchFixed[t].toString()
            };
          })
        }
      };
    }),
    order: as(a).map(function(f) {
      return {
        column: f.col,
        dir: f.dir,
        name: B(f.col, "sName")
      };
    }),
    start: a._iDisplayStart,
    length: g.bPaginate ? a._iDisplayLength : -1,
    search: {
      value: w.search,
      regex: w.regex,
      fixed: Object.keys(a.searchFixed).map(function(f) {
        return {
          name: f,
          term: a.searchFixed[f].toString()
        };
      })
    }
  };
}
function Zd(a, p) {
  var g = ns(a, p), w = Bs(a, "draw", p), L = Bs(a, "recordsTotal", p), B = Bs(a, "recordsFiltered", p);
  if (w !== void 0) {
    if (w * 1 < a.iDraw)
      return;
    a.iDraw = w * 1;
  }
  g || (g = []), r0(a), a._iRecordsTotal = parseInt(L, 10), a._iRecordsDisplay = parseInt(B, 10);
  for (var f = 0, d = g.length; f < d; f++)
    _a(a, g[f]);
  a.aiDisplay = a.aiDisplayMaster.slice(), es(a), Si(a, !0), Yo(a), oa(a, !1);
}
function ns(a, p, g) {
  var w = "data";
  if (Xt.isPlainObject(a.ajax) && a.ajax.dataSrc !== void 0) {
    var L = a.ajax.dataSrc;
    typeof L == "string" || typeof L == "function" ? w = L : L.data !== void 0 && (w = L.data);
  }
  if (!g)
    return w === "data" ? p.aaData || p[w] : w !== "" ? wi(w)(p) : p;
  $a(w)(p, g);
}
function Bs(a, p, g) {
  var w = Xt.isPlainObject(a.ajax) ? a.ajax.dataSrc : null;
  if (w && w[p])
    return wi(w[p])(g);
  var L = "";
  return p === "draw" ? L = "sEcho" : p === "recordsTotal" ? L = "iTotalRecords" : p === "recordsFiltered" && (L = "iTotalDisplayRecords"), g[L] !== void 0 ? g[L] : g[p];
}
function $i(a, p) {
  var g = a.aoPreSearchCols;
  if (sa(a) != "ssp") {
    Qd(a), a.aiDisplay = a.aiDisplayMaster.slice(), No(a.aiDisplay, a, p.search, p), Xt.each(a.searchFixed, function(B, f) {
      No(a.aiDisplay, a, f, {});
    });
    for (var w = 0; w < g.length; w++) {
      var L = g[w];
      No(
        a.aiDisplay,
        a,
        L.search,
        L,
        w
      ), Xt.each(a.aoColumns[w].searchFixed, function(B, f) {
        No(a.aiDisplay, a, f, {}, w);
      });
    }
    Yd(a);
  }
  a.bFiltered = !0, zr(a, null, "search", [a]);
}
function Yd(a) {
  for (var p = de.ext.search, g = a.aiDisplay, w, L, B = 0, f = p.length; B < f; B++) {
    for (var d = [], t = 0, i = g.length; t < i; t++)
      L = g[t], w = a.aoData[L], p[B](a, w._aFilterData, L, w._aData, t) && d.push(L);
    g.length = 0, os(g, d);
  }
}
function No(a, p, g, w, L) {
  if (g !== "") {
    var B = 0, f = [], d = typeof g == "function" ? g : null, t = g instanceof RegExp ? g : d ? null : Kd(g, w);
    for (B = 0; B < a.length; B++) {
      var i = p.aoData[a[B]], r = L === void 0 ? i._sFilterRow : i._aFilterData[L];
      (d && d(r, i._aData, a[B], L) || t && t.test(r)) && f.push(a[B]);
    }
    for (a.length = f.length, B = 0; B < f.length; B++)
      a[B] = f[B];
  }
}
function Kd(a, p) {
  var g = [], w = Xt.extend({}, {
    boundary: !1,
    caseInsensitive: !0,
    exact: !1,
    regex: !1,
    smart: !0
  }, p);
  if (typeof a != "string" && (a = a.toString()), a = Vo(a), w.exact)
    return new RegExp(
      "^" + Hs(a) + "$",
      w.caseInsensitive ? "i" : ""
    );
  if (a = w.regex ? a : Hs(a), w.smart) {
    var L = a.match(/!?["\u201C][^"\u201D]+["\u201D]|[^ ]+/g) || [""], B = L.map(function(t) {
      var i = !1, r;
      return t.charAt(0) === "!" && (i = !0, t = t.substring(1)), t.charAt(0) === '"' ? (r = t.match(/^"(.*)"$/), t = r ? r[1] : t) : t.charAt(0) === "â" && (r = t.match(/^\u201C(.*)\u201D$/), t = r ? r[1] : t), i && (t.length > 1 && g.push("(?!" + t + ")"), t = ""), t.replace(/"/g, "");
    }), f = g.length ? g.join("") : "", d = w.boundary ? "\\b" : "";
    a = "^(?=.*?" + d + B.join(")(?=.*?" + d) + ")(" + f + ".)*$";
  }
  return new RegExp(a, w.caseInsensitive ? "i" : "");
}
var Hs = de.util.escapeRegex, Wo = Xt("<div>")[0], Jd = Wo.textContent !== void 0;
function Qd(a) {
  for (var p = a.aoColumns, g = a.aoData, w, L, B, f, d, t, i = !1, r = 0; r < g.length; r++)
    if (g[r] && (t = g[r], !t._aFilterData)) {
      for (f = [], L = 0, B = p.length; L < B; L++)
        w = p[L], w.bSearchable ? (d = ha(a, r, L, "filter"), d === null && (d = ""), typeof d != "string" && d.toString && (d = d.toString())) : d = "", d.indexOf && d.indexOf("&") !== -1 && (Wo.innerHTML = d, d = Jd ? Wo.textContent : Wo.innerText), d.replace && (d = d.replace(/[\r\n\u2028]/g, "")), f.push(d);
      t._aFilterData = f, t._sFilterRow = f.join("  "), i = !0;
    }
  return i;
}
function Ho(a) {
  var p, g = a.oInit, w = a.deferLoading, L = sa(a);
  if (!a.bInitialised) {
    setTimeout(function() {
      Ho(a);
    }, 200);
    return;
  }
  bf(a, "header"), bf(a, "footer"), n1(a, g, function() {
    Zo(a, a.aoHeader), Zo(a, a.aoFooter);
    var B = a.iInitDisplayStart;
    if (g.aaData)
      for (p = 0; p < g.aaData.length; p++)
        _a(a, g.aaData[p]);
    else
      (w || L == "dom") && e0(a, Xt(a.nTBody).children("tr"));
    a.aiDisplay = a.aiDisplayMaster.slice(), Hd(a), t1(a), qf(a), oa(a, !0), zr(a, null, "preInit", [a], !0), Ai(a), (L != "ssp" || w) && (L == "ajax" ? a0(a, {}, function(f) {
      var d = ns(a, f);
      for (p = 0; p < d.length; p++)
        _a(a, d[p]);
      a.iInitDisplayStart = B, Ai(a), oa(a, !1), Yo(a);
    }) : (Yo(a), oa(a, !1)));
  });
}
function Yo(a) {
  if (!a._bInitComplete) {
    var p = [a, a.json];
    a._bInitComplete = !0, _o(a), zr(a, null, "plugin-init", p, !0), zr(a, "aoInitComplete", "init", p, !0);
  }
}
function Kf(a, p) {
  var g = parseInt(p, 10);
  a._iDisplayLength = g, rl(a), zr(a, null, "length", [a, g]);
}
function i0(a, p, g) {
  var w = a._iDisplayStart, L = a._iDisplayLength, B = a.fnRecordsDisplay();
  if (B === 0 || L === -1)
    w = 0;
  else if (typeof p == "number")
    w = p * L, w > B && (w = 0);
  else if (p == "first")
    w = 0;
  else if (p == "previous")
    w = L >= 0 ? w - L : 0, w < 0 && (w = 0);
  else if (p == "next")
    w + L < B && (w += L);
  else if (p == "last")
    w = Math.floor((B - 1) / L) * L;
  else {
    if (p === "ellipsis")
      return;
    ca(a, 0, "Unknown paging action: " + p, 5);
  }
  var f = a._iDisplayStart !== w;
  return a._iDisplayStart = w, zr(a, null, f ? "page" : "page-nc", [a]), f && g && Si(a), f;
}
function $d(a) {
  var p = a.nTable, g = a.oScroll.sX !== "" || a.oScroll.sY !== "";
  if (a.oFeatures.bProcessing) {
    var w = Xt("<div/>", {
      id: a.sTableId + "_processing",
      class: a.oClasses.processing.container,
      role: "status"
    }).html(a.oLanguage.sProcessing).append("<div><div></div><div></div><div></div><div></div></div>");
    g ? w.prependTo(Xt("div.dt-scroll", a.nTableWrapper)) : w.insertBefore(p), Xt(p).on("processing.dt.DT", function(L, B, f) {
      w.css("display", f ? "block" : "none");
    });
  }
}
function oa(a, p) {
  a.bDrawing && p === !1 || zr(a, null, "processing", [a, p]);
}
function Jf(a, p, g) {
  p ? (oa(a, !0), setTimeout(function() {
    g(), oa(a, !1);
  }, 0)) : g();
}
function Qf(a) {
  var p = Xt(a.nTable), g = a.oScroll;
  if (g.sX === "" && g.sY === "")
    return a.nTable;
  var w = g.sX, L = g.sY, B = a.oClasses.scrolling, f = a.captionNode, d = f ? f._captionSide : null, t = Xt(p[0].cloneNode(!1)), i = Xt(p[0].cloneNode(!1)), r = p.children("tfoot"), n = "<div/>", o = function(v) {
    return v ? Wa(v) : null;
  };
  r.length || (r = null);
  var h = Xt(n, { class: B.container }).append(
    Xt(n, { class: B.header.self }).css({
      overflow: "hidden",
      position: "relative",
      border: 0,
      width: w ? o(w) : "100%"
    }).append(
      Xt(n, { class: B.header.inner }).css({
        "box-sizing": "content-box",
        width: g.sXInner || "100%"
      }).append(
        t.removeAttr("id").css("margin-left", 0).append(d === "top" ? f : null).append(
          p.children("thead")
        )
      )
    )
  ).append(
    Xt(n, { class: B.body }).css({
      position: "relative",
      overflow: "auto",
      width: o(w)
    }).append(p)
  );
  r && h.append(
    Xt(n, { class: B.footer.self }).css({
      overflow: "hidden",
      border: 0,
      width: w ? o(w) : "100%"
    }).append(
      Xt(n, { class: B.footer.inner }).append(
        i.removeAttr("id").css("margin-left", 0).append(d === "bottom" ? f : null).append(
          p.children("tfoot")
        )
      )
    )
  );
  var u = h.children(), l = u[0], c = u[1], s = r ? u[2] : null;
  return Xt(c).on("scroll.DT", function() {
    var v = this.scrollLeft;
    l.scrollLeft = v, r && (s.scrollLeft = v);
  }), Xt("th, td", l).on("focus", function() {
    var v = l.scrollLeft;
    c.scrollLeft = v, r && (c.scrollLeft = v);
  }), Xt(c).css("max-height", L), g.bCollapse || Xt(c).css("height", L), a.nScrollHead = l, a.nScrollBody = c, a.nScrollFoot = s, a.aoDrawCallback.push($f), h[0];
}
function $f(a) {
  var p = a.oScroll, g = p.iBarWidth, w = Xt(a.nScrollHead), L = w.children("div"), B = L.children("table"), f = a.nScrollBody, d = Xt(f), t = Xt(a.nScrollFoot), i = t.children("div"), r = i.children("table"), n = Xt(a.nTHead), o = Xt(a.nTable), h = a.nTFoot && Xt("th, td", a.nTFoot).length ? Xt(a.nTFoot) : null, u = a.oBrowser, l, c, s = f.scrollHeight > f.clientHeight;
  if (a.scrollBarVis !== s && a.scrollBarVis !== void 0) {
    a.scrollBarVis = s, _o(a);
    return;
  } else
    a.scrollBarVis = s;
  if (o.children("thead, tfoot").remove(), l = n.clone().prependTo(o), l.find("th, td").removeAttr("tabindex"), l.find("[id]").removeAttr("id"), h && (c = h.clone().prependTo(o), c.find("[id]").removeAttr("id")), a.aiDisplay.length) {
    var v = null, y = sa(a) !== "ssp" ? a._iDisplayStart : 0;
    for (A = y; A < y + a.aiDisplay.length; A++) {
      var x = a.aiDisplay[A], e = a.aoData[x].nTr;
      if (e) {
        v = e;
        break;
      }
    }
    if (v)
      for (var b = Xt(v).children("th, td").map(function(F) {
        return {
          idx: qs(a, F),
          width: Xt(this).outerWidth()
        };
      }), A = 0; A < b.length; A++) {
        var P = a.aoColumns[b[A].idx].colEl[0], D = P.style.width.replace("px", "");
        D !== b[A].width && (P.style.width = b[A].width + "px", p.sX && (P.style.minWidth = b[A].width + "px"));
      }
  }
  B.find("colgroup").remove(), B.append(a.colgroup.clone()), h && (r.find("colgroup").remove(), r.append(a.colgroup.clone())), Xt("th, td", l).each(function() {
    Xt(this.childNodes).wrapAll('<div class="dt-scroll-sizing">');
  }), h && Xt("th, td", c).each(function() {
    Xt(this.childNodes).wrapAll('<div class="dt-scroll-sizing">');
  });
  var E = Math.floor(o.height()) > f.clientHeight || d.css("overflow-y") == "scroll", T = "padding" + (u.bScrollbarLeft ? "Left" : "Right"), C = o.outerWidth();
  B.css("width", Wa(C)), L.css("width", Wa(C)).css(T, E ? g + "px" : "0px"), h && (r.css("width", Wa(C)), i.css("width", Wa(C)).css(T, E ? g + "px" : "0px")), o.children("colgroup").prependTo(o), d.trigger("scroll"), (a.bSorted || a.bFiltered) && !a._drawHold && (f.scrollTop = 0);
}
function qd(a) {
  if (a.oFeatures.bAutoWidth) {
    var p = a.nTable, g = a.aoColumns, w = a.oScroll, L = w.sY, B = w.sX, f = w.sXInner, d = _s(a, "bVisible"), t = p.getAttribute("width"), i = p.parentNode, r, n, o, h = p.style.width, u = Sf(a);
    if (u === a.containerWidth)
      return !1;
    a.containerWidth = u, !h && !t && (p.style.width = "100%", h = "100%"), h && h.indexOf("%") !== -1 && (t = h), zr(
      a,
      null,
      "column-calc",
      { visible: d },
      !1
    );
    var l = Xt(p.cloneNode()).css("visibility", "hidden").removeAttr("id");
    l.append("<tbody>");
    var c = Xt("<tr/>").appendTo(l.find("tbody"));
    for (l.append(Xt(a.nTHead).clone()).append(Xt(a.nTFoot).clone()), l.find("tfoot th, tfoot td").css("width", ""), l.find("thead th, thead td").each(function() {
      var C = jf(a, this, !0, !1);
      C ? (this.style.width = C, B && (this.style.minWidth = C, Xt(this).append(Xt("<div/>").css({
        width: C,
        margin: 0,
        padding: 0,
        border: 0,
        height: 1
      })))) : this.style.width = "";
    }), r = 0; r < d.length; r++) {
      o = d[r], n = g[o];
      var s = _d(a, o), v = En.type.className[n.sType], y = s + n.sContentPadding, x = s.indexOf("<") === -1 ? document.createTextNode(y) : y;
      Xt("<td/>").addClass(v).addClass(n.sClass).append(x).appendTo(c);
    }
    Xt("[name]", l).removeAttr("name");
    var e = Xt("<div/>").css(
      B || L ? {
        position: "absolute",
        top: 0,
        left: 0,
        height: 1,
        right: 0,
        overflow: "hidden"
      } : {}
    ).append(l).appendTo(i);
    B && f ? l.width(f) : B ? (l.css("width", "auto"), l.removeAttr("width"), l.outerWidth() < i.clientWidth && t && l.outerWidth(i.clientWidth)) : L ? l.outerWidth(i.clientWidth) : t && l.outerWidth(t);
    var b = 0, A = l.find("tbody tr").eq(0).children();
    for (r = 0; r < d.length; r++) {
      var P = A[r].getBoundingClientRect().width;
      b += P, g[d[r]].sWidth = Wa(P);
    }
    if (p.style.width = Wa(b), e.remove(), t && (p.style.width = Wa(t)), (t || B) && !a._reszEvt) {
      var D = de.util.throttle(function() {
        var C = Sf(a);
        !a.bDestroying && C !== 0 && _o(a);
      });
      if (window.ResizeObserver) {
        var E = Xt(a.nTableWrapper).is(":visible"), T = Xt("<div>").css({
          width: "100%",
          height: 0
        }).addClass("dt-autosize").appendTo(a.nTableWrapper);
        a.resizeObserver = new ResizeObserver(function(C) {
          E ? E = !1 : D();
        }), a.resizeObserver.observe(T[0]);
      } else
        Xt(window).on("resize.DT-" + a.sInstance, D);
      a._reszEvt = !0;
    }
  }
}
function Sf(a) {
  return Xt(a.nTableWrapper).is(":visible") ? Xt(a.nTableWrapper).width() : 0;
}
function _d(a, p) {
  var g = a.aoColumns[p];
  if (!g.maxLenString) {
    for (var w, L = "", B = -1, f = 0, d = a.aiDisplayMaster.length; f < d; f++) {
      var t = a.aiDisplayMaster[f], i = n0(a, t)[p], r = i && typeof i == "object" && i.nodeType ? i.innerHTML : i + "";
      r = r.replace(/id=".*?"/g, "").replace(/name=".*?"/g, ""), w = Pa(r).replace(/&nbsp;/g, " "), w.length > B && (L = r, B = w.length);
    }
    g.maxLenString = L;
  }
  return g.maxLenString;
}
function Wa(a) {
  return a === null ? "0px" : typeof a == "number" ? a < 0 ? "0px" : a + "px" : a.match(/\d$/) ? a + "px" : a;
}
function qf(a) {
  var p = a.aoColumns;
  for (a.colgroup.empty(), Hn = 0; Hn < p.length; Hn++)
    p[Hn].bVisible && a.colgroup.append(p[Hn].colEl);
}
function t1(a) {
  var p = a.nTHead, g = p.querySelectorAll("tr"), w = a.bSortCellsTop, L = ':not([data-dt-order="disable"]):not([data-dt-order="icon-only"])';
  w === !0 ? p = g[0] : w === !1 && (p = g[g.length - 1]), _f(
    a,
    p,
    p === a.nTHead ? "tr" + L + " th" + L + ", tr" + L + " td" + L : "th" + L + ", td" + L
  );
  var B = [];
  ci(a, B, a.aaSorting), a.aaSorting = B;
}
function _f(a, p, g, w, L) {
  el(p, g, function(B) {
    var f = !1, d = w === void 0 ? t0(B.target) : [w];
    if (d.length) {
      for (var t = 0, i = d.length; t < i; t++) {
        var r = e1(a, d[t], t, B.shiftKey);
        if (r !== !1 && (f = !0), a.aaSorting.length === 1 && a.aaSorting[0][1] === "")
          break;
      }
      f && Jf(a, !0, function() {
        o0(a), tl(a, a.aiDisplay), Ai(a, !1, !1), L && L();
      });
    }
  });
}
function tl(a, p) {
  if (!(p.length < 2)) {
    var g = a.aiDisplayMaster, w = {}, L = {}, B;
    for (B = 0; B < g.length; B++)
      w[g[B]] = B;
    for (B = 0; B < p.length; B++)
      L[p[B]] = w[p[B]];
    p.sort(function(f, d) {
      return L[f] - L[d];
    });
  }
}
function ci(a, p, g) {
  var w = function(B) {
    if (Xt.isPlainObject(B)) {
      if (B.idx !== void 0)
        p.push([B.idx, B.dir]);
      else if (B.name) {
        var f = Ln(a.aoColumns, "sName"), d = f.indexOf(B.name);
        d !== -1 && p.push([d, B.dir]);
      }
    } else
      p.push(B);
  };
  if (Xt.isPlainObject(g))
    w(g);
  else if (g.length && typeof g[0] == "number")
    w(g);
  else if (g.length)
    for (var L = 0; L < g.length; L++)
      w(g[L]);
}
function as(a) {
  var p, g, w, L = [], B = de.ext.type.order, f = a.aoColumns, d, t, i, r, n = a.aaSortingFixed, o = Xt.isPlainObject(n), h = [];
  if (!a.oFeatures.bSort)
    return L;
  for (Array.isArray(n) && ci(a, h, n), o && n.pre && ci(a, h, n.pre), ci(a, h, a.aaSorting), o && n.post && ci(a, h, n.post), p = 0; p < h.length; p++)
    if (r = h[p][0], f[r])
      for (d = f[r].aDataSort, g = 0, w = d.length; g < w; g++)
        t = d[g], i = f[t].sType || "string", h[p]._idx === void 0 && (h[p]._idx = f[t].asSorting.indexOf(h[p][1])), h[p][1] && L.push({
          src: r,
          col: t,
          dir: h[p][1],
          index: h[p]._idx,
          type: i,
          formatter: B[i + "-pre"],
          sorter: B[i + "-" + h[p][1]]
        });
  return L;
}
function o0(a, p, g) {
  var w, L, B, f = [], d = de.ext.type.order, t = a.aoData, i, r = a.aiDisplayMaster, n;
  if (es(a), p !== void 0) {
    var o = a.aoColumns[p];
    n = [{
      src: p,
      col: p,
      dir: g,
      index: 0,
      type: o.sType,
      formatter: d[o.sType + "-pre"],
      sorter: d[o.sType + "-" + g]
    }], r = r.slice();
  } else
    n = as(a);
  for (w = 0, L = n.length; w < L; w++)
    i = n[w], r1(a, i.col);
  if (sa(a) != "ssp" && n.length !== 0) {
    for (w = 0, B = r.length; w < B; w++)
      f[w] = w;
    n.length && n[0].dir === "desc" && a.orderDescReverse && f.reverse(), r.sort(function(h, u) {
      var l, c, s, v, y, x = n.length, e = t[h]._aSortData, b = t[u]._aSortData;
      for (s = 0; s < x; s++)
        if (y = n[s], l = e[y.col], c = b[y.col], y.sorter) {
          if (v = y.sorter(l, c), v !== 0)
            return v;
        } else if (v = l < c ? -1 : l > c ? 1 : 0, v !== 0)
          return y.dir === "asc" ? v : -v;
      return l = f[h], c = f[u], l < c ? -1 : l > c ? 1 : 0;
    });
  } else
    n.length === 0 && r.sort(function(h, u) {
      return h < u ? -1 : h > u ? 1 : 0;
    });
  return p === void 0 && (a.bSorted = !0, a.sortDetails = n, zr(a, null, "order", [a, n])), r;
}
function e1(a, p, g, w) {
  var L = a.aoColumns[p], B = a.aaSorting, f = L.asSorting, d, t = function(r, n) {
    var o = r._idx;
    return o === void 0 && (o = f.indexOf(r[1])), o + 1 < f.length ? o + 1 : n ? null : 0;
  };
  if (!L.bSortable)
    return !1;
  if (typeof B[0] == "number" && (B = a.aaSorting = [B]), (w || g) && a.oFeatures.bSortMulti) {
    var i = Ln(B, "0").indexOf(p);
    i !== -1 ? (d = t(B[i], !0), d === null && B.length === 1 && (d = 0), d === null ? B.splice(i, 1) : (B[i][1] = f[d], B[i]._idx = d)) : w ? (B.push([p, f[0], 0]), B[B.length - 1]._idx = 0) : (B.push([p, B[0][1], 0]), B[B.length - 1]._idx = 0);
  } else
    B.length && B[0][0] == p ? (d = t(B[0]), B.length = 1, B[0][1] = f[d], B[0]._idx = d) : (B.length = 0, B.push([p, f[0]]), B[0]._idx = 0);
}
function js(a) {
  var p = a.aLastSort, g = a.oClasses.order.position, w = as(a), L = a.oFeatures, B, f, d;
  if (L.bSort && L.bSortClasses) {
    for (B = 0, f = p.length; B < f; B++)
      d = p[B].src, Xt(Ln(a.aoData, "anCells", d)).removeClass(g + (B < 2 ? B + 1 : 3));
    for (B = 0, f = w.length; B < f; B++)
      d = w[B].src, Xt(Ln(a.aoData, "anCells", d)).addClass(g + (B < 2 ? B + 1 : 3));
  }
  a.aLastSort = w;
}
function r1(a, p) {
  var g = a.aoColumns[p], w = de.ext.order[g.sSortDataType], L;
  w && (L = w.call(
    a.oInstance,
    a,
    p,
    ro(a, p)
  ));
  for (var B, f, d = de.ext.type.order[g.sType + "-pre"], t = a.aoData, i = 0; i < t.length; i++)
    t[i] && (B = t[i], B._aSortData || (B._aSortData = []), (!B._aSortData[p] || w) && (f = w ? L[i] : (
      // If there was a custom sort function, use data from there
      ha(a, i, p, "sort")
    ), B._aSortData[p] = d ? d(f, a) : f));
}
function is(a) {
  if (!a._bLoadingState) {
    var p = [];
    ci(a, p, a.aaSorting);
    var g = a.aoColumns, w = {
      time: +/* @__PURE__ */ new Date(),
      start: a._iDisplayStart,
      length: a._iDisplayLength,
      order: p.map(function(L) {
        return g[L[0]] && g[L[0]].sName ? [g[L[0]].sName, L[1]] : L.slice();
      }),
      search: Xt.extend({}, a.oPreviousSearch),
      columns: a.aoColumns.map(function(L, B) {
        return {
          name: L.sName,
          visible: L.bVisible,
          search: Xt.extend({}, a.aoPreSearchCols[B])
        };
      })
    };
    a.oSavedState = w, zr(a, "aoStateSaveParams", "stateSaveParams", [a, w]), a.oFeatures.bStateSave && !a.bDestroying && a.fnStateSaveCallback.call(a.oInstance, a, w);
  }
}
function n1(a, p, g) {
  if (!a.oFeatures.bStateSave) {
    g();
    return;
  }
  var w = function(B) {
    Gs(a, B, g);
  }, L = a.fnStateLoadCallback.call(a.oInstance, a, w);
  return L !== void 0 && Gs(a, L, g), !0;
}
function Gs(a, p, g) {
  var w, L, B = a.aoColumns, f = Ln(a.aoColumns, "sName");
  a._bLoadingState = !0;
  var d = a._bInitComplete ? new de.Api(a) : null;
  if (!p || !p.time) {
    a._bLoadingState = !1, g();
    return;
  }
  var t = a.iStateDuration;
  if (t > 0 && p.time < +/* @__PURE__ */ new Date() - t * 1e3) {
    a._bLoadingState = !1, g();
    return;
  }
  var i = zr(a, "aoStateLoadParams", "stateLoadParams", [a, p]);
  if (i.indexOf(!1) !== -1) {
    a._bLoadingState = !1, g();
    return;
  }
  if (a.oLoadedState = Xt.extend(!0, {}, p), zr(a, null, "stateLoadInit", [a, p], !0), p.length !== void 0 && (d ? d.page.len(p.length) : a._iDisplayLength = p.length), p.start !== void 0 && (d === null ? (a._iDisplayStart = p.start, a.iInitDisplayStart = p.start) : i0(a, p.start / a._iDisplayLength)), p.order !== void 0 && (a.aaSorting = [], Xt.each(p.order, function(u, l) {
    var c = [l[0], l[1]];
    if (typeof l[0] == "string") {
      var s = f.indexOf(l[0]);
      c[0] = s >= 0 ? s : 0;
    } else
      c[0] >= B.length && (c[0] = 0);
    a.aaSorting.push(c);
  })), p.search !== void 0 && Xt.extend(a.oPreviousSearch, p.search), p.columns) {
    var r = p.columns, n = Ln(p.columns, "name");
    if (n.join("").length && n.join("") !== f.join(""))
      for (r = [], w = 0; w < f.length; w++)
        if (f[w] != "") {
          var o = n.indexOf(f[w]);
          o >= 0 ? r.push(p.columns[o]) : r.push({});
        } else
          r.push({});
    if (r.length === B.length) {
      for (w = 0, L = r.length; w < L; w++) {
        var h = r[w];
        h.visible !== void 0 && (d ? d.column(w).visible(h.visible, !1) : B[w].bVisible = h.visible), h.search !== void 0 && Xt.extend(a.aoPreSearchCols[w], h.search);
      }
      d && d.columns.adjust();
    }
  }
  a._bLoadingState = !1, zr(a, "aoStateLoaded", "stateLoaded", [a, p]), g();
}
function ca(a, p, g, w) {
  if (g = "DataTables warning: " + (a ? "table id=" + a.sTableId + " - " : "") + g, w && (g += ". For more information about this error, please see https://datatables.net/tn/" + w), p)
    window.console && console.log && console.log(g);
  else {
    var L = de.ext, B = L.sErrMode || L.errMode;
    if (a && zr(a, null, "dt-error", [a, w, g], !0), B == "alert")
      alert(g);
    else {
      if (B == "throw")
        throw new Error(g);
      typeof B == "function" && B(a, w, g);
    }
  }
}
function Ha(a, p, g, w) {
  if (Array.isArray(g)) {
    Xt.each(g, function(L, B) {
      Array.isArray(B) ? Ha(a, p, B[0], B[1]) : Ha(a, p, B);
    });
    return;
  }
  w === void 0 && (w = g), p[g] !== void 0 && (a[w] = p[g]);
}
function Cf(a, p, g) {
  var w;
  for (var L in p)
    Object.prototype.hasOwnProperty.call(p, L) && (w = p[L], Xt.isPlainObject(w) ? (Xt.isPlainObject(a[L]) || (a[L] = {}), Xt.extend(!0, a[L], w)) : g && L !== "data" && L !== "aaData" && Array.isArray(w) ? a[L] = w.slice() : a[L] = w);
  return a;
}
function el(a, p, g) {
  Xt(a).on("click.DT", p, function(w) {
    g(w);
  }).on("keypress.DT", p, function(w) {
    w.which === 13 && (w.preventDefault(), g(w));
  }).on("selectstart.DT", p, function() {
    return !1;
  });
}
function ua(a, p, g) {
  g && a[p].push(g);
}
function zr(a, p, g, w, L) {
  var B = [];
  if (p && (B = a[p].slice().reverse().map(function(t) {
    return t.apply(a.oInstance, w);
  })), g !== null) {
    var f = Xt.Event(g + ".dt"), d = Xt(a.nTable);
    f.dt = a.api, d[L ? "trigger" : "triggerHandler"](f, w), L && d.parents("body").length === 0 && Xt("body").trigger(f, w), B.push(f.result);
  }
  return B;
}
function rl(a) {
  var p = a._iDisplayStart, g = a.fnDisplayEnd(), w = a._iDisplayLength;
  p >= g && (p = g - w), p -= p % w, (w === -1 || p < 0) && (p = 0), a._iDisplayStart = p;
}
function Ko(a, p) {
  var g = a.renderer, w = de.ext.renderer[p];
  return Xt.isPlainObject(g) && g[p] ? w[g[p]] || w._ : typeof g == "string" && w[g] || w._;
}
function sa(a) {
  return a.oFeatures.bServerSide ? "ssp" : a.ajax ? "ajax" : "dom";
}
function s0(a, p, g) {
  var w = a.fnFormatNumber, L = a._iDisplayStart + 1, B = a._iDisplayLength, f = a.fnRecordsDisplay(), d = a.fnRecordsTotal(), t = B === -1;
  return p.replace(/_START_/g, w.call(a, L)).replace(/_END_/g, w.call(a, a.fnDisplayEnd())).replace(/_MAX_/g, w.call(a, d)).replace(/_TOTAL_/g, w.call(a, f)).replace(/_PAGE_/g, w.call(a, t ? 1 : Math.ceil(L / B))).replace(/_PAGES_/g, w.call(a, t ? 1 : Math.ceil(f / B))).replace(/_ENTRIES_/g, a.api.i18n("entries", "", g)).replace(/_ENTRIES-MAX_/g, a.api.i18n("entries", "", d)).replace(/_ENTRIES-TOTAL_/g, a.api.i18n("entries", "", f));
}
function os(a, p) {
  if (p)
    if (p.length < 1e4)
      a.push.apply(a, p);
    else
      for (Hn = 0; Hn < p.length; Hn++)
        a.push(p[Hn]);
}
var f0 = [], Un = Array.prototype, a1 = function(a) {
  var p, g, w = de.settings, L = Ln(w, "nTable");
  if (a) {
    if (a.nTable && a.oFeatures)
      return [a];
    if (a.nodeName && a.nodeName.toLowerCase() === "table")
      return p = L.indexOf(a), p !== -1 ? [w[p]] : null;
    if (a && typeof a.settings == "function")
      return a.settings().toArray();
    typeof a == "string" ? g = Xt(a).get() : a instanceof Xt && (g = a.get());
  } else
    return [];
  if (g)
    return w.filter(function(B, f) {
      return g.includes(L[f]);
    });
};
Fr = function(a, p) {
  if (!(this instanceof Fr))
    return new Fr(a, p);
  var g, w = [], L = function(B) {
    var f = a1(B);
    f && w.push.apply(w, f);
  };
  if (Array.isArray(a))
    for (g = 0; g < a.length; g++)
      L(a[g]);
  else
    L(a);
  this.context = w.length > 1 ? ei(w) : w, os(this, p), this.selector = {
    rows: null,
    cols: null,
    opts: null
  }, Fr.extend(this, this, f0);
};
de.Api = Fr;
Xt.extend(Fr.prototype, {
  any: function() {
    return this.count() !== 0;
  },
  context: [],
  // array of table settings objects
  count: function() {
    return this.flatten().length;
  },
  each: function(a) {
    for (var p = 0, g = this.length; p < g; p++)
      a.call(this, this[p], p, this);
    return this;
  },
  eq: function(a) {
    var p = this.context;
    return p.length > a ? new Fr(p[a], this[a]) : null;
  },
  filter: function(a) {
    var p = Un.filter.call(this, a, this);
    return new Fr(this.context, p);
  },
  flatten: function() {
    var a = [];
    return new Fr(this.context, a.concat.apply(a, this.toArray()));
  },
  get: function(a) {
    return this[a];
  },
  join: Un.join,
  includes: function(a) {
    return this.indexOf(a) !== -1;
  },
  indexOf: Un.indexOf,
  iterator: function(a, p, g, w) {
    var L = [], B, f, d, t, i, r = this.context, n, o, h, u = this.selector;
    for (typeof a == "string" && (w = g, g = p, p = a, a = !1), f = 0, d = r.length; f < d; f++) {
      var l = new Fr(r[f]);
      if (p === "table")
        B = g.call(l, r[f], f), B !== void 0 && L.push(B);
      else if (p === "columns" || p === "rows")
        B = g.call(l, r[f], this[f], f), B !== void 0 && L.push(B);
      else if (p === "every" || p === "column" || p === "column-rows" || p === "row" || p === "cell")
        for (o = this[f], p === "column-rows" && (n = ss(r[f], u.opts)), t = 0, i = o.length; t < i; t++)
          h = o[t], p === "cell" ? B = g.call(l, r[f], h.row, h.column, f, t) : B = g.call(l, r[f], h, f, t, n), B !== void 0 && L.push(B);
    }
    if (L.length || w) {
      var c = new Fr(r, a ? L.concat.apply([], L) : L), s = c.selector;
      return s.rows = u.rows, s.cols = u.cols, s.opts = u.opts, c;
    }
    return this;
  },
  lastIndexOf: Un.lastIndexOf,
  length: 0,
  map: function(a) {
    var p = Un.map.call(this, a, this);
    return new Fr(this.context, p);
  },
  pluck: function(a) {
    var p = de.util.get(a);
    return this.map(function(g) {
      return p(g);
    });
  },
  pop: Un.pop,
  push: Un.push,
  reduce: Un.reduce,
  reduceRight: Un.reduceRight,
  reverse: Un.reverse,
  // Object with rows, columns and opts
  selector: null,
  shift: Un.shift,
  slice: function() {
    return new Fr(this.context, this);
  },
  sort: Un.sort,
  splice: Un.splice,
  toArray: function() {
    return Un.slice.call(this);
  },
  to$: function() {
    return Xt(this);
  },
  toJQuery: function() {
    return Xt(this);
  },
  unique: function() {
    return new Fr(this.context, ei(this.toArray()));
  },
  unshift: Un.unshift
});
function i1(a, p, g) {
  return function() {
    var w = p.apply(a || this, arguments);
    return Fr.extend(w, w, g.methodExt), w;
  };
}
function o1(a, p) {
  for (var g = 0, w = a.length; g < w; g++)
    if (a[g].name === p)
      return a[g];
  return null;
}
window.__apiStruct = f0;
Fr.extend = function(a, p, g) {
  if (!(!g.length || !p || !(p instanceof Fr) && !p.__dt_wrapper)) {
    var w, L, B;
    for (w = 0, L = g.length; w < L; w++)
      B = g[w], B.name !== "__proto__" && (p[B.name] = B.type === "function" ? i1(a, B.val, B) : B.type === "object" ? {} : B.val, p[B.name].__dt_wrapper = !0, Fr.extend(a, p[B.name], B.propExt));
  }
};
Fr.register = Qe = function(a, p) {
  if (Array.isArray(a)) {
    for (var g = 0, w = a.length; g < w; g++)
      Fr.register(a[g], p);
    return;
  }
  var L, B, f = a.split("."), d = f0, t, i;
  for (L = 0, B = f.length; L < B; L++) {
    i = f[L].indexOf("()") !== -1, t = i ? f[L].replace("()", "") : f[L];
    var r = o1(d, t);
    r || (r = {
      name: t,
      val: {},
      methodExt: [],
      propExt: [],
      type: "object"
    }, d.push(r)), L === B - 1 ? (r.val = p, r.type = typeof p == "function" ? "function" : Xt.isPlainObject(p) ? "object" : "other") : d = i ? r.methodExt : r.propExt;
  }
};
Fr.registerPlural = Qr = function(a, p, g) {
  Fr.register(a, g), Fr.register(p, function() {
    var w = g.apply(this, arguments);
    return w === this ? this : w instanceof Fr ? w.length ? Array.isArray(w[0]) ? new Fr(w.context, w[0]) : (
      // Array results are 'enhanced'
      w[0]
    ) : void 0 : w;
  });
};
var nl = function(a, p) {
  if (Array.isArray(a)) {
    var g = [];
    return a.forEach(function(L) {
      var B = nl(L, p);
      os(g, B);
    }), g.filter(function(L) {
      return L;
    });
  }
  if (typeof a == "number")
    return [p[a]];
  var w = p.map(function(L) {
    return L.nTable;
  });
  return Xt(w).filter(a).map(function() {
    var L = w.indexOf(this);
    return p[L];
  }).toArray();
};
Qe("tables()", function(a) {
  return a != null ? new Fr(nl(a, this.context)) : this;
});
Qe("table()", function(a) {
  var p = this.tables(a), g = p.context;
  return g.length ? new Fr(g[0]) : p;
});
[
  ["nodes", "node", "nTable"],
  ["body", "body", "nTBody"],
  ["header", "header", "nTHead"],
  ["footer", "footer", "nTFoot"]
].forEach(function(a) {
  Qr(
    "tables()." + a[0] + "()",
    "table()." + a[1] + "()",
    function() {
      return this.iterator("table", function(p) {
        return p[a[2]];
      }, 1);
    }
  );
});
[
  ["header", "aoHeader"],
  ["footer", "aoFooter"]
].forEach(function(a) {
  Qe("table()." + a[0] + ".structure()", function(p) {
    var g = this.columns(p).indexes().flatten(), w = this.context[0];
    return Zf(w, w[a[1]], g);
  });
});
Qr("tables().containers()", "table().container()", function() {
  return this.iterator("table", function(a) {
    return a.nTableWrapper;
  }, 1);
});
Qe("tables().every()", function(a) {
  var p = this;
  return this.iterator("table", function(g, w) {
    a.call(p.table(w), w);
  });
});
Qe("caption()", function(a, p) {
  var g = this.context;
  if (a === void 0) {
    var w = g[0].captionNode;
    return w && g.length ? w.innerHTML : null;
  }
  return this.iterator("table", function(L) {
    var B = Xt(L.nTable), f = Xt(L.captionNode), d = Xt(L.nTableWrapper);
    if (f.length || (f = Xt("<caption/>").html(a), L.captionNode = f[0], p || (B.prepend(f), p = f.css("caption-side"))), f.html(a), p && (f.css("caption-side", p), f[0]._captionSide = p), d.find("div.dataTables_scroll").length) {
      var t = p === "top" ? "Head" : "Foot";
      d.find("div.dataTables_scroll" + t + " table").prepend(f);
    } else
      B.prepend(f);
  }, 1);
});
Qe("caption.node()", function() {
  var a = this.context;
  return a.length ? a[0].captionNode : null;
});
Qe("draw()", function(a) {
  return this.iterator("table", function(p) {
    a === "page" ? Si(p) : (typeof a == "string" && (a = a !== "full-hold"), Ai(p, a === !1));
  });
});
Qe("page()", function(a) {
  return a === void 0 ? this.page.info().page : this.iterator("table", function(p) {
    i0(p, a);
  });
});
Qe("page.info()", function() {
  if (this.context.length !== 0) {
    var a = this.context[0], p = a._iDisplayStart, g = a.oFeatures.bPaginate ? a._iDisplayLength : -1, w = a.fnRecordsDisplay(), L = g === -1;
    return {
      page: L ? 0 : Math.floor(p / g),
      pages: L ? 1 : Math.ceil(w / g),
      start: p,
      end: a.fnDisplayEnd(),
      length: g,
      recordsTotal: a.fnRecordsTotal(),
      recordsDisplay: w,
      serverSide: sa(a) === "ssp"
    };
  }
});
Qe("page.len()", function(a) {
  return a === void 0 ? this.context.length !== 0 ? this.context[0]._iDisplayLength : void 0 : this.iterator("table", function(p) {
    Kf(p, a);
  });
});
var al = function(a, p, g) {
  if (g) {
    var w = new Fr(a);
    w.one("draw", function() {
      g(w.ajax.json());
    });
  }
  if (sa(a) == "ssp")
    Ai(a, p);
  else {
    oa(a, !0);
    var L = a.jqXHR;
    L && L.readyState !== 4 && L.abort(), a0(a, {}, function(B) {
      r0(a);
      for (var f = ns(a, B), d = 0, t = f.length; d < t; d++)
        _a(a, f[d]);
      Ai(a, p), Yo(a), oa(a, !1);
    });
  }
};
Qe("ajax.json()", function() {
  var a = this.context;
  if (a.length > 0)
    return a[0].json;
});
Qe("ajax.params()", function() {
  var a = this.context;
  if (a.length > 0)
    return a[0].oAjaxData;
});
Qe("ajax.reload()", function(a, p) {
  return this.iterator("table", function(g) {
    al(g, p === !1, a);
  });
});
Qe("ajax.url()", function(a) {
  var p = this.context;
  return a === void 0 ? p.length === 0 ? void 0 : (p = p[0], Xt.isPlainObject(p.ajax) ? p.ajax.url : p.ajax) : this.iterator("table", function(g) {
    Xt.isPlainObject(g.ajax) ? g.ajax.url = a : g.ajax = a;
  });
});
Qe("ajax.url().load()", function(a, p) {
  return this.iterator("table", function(g) {
    al(g, p === !1, a);
  });
});
var l0 = function(a, p, g, w, L) {
  var B = [], f, d, t, i, r, n, o = typeof p;
  for ((!p || o === "string" || o === "function" || p.length === void 0) && (p = [p]), t = 0, i = p.length; t < i; t++)
    for (d = p[t] && p[t].split && !p[t].match(/[[(:]/) ? p[t].split(",") : [p[t]], r = 0, n = d.length; r < n; r++)
      f = g(typeof d[r] == "string" ? d[r].trim() : d[r]), f = f.filter(function(u) {
        return u != null;
      }), f && f.length && (B = B.concat(f));
  var h = En.selector[a];
  if (h.length)
    for (t = 0, i = h.length; t < i; t++)
      B = h[t](w, L, B);
  return ei(B);
}, u0 = function(a) {
  return a || (a = {}), a.filter && a.search === void 0 && (a.search = a.filter), Xt.extend({
    search: "none",
    order: "current",
    page: "all"
  }, a);
}, c0 = function(a) {
  var p = new Fr(a.context[0]);
  return a.length && p.push(a[0]), p.selector = a.selector, p.length && p[0].length > 1 && p[0].splice(1), p;
}, ss = function(a, p) {
  var g, w, L, B = [], f = a.aiDisplay, d = a.aiDisplayMaster, t = p.search, i = p.order, r = p.page;
  if (sa(a) == "ssp")
    return t === "removed" ? [] : Ua(0, d.length);
  if (r == "current")
    for (g = a._iDisplayStart, w = a.fnDisplayEnd(); g < w; g++)
      B.push(f[g]);
  else if (i == "current" || i == "applied") {
    if (t == "none")
      B = d.slice();
    else if (t == "applied")
      B = f.slice();
    else if (t == "removed") {
      var n = {};
      for (g = 0, w = f.length; g < w; g++)
        n[f[g]] = null;
      d.forEach(function(h) {
        Object.prototype.hasOwnProperty.call(n, h) || B.push(h);
      });
    }
  } else if (i == "index" || i == "original")
    for (g = 0, w = a.aoData.length; g < w; g++)
      a.aoData[g] && (t == "none" ? B.push(g) : (L = f.indexOf(g), (L === -1 && t == "removed" || L >= 0 && t == "applied") && B.push(g)));
  else if (typeof i == "number") {
    var o = o0(a, i, "asc");
    if (t === "none")
      B = o;
    else
      for (g = 0; g < o.length; g++)
        L = f.indexOf(o[g]), (L === -1 && t == "removed" || L >= 0 && t == "applied") && B.push(o[g]);
  }
  return B;
}, s1 = function(a, p, g) {
  var w, L = function(f) {
    var d = kf(f), t = a.aoData;
    if (d !== null && !g)
      return [d];
    if (w || (w = ss(a, g)), d !== null && w.indexOf(d) !== -1)
      return [d];
    if (f == null || f === "")
      return w;
    if (typeof f == "function")
      return w.map(function(u) {
        var l = t[u];
        return f(u, l._aData, l.nTr) ? u : null;
      });
    if (f.nodeName) {
      var i = f._DT_RowIndex, r = f._DT_CellIndex;
      if (i !== void 0)
        return t[i] && t[i].nTr === f ? [i] : [];
      if (r)
        return t[r.row] && t[r.row].nTr === f.parentNode ? [r.row] : [];
      var n = Xt(f).closest("*[data-dt-row]");
      return n.length ? [n.data("dt-row")] : [];
    }
    if (typeof f == "string" && f.charAt(0) === "#") {
      var o = a.aIds[f.replace(/^#/, "")];
      if (o !== void 0)
        return [o.idx];
    }
    var h = zf(
      eo(a.aoData, w, "nTr")
    );
    return Xt(h).filter(f).map(function() {
      return this._DT_RowIndex;
    }).toArray();
  }, B = l0("row", p, L, a, g);
  return (g.order === "current" || g.order === "applied") && tl(a, B), B;
};
Qe("rows()", function(a, p) {
  a === void 0 ? a = "" : Xt.isPlainObject(a) && (p = a, a = ""), p = u0(p);
  var g = this.iterator("table", function(w) {
    return s1(w, a, p);
  }, 1);
  return g.selector.rows = a, g.selector.opts = p, g;
});
Qe("rows().nodes()", function() {
  return this.iterator("row", function(a, p) {
    return a.aoData[p].nTr || void 0;
  }, 1);
});
Qe("rows().data()", function() {
  return this.iterator(!0, "rows", function(a, p) {
    return eo(a.aoData, p, "_aData");
  }, 1);
});
Qr("rows().cache()", "row().cache()", function(a) {
  return this.iterator("row", function(p, g) {
    var w = p.aoData[g];
    return a === "search" ? w._aFilterData : w._aSortData;
  }, 1);
});
Qr("rows().invalidate()", "row().invalidate()", function(a) {
  return this.iterator("row", function(p, g) {
    rs(p, g, a);
  });
});
Qr("rows().indexes()", "row().index()", function() {
  return this.iterator("row", function(a, p) {
    return p;
  }, 1);
});
Qr("rows().ids()", "row().id()", function(a) {
  for (var p = [], g = this.context, w = 0, L = g.length; w < L; w++)
    for (var B = 0, f = this[w].length; B < f; B++) {
      var d = g[w].rowIdFn(g[w].aoData[this[w][B]]._aData);
      p.push((a === !0 ? "#" : "") + d);
    }
  return new Fr(g, p);
});
Qr("rows().remove()", "row().remove()", function() {
  return this.iterator("row", function(a, p) {
    var g = a.aoData, w = g[p], L = a.aiDisplayMaster.indexOf(p);
    L !== -1 && a.aiDisplayMaster.splice(L, 1), a._iRecordsDisplay > 0 && a._iRecordsDisplay--, rl(a);
    var B = a.rowIdFn(w._aData);
    B !== void 0 && delete a.aIds[B], g[p] = null;
  }), this;
});
Qe("rows.add()", function(a) {
  var p = this.iterator("table", function(w) {
    var L, B, f, d = [];
    for (B = 0, f = a.length; B < f; B++)
      L = a[B], L.nodeName && L.nodeName.toUpperCase() === "TR" ? d.push(e0(w, L)[0]) : d.push(_a(w, L));
    return d;
  }, 1), g = this.rows(-1);
  return g.pop(), os(g, p), g;
});
Qe("row()", function(a, p) {
  return c0(this.rows(a, p));
});
Qe("row().data()", function(a) {
  var p = this.context;
  if (a === void 0)
    return p.length && this.length && this[0].length ? p[0].aoData[this[0]]._aData : void 0;
  var g = p[0].aoData[this[0]];
  return g._aData = a, Array.isArray(a) && g.nTr && g.nTr.id && $a(p[0].rowId)(a, g.nTr.id), rs(p[0], this[0], "data"), this;
});
Qe("row().node()", function() {
  var a = this.context;
  if (a.length && this.length && this[0].length) {
    var p = a[0].aoData[this[0]];
    if (p && p.nTr)
      return p.nTr;
  }
  return null;
});
Qe("row.add()", function(a) {
  a instanceof Xt && a.length && (a = a[0]);
  var p = this.iterator("table", function(g) {
    return a.nodeName && a.nodeName.toUpperCase() === "TR" ? e0(g, a)[0] : _a(g, a);
  });
  return this.row(p[0]);
});
Xt(document).on("plugin-init.dt", function(a, p) {
  var g = new Fr(p);
  g.on("stateSaveParams.DT", function(w, L, B) {
    for (var f = L.rowIdFn, d = L.aiDisplayMaster, t = [], i = 0; i < d.length; i++) {
      var r = d[i], n = L.aoData[r];
      n._detailsShow && t.push("#" + f(n._aData));
    }
    B.childRows = t;
  }), g.on("stateLoaded.DT", function(w, L, B) {
    Ef(g, B);
  }), Ef(g, g.state.loaded());
});
var Ef = function(a, p) {
  p && p.childRows && a.rows(p.childRows.map(function(g) {
    return g.replace(/([^:\\]*(?:\\.[^:\\]*)*):/g, "$1\\:");
  })).every(function() {
    zr(a.settings()[0], null, "requestChild", [this]);
  });
}, f1 = function(a, p, g, w) {
  var L = [], B = function(f, d) {
    if (Array.isArray(f) || f instanceof Xt) {
      for (var t = 0, i = f.length; t < i; t++)
        B(f[t], d);
      return;
    }
    if (f.nodeName && f.nodeName.toLowerCase() === "tr")
      f.setAttribute("data-dt-row", p.idx), L.push(f);
    else {
      var r = Xt("<tr><td></td></tr>").attr("data-dt-row", p.idx).addClass(d);
      Xt("td", r).addClass(d).html(f)[0].colSpan = ts(a), L.push(r[0]);
    }
  };
  B(g, w), p._details && p._details.detach(), p._details = Xt(L), p._detailsShow && p._details.insertAfter(p.nTr);
}, il = de.util.throttle(
  function(a) {
    is(a[0]);
  },
  500
), h0 = function(a, p) {
  var g = a.context;
  if (g.length) {
    var w = g[0].aoData[p !== void 0 ? p : a[0]];
    w && w._details && (w._details.remove(), w._detailsShow = void 0, w._details = void 0, Xt(w.nTr).removeClass("dt-hasChild"), il(g));
  }
}, ol = function(a, p) {
  var g = a.context;
  if (g.length && a.length) {
    var w = g[0].aoData[a[0]];
    w._details && (w._detailsShow = p, p ? (w._details.insertAfter(w.nTr), Xt(w.nTr).addClass("dt-hasChild")) : (w._details.detach(), Xt(w.nTr).removeClass("dt-hasChild")), zr(g[0], null, "childRow", [p, a.row(a[0])]), l1(g[0]), il(g));
  }
}, l1 = function(a) {
  var p = new Fr(a), g = ".dt.DT_details", w = "draw" + g, L = "column-sizing" + g, B = "destroy" + g, f = a.aoData;
  p.off(w + " " + L + " " + B), Ln(f, "_details").length > 0 && (p.on(w, function(d, t) {
    a === t && p.rows({ page: "current" }).eq(0).each(function(i) {
      var r = f[i];
      r._detailsShow && r._details.insertAfter(r.nTr);
    });
  }), p.on(L, function(d, t) {
    if (a === t)
      for (var i, r = ts(t), n = 0, o = f.length; n < o; n++)
        i = f[n], i && i._details && i._details.each(function() {
          var h = Xt(this).children("td");
          h.length == 1 && h.attr("colspan", r);
        });
  }), p.on(B, function(d, t) {
    if (a === t)
      for (var i = 0, r = f.length; i < r; i++)
        f[i] && f[i]._details && h0(p, i);
  }));
}, u1 = "", no = u1 + "row().child", fs = no + "()";
Qe(fs, function(a, p) {
  var g = this.context;
  return a === void 0 ? g.length && this.length && g[0].aoData[this[0]] ? g[0].aoData[this[0]]._details : void 0 : (a === !0 ? this.child.show() : a === !1 ? h0(this) : g.length && this.length && f1(g[0], g[0].aoData[this[0]], a, p), this);
});
Qe([
  no + ".show()",
  fs + ".show()"
  // only when `child()` was called with parameters (without
], function() {
  return ol(this, !0), this;
});
Qe([
  no + ".hide()",
  fs + ".hide()"
  // only when `child()` was called with parameters (without
], function() {
  return ol(this, !1), this;
});
Qe([
  no + ".remove()",
  fs + ".remove()"
  // only when `child()` was called with parameters (without
], function() {
  return h0(this), this;
});
Qe(no + ".isShown()", function() {
  var a = this.context;
  return a.length && this.length && a[0].aoData[this[0]] && a[0].aoData[this[0]]._detailsShow || !1;
});
var c1 = /^([^:]+)?:(name|title|visIdx|visible)$/, d0 = function(a, p, g, w, L, B) {
  for (var f = [], d = 0, t = L.length; d < t; d++)
    f.push(ha(a, L[d], p, B));
  return f;
}, sl = function(a, p, g) {
  var w = a.aoHeader, L = g !== void 0 ? g : a.bSortCellsTop ? 0 : w.length - 1;
  return w[L][p].cell;
}, h1 = function(a, p, g) {
  var w = a.aoColumns, L = Ln(w, "sName"), B = Ln(w, "sTitle"), f = de.util.get("[].[].cell")(a.aoHeader), d = ei($s([], f)), t = function(i) {
    var r = kf(i);
    if (i === "")
      return Ua(w.length);
    if (r !== null)
      return [
        r >= 0 ? r : (
          // Count from left
          w.length + r
        )
        // Count from right (+ because its a negative value)
      ];
    if (typeof i == "function") {
      var n = ss(a, g);
      return w.map(function(s, v) {
        return i(
          v,
          d0(a, v, 0, 0, n),
          sl(a, v)
        ) ? v : null;
      });
    }
    var o = typeof i == "string" ? i.match(c1) : "";
    if (o)
      switch (o[2]) {
        case "visIdx":
        case "visible":
          if (o[1] && o[1].match(/^\d+$/)) {
            var h = parseInt(o[1], 10);
            if (h < 0) {
              var u = w.map(function(s, v) {
                return s.bVisible ? v : null;
              });
              return [u[u.length + h]];
            }
            return [qs(a, h)];
          }
          return w.map(function(s, v) {
            return s.bVisible ? o[1] ? Xt(d[v]).filter(o[1]).length > 0 ? v : null : v : null;
          });
        case "name":
          return L.map(function(s, v) {
            return s === o[1] ? v : null;
          });
        case "title":
          return B.map(function(s, v) {
            return s === o[1] ? v : null;
          });
        default:
          return [];
      }
    if (i.nodeName && i._DT_CellIndex)
      return [i._DT_CellIndex.column];
    var l = Xt(d).filter(i).map(function() {
      return t0(this);
    }).toArray().sort(function(s, v) {
      return s - v;
    });
    if (l.length || !i.nodeName)
      return l;
    var c = Xt(i).closest("*[data-dt-column]");
    return c.length ? [c.data("dt-column")] : [];
  };
  return l0("column", p, t, a, g);
}, d1 = function(a, p, g) {
  var w = a.aoColumns, L = w[p], B = a.aoData, f, d, t, i;
  if (g === void 0)
    return L.bVisible;
  if (L.bVisible === g)
    return !1;
  if (g) {
    var r = Ln(w, "bVisible").indexOf(!0, p + 1);
    for (d = 0, t = B.length; d < t; d++)
      B[d] && (i = B[d].nTr, f = B[d].anCells, i && i.insertBefore(f[p], f[r] || null));
  } else
    Xt(Ln(a.aoData, "anCells", p)).detach();
  return L.bVisible = g, qf(a), !0;
};
Qe("columns()", function(a, p) {
  a === void 0 ? a = "" : Xt.isPlainObject(a) && (p = a, a = ""), p = u0(p);
  var g = this.iterator("table", function(w) {
    return h1(w, a, p);
  }, 1);
  return g.selector.cols = a, g.selector.opts = p, g;
});
Qr("columns().header()", "column().header()", function(a) {
  return this.iterator("column", function(p, g) {
    return sl(p, g, a);
  }, 1);
});
Qr("columns().footer()", "column().footer()", function(a) {
  return this.iterator("column", function(p, g) {
    var w = p.aoFooter;
    return w.length ? p.aoFooter[a !== void 0 ? a : 0][g].cell : null;
  }, 1);
});
Qr("columns().data()", "column().data()", function() {
  return this.iterator("column-rows", d0, 1);
});
Qr("columns().render()", "column().render()", function(a) {
  return this.iterator("column-rows", function(p, g, w, L, B) {
    return d0(p, g, w, L, B, a);
  }, 1);
});
Qr("columns().dataSrc()", "column().dataSrc()", function() {
  return this.iterator("column", function(a, p) {
    return a.aoColumns[p].mData;
  }, 1);
});
Qr("columns().cache()", "column().cache()", function(a) {
  return this.iterator("column-rows", function(p, g, w, L, B) {
    return eo(
      p.aoData,
      B,
      a === "search" ? "_aFilterData" : "_aSortData",
      g
    );
  }, 1);
});
Qr("columns().init()", "column().init()", function() {
  return this.iterator("column", function(a, p) {
    return a.aoColumns[p];
  }, 1);
});
Qr("columns().nodes()", "column().nodes()", function() {
  return this.iterator("column-rows", function(a, p, g, w, L) {
    return eo(a.aoData, L, "anCells", p);
  }, 1);
});
Qr("columns().titles()", "column().title()", function(a, p) {
  return this.iterator("column", function(g, w) {
    typeof a == "number" && (p = a, a = void 0);
    var L = Xt("span.dt-column-title", this.column(w).header(p));
    return a !== void 0 ? (L.html(a), this) : L.html();
  }, 1);
});
Qr("columns().types()", "column().type()", function() {
  return this.iterator("column", function(a, p) {
    var g = a.aoColumns[p].sType;
    return g || es(a), g;
  }, 1);
});
Qr("columns().visible()", "column().visible()", function(a, p) {
  var g = this, w = [], L = this.iterator("column", function(B, f) {
    if (a === void 0)
      return B.aoColumns[f].bVisible;
    d1(B, f, a) && w.push(f);
  });
  return a !== void 0 && this.iterator("table", function(B) {
    Zo(B, B.aoHeader), Zo(B, B.aoFooter), B.aiDisplay.length || Xt(B.nTBody).find("td[colspan]").attr("colspan", ts(B)), is(B), g.iterator("column", function(f, d) {
      w.includes(d) && zr(f, null, "column-visibility", [f, d, a, p]);
    }), w.length && (p === void 0 || p) && g.columns.adjust();
  }), L;
});
Qr("columns().widths()", "column().width()", function() {
  var a = this.columns(":visible").count(), p = Xt("<tr>").html("<td>" + Array(a).join("</td><td>") + "</td>");
  Xt(this.table().body()).append(p);
  var g = p.children().map(function() {
    return Xt(this).outerWidth();
  });
  return p.remove(), this.iterator("column", function(w, L) {
    var B = ro(w, L);
    return B !== null ? g[B] : 0;
  }, 1);
});
Qr("columns().indexes()", "column().index()", function(a) {
  return this.iterator("column", function(p, g) {
    return a === "visible" ? ro(p, g) : g;
  }, 1);
});
Qe("columns.adjust()", function() {
  return this.iterator("table", function(a) {
    a.containerWidth = -1, _o(a);
  }, 1);
});
Qe("column.index()", function(a, p) {
  if (this.context.length !== 0) {
    var g = this.context[0];
    if (a === "fromVisible" || a === "toData")
      return qs(g, p);
    if (a === "fromData" || a === "toVisible")
      return ro(g, p);
  }
});
Qe("column()", function(a, p) {
  return c0(this.columns(a, p));
});
var v1 = function(a, p, g) {
  var w = a.aoData, L = ss(a, g), B = zf(eo(w, L, "anCells")), f = Xt($s([], B)), d, t = a.aoColumns.length, i, r, n, o, h, u, l = function(c) {
    var s = typeof c == "function";
    if (c == null || s) {
      for (i = [], r = 0, n = L.length; r < n; r++)
        for (d = L[r], o = 0; o < t; o++)
          h = {
            row: d,
            column: o
          }, s ? (u = w[d], c(h, ha(a, d, o), u.anCells ? u.anCells[o] : null) && i.push(h)) : i.push(h);
      return i;
    }
    if (Xt.isPlainObject(c))
      return c.column !== void 0 && c.row !== void 0 && L.indexOf(c.row) !== -1 ? [c] : [];
    var v = f.filter(c).map(function(y, x) {
      return {
        // use a new object, in case someone changes the values
        row: x._DT_CellIndex.row,
        column: x._DT_CellIndex.column
      };
    }).toArray();
    return v.length || !c.nodeName ? v : (u = Xt(c).closest("*[data-dt-row]"), u.length ? [{
      row: u.data("dt-row"),
      column: u.data("dt-column")
    }] : []);
  };
  return l0("cell", p, l, a, g);
};
Qe("cells()", function(a, p, g) {
  if (Xt.isPlainObject(a) && (a.row === void 0 ? (g = a, a = null) : (g = p, p = null)), Xt.isPlainObject(p) && (g = p, p = null), p == null)
    return this.iterator("table", function(o) {
      return v1(o, a, u0(g));
    });
  var w = g ? {
    page: g.page,
    order: g.order,
    search: g.search
  } : {}, L = this.columns(p, w), B = this.rows(a, w), f, d, t, i, r = this.iterator("table", function(o, h) {
    var u = [];
    for (f = 0, d = B[h].length; f < d; f++)
      for (t = 0, i = L[h].length; t < i; t++)
        u.push({
          row: B[h][f],
          column: L[h][t]
        });
    return u;
  }, 1), n = g && g.selected ? this.cells(r, g) : r;
  return Xt.extend(n.selector, {
    cols: p,
    rows: a,
    opts: g
  }), n;
});
Qr("cells().nodes()", "cell().node()", function() {
  return this.iterator("cell", function(a, p, g) {
    var w = a.aoData[p];
    return w && w.anCells ? w.anCells[g] : void 0;
  }, 1);
});
Qe("cells().data()", function() {
  return this.iterator("cell", function(a, p, g) {
    return ha(a, p, g);
  }, 1);
});
Qr("cells().cache()", "cell().cache()", function(a) {
  return a = a === "search" ? "_aFilterData" : "_aSortData", this.iterator("cell", function(p, g, w) {
    return p.aoData[g][a][w];
  }, 1);
});
Qr("cells().render()", "cell().render()", function(a) {
  return this.iterator("cell", function(p, g, w) {
    return ha(p, g, w, a);
  }, 1);
});
Qr("cells().indexes()", "cell().index()", function() {
  return this.iterator("cell", function(a, p, g) {
    return {
      row: p,
      column: g,
      columnVisible: ro(a, g)
    };
  }, 1);
});
Qr("cells().invalidate()", "cell().invalidate()", function(a) {
  return this.iterator("cell", function(p, g, w) {
    rs(p, g, a, w);
  });
});
Qe("cell()", function(a, p, g) {
  return c0(this.cells(a, p, g));
});
Qe("cell().data()", function(a) {
  var p = this.context, g = this[0];
  return a === void 0 ? p.length && g.length ? ha(p[0], g[0].row, g[0].column) : void 0 : (Ud(p[0], g[0].row, g[0].column, a), rs(p[0], g[0].row, "data", g[0].column), this);
});
Qe("order()", function(a, p) {
  var g = this.context, w = Array.prototype.slice.call(arguments);
  return a === void 0 ? g.length !== 0 ? g[0].aaSorting : void 0 : (typeof a == "number" ? a = [[a, p]] : w.length > 1 && (a = w), this.iterator("table", function(L) {
    L.aaSorting = Array.isArray(a) ? a.slice() : a;
  }));
});
Qe("order.listener()", function(a, p, g) {
  return this.iterator("table", function(w) {
    _f(w, a, {}, p, g);
  });
});
Qe("order.fixed()", function(a) {
  if (!a) {
    var p = this.context, g = p.length ? p[0].aaSortingFixed : void 0;
    return Array.isArray(g) ? { pre: g } : g;
  }
  return this.iterator("table", function(w) {
    w.aaSortingFixed = Xt.extend(!0, {}, a);
  });
});
Qe([
  "columns().order()",
  "column().order()"
], function(a) {
  var p = this;
  return a ? this.iterator("table", function(g, w) {
    g.aaSorting = p[w].map(function(L) {
      return [L, a];
    });
  }) : this.iterator("column", function(g, w) {
    for (var L = as(g), B = 0, f = L.length; B < f; B++)
      if (L[B].col === w)
        return L[B].dir;
    return null;
  }, 1);
});
Qr("columns().orderable()", "column().orderable()", function(a) {
  return this.iterator("column", function(p, g) {
    var w = p.aoColumns[g];
    return a ? w.asSorting : w.bSortable;
  }, 1);
});
Qe("processing()", function(a) {
  return this.iterator("table", function(p) {
    oa(p, a);
  });
});
Qe("search()", function(a, p, g, w) {
  var L = this.context;
  return a === void 0 ? L.length !== 0 ? L[0].oPreviousSearch.search : void 0 : this.iterator("table", function(B) {
    B.oFeatures.bFilter && (typeof p == "object" ? $i(B, Xt.extend(B.oPreviousSearch, p, {
      search: a
    })) : $i(B, Xt.extend(B.oPreviousSearch, {
      search: a,
      regex: p === null ? !1 : p,
      smart: g === null ? !0 : g,
      caseInsensitive: w === null ? !0 : w
    })));
  });
});
Qe("search.fixed()", function(a, p) {
  var g = this.iterator(!0, "table", function(w) {
    var L = w.searchFixed;
    if (a) {
      if (p === void 0)
        return L[a];
      p === null ? delete L[a] : L[a] = p;
    } else
      return Object.keys(L);
    return this;
  });
  return a !== void 0 && p === void 0 ? g[0] : g;
});
Qr(
  "columns().search()",
  "column().search()",
  function(a, p, g, w) {
    return this.iterator("column", function(L, B) {
      var f = L.aoPreSearchCols;
      if (a === void 0)
        return f[B].search;
      L.oFeatures.bFilter && (typeof p == "object" ? Xt.extend(f[B], p, {
        search: a
      }) : Xt.extend(f[B], {
        search: a,
        regex: p === null ? !1 : p,
        smart: g === null ? !0 : g,
        caseInsensitive: w === null ? !0 : w
      }), $i(L, L.oPreviousSearch));
    });
  }
);
Qe(
  [
    "columns().search.fixed()",
    "column().search.fixed()"
  ],
  function(a, p) {
    var g = this.iterator(!0, "column", function(w, L) {
      var B = w.aoColumns[L].searchFixed;
      if (a) {
        if (p === void 0)
          return B[a];
        p === null ? delete B[a] : B[a] = p;
      } else
        return Object.keys(B);
      return this;
    });
    return a !== void 0 && p === void 0 ? g[0] : g;
  }
);
Qe("state()", function(a, p) {
  if (!a)
    return this.context.length ? this.context[0].oSavedState : null;
  var g = Xt.extend(!0, {}, a);
  return this.iterator("table", function(w) {
    p !== !1 && (g.time = +/* @__PURE__ */ new Date() + 100), Gs(w, g, function() {
    });
  });
});
Qe("state.clear()", function() {
  return this.iterator("table", function(a) {
    a.fnStateSaveCallback.call(a.oInstance, a, {});
  });
});
Qe("state.loaded()", function() {
  return this.context.length ? this.context[0].oLoadedState : null;
});
Qe("state.save()", function() {
  return this.iterator("table", function(a) {
    is(a);
  });
});
var Tf, Ff;
de.use = function(a, p) {
  var g = typeof a == "string" ? p : a, w = typeof p == "string" ? p : a;
  if (g === void 0 && typeof w == "string")
    switch (w) {
      case "lib":
      case "jq":
        return Xt;
      case "win":
        return window;
      case "datetime":
        return de.DateTime;
      case "luxon":
        return ja;
      case "moment":
        return ti;
      case "bootstrap":
        return Tf || window.bootstrap;
      case "foundation":
        return Ff || window.Foundation;
      default:
        return null;
    }
  w === "lib" || w === "jq" || g && g.fn && g.fn.jquery ? Xt = g : w === "win" || g && g.document ? (window = g, document = g.document) : w === "datetime" || g && g.type === "DateTime" ? de.DateTime = g : w === "luxon" || g && g.FixedOffsetZone ? ja = g : w === "moment" || g && g.isMoment ? ti = g : w === "bootstrap" || g && g.Modal && g.Modal.NAME === "modal" ? Tf = g : (w === "foundation" || g && g.Reveal) && (Ff = g);
};
de.factory = function(a, p) {
  var g = !1;
  return a && a.document && (window = a, document = a.document), p && p.fn && p.fn.jquery && (Xt = p, g = !0), g;
};
de.versionCheck = function(a, p) {
  for (var g = p ? p.split(".") : de.version.split("."), w = a.split("."), L, B, f = 0, d = w.length; f < d; f++)
    if (L = parseInt(g[f], 10) || 0, B = parseInt(w[f], 10) || 0, L !== B)
      return L > B;
  return !0;
};
de.isDataTable = function(a) {
  var p = Xt(a).get(0), g = !1;
  return a instanceof de.Api ? !0 : (Xt.each(de.settings, function(w, L) {
    var B = L.nScrollHead ? Xt("table", L.nScrollHead)[0] : null, f = L.nScrollFoot ? Xt("table", L.nScrollFoot)[0] : null;
    (L.nTable === p || B === p || f === p) && (g = !0);
  }), g);
};
de.tables = function(a) {
  var p = !1;
  Xt.isPlainObject(a) && (p = a.api, a = a.visible);
  var g = de.settings.filter(function(w) {
    return !!(!a || a && Xt(w.nTable).is(":visible"));
  }).map(function(w) {
    return w.nTable;
  });
  return p ? new Fr(g) : g;
};
de.camelToHungarian = za;
Qe("$()", function(a, p) {
  var g = this.rows(p).nodes(), w = Xt(g);
  return Xt([].concat(
    w.filter(a).toArray(),
    w.find(a).toArray()
  ));
});
Xt.each(["on", "one", "off"], function(a, p) {
  Qe(p + "()", function() {
    var g = Array.prototype.slice.call(arguments);
    g[0] = g[0].split(/\s/).map(function(L) {
      return L.match(/\.dt\b/) ? L : L + ".dt";
    }).join(" ");
    var w = Xt(this.tables().nodes());
    return w[p].apply(w, g), this;
  });
});
Qe("clear()", function() {
  return this.iterator("table", function(a) {
    r0(a);
  });
});
Qe("error()", function(a) {
  return this.iterator("table", function(p) {
    ca(p, 0, a);
  });
});
Qe("settings()", function() {
  return new Fr(this.context, this.context);
});
Qe("init()", function() {
  var a = this.context;
  return a.length ? a[0].oInit : null;
});
Qe("data()", function() {
  return this.iterator("table", function(a) {
    return Ln(a.aoData, "_aData");
  }).flatten();
});
Qe("trigger()", function(a, p, g) {
  return this.iterator("table", function(w) {
    return zr(w, null, a, p, g);
  }).flatten();
});
Qe("ready()", function(a) {
  var p = this.context;
  return a ? this.tables().every(function() {
    var g = this;
    this.context[0]._bInitComplete ? a.call(g) : this.on("init.dt.DT", function() {
      a.call(g);
    });
  }) : p.length ? p[0]._bInitComplete || !1 : null;
});
Qe("destroy()", function(a) {
  return a = a || !1, this.iterator("table", function(p) {
    var g = p.oClasses, w = p.nTable, L = p.nTBody, B = p.nTHead, f = p.nTFoot, d = Xt(w), t = Xt(L), i = Xt(p.nTableWrapper), r = p.aoData.map(function(c) {
      return c ? c.nTr : null;
    }), n = g.order;
    p.bDestroying = !0, zr(p, "aoDestroyCallback", "destroy", [p], !0), a || new Fr(p).columns().visible(!0), p.resizeObserver && p.resizeObserver.disconnect(), i.off(".DT").find(":not(tbody *)").off(".DT"), Xt(window).off(".DT-" + p.sInstance), w != B.parentNode && (d.children("thead").detach(), d.append(B)), f && w != f.parentNode && (d.children("tfoot").detach(), d.append(f)), Xt(B).find("span.dt-column-order").remove(), Xt(B).find("span.dt-column-title").each(function() {
      var c = Xt(this).html();
      Xt(this).parent().append(c), Xt(this).remove();
    }), p.colgroup.remove(), p.aaSorting = [], p.aaSortingFixed = [], js(p), Xt(d).find("th, td").removeClass(
      Xt.map(de.ext.type.className, function(c) {
        return c;
      }).join(" ")
    ), Xt("th, td", B).removeClass(
      n.none + " " + n.canAsc + " " + n.canDesc + " " + n.isAsc + " " + n.isDesc
    ).css("width", "").removeAttr("data-dt-column").removeAttr("aria-sort"), t.children().detach(), t.append(r);
    var o = p.nTableWrapper.parentNode, h = p.nTableWrapper.nextSibling, u = a ? "remove" : "detach";
    d[u](), i[u](), !a && o && (o.insertBefore(w, h), d.css("width", p.sDestroyWidth).removeClass(g.table));
    var l = de.settings.indexOf(p);
    l !== -1 && de.settings.splice(l, 1);
  });
});
Xt.each(["column", "row", "cell"], function(a, p) {
  Qe(p + "s().every()", function(g) {
    var w = this.selector.opts, L = this, B, f = 0;
    return this.iterator("every", function(d, t, i) {
      B = L[p](t, w), p === "cell" ? g.call(B, B[0][0].row, B[0][0].column, i, f) : g.call(B, t, i, f), f++;
    });
  });
});
Qe("i18n()", function(a, p, g) {
  var w = this.context[0], L = wi(a)(w.oLanguage);
  return L === void 0 && (L = p), Xt.isPlainObject(L) && (L = g !== void 0 && L[g] !== void 0 ? L[g] : L._), typeof L == "string" ? L.replace("%d", g) : L;
});
de.version = "2.2.2";
de.settings = [];
de.models = {};
de.models.oSearch = {
  /**
   * Flag to indicate if the filtering should be case insensitive or not
   */
  caseInsensitive: !0,
  /**
   * Applied search term
   */
  search: "",
  /**
   * Flag to indicate if the search term should be interpreted as a
   * regular expression (true) or not (false) and therefore and special
   * regex characters escaped.
   */
  regex: !1,
  /**
   * Flag to indicate if DataTables is to use its smart filtering or not.
   */
  smart: !0,
  /**
   * Flag to indicate if DataTables should only trigger a search when
   * the return key is pressed.
   */
  return: !1
};
de.models.oRow = {
  /**
   * TR element for the row
   */
  nTr: null,
  /**
   * Array of TD elements for each row. This is null until the row has been
   * created.
   */
  anCells: null,
  /**
   * Data object from the original data source for the row. This is either
   * an array if using the traditional form of DataTables, or an object if
   * using mData options. The exact type will depend on the passed in
   * data from the data source, or will be an array if using DOM a data
   * source.
   */
  _aData: [],
  /**
   * Sorting data cache - this array is ostensibly the same length as the
   * number of columns (although each index is generated only as it is
   * needed), and holds the data that is used for sorting each column in the
   * row. We do this cache generation at the start of the sort in order that
   * the formatting of the sort data need be done only once for each cell
   * per sort. This array should not be read from or written to by anything
   * other than the master sorting methods.
   */
  _aSortData: null,
  /**
   * Per cell filtering data cache. As per the sort data cache, used to
   * increase the performance of the filtering in DataTables
   */
  _aFilterData: null,
  /**
   * Filtering data cache. This is the same as the cell filtering cache, but
   * in this case a string rather than an array. This is easily computed with
   * a join on `_aFilterData`, but is provided as a cache so the join isn't
   * needed on every search (memory traded for performance)
   */
  _sFilterRow: null,
  /**
   * Denote if the original data source was from the DOM, or the data source
   * object. This is used for invalidating data, so DataTables can
   * automatically read data from the original source, unless uninstructed
   * otherwise.
   */
  src: null,
  /**
   * Index in the aoData array. This saves an indexOf lookup when we have the
   * object, but want to know the index
   */
  idx: -1,
  /**
   * Cached display value
   */
  displayData: null
};
de.models.oColumn = {
  /**
   * Column index.
   */
  idx: null,
  /**
   * A list of the columns that sorting should occur on when this column
   * is sorted. That this property is an array allows multi-column sorting
   * to be defined for a column (for example first name / last name columns
   * would benefit from this). The values are integers pointing to the
   * columns to be sorted on (typically it will be a single integer pointing
   * at itself, but that doesn't need to be the case).
   */
  aDataSort: null,
  /**
   * Define the sorting directions that are applied to the column, in sequence
   * as the column is repeatedly sorted upon - i.e. the first value is used
   * as the sorting direction when the column if first sorted (clicked on).
   * Sort it again (click again) and it will move on to the next index.
   * Repeat until loop.
   */
  asSorting: null,
  /**
   * Flag to indicate if the column is searchable, and thus should be included
   * in the filtering or not.
   */
  bSearchable: null,
  /**
   * Flag to indicate if the column is sortable or not.
   */
  bSortable: null,
  /**
   * Flag to indicate if the column is currently visible in the table or not
   */
  bVisible: null,
  /**
   * Store for manual type assignment using the `column.type` option. This
   * is held in store so we can manipulate the column's `sType` property.
   */
  _sManualType: null,
  /**
   * Flag to indicate if HTML5 data attributes should be used as the data
   * source for filtering or sorting. True is either are.
   */
  _bAttrSrc: !1,
  /**
   * Developer definable function that is called whenever a cell is created (Ajax source,
   * etc) or processed for input (DOM source). This can be used as a compliment to mRender
   * allowing you to modify the DOM element (add background colour for example) when the
   * element is available.
   */
  fnCreatedCell: null,
  /**
   * Function to get data from a cell in a column. You should <b>never</b>
   * access data directly through _aData internally in DataTables - always use
   * the method attached to this property. It allows mData to function as
   * required. This function is automatically assigned by the column
   * initialisation method
   */
  fnGetData: null,
  /**
   * Function to set data for a cell in the column. You should <b>never</b>
   * set the data directly to _aData internally in DataTables - always use
   * this method. It allows mData to function as required. This function
   * is automatically assigned by the column initialisation method
   */
  fnSetData: null,
  /**
   * Property to read the value for the cells in the column from the data
   * source array / object. If null, then the default content is used, if a
   * function is given then the return from the function is used.
   */
  mData: null,
  /**
   * Partner property to mData which is used (only when defined) to get
   * the data - i.e. it is basically the same as mData, but without the
   * 'set' option, and also the data fed to it is the result from mData.
   * This is the rendering method to match the data method of mData.
   */
  mRender: null,
  /**
   * The class to apply to all TD elements in the table's TBODY for the column
   */
  sClass: null,
  /**
   * When DataTables calculates the column widths to assign to each column,
   * it finds the longest string in each column and then constructs a
   * temporary table and reads the widths from that. The problem with this
   * is that "mmm" is much wider then "iiii", but the latter is a longer
   * string - thus the calculation can go wrong (doing it properly and putting
   * it into an DOM object and measuring that is horribly(!) slow). Thus as
   * a "work around" we provide this option. It will append its value to the
   * text that is found to be the longest string for the column - i.e. padding.
   */
  sContentPadding: null,
  /**
   * Allows a default value to be given for a column's data, and will be used
   * whenever a null data source is encountered (this can be because mData
   * is set to null, or because the data source itself is null).
   */
  sDefaultContent: null,
  /**
   * Name for the column, allowing reference to the column by name as well as
   * by index (needs a lookup to work by name).
   */
  sName: null,
  /**
   * Custom sorting data type - defines which of the available plug-ins in
   * afnSortData the custom sorting will use - if any is defined.
   */
  sSortDataType: "std",
  /**
   * Class to be applied to the header element when sorting on this column
   */
  sSortingClass: null,
  /**
   * Title of the column - what is seen in the TH element (nTh).
   */
  sTitle: null,
  /**
   * Column sorting and filtering type
   */
  sType: null,
  /**
   * Width of the column
   */
  sWidth: null,
  /**
   * Width of the column when it was first "encountered"
   */
  sWidthOrig: null,
  /** Cached string which is the longest in the column */
  maxLenString: null,
  /**
   * Store for named searches
   */
  searchFixed: null
};
de.defaults = {
  /**
   * An array of data to use for the table, passed in at initialisation which
   * will be used in preference to any data which is already in the DOM. This is
   * particularly useful for constructing tables purely in Javascript, for
   * example with a custom Ajax call.
   */
  aaData: null,
  /**
   * If ordering is enabled, then DataTables will perform a first pass sort on
   * initialisation. You can define which column(s) the sort is performed
   * upon, and the sorting direction, with this variable. The `sorting` array
   * should contain an array for each column to be sorted initially containing
   * the column's index and a direction string ('asc' or 'desc').
   */
  aaSorting: [[0, "asc"]],
  /**
   * This parameter is basically identical to the `sorting` parameter, but
   * cannot be overridden by user interaction with the table. What this means
   * is that you could have a column (visible or hidden) which the sorting
   * will always be forced on first - any sorting after that (from the user)
   * will then be performed as required. This can be useful for grouping rows
   * together.
   */
  aaSortingFixed: [],
  /**
   * DataTables can be instructed to load data to display in the table from a
   * Ajax source. This option defines how that Ajax call is made and where to.
   *
   * The `ajax` property has three different modes of operation, depending on
   * how it is defined. These are:
   *
   * * `string` - Set the URL from where the data should be loaded from.
   * * `object` - Define properties for `jQuery.ajax`.
   * * `function` - Custom data get function
   *
   * `string`
   * --------
   *
   * As a string, the `ajax` property simply defines the URL from which
   * DataTables will load data.
   *
   * `object`
   * --------
   *
   * As an object, the parameters in the object are passed to
   * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control
   * of the Ajax request. DataTables has a number of default parameters which
   * you can override using this option. Please refer to the jQuery
   * documentation for a full description of the options available, although
   * the following parameters provide additional options in DataTables or
   * require special consideration:
   *
   * * `data` - As with jQuery, `data` can be provided as an object, but it
   *   can also be used as a function to manipulate the data DataTables sends
   *   to the server. The function takes a single parameter, an object of
   *   parameters with the values that DataTables has readied for sending. An
   *   object may be returned which will be merged into the DataTables
   *   defaults, or you can add the items to the object that was passed in and
   *   not return anything from the function. This supersedes `fnServerParams`
   *   from DataTables 1.9-.
   *
   * * `dataSrc` - By default DataTables will look for the property `data` (or
   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
   *   from an Ajax source or for server-side processing - this parameter
   *   allows that property to be changed. You can use Javascript dotted
   *   object notation to get a data source for multiple levels of nesting, or
   *   it my be used as a function. As a function it takes a single parameter,
   *   the JSON returned from the server, which can be manipulated as
   *   required, with the returned value being that used by DataTables as the
   *   data source for the table.
   *
   * * `success` - Should not be overridden it is used internally in
   *   DataTables. To manipulate / transform the data returned by the server
   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
   *
   * `function`
   * ----------
   *
   * As a function, making the Ajax call is left up to yourself allowing
   * complete control of the Ajax request. Indeed, if desired, a method other
   * than Ajax could be used to obtain the required data, such as Web storage
   * or an AIR database.
   *
   * The function is given four parameters and no return is required. The
   * parameters are:
   *
   * 1. _object_ - Data to send to the server
   * 2. _function_ - Callback function that must be executed when the required
   *    data has been obtained. That data should be passed into the callback
   *    as the only parameter
   * 3. _object_ - DataTables settings object for the table
   */
  ajax: null,
  /**
   * This parameter allows you to readily specify the entries in the length drop
   * down menu that DataTables shows when pagination is enabled. It can be
   * either a 1D array of options which will be used for both the displayed
   * option and the value, or a 2D array which will use the array in the first
   * position as the value, and the array in the second position as the
   * displayed options (useful for language strings such as 'All').
   *
   * Note that the `pageLength` property will be automatically set to the
   * first value given in this array, unless `pageLength` is also provided.
   */
  aLengthMenu: [10, 25, 50, 100],
  /**
   * The `columns` option in the initialisation parameter allows you to define
   * details about the way individual columns behave. For a full list of
   * column options that can be set, please see
   * {@link DataTable.defaults.column}. Note that if you use `columns` to
   * define your columns, you must have an entry in the array for every single
   * column that you have in your table (these can be null if you don't which
   * to specify any options).
   */
  aoColumns: null,
  /**
   * Very similar to `columns`, `columnDefs` allows you to target a specific
   * column, multiple columns, or all columns, using the `targets` property of
   * each object in the array. This allows great flexibility when creating
   * tables, as the `columnDefs` arrays can be of any length, targeting the
   * columns you specifically want. `columnDefs` may use any of the column
   * options available: {@link DataTable.defaults.column}, but it _must_
   * have `targets` defined in each object in the array. Values in the `targets`
   * array may be:
   *   <ul>
   *     <li>a string - class name will be matched on the TH for the column</li>
   *     <li>0 or a positive integer - column index counting from the left</li>
   *     <li>a negative integer - column index counting from the right</li>
   *     <li>the string "_all" - all columns (i.e. assign a default)</li>
   *   </ul>
   */
  aoColumnDefs: null,
  /**
   * Basically the same as `search`, this parameter defines the individual column
   * filtering state at initialisation time. The array must be of the same size
   * as the number of columns, and each element be an object with the parameters
   * `search` and `escapeRegex` (the latter is optional). 'null' is also
   * accepted and the default will be used.
   */
  aoSearchCols: [],
  /**
   * Enable or disable automatic column width calculation. This can be disabled
   * as an optimisation (it takes some time to calculate the widths) if the
   * tables widths are passed in using `columns`.
   */
  bAutoWidth: !0,
  /**
   * Deferred rendering can provide DataTables with a huge speed boost when you
   * are using an Ajax or JS data source for the table. This option, when set to
   * true, will cause DataTables to defer the creation of the table elements for
   * each row until they are needed for a draw - saving a significant amount of
   * time.
   */
  bDeferRender: !0,
  /**
   * Replace a DataTable which matches the given selector and replace it with
   * one which has the properties of the new initialisation object passed. If no
   * table matches the selector, then the new DataTable will be constructed as
   * per normal.
   */
  bDestroy: !1,
  /**
   * Enable or disable filtering of data. Filtering in DataTables is "smart" in
   * that it allows the end user to input multiple words (space separated) and
   * will match a row containing those words, even if not in the order that was
   * specified (this allow matching across multiple columns). Note that if you
   * wish to use filtering in DataTables this must remain 'true' - to remove the
   * default filtering input box and retain filtering abilities, please use
   * {@link DataTable.defaults.dom}.
   */
  bFilter: !0,
  /**
   * Used only for compatiblity with DT1
   * @deprecated
   */
  bInfo: !0,
  /**
   * Used only for compatiblity with DT1
   * @deprecated
   */
  bLengthChange: !0,
  /**
   * Enable or disable pagination.
   */
  bPaginate: !0,
  /**
   * Enable or disable the display of a 'processing' indicator when the table is
   * being processed (e.g. a sort). This is particularly useful for tables with
   * large amounts of data where it can take a noticeable amount of time to sort
   * the entries.
   */
  bProcessing: !1,
  /**
   * Retrieve the DataTables object for the given selector. Note that if the
   * table has already been initialised, this parameter will cause DataTables
   * to simply return the object that has already been set up - it will not take
   * account of any changes you might have made to the initialisation object
   * passed to DataTables (setting this parameter to true is an acknowledgement
   * that you understand this). `destroy` can be used to reinitialise a table if
   * you need.
   */
  bRetrieve: !1,
  /**
   * When vertical (y) scrolling is enabled, DataTables will force the height of
   * the table's viewport to the given height at all times (useful for layout).
   * However, this can look odd when filtering data down to a small data set,
   * and the footer is left "floating" further down. This parameter (when
   * enabled) will cause DataTables to collapse the table's viewport down when
   * the result set will fit within the given Y height.
   */
  bScrollCollapse: !1,
  /**
   * Configure DataTables to use server-side processing. Note that the
   * `ajax` parameter must also be given in order to give DataTables a
   * source to obtain the required data for each draw.
   */
  bServerSide: !1,
  /**
   * Enable or disable sorting of columns. Sorting of individual columns can be
   * disabled by the `sortable` option for each column.
   */
  bSort: !0,
  /**
   * Enable or display DataTables' ability to sort multiple columns at the
   * same time (activated by shift-click by the user).
   */
  bSortMulti: !0,
  /**
   * Allows control over whether DataTables should use the top (true) unique
   * cell that is found for a single column, or the bottom (false - default).
   * This is useful when using complex headers.
   */
  bSortCellsTop: null,
  /**
   * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
   * `sorting\_3` to the columns which are currently being sorted on. This is
   * presented as a feature switch as it can increase processing time (while
   * classes are removed and added) so for large data sets you might want to
   * turn this off.
   */
  bSortClasses: !0,
  /**
   * Enable or disable state saving. When enabled HTML5 `localStorage` will be
   * used to save table display information such as pagination information,
   * display length, filtering and sorting. As such when the end user reloads
   * the page the display display will match what thy had previously set up.
   */
  bStateSave: !1,
  /**
   * This function is called when a TR element is created (and all TD child
   * elements have been inserted), or registered if using a DOM source, allowing
   * manipulation of the TR element (adding classes etc).
   */
  fnCreatedRow: null,
  /**
   * This function is called on every 'draw' event, and allows you to
   * dynamically modify any aspect you want about the created DOM.
   */
  fnDrawCallback: null,
  /**
   * Identical to fnHeaderCallback() but for the table footer this function
   * allows you to modify the table footer on every 'draw' event.
   */
  fnFooterCallback: null,
  /**
   * When rendering large numbers in the information element for the table
   * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
   * to have a comma separator for the 'thousands' units (e.g. 1 million is
   * rendered as "1,000,000") to help readability for the end user. This
   * function will override the default method DataTables uses.
   */
  fnFormatNumber: function(a) {
    return a.toString().replace(
      /\B(?=(\d{3})+(?!\d))/g,
      this.oLanguage.sThousands
    );
  },
  /**
   * This function is called on every 'draw' event, and allows you to
   * dynamically modify the header row. This can be used to calculate and
   * display useful information about the table.
   */
  fnHeaderCallback: null,
  /**
   * The information element can be used to convey information about the current
   * state of the table. Although the internationalisation options presented by
   * DataTables are quite capable of dealing with most customisations, there may
   * be times where you wish to customise the string further. This callback
   * allows you to do exactly that.
   */
  fnInfoCallback: null,
  /**
   * Called when the table has been initialised. Normally DataTables will
   * initialise sequentially and there will be no need for this function,
   * however, this does not hold true when using external language information
   * since that is obtained using an async XHR call.
   */
  fnInitComplete: null,
  /**
   * Called at the very start of each table draw and can be used to cancel the
   * draw by returning false, any other return (including undefined) results in
   * the full draw occurring).
   */
  fnPreDrawCallback: null,
  /**
   * This function allows you to 'post process' each row after it have been
   * generated for each table draw, but before it is rendered on screen. This
   * function might be used for setting the row class name etc.
   */
  fnRowCallback: null,
  /**
   * Load the table state. With this function you can define from where, and how, the
   * state of a table is loaded. By default DataTables will load from `localStorage`
   * but you might wish to use a server-side database or cookies.
   */
  fnStateLoadCallback: function(a) {
    try {
      return JSON.parse(
        (a.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
          "DataTables_" + a.sInstance + "_" + location.pathname
        )
      );
    } catch (p) {
      return {};
    }
  },
  /**
   * Callback which allows modification of the saved state prior to loading that state.
   * This callback is called when the table is loading state from the stored data, but
   * prior to the settings object being modified by the saved state. Note that for
   * plug-in authors, you should use the `stateLoadParams` event to load parameters for
   * a plug-in.
   */
  fnStateLoadParams: null,
  /**
   * Callback that is called when the state has been loaded from the state saving method
   * and the DataTables settings object has been modified as a result of the loaded state.
   */
  fnStateLoaded: null,
  /**
   * Save the table state. This function allows you to define where and how the state
   * information for the table is stored By default DataTables will use `localStorage`
   * but you might wish to use a server-side database or cookies.
   */
  fnStateSaveCallback: function(a, p) {
    try {
      (a.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
        "DataTables_" + a.sInstance + "_" + location.pathname,
        JSON.stringify(p)
      );
    } catch (g) {
    }
  },
  /**
   * Callback which allows modification of the state to be saved. Called when the table
   * has changed state a new state save is required. This method allows modification of
   * the state saving object prior to actually doing the save, including addition or
   * other state properties or modification. Note that for plug-in authors, you should
   * use the `stateSaveParams` event to save parameters for a plug-in.
   */
  fnStateSaveParams: null,
  /**
   * Duration for which the saved state information is considered valid. After this period
   * has elapsed the state will be returned to the default.
   * Value is given in seconds.
   */
  iStateDuration: 7200,
  /**
   * Number of rows to display on a single page when using pagination. If
   * feature enabled (`lengthChange`) then the end user will be able to override
   * this to a custom setting using a pop-up menu.
   */
  iDisplayLength: 10,
  /**
   * Define the starting point for data display when using DataTables with
   * pagination. Note that this parameter is the number of records, rather than
   * the page number, so if you have 10 records per page and want to start on
   * the third page, it should be "20".
   */
  iDisplayStart: 0,
  /**
   * By default DataTables allows keyboard navigation of the table (sorting, paging,
   * and filtering) by adding a `tabindex` attribute to the required elements. This
   * allows you to tab through the controls and press the enter key to activate them.
   * The tabindex is default 0, meaning that the tab follows the flow of the document.
   * You can overrule this using this parameter if you wish. Use a value of -1 to
   * disable built-in keyboard navigation.
   */
  iTabIndex: 0,
  /**
   * Classes that DataTables assigns to the various components and features
   * that it adds to the HTML table. This allows classes to be configured
   * during initialisation in addition to through the static
   * {@link DataTable.ext.oStdClasses} object).
   */
  oClasses: {},
  /**
   * All strings that DataTables uses in the user interface that it creates
   * are defined in this object, allowing you to modified them individually or
   * completely replace them all as required.
   */
  oLanguage: {
    /**
     * Strings that are used for WAI-ARIA labels and controls only (these are not
     * actually visible on the page, but will be read by screenreaders, and thus
     * must be internationalised as well).
     */
    oAria: {
      /**
       * ARIA label that is added to the table headers when the column may be sorted
       */
      orderable: ": Activate to sort",
      /**
       * ARIA label that is added to the table headers when the column is currently being sorted
       */
      orderableReverse: ": Activate to invert sorting",
      /**
       * ARIA label that is added to the table headers when the column is currently being 
       * sorted and next step is to remove sorting
       */
      orderableRemove: ": Activate to remove sorting",
      paginate: {
        first: "First",
        last: "Last",
        next: "Next",
        previous: "Previous",
        number: ""
      }
    },
    /**
     * Pagination string used by DataTables for the built-in pagination
     * control types.
     */
    oPaginate: {
      /**
       * Label and character for first page button (Â«)
       */
      sFirst: "Â«",
      /**
       * Last page button (Â»)
       */
      sLast: "Â»",
      /**
       * Next page button (âº)
       */
      sNext: "âº",
      /**
       * Previous page button (â¹)
       */
      sPrevious: "â¹"
    },
    /**
     * Plural object for the data type the table is showing
     */
    entries: {
      _: "entries",
      1: "entry"
    },
    /**
     * This string is shown in preference to `zeroRecords` when the table is
     * empty of data (regardless of filtering). Note that this is an optional
     * parameter - if it is not given, the value of `zeroRecords` will be used
     * instead (either the default or given value).
     */
    sEmptyTable: "No data available in table",
    /**
     * This string gives information to the end user about the information
     * that is current on display on the page. The following tokens can be
     * used in the string and will be dynamically replaced as the table
     * display updates. This tokens can be placed anywhere in the string, or
     * removed as needed by the language requires:
     *
     * * `\_START\_` - Display index of the first record on the current page
     * * `\_END\_` - Display index of the last record on the current page
     * * `\_TOTAL\_` - Number of records in the table after filtering
     * * `\_MAX\_` - Number of records in the table without filtering
     * * `\_PAGE\_` - Current page number
     * * `\_PAGES\_` - Total number of pages of data in the table
     */
    sInfo: "Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_",
    /**
     * Display information string for when the table is empty. Typically the
     * format of this string should match `info`.
     */
    sInfoEmpty: "Showing 0 to 0 of 0 _ENTRIES-TOTAL_",
    /**
     * When a user filters the information in a table, this string is appended
     * to the information (`info`) to give an idea of how strong the filtering
     * is. The variable _MAX_ is dynamically updated.
     */
    sInfoFiltered: "(filtered from _MAX_ total _ENTRIES-MAX_)",
    /**
     * If can be useful to append extra information to the info string at times,
     * and this variable does exactly that. This information will be appended to
     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
     * being used) at all times.
     */
    sInfoPostFix: "",
    /**
     * This decimal place operator is a little different from the other
     * language options since DataTables doesn't output floating point
     * numbers, so it won't ever use this for display of a number. Rather,
     * what this parameter does is modify the sort methods of the table so
     * that numbers which are in a format which has a character other than
     * a period (`.`) as a decimal place will be sorted numerically.
     *
     * Note that numbers with different decimal places cannot be shown in
     * the same table and still be sortable, the table must be consistent.
     * However, multiple different tables on the page can use different
     * decimal place characters.
     */
    sDecimal: "",
    /**
     * DataTables has a build in number formatter (`formatNumber`) which is
     * used to format large numbers that are used in the table information.
     * By default a comma is used, but this can be trivially changed to any
     * character you wish with this parameter.
     */
    sThousands: ",",
    /**
     * Detail the action that will be taken when the drop down menu for the
     * pagination length option is changed. The '_MENU_' variable is replaced
     * with a default select list of 10, 25, 50 and 100, and can be replaced
     * with a custom select box if required.
     */
    sLengthMenu: "_MENU_ _ENTRIES_ per page",
    /**
     * When using Ajax sourced data and during the first draw when DataTables is
     * gathering the data, this message is shown in an empty row in the table to
     * indicate to the end user the the data is being loaded. Note that this
     * parameter is not used when loading data by server-side processing, just
     * Ajax sourced data with client-side processing.
     */
    sLoadingRecords: "Loading...",
    /**
     * Text which is displayed when the table is processing a user action
     * (usually a sort command or similar).
     */
    sProcessing: "",
    /**
     * Details the actions that will be taken when the user types into the
     * filtering input text box. The variable "_INPUT_", if used in the string,
     * is replaced with the HTML text box for the filtering input allowing
     * control over where it appears in the string. If "_INPUT_" is not given
     * then the input box is appended to the string automatically.
     */
    sSearch: "Search:",
    /**
     * Assign a `placeholder` attribute to the search `input` element
     *  @type string
     *  @default 
     *
     *  @dtopt Language
     *  @name DataTable.defaults.language.searchPlaceholder
     */
    sSearchPlaceholder: "",
    /**
     * All of the language information can be stored in a file on the
     * server-side, which DataTables will look up if this parameter is passed.
     * It must store the URL of the language file, which is in a JSON format,
     * and the object has the same properties as the oLanguage object in the
     * initialiser object (i.e. the above parameters). Please refer to one of
     * the example language files to see how this works in action.
     */
    sUrl: "",
    /**
     * Text shown inside the table records when the is no information to be
     * displayed after filtering. `emptyTable` is shown when there is simply no
     * information in the table at all (regardless of filtering).
     */
    sZeroRecords: "No matching records found"
  },
  /** The initial data order is reversed when `desc` ordering */
  orderDescReverse: !0,
  /**
   * This parameter allows you to have define the global filtering state at
   * initialisation time. As an object the `search` parameter must be
   * defined, but all other parameters are optional. When `regex` is true,
   * the search string will be treated as a regular expression, when false
   * (default) it will be treated as a straight string. When `smart`
   * DataTables will use it's smart filtering methods (to word match at
   * any point in the data), when false this will not be done.
   */
  oSearch: Xt.extend({}, de.models.oSearch),
  /**
   * Table and control layout. This replaces the legacy `dom` option.
   */
  layout: {
    topStart: "pageLength",
    topEnd: "search",
    bottomStart: "info",
    bottomEnd: "paging"
  },
  /**
   * Legacy DOM layout option
   */
  sDom: null,
  /**
   * Search delay option. This will throttle full table searches that use the
   * DataTables provided search input element (it does not effect calls to
   * `dt-api search()`, providing a delay before the search is made.
   */
  searchDelay: null,
  /**
   * DataTables features six different built-in options for the buttons to
   * display for pagination control:
   *
   * * `numbers` - Page number buttons only
   * * `simple` - 'Previous' and 'Next' buttons only
   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers
   */
  sPaginationType: "",
  /**
   * Enable horizontal scrolling. When a table is too wide to fit into a
   * certain layout, or you have a large number of columns in the table, you
   * can enable x-scrolling to show the table in a viewport, which can be
   * scrolled. This property can be `true` which will allow the table to
   * scroll horizontally when needed, or any CSS unit, or a number (in which
   * case it will be treated as a pixel measurement). Setting as simply `true`
   * is recommended.
   */
  sScrollX: "",
  /**
   * This property can be used to force a DataTable to use more width than it
   * might otherwise do when x-scrolling is enabled. For example if you have a
   * table which requires to be well spaced, this parameter is useful for
   * "over-sizing" the table, and thus forcing scrolling. This property can by
   * any CSS unit, or a number (in which case it will be treated as a pixel
   * measurement).
   */
  sScrollXInner: "",
  /**
   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
   * to the given height, and enable scrolling for any data which overflows the
   * current viewport. This can be used as an alternative to paging to display
   * a lot of data in a small area (although paging and scrolling can both be
   * enabled at the same time). This property can be any CSS unit, or a number
   * (in which case it will be treated as a pixel measurement).
   */
  sScrollY: "",
  /**
   * __Deprecated__ The functionality provided by this parameter has now been
   * superseded by that provided through `ajax`, which should be used instead.
   *
   * Set the HTTP method that is used to make the Ajax call for server-side
   * processing or Ajax sourced data.
   */
  sServerMethod: "GET",
  /**
   * DataTables makes use of renderers when displaying HTML elements for
   * a table. These renderers can be added or modified by plug-ins to
   * generate suitable mark-up for a site. For example the Bootstrap
   * integration plug-in for DataTables uses a paging button renderer to
   * display pagination buttons in the mark-up required by Bootstrap.
   *
   * For further information about the renderers available see
   * DataTable.ext.renderer
   */
  renderer: null,
  /**
   * Set the data property name that DataTables should use to get a row's id
   * to set as the `id` property in the node.
   */
  rowId: "DT_RowId",
  /**
   * Caption value
   */
  caption: null,
  /**
   * For server-side processing - use the data from the DOM for the first draw
   */
  iDeferLoading: null
};
qo(de.defaults);
de.defaults.column = {
  /**
   * Define which column(s) an order will occur on for this column. This
   * allows a column's ordering to take multiple columns into account when
   * doing a sort or use the data from a different column. For example first
   * name / last name columns make sense to do a multi-column sort over the
   * two columns.
   */
  aDataSort: null,
  iDataSort: -1,
  ariaTitle: "",
  /**
   * You can control the default ordering direction, and even alter the
   * behaviour of the sort handler (i.e. only allow ascending ordering etc)
   * using this parameter.
   */
  asSorting: ["asc", "desc", ""],
  /**
   * Enable or disable filtering on the data in this column.
   */
  bSearchable: !0,
  /**
   * Enable or disable ordering on this column.
   */
  bSortable: !0,
  /**
   * Enable or disable the display of this column.
   */
  bVisible: !0,
  /**
   * Developer definable function that is called whenever a cell is created (Ajax source,
   * etc) or processed for input (DOM source). This can be used as a compliment to mRender
   * allowing you to modify the DOM element (add background colour for example) when the
   * element is available.
   */
  fnCreatedCell: null,
  /**
   * This property can be used to read data from any data source property,
   * including deeply nested objects / properties. `data` can be given in a
   * number of different ways which effect its behaviour:
   *
   * * `integer` - treated as an array index for the data source. This is the
   *   default that DataTables uses (incrementally increased for each column).
   * * `string` - read an object property from the data source. There are
   *   three 'special' options that can be used in the string to alter how
   *   DataTables reads the data from the source object:
   *    * `.` - Dotted Javascript notation. Just as you use a `.` in
   *      Javascript to read from nested objects, so to can the options
   *      specified in `data`. For example: `browser.version` or
   *      `browser.name`. If your object parameter name contains a period, use
   *      `\\` to escape it - i.e. `first\\.name`.
   *    * `[]` - Array notation. DataTables can automatically combine data
   *      from and array source, joining the data with the characters provided
   *      between the two brackets. For example: `name[, ]` would provide a
   *      comma-space separated list from the source array. If no characters
   *      are provided between the brackets, the original array source is
   *      returned.
   *    * `()` - Function notation. Adding `()` to the end of a parameter will
   *      execute a function of the name given. For example: `browser()` for a
   *      simple function on the data source, `browser.version()` for a
   *      function in a nested property or even `browser().version` to get an
   *      object property if the function called returns an object. Note that
   *      function notation is recommended for use in `render` rather than
   *      `data` as it is much simpler to use as a renderer.
   * * `null` - use the original data source for the row rather than plucking
   *   data directly from it. This action has effects on two other
   *   initialisation options:
   *    * `defaultContent` - When null is given as the `data` option and
   *      `defaultContent` is specified for the column, the value defined by
   *      `defaultContent` will be used for the cell.
   *    * `render` - When null is used for the `data` option and the `render`
   *      option is specified for the column, the whole data source for the
   *      row is used for the renderer.
   * * `function` - the function given will be executed whenever DataTables
   *   needs to set or get the data for a cell in the column. The function
   *   takes three parameters:
   *    * Parameters:
   *      * `{array|object}` The data source for the row
   *      * `{string}` The type call data requested - this will be 'set' when
   *        setting data or 'filter', 'display', 'type', 'sort' or undefined
   *        when gathering data. Note that when `undefined` is given for the
   *        type DataTables expects to get the raw data for the object back<
   *      * `{*}` Data to set when the second parameter is 'set'.
   *    * Return:
   *      * The return value from the function is not required when 'set' is
   *        the type of call, but otherwise the return is what will be used
   *        for the data requested.
   *
   * Note that `data` is a getter and setter option. If you just require
   * formatting of data for output, you will likely want to use `render` which
   * is simply a getter and thus simpler to use.
   *
   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
   * name change reflects the flexibility of this property and is consistent
   * with the naming of mRender. If 'mDataProp' is given, then it will still
   * be used by DataTables, as it automatically maps the old name to the new
   * if required.
   */
  mData: null,
  /**
   * This property is the rendering partner to `data` and it is suggested that
   * when you want to manipulate data for display (including filtering,
   * sorting etc) without altering the underlying data for the table, use this
   * property. `render` can be considered to be the the read only companion to
   * `data` which is read / write (then as such more complex). Like `data`
   * this option can be given in a number of different ways to effect its
   * behaviour:
   *
   * * `integer` - treated as an array index for the data source. This is the
   *   default that DataTables uses (incrementally increased for each column).
   * * `string` - read an object property from the data source. There are
   *   three 'special' options that can be used in the string to alter how
   *   DataTables reads the data from the source object:
   *    * `.` - Dotted Javascript notation. Just as you use a `.` in
   *      Javascript to read from nested objects, so to can the options
   *      specified in `data`. For example: `browser.version` or
   *      `browser.name`. If your object parameter name contains a period, use
   *      `\\` to escape it - i.e. `first\\.name`.
   *    * `[]` - Array notation. DataTables can automatically combine data
   *      from and array source, joining the data with the characters provided
   *      between the two brackets. For example: `name[, ]` would provide a
   *      comma-space separated list from the source array. If no characters
   *      are provided between the brackets, the original array source is
   *      returned.
   *    * `()` - Function notation. Adding `()` to the end of a parameter will
   *      execute a function of the name given. For example: `browser()` for a
   *      simple function on the data source, `browser.version()` for a
   *      function in a nested property or even `browser().version` to get an
   *      object property if the function called returns an object.
   * * `object` - use different data for the different data types requested by
   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
   *   of the object is the data type the property refers to and the value can
   *   defined using an integer, string or function using the same rules as
   *   `render` normally does. Note that an `_` option _must_ be specified.
   *   This is the default value to use if you haven't specified a value for
   *   the data type requested by DataTables.
   * * `function` - the function given will be executed whenever DataTables
   *   needs to set or get the data for a cell in the column. The function
   *   takes three parameters:
   *    * Parameters:
   *      * {array|object} The data source for the row (based on `data`)
   *      * {string} The type call data requested - this will be 'filter',
   *        'display', 'type' or 'sort'.
   *      * {array|object} The full data source for the row (not based on
   *        `data`)
   *    * Return:
   *      * The return value from the function is what will be used for the
   *        data requested.
   */
  mRender: null,
  /**
   * Change the cell type created for the column - either TD cells or TH cells. This
   * can be useful as TH cells have semantic meaning in the table body, allowing them
   * to act as a header for a row (you may wish to add scope='row' to the TH elements).
   */
  sCellType: "td",
  /**
   * Class to give to each cell in this column.
   */
  sClass: "",
  /**
   * When DataTables calculates the column widths to assign to each column,
   * it finds the longest string in each column and then constructs a
   * temporary table and reads the widths from that. The problem with this
   * is that "mmm" is much wider then "iiii", but the latter is a longer
   * string - thus the calculation can go wrong (doing it properly and putting
   * it into an DOM object and measuring that is horribly(!) slow). Thus as
   * a "work around" we provide this option. It will append its value to the
   * text that is found to be the longest string for the column - i.e. padding.
   * Generally you shouldn't need this!
   */
  sContentPadding: "",
  /**
   * Allows a default value to be given for a column's data, and will be used
   * whenever a null data source is encountered (this can be because `data`
   * is set to null, or because the data source itself is null).
   */
  sDefaultContent: null,
  /**
   * This parameter is only used in DataTables' server-side processing. It can
   * be exceptionally useful to know what columns are being displayed on the
   * client side, and to map these to database fields. When defined, the names
   * also allow DataTables to reorder information from the server if it comes
   * back in an unexpected order (i.e. if you switch your columns around on the
   * client-side, your server-side code does not also need updating).
   */
  sName: "",
  /**
   * Defines a data source type for the ordering which can be used to read
   * real-time information from the table (updating the internally cached
   * version) prior to ordering. This allows ordering to occur on user
   * editable elements such as form inputs.
   */
  sSortDataType: "std",
  /**
   * The title of this column.
   */
  sTitle: null,
  /**
   * The type allows you to specify how the data for this column will be
   * ordered. Four types (string, numeric, date and html (which will strip
   * HTML tags before ordering)) are currently available. Note that only date
   * formats understood by Javascript's Date() object will be accepted as type
   * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
   * 'numeric', 'date' or 'html' (by default). Further types can be adding
   * through plug-ins.
   */
  sType: null,
  /**
   * Defining the width of the column, this parameter may take any CSS value
   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
   * been given a specific width through this interface ensuring that the table
   * remains readable.
   */
  sWidth: null
};
qo(de.defaults.column);
de.models.oSettings = {
  /**
   * Primary features of DataTables and their enablement state.
   */
  oFeatures: {
    /**
     * Flag to say if DataTables should automatically try to calculate the
     * optimum table and columns widths (true) or not (false).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bAutoWidth: null,
    /**
     * Delay the creation of TR and TD elements until they are actually
     * needed by a driven page draw. This can give a significant speed
     * increase for Ajax source and Javascript source data, but makes no
     * difference at all for DOM and server-side processing tables.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bDeferRender: null,
    /**
     * Enable filtering on the table or not. Note that if this is disabled
     * then there is no filtering at all on the table, including fnFilter.
     * To just remove the filtering input use sDom and remove the 'f' option.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bFilter: null,
    /**
     * Used only for compatiblity with DT1
     * @deprecated
     */
    bInfo: !0,
    /**
     * Used only for compatiblity with DT1
     * @deprecated
     */
    bLengthChange: !0,
    /**
     * Pagination enabled or not. Note that if this is disabled then length
     * changing must also be disabled.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bPaginate: null,
    /**
     * Processing indicator enable flag whenever DataTables is enacting a
     * user request - typically an Ajax request for server-side processing.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bProcessing: null,
    /**
     * Server-side processing enabled flag - when enabled DataTables will
     * get all data from the server for every draw - there is no filtering,
     * sorting or paging done on the client-side.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bServerSide: null,
    /**
     * Sorting enablement flag.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSort: null,
    /**
     * Multi-column sorting
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSortMulti: null,
    /**
     * Apply a class to the columns which are being sorted to provide a
     * visual highlight or not. This can slow things down when enabled since
     * there is a lot of DOM interaction.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSortClasses: null,
    /**
     * State saving enablement flag.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bStateSave: null
  },
  /**
   * Scrolling settings for a table.
   */
  oScroll: {
    /**
     * When the table is shorter in height than sScrollY, collapse the
     * table container down to the height of the table (when true).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bCollapse: null,
    /**
     * Width of the scrollbar for the web-browser's platform. Calculated
     * during table initialisation.
     */
    iBarWidth: 0,
    /**
     * Viewport width for horizontal scrolling. Horizontal scrolling is
     * disabled if an empty string.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    sX: null,
    /**
     * Width to expand the table to when using x-scrolling. Typically you
     * should not need to use this.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @deprecated
     */
    sXInner: null,
    /**
     * Viewport height for vertical scrolling. Vertical scrolling is disabled
     * if an empty string.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    sY: null
  },
  /**
   * Language information for the table.
   */
  oLanguage: {
    /**
     * Information callback function. See
     * {@link DataTable.defaults.fnInfoCallback}
     */
    fnInfoCallback: null
  },
  /**
   * Browser support parameters
   */
  oBrowser: {
    /**
     * Determine if the vertical scrollbar is on the right or left of the
     * scrolling container - needed for rtl language layout, although not
     * all browsers move the scrollbar (Safari).
     */
    bScrollbarLeft: !1,
    /**
     * Browser scrollbar width
     */
    barWidth: 0
  },
  ajax: null,
  /**
   * Array referencing the nodes which are used for the features. The
   * parameters of this object match what is allowed by sDom - i.e.
   *   <ul>
   *     <li>'l' - Length changing</li>
   *     <li>'f' - Filtering input</li>
   *     <li>'t' - The table!</li>
   *     <li>'i' - Information</li>
   *     <li>'p' - Pagination</li>
   *     <li>'r' - pRocessing</li>
   *   </ul>
   */
  aanFeatures: [],
  /**
   * Store data information - see {@link DataTable.models.oRow} for detailed
   * information.
   */
  aoData: [],
  /**
   * Array of indexes which are in the current display (after filtering etc)
   */
  aiDisplay: [],
  /**
   * Array of indexes for display - no filtering
   */
  aiDisplayMaster: [],
  /**
   * Map of row ids to data indexes
   */
  aIds: {},
  /**
   * Store information about each column that is in use
   */
  aoColumns: [],
  /**
   * Store information about the table's header
   */
  aoHeader: [],
  /**
   * Store information about the table's footer
   */
  aoFooter: [],
  /**
   * Store the applied global search information in case we want to force a
   * research or compare the old search to a new one.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  oPreviousSearch: {},
  /**
   * Store for named searches
   */
  searchFixed: {},
  /**
   * Store the applied search for each column - see
   * {@link DataTable.models.oSearch} for the format that is used for the
   * filtering information for each column.
   */
  aoPreSearchCols: [],
  /**
   * Sorting that is applied to the table. Note that the inner arrays are
   * used in the following manner:
   * <ul>
   *   <li>Index 0 - column number</li>
   *   <li>Index 1 - current sorting direction</li>
   * </ul>
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aaSorting: null,
  /**
   * Sorting that is always applied to the table (i.e. prefixed in front of
   * aaSorting).
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aaSortingFixed: [],
  /**
   * If restoring a table - we should restore its width
   */
  sDestroyWidth: 0,
  /**
   * Callback functions array for every time a row is inserted (i.e. on a draw).
   */
  aoRowCallback: [],
  /**
   * Callback functions for the header on each draw.
   */
  aoHeaderCallback: [],
  /**
   * Callback function for the footer on each draw.
   */
  aoFooterCallback: [],
  /**
   * Array of callback functions for draw callback functions
   */
  aoDrawCallback: [],
  /**
   * Array of callback functions for row created function
   */
  aoRowCreatedCallback: [],
  /**
   * Callback functions for just before the table is redrawn. A return of
   * false will be used to cancel the draw.
   */
  aoPreDrawCallback: [],
  /**
   * Callback functions for when the table has been initialised.
   */
  aoInitComplete: [],
  /**
   * Callbacks for modifying the settings to be stored for state saving, prior to
   * saving state.
   */
  aoStateSaveParams: [],
  /**
   * Callbacks for modifying the settings that have been stored for state saving
   * prior to using the stored values to restore the state.
   */
  aoStateLoadParams: [],
  /**
   * Callbacks for operating on the settings object once the saved state has been
   * loaded
   */
  aoStateLoaded: [],
  /**
   * Cache the table ID for quick access
   */
  sTableId: "",
  /**
   * The TABLE node for the main table
   */
  nTable: null,
  /**
   * Permanent ref to the thead element
   */
  nTHead: null,
  /**
   * Permanent ref to the tfoot element - if it exists
   */
  nTFoot: null,
  /**
   * Permanent ref to the tbody element
   */
  nTBody: null,
  /**
   * Cache the wrapper node (contains all DataTables controlled elements)
   */
  nTableWrapper: null,
  /**
   * Indicate if all required information has been read in
   */
  bInitialised: !1,
  /**
   * Information about open rows. Each object in the array has the parameters
   * 'nTr' and 'nParent'
   */
  aoOpenRows: [],
  /**
   * Dictate the positioning of DataTables' control elements - see
   * {@link DataTable.model.oInit.sDom}.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sDom: null,
  /**
   * Search delay (in mS)
   */
  searchDelay: null,
  /**
   * Which type of pagination should be used.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sPaginationType: "two_button",
  /**
   * Number of paging controls on the page. Only used for backwards compatibility
   */
  pagingControls: 0,
  /**
   * The state duration (for `stateSave`) in seconds.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  iStateDuration: 0,
  /**
   * Array of callback functions for state saving. Each array element is an
   * object with the following parameters:
   *   <ul>
   *     <li>function:fn - function to call. Takes two parameters, oSettings
   *       and the JSON string to save that has been thus far created. Returns
   *       a JSON string to be inserted into a json object
   *       (i.e. '"param": [ 0, 1, 2]')</li>
   *     <li>string:sName - name of callback</li>
   *   </ul>
   */
  aoStateSave: [],
  /**
   * Array of callback functions for state loading. Each array element is an
   * object with the following parameters:
   *   <ul>
   *     <li>function:fn - function to call. Takes two parameters, oSettings
   *       and the object stored. May return false to cancel state loading</li>
   *     <li>string:sName - name of callback</li>
   *   </ul>
   */
  aoStateLoad: [],
  /**
   * State that was saved. Useful for back reference
   */
  oSavedState: null,
  /**
   * State that was loaded. Useful for back reference
   */
  oLoadedState: null,
  /**
   * Note if draw should be blocked while getting data
   */
  bAjaxDataGet: !0,
  /**
   * The last jQuery XHR object that was used for server-side data gathering.
   * This can be used for working with the XHR information in one of the
   * callbacks
   */
  jqXHR: null,
  /**
   * JSON returned from the server in the last Ajax request
   */
  json: void 0,
  /**
   * Data submitted as part of the last Ajax request
   */
  oAjaxData: void 0,
  /**
   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
   * required).
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sServerMethod: null,
  /**
   * Format numbers for display.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  fnFormatNumber: null,
  /**
   * List of options that can be used for the user selectable length menu.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aLengthMenu: null,
  /**
   * Counter for the draws that the table does. Also used as a tracker for
   * server-side processing
   */
  iDraw: 0,
  /**
   * Indicate if a redraw is being done - useful for Ajax
   */
  bDrawing: !1,
  /**
   * Draw index (iDraw) of the last error when parsing the returned data
   */
  iDrawError: -1,
  /**
   * Paging display length
   */
  _iDisplayLength: 10,
  /**
   * Paging start point - aiDisplay index
   */
  _iDisplayStart: 0,
  /**
   * Server-side processing - number of records in the result set
   * (i.e. before filtering), Use fnRecordsTotal rather than
   * this property to get the value of the number of records, regardless of
   * the server-side processing setting.
   */
  _iRecordsTotal: 0,
  /**
   * Server-side processing - number of records in the current display set
   * (i.e. after filtering). Use fnRecordsDisplay rather than
   * this property to get the value of the number of records, regardless of
   * the server-side processing setting.
   */
  _iRecordsDisplay: 0,
  /**
   * The classes to use for the table
   */
  oClasses: {},
  /**
   * Flag attached to the settings object so you can check in the draw
   * callback if filtering has been done in the draw. Deprecated in favour of
   * events.
   *  @deprecated
   */
  bFiltered: !1,
  /**
   * Flag attached to the settings object so you can check in the draw
   * callback if sorting has been done in the draw. Deprecated in favour of
   * events.
   *  @deprecated
   */
  bSorted: !1,
  /**
   * Indicate that if multiple rows are in the header and there is more than
   * one unique cell per column, if the top one (true) or bottom one (false)
   * should be used for sorting / title by DataTables.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  bSortCellsTop: null,
  /**
   * Initialisation object that is used for the table
   */
  oInit: null,
  /**
   * Destroy callback functions - for plug-ins to attach themselves to the
   * destroy so they can clean up markup and events.
   */
  aoDestroyCallback: [],
  /**
   * Get the number of records in the current record set, before filtering
   */
  fnRecordsTotal: function() {
    return sa(this) == "ssp" ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;
  },
  /**
   * Get the number of records in the current record set, after filtering
   */
  fnRecordsDisplay: function() {
    return sa(this) == "ssp" ? this._iRecordsDisplay * 1 : this.aiDisplay.length;
  },
  /**
   * Get the display end point - aiDisplay index
   */
  fnDisplayEnd: function() {
    var a = this._iDisplayLength, p = this._iDisplayStart, g = p + a, w = this.aiDisplay.length, L = this.oFeatures, B = L.bPaginate;
    return L.bServerSide ? B === !1 || a === -1 ? p + w : Math.min(p + a, this._iRecordsDisplay) : !B || g > w || a === -1 ? w : g;
  },
  /**
   * The DataTables object for this table
   */
  oInstance: null,
  /**
   * Unique identifier for each instance of the DataTables object. If there
   * is an ID on the table node, then it takes that value, otherwise an
   * incrementing internal counter is used.
   */
  sInstance: null,
  /**
   * tabindex attribute value that is added to DataTables control elements, allowing
   * keyboard navigation of the table and its controls.
   */
  iTabIndex: 0,
  /**
   * DIV container for the footer scrolling table if scrolling
   */
  nScrollHead: null,
  /**
   * DIV container for the footer scrolling table if scrolling
   */
  nScrollFoot: null,
  /**
   * Last applied sort
   */
  aLastSort: [],
  /**
   * Stored plug-in instances
   */
  oPlugins: {},
  /**
   * Function used to get a row's id from the row's data
   */
  rowIdFn: null,
  /**
   * Data location where to store a row's id
   */
  rowId: null,
  caption: "",
  captionNode: null,
  colgroup: null,
  /** Delay loading of data */
  deferLoading: null,
  /** Allow auto type detection */
  typeDetect: !0,
  /** ResizeObserver for the container div */
  resizeObserver: null,
  /** Keep a record of the last size of the container, so we can skip duplicates */
  containerWidth: -1
};
var p1 = de.ext.pager;
Xt.extend(p1, {
  simple: function() {
    return ["previous", "next"];
  },
  full: function() {
    return ["first", "previous", "next", "last"];
  },
  numbers: function() {
    return ["numbers"];
  },
  simple_numbers: function() {
    return ["previous", "numbers", "next"];
  },
  full_numbers: function() {
    return ["first", "previous", "numbers", "next", "last"];
  },
  first_last: function() {
    return ["first", "last"];
  },
  first_last_numbers: function() {
    return ["first", "numbers", "last"];
  },
  // For testing and plug-ins to use
  _numbers: cl,
  // Number of number buttons - legacy, use `numbers` option for paging feature
  numbers_length: 7
});
Xt.extend(!0, de.ext.renderer, {
  pagingButton: {
    _: function(a, p, g, w, L) {
      var B = a.oClasses.paging, f = [B.button], d;
      return w && f.push(B.active), L && f.push(B.disabled), p === "ellipsis" ? d = Xt('<span class="ellipsis"></span>').html(g)[0] : d = Xt("<button>", {
        class: f.join(" "),
        role: "link",
        type: "button"
      }).html(g), {
        display: d,
        clicker: d
      };
    }
  },
  pagingContainer: {
    _: function(a, p) {
      return p;
    }
  }
});
var Ci = function(a, p) {
  return function(g) {
    return ia(g) || typeof g != "string" || (g = g.replace(Dd, " "), a && (g = Pa(g)), p && (g = Vo(g, !1))), g;
  };
};
function If(a, p, g, w, L) {
  return ti ? a[p](L) : ja ? a[g](L) : w ? a[w](L) : a;
}
var Df = !1, ja, ti;
function g1() {
  window.luxon && !ja && (ja = window.luxon), window.moment && !ti && (ti = window.moment);
}
function Jo(a, p, g) {
  var w;
  if (g1(), ti) {
    if (w = ti.utc(a, p, g, !0), !w.isValid())
      return null;
  } else if (ja) {
    if (w = p && typeof a == "string" ? ja.DateTime.fromFormat(a, p) : ja.DateTime.fromISO(a), !w.isValid)
      return null;
    w = w.setLocale(g);
  } else
    p ? (Df || alert("DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17"), Df = !0) : w = new Date(a);
  return w;
}
function Rs(a) {
  return function(p, g, w, L) {
    arguments.length === 0 ? (w = "en", g = null, p = null) : arguments.length === 1 ? (w = "en", g = p, p = null) : arguments.length === 2 && (w = g, g = p, p = null);
    var B = "datetime" + (g ? "-" + g : "");
    return de.ext.type.order[B + "-pre"] || de.type(B, {
      detect: function(f) {
        return f === B ? B : !1;
      },
      order: {
        pre: function(f) {
          return f.valueOf();
        }
      },
      className: "dt-right"
    }), function(f, d) {
      if (f == null)
        if (L === "--now") {
          var t = /* @__PURE__ */ new Date();
          f = new Date(Date.UTC(
            t.getFullYear(),
            t.getMonth(),
            t.getDate(),
            t.getHours(),
            t.getMinutes(),
            t.getSeconds()
          ));
        } else
          f = "";
      if (d === "type")
        return B;
      if (f === "")
        return d !== "sort" ? "" : Jo("0000-01-01 00:00:00", null, w);
      if (g !== null && p === g && d !== "sort" && d !== "type" && !(f instanceof Date))
        return f;
      var i = Jo(f, p, w);
      if (i === null)
        return f;
      if (d === "sort")
        return i;
      var r = g === null ? If(i, "toDate", "toJSDate", "")[a]() : If(i, "format", "toFormat", "toISOString", g);
      return d === "display" ? di(r) : r;
    };
  };
}
var fl = ",", ll = ".";
if (window.Intl !== void 0)
  try {
    for (var Zi = new Intl.NumberFormat().formatToParts(100000.1), Hn = 0; Hn < Zi.length; Hn++)
      Zi[Hn].type === "group" ? fl = Zi[Hn].value : Zi[Hn].type === "decimal" && (ll = Zi[Hn].value);
  } catch (a) {
  }
de.datetime = function(a, p) {
  var g = "datetime-" + a;
  p || (p = "en"), de.ext.type.order[g] || de.type(g, {
    detect: function(w) {
      var L = Jo(w, a, p);
      return w === "" || L ? g : !1;
    },
    order: {
      pre: function(w) {
        return Jo(w, a, p) || 0;
      }
    },
    className: "dt-right"
  });
};
de.render = {
  date: Rs("toLocaleDateString"),
  datetime: Rs("toLocaleString"),
  time: Rs("toLocaleTimeString"),
  number: function(a, p, g, w, L) {
    return a == null && (a = fl), p == null && (p = ll), {
      display: function(B) {
        if (typeof B != "number" && typeof B != "string" || B === "" || B === null)
          return B;
        var f = B < 0 ? "-" : "", d = parseFloat(B), t = Math.abs(d);
        if (t >= 1e11 || t < 1e-4 && t !== 0) {
          var i = d.toExponential(g).split(/e\+?/);
          return i[0] + " x 10<sup>" + i[1] + "</sup>";
        }
        if (isNaN(d))
          return di(B);
        d = d.toFixed(g), B = Math.abs(d);
        var r = parseInt(B, 10), n = g ? p + (B - r).toFixed(g).substring(2) : "";
        return r === 0 && parseFloat(n) === 0 && (f = ""), f + (w || "") + r.toString().replace(
          /\B(?=(\d{3})+(?!\d))/g,
          a
        ) + n + (L || "");
      }
    };
  },
  text: function() {
    return {
      display: di,
      filter: di
    };
  }
};
var zn = de.ext.type;
de.type = function(a, p, g) {
  if (!p)
    return {
      className: zn.className[a],
      detect: zn.detect.find(function(f) {
        return f._name === a;
      }),
      order: {
        pre: zn.order[a + "-pre"],
        asc: zn.order[a + "-asc"],
        desc: zn.order[a + "-desc"]
      },
      render: zn.render[a],
      search: zn.search[a]
    };
  var w = function(f, d) {
    zn[f][a] = d;
  }, L = function(f) {
    Object.defineProperty(f, "_name", { value: a });
    var d = zn.detect.findIndex(function(t) {
      return t._name === a;
    });
    d === -1 ? zn.detect.unshift(f) : zn.detect.splice(d, 1, f);
  }, B = function(f) {
    zn.order[a + "-pre"] = f.pre, zn.order[a + "-asc"] = f.asc, zn.order[a + "-desc"] = f.desc;
  };
  g === void 0 && (g = p, p = null), p === "className" ? w("className", g) : p === "detect" ? L(g) : p === "order" ? B(g) : p === "render" ? w("render", g) : p === "search" ? w("search", g) : p || (g.className && w("className", g.className), g.detect !== void 0 && L(g.detect), g.order && B(g.order), g.render !== void 0 && w("render", g.render), g.search !== void 0 && w("search", g.search));
};
de.types = function() {
  return zn.detect.map(function(a) {
    return a._name;
  });
};
var Vs = function(a, p) {
  return a = a != null ? a.toString().toLowerCase() : "", p = p != null ? p.toString().toLowerCase() : "", a.localeCompare(p, navigator.languages[0] || navigator.language, {
    numeric: !0,
    ignorePunctuation: !0
  });
}, Pf = function(a, p) {
  return a = Pa(a), p = Pa(p), Vs(a, p);
};
de.type("string", {
  detect: function() {
    return "string";
  },
  order: {
    pre: function(a) {
      return ia(a) && typeof a != "boolean" ? "" : typeof a == "string" ? a.toLowerCase() : a.toString ? a.toString() : "";
    }
  },
  search: Ci(!1, !0)
});
de.type("string-utf8", {
  detect: {
    allOf: function(a) {
      return !0;
    },
    oneOf: function(a) {
      return !ia(a) && navigator.languages && typeof a == "string" && a.match(/[^\x00-\x7F]/);
    }
  },
  order: {
    asc: Vs,
    desc: function(a, p) {
      return Vs(a, p) * -1;
    }
  },
  search: Ci(!1, !0)
});
de.type("html", {
  detect: {
    allOf: function(a) {
      return ia(a) || typeof a == "string" && a.indexOf("<") !== -1;
    },
    oneOf: function(a) {
      return !ia(a) && typeof a == "string" && a.indexOf("<") !== -1;
    }
  },
  order: {
    pre: function(a) {
      return ia(a) ? "" : a.replace ? Pa(a).trim().toLowerCase() : a + "";
    }
  },
  search: Ci(!0, !0)
});
de.type("html-utf8", {
  detect: {
    allOf: function(a) {
      return ia(a) || typeof a == "string" && a.indexOf("<") !== -1;
    },
    oneOf: function(a) {
      return navigator.languages && !ia(a) && typeof a == "string" && a.indexOf("<") !== -1 && typeof a == "string" && a.match(/[^\x00-\x7F]/);
    }
  },
  order: {
    asc: Pf,
    desc: function(a, p) {
      return Pf(a, p) * -1;
    }
  },
  search: Ci(!0, !0)
});
de.type("date", {
  className: "dt-type-date",
  detect: {
    allOf: function(a) {
      if (a && !(a instanceof Date) && !pf.test(a))
        return null;
      var p = Date.parse(a);
      return p !== null && !isNaN(p) || ia(a);
    },
    oneOf: function(a) {
      return a instanceof Date || typeof a == "string" && pf.test(a);
    }
  },
  order: {
    pre: function(a) {
      var p = Date.parse(a);
      return isNaN(p) ? -1 / 0 : p;
    }
  }
});
de.type("html-num-fmt", {
  className: "dt-type-numeric",
  detect: {
    allOf: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return Go(a, g, !0, !1);
    },
    oneOf: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return Go(a, g, !0, !1);
    }
  },
  order: {
    pre: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return ls(a, g, Js, Qs);
    }
  },
  search: Ci(!0, !0)
});
de.type("html-num", {
  className: "dt-type-numeric",
  detect: {
    allOf: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return Go(a, g, !1, !0);
    },
    oneOf: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return Go(a, g, !1, !1);
    }
  },
  order: {
    pre: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return ls(a, g, Js);
    }
  },
  search: Ci(!0, !0)
});
de.type("num-fmt", {
  className: "dt-type-numeric",
  detect: {
    allOf: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return Qi(a, g, !0, !0);
    },
    oneOf: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return Qi(a, g, !0, !1);
    }
  },
  order: {
    pre: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return ls(a, g, Qs);
    }
  }
});
de.type("num", {
  className: "dt-type-numeric",
  detect: {
    allOf: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return Qi(a, g, !1, !0);
    },
    oneOf: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return Qi(a, g, !1, !1);
    }
  },
  order: {
    pre: function(a, p) {
      var g = p.oLanguage.sDecimal;
      return ls(a, g);
    }
  }
});
var ls = function(a, p, g, w) {
  if (a !== 0 && (!a || a === "-"))
    return -1 / 0;
  var L = typeof a;
  return L === "number" || L === "bigint" ? a : (p && (a = Uf(a, p)), a.replace && (g && (a = a.replace(g, "")), w && (a = a.replace(w, ""))), a * 1);
};
Xt.extend(!0, de.ext.renderer, {
  footer: {
    _: function(a, p, g) {
      p.addClass(g.tfoot.cell);
    }
  },
  header: {
    _: function(a, p, g) {
      p.addClass(g.thead.cell), a.oFeatures.bSort || p.addClass(g.order.none);
      var w = a.bSortCellsTop, L = p.closest("thead").find("tr"), B = p.parent().index();
      // Cells and rows which have the attribute to disable the icons
      p.attr("data-dt-order") === "disable" || p.parent().attr("data-dt-order") === "disable" || // Legacy support for `orderCellsTop`. If it is set, then cells
      // which are not in the top or bottom row of the header (depending
      // on the value) do not get the sorting classes applied to them
      w === !0 && B !== 0 || w === !1 && B !== L.length - 1 || Xt(a.nTable).on("order.dt.DT column-visibility.dt.DT", function(f, d) {
        if (a === d) {
          var t = d.sortDetails;
          if (t) {
            var i, r = g.order, n = d.api.columns(p), o = a.aoColumns[n.flatten()[0]], h = n.orderable().includes(!0), u = "", l = n.indexes(), c = n.orderable(!0).flatten(), s = Ln(t, "col"), v = a.iTabIndex;
            p.removeClass(
              r.isAsc + " " + r.isDesc
            ).toggleClass(r.none, !h).toggleClass(r.canAsc, h && c.includes("asc")).toggleClass(r.canDesc, h && c.includes("desc"));
            var y = !0;
            for (i = 0; i < l.length; i++)
              s.includes(l[i]) || (y = !1);
            if (y) {
              var x = n.order();
              p.addClass(
                x.includes("asc") ? r.isAsc : "" + x.includes("desc") ? r.isDesc : ""
              );
            }
            var e = -1;
            for (i = 0; i < s.length; i++)
              if (a.aoColumns[s[i]].bVisible) {
                e = s[i];
                break;
              }
            if (l[0] == e) {
              var b = t[0], A = o.asSorting;
              p.attr("aria-sort", b.dir === "asc" ? "ascending" : "descending"), u = A[b.index + 1] ? "Reverse" : "Remove";
            } else
              p.removeAttr("aria-sort");
            if (h) {
              var P = p.find(".dt-column-order");
              P.attr("role", "button").attr(
                "aria-label",
                h ? o.ariaTitle + d.api.i18n("oAria.orderable" + u) : o.ariaTitle
              ), v !== -1 && P.attr("tabindex", v);
            }
          }
        }
      });
    }
  },
  layout: {
    _: function(a, p, g) {
      var w = a.oClasses.layout, L = Xt("<div/>").attr("id", g.id || null).addClass(g.className || w.row).appendTo(p);
      de.ext.renderer.layout._forLayoutRow(g, function(B, f) {
        if (!(B === "id" || B === "className")) {
          var d = "";
          f.table && (L.addClass(w.tableRow), d += w.tableCell + " "), B === "start" ? d += w.start : B === "end" ? d += w.end : d += w.full, Xt("<div/>").attr({
            id: f.id || null,
            class: f.className ? f.className : w.cell + " " + d
          }).append(f.contents).appendTo(L);
        }
      });
    },
    // Shared for use by the styling frameworks
    _forLayoutRow: function(a, p) {
      var g = function(w) {
        switch (w) {
          case "":
            return 0;
          case "start":
            return 1;
          case "end":
            return 2;
          default:
            return 3;
        }
      };
      Object.keys(a).sort(function(w, L) {
        return g(w) - g(L);
      }).forEach(function(w) {
        p(w, a[w]);
      });
    }
  }
});
de.feature = {};
de.feature.register = function(a, p, g) {
  de.ext.features[a] = p, g && En.feature.push({
    cFeature: g,
    fnInit: p
  });
};
function Mo(a, p, g) {
  g && (a[p] = g);
}
de.feature.register("div", function(a, p) {
  var g = Xt("<div>")[0];
  return p && (Mo(g, "className", p.className), Mo(g, "id", p.id), Mo(g, "innerHTML", p.html), Mo(g, "textContent", p.text)), g;
});
de.feature.register("info", function(a, p) {
  if (!a.oFeatures.bInfo)
    return null;
  var g = a.oLanguage, w = a.sTableId, L = Xt("<div/>", {
    class: a.oClasses.info.container
  });
  return p = Xt.extend({
    callback: g.fnInfoCallback,
    empty: g.sInfoEmpty,
    postfix: g.sInfoPostFix,
    search: g.sInfoFiltered,
    text: g.sInfo
  }, p), a.aoDrawCallback.push(function(B) {
    m1(B, p, L);
  }), a._infoEl || (L.attr({
    "aria-live": "polite",
    id: w + "_info",
    role: "status"
  }), Xt(a.nTable).attr("aria-describedby", w + "_info"), a._infoEl = L), L;
}, "i");
function m1(a, p, g) {
  var w = a._iDisplayStart + 1, L = a.fnDisplayEnd(), B = a.fnRecordsTotal(), f = a.fnRecordsDisplay(), d = f ? p.text : p.empty;
  f !== B && (d += " " + p.search), d += p.postfix, d = s0(a, d), p.callback && (d = p.callback.call(
    a.oInstance,
    a,
    w,
    L,
    B,
    f,
    d
  )), g.html(d), zr(a, null, "info", [a, g[0], d]);
}
var Ls = 0;
de.feature.register("search", function(a, p) {
  if (!a.oFeatures.bFilter)
    return null;
  var g = a.oClasses.search, w = a.sTableId, L = a.oLanguage, B = a.oPreviousSearch, f = '<input type="search" class="' + g.input + '"/>';
  p = Xt.extend({
    placeholder: L.sSearchPlaceholder,
    processing: !1,
    text: L.sSearch
  }, p), p.text.indexOf("_INPUT_") === -1 && (p.text += "_INPUT_"), p.text = s0(a, p.text);
  var d = p.text.match(/_INPUT_$/), t = p.text.match(/^_INPUT_/), i = p.text.replace(/_INPUT_/, ""), r = "<label>" + p.text + "</label>";
  t ? r = "_INPUT_<label>" + i + "</label>" : d && (r = "<label>" + i + "</label>_INPUT_");
  var n = Xt("<div>").addClass(g.container).append(r.replace(/_INPUT_/, f));
  n.find("label").attr("for", "dt-search-" + Ls), n.find("input").attr("id", "dt-search-" + Ls), Ls++;
  var o = function(l) {
    var c = this.value;
    B.return && l.key !== "Enter" || c != B.search && Jf(a, p.processing, function() {
      B.search = c, $i(a, B), a._iDisplayStart = 0, Si(a);
    });
  }, h = a.searchDelay !== null ? a.searchDelay : 0, u = Xt("input", n).val(B.search).attr("placeholder", p.placeholder).on(
    "keyup.DT search.DT input.DT paste.DT cut.DT",
    h ? de.util.debounce(o, h) : o
  ).on("mouseup.DT", function(l) {
    setTimeout(function() {
      o.call(u[0], l);
    }, 10);
  }).on("keypress.DT", function(l) {
    if (l.keyCode == 13)
      return !1;
  }).attr("aria-controls", w);
  return Xt(a.nTable).on("search.dt.DT", function(l, c) {
    a === c && u[0] !== document.activeElement && u.val(
      typeof B.search != "function" ? B.search : ""
    );
  }), n;
}, "f");
de.feature.register("paging", function(a, p) {
  if (!a.oFeatures.bPaginate)
    return null;
  p = Xt.extend({
    buttons: de.ext.pager.numbers_length,
    type: a.sPaginationType,
    boundaryNumbers: !0,
    firstLast: !0,
    previousNext: !0,
    numbers: !0
  }, p);
  var g = Xt("<div/>").addClass(a.oClasses.paging.container + (p.type ? " paging_" + p.type : "")).append(
    Xt("<nav>").attr("aria-label", "pagination").addClass(a.oClasses.paging.nav)
  ), w = function() {
    ul(a, g.children(), p);
  };
  return a.aoDrawCallback.push(w), Xt(a.nTable).on("column-sizing.dt.DT", w), g;
}, "p");
function y1(a) {
  var p = [];
  return a.numbers && p.push("numbers"), a.previousNext && (p.unshift("previous"), p.push("next")), a.firstLast && (p.unshift("first"), p.push("last")), p;
}
function ul(a, p, g) {
  if (a._bInitComplete) {
    var w = g.type ? de.ext.pager[g.type] : y1, L = a.oLanguage.oAria.paginate || {}, B = a._iDisplayStart, f = a._iDisplayLength, d = a.fnRecordsDisplay(), t = f === -1, i = t ? 0 : Math.ceil(B / f), r = t ? 1 : Math.ceil(d / f), n = [], o = [], h = w(g).map(function(b) {
      return b === "numbers" ? cl(i, r, g.buttons, g.boundaryNumbers) : b;
    });
    n = n.concat.apply(n, h);
    for (var u = 0; u < n.length; u++) {
      var l = n[u], c = x1(a, l, i, r), s = Ko(a, "pagingButton")(
        a,
        l,
        c.display,
        c.active,
        c.disabled
      ), v = typeof l == "string" ? L[l] : L.number ? L.number + (l + 1) : null;
      Xt(s.clicker).attr({
        "aria-controls": a.sTableId,
        "aria-disabled": c.disabled ? "true" : null,
        "aria-current": c.active ? "page" : null,
        "aria-label": v,
        "data-dt-idx": l,
        tabIndex: c.disabled ? -1 : a.iTabIndex && s.clicker[0].nodeName.toLowerCase() !== "span" ? a.iTabIndex : null
        // `0` doesn't need a tabIndex since it is the default
      }), typeof l != "number" && Xt(s.clicker).addClass(l), el(
        s.clicker,
        { action: l },
        function(b) {
          b.preventDefault(), i0(a, b.data.action, !0);
        }
      ), o.push(s.display);
    }
    var y = Ko(a, "pagingContainer")(
      a,
      o
    ), x = p.find(document.activeElement).data("dt-idx");
    if (p.empty().append(y), x !== void 0 && p.find("[data-dt-idx=" + x + "]").trigger("focus"), o.length) {
      var e = Xt(o[0]).outerHeight();
      g.buttons > 1 && // prevent infinite
      e > 0 && // will be 0 if hidden
      Xt(p).height() >= e * 2 - 10 && ul(a, p, Xt.extend({}, g, { buttons: g.buttons - 2 }));
    }
  }
}
function x1(a, p, g, w) {
  var L = a.oLanguage.oPaginate, B = {
    display: "",
    active: !1,
    disabled: !1
  };
  switch (p) {
    case "ellipsis":
      B.display = "&#x2026;";
      break;
    case "first":
      B.display = L.sFirst, g === 0 && (B.disabled = !0);
      break;
    case "previous":
      B.display = L.sPrevious, g === 0 && (B.disabled = !0);
      break;
    case "next":
      B.display = L.sNext, (w === 0 || g === w - 1) && (B.disabled = !0);
      break;
    case "last":
      B.display = L.sLast, (w === 0 || g === w - 1) && (B.disabled = !0);
      break;
    default:
      typeof p == "number" && (B.display = a.fnFormatNumber(p + 1), g === p && (B.active = !0));
      break;
  }
  return B;
}
function cl(a, p, g, w) {
  var L = [], B = Math.floor(g / 2), f = w ? 2 : 1, d = w ? 1 : 0;
  return p <= g ? L = Ua(0, p) : g === 1 ? L = [a] : g === 3 ? a <= 1 ? L = [0, 1, "ellipsis"] : a >= p - 2 ? (L = Ua(p - 2, p), L.unshift("ellipsis")) : L = ["ellipsis", a, "ellipsis"] : a <= B ? (L = Ua(0, g - f), L.push("ellipsis"), w && L.push(p - 1)) : a >= p - 1 - B ? (L = Ua(p - (g - f), p), L.unshift("ellipsis"), w && L.unshift(0)) : (L = Ua(a - B + f, a + B - d), L.push("ellipsis"), L.unshift("ellipsis"), w && (L.push(p - 1), L.unshift(0))), L;
}
var Ns = 0;
de.feature.register("pageLength", function(a, p) {
  var g = a.oFeatures;
  if (!g.bPaginate || !g.bLengthChange)
    return null;
  p = Xt.extend({
    menu: a.aLengthMenu,
    text: a.oLanguage.sLengthMenu
  }, p);
  var w = a.oClasses.length, L = a.sTableId, B = p.menu, f = [], d = [], t;
  if (Array.isArray(B[0]))
    f = B[0], d = B[1];
  else
    for (t = 0; t < B.length; t++)
      Xt.isPlainObject(B[t]) ? (f.push(B[t].value), d.push(B[t].label)) : (f.push(B[t]), d.push(B[t]));
  var i = p.text.match(/_MENU_$/), r = p.text.match(/^_MENU_/), n = p.text.replace(/_MENU_/, ""), o = "<label>" + p.text + "</label>";
  r ? o = "_MENU_<label>" + n + "</label>" : i && (o = "<label>" + n + "</label>_MENU_");
  var h = "tmp-" + +/* @__PURE__ */ new Date(), u = Xt("<div/>").addClass(w.container).append(
    o.replace("_MENU_", '<span id="' + h + '"></span>')
  ), l = [];
  Array.prototype.slice.call(u.find("label")[0].childNodes).forEach(function(v) {
    v.nodeType === Node.TEXT_NODE && l.push({
      el: v,
      text: v.textContent
    });
  });
  var c = function(v) {
    l.forEach(function(y) {
      y.el.textContent = s0(a, y.text, v);
    });
  }, s = Xt("<select/>", {
    "aria-controls": L,
    class: w.select
  });
  for (t = 0; t < f.length; t++)
    s[0][t] = new Option(
      typeof d[t] == "number" ? a.fnFormatNumber(d[t]) : d[t],
      f[t]
    );
  return u.find("label").attr("for", "dt-length-" + Ns), s.attr("id", "dt-length-" + Ns), Ns++, u.find("#" + h).replaceWith(s), Xt("select", u).val(a._iDisplayLength).on("change.DT", function() {
    Kf(a, Xt(this).val()), Si(a);
  }), Xt(a.nTable).on("length.dt.DT", function(v, y, x) {
    a === y && (Xt("select", u).val(x), c(x));
  }), c(a._iDisplayLength), u;
}, "l");
Xt.fn.dataTable = de;
de.$ = Xt;
Xt.fn.dataTableSettings = de.settings;
Xt.fn.dataTableExt = de.ext;
Xt.fn.DataTable = function(a) {
  return Xt(this).dataTable(a).api();
};
Xt.each(de, function(a, p) {
  Xt.fn.DataTable[a] = p;
});
/*! FixedHeader 4.0.1
 * Â© SpryMedia Ltd - datatables.net/license
 */
let ir = Wn;
var b1 = 0, Ga = function(a, p) {
  if (!de.versionCheck("2"))
    throw "Warning: FixedHeader requires DataTables 2 or newer";
  if (!(this instanceof Ga))
    throw "FixedHeader must be initialised with the 'new' keyword.";
  p === !0 && (p = {}), a = new de.Api(a), this.c = ir.extend(!0, {}, Ga.defaults, p), this.s = {
    dt: a,
    position: {
      theadTop: 0,
      tbodyTop: 0,
      tfootTop: 0,
      tfootBottom: 0,
      width: 0,
      left: 0,
      tfootHeight: 0,
      theadHeight: 0,
      windowHeight: ir(window).height(),
      visible: !0
    },
    headerMode: null,
    footerMode: null,
    autoWidth: a.settings()[0].oFeatures.bAutoWidth,
    namespace: ".dtfc" + b1++,
    scrollLeft: {
      header: -1,
      footer: -1
    },
    enable: !0,
    autoDisable: !1
  }, this.dom = {
    floatingHeader: null,
    thead: ir(a.table().header()),
    tbody: ir(a.table().body()),
    tfoot: ir(a.table().footer()),
    header: {
      host: null,
      floating: null,
      floatingParent: ir('<div class="dtfh-floatingparent"><div></div></div>'),
      placeholder: null
    },
    footer: {
      host: null,
      floating: null,
      floatingParent: ir('<div class="dtfh-floatingparent"><div></div></div>'),
      placeholder: null
    }
  }, this.dom.header.host = this.dom.thead.parent(), this.dom.footer.host = this.dom.tfoot.parent();
  var g = a.settings()[0];
  if (g._fixedHeader)
    throw "FixedHeader already initialised on table " + g.nTable.id;
  g._fixedHeader = this, this._constructor();
};
ir.extend(Ga.prototype, {
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * API methods
   */
  /**
   * Kill off FH and any events
   */
  destroy: function() {
    var a = this.dom;
    this.s.dt.off(".dtfc"), ir(window).off(this.s.namespace), a.header.rightBlocker && a.header.rightBlocker.remove(), a.header.leftBlocker && a.header.leftBlocker.remove(), a.footer.rightBlocker && a.footer.rightBlocker.remove(), a.footer.leftBlocker && a.footer.leftBlocker.remove(), this.c.header && this._modeChange("in-place", "header", !0), this.c.footer && a.tfoot.length && this._modeChange("in-place", "footer", !0);
  },
  /**
   * Enable / disable the fixed elements
   *
   * @param  {boolean} enable `true` to enable, `false` to disable
   */
  enable: function(a, p, g) {
    this.s.enable = a, this.s.enableType = g, (p || p === void 0) && (this._positions(), this._scroll(!0));
  },
  /**
   * Get enabled status
   */
  enabled: function() {
    return this.s.enable;
  },
  /**
   * Set header offset
   *
   * @param  {int} new value for headerOffset
   */
  headerOffset: function(a) {
    return a !== void 0 && (this.c.headerOffset = a, this.update()), this.c.headerOffset;
  },
  /**
   * Set footer offset
   *
   * @param  {int} new value for footerOffset
   */
  footerOffset: function(a) {
    return a !== void 0 && (this.c.footerOffset = a, this.update()), this.c.footerOffset;
  },
  /**
   * Recalculate the position of the fixed elements and force them into place
   */
  update: function(a) {
    var p = this.s.dt.table().node();
    !this.s.enable && !this.s.autoDisable || (ir(p).is(":visible") ? (this.s.autoDisable = !1, this.enable(!0, !1)) : (this.s.autoDisable = !0, this.enable(!1, !1)), ir(p).children("thead").length !== 0 && (this._positions(), this._scroll(a !== void 0 ? a : !0), this._widths(this.dom.header), this._widths(this.dom.footer)));
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Constructor
   */
  /**
   * FixedHeader constructor - adding the required event listeners and
   * simple initialisation
   *
   * @private
   */
  _constructor: function() {
    var a = this, p = this.s.dt;
    ir(window).on("scroll" + this.s.namespace, function() {
      a._scroll();
    }).on(
      "resize" + this.s.namespace,
      de.util.throttle(function() {
        a.s.position.windowHeight = ir(window).height(), a.update();
      }, 50)
    );
    var g = ir(".fh-fixedHeader");
    !this.c.headerOffset && g.length && (this.c.headerOffset = g.outerHeight());
    var w = ir(".fh-fixedFooter");
    !this.c.footerOffset && w.length && (this.c.footerOffset = w.outerHeight()), p.on(
      "column-reorder.dt.dtfc column-visibility.dt.dtfc column-sizing.dt.dtfc responsive-display.dt.dtfc",
      function(L, B) {
        a.update();
      }
    ).on("draw.dt.dtfc", function(L, B) {
      a.update(B !== p.settings()[0]);
    }), p.on("destroy.dtfc", function() {
      a.destroy();
    }), this._positions(), this._scroll();
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Private methods
   */
  /**
   * Clone a fixed item to act as a place holder for the original element
   * which is moved into a clone of the table element, and moved around the
   * document to give the fixed effect.
   *
   * @param  {string}  item  'header' or 'footer'
   * @param  {boolean} force Force the clone to happen, or allow automatic
   *   decision (reuse existing if available)
   * @private
   */
  _clone: function(a, p) {
    var g = this, w = this.s.dt, L = this.dom[a], B = a === "header" ? this.dom.thead : this.dom.tfoot;
    if (!(a === "footer" && this._scrollEnabled()))
      if (!p && L.floating)
        L.floating.removeClass(
          "fixedHeader-floating fixedHeader-locked"
        );
      else {
        L.floating && (L.placeholder !== null && L.placeholder.remove(), L.floating.children().detach(), L.floating.remove());
        var f = ir(w.table().node()), d = ir(f.parent()), t = this._scrollEnabled();
        L.floating = ir(w.table().node().cloneNode(!1)).attr("aria-hidden", "true").css({
          top: 0,
          left: 0
        }).removeAttr("id"), L.floatingParent.css({
          width: d[0].offsetWidth,
          overflow: "hidden",
          height: "fit-content",
          position: "fixed",
          left: t ? f.offset().left + d.scrollLeft() : 0
        }).css(
          a === "header" ? {
            top: this.c.headerOffset,
            bottom: ""
          } : {
            top: "",
            bottom: this.c.footerOffset
          }
        ).addClass(
          a === "footer" ? "dtfh-floatingparent-foot" : "dtfh-floatingparent-head"
        ).appendTo("body").children().eq(0).append(L.floating), this._stickyPosition(L.floating, "-");
        var i = function() {
          var n = d.scrollLeft();
          g.s.scrollLeft = { footer: n, header: n }, L.floatingParent.scrollLeft(g.s.scrollLeft.header);
        };
        i(), d.off("scroll.dtfh").on("scroll.dtfh", i), L.floatingParent.children().css({
          width: "fit-content",
          paddingRight: g.s.dt.settings()[0].oBrowser.barWidth
        });
        let r = ir(
          a === "footer" ? "div.dtfc-bottom-blocker" : "div.dtfc-top-blocker",
          w.table().container()
        );
        r.length && r.clone().appendTo(L.floatingParent).css({
          position: "fixed",
          right: r.width()
        }), L.placeholder = B.clone(!1), L.placeholder.find("*[id]").removeAttr("id"), L.host.prepend(L.placeholder), L.floating.append(B), this._widths(L);
      }
  },
  /**
   * This method sets the sticky position of the header elements to match fixed columns
   * @param {JQuery<HTMLElement>} el
   * @param {string} sign
   */
  _stickyPosition: function(a, p) {
    if (this._scrollEnabled()) {
      var g = this, w = ir(g.s.dt.table().node()).css("direction") === "rtl";
      a.find("th").each(function() {
        if (ir(this).css("position") === "sticky") {
          var L = ir(this).css("right"), B = ir(this).css("left"), f;
          L !== "auto" && !w ? (f = +L.replace(/px/g, ""), ir(this).css("right", f > 0 ? f : 0)) : B !== "auto" && w && (f = +B.replace(/px/g, ""), ir(this).css("left", f > 0 ? f : 0));
        }
      });
    }
  },
  /**
   * Reposition the floating elements to take account of horizontal page
   * scroll
   *
   * @param  {string} item       The `header` or `footer`
   * @param  {int}    scrollLeft Document scrollLeft
   * @private
   */
  _horizontal: function(a, p) {
    var g = this.dom[a], w = this.s.scrollLeft;
    if (g.floating && w[a] !== p) {
      if (this._scrollEnabled()) {
        var L = ir(
          ir(this.s.dt.table().node()).parent()
        ).scrollLeft();
        g.floating.scrollLeft(L), g.floatingParent.scrollLeft(L);
      }
      w[a] = p;
    }
  },
  /**
   * Change from one display mode to another. Each fixed item can be in one
   * of:
   *
   * * `in-place` - In the main DataTable
   * * `in` - Floating over the DataTable
   * * `below` - (Header only) Fixed to the bottom of the table body
   * * `above` - (Footer only) Fixed to the top of the table body
   *
   * @param  {string}  mode        Mode that the item should be shown in
   * @param  {string}  item        'header' or 'footer'
   * @param  {boolean} forceChange Force a redraw of the mode, even if already
   *     in that mode.
   * @private
   */
  _modeChange: function(a, p, g) {
    var w = this.dom[p], L = this.s.position, B = this._scrollEnabled();
    if (!(p === "footer" && B)) {
      var f = function(y) {
        w.floating[0].style.setProperty("width", y + "px", "important"), B || w.floatingParent[0].style.setProperty("width", y + "px", "important");
      }, d = this.dom[p === "footer" ? "tfoot" : "thead"], t = ir.contains(d[0], document.activeElement) ? document.activeElement : null, i = ir(ir(this.s.dt.table().node()).parent());
      if (a === "in-place")
        w.placeholder && (w.placeholder.remove(), w.placeholder = null), p === "header" ? w.host.prepend(d) : w.host.append(d), w.floating && (w.floating.remove(), w.floating = null, this._stickyPosition(w.host, "+")), w.floatingParent && (w.floatingParent.find("div.dtfc-top-blocker").remove(), w.floatingParent.remove()), ir(ir(w.host.parent()).parent()).scrollLeft(
          i.scrollLeft()
        );
      else if (a === "in") {
        this._clone(p, g);
        var r = i.offset(), n = ir(document).scrollTop(), o = ir(window).height(), h = n + o, u = B ? r.top : L.tbodyTop, l = B ? r.top + i.outerHeight() : L.tfootTop, c;
        p === "footer" ? c = u > h ? L.tfootHeight : u + L.tfootHeight - h : c = n + this.c.headerOffset + L.theadHeight - l;
        var s = p === "header" ? "top" : "bottom", v = this.c[p + "Offset"] - (c > 0 ? c : 0);
        w.floating.addClass("fixedHeader-floating"), w.floatingParent.css(s, v).css({
          left: L.left,
          "z-index": 3
        }), f(L.width), p === "footer" && w.floating.css("top", "");
      } else
        a === "below" ? (this._clone(p, g), w.floating.addClass("fixedHeader-locked"), w.floatingParent.css({
          position: "absolute",
          top: L.tfootTop - L.theadHeight,
          left: L.left + "px"
        }), f(L.width)) : a === "above" && (this._clone(p, g), w.floating.addClass("fixedHeader-locked"), w.floatingParent.css({
          position: "absolute",
          top: L.tbodyTop,
          left: L.left + "px"
        }), f(L.width));
      t && t !== document.activeElement && setTimeout(function() {
        t.focus();
      }, 10), this.s.scrollLeft.header = -1, this.s.scrollLeft.footer = -1, this.s[p + "Mode"] = a;
    }
  },
  /**
   * Cache the positional information that is required for the mode
   * calculations that FixedHeader performs.
   *
   * @private
   */
  _positions: function() {
    var a = this.s.dt, p = a.table(), g = this.s.position, w = this.dom, L = ir(p.node()), B = this._scrollEnabled(), f = ir(a.table().header()), d = ir(a.table().footer()), t = w.tbody, i = L.parent();
    g.visible = L.is(":visible"), g.width = L.outerWidth(), g.left = L.offset().left, g.theadTop = f.offset().top, g.tbodyTop = B ? i.offset().top : t.offset().top, g.tbodyHeight = B ? i.outerHeight() : t.outerHeight(), g.theadHeight = f.outerHeight(), g.theadBottom = g.theadTop + g.theadHeight, g.tfootTop = g.tbodyTop + g.tbodyHeight, d.length ? (g.tfootBottom = g.tfootTop + d.outerHeight(), g.tfootHeight = d.outerHeight()) : (g.tfootBottom = g.tfootTop, g.tfootHeight = 0);
  },
  /**
   * Mode calculation - determine what mode the fixed items should be placed
   * into.
   *
   * @param  {boolean} forceChange Force a redraw of the mode, even if already
   *     in that mode.
   * @private
   */
  _scroll: function(a) {
    if (!this.s.dt.settings()[0].bDestroying) {
      var p = this._scrollEnabled(), g = ir(this.s.dt.table().node()).parent(), w = g.offset(), L = g.outerHeight(), B = ir(document).scrollLeft(), f = ir(document).scrollTop(), d = ir(window).height(), t = d + f, i = this.s.position, r, n, o = p ? w.top : i.tbodyTop, h = p ? w.left : i.left, u = p ? w.top + L : i.tfootTop, l = p ? g.outerWidth() : i.tbodyWidth;
      this.c.header && (this.s.enable ? !i.visible || f + this.c.headerOffset + i.theadHeight <= o ? r = "in-place" : /* The scrolling plus the header offset plus the height of the header is lower than the top of the body */ f + this.c.headerOffset + i.theadHeight > o && // And the scrolling at the top plus the header offset is above the bottom of the body
      f + this.c.headerOffset + i.theadHeight < u ? (r = "in", f + this.c.headerOffset + i.theadHeight > u || this.dom.header.floatingParent === void 0 ? a = !0 : this.dom.header.floatingParent.css({
        top: this.c.headerOffset,
        position: "fixed"
      }).children().eq(0).append(this.dom.header.floating)) : r = "below" : r = "in-place", (a || r !== this.s.headerMode) && this._modeChange(r, "header", a), this._horizontal("header", B));
      var c = {
        offset: { top: 0, left: 0 },
        height: 0
      }, s = {
        offset: { top: 0, left: 0 },
        height: 0
      };
      if (this.c.footer && this.dom.tfoot.length && this.dom.tfoot.find("th, td").length) {
        this.s.enable ? !i.visible || i.tfootBottom + this.c.footerOffset <= t ? n = "in-place" : u + i.tfootHeight + this.c.footerOffset > t && o + this.c.footerOffset < t ? (n = "in", a = !0) : n = "above" : n = "in-place", (a || n !== this.s.footerMode) && this._modeChange(n, "footer", a), this._horizontal("footer", B);
        var v = function(b) {
          return {
            offset: b.offset(),
            height: b.outerHeight()
          };
        };
        if (c = this.dom.header.floating ? v(this.dom.header.floating) : v(this.dom.thead), s = this.dom.footer.floating ? v(this.dom.footer.floating) : v(this.dom.tfoot), p && s.offset.top > f) {
          var y = f - w.top, x = t + // If the gap between the top of the scrollbody and the window is more than
          //  the height of the header then the top of the table is still visible so add that gap
          // Doing this has effectively calculated the height from the top of the table to the bottom of the current page
          (y > -c.height ? y : 0) - // Take from that
          // The top of the header plus
          (c.offset.top + // The header height if the standard header is present
          (y < -c.height ? c.height : 0) + // And the height of the footer
          s.height);
          x < 0 && (x = 0), g.outerHeight(x), Math.round(g.outerHeight()) >= Math.round(x) ? ir(this.dom.tfoot.parent()).addClass("fixedHeader-floating") : ir(this.dom.tfoot.parent()).removeClass(
            "fixedHeader-floating"
          );
        }
      }
      if (this.dom.header.floating && this.dom.header.floatingParent.css("left", h - B), this.dom.footer.floating && this.dom.footer.floatingParent.css("left", h - B), this.s.dt.settings()[0]._fixedColumns !== void 0) {
        var e = function(b, A, P) {
          if (P === void 0) {
            var D = ir(
              "div.dtfc-" + b + "-" + A + "-blocker"
            );
            P = D.length === 0 ? null : D.clone().css("z-index", 1);
          }
          return P !== null && (r === "in" || r === "below" ? P.appendTo("body").css({
            top: A === "top" ? c.offset.top : s.offset.top,
            left: b === "right" ? h + l - P.width() : h
          }) : P.detach()), P;
        };
        this.dom.header.rightBlocker = e(
          "right",
          "top",
          this.dom.header.rightBlocker
        ), this.dom.header.leftBlocker = e(
          "left",
          "top",
          this.dom.header.leftBlocker
        ), this.dom.footer.rightBlocker = e(
          "right",
          "bottom",
          this.dom.footer.rightBlocker
        ), this.dom.footer.leftBlocker = e(
          "left",
          "bottom",
          this.dom.footer.leftBlocker
        );
      }
    }
  },
  /**
   * Function to check if scrolling is enabled on the table or not
   * @returns Boolean value indicating if scrolling on the table is enabled or not
   */
  _scrollEnabled: function() {
    var a = this.s.dt.settings()[0].oScroll;
    return a.sY !== "" || a.sX !== "";
  },
  /**
   * Realign columns by using the colgroup tag and
   * checking column widths
   */
  _widths: function(a) {
    if (!(!a || !a.placeholder)) {
      var p = ir(this.s.dt.table().node()), g = ir(p.parent());
      a.floatingParent.css("width", g[0].offsetWidth), a.floating.css("width", p[0].offsetWidth), ir("colgroup", a.floating).remove();
      for (var w = a.placeholder.parent().find("colgroup").clone().appendTo(a.floating).find("col"), L = this.s.dt.columns(":visible").widths(), B = 0; B < L.length; B++)
        w.eq(B).css("width", L[B]);
    }
  }
});
Ga.version = "4.0.1";
Ga.defaults = {
  header: !0,
  footer: !1,
  headerOffset: 0,
  footerOffset: 0
};
ir.fn.dataTable.FixedHeader = Ga;
ir.fn.DataTable.FixedHeader = Ga;
ir(document).on("init.dt.dtfh", function(a, p, g) {
  if (a.namespace === "dt") {
    var w = p.oInit.fixedHeader, L = de.defaults.fixedHeader;
    if ((w || L) && !p._fixedHeader) {
      var B = ir.extend({}, L, w);
      w !== !1 && new Ga(p, B);
    }
  }
});
de.Api.register("fixedHeader()", function() {
});
de.Api.register("fixedHeader.adjust()", function() {
  return this.iterator("table", function(a) {
    var p = a._fixedHeader;
    p && p.update();
  });
});
de.Api.register("fixedHeader.enable()", function(a) {
  return this.iterator("table", function(p) {
    var g = p._fixedHeader;
    a = a !== void 0 ? a : !0, g && a !== g.enabled() && g.enable(a);
  });
});
de.Api.register("fixedHeader.enabled()", function() {
  if (this.context.length) {
    var a = this.context[0]._fixedHeader;
    if (a)
      return a.enabled();
  }
  return !1;
});
de.Api.register("fixedHeader.disable()", function() {
  return this.iterator("table", function(a) {
    var p = a._fixedHeader;
    p && p.enabled() && p.enable(!1);
  });
});
ir.each(["header", "footer"], function(a, p) {
  de.Api.register("fixedHeader." + p + "Offset()", function(g) {
    var w = this.context;
    return g === void 0 ? w.length && w[0]._fixedHeader ? w[0]._fixedHeader[p + "Offset"]() : void 0 : this.iterator("table", function(L) {
      var B = L._fixedHeader;
      B && B[p + "Offset"](g);
    });
  });
});
var hi = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
function hl(a) {
  return a && a.__esModule && Object.prototype.hasOwnProperty.call(a, "default") ? a.default : a;
}
function ko(a) {
  throw new Error('Could not dynamically require "' + a + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var dl = { exports: {} };
/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/
(function(a, p) {
  (function(g) {
    a.exports = g();
  })(function() {
    return function g(w, L, B) {
      function f(i, r) {
        if (!L[i]) {
          if (!w[i]) {
            var n = typeof ko == "function" && ko;
            if (!r && n)
              return n(i, !0);
            if (d)
              return d(i, !0);
            var o = new Error("Cannot find module '" + i + "'");
            throw o.code = "MODULE_NOT_FOUND", o;
          }
          var h = L[i] = { exports: {} };
          w[i][0].call(h.exports, function(u) {
            var l = w[i][1][u];
            return f(l || u);
          }, h, h.exports, g, w, L, B);
        }
        return L[i].exports;
      }
      for (var d = typeof ko == "function" && ko, t = 0; t < B.length; t++)
        f(B[t]);
      return f;
    }({ 1: [function(g, w, L) {
      var B = g("./utils"), f = g("./support"), d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      L.encode = function(t) {
        for (var i, r, n, o, h, u, l, c = [], s = 0, v = t.length, y = v, x = B.getTypeOf(t) !== "string"; s < t.length; )
          y = v - s, n = x ? (i = t[s++], r = s < v ? t[s++] : 0, s < v ? t[s++] : 0) : (i = t.charCodeAt(s++), r = s < v ? t.charCodeAt(s++) : 0, s < v ? t.charCodeAt(s++) : 0), o = i >> 2, h = (3 & i) << 4 | r >> 4, u = 1 < y ? (15 & r) << 2 | n >> 6 : 64, l = 2 < y ? 63 & n : 64, c.push(d.charAt(o) + d.charAt(h) + d.charAt(u) + d.charAt(l));
        return c.join("");
      }, L.decode = function(t) {
        var i, r, n, o, h, u, l = 0, c = 0, s = "data:";
        if (t.substr(0, s.length) === s)
          throw new Error("Invalid base64 input, it looks like a data url.");
        var v, y = 3 * (t = t.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
        if (t.charAt(t.length - 1) === d.charAt(64) && y--, t.charAt(t.length - 2) === d.charAt(64) && y--, y % 1 != 0)
          throw new Error("Invalid base64 input, bad content length.");
        for (v = f.uint8array ? new Uint8Array(0 | y) : new Array(0 | y); l < t.length; )
          i = d.indexOf(t.charAt(l++)) << 2 | (o = d.indexOf(t.charAt(l++))) >> 4, r = (15 & o) << 4 | (h = d.indexOf(t.charAt(l++))) >> 2, n = (3 & h) << 6 | (u = d.indexOf(t.charAt(l++))), v[c++] = i, h !== 64 && (v[c++] = r), u !== 64 && (v[c++] = n);
        return v;
      };
    }, { "./support": 30, "./utils": 32 }], 2: [function(g, w, L) {
      var B = g("./external"), f = g("./stream/DataWorker"), d = g("./stream/Crc32Probe"), t = g("./stream/DataLengthProbe");
      function i(r, n, o, h, u) {
        this.compressedSize = r, this.uncompressedSize = n, this.crc32 = o, this.compression = h, this.compressedContent = u;
      }
      i.prototype = { getContentWorker: function() {
        var r = new f(B.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new t("data_length")), n = this;
        return r.on("end", function() {
          if (this.streamInfo.data_length !== n.uncompressedSize)
            throw new Error("Bug : uncompressed data size mismatch");
        }), r;
      }, getCompressedWorker: function() {
        return new f(B.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
      } }, i.createWorkerFrom = function(r, n, o) {
        return r.pipe(new d()).pipe(new t("uncompressedSize")).pipe(n.compressWorker(o)).pipe(new t("compressedSize")).withStreamInfo("compression", n);
      }, w.exports = i;
    }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(g, w, L) {
      var B = g("./stream/GenericWorker");
      L.STORE = { magic: "\0\0", compressWorker: function() {
        return new B("STORE compression");
      }, uncompressWorker: function() {
        return new B("STORE decompression");
      } }, L.DEFLATE = g("./flate");
    }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(g, w, L) {
      var B = g("./utils"), f = function() {
        for (var d, t = [], i = 0; i < 256; i++) {
          d = i;
          for (var r = 0; r < 8; r++)
            d = 1 & d ? 3988292384 ^ d >>> 1 : d >>> 1;
          t[i] = d;
        }
        return t;
      }();
      w.exports = function(d, t) {
        return d !== void 0 && d.length ? B.getTypeOf(d) !== "string" ? function(i, r, n, o) {
          var h = f, u = o + n;
          i ^= -1;
          for (var l = o; l < u; l++)
            i = i >>> 8 ^ h[255 & (i ^ r[l])];
          return -1 ^ i;
        }(0 | t, d, d.length, 0) : function(i, r, n, o) {
          var h = f, u = o + n;
          i ^= -1;
          for (var l = o; l < u; l++)
            i = i >>> 8 ^ h[255 & (i ^ r.charCodeAt(l))];
          return -1 ^ i;
        }(0 | t, d, d.length, 0) : 0;
      };
    }, { "./utils": 32 }], 5: [function(g, w, L) {
      L.base64 = !1, L.binary = !1, L.dir = !1, L.createFolders = !0, L.date = null, L.compression = null, L.compressionOptions = null, L.comment = null, L.unixPermissions = null, L.dosPermissions = null;
    }, {}], 6: [function(g, w, L) {
      var B = null;
      B = typeof Promise != "undefined" ? Promise : g("lie"), w.exports = { Promise: B };
    }, { lie: 37 }], 7: [function(g, w, L) {
      var B = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Uint32Array != "undefined", f = g("pako"), d = g("./utils"), t = g("./stream/GenericWorker"), i = B ? "uint8array" : "array";
      function r(n, o) {
        t.call(this, "FlateWorker/" + n), this._pako = null, this._pakoAction = n, this._pakoOptions = o, this.meta = {};
      }
      L.magic = "\b\0", d.inherits(r, t), r.prototype.processChunk = function(n) {
        this.meta = n.meta, this._pako === null && this._createPako(), this._pako.push(d.transformTo(i, n.data), !1);
      }, r.prototype.flush = function() {
        t.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], !0);
      }, r.prototype.cleanUp = function() {
        t.prototype.cleanUp.call(this), this._pako = null;
      }, r.prototype._createPako = function() {
        this._pako = new f[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
        var n = this;
        this._pako.onData = function(o) {
          n.push({ data: o, meta: n.meta });
        };
      }, L.compressWorker = function(n) {
        return new r("Deflate", n);
      }, L.uncompressWorker = function() {
        return new r("Inflate", {});
      };
    }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(g, w, L) {
      function B(h, u) {
        var l, c = "";
        for (l = 0; l < u; l++)
          c += String.fromCharCode(255 & h), h >>>= 8;
        return c;
      }
      function f(h, u, l, c, s, v) {
        var y, x, e = h.file, b = h.compression, A = v !== i.utf8encode, P = d.transformTo("string", v(e.name)), D = d.transformTo("string", i.utf8encode(e.name)), E = e.comment, T = d.transformTo("string", v(E)), C = d.transformTo("string", i.utf8encode(E)), F = D.length !== e.name.length, m = C.length !== E.length, I = "", O = "", M = "", N = e.dir, G = e.date, ot = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
        u && !l || (ot.crc32 = h.crc32, ot.compressedSize = h.compressedSize, ot.uncompressedSize = h.uncompressedSize);
        var K = 0;
        u && (K |= 8), A || !F && !m || (K |= 2048);
        var nt = 0, xt = 0;
        N && (nt |= 16), s === "UNIX" ? (xt = 798, nt |= function(St, Dt) {
          var Lt = St;
          return St || (Lt = Dt ? 16893 : 33204), (65535 & Lt) << 16;
        }(e.unixPermissions, N)) : (xt = 20, nt |= function(St) {
          return 63 & (St || 0);
        }(e.dosPermissions)), y = G.getUTCHours(), y <<= 6, y |= G.getUTCMinutes(), y <<= 5, y |= G.getUTCSeconds() / 2, x = G.getUTCFullYear() - 1980, x <<= 4, x |= G.getUTCMonth() + 1, x <<= 5, x |= G.getUTCDate(), F && (O = B(1, 1) + B(r(P), 4) + D, I += "up" + B(O.length, 2) + O), m && (M = B(1, 1) + B(r(T), 4) + C, I += "uc" + B(M.length, 2) + M);
        var bt = "";
        return bt += `
\0`, bt += B(K, 2), bt += b.magic, bt += B(y, 2), bt += B(x, 2), bt += B(ot.crc32, 4), bt += B(ot.compressedSize, 4), bt += B(ot.uncompressedSize, 4), bt += B(P.length, 2), bt += B(I.length, 2), { fileRecord: n.LOCAL_FILE_HEADER + bt + P + I, dirRecord: n.CENTRAL_FILE_HEADER + B(xt, 2) + bt + B(T.length, 2) + "\0\0\0\0" + B(nt, 4) + B(c, 4) + P + I + T };
      }
      var d = g("../utils"), t = g("../stream/GenericWorker"), i = g("../utf8"), r = g("../crc32"), n = g("../signature");
      function o(h, u, l, c) {
        t.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = u, this.zipPlatform = l, this.encodeFileName = c, this.streamFiles = h, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
      }
      d.inherits(o, t), o.prototype.push = function(h) {
        var u = h.meta.percent || 0, l = this.entriesCount, c = this._sources.length;
        this.accumulate ? this.contentBuffer.push(h) : (this.bytesWritten += h.data.length, t.prototype.push.call(this, { data: h.data, meta: { currentFile: this.currentFile, percent: l ? (u + 100 * (l - c - 1)) / l : 100 } }));
      }, o.prototype.openedSource = function(h) {
        this.currentSourceOffset = this.bytesWritten, this.currentFile = h.file.name;
        var u = this.streamFiles && !h.file.dir;
        if (u) {
          var l = f(h, u, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          this.push({ data: l.fileRecord, meta: { percent: 0 } });
        } else
          this.accumulate = !0;
      }, o.prototype.closedSource = function(h) {
        this.accumulate = !1;
        var u = this.streamFiles && !h.file.dir, l = f(h, u, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
        if (this.dirRecords.push(l.dirRecord), u)
          this.push({ data: function(c) {
            return n.DATA_DESCRIPTOR + B(c.crc32, 4) + B(c.compressedSize, 4) + B(c.uncompressedSize, 4);
          }(h), meta: { percent: 100 } });
        else
          for (this.push({ data: l.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
            this.push(this.contentBuffer.shift());
        this.currentFile = null;
      }, o.prototype.flush = function() {
        for (var h = this.bytesWritten, u = 0; u < this.dirRecords.length; u++)
          this.push({ data: this.dirRecords[u], meta: { percent: 100 } });
        var l = this.bytesWritten - h, c = function(s, v, y, x, e) {
          var b = d.transformTo("string", e(x));
          return n.CENTRAL_DIRECTORY_END + "\0\0\0\0" + B(s, 2) + B(s, 2) + B(v, 4) + B(y, 4) + B(b.length, 2) + b;
        }(this.dirRecords.length, l, h, this.zipComment, this.encodeFileName);
        this.push({ data: c, meta: { percent: 100 } });
      }, o.prototype.prepareNextSource = function() {
        this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
      }, o.prototype.registerPrevious = function(h) {
        this._sources.push(h);
        var u = this;
        return h.on("data", function(l) {
          u.processChunk(l);
        }), h.on("end", function() {
          u.closedSource(u.previous.streamInfo), u._sources.length ? u.prepareNextSource() : u.end();
        }), h.on("error", function(l) {
          u.error(l);
        }), this;
      }, o.prototype.resume = function() {
        return !!t.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
      }, o.prototype.error = function(h) {
        var u = this._sources;
        if (!t.prototype.error.call(this, h))
          return !1;
        for (var l = 0; l < u.length; l++)
          try {
            u[l].error(h);
          } catch (c) {
          }
        return !0;
      }, o.prototype.lock = function() {
        t.prototype.lock.call(this);
        for (var h = this._sources, u = 0; u < h.length; u++)
          h[u].lock();
      }, w.exports = o;
    }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(g, w, L) {
      var B = g("../compressions"), f = g("./ZipFileWorker");
      L.generateWorker = function(d, t, i) {
        var r = new f(t.streamFiles, i, t.platform, t.encodeFileName), n = 0;
        try {
          d.forEach(function(o, h) {
            n++;
            var u = function(v, y) {
              var x = v || y, e = B[x];
              if (!e)
                throw new Error(x + " is not a valid compression method !");
              return e;
            }(h.options.compression, t.compression), l = h.options.compressionOptions || t.compressionOptions || {}, c = h.dir, s = h.date;
            h._compressWorker(u, l).withStreamInfo("file", { name: o, dir: c, date: s, comment: h.comment || "", unixPermissions: h.unixPermissions, dosPermissions: h.dosPermissions }).pipe(r);
          }), r.entriesCount = n;
        } catch (o) {
          r.error(o);
        }
        return r;
      };
    }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(g, w, L) {
      function B() {
        if (!(this instanceof B))
          return new B();
        if (arguments.length)
          throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
        this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
          var f = new B();
          for (var d in this)
            typeof this[d] != "function" && (f[d] = this[d]);
          return f;
        };
      }
      (B.prototype = g("./object")).loadAsync = g("./load"), B.support = g("./support"), B.defaults = g("./defaults"), B.version = "3.10.1", B.loadAsync = function(f, d) {
        return new B().loadAsync(f, d);
      }, B.external = g("./external"), w.exports = B;
    }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(g, w, L) {
      var B = g("./utils"), f = g("./external"), d = g("./utf8"), t = g("./zipEntries"), i = g("./stream/Crc32Probe"), r = g("./nodejsUtils");
      function n(o) {
        return new f.Promise(function(h, u) {
          var l = o.decompressed.getContentWorker().pipe(new i());
          l.on("error", function(c) {
            u(c);
          }).on("end", function() {
            l.streamInfo.crc32 !== o.decompressed.crc32 ? u(new Error("Corrupted zip : CRC32 mismatch")) : h();
          }).resume();
        });
      }
      w.exports = function(o, h) {
        var u = this;
        return h = B.extend(h || {}, { base64: !1, checkCRC32: !1, optimizedBinaryString: !1, createFolders: !1, decodeFileName: d.utf8decode }), r.isNode && r.isStream(o) ? f.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : B.prepareContent("the loaded zip file", o, !0, h.optimizedBinaryString, h.base64).then(function(l) {
          var c = new t(h);
          return c.load(l), c;
        }).then(function(l) {
          var c = [f.Promise.resolve(l)], s = l.files;
          if (h.checkCRC32)
            for (var v = 0; v < s.length; v++)
              c.push(n(s[v]));
          return f.Promise.all(c);
        }).then(function(l) {
          for (var c = l.shift(), s = c.files, v = 0; v < s.length; v++) {
            var y = s[v], x = y.fileNameStr, e = B.resolve(y.fileNameStr);
            u.file(e, y.decompressed, { binary: !0, optimizedBinaryString: !0, date: y.date, dir: y.dir, comment: y.fileCommentStr.length ? y.fileCommentStr : null, unixPermissions: y.unixPermissions, dosPermissions: y.dosPermissions, createFolders: h.createFolders }), y.dir || (u.file(e).unsafeOriginalName = x);
          }
          return c.zipComment.length && (u.comment = c.zipComment), u;
        });
      };
    }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(g, w, L) {
      var B = g("../utils"), f = g("../stream/GenericWorker");
      function d(t, i) {
        f.call(this, "Nodejs stream input adapter for " + t), this._upstreamEnded = !1, this._bindStream(i);
      }
      B.inherits(d, f), d.prototype._bindStream = function(t) {
        var i = this;
        (this._stream = t).pause(), t.on("data", function(r) {
          i.push({ data: r, meta: { percent: 0 } });
        }).on("error", function(r) {
          i.isPaused ? this.generatedError = r : i.error(r);
        }).on("end", function() {
          i.isPaused ? i._upstreamEnded = !0 : i.end();
        });
      }, d.prototype.pause = function() {
        return !!f.prototype.pause.call(this) && (this._stream.pause(), !0);
      }, d.prototype.resume = function() {
        return !!f.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
      }, w.exports = d;
    }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(g, w, L) {
      var B = g("readable-stream").Readable;
      function f(d, t, i) {
        B.call(this, t), this._helper = d;
        var r = this;
        d.on("data", function(n, o) {
          r.push(n) || r._helper.pause(), i && i(o);
        }).on("error", function(n) {
          r.emit("error", n);
        }).on("end", function() {
          r.push(null);
        });
      }
      g("../utils").inherits(f, B), f.prototype._read = function() {
        this._helper.resume();
      }, w.exports = f;
    }, { "../utils": 32, "readable-stream": 16 }], 14: [function(g, w, L) {
      w.exports = { isNode: typeof Buffer != "undefined", newBufferFrom: function(B, f) {
        if (Buffer.from && Buffer.from !== Uint8Array.from)
          return Buffer.from(B, f);
        if (typeof B == "number")
          throw new Error('The "data" argument must not be a number');
        return new Buffer(B, f);
      }, allocBuffer: function(B) {
        if (Buffer.alloc)
          return Buffer.alloc(B);
        var f = new Buffer(B);
        return f.fill(0), f;
      }, isBuffer: function(B) {
        return Buffer.isBuffer(B);
      }, isStream: function(B) {
        return B && typeof B.on == "function" && typeof B.pause == "function" && typeof B.resume == "function";
      } };
    }, {}], 15: [function(g, w, L) {
      function B(e, b, A) {
        var P, D = d.getTypeOf(b), E = d.extend(A || {}, r);
        E.date = E.date || /* @__PURE__ */ new Date(), E.compression !== null && (E.compression = E.compression.toUpperCase()), typeof E.unixPermissions == "string" && (E.unixPermissions = parseInt(E.unixPermissions, 8)), E.unixPermissions && 16384 & E.unixPermissions && (E.dir = !0), E.dosPermissions && 16 & E.dosPermissions && (E.dir = !0), E.dir && (e = s(e)), E.createFolders && (P = c(e)) && v.call(this, P, !0);
        var T = D === "string" && E.binary === !1 && E.base64 === !1;
        A && A.binary !== void 0 || (E.binary = !T), (b instanceof n && b.uncompressedSize === 0 || E.dir || !b || b.length === 0) && (E.base64 = !1, E.binary = !0, b = "", E.compression = "STORE", D = "string");
        var C = null;
        C = b instanceof n || b instanceof t ? b : u.isNode && u.isStream(b) ? new l(e, b) : d.prepareContent(e, b, E.binary, E.optimizedBinaryString, E.base64);
        var F = new o(e, C, E);
        this.files[e] = F;
      }
      var f = g("./utf8"), d = g("./utils"), t = g("./stream/GenericWorker"), i = g("./stream/StreamHelper"), r = g("./defaults"), n = g("./compressedObject"), o = g("./zipObject"), h = g("./generate"), u = g("./nodejsUtils"), l = g("./nodejs/NodejsStreamInputAdapter"), c = function(e) {
        e.slice(-1) === "/" && (e = e.substring(0, e.length - 1));
        var b = e.lastIndexOf("/");
        return 0 < b ? e.substring(0, b) : "";
      }, s = function(e) {
        return e.slice(-1) !== "/" && (e += "/"), e;
      }, v = function(e, b) {
        return b = b !== void 0 ? b : r.createFolders, e = s(e), this.files[e] || B.call(this, e, null, { dir: !0, createFolders: b }), this.files[e];
      };
      function y(e) {
        return Object.prototype.toString.call(e) === "[object RegExp]";
      }
      var x = { load: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, forEach: function(e) {
        var b, A, P;
        for (b in this.files)
          P = this.files[b], (A = b.slice(this.root.length, b.length)) && b.slice(0, this.root.length) === this.root && e(A, P);
      }, filter: function(e) {
        var b = [];
        return this.forEach(function(A, P) {
          e(A, P) && b.push(P);
        }), b;
      }, file: function(e, b, A) {
        if (arguments.length !== 1)
          return e = this.root + e, B.call(this, e, b, A), this;
        if (y(e)) {
          var P = e;
          return this.filter(function(E, T) {
            return !T.dir && P.test(E);
          });
        }
        var D = this.files[this.root + e];
        return D && !D.dir ? D : null;
      }, folder: function(e) {
        if (!e)
          return this;
        if (y(e))
          return this.filter(function(D, E) {
            return E.dir && e.test(D);
          });
        var b = this.root + e, A = v.call(this, b), P = this.clone();
        return P.root = A.name, P;
      }, remove: function(e) {
        e = this.root + e;
        var b = this.files[e];
        if (b || (e.slice(-1) !== "/" && (e += "/"), b = this.files[e]), b && !b.dir)
          delete this.files[e];
        else
          for (var A = this.filter(function(D, E) {
            return E.name.slice(0, e.length) === e;
          }), P = 0; P < A.length; P++)
            delete this.files[A[P].name];
        return this;
      }, generate: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, generateInternalStream: function(e) {
        var b, A = {};
        try {
          if ((A = d.extend(e || {}, { streamFiles: !1, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: f.utf8encode })).type = A.type.toLowerCase(), A.compression = A.compression.toUpperCase(), A.type === "binarystring" && (A.type = "string"), !A.type)
            throw new Error("No output type specified.");
          d.checkSupport(A.type), A.platform !== "darwin" && A.platform !== "freebsd" && A.platform !== "linux" && A.platform !== "sunos" || (A.platform = "UNIX"), A.platform === "win32" && (A.platform = "DOS");
          var P = A.comment || this.comment || "";
          b = h.generateWorker(this, A, P);
        } catch (D) {
          (b = new t("error")).error(D);
        }
        return new i(b, A.type || "string", A.mimeType);
      }, generateAsync: function(e, b) {
        return this.generateInternalStream(e).accumulate(b);
      }, generateNodeStream: function(e, b) {
        return (e = e || {}).type || (e.type = "nodebuffer"), this.generateInternalStream(e).toNodejsStream(b);
      } };
      w.exports = x;
    }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(g, w, L) {
      w.exports = g("stream");
    }, { stream: void 0 }], 17: [function(g, w, L) {
      var B = g("./DataReader");
      function f(d) {
        B.call(this, d);
        for (var t = 0; t < this.data.length; t++)
          d[t] = 255 & d[t];
      }
      g("../utils").inherits(f, B), f.prototype.byteAt = function(d) {
        return this.data[this.zero + d];
      }, f.prototype.lastIndexOfSignature = function(d) {
        for (var t = d.charCodeAt(0), i = d.charCodeAt(1), r = d.charCodeAt(2), n = d.charCodeAt(3), o = this.length - 4; 0 <= o; --o)
          if (this.data[o] === t && this.data[o + 1] === i && this.data[o + 2] === r && this.data[o + 3] === n)
            return o - this.zero;
        return -1;
      }, f.prototype.readAndCheckSignature = function(d) {
        var t = d.charCodeAt(0), i = d.charCodeAt(1), r = d.charCodeAt(2), n = d.charCodeAt(3), o = this.readData(4);
        return t === o[0] && i === o[1] && r === o[2] && n === o[3];
      }, f.prototype.readData = function(d) {
        if (this.checkOffset(d), d === 0)
          return [];
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, w.exports = f;
    }, { "../utils": 32, "./DataReader": 18 }], 18: [function(g, w, L) {
      var B = g("../utils");
      function f(d) {
        this.data = d, this.length = d.length, this.index = 0, this.zero = 0;
      }
      f.prototype = { checkOffset: function(d) {
        this.checkIndex(this.index + d);
      }, checkIndex: function(d) {
        if (this.length < this.zero + d || d < 0)
          throw new Error("End of data reached (data length = " + this.length + ", asked index = " + d + "). Corrupted zip ?");
      }, setIndex: function(d) {
        this.checkIndex(d), this.index = d;
      }, skip: function(d) {
        this.setIndex(this.index + d);
      }, byteAt: function() {
      }, readInt: function(d) {
        var t, i = 0;
        for (this.checkOffset(d), t = this.index + d - 1; t >= this.index; t--)
          i = (i << 8) + this.byteAt(t);
        return this.index += d, i;
      }, readString: function(d) {
        return B.transformTo("string", this.readData(d));
      }, readData: function() {
      }, lastIndexOfSignature: function() {
      }, readAndCheckSignature: function() {
      }, readDate: function() {
        var d = this.readInt(4);
        return new Date(Date.UTC(1980 + (d >> 25 & 127), (d >> 21 & 15) - 1, d >> 16 & 31, d >> 11 & 31, d >> 5 & 63, (31 & d) << 1));
      } }, w.exports = f;
    }, { "../utils": 32 }], 19: [function(g, w, L) {
      var B = g("./Uint8ArrayReader");
      function f(d) {
        B.call(this, d);
      }
      g("../utils").inherits(f, B), f.prototype.readData = function(d) {
        this.checkOffset(d);
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, w.exports = f;
    }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(g, w, L) {
      var B = g("./DataReader");
      function f(d) {
        B.call(this, d);
      }
      g("../utils").inherits(f, B), f.prototype.byteAt = function(d) {
        return this.data.charCodeAt(this.zero + d);
      }, f.prototype.lastIndexOfSignature = function(d) {
        return this.data.lastIndexOf(d) - this.zero;
      }, f.prototype.readAndCheckSignature = function(d) {
        return d === this.readData(4);
      }, f.prototype.readData = function(d) {
        this.checkOffset(d);
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, w.exports = f;
    }, { "../utils": 32, "./DataReader": 18 }], 21: [function(g, w, L) {
      var B = g("./ArrayReader");
      function f(d) {
        B.call(this, d);
      }
      g("../utils").inherits(f, B), f.prototype.readData = function(d) {
        if (this.checkOffset(d), d === 0)
          return new Uint8Array(0);
        var t = this.data.subarray(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, w.exports = f;
    }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(g, w, L) {
      var B = g("../utils"), f = g("../support"), d = g("./ArrayReader"), t = g("./StringReader"), i = g("./NodeBufferReader"), r = g("./Uint8ArrayReader");
      w.exports = function(n) {
        var o = B.getTypeOf(n);
        return B.checkSupport(o), o !== "string" || f.uint8array ? o === "nodebuffer" ? new i(n) : f.uint8array ? new r(B.transformTo("uint8array", n)) : new d(B.transformTo("array", n)) : new t(n);
      };
    }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(g, w, L) {
      L.LOCAL_FILE_HEADER = "PK", L.CENTRAL_FILE_HEADER = "PK", L.CENTRAL_DIRECTORY_END = "PK", L.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", L.ZIP64_CENTRAL_DIRECTORY_END = "PK", L.DATA_DESCRIPTOR = "PK\x07\b";
    }, {}], 24: [function(g, w, L) {
      var B = g("./GenericWorker"), f = g("../utils");
      function d(t) {
        B.call(this, "ConvertWorker to " + t), this.destType = t;
      }
      f.inherits(d, B), d.prototype.processChunk = function(t) {
        this.push({ data: f.transformTo(this.destType, t.data), meta: t.meta });
      }, w.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(g, w, L) {
      var B = g("./GenericWorker"), f = g("../crc32");
      function d() {
        B.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
      }
      g("../utils").inherits(d, B), d.prototype.processChunk = function(t) {
        this.streamInfo.crc32 = f(t.data, this.streamInfo.crc32 || 0), this.push(t);
      }, w.exports = d;
    }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(g, w, L) {
      var B = g("../utils"), f = g("./GenericWorker");
      function d(t) {
        f.call(this, "DataLengthProbe for " + t), this.propName = t, this.withStreamInfo(t, 0);
      }
      B.inherits(d, f), d.prototype.processChunk = function(t) {
        if (t) {
          var i = this.streamInfo[this.propName] || 0;
          this.streamInfo[this.propName] = i + t.data.length;
        }
        f.prototype.processChunk.call(this, t);
      }, w.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(g, w, L) {
      var B = g("../utils"), f = g("./GenericWorker");
      function d(t) {
        f.call(this, "DataWorker");
        var i = this;
        this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, t.then(function(r) {
          i.dataIsReady = !0, i.data = r, i.max = r && r.length || 0, i.type = B.getTypeOf(r), i.isPaused || i._tickAndRepeat();
        }, function(r) {
          i.error(r);
        });
      }
      B.inherits(d, f), d.prototype.cleanUp = function() {
        f.prototype.cleanUp.call(this), this.data = null;
      }, d.prototype.resume = function() {
        return !!f.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, B.delay(this._tickAndRepeat, [], this)), !0);
      }, d.prototype._tickAndRepeat = function() {
        this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (B.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
      }, d.prototype._tick = function() {
        if (this.isPaused || this.isFinished)
          return !1;
        var t = null, i = Math.min(this.max, this.index + 16384);
        if (this.index >= this.max)
          return this.end();
        switch (this.type) {
          case "string":
            t = this.data.substring(this.index, i);
            break;
          case "uint8array":
            t = this.data.subarray(this.index, i);
            break;
          case "array":
          case "nodebuffer":
            t = this.data.slice(this.index, i);
        }
        return this.index = i, this.push({ data: t, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
      }, w.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(g, w, L) {
      function B(f) {
        this.name = f || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
      }
      B.prototype = { push: function(f) {
        this.emit("data", f);
      }, end: function() {
        if (this.isFinished)
          return !1;
        this.flush();
        try {
          this.emit("end"), this.cleanUp(), this.isFinished = !0;
        } catch (f) {
          this.emit("error", f);
        }
        return !0;
      }, error: function(f) {
        return !this.isFinished && (this.isPaused ? this.generatedError = f : (this.isFinished = !0, this.emit("error", f), this.previous && this.previous.error(f), this.cleanUp()), !0);
      }, on: function(f, d) {
        return this._listeners[f].push(d), this;
      }, cleanUp: function() {
        this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
      }, emit: function(f, d) {
        if (this._listeners[f])
          for (var t = 0; t < this._listeners[f].length; t++)
            this._listeners[f][t].call(this, d);
      }, pipe: function(f) {
        return f.registerPrevious(this);
      }, registerPrevious: function(f) {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.streamInfo = f.streamInfo, this.mergeStreamInfo(), this.previous = f;
        var d = this;
        return f.on("data", function(t) {
          d.processChunk(t);
        }), f.on("end", function() {
          d.end();
        }), f.on("error", function(t) {
          d.error(t);
        }), this;
      }, pause: function() {
        return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
      }, resume: function() {
        if (!this.isPaused || this.isFinished)
          return !1;
        var f = this.isPaused = !1;
        return this.generatedError && (this.error(this.generatedError), f = !0), this.previous && this.previous.resume(), !f;
      }, flush: function() {
      }, processChunk: function(f) {
        this.push(f);
      }, withStreamInfo: function(f, d) {
        return this.extraStreamInfo[f] = d, this.mergeStreamInfo(), this;
      }, mergeStreamInfo: function() {
        for (var f in this.extraStreamInfo)
          Object.prototype.hasOwnProperty.call(this.extraStreamInfo, f) && (this.streamInfo[f] = this.extraStreamInfo[f]);
      }, lock: function() {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.isLocked = !0, this.previous && this.previous.lock();
      }, toString: function() {
        var f = "Worker " + this.name;
        return this.previous ? this.previous + " -> " + f : f;
      } }, w.exports = B;
    }, {}], 29: [function(g, w, L) {
      var B = g("../utils"), f = g("./ConvertWorker"), d = g("./GenericWorker"), t = g("../base64"), i = g("../support"), r = g("../external"), n = null;
      if (i.nodestream)
        try {
          n = g("../nodejs/NodejsStreamOutputAdapter");
        } catch (u) {
        }
      function o(u, l) {
        return new r.Promise(function(c, s) {
          var v = [], y = u._internalType, x = u._outputType, e = u._mimeType;
          u.on("data", function(b, A) {
            v.push(b), l && l(A);
          }).on("error", function(b) {
            v = [], s(b);
          }).on("end", function() {
            try {
              var b = function(A, P, D) {
                switch (A) {
                  case "blob":
                    return B.newBlob(B.transformTo("arraybuffer", P), D);
                  case "base64":
                    return t.encode(P);
                  default:
                    return B.transformTo(A, P);
                }
              }(x, function(A, P) {
                var D, E = 0, T = null, C = 0;
                for (D = 0; D < P.length; D++)
                  C += P[D].length;
                switch (A) {
                  case "string":
                    return P.join("");
                  case "array":
                    return Array.prototype.concat.apply([], P);
                  case "uint8array":
                    for (T = new Uint8Array(C), D = 0; D < P.length; D++)
                      T.set(P[D], E), E += P[D].length;
                    return T;
                  case "nodebuffer":
                    return Buffer.concat(P);
                  default:
                    throw new Error("concat : unsupported type '" + A + "'");
                }
              }(y, v), e);
              c(b);
            } catch (A) {
              s(A);
            }
            v = [];
          }).resume();
        });
      }
      function h(u, l, c) {
        var s = l;
        switch (l) {
          case "blob":
          case "arraybuffer":
            s = "uint8array";
            break;
          case "base64":
            s = "string";
        }
        try {
          this._internalType = s, this._outputType = l, this._mimeType = c, B.checkSupport(s), this._worker = u.pipe(new f(s)), u.lock();
        } catch (v) {
          this._worker = new d("error"), this._worker.error(v);
        }
      }
      h.prototype = { accumulate: function(u) {
        return o(this, u);
      }, on: function(u, l) {
        var c = this;
        return u === "data" ? this._worker.on(u, function(s) {
          l.call(c, s.data, s.meta);
        }) : this._worker.on(u, function() {
          B.delay(l, arguments, c);
        }), this;
      }, resume: function() {
        return B.delay(this._worker.resume, [], this._worker), this;
      }, pause: function() {
        return this._worker.pause(), this;
      }, toNodejsStream: function(u) {
        if (B.checkSupport("nodestream"), this._outputType !== "nodebuffer")
          throw new Error(this._outputType + " is not supported by this method");
        return new n(this, { objectMode: this._outputType !== "nodebuffer" }, u);
      } }, w.exports = h;
    }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(g, w, L) {
      if (L.base64 = !0, L.array = !0, L.string = !0, L.arraybuffer = typeof ArrayBuffer != "undefined" && typeof Uint8Array != "undefined", L.nodebuffer = typeof Buffer != "undefined", L.uint8array = typeof Uint8Array != "undefined", typeof ArrayBuffer == "undefined")
        L.blob = !1;
      else {
        var B = new ArrayBuffer(0);
        try {
          L.blob = new Blob([B], { type: "application/zip" }).size === 0;
        } catch (d) {
          try {
            var f = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            f.append(B), L.blob = f.getBlob("application/zip").size === 0;
          } catch (t) {
            L.blob = !1;
          }
        }
      }
      try {
        L.nodestream = !!g("readable-stream").Readable;
      } catch (d) {
        L.nodestream = !1;
      }
    }, { "readable-stream": 16 }], 31: [function(g, w, L) {
      for (var B = g("./utils"), f = g("./support"), d = g("./nodejsUtils"), t = g("./stream/GenericWorker"), i = new Array(256), r = 0; r < 256; r++)
        i[r] = 252 <= r ? 6 : 248 <= r ? 5 : 240 <= r ? 4 : 224 <= r ? 3 : 192 <= r ? 2 : 1;
      i[254] = i[254] = 1;
      function n() {
        t.call(this, "utf-8 decode"), this.leftOver = null;
      }
      function o() {
        t.call(this, "utf-8 encode");
      }
      L.utf8encode = function(h) {
        return f.nodebuffer ? d.newBufferFrom(h, "utf-8") : function(u) {
          var l, c, s, v, y, x = u.length, e = 0;
          for (v = 0; v < x; v++)
            (64512 & (c = u.charCodeAt(v))) == 55296 && v + 1 < x && (64512 & (s = u.charCodeAt(v + 1))) == 56320 && (c = 65536 + (c - 55296 << 10) + (s - 56320), v++), e += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
          for (l = f.uint8array ? new Uint8Array(e) : new Array(e), v = y = 0; y < e; v++)
            (64512 & (c = u.charCodeAt(v))) == 55296 && v + 1 < x && (64512 & (s = u.charCodeAt(v + 1))) == 56320 && (c = 65536 + (c - 55296 << 10) + (s - 56320), v++), c < 128 ? l[y++] = c : (c < 2048 ? l[y++] = 192 | c >>> 6 : (c < 65536 ? l[y++] = 224 | c >>> 12 : (l[y++] = 240 | c >>> 18, l[y++] = 128 | c >>> 12 & 63), l[y++] = 128 | c >>> 6 & 63), l[y++] = 128 | 63 & c);
          return l;
        }(h);
      }, L.utf8decode = function(h) {
        return f.nodebuffer ? B.transformTo("nodebuffer", h).toString("utf-8") : function(u) {
          var l, c, s, v, y = u.length, x = new Array(2 * y);
          for (l = c = 0; l < y; )
            if ((s = u[l++]) < 128)
              x[c++] = s;
            else if (4 < (v = i[s]))
              x[c++] = 65533, l += v - 1;
            else {
              for (s &= v === 2 ? 31 : v === 3 ? 15 : 7; 1 < v && l < y; )
                s = s << 6 | 63 & u[l++], v--;
              1 < v ? x[c++] = 65533 : s < 65536 ? x[c++] = s : (s -= 65536, x[c++] = 55296 | s >> 10 & 1023, x[c++] = 56320 | 1023 & s);
            }
          return x.length !== c && (x.subarray ? x = x.subarray(0, c) : x.length = c), B.applyFromCharCode(x);
        }(h = B.transformTo(f.uint8array ? "uint8array" : "array", h));
      }, B.inherits(n, t), n.prototype.processChunk = function(h) {
        var u = B.transformTo(f.uint8array ? "uint8array" : "array", h.data);
        if (this.leftOver && this.leftOver.length) {
          if (f.uint8array) {
            var l = u;
            (u = new Uint8Array(l.length + this.leftOver.length)).set(this.leftOver, 0), u.set(l, this.leftOver.length);
          } else
            u = this.leftOver.concat(u);
          this.leftOver = null;
        }
        var c = function(v, y) {
          var x;
          for ((y = y || v.length) > v.length && (y = v.length), x = y - 1; 0 <= x && (192 & v[x]) == 128; )
            x--;
          return x < 0 || x === 0 ? y : x + i[v[x]] > y ? x : y;
        }(u), s = u;
        c !== u.length && (f.uint8array ? (s = u.subarray(0, c), this.leftOver = u.subarray(c, u.length)) : (s = u.slice(0, c), this.leftOver = u.slice(c, u.length))), this.push({ data: L.utf8decode(s), meta: h.meta });
      }, n.prototype.flush = function() {
        this.leftOver && this.leftOver.length && (this.push({ data: L.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
      }, L.Utf8DecodeWorker = n, B.inherits(o, t), o.prototype.processChunk = function(h) {
        this.push({ data: L.utf8encode(h.data), meta: h.meta });
      }, L.Utf8EncodeWorker = o;
    }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(g, w, L) {
      var B = g("./support"), f = g("./base64"), d = g("./nodejsUtils"), t = g("./external");
      function i(l) {
        return l;
      }
      function r(l, c) {
        for (var s = 0; s < l.length; ++s)
          c[s] = 255 & l.charCodeAt(s);
        return c;
      }
      g("setimmediate"), L.newBlob = function(l, c) {
        L.checkSupport("blob");
        try {
          return new Blob([l], { type: c });
        } catch (v) {
          try {
            var s = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            return s.append(l), s.getBlob(c);
          } catch (y) {
            throw new Error("Bug : can't construct the Blob.");
          }
        }
      };
      var n = { stringifyByChunk: function(l, c, s) {
        var v = [], y = 0, x = l.length;
        if (x <= s)
          return String.fromCharCode.apply(null, l);
        for (; y < x; )
          c === "array" || c === "nodebuffer" ? v.push(String.fromCharCode.apply(null, l.slice(y, Math.min(y + s, x)))) : v.push(String.fromCharCode.apply(null, l.subarray(y, Math.min(y + s, x)))), y += s;
        return v.join("");
      }, stringifyByChar: function(l) {
        for (var c = "", s = 0; s < l.length; s++)
          c += String.fromCharCode(l[s]);
        return c;
      }, applyCanBeUsed: { uint8array: function() {
        try {
          return B.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
        } catch (l) {
          return !1;
        }
      }(), nodebuffer: function() {
        try {
          return B.nodebuffer && String.fromCharCode.apply(null, d.allocBuffer(1)).length === 1;
        } catch (l) {
          return !1;
        }
      }() } };
      function o(l) {
        var c = 65536, s = L.getTypeOf(l), v = !0;
        if (s === "uint8array" ? v = n.applyCanBeUsed.uint8array : s === "nodebuffer" && (v = n.applyCanBeUsed.nodebuffer), v)
          for (; 1 < c; )
            try {
              return n.stringifyByChunk(l, s, c);
            } catch (y) {
              c = Math.floor(c / 2);
            }
        return n.stringifyByChar(l);
      }
      function h(l, c) {
        for (var s = 0; s < l.length; s++)
          c[s] = l[s];
        return c;
      }
      L.applyFromCharCode = o;
      var u = {};
      u.string = { string: i, array: function(l) {
        return r(l, new Array(l.length));
      }, arraybuffer: function(l) {
        return u.string.uint8array(l).buffer;
      }, uint8array: function(l) {
        return r(l, new Uint8Array(l.length));
      }, nodebuffer: function(l) {
        return r(l, d.allocBuffer(l.length));
      } }, u.array = { string: o, array: i, arraybuffer: function(l) {
        return new Uint8Array(l).buffer;
      }, uint8array: function(l) {
        return new Uint8Array(l);
      }, nodebuffer: function(l) {
        return d.newBufferFrom(l);
      } }, u.arraybuffer = { string: function(l) {
        return o(new Uint8Array(l));
      }, array: function(l) {
        return h(new Uint8Array(l), new Array(l.byteLength));
      }, arraybuffer: i, uint8array: function(l) {
        return new Uint8Array(l);
      }, nodebuffer: function(l) {
        return d.newBufferFrom(new Uint8Array(l));
      } }, u.uint8array = { string: o, array: function(l) {
        return h(l, new Array(l.length));
      }, arraybuffer: function(l) {
        return l.buffer;
      }, uint8array: i, nodebuffer: function(l) {
        return d.newBufferFrom(l);
      } }, u.nodebuffer = { string: o, array: function(l) {
        return h(l, new Array(l.length));
      }, arraybuffer: function(l) {
        return u.nodebuffer.uint8array(l).buffer;
      }, uint8array: function(l) {
        return h(l, new Uint8Array(l.length));
      }, nodebuffer: i }, L.transformTo = function(l, c) {
        if (c = c || "", !l)
          return c;
        L.checkSupport(l);
        var s = L.getTypeOf(c);
        return u[s][l](c);
      }, L.resolve = function(l) {
        for (var c = l.split("/"), s = [], v = 0; v < c.length; v++) {
          var y = c[v];
          y === "." || y === "" && v !== 0 && v !== c.length - 1 || (y === ".." ? s.pop() : s.push(y));
        }
        return s.join("/");
      }, L.getTypeOf = function(l) {
        return typeof l == "string" ? "string" : Object.prototype.toString.call(l) === "[object Array]" ? "array" : B.nodebuffer && d.isBuffer(l) ? "nodebuffer" : B.uint8array && l instanceof Uint8Array ? "uint8array" : B.arraybuffer && l instanceof ArrayBuffer ? "arraybuffer" : void 0;
      }, L.checkSupport = function(l) {
        if (!B[l.toLowerCase()])
          throw new Error(l + " is not supported by this platform");
      }, L.MAX_VALUE_16BITS = 65535, L.MAX_VALUE_32BITS = -1, L.pretty = function(l) {
        var c, s, v = "";
        for (s = 0; s < (l || "").length; s++)
          v += "\\x" + ((c = l.charCodeAt(s)) < 16 ? "0" : "") + c.toString(16).toUpperCase();
        return v;
      }, L.delay = function(l, c, s) {
        setImmediate(function() {
          l.apply(s || null, c || []);
        });
      }, L.inherits = function(l, c) {
        function s() {
        }
        s.prototype = c.prototype, l.prototype = new s();
      }, L.extend = function() {
        var l, c, s = {};
        for (l = 0; l < arguments.length; l++)
          for (c in arguments[l])
            Object.prototype.hasOwnProperty.call(arguments[l], c) && s[c] === void 0 && (s[c] = arguments[l][c]);
        return s;
      }, L.prepareContent = function(l, c, s, v, y) {
        return t.Promise.resolve(c).then(function(x) {
          return B.blob && (x instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(x)) !== -1) && typeof FileReader != "undefined" ? new t.Promise(function(e, b) {
            var A = new FileReader();
            A.onload = function(P) {
              e(P.target.result);
            }, A.onerror = function(P) {
              b(P.target.error);
            }, A.readAsArrayBuffer(x);
          }) : x;
        }).then(function(x) {
          var e = L.getTypeOf(x);
          return e ? (e === "arraybuffer" ? x = L.transformTo("uint8array", x) : e === "string" && (y ? x = f.decode(x) : s && v !== !0 && (x = function(b) {
            return r(b, B.uint8array ? new Uint8Array(b.length) : new Array(b.length));
          }(x))), x) : t.Promise.reject(new Error("Can't read the data of '" + l + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
        });
      };
    }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(g, w, L) {
      var B = g("./reader/readerFor"), f = g("./utils"), d = g("./signature"), t = g("./zipEntry"), i = g("./support");
      function r(n) {
        this.files = [], this.loadOptions = n;
      }
      r.prototype = { checkSignature: function(n) {
        if (!this.reader.readAndCheckSignature(n)) {
          this.reader.index -= 4;
          var o = this.reader.readString(4);
          throw new Error("Corrupted zip or bug: unexpected signature (" + f.pretty(o) + ", expected " + f.pretty(n) + ")");
        }
      }, isSignature: function(n, o) {
        var h = this.reader.index;
        this.reader.setIndex(n);
        var u = this.reader.readString(4) === o;
        return this.reader.setIndex(h), u;
      }, readBlockEndOfCentral: function() {
        this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
        var n = this.reader.readData(this.zipCommentLength), o = i.uint8array ? "uint8array" : "array", h = f.transformTo(o, n);
        this.zipComment = this.loadOptions.decodeFileName(h);
      }, readBlockZip64EndOfCentral: function() {
        this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
        for (var n, o, h, u = this.zip64EndOfCentralSize - 44; 0 < u; )
          n = this.reader.readInt(2), o = this.reader.readInt(4), h = this.reader.readData(o), this.zip64ExtensibleData[n] = { id: n, length: o, value: h };
      }, readBlockZip64EndOfCentralLocator: function() {
        if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
          throw new Error("Multi-volumes zip are not supported");
      }, readLocalFiles: function() {
        var n, o;
        for (n = 0; n < this.files.length; n++)
          o = this.files[n], this.reader.setIndex(o.localHeaderOffset), this.checkSignature(d.LOCAL_FILE_HEADER), o.readLocalPart(this.reader), o.handleUTF8(), o.processAttributes();
      }, readCentralDir: function() {
        var n;
        for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(d.CENTRAL_FILE_HEADER); )
          (n = new t({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(n);
        if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0)
          throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
      }, readEndOfCentral: function() {
        var n = this.reader.lastIndexOfSignature(d.CENTRAL_DIRECTORY_END);
        if (n < 0)
          throw this.isSignature(0, d.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
        this.reader.setIndex(n);
        var o = n;
        if (this.checkSignature(d.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === f.MAX_VALUE_16BITS || this.diskWithCentralDirStart === f.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === f.MAX_VALUE_16BITS || this.centralDirRecords === f.MAX_VALUE_16BITS || this.centralDirSize === f.MAX_VALUE_32BITS || this.centralDirOffset === f.MAX_VALUE_32BITS) {
          if (this.zip64 = !0, (n = this.reader.lastIndexOfSignature(d.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
          if (this.reader.setIndex(n), this.checkSignature(d.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, d.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(d.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
          this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(d.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
        }
        var h = this.centralDirOffset + this.centralDirSize;
        this.zip64 && (h += 20, h += 12 + this.zip64EndOfCentralSize);
        var u = o - h;
        if (0 < u)
          this.isSignature(o, d.CENTRAL_FILE_HEADER) || (this.reader.zero = u);
        else if (u < 0)
          throw new Error("Corrupted zip: missing " + Math.abs(u) + " bytes.");
      }, prepareReader: function(n) {
        this.reader = B(n);
      }, load: function(n) {
        this.prepareReader(n), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
      } }, w.exports = r;
    }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(g, w, L) {
      var B = g("./reader/readerFor"), f = g("./utils"), d = g("./compressedObject"), t = g("./crc32"), i = g("./utf8"), r = g("./compressions"), n = g("./support");
      function o(h, u) {
        this.options = h, this.loadOptions = u;
      }
      o.prototype = { isEncrypted: function() {
        return (1 & this.bitFlag) == 1;
      }, useUTF8: function() {
        return (2048 & this.bitFlag) == 2048;
      }, readLocalPart: function(h) {
        var u, l;
        if (h.skip(22), this.fileNameLength = h.readInt(2), l = h.readInt(2), this.fileName = h.readData(this.fileNameLength), h.skip(l), this.compressedSize === -1 || this.uncompressedSize === -1)
          throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
        if ((u = function(c) {
          for (var s in r)
            if (Object.prototype.hasOwnProperty.call(r, s) && r[s].magic === c)
              return r[s];
          return null;
        }(this.compressionMethod)) === null)
          throw new Error("Corrupted zip : compression " + f.pretty(this.compressionMethod) + " unknown (inner file : " + f.transformTo("string", this.fileName) + ")");
        this.decompressed = new d(this.compressedSize, this.uncompressedSize, this.crc32, u, h.readData(this.compressedSize));
      }, readCentralPart: function(h) {
        this.versionMadeBy = h.readInt(2), h.skip(2), this.bitFlag = h.readInt(2), this.compressionMethod = h.readString(2), this.date = h.readDate(), this.crc32 = h.readInt(4), this.compressedSize = h.readInt(4), this.uncompressedSize = h.readInt(4);
        var u = h.readInt(2);
        if (this.extraFieldsLength = h.readInt(2), this.fileCommentLength = h.readInt(2), this.diskNumberStart = h.readInt(2), this.internalFileAttributes = h.readInt(2), this.externalFileAttributes = h.readInt(4), this.localHeaderOffset = h.readInt(4), this.isEncrypted())
          throw new Error("Encrypted zip are not supported");
        h.skip(u), this.readExtraFields(h), this.parseZIP64ExtraField(h), this.fileComment = h.readData(this.fileCommentLength);
      }, processAttributes: function() {
        this.unixPermissions = null, this.dosPermissions = null;
        var h = this.versionMadeBy >> 8;
        this.dir = !!(16 & this.externalFileAttributes), h == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), h == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = !0);
      }, parseZIP64ExtraField: function() {
        if (this.extraFields[1]) {
          var h = B(this.extraFields[1].value);
          this.uncompressedSize === f.MAX_VALUE_32BITS && (this.uncompressedSize = h.readInt(8)), this.compressedSize === f.MAX_VALUE_32BITS && (this.compressedSize = h.readInt(8)), this.localHeaderOffset === f.MAX_VALUE_32BITS && (this.localHeaderOffset = h.readInt(8)), this.diskNumberStart === f.MAX_VALUE_32BITS && (this.diskNumberStart = h.readInt(4));
        }
      }, readExtraFields: function(h) {
        var u, l, c, s = h.index + this.extraFieldsLength;
        for (this.extraFields || (this.extraFields = {}); h.index + 4 < s; )
          u = h.readInt(2), l = h.readInt(2), c = h.readData(l), this.extraFields[u] = { id: u, length: l, value: c };
        h.setIndex(s);
      }, handleUTF8: function() {
        var h = n.uint8array ? "uint8array" : "array";
        if (this.useUTF8())
          this.fileNameStr = i.utf8decode(this.fileName), this.fileCommentStr = i.utf8decode(this.fileComment);
        else {
          var u = this.findExtraFieldUnicodePath();
          if (u !== null)
            this.fileNameStr = u;
          else {
            var l = f.transformTo(h, this.fileName);
            this.fileNameStr = this.loadOptions.decodeFileName(l);
          }
          var c = this.findExtraFieldUnicodeComment();
          if (c !== null)
            this.fileCommentStr = c;
          else {
            var s = f.transformTo(h, this.fileComment);
            this.fileCommentStr = this.loadOptions.decodeFileName(s);
          }
        }
      }, findExtraFieldUnicodePath: function() {
        var h = this.extraFields[28789];
        if (h) {
          var u = B(h.value);
          return u.readInt(1) !== 1 || t(this.fileName) !== u.readInt(4) ? null : i.utf8decode(u.readData(h.length - 5));
        }
        return null;
      }, findExtraFieldUnicodeComment: function() {
        var h = this.extraFields[25461];
        if (h) {
          var u = B(h.value);
          return u.readInt(1) !== 1 || t(this.fileComment) !== u.readInt(4) ? null : i.utf8decode(u.readData(h.length - 5));
        }
        return null;
      } }, w.exports = o;
    }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(g, w, L) {
      function B(u, l, c) {
        this.name = u, this.dir = c.dir, this.date = c.date, this.comment = c.comment, this.unixPermissions = c.unixPermissions, this.dosPermissions = c.dosPermissions, this._data = l, this._dataBinary = c.binary, this.options = { compression: c.compression, compressionOptions: c.compressionOptions };
      }
      var f = g("./stream/StreamHelper"), d = g("./stream/DataWorker"), t = g("./utf8"), i = g("./compressedObject"), r = g("./stream/GenericWorker");
      B.prototype = { internalStream: function(u) {
        var l = null, c = "string";
        try {
          if (!u)
            throw new Error("No output type specified.");
          var s = (c = u.toLowerCase()) === "string" || c === "text";
          c !== "binarystring" && c !== "text" || (c = "string"), l = this._decompressWorker();
          var v = !this._dataBinary;
          v && !s && (l = l.pipe(new t.Utf8EncodeWorker())), !v && s && (l = l.pipe(new t.Utf8DecodeWorker()));
        } catch (y) {
          (l = new r("error")).error(y);
        }
        return new f(l, c, "");
      }, async: function(u, l) {
        return this.internalStream(u).accumulate(l);
      }, nodeStream: function(u, l) {
        return this.internalStream(u || "nodebuffer").toNodejsStream(l);
      }, _compressWorker: function(u, l) {
        if (this._data instanceof i && this._data.compression.magic === u.magic)
          return this._data.getCompressedWorker();
        var c = this._decompressWorker();
        return this._dataBinary || (c = c.pipe(new t.Utf8EncodeWorker())), i.createWorkerFrom(c, u, l);
      }, _decompressWorker: function() {
        return this._data instanceof i ? this._data.getContentWorker() : this._data instanceof r ? this._data : new d(this._data);
      } };
      for (var n = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], o = function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, h = 0; h < n.length; h++)
        B.prototype[n[h]] = o;
      w.exports = B;
    }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(g, w, L) {
      (function(B) {
        var f, d, t = B.MutationObserver || B.WebKitMutationObserver;
        if (t) {
          var i = 0, r = new t(u), n = B.document.createTextNode("");
          r.observe(n, { characterData: !0 }), f = function() {
            n.data = i = ++i % 2;
          };
        } else if (B.setImmediate || B.MessageChannel === void 0)
          f = "document" in B && "onreadystatechange" in B.document.createElement("script") ? function() {
            var l = B.document.createElement("script");
            l.onreadystatechange = function() {
              u(), l.onreadystatechange = null, l.parentNode.removeChild(l), l = null;
            }, B.document.documentElement.appendChild(l);
          } : function() {
            setTimeout(u, 0);
          };
        else {
          var o = new B.MessageChannel();
          o.port1.onmessage = u, f = function() {
            o.port2.postMessage(0);
          };
        }
        var h = [];
        function u() {
          var l, c;
          d = !0;
          for (var s = h.length; s; ) {
            for (c = h, h = [], l = -1; ++l < s; )
              c[l]();
            s = h.length;
          }
          d = !1;
        }
        w.exports = function(l) {
          h.push(l) !== 1 || d || f();
        };
      }).call(this, typeof hi != "undefined" ? hi : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
    }, {}], 37: [function(g, w, L) {
      var B = g("immediate");
      function f() {
      }
      var d = {}, t = ["REJECTED"], i = ["FULFILLED"], r = ["PENDING"];
      function n(s) {
        if (typeof s != "function")
          throw new TypeError("resolver must be a function");
        this.state = r, this.queue = [], this.outcome = void 0, s !== f && l(this, s);
      }
      function o(s, v, y) {
        this.promise = s, typeof v == "function" && (this.onFulfilled = v, this.callFulfilled = this.otherCallFulfilled), typeof y == "function" && (this.onRejected = y, this.callRejected = this.otherCallRejected);
      }
      function h(s, v, y) {
        B(function() {
          var x;
          try {
            x = v(y);
          } catch (e) {
            return d.reject(s, e);
          }
          x === s ? d.reject(s, new TypeError("Cannot resolve promise with itself")) : d.resolve(s, x);
        });
      }
      function u(s) {
        var v = s && s.then;
        if (s && (typeof s == "object" || typeof s == "function") && typeof v == "function")
          return function() {
            v.apply(s, arguments);
          };
      }
      function l(s, v) {
        var y = !1;
        function x(A) {
          y || (y = !0, d.reject(s, A));
        }
        function e(A) {
          y || (y = !0, d.resolve(s, A));
        }
        var b = c(function() {
          v(e, x);
        });
        b.status === "error" && x(b.value);
      }
      function c(s, v) {
        var y = {};
        try {
          y.value = s(v), y.status = "success";
        } catch (x) {
          y.status = "error", y.value = x;
        }
        return y;
      }
      (w.exports = n).prototype.finally = function(s) {
        if (typeof s != "function")
          return this;
        var v = this.constructor;
        return this.then(function(y) {
          return v.resolve(s()).then(function() {
            return y;
          });
        }, function(y) {
          return v.resolve(s()).then(function() {
            throw y;
          });
        });
      }, n.prototype.catch = function(s) {
        return this.then(null, s);
      }, n.prototype.then = function(s, v) {
        if (typeof s != "function" && this.state === i || typeof v != "function" && this.state === t)
          return this;
        var y = new this.constructor(f);
        return this.state !== r ? h(y, this.state === i ? s : v, this.outcome) : this.queue.push(new o(y, s, v)), y;
      }, o.prototype.callFulfilled = function(s) {
        d.resolve(this.promise, s);
      }, o.prototype.otherCallFulfilled = function(s) {
        h(this.promise, this.onFulfilled, s);
      }, o.prototype.callRejected = function(s) {
        d.reject(this.promise, s);
      }, o.prototype.otherCallRejected = function(s) {
        h(this.promise, this.onRejected, s);
      }, d.resolve = function(s, v) {
        var y = c(u, v);
        if (y.status === "error")
          return d.reject(s, y.value);
        var x = y.value;
        if (x)
          l(s, x);
        else {
          s.state = i, s.outcome = v;
          for (var e = -1, b = s.queue.length; ++e < b; )
            s.queue[e].callFulfilled(v);
        }
        return s;
      }, d.reject = function(s, v) {
        s.state = t, s.outcome = v;
        for (var y = -1, x = s.queue.length; ++y < x; )
          s.queue[y].callRejected(v);
        return s;
      }, n.resolve = function(s) {
        return s instanceof this ? s : d.resolve(new this(f), s);
      }, n.reject = function(s) {
        var v = new this(f);
        return d.reject(v, s);
      }, n.all = function(s) {
        var v = this;
        if (Object.prototype.toString.call(s) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var y = s.length, x = !1;
        if (!y)
          return this.resolve([]);
        for (var e = new Array(y), b = 0, A = -1, P = new this(f); ++A < y; )
          D(s[A], A);
        return P;
        function D(E, T) {
          v.resolve(E).then(function(C) {
            e[T] = C, ++b !== y || x || (x = !0, d.resolve(P, e));
          }, function(C) {
            x || (x = !0, d.reject(P, C));
          });
        }
      }, n.race = function(s) {
        var v = this;
        if (Object.prototype.toString.call(s) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var y = s.length, x = !1;
        if (!y)
          return this.resolve([]);
        for (var e = -1, b = new this(f); ++e < y; )
          A = s[e], v.resolve(A).then(function(P) {
            x || (x = !0, d.resolve(b, P));
          }, function(P) {
            x || (x = !0, d.reject(b, P));
          });
        var A;
        return b;
      };
    }, { immediate: 36 }], 38: [function(g, w, L) {
      var B = {};
      (0, g("./lib/utils/common").assign)(B, g("./lib/deflate"), g("./lib/inflate"), g("./lib/zlib/constants")), w.exports = B;
    }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(g, w, L) {
      var B = g("./zlib/deflate"), f = g("./utils/common"), d = g("./utils/strings"), t = g("./zlib/messages"), i = g("./zlib/zstream"), r = Object.prototype.toString, n = 0, o = -1, h = 0, u = 8;
      function l(s) {
        if (!(this instanceof l))
          return new l(s);
        this.options = f.assign({ level: o, method: u, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: h, to: "" }, s || {});
        var v = this.options;
        v.raw && 0 < v.windowBits ? v.windowBits = -v.windowBits : v.gzip && 0 < v.windowBits && v.windowBits < 16 && (v.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new i(), this.strm.avail_out = 0;
        var y = B.deflateInit2(this.strm, v.level, v.method, v.windowBits, v.memLevel, v.strategy);
        if (y !== n)
          throw new Error(t[y]);
        if (v.header && B.deflateSetHeader(this.strm, v.header), v.dictionary) {
          var x;
          if (x = typeof v.dictionary == "string" ? d.string2buf(v.dictionary) : r.call(v.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(v.dictionary) : v.dictionary, (y = B.deflateSetDictionary(this.strm, x)) !== n)
            throw new Error(t[y]);
          this._dict_set = !0;
        }
      }
      function c(s, v) {
        var y = new l(v);
        if (y.push(s, !0), y.err)
          throw y.msg || t[y.err];
        return y.result;
      }
      l.prototype.push = function(s, v) {
        var y, x, e = this.strm, b = this.options.chunkSize;
        if (this.ended)
          return !1;
        x = v === ~~v ? v : v === !0 ? 4 : 0, typeof s == "string" ? e.input = d.string2buf(s) : r.call(s) === "[object ArrayBuffer]" ? e.input = new Uint8Array(s) : e.input = s, e.next_in = 0, e.avail_in = e.input.length;
        do {
          if (e.avail_out === 0 && (e.output = new f.Buf8(b), e.next_out = 0, e.avail_out = b), (y = B.deflate(e, x)) !== 1 && y !== n)
            return this.onEnd(y), !(this.ended = !0);
          e.avail_out !== 0 && (e.avail_in !== 0 || x !== 4 && x !== 2) || (this.options.to === "string" ? this.onData(d.buf2binstring(f.shrinkBuf(e.output, e.next_out))) : this.onData(f.shrinkBuf(e.output, e.next_out)));
        } while ((0 < e.avail_in || e.avail_out === 0) && y !== 1);
        return x === 4 ? (y = B.deflateEnd(this.strm), this.onEnd(y), this.ended = !0, y === n) : x !== 2 || (this.onEnd(n), !(e.avail_out = 0));
      }, l.prototype.onData = function(s) {
        this.chunks.push(s);
      }, l.prototype.onEnd = function(s) {
        s === n && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = f.flattenChunks(this.chunks)), this.chunks = [], this.err = s, this.msg = this.strm.msg;
      }, L.Deflate = l, L.deflate = c, L.deflateRaw = function(s, v) {
        return (v = v || {}).raw = !0, c(s, v);
      }, L.gzip = function(s, v) {
        return (v = v || {}).gzip = !0, c(s, v);
      };
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(g, w, L) {
      var B = g("./zlib/inflate"), f = g("./utils/common"), d = g("./utils/strings"), t = g("./zlib/constants"), i = g("./zlib/messages"), r = g("./zlib/zstream"), n = g("./zlib/gzheader"), o = Object.prototype.toString;
      function h(l) {
        if (!(this instanceof h))
          return new h(l);
        this.options = f.assign({ chunkSize: 16384, windowBits: 0, to: "" }, l || {});
        var c = this.options;
        c.raw && 0 <= c.windowBits && c.windowBits < 16 && (c.windowBits = -c.windowBits, c.windowBits === 0 && (c.windowBits = -15)), !(0 <= c.windowBits && c.windowBits < 16) || l && l.windowBits || (c.windowBits += 32), 15 < c.windowBits && c.windowBits < 48 && !(15 & c.windowBits) && (c.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new r(), this.strm.avail_out = 0;
        var s = B.inflateInit2(this.strm, c.windowBits);
        if (s !== t.Z_OK)
          throw new Error(i[s]);
        this.header = new n(), B.inflateGetHeader(this.strm, this.header);
      }
      function u(l, c) {
        var s = new h(c);
        if (s.push(l, !0), s.err)
          throw s.msg || i[s.err];
        return s.result;
      }
      h.prototype.push = function(l, c) {
        var s, v, y, x, e, b, A = this.strm, P = this.options.chunkSize, D = this.options.dictionary, E = !1;
        if (this.ended)
          return !1;
        v = c === ~~c ? c : c === !0 ? t.Z_FINISH : t.Z_NO_FLUSH, typeof l == "string" ? A.input = d.binstring2buf(l) : o.call(l) === "[object ArrayBuffer]" ? A.input = new Uint8Array(l) : A.input = l, A.next_in = 0, A.avail_in = A.input.length;
        do {
          if (A.avail_out === 0 && (A.output = new f.Buf8(P), A.next_out = 0, A.avail_out = P), (s = B.inflate(A, t.Z_NO_FLUSH)) === t.Z_NEED_DICT && D && (b = typeof D == "string" ? d.string2buf(D) : o.call(D) === "[object ArrayBuffer]" ? new Uint8Array(D) : D, s = B.inflateSetDictionary(this.strm, b)), s === t.Z_BUF_ERROR && E === !0 && (s = t.Z_OK, E = !1), s !== t.Z_STREAM_END && s !== t.Z_OK)
            return this.onEnd(s), !(this.ended = !0);
          A.next_out && (A.avail_out !== 0 && s !== t.Z_STREAM_END && (A.avail_in !== 0 || v !== t.Z_FINISH && v !== t.Z_SYNC_FLUSH) || (this.options.to === "string" ? (y = d.utf8border(A.output, A.next_out), x = A.next_out - y, e = d.buf2string(A.output, y), A.next_out = x, A.avail_out = P - x, x && f.arraySet(A.output, A.output, y, x, 0), this.onData(e)) : this.onData(f.shrinkBuf(A.output, A.next_out)))), A.avail_in === 0 && A.avail_out === 0 && (E = !0);
        } while ((0 < A.avail_in || A.avail_out === 0) && s !== t.Z_STREAM_END);
        return s === t.Z_STREAM_END && (v = t.Z_FINISH), v === t.Z_FINISH ? (s = B.inflateEnd(this.strm), this.onEnd(s), this.ended = !0, s === t.Z_OK) : v !== t.Z_SYNC_FLUSH || (this.onEnd(t.Z_OK), !(A.avail_out = 0));
      }, h.prototype.onData = function(l) {
        this.chunks.push(l);
      }, h.prototype.onEnd = function(l) {
        l === t.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = f.flattenChunks(this.chunks)), this.chunks = [], this.err = l, this.msg = this.strm.msg;
      }, L.Inflate = h, L.inflate = u, L.inflateRaw = function(l, c) {
        return (c = c || {}).raw = !0, u(l, c);
      }, L.ungzip = u;
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(g, w, L) {
      var B = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Int32Array != "undefined";
      L.assign = function(t) {
        for (var i = Array.prototype.slice.call(arguments, 1); i.length; ) {
          var r = i.shift();
          if (r) {
            if (typeof r != "object")
              throw new TypeError(r + "must be non-object");
            for (var n in r)
              r.hasOwnProperty(n) && (t[n] = r[n]);
          }
        }
        return t;
      }, L.shrinkBuf = function(t, i) {
        return t.length === i ? t : t.subarray ? t.subarray(0, i) : (t.length = i, t);
      };
      var f = { arraySet: function(t, i, r, n, o) {
        if (i.subarray && t.subarray)
          t.set(i.subarray(r, r + n), o);
        else
          for (var h = 0; h < n; h++)
            t[o + h] = i[r + h];
      }, flattenChunks: function(t) {
        var i, r, n, o, h, u;
        for (i = n = 0, r = t.length; i < r; i++)
          n += t[i].length;
        for (u = new Uint8Array(n), i = o = 0, r = t.length; i < r; i++)
          h = t[i], u.set(h, o), o += h.length;
        return u;
      } }, d = { arraySet: function(t, i, r, n, o) {
        for (var h = 0; h < n; h++)
          t[o + h] = i[r + h];
      }, flattenChunks: function(t) {
        return [].concat.apply([], t);
      } };
      L.setTyped = function(t) {
        t ? (L.Buf8 = Uint8Array, L.Buf16 = Uint16Array, L.Buf32 = Int32Array, L.assign(L, f)) : (L.Buf8 = Array, L.Buf16 = Array, L.Buf32 = Array, L.assign(L, d));
      }, L.setTyped(B);
    }, {}], 42: [function(g, w, L) {
      var B = g("./common"), f = !0, d = !0;
      try {
        String.fromCharCode.apply(null, [0]);
      } catch (n) {
        f = !1;
      }
      try {
        String.fromCharCode.apply(null, new Uint8Array(1));
      } catch (n) {
        d = !1;
      }
      for (var t = new B.Buf8(256), i = 0; i < 256; i++)
        t[i] = 252 <= i ? 6 : 248 <= i ? 5 : 240 <= i ? 4 : 224 <= i ? 3 : 192 <= i ? 2 : 1;
      function r(n, o) {
        if (o < 65537 && (n.subarray && d || !n.subarray && f))
          return String.fromCharCode.apply(null, B.shrinkBuf(n, o));
        for (var h = "", u = 0; u < o; u++)
          h += String.fromCharCode(n[u]);
        return h;
      }
      t[254] = t[254] = 1, L.string2buf = function(n) {
        var o, h, u, l, c, s = n.length, v = 0;
        for (l = 0; l < s; l++)
          (64512 & (h = n.charCodeAt(l))) == 55296 && l + 1 < s && (64512 & (u = n.charCodeAt(l + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (u - 56320), l++), v += h < 128 ? 1 : h < 2048 ? 2 : h < 65536 ? 3 : 4;
        for (o = new B.Buf8(v), l = c = 0; c < v; l++)
          (64512 & (h = n.charCodeAt(l))) == 55296 && l + 1 < s && (64512 & (u = n.charCodeAt(l + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (u - 56320), l++), h < 128 ? o[c++] = h : (h < 2048 ? o[c++] = 192 | h >>> 6 : (h < 65536 ? o[c++] = 224 | h >>> 12 : (o[c++] = 240 | h >>> 18, o[c++] = 128 | h >>> 12 & 63), o[c++] = 128 | h >>> 6 & 63), o[c++] = 128 | 63 & h);
        return o;
      }, L.buf2binstring = function(n) {
        return r(n, n.length);
      }, L.binstring2buf = function(n) {
        for (var o = new B.Buf8(n.length), h = 0, u = o.length; h < u; h++)
          o[h] = n.charCodeAt(h);
        return o;
      }, L.buf2string = function(n, o) {
        var h, u, l, c, s = o || n.length, v = new Array(2 * s);
        for (h = u = 0; h < s; )
          if ((l = n[h++]) < 128)
            v[u++] = l;
          else if (4 < (c = t[l]))
            v[u++] = 65533, h += c - 1;
          else {
            for (l &= c === 2 ? 31 : c === 3 ? 15 : 7; 1 < c && h < s; )
              l = l << 6 | 63 & n[h++], c--;
            1 < c ? v[u++] = 65533 : l < 65536 ? v[u++] = l : (l -= 65536, v[u++] = 55296 | l >> 10 & 1023, v[u++] = 56320 | 1023 & l);
          }
        return r(v, u);
      }, L.utf8border = function(n, o) {
        var h;
        for ((o = o || n.length) > n.length && (o = n.length), h = o - 1; 0 <= h && (192 & n[h]) == 128; )
          h--;
        return h < 0 || h === 0 ? o : h + t[n[h]] > o ? h : o;
      };
    }, { "./common": 41 }], 43: [function(g, w, L) {
      w.exports = function(B, f, d, t) {
        for (var i = 65535 & B | 0, r = B >>> 16 & 65535 | 0, n = 0; d !== 0; ) {
          for (d -= n = 2e3 < d ? 2e3 : d; r = r + (i = i + f[t++] | 0) | 0, --n; )
            ;
          i %= 65521, r %= 65521;
        }
        return i | r << 16 | 0;
      };
    }, {}], 44: [function(g, w, L) {
      w.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
    }, {}], 45: [function(g, w, L) {
      var B = function() {
        for (var f, d = [], t = 0; t < 256; t++) {
          f = t;
          for (var i = 0; i < 8; i++)
            f = 1 & f ? 3988292384 ^ f >>> 1 : f >>> 1;
          d[t] = f;
        }
        return d;
      }();
      w.exports = function(f, d, t, i) {
        var r = B, n = i + t;
        f ^= -1;
        for (var o = i; o < n; o++)
          f = f >>> 8 ^ r[255 & (f ^ d[o])];
        return -1 ^ f;
      };
    }, {}], 46: [function(g, w, L) {
      var B, f = g("../utils/common"), d = g("./trees"), t = g("./adler32"), i = g("./crc32"), r = g("./messages"), n = 0, o = 4, h = 0, u = -2, l = -1, c = 4, s = 2, v = 8, y = 9, x = 286, e = 30, b = 19, A = 2 * x + 1, P = 15, D = 3, E = 258, T = E + D + 1, C = 42, F = 113, m = 1, I = 2, O = 3, M = 4;
      function N(V, Ft) {
        return V.msg = r[Ft], Ft;
      }
      function G(V) {
        return (V << 1) - (4 < V ? 9 : 0);
      }
      function ot(V) {
        for (var Ft = V.length; 0 <= --Ft; )
          V[Ft] = 0;
      }
      function K(V) {
        var Ft = V.state, U = Ft.pending;
        U > V.avail_out && (U = V.avail_out), U !== 0 && (f.arraySet(V.output, Ft.pending_buf, Ft.pending_out, U, V.next_out), V.next_out += U, Ft.pending_out += U, V.total_out += U, V.avail_out -= U, Ft.pending -= U, Ft.pending === 0 && (Ft.pending_out = 0));
      }
      function nt(V, Ft) {
        d._tr_flush_block(V, 0 <= V.block_start ? V.block_start : -1, V.strstart - V.block_start, Ft), V.block_start = V.strstart, K(V.strm);
      }
      function xt(V, Ft) {
        V.pending_buf[V.pending++] = Ft;
      }
      function bt(V, Ft) {
        V.pending_buf[V.pending++] = Ft >>> 8 & 255, V.pending_buf[V.pending++] = 255 & Ft;
      }
      function St(V, Ft) {
        var U, S, k = V.max_chain_length, H = V.strstart, it = V.prev_length, et = V.nice_match, tt = V.strstart > V.w_size - T ? V.strstart - (V.w_size - T) : 0, Ct = V.window, Rt = V.w_mask, Kt = V.prev, Gt = V.strstart + E, It = Ct[H + it - 1], re = Ct[H + it];
        V.prev_length >= V.good_match && (k >>= 2), et > V.lookahead && (et = V.lookahead);
        do
          if (Ct[(U = Ft) + it] === re && Ct[U + it - 1] === It && Ct[U] === Ct[H] && Ct[++U] === Ct[H + 1]) {
            H += 2, U++;
            do
              ;
            while (Ct[++H] === Ct[++U] && Ct[++H] === Ct[++U] && Ct[++H] === Ct[++U] && Ct[++H] === Ct[++U] && Ct[++H] === Ct[++U] && Ct[++H] === Ct[++U] && Ct[++H] === Ct[++U] && Ct[++H] === Ct[++U] && H < Gt);
            if (S = E - (Gt - H), H = Gt - E, it < S) {
              if (V.match_start = Ft, et <= (it = S))
                break;
              It = Ct[H + it - 1], re = Ct[H + it];
            }
          }
        while ((Ft = Kt[Ft & Rt]) > tt && --k != 0);
        return it <= V.lookahead ? it : V.lookahead;
      }
      function Dt(V) {
        var Ft, U, S, k, H, it, et, tt, Ct, Rt, Kt = V.w_size;
        do {
          if (k = V.window_size - V.lookahead - V.strstart, V.strstart >= Kt + (Kt - T)) {
            for (f.arraySet(V.window, V.window, Kt, Kt, 0), V.match_start -= Kt, V.strstart -= Kt, V.block_start -= Kt, Ft = U = V.hash_size; S = V.head[--Ft], V.head[Ft] = Kt <= S ? S - Kt : 0, --U; )
              ;
            for (Ft = U = Kt; S = V.prev[--Ft], V.prev[Ft] = Kt <= S ? S - Kt : 0, --U; )
              ;
            k += Kt;
          }
          if (V.strm.avail_in === 0)
            break;
          if (it = V.strm, et = V.window, tt = V.strstart + V.lookahead, Ct = k, Rt = void 0, Rt = it.avail_in, Ct < Rt && (Rt = Ct), U = Rt === 0 ? 0 : (it.avail_in -= Rt, f.arraySet(et, it.input, it.next_in, Rt, tt), it.state.wrap === 1 ? it.adler = t(it.adler, et, Rt, tt) : it.state.wrap === 2 && (it.adler = i(it.adler, et, Rt, tt)), it.next_in += Rt, it.total_in += Rt, Rt), V.lookahead += U, V.lookahead + V.insert >= D)
            for (H = V.strstart - V.insert, V.ins_h = V.window[H], V.ins_h = (V.ins_h << V.hash_shift ^ V.window[H + 1]) & V.hash_mask; V.insert && (V.ins_h = (V.ins_h << V.hash_shift ^ V.window[H + D - 1]) & V.hash_mask, V.prev[H & V.w_mask] = V.head[V.ins_h], V.head[V.ins_h] = H, H++, V.insert--, !(V.lookahead + V.insert < D)); )
              ;
        } while (V.lookahead < T && V.strm.avail_in !== 0);
      }
      function Lt(V, Ft) {
        for (var U, S; ; ) {
          if (V.lookahead < T) {
            if (Dt(V), V.lookahead < T && Ft === n)
              return m;
            if (V.lookahead === 0)
              break;
          }
          if (U = 0, V.lookahead >= D && (V.ins_h = (V.ins_h << V.hash_shift ^ V.window[V.strstart + D - 1]) & V.hash_mask, U = V.prev[V.strstart & V.w_mask] = V.head[V.ins_h], V.head[V.ins_h] = V.strstart), U !== 0 && V.strstart - U <= V.w_size - T && (V.match_length = St(V, U)), V.match_length >= D)
            if (S = d._tr_tally(V, V.strstart - V.match_start, V.match_length - D), V.lookahead -= V.match_length, V.match_length <= V.max_lazy_match && V.lookahead >= D) {
              for (V.match_length--; V.strstart++, V.ins_h = (V.ins_h << V.hash_shift ^ V.window[V.strstart + D - 1]) & V.hash_mask, U = V.prev[V.strstart & V.w_mask] = V.head[V.ins_h], V.head[V.ins_h] = V.strstart, --V.match_length != 0; )
                ;
              V.strstart++;
            } else
              V.strstart += V.match_length, V.match_length = 0, V.ins_h = V.window[V.strstart], V.ins_h = (V.ins_h << V.hash_shift ^ V.window[V.strstart + 1]) & V.hash_mask;
          else
            S = d._tr_tally(V, 0, V.window[V.strstart]), V.lookahead--, V.strstart++;
          if (S && (nt(V, !1), V.strm.avail_out === 0))
            return m;
        }
        return V.insert = V.strstart < D - 1 ? V.strstart : D - 1, Ft === o ? (nt(V, !0), V.strm.avail_out === 0 ? O : M) : V.last_lit && (nt(V, !1), V.strm.avail_out === 0) ? m : I;
      }
      function jt(V, Ft) {
        for (var U, S, k; ; ) {
          if (V.lookahead < T) {
            if (Dt(V), V.lookahead < T && Ft === n)
              return m;
            if (V.lookahead === 0)
              break;
          }
          if (U = 0, V.lookahead >= D && (V.ins_h = (V.ins_h << V.hash_shift ^ V.window[V.strstart + D - 1]) & V.hash_mask, U = V.prev[V.strstart & V.w_mask] = V.head[V.ins_h], V.head[V.ins_h] = V.strstart), V.prev_length = V.match_length, V.prev_match = V.match_start, V.match_length = D - 1, U !== 0 && V.prev_length < V.max_lazy_match && V.strstart - U <= V.w_size - T && (V.match_length = St(V, U), V.match_length <= 5 && (V.strategy === 1 || V.match_length === D && 4096 < V.strstart - V.match_start) && (V.match_length = D - 1)), V.prev_length >= D && V.match_length <= V.prev_length) {
            for (k = V.strstart + V.lookahead - D, S = d._tr_tally(V, V.strstart - 1 - V.prev_match, V.prev_length - D), V.lookahead -= V.prev_length - 1, V.prev_length -= 2; ++V.strstart <= k && (V.ins_h = (V.ins_h << V.hash_shift ^ V.window[V.strstart + D - 1]) & V.hash_mask, U = V.prev[V.strstart & V.w_mask] = V.head[V.ins_h], V.head[V.ins_h] = V.strstart), --V.prev_length != 0; )
              ;
            if (V.match_available = 0, V.match_length = D - 1, V.strstart++, S && (nt(V, !1), V.strm.avail_out === 0))
              return m;
          } else if (V.match_available) {
            if ((S = d._tr_tally(V, 0, V.window[V.strstart - 1])) && nt(V, !1), V.strstart++, V.lookahead--, V.strm.avail_out === 0)
              return m;
          } else
            V.match_available = 1, V.strstart++, V.lookahead--;
        }
        return V.match_available && (S = d._tr_tally(V, 0, V.window[V.strstart - 1]), V.match_available = 0), V.insert = V.strstart < D - 1 ? V.strstart : D - 1, Ft === o ? (nt(V, !0), V.strm.avail_out === 0 ? O : M) : V.last_lit && (nt(V, !1), V.strm.avail_out === 0) ? m : I;
      }
      function J(V, Ft, U, S, k) {
        this.good_length = V, this.max_lazy = Ft, this.nice_length = U, this.max_chain = S, this.func = k;
      }
      function yt() {
        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = v, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new f.Buf16(2 * A), this.dyn_dtree = new f.Buf16(2 * (2 * e + 1)), this.bl_tree = new f.Buf16(2 * (2 * b + 1)), ot(this.dyn_ltree), ot(this.dyn_dtree), ot(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new f.Buf16(P + 1), this.heap = new f.Buf16(2 * x + 1), ot(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new f.Buf16(2 * x + 1), ot(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
      }
      function ut(V) {
        var Ft;
        return V && V.state ? (V.total_in = V.total_out = 0, V.data_type = s, (Ft = V.state).pending = 0, Ft.pending_out = 0, Ft.wrap < 0 && (Ft.wrap = -Ft.wrap), Ft.status = Ft.wrap ? C : F, V.adler = Ft.wrap === 2 ? 0 : 1, Ft.last_flush = n, d._tr_init(Ft), h) : N(V, u);
      }
      function st(V) {
        var Ft = ut(V);
        return Ft === h && function(U) {
          U.window_size = 2 * U.w_size, ot(U.head), U.max_lazy_match = B[U.level].max_lazy, U.good_match = B[U.level].good_length, U.nice_match = B[U.level].nice_length, U.max_chain_length = B[U.level].max_chain, U.strstart = 0, U.block_start = 0, U.lookahead = 0, U.insert = 0, U.match_length = U.prev_length = D - 1, U.match_available = 0, U.ins_h = 0;
        }(V.state), Ft;
      }
      function wt(V, Ft, U, S, k, H) {
        if (!V)
          return u;
        var it = 1;
        if (Ft === l && (Ft = 6), S < 0 ? (it = 0, S = -S) : 15 < S && (it = 2, S -= 16), k < 1 || y < k || U !== v || S < 8 || 15 < S || Ft < 0 || 9 < Ft || H < 0 || c < H)
          return N(V, u);
        S === 8 && (S = 9);
        var et = new yt();
        return (V.state = et).strm = V, et.wrap = it, et.gzhead = null, et.w_bits = S, et.w_size = 1 << et.w_bits, et.w_mask = et.w_size - 1, et.hash_bits = k + 7, et.hash_size = 1 << et.hash_bits, et.hash_mask = et.hash_size - 1, et.hash_shift = ~~((et.hash_bits + D - 1) / D), et.window = new f.Buf8(2 * et.w_size), et.head = new f.Buf16(et.hash_size), et.prev = new f.Buf16(et.w_size), et.lit_bufsize = 1 << k + 6, et.pending_buf_size = 4 * et.lit_bufsize, et.pending_buf = new f.Buf8(et.pending_buf_size), et.d_buf = 1 * et.lit_bufsize, et.l_buf = 3 * et.lit_bufsize, et.level = Ft, et.strategy = H, et.method = U, st(V);
      }
      B = [new J(0, 0, 0, 0, function(V, Ft) {
        var U = 65535;
        for (U > V.pending_buf_size - 5 && (U = V.pending_buf_size - 5); ; ) {
          if (V.lookahead <= 1) {
            if (Dt(V), V.lookahead === 0 && Ft === n)
              return m;
            if (V.lookahead === 0)
              break;
          }
          V.strstart += V.lookahead, V.lookahead = 0;
          var S = V.block_start + U;
          if ((V.strstart === 0 || V.strstart >= S) && (V.lookahead = V.strstart - S, V.strstart = S, nt(V, !1), V.strm.avail_out === 0) || V.strstart - V.block_start >= V.w_size - T && (nt(V, !1), V.strm.avail_out === 0))
            return m;
        }
        return V.insert = 0, Ft === o ? (nt(V, !0), V.strm.avail_out === 0 ? O : M) : (V.strstart > V.block_start && (nt(V, !1), V.strm.avail_out), m);
      }), new J(4, 4, 8, 4, Lt), new J(4, 5, 16, 8, Lt), new J(4, 6, 32, 32, Lt), new J(4, 4, 16, 16, jt), new J(8, 16, 32, 32, jt), new J(8, 16, 128, 128, jt), new J(8, 32, 128, 256, jt), new J(32, 128, 258, 1024, jt), new J(32, 258, 258, 4096, jt)], L.deflateInit = function(V, Ft) {
        return wt(V, Ft, v, 15, 8, 0);
      }, L.deflateInit2 = wt, L.deflateReset = st, L.deflateResetKeep = ut, L.deflateSetHeader = function(V, Ft) {
        return V && V.state ? V.state.wrap !== 2 ? u : (V.state.gzhead = Ft, h) : u;
      }, L.deflate = function(V, Ft) {
        var U, S, k, H;
        if (!V || !V.state || 5 < Ft || Ft < 0)
          return V ? N(V, u) : u;
        if (S = V.state, !V.output || !V.input && V.avail_in !== 0 || S.status === 666 && Ft !== o)
          return N(V, V.avail_out === 0 ? -5 : u);
        if (S.strm = V, U = S.last_flush, S.last_flush = Ft, S.status === C)
          if (S.wrap === 2)
            V.adler = 0, xt(S, 31), xt(S, 139), xt(S, 8), S.gzhead ? (xt(S, (S.gzhead.text ? 1 : 0) + (S.gzhead.hcrc ? 2 : 0) + (S.gzhead.extra ? 4 : 0) + (S.gzhead.name ? 8 : 0) + (S.gzhead.comment ? 16 : 0)), xt(S, 255 & S.gzhead.time), xt(S, S.gzhead.time >> 8 & 255), xt(S, S.gzhead.time >> 16 & 255), xt(S, S.gzhead.time >> 24 & 255), xt(S, S.level === 9 ? 2 : 2 <= S.strategy || S.level < 2 ? 4 : 0), xt(S, 255 & S.gzhead.os), S.gzhead.extra && S.gzhead.extra.length && (xt(S, 255 & S.gzhead.extra.length), xt(S, S.gzhead.extra.length >> 8 & 255)), S.gzhead.hcrc && (V.adler = i(V.adler, S.pending_buf, S.pending, 0)), S.gzindex = 0, S.status = 69) : (xt(S, 0), xt(S, 0), xt(S, 0), xt(S, 0), xt(S, 0), xt(S, S.level === 9 ? 2 : 2 <= S.strategy || S.level < 2 ? 4 : 0), xt(S, 3), S.status = F);
          else {
            var it = v + (S.w_bits - 8 << 4) << 8;
            it |= (2 <= S.strategy || S.level < 2 ? 0 : S.level < 6 ? 1 : S.level === 6 ? 2 : 3) << 6, S.strstart !== 0 && (it |= 32), it += 31 - it % 31, S.status = F, bt(S, it), S.strstart !== 0 && (bt(S, V.adler >>> 16), bt(S, 65535 & V.adler)), V.adler = 1;
          }
        if (S.status === 69)
          if (S.gzhead.extra) {
            for (k = S.pending; S.gzindex < (65535 & S.gzhead.extra.length) && (S.pending !== S.pending_buf_size || (S.gzhead.hcrc && S.pending > k && (V.adler = i(V.adler, S.pending_buf, S.pending - k, k)), K(V), k = S.pending, S.pending !== S.pending_buf_size)); )
              xt(S, 255 & S.gzhead.extra[S.gzindex]), S.gzindex++;
            S.gzhead.hcrc && S.pending > k && (V.adler = i(V.adler, S.pending_buf, S.pending - k, k)), S.gzindex === S.gzhead.extra.length && (S.gzindex = 0, S.status = 73);
          } else
            S.status = 73;
        if (S.status === 73)
          if (S.gzhead.name) {
            k = S.pending;
            do {
              if (S.pending === S.pending_buf_size && (S.gzhead.hcrc && S.pending > k && (V.adler = i(V.adler, S.pending_buf, S.pending - k, k)), K(V), k = S.pending, S.pending === S.pending_buf_size)) {
                H = 1;
                break;
              }
              H = S.gzindex < S.gzhead.name.length ? 255 & S.gzhead.name.charCodeAt(S.gzindex++) : 0, xt(S, H);
            } while (H !== 0);
            S.gzhead.hcrc && S.pending > k && (V.adler = i(V.adler, S.pending_buf, S.pending - k, k)), H === 0 && (S.gzindex = 0, S.status = 91);
          } else
            S.status = 91;
        if (S.status === 91)
          if (S.gzhead.comment) {
            k = S.pending;
            do {
              if (S.pending === S.pending_buf_size && (S.gzhead.hcrc && S.pending > k && (V.adler = i(V.adler, S.pending_buf, S.pending - k, k)), K(V), k = S.pending, S.pending === S.pending_buf_size)) {
                H = 1;
                break;
              }
              H = S.gzindex < S.gzhead.comment.length ? 255 & S.gzhead.comment.charCodeAt(S.gzindex++) : 0, xt(S, H);
            } while (H !== 0);
            S.gzhead.hcrc && S.pending > k && (V.adler = i(V.adler, S.pending_buf, S.pending - k, k)), H === 0 && (S.status = 103);
          } else
            S.status = 103;
        if (S.status === 103 && (S.gzhead.hcrc ? (S.pending + 2 > S.pending_buf_size && K(V), S.pending + 2 <= S.pending_buf_size && (xt(S, 255 & V.adler), xt(S, V.adler >> 8 & 255), V.adler = 0, S.status = F)) : S.status = F), S.pending !== 0) {
          if (K(V), V.avail_out === 0)
            return S.last_flush = -1, h;
        } else if (V.avail_in === 0 && G(Ft) <= G(U) && Ft !== o)
          return N(V, -5);
        if (S.status === 666 && V.avail_in !== 0)
          return N(V, -5);
        if (V.avail_in !== 0 || S.lookahead !== 0 || Ft !== n && S.status !== 666) {
          var et = S.strategy === 2 ? function(tt, Ct) {
            for (var Rt; ; ) {
              if (tt.lookahead === 0 && (Dt(tt), tt.lookahead === 0)) {
                if (Ct === n)
                  return m;
                break;
              }
              if (tt.match_length = 0, Rt = d._tr_tally(tt, 0, tt.window[tt.strstart]), tt.lookahead--, tt.strstart++, Rt && (nt(tt, !1), tt.strm.avail_out === 0))
                return m;
            }
            return tt.insert = 0, Ct === o ? (nt(tt, !0), tt.strm.avail_out === 0 ? O : M) : tt.last_lit && (nt(tt, !1), tt.strm.avail_out === 0) ? m : I;
          }(S, Ft) : S.strategy === 3 ? function(tt, Ct) {
            for (var Rt, Kt, Gt, It, re = tt.window; ; ) {
              if (tt.lookahead <= E) {
                if (Dt(tt), tt.lookahead <= E && Ct === n)
                  return m;
                if (tt.lookahead === 0)
                  break;
              }
              if (tt.match_length = 0, tt.lookahead >= D && 0 < tt.strstart && (Kt = re[Gt = tt.strstart - 1]) === re[++Gt] && Kt === re[++Gt] && Kt === re[++Gt]) {
                It = tt.strstart + E;
                do
                  ;
                while (Kt === re[++Gt] && Kt === re[++Gt] && Kt === re[++Gt] && Kt === re[++Gt] && Kt === re[++Gt] && Kt === re[++Gt] && Kt === re[++Gt] && Kt === re[++Gt] && Gt < It);
                tt.match_length = E - (It - Gt), tt.match_length > tt.lookahead && (tt.match_length = tt.lookahead);
              }
              if (tt.match_length >= D ? (Rt = d._tr_tally(tt, 1, tt.match_length - D), tt.lookahead -= tt.match_length, tt.strstart += tt.match_length, tt.match_length = 0) : (Rt = d._tr_tally(tt, 0, tt.window[tt.strstart]), tt.lookahead--, tt.strstart++), Rt && (nt(tt, !1), tt.strm.avail_out === 0))
                return m;
            }
            return tt.insert = 0, Ct === o ? (nt(tt, !0), tt.strm.avail_out === 0 ? O : M) : tt.last_lit && (nt(tt, !1), tt.strm.avail_out === 0) ? m : I;
          }(S, Ft) : B[S.level].func(S, Ft);
          if (et !== O && et !== M || (S.status = 666), et === m || et === O)
            return V.avail_out === 0 && (S.last_flush = -1), h;
          if (et === I && (Ft === 1 ? d._tr_align(S) : Ft !== 5 && (d._tr_stored_block(S, 0, 0, !1), Ft === 3 && (ot(S.head), S.lookahead === 0 && (S.strstart = 0, S.block_start = 0, S.insert = 0))), K(V), V.avail_out === 0))
            return S.last_flush = -1, h;
        }
        return Ft !== o ? h : S.wrap <= 0 ? 1 : (S.wrap === 2 ? (xt(S, 255 & V.adler), xt(S, V.adler >> 8 & 255), xt(S, V.adler >> 16 & 255), xt(S, V.adler >> 24 & 255), xt(S, 255 & V.total_in), xt(S, V.total_in >> 8 & 255), xt(S, V.total_in >> 16 & 255), xt(S, V.total_in >> 24 & 255)) : (bt(S, V.adler >>> 16), bt(S, 65535 & V.adler)), K(V), 0 < S.wrap && (S.wrap = -S.wrap), S.pending !== 0 ? h : 1);
      }, L.deflateEnd = function(V) {
        var Ft;
        return V && V.state ? (Ft = V.state.status) !== C && Ft !== 69 && Ft !== 73 && Ft !== 91 && Ft !== 103 && Ft !== F && Ft !== 666 ? N(V, u) : (V.state = null, Ft === F ? N(V, -3) : h) : u;
      }, L.deflateSetDictionary = function(V, Ft) {
        var U, S, k, H, it, et, tt, Ct, Rt = Ft.length;
        if (!V || !V.state || (H = (U = V.state).wrap) === 2 || H === 1 && U.status !== C || U.lookahead)
          return u;
        for (H === 1 && (V.adler = t(V.adler, Ft, Rt, 0)), U.wrap = 0, Rt >= U.w_size && (H === 0 && (ot(U.head), U.strstart = 0, U.block_start = 0, U.insert = 0), Ct = new f.Buf8(U.w_size), f.arraySet(Ct, Ft, Rt - U.w_size, U.w_size, 0), Ft = Ct, Rt = U.w_size), it = V.avail_in, et = V.next_in, tt = V.input, V.avail_in = Rt, V.next_in = 0, V.input = Ft, Dt(U); U.lookahead >= D; ) {
          for (S = U.strstart, k = U.lookahead - (D - 1); U.ins_h = (U.ins_h << U.hash_shift ^ U.window[S + D - 1]) & U.hash_mask, U.prev[S & U.w_mask] = U.head[U.ins_h], U.head[U.ins_h] = S, S++, --k; )
            ;
          U.strstart = S, U.lookahead = D - 1, Dt(U);
        }
        return U.strstart += U.lookahead, U.block_start = U.strstart, U.insert = U.lookahead, U.lookahead = 0, U.match_length = U.prev_length = D - 1, U.match_available = 0, V.next_in = et, V.input = tt, V.avail_in = it, U.wrap = H, h;
      }, L.deflateInfo = "pako deflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(g, w, L) {
      w.exports = function() {
        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
      };
    }, {}], 48: [function(g, w, L) {
      w.exports = function(B, f) {
        var d, t, i, r, n, o, h, u, l, c, s, v, y, x, e, b, A, P, D, E, T, C, F, m, I;
        d = B.state, t = B.next_in, m = B.input, i = t + (B.avail_in - 5), r = B.next_out, I = B.output, n = r - (f - B.avail_out), o = r + (B.avail_out - 257), h = d.dmax, u = d.wsize, l = d.whave, c = d.wnext, s = d.window, v = d.hold, y = d.bits, x = d.lencode, e = d.distcode, b = (1 << d.lenbits) - 1, A = (1 << d.distbits) - 1;
        t:
          do {
            y < 15 && (v += m[t++] << y, y += 8, v += m[t++] << y, y += 8), P = x[v & b];
            e:
              for (; ; ) {
                if (v >>>= D = P >>> 24, y -= D, (D = P >>> 16 & 255) === 0)
                  I[r++] = 65535 & P;
                else {
                  if (!(16 & D)) {
                    if (!(64 & D)) {
                      P = x[(65535 & P) + (v & (1 << D) - 1)];
                      continue e;
                    }
                    if (32 & D) {
                      d.mode = 12;
                      break t;
                    }
                    B.msg = "invalid literal/length code", d.mode = 30;
                    break t;
                  }
                  E = 65535 & P, (D &= 15) && (y < D && (v += m[t++] << y, y += 8), E += v & (1 << D) - 1, v >>>= D, y -= D), y < 15 && (v += m[t++] << y, y += 8, v += m[t++] << y, y += 8), P = e[v & A];
                  r:
                    for (; ; ) {
                      if (v >>>= D = P >>> 24, y -= D, !(16 & (D = P >>> 16 & 255))) {
                        if (!(64 & D)) {
                          P = e[(65535 & P) + (v & (1 << D) - 1)];
                          continue r;
                        }
                        B.msg = "invalid distance code", d.mode = 30;
                        break t;
                      }
                      if (T = 65535 & P, y < (D &= 15) && (v += m[t++] << y, (y += 8) < D && (v += m[t++] << y, y += 8)), h < (T += v & (1 << D) - 1)) {
                        B.msg = "invalid distance too far back", d.mode = 30;
                        break t;
                      }
                      if (v >>>= D, y -= D, (D = r - n) < T) {
                        if (l < (D = T - D) && d.sane) {
                          B.msg = "invalid distance too far back", d.mode = 30;
                          break t;
                        }
                        if (F = s, (C = 0) === c) {
                          if (C += u - D, D < E) {
                            for (E -= D; I[r++] = s[C++], --D; )
                              ;
                            C = r - T, F = I;
                          }
                        } else if (c < D) {
                          if (C += u + c - D, (D -= c) < E) {
                            for (E -= D; I[r++] = s[C++], --D; )
                              ;
                            if (C = 0, c < E) {
                              for (E -= D = c; I[r++] = s[C++], --D; )
                                ;
                              C = r - T, F = I;
                            }
                          }
                        } else if (C += c - D, D < E) {
                          for (E -= D; I[r++] = s[C++], --D; )
                            ;
                          C = r - T, F = I;
                        }
                        for (; 2 < E; )
                          I[r++] = F[C++], I[r++] = F[C++], I[r++] = F[C++], E -= 3;
                        E && (I[r++] = F[C++], 1 < E && (I[r++] = F[C++]));
                      } else {
                        for (C = r - T; I[r++] = I[C++], I[r++] = I[C++], I[r++] = I[C++], 2 < (E -= 3); )
                          ;
                        E && (I[r++] = I[C++], 1 < E && (I[r++] = I[C++]));
                      }
                      break;
                    }
                }
                break;
              }
          } while (t < i && r < o);
        t -= E = y >> 3, v &= (1 << (y -= E << 3)) - 1, B.next_in = t, B.next_out = r, B.avail_in = t < i ? i - t + 5 : 5 - (t - i), B.avail_out = r < o ? o - r + 257 : 257 - (r - o), d.hold = v, d.bits = y;
      };
    }, {}], 49: [function(g, w, L) {
      var B = g("../utils/common"), f = g("./adler32"), d = g("./crc32"), t = g("./inffast"), i = g("./inftrees"), r = 1, n = 2, o = 0, h = -2, u = 1, l = 852, c = 592;
      function s(C) {
        return (C >>> 24 & 255) + (C >>> 8 & 65280) + ((65280 & C) << 8) + ((255 & C) << 24);
      }
      function v() {
        this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new B.Buf16(320), this.work = new B.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
      }
      function y(C) {
        var F;
        return C && C.state ? (F = C.state, C.total_in = C.total_out = F.total = 0, C.msg = "", F.wrap && (C.adler = 1 & F.wrap), F.mode = u, F.last = 0, F.havedict = 0, F.dmax = 32768, F.head = null, F.hold = 0, F.bits = 0, F.lencode = F.lendyn = new B.Buf32(l), F.distcode = F.distdyn = new B.Buf32(c), F.sane = 1, F.back = -1, o) : h;
      }
      function x(C) {
        var F;
        return C && C.state ? ((F = C.state).wsize = 0, F.whave = 0, F.wnext = 0, y(C)) : h;
      }
      function e(C, F) {
        var m, I;
        return C && C.state ? (I = C.state, F < 0 ? (m = 0, F = -F) : (m = 1 + (F >> 4), F < 48 && (F &= 15)), F && (F < 8 || 15 < F) ? h : (I.window !== null && I.wbits !== F && (I.window = null), I.wrap = m, I.wbits = F, x(C))) : h;
      }
      function b(C, F) {
        var m, I;
        return C ? (I = new v(), (C.state = I).window = null, (m = e(C, F)) !== o && (C.state = null), m) : h;
      }
      var A, P, D = !0;
      function E(C) {
        if (D) {
          var F;
          for (A = new B.Buf32(512), P = new B.Buf32(32), F = 0; F < 144; )
            C.lens[F++] = 8;
          for (; F < 256; )
            C.lens[F++] = 9;
          for (; F < 280; )
            C.lens[F++] = 7;
          for (; F < 288; )
            C.lens[F++] = 8;
          for (i(r, C.lens, 0, 288, A, 0, C.work, { bits: 9 }), F = 0; F < 32; )
            C.lens[F++] = 5;
          i(n, C.lens, 0, 32, P, 0, C.work, { bits: 5 }), D = !1;
        }
        C.lencode = A, C.lenbits = 9, C.distcode = P, C.distbits = 5;
      }
      function T(C, F, m, I) {
        var O, M = C.state;
        return M.window === null && (M.wsize = 1 << M.wbits, M.wnext = 0, M.whave = 0, M.window = new B.Buf8(M.wsize)), I >= M.wsize ? (B.arraySet(M.window, F, m - M.wsize, M.wsize, 0), M.wnext = 0, M.whave = M.wsize) : (I < (O = M.wsize - M.wnext) && (O = I), B.arraySet(M.window, F, m - I, O, M.wnext), (I -= O) ? (B.arraySet(M.window, F, m - I, I, 0), M.wnext = I, M.whave = M.wsize) : (M.wnext += O, M.wnext === M.wsize && (M.wnext = 0), M.whave < M.wsize && (M.whave += O))), 0;
      }
      L.inflateReset = x, L.inflateReset2 = e, L.inflateResetKeep = y, L.inflateInit = function(C) {
        return b(C, 15);
      }, L.inflateInit2 = b, L.inflate = function(C, F) {
        var m, I, O, M, N, G, ot, K, nt, xt, bt, St, Dt, Lt, jt, J, yt, ut, st, wt, V, Ft, U, S, k = 0, H = new B.Buf8(4), it = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        if (!C || !C.state || !C.output || !C.input && C.avail_in !== 0)
          return h;
        (m = C.state).mode === 12 && (m.mode = 13), N = C.next_out, O = C.output, ot = C.avail_out, M = C.next_in, I = C.input, G = C.avail_in, K = m.hold, nt = m.bits, xt = G, bt = ot, Ft = o;
        t:
          for (; ; )
            switch (m.mode) {
              case u:
                if (m.wrap === 0) {
                  m.mode = 13;
                  break;
                }
                for (; nt < 16; ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                if (2 & m.wrap && K === 35615) {
                  H[m.check = 0] = 255 & K, H[1] = K >>> 8 & 255, m.check = d(m.check, H, 2, 0), nt = K = 0, m.mode = 2;
                  break;
                }
                if (m.flags = 0, m.head && (m.head.done = !1), !(1 & m.wrap) || (((255 & K) << 8) + (K >> 8)) % 31) {
                  C.msg = "incorrect header check", m.mode = 30;
                  break;
                }
                if ((15 & K) != 8) {
                  C.msg = "unknown compression method", m.mode = 30;
                  break;
                }
                if (nt -= 4, V = 8 + (15 & (K >>>= 4)), m.wbits === 0)
                  m.wbits = V;
                else if (V > m.wbits) {
                  C.msg = "invalid window size", m.mode = 30;
                  break;
                }
                m.dmax = 1 << V, C.adler = m.check = 1, m.mode = 512 & K ? 10 : 12, nt = K = 0;
                break;
              case 2:
                for (; nt < 16; ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                if (m.flags = K, (255 & m.flags) != 8) {
                  C.msg = "unknown compression method", m.mode = 30;
                  break;
                }
                if (57344 & m.flags) {
                  C.msg = "unknown header flags set", m.mode = 30;
                  break;
                }
                m.head && (m.head.text = K >> 8 & 1), 512 & m.flags && (H[0] = 255 & K, H[1] = K >>> 8 & 255, m.check = d(m.check, H, 2, 0)), nt = K = 0, m.mode = 3;
              case 3:
                for (; nt < 32; ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                m.head && (m.head.time = K), 512 & m.flags && (H[0] = 255 & K, H[1] = K >>> 8 & 255, H[2] = K >>> 16 & 255, H[3] = K >>> 24 & 255, m.check = d(m.check, H, 4, 0)), nt = K = 0, m.mode = 4;
              case 4:
                for (; nt < 16; ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                m.head && (m.head.xflags = 255 & K, m.head.os = K >> 8), 512 & m.flags && (H[0] = 255 & K, H[1] = K >>> 8 & 255, m.check = d(m.check, H, 2, 0)), nt = K = 0, m.mode = 5;
              case 5:
                if (1024 & m.flags) {
                  for (; nt < 16; ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  m.length = K, m.head && (m.head.extra_len = K), 512 & m.flags && (H[0] = 255 & K, H[1] = K >>> 8 & 255, m.check = d(m.check, H, 2, 0)), nt = K = 0;
                } else
                  m.head && (m.head.extra = null);
                m.mode = 6;
              case 6:
                if (1024 & m.flags && (G < (St = m.length) && (St = G), St && (m.head && (V = m.head.extra_len - m.length, m.head.extra || (m.head.extra = new Array(m.head.extra_len)), B.arraySet(m.head.extra, I, M, St, V)), 512 & m.flags && (m.check = d(m.check, I, St, M)), G -= St, M += St, m.length -= St), m.length))
                  break t;
                m.length = 0, m.mode = 7;
              case 7:
                if (2048 & m.flags) {
                  if (G === 0)
                    break t;
                  for (St = 0; V = I[M + St++], m.head && V && m.length < 65536 && (m.head.name += String.fromCharCode(V)), V && St < G; )
                    ;
                  if (512 & m.flags && (m.check = d(m.check, I, St, M)), G -= St, M += St, V)
                    break t;
                } else
                  m.head && (m.head.name = null);
                m.length = 0, m.mode = 8;
              case 8:
                if (4096 & m.flags) {
                  if (G === 0)
                    break t;
                  for (St = 0; V = I[M + St++], m.head && V && m.length < 65536 && (m.head.comment += String.fromCharCode(V)), V && St < G; )
                    ;
                  if (512 & m.flags && (m.check = d(m.check, I, St, M)), G -= St, M += St, V)
                    break t;
                } else
                  m.head && (m.head.comment = null);
                m.mode = 9;
              case 9:
                if (512 & m.flags) {
                  for (; nt < 16; ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  if (K !== (65535 & m.check)) {
                    C.msg = "header crc mismatch", m.mode = 30;
                    break;
                  }
                  nt = K = 0;
                }
                m.head && (m.head.hcrc = m.flags >> 9 & 1, m.head.done = !0), C.adler = m.check = 0, m.mode = 12;
                break;
              case 10:
                for (; nt < 32; ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                C.adler = m.check = s(K), nt = K = 0, m.mode = 11;
              case 11:
                if (m.havedict === 0)
                  return C.next_out = N, C.avail_out = ot, C.next_in = M, C.avail_in = G, m.hold = K, m.bits = nt, 2;
                C.adler = m.check = 1, m.mode = 12;
              case 12:
                if (F === 5 || F === 6)
                  break t;
              case 13:
                if (m.last) {
                  K >>>= 7 & nt, nt -= 7 & nt, m.mode = 27;
                  break;
                }
                for (; nt < 3; ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                switch (m.last = 1 & K, nt -= 1, 3 & (K >>>= 1)) {
                  case 0:
                    m.mode = 14;
                    break;
                  case 1:
                    if (E(m), m.mode = 20, F !== 6)
                      break;
                    K >>>= 2, nt -= 2;
                    break t;
                  case 2:
                    m.mode = 17;
                    break;
                  case 3:
                    C.msg = "invalid block type", m.mode = 30;
                }
                K >>>= 2, nt -= 2;
                break;
              case 14:
                for (K >>>= 7 & nt, nt -= 7 & nt; nt < 32; ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                if ((65535 & K) != (K >>> 16 ^ 65535)) {
                  C.msg = "invalid stored block lengths", m.mode = 30;
                  break;
                }
                if (m.length = 65535 & K, nt = K = 0, m.mode = 15, F === 6)
                  break t;
              case 15:
                m.mode = 16;
              case 16:
                if (St = m.length) {
                  if (G < St && (St = G), ot < St && (St = ot), St === 0)
                    break t;
                  B.arraySet(O, I, M, St, N), G -= St, M += St, ot -= St, N += St, m.length -= St;
                  break;
                }
                m.mode = 12;
                break;
              case 17:
                for (; nt < 14; ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                if (m.nlen = 257 + (31 & K), K >>>= 5, nt -= 5, m.ndist = 1 + (31 & K), K >>>= 5, nt -= 5, m.ncode = 4 + (15 & K), K >>>= 4, nt -= 4, 286 < m.nlen || 30 < m.ndist) {
                  C.msg = "too many length or distance symbols", m.mode = 30;
                  break;
                }
                m.have = 0, m.mode = 18;
              case 18:
                for (; m.have < m.ncode; ) {
                  for (; nt < 3; ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  m.lens[it[m.have++]] = 7 & K, K >>>= 3, nt -= 3;
                }
                for (; m.have < 19; )
                  m.lens[it[m.have++]] = 0;
                if (m.lencode = m.lendyn, m.lenbits = 7, U = { bits: m.lenbits }, Ft = i(0, m.lens, 0, 19, m.lencode, 0, m.work, U), m.lenbits = U.bits, Ft) {
                  C.msg = "invalid code lengths set", m.mode = 30;
                  break;
                }
                m.have = 0, m.mode = 19;
              case 19:
                for (; m.have < m.nlen + m.ndist; ) {
                  for (; J = (k = m.lencode[K & (1 << m.lenbits) - 1]) >>> 16 & 255, yt = 65535 & k, !((jt = k >>> 24) <= nt); ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  if (yt < 16)
                    K >>>= jt, nt -= jt, m.lens[m.have++] = yt;
                  else {
                    if (yt === 16) {
                      for (S = jt + 2; nt < S; ) {
                        if (G === 0)
                          break t;
                        G--, K += I[M++] << nt, nt += 8;
                      }
                      if (K >>>= jt, nt -= jt, m.have === 0) {
                        C.msg = "invalid bit length repeat", m.mode = 30;
                        break;
                      }
                      V = m.lens[m.have - 1], St = 3 + (3 & K), K >>>= 2, nt -= 2;
                    } else if (yt === 17) {
                      for (S = jt + 3; nt < S; ) {
                        if (G === 0)
                          break t;
                        G--, K += I[M++] << nt, nt += 8;
                      }
                      nt -= jt, V = 0, St = 3 + (7 & (K >>>= jt)), K >>>= 3, nt -= 3;
                    } else {
                      for (S = jt + 7; nt < S; ) {
                        if (G === 0)
                          break t;
                        G--, K += I[M++] << nt, nt += 8;
                      }
                      nt -= jt, V = 0, St = 11 + (127 & (K >>>= jt)), K >>>= 7, nt -= 7;
                    }
                    if (m.have + St > m.nlen + m.ndist) {
                      C.msg = "invalid bit length repeat", m.mode = 30;
                      break;
                    }
                    for (; St--; )
                      m.lens[m.have++] = V;
                  }
                }
                if (m.mode === 30)
                  break;
                if (m.lens[256] === 0) {
                  C.msg = "invalid code -- missing end-of-block", m.mode = 30;
                  break;
                }
                if (m.lenbits = 9, U = { bits: m.lenbits }, Ft = i(r, m.lens, 0, m.nlen, m.lencode, 0, m.work, U), m.lenbits = U.bits, Ft) {
                  C.msg = "invalid literal/lengths set", m.mode = 30;
                  break;
                }
                if (m.distbits = 6, m.distcode = m.distdyn, U = { bits: m.distbits }, Ft = i(n, m.lens, m.nlen, m.ndist, m.distcode, 0, m.work, U), m.distbits = U.bits, Ft) {
                  C.msg = "invalid distances set", m.mode = 30;
                  break;
                }
                if (m.mode = 20, F === 6)
                  break t;
              case 20:
                m.mode = 21;
              case 21:
                if (6 <= G && 258 <= ot) {
                  C.next_out = N, C.avail_out = ot, C.next_in = M, C.avail_in = G, m.hold = K, m.bits = nt, t(C, bt), N = C.next_out, O = C.output, ot = C.avail_out, M = C.next_in, I = C.input, G = C.avail_in, K = m.hold, nt = m.bits, m.mode === 12 && (m.back = -1);
                  break;
                }
                for (m.back = 0; J = (k = m.lencode[K & (1 << m.lenbits) - 1]) >>> 16 & 255, yt = 65535 & k, !((jt = k >>> 24) <= nt); ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                if (J && !(240 & J)) {
                  for (ut = jt, st = J, wt = yt; J = (k = m.lencode[wt + ((K & (1 << ut + st) - 1) >> ut)]) >>> 16 & 255, yt = 65535 & k, !(ut + (jt = k >>> 24) <= nt); ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  K >>>= ut, nt -= ut, m.back += ut;
                }
                if (K >>>= jt, nt -= jt, m.back += jt, m.length = yt, J === 0) {
                  m.mode = 26;
                  break;
                }
                if (32 & J) {
                  m.back = -1, m.mode = 12;
                  break;
                }
                if (64 & J) {
                  C.msg = "invalid literal/length code", m.mode = 30;
                  break;
                }
                m.extra = 15 & J, m.mode = 22;
              case 22:
                if (m.extra) {
                  for (S = m.extra; nt < S; ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  m.length += K & (1 << m.extra) - 1, K >>>= m.extra, nt -= m.extra, m.back += m.extra;
                }
                m.was = m.length, m.mode = 23;
              case 23:
                for (; J = (k = m.distcode[K & (1 << m.distbits) - 1]) >>> 16 & 255, yt = 65535 & k, !((jt = k >>> 24) <= nt); ) {
                  if (G === 0)
                    break t;
                  G--, K += I[M++] << nt, nt += 8;
                }
                if (!(240 & J)) {
                  for (ut = jt, st = J, wt = yt; J = (k = m.distcode[wt + ((K & (1 << ut + st) - 1) >> ut)]) >>> 16 & 255, yt = 65535 & k, !(ut + (jt = k >>> 24) <= nt); ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  K >>>= ut, nt -= ut, m.back += ut;
                }
                if (K >>>= jt, nt -= jt, m.back += jt, 64 & J) {
                  C.msg = "invalid distance code", m.mode = 30;
                  break;
                }
                m.offset = yt, m.extra = 15 & J, m.mode = 24;
              case 24:
                if (m.extra) {
                  for (S = m.extra; nt < S; ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  m.offset += K & (1 << m.extra) - 1, K >>>= m.extra, nt -= m.extra, m.back += m.extra;
                }
                if (m.offset > m.dmax) {
                  C.msg = "invalid distance too far back", m.mode = 30;
                  break;
                }
                m.mode = 25;
              case 25:
                if (ot === 0)
                  break t;
                if (St = bt - ot, m.offset > St) {
                  if ((St = m.offset - St) > m.whave && m.sane) {
                    C.msg = "invalid distance too far back", m.mode = 30;
                    break;
                  }
                  Dt = St > m.wnext ? (St -= m.wnext, m.wsize - St) : m.wnext - St, St > m.length && (St = m.length), Lt = m.window;
                } else
                  Lt = O, Dt = N - m.offset, St = m.length;
                for (ot < St && (St = ot), ot -= St, m.length -= St; O[N++] = Lt[Dt++], --St; )
                  ;
                m.length === 0 && (m.mode = 21);
                break;
              case 26:
                if (ot === 0)
                  break t;
                O[N++] = m.length, ot--, m.mode = 21;
                break;
              case 27:
                if (m.wrap) {
                  for (; nt < 32; ) {
                    if (G === 0)
                      break t;
                    G--, K |= I[M++] << nt, nt += 8;
                  }
                  if (bt -= ot, C.total_out += bt, m.total += bt, bt && (C.adler = m.check = m.flags ? d(m.check, O, bt, N - bt) : f(m.check, O, bt, N - bt)), bt = ot, (m.flags ? K : s(K)) !== m.check) {
                    C.msg = "incorrect data check", m.mode = 30;
                    break;
                  }
                  nt = K = 0;
                }
                m.mode = 28;
              case 28:
                if (m.wrap && m.flags) {
                  for (; nt < 32; ) {
                    if (G === 0)
                      break t;
                    G--, K += I[M++] << nt, nt += 8;
                  }
                  if (K !== (4294967295 & m.total)) {
                    C.msg = "incorrect length check", m.mode = 30;
                    break;
                  }
                  nt = K = 0;
                }
                m.mode = 29;
              case 29:
                Ft = 1;
                break t;
              case 30:
                Ft = -3;
                break t;
              case 31:
                return -4;
              case 32:
              default:
                return h;
            }
        return C.next_out = N, C.avail_out = ot, C.next_in = M, C.avail_in = G, m.hold = K, m.bits = nt, (m.wsize || bt !== C.avail_out && m.mode < 30 && (m.mode < 27 || F !== 4)) && T(C, C.output, C.next_out, bt - C.avail_out) ? (m.mode = 31, -4) : (xt -= C.avail_in, bt -= C.avail_out, C.total_in += xt, C.total_out += bt, m.total += bt, m.wrap && bt && (C.adler = m.check = m.flags ? d(m.check, O, bt, C.next_out - bt) : f(m.check, O, bt, C.next_out - bt)), C.data_type = m.bits + (m.last ? 64 : 0) + (m.mode === 12 ? 128 : 0) + (m.mode === 20 || m.mode === 15 ? 256 : 0), (xt == 0 && bt === 0 || F === 4) && Ft === o && (Ft = -5), Ft);
      }, L.inflateEnd = function(C) {
        if (!C || !C.state)
          return h;
        var F = C.state;
        return F.window && (F.window = null), C.state = null, o;
      }, L.inflateGetHeader = function(C, F) {
        var m;
        return C && C.state && 2 & (m = C.state).wrap ? ((m.head = F).done = !1, o) : h;
      }, L.inflateSetDictionary = function(C, F) {
        var m, I = F.length;
        return C && C.state ? (m = C.state).wrap !== 0 && m.mode !== 11 ? h : m.mode === 11 && f(1, F, I, 0) !== m.check ? -3 : T(C, F, I, I) ? (m.mode = 31, -4) : (m.havedict = 1, o) : h;
      }, L.inflateInfo = "pako inflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(g, w, L) {
      var B = g("../utils/common"), f = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], d = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], t = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], i = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
      w.exports = function(r, n, o, h, u, l, c, s) {
        var v, y, x, e, b, A, P, D, E, T = s.bits, C = 0, F = 0, m = 0, I = 0, O = 0, M = 0, N = 0, G = 0, ot = 0, K = 0, nt = null, xt = 0, bt = new B.Buf16(16), St = new B.Buf16(16), Dt = null, Lt = 0;
        for (C = 0; C <= 15; C++)
          bt[C] = 0;
        for (F = 0; F < h; F++)
          bt[n[o + F]]++;
        for (O = T, I = 15; 1 <= I && bt[I] === 0; I--)
          ;
        if (I < O && (O = I), I === 0)
          return u[l++] = 20971520, u[l++] = 20971520, s.bits = 1, 0;
        for (m = 1; m < I && bt[m] === 0; m++)
          ;
        for (O < m && (O = m), C = G = 1; C <= 15; C++)
          if (G <<= 1, (G -= bt[C]) < 0)
            return -1;
        if (0 < G && (r === 0 || I !== 1))
          return -1;
        for (St[1] = 0, C = 1; C < 15; C++)
          St[C + 1] = St[C] + bt[C];
        for (F = 0; F < h; F++)
          n[o + F] !== 0 && (c[St[n[o + F]]++] = F);
        if (A = r === 0 ? (nt = Dt = c, 19) : r === 1 ? (nt = f, xt -= 257, Dt = d, Lt -= 257, 256) : (nt = t, Dt = i, -1), C = m, b = l, N = F = K = 0, x = -1, e = (ot = 1 << (M = O)) - 1, r === 1 && 852 < ot || r === 2 && 592 < ot)
          return 1;
        for (; ; ) {
          for (P = C - N, E = c[F] < A ? (D = 0, c[F]) : c[F] > A ? (D = Dt[Lt + c[F]], nt[xt + c[F]]) : (D = 96, 0), v = 1 << C - N, m = y = 1 << M; u[b + (K >> N) + (y -= v)] = P << 24 | D << 16 | E | 0, y !== 0; )
            ;
          for (v = 1 << C - 1; K & v; )
            v >>= 1;
          if (v !== 0 ? (K &= v - 1, K += v) : K = 0, F++, --bt[C] == 0) {
            if (C === I)
              break;
            C = n[o + c[F]];
          }
          if (O < C && (K & e) !== x) {
            for (N === 0 && (N = O), b += m, G = 1 << (M = C - N); M + N < I && !((G -= bt[M + N]) <= 0); )
              M++, G <<= 1;
            if (ot += 1 << M, r === 1 && 852 < ot || r === 2 && 592 < ot)
              return 1;
            u[x = K & e] = O << 24 | M << 16 | b - l | 0;
          }
        }
        return K !== 0 && (u[b + K] = C - N << 24 | 64 << 16 | 0), s.bits = O, 0;
      };
    }, { "../utils/common": 41 }], 51: [function(g, w, L) {
      w.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
    }, {}], 52: [function(g, w, L) {
      var B = g("../utils/common"), f = 0, d = 1;
      function t(k) {
        for (var H = k.length; 0 <= --H; )
          k[H] = 0;
      }
      var i = 0, r = 29, n = 256, o = n + 1 + r, h = 30, u = 19, l = 2 * o + 1, c = 15, s = 16, v = 7, y = 256, x = 16, e = 17, b = 18, A = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], P = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], D = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], E = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], T = new Array(2 * (o + 2));
      t(T);
      var C = new Array(2 * h);
      t(C);
      var F = new Array(512);
      t(F);
      var m = new Array(256);
      t(m);
      var I = new Array(r);
      t(I);
      var O, M, N, G = new Array(h);
      function ot(k, H, it, et, tt) {
        this.static_tree = k, this.extra_bits = H, this.extra_base = it, this.elems = et, this.max_length = tt, this.has_stree = k && k.length;
      }
      function K(k, H) {
        this.dyn_tree = k, this.max_code = 0, this.stat_desc = H;
      }
      function nt(k) {
        return k < 256 ? F[k] : F[256 + (k >>> 7)];
      }
      function xt(k, H) {
        k.pending_buf[k.pending++] = 255 & H, k.pending_buf[k.pending++] = H >>> 8 & 255;
      }
      function bt(k, H, it) {
        k.bi_valid > s - it ? (k.bi_buf |= H << k.bi_valid & 65535, xt(k, k.bi_buf), k.bi_buf = H >> s - k.bi_valid, k.bi_valid += it - s) : (k.bi_buf |= H << k.bi_valid & 65535, k.bi_valid += it);
      }
      function St(k, H, it) {
        bt(k, it[2 * H], it[2 * H + 1]);
      }
      function Dt(k, H) {
        for (var it = 0; it |= 1 & k, k >>>= 1, it <<= 1, 0 < --H; )
          ;
        return it >>> 1;
      }
      function Lt(k, H, it) {
        var et, tt, Ct = new Array(c + 1), Rt = 0;
        for (et = 1; et <= c; et++)
          Ct[et] = Rt = Rt + it[et - 1] << 1;
        for (tt = 0; tt <= H; tt++) {
          var Kt = k[2 * tt + 1];
          Kt !== 0 && (k[2 * tt] = Dt(Ct[Kt]++, Kt));
        }
      }
      function jt(k) {
        var H;
        for (H = 0; H < o; H++)
          k.dyn_ltree[2 * H] = 0;
        for (H = 0; H < h; H++)
          k.dyn_dtree[2 * H] = 0;
        for (H = 0; H < u; H++)
          k.bl_tree[2 * H] = 0;
        k.dyn_ltree[2 * y] = 1, k.opt_len = k.static_len = 0, k.last_lit = k.matches = 0;
      }
      function J(k) {
        8 < k.bi_valid ? xt(k, k.bi_buf) : 0 < k.bi_valid && (k.pending_buf[k.pending++] = k.bi_buf), k.bi_buf = 0, k.bi_valid = 0;
      }
      function yt(k, H, it, et) {
        var tt = 2 * H, Ct = 2 * it;
        return k[tt] < k[Ct] || k[tt] === k[Ct] && et[H] <= et[it];
      }
      function ut(k, H, it) {
        for (var et = k.heap[it], tt = it << 1; tt <= k.heap_len && (tt < k.heap_len && yt(H, k.heap[tt + 1], k.heap[tt], k.depth) && tt++, !yt(H, et, k.heap[tt], k.depth)); )
          k.heap[it] = k.heap[tt], it = tt, tt <<= 1;
        k.heap[it] = et;
      }
      function st(k, H, it) {
        var et, tt, Ct, Rt, Kt = 0;
        if (k.last_lit !== 0)
          for (; et = k.pending_buf[k.d_buf + 2 * Kt] << 8 | k.pending_buf[k.d_buf + 2 * Kt + 1], tt = k.pending_buf[k.l_buf + Kt], Kt++, et === 0 ? St(k, tt, H) : (St(k, (Ct = m[tt]) + n + 1, H), (Rt = A[Ct]) !== 0 && bt(k, tt -= I[Ct], Rt), St(k, Ct = nt(--et), it), (Rt = P[Ct]) !== 0 && bt(k, et -= G[Ct], Rt)), Kt < k.last_lit; )
            ;
        St(k, y, H);
      }
      function wt(k, H) {
        var it, et, tt, Ct = H.dyn_tree, Rt = H.stat_desc.static_tree, Kt = H.stat_desc.has_stree, Gt = H.stat_desc.elems, It = -1;
        for (k.heap_len = 0, k.heap_max = l, it = 0; it < Gt; it++)
          Ct[2 * it] !== 0 ? (k.heap[++k.heap_len] = It = it, k.depth[it] = 0) : Ct[2 * it + 1] = 0;
        for (; k.heap_len < 2; )
          Ct[2 * (tt = k.heap[++k.heap_len] = It < 2 ? ++It : 0)] = 1, k.depth[tt] = 0, k.opt_len--, Kt && (k.static_len -= Rt[2 * tt + 1]);
        for (H.max_code = It, it = k.heap_len >> 1; 1 <= it; it--)
          ut(k, Ct, it);
        for (tt = Gt; it = k.heap[1], k.heap[1] = k.heap[k.heap_len--], ut(k, Ct, 1), et = k.heap[1], k.heap[--k.heap_max] = it, k.heap[--k.heap_max] = et, Ct[2 * tt] = Ct[2 * it] + Ct[2 * et], k.depth[tt] = (k.depth[it] >= k.depth[et] ? k.depth[it] : k.depth[et]) + 1, Ct[2 * it + 1] = Ct[2 * et + 1] = tt, k.heap[1] = tt++, ut(k, Ct, 1), 2 <= k.heap_len; )
          ;
        k.heap[--k.heap_max] = k.heap[1], function(re, be) {
          var me, le, Se, Wt, $t, ue, he = be.dyn_tree, Ee = be.max_code, Re = be.stat_desc.static_tree, Ie = be.stat_desc.has_stree, Ot = be.stat_desc.extra_bits, vt = be.stat_desc.extra_base, W = be.stat_desc.max_length, Q = 0;
          for (Wt = 0; Wt <= c; Wt++)
            re.bl_count[Wt] = 0;
          for (he[2 * re.heap[re.heap_max] + 1] = 0, me = re.heap_max + 1; me < l; me++)
            W < (Wt = he[2 * he[2 * (le = re.heap[me]) + 1] + 1] + 1) && (Wt = W, Q++), he[2 * le + 1] = Wt, Ee < le || (re.bl_count[Wt]++, $t = 0, vt <= le && ($t = Ot[le - vt]), ue = he[2 * le], re.opt_len += ue * (Wt + $t), Ie && (re.static_len += ue * (Re[2 * le + 1] + $t)));
          if (Q !== 0) {
            do {
              for (Wt = W - 1; re.bl_count[Wt] === 0; )
                Wt--;
              re.bl_count[Wt]--, re.bl_count[Wt + 1] += 2, re.bl_count[W]--, Q -= 2;
            } while (0 < Q);
            for (Wt = W; Wt !== 0; Wt--)
              for (le = re.bl_count[Wt]; le !== 0; )
                Ee < (Se = re.heap[--me]) || (he[2 * Se + 1] !== Wt && (re.opt_len += (Wt - he[2 * Se + 1]) * he[2 * Se], he[2 * Se + 1] = Wt), le--);
          }
        }(k, H), Lt(Ct, It, k.bl_count);
      }
      function V(k, H, it) {
        var et, tt, Ct = -1, Rt = H[1], Kt = 0, Gt = 7, It = 4;
        for (Rt === 0 && (Gt = 138, It = 3), H[2 * (it + 1) + 1] = 65535, et = 0; et <= it; et++)
          tt = Rt, Rt = H[2 * (et + 1) + 1], ++Kt < Gt && tt === Rt || (Kt < It ? k.bl_tree[2 * tt] += Kt : tt !== 0 ? (tt !== Ct && k.bl_tree[2 * tt]++, k.bl_tree[2 * x]++) : Kt <= 10 ? k.bl_tree[2 * e]++ : k.bl_tree[2 * b]++, Ct = tt, It = (Kt = 0) === Rt ? (Gt = 138, 3) : tt === Rt ? (Gt = 6, 3) : (Gt = 7, 4));
      }
      function Ft(k, H, it) {
        var et, tt, Ct = -1, Rt = H[1], Kt = 0, Gt = 7, It = 4;
        for (Rt === 0 && (Gt = 138, It = 3), et = 0; et <= it; et++)
          if (tt = Rt, Rt = H[2 * (et + 1) + 1], !(++Kt < Gt && tt === Rt)) {
            if (Kt < It)
              for (; St(k, tt, k.bl_tree), --Kt != 0; )
                ;
            else
              tt !== 0 ? (tt !== Ct && (St(k, tt, k.bl_tree), Kt--), St(k, x, k.bl_tree), bt(k, Kt - 3, 2)) : Kt <= 10 ? (St(k, e, k.bl_tree), bt(k, Kt - 3, 3)) : (St(k, b, k.bl_tree), bt(k, Kt - 11, 7));
            Ct = tt, It = (Kt = 0) === Rt ? (Gt = 138, 3) : tt === Rt ? (Gt = 6, 3) : (Gt = 7, 4);
          }
      }
      t(G);
      var U = !1;
      function S(k, H, it, et) {
        bt(k, (i << 1) + (et ? 1 : 0), 3), function(tt, Ct, Rt, Kt) {
          J(tt), Kt && (xt(tt, Rt), xt(tt, ~Rt)), B.arraySet(tt.pending_buf, tt.window, Ct, Rt, tt.pending), tt.pending += Rt;
        }(k, H, it, !0);
      }
      L._tr_init = function(k) {
        U || (function() {
          var H, it, et, tt, Ct, Rt = new Array(c + 1);
          for (tt = et = 0; tt < r - 1; tt++)
            for (I[tt] = et, H = 0; H < 1 << A[tt]; H++)
              m[et++] = tt;
          for (m[et - 1] = tt, tt = Ct = 0; tt < 16; tt++)
            for (G[tt] = Ct, H = 0; H < 1 << P[tt]; H++)
              F[Ct++] = tt;
          for (Ct >>= 7; tt < h; tt++)
            for (G[tt] = Ct << 7, H = 0; H < 1 << P[tt] - 7; H++)
              F[256 + Ct++] = tt;
          for (it = 0; it <= c; it++)
            Rt[it] = 0;
          for (H = 0; H <= 143; )
            T[2 * H + 1] = 8, H++, Rt[8]++;
          for (; H <= 255; )
            T[2 * H + 1] = 9, H++, Rt[9]++;
          for (; H <= 279; )
            T[2 * H + 1] = 7, H++, Rt[7]++;
          for (; H <= 287; )
            T[2 * H + 1] = 8, H++, Rt[8]++;
          for (Lt(T, o + 1, Rt), H = 0; H < h; H++)
            C[2 * H + 1] = 5, C[2 * H] = Dt(H, 5);
          O = new ot(T, A, n + 1, o, c), M = new ot(C, P, 0, h, c), N = new ot(new Array(0), D, 0, u, v);
        }(), U = !0), k.l_desc = new K(k.dyn_ltree, O), k.d_desc = new K(k.dyn_dtree, M), k.bl_desc = new K(k.bl_tree, N), k.bi_buf = 0, k.bi_valid = 0, jt(k);
      }, L._tr_stored_block = S, L._tr_flush_block = function(k, H, it, et) {
        var tt, Ct, Rt = 0;
        0 < k.level ? (k.strm.data_type === 2 && (k.strm.data_type = function(Kt) {
          var Gt, It = 4093624447;
          for (Gt = 0; Gt <= 31; Gt++, It >>>= 1)
            if (1 & It && Kt.dyn_ltree[2 * Gt] !== 0)
              return f;
          if (Kt.dyn_ltree[18] !== 0 || Kt.dyn_ltree[20] !== 0 || Kt.dyn_ltree[26] !== 0)
            return d;
          for (Gt = 32; Gt < n; Gt++)
            if (Kt.dyn_ltree[2 * Gt] !== 0)
              return d;
          return f;
        }(k)), wt(k, k.l_desc), wt(k, k.d_desc), Rt = function(Kt) {
          var Gt;
          for (V(Kt, Kt.dyn_ltree, Kt.l_desc.max_code), V(Kt, Kt.dyn_dtree, Kt.d_desc.max_code), wt(Kt, Kt.bl_desc), Gt = u - 1; 3 <= Gt && Kt.bl_tree[2 * E[Gt] + 1] === 0; Gt--)
            ;
          return Kt.opt_len += 3 * (Gt + 1) + 5 + 5 + 4, Gt;
        }(k), tt = k.opt_len + 3 + 7 >>> 3, (Ct = k.static_len + 3 + 7 >>> 3) <= tt && (tt = Ct)) : tt = Ct = it + 5, it + 4 <= tt && H !== -1 ? S(k, H, it, et) : k.strategy === 4 || Ct === tt ? (bt(k, 2 + (et ? 1 : 0), 3), st(k, T, C)) : (bt(k, 4 + (et ? 1 : 0), 3), function(Kt, Gt, It, re) {
          var be;
          for (bt(Kt, Gt - 257, 5), bt(Kt, It - 1, 5), bt(Kt, re - 4, 4), be = 0; be < re; be++)
            bt(Kt, Kt.bl_tree[2 * E[be] + 1], 3);
          Ft(Kt, Kt.dyn_ltree, Gt - 1), Ft(Kt, Kt.dyn_dtree, It - 1);
        }(k, k.l_desc.max_code + 1, k.d_desc.max_code + 1, Rt + 1), st(k, k.dyn_ltree, k.dyn_dtree)), jt(k), et && J(k);
      }, L._tr_tally = function(k, H, it) {
        return k.pending_buf[k.d_buf + 2 * k.last_lit] = H >>> 8 & 255, k.pending_buf[k.d_buf + 2 * k.last_lit + 1] = 255 & H, k.pending_buf[k.l_buf + k.last_lit] = 255 & it, k.last_lit++, H === 0 ? k.dyn_ltree[2 * it]++ : (k.matches++, H--, k.dyn_ltree[2 * (m[it] + n + 1)]++, k.dyn_dtree[2 * nt(H)]++), k.last_lit === k.lit_bufsize - 1;
      }, L._tr_align = function(k) {
        bt(k, 2, 3), St(k, y, T), function(H) {
          H.bi_valid === 16 ? (xt(H, H.bi_buf), H.bi_buf = 0, H.bi_valid = 0) : 8 <= H.bi_valid && (H.pending_buf[H.pending++] = 255 & H.bi_buf, H.bi_buf >>= 8, H.bi_valid -= 8);
        }(k);
      };
    }, { "../utils/common": 41 }], 53: [function(g, w, L) {
      w.exports = function() {
        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
      };
    }, {}], 54: [function(g, w, L) {
      (function(B) {
        (function(f, d) {
          if (!f.setImmediate) {
            var t, i, r, n, o = 1, h = {}, u = !1, l = f.document, c = Object.getPrototypeOf && Object.getPrototypeOf(f);
            c = c && c.setTimeout ? c : f, t = {}.toString.call(f.process) === "[object process]" ? function(x) {
              process.nextTick(function() {
                v(x);
              });
            } : function() {
              if (f.postMessage && !f.importScripts) {
                var x = !0, e = f.onmessage;
                return f.onmessage = function() {
                  x = !1;
                }, f.postMessage("", "*"), f.onmessage = e, x;
              }
            }() ? (n = "setImmediate$" + Math.random() + "$", f.addEventListener ? f.addEventListener("message", y, !1) : f.attachEvent("onmessage", y), function(x) {
              f.postMessage(n + x, "*");
            }) : f.MessageChannel ? ((r = new MessageChannel()).port1.onmessage = function(x) {
              v(x.data);
            }, function(x) {
              r.port2.postMessage(x);
            }) : l && "onreadystatechange" in l.createElement("script") ? (i = l.documentElement, function(x) {
              var e = l.createElement("script");
              e.onreadystatechange = function() {
                v(x), e.onreadystatechange = null, i.removeChild(e), e = null;
              }, i.appendChild(e);
            }) : function(x) {
              setTimeout(v, 0, x);
            }, c.setImmediate = function(x) {
              typeof x != "function" && (x = new Function("" + x));
              for (var e = new Array(arguments.length - 1), b = 0; b < e.length; b++)
                e[b] = arguments[b + 1];
              var A = { callback: x, args: e };
              return h[o] = A, t(o), o++;
            }, c.clearImmediate = s;
          }
          function s(x) {
            delete h[x];
          }
          function v(x) {
            if (u)
              setTimeout(v, 0, x);
            else {
              var e = h[x];
              if (e) {
                u = !0;
                try {
                  (function(b) {
                    var A = b.callback, P = b.args;
                    switch (P.length) {
                      case 0:
                        A();
                        break;
                      case 1:
                        A(P[0]);
                        break;
                      case 2:
                        A(P[0], P[1]);
                        break;
                      case 3:
                        A(P[0], P[1], P[2]);
                        break;
                      default:
                        A.apply(d, P);
                    }
                  })(e);
                } finally {
                  s(x), u = !1;
                }
              }
            }
          }
          function y(x) {
            x.source === f && typeof x.data == "string" && x.data.indexOf(n) === 0 && v(+x.data.slice(n.length));
          }
        })(typeof self == "undefined" ? B === void 0 ? this : B : self);
      }).call(this, typeof hi != "undefined" ? hi : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
    }, {}] }, {}, [10])(10);
  });
})(dl);
var w1 = dl.exports;
const A1 = /* @__PURE__ */ hl(w1);
var S1 = { exports: {} };
/*! pdfmake v0.2.18, @license MIT, @link http://pdfmake.org */
(function(a, p) {
  (function(w, L) {
    a.exports = L();
  })(typeof self != "undefined" ? self : hi, function() {
    return (
      /******/
      function() {
        var g = {
          /***/
          84490: (
            /***/
            function(f, d) {
              d.OP = 0, d.CL = 1, d.CP = 2, d.QU = 3, d.GL = 4, d.NS = 5, d.EX = 6, d.SY = 7, d.IS = 8, d.PR = 9, d.PO = 10, d.NU = 11, d.AL = 12, d.HL = 13, d.ID = 14, d.IN = 15, d.HY = 16, d.BA = 17, d.BB = 18, d.B2 = 19, d.ZW = 20, d.CM = 21, d.WJ = 22, d.H2 = 23, d.H3 = 24, d.JL = 25, d.JV = 26, d.JT = 27, d.RI = 28, d.EB = 29, d.EM = 30, d.ZWJ = 31, d.CB = 32, d.AI = 33, d.BK = 34, d.CJ = 35, d.CR = 36, d.LF = 37, d.NL = 38, d.SA = 39, d.SG = 40, d.SP = 41, d.XX = 42;
            }
          ),
          /***/
          5303: (
            /***/
            function(f, d) {
              var t, i, r, n, o;
              d.DI_BRK = r = 0, d.IN_BRK = n = 1, d.CI_BRK = t = 2, d.CP_BRK = i = 3, d.PR_BRK = o = 4, d.pairTable = [
                //OP   , CL    , CP    , QU    , GL    , NS    , EX    , SY    , IS    , PR    , PO    , NU    , AL    , HL    , ID    , IN    , HY    , BA    , BB    , B2    , ZW    , CM    , WJ    , H2    , H3    , JL    , JV    , JT    , RI    , EB    , EM    , ZWJ   , CB
                [o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, i, o, o, o, o, o, o, o, o, o, o, o],
                // OP
                [r, o, o, n, n, o, o, o, o, n, n, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // CL
                [r, o, o, n, n, o, o, o, o, n, n, n, n, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // CP
                [o, o, o, n, n, n, o, o, o, n, n, n, n, n, n, n, n, n, n, n, o, t, o, n, n, n, n, n, n, n, n, n, n],
                // QU
                [n, o, o, n, n, n, o, o, o, n, n, n, n, n, n, n, n, n, n, n, o, t, o, n, n, n, n, n, n, n, n, n, n],
                // GL
                [r, o, o, n, n, n, o, o, o, r, r, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // NS
                [r, o, o, n, n, n, o, o, o, r, r, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // EX
                [r, o, o, n, n, n, o, o, o, r, r, n, r, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // SY
                [r, o, o, n, n, n, o, o, o, r, r, n, n, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // IS
                [n, o, o, n, n, n, o, o, o, r, r, n, n, n, n, n, n, n, r, r, o, t, o, n, n, n, n, n, r, n, n, n, r],
                // PR
                [n, o, o, n, n, n, o, o, o, r, r, n, n, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // PO
                [n, o, o, n, n, n, o, o, o, n, n, n, n, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // NU
                [n, o, o, n, n, n, o, o, o, n, n, n, n, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // AL
                [n, o, o, n, n, n, o, o, o, n, n, n, n, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // HL
                [r, o, o, n, n, n, o, o, o, r, n, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // ID
                [r, o, o, n, n, n, o, o, o, r, r, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // IN
                [r, o, o, n, r, n, o, o, o, r, r, n, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // HY
                [r, o, o, n, r, n, o, o, o, r, r, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // BA
                [n, o, o, n, n, n, o, o, o, n, n, n, n, n, n, n, n, n, n, n, o, t, o, n, n, n, n, n, n, n, n, n, r],
                // BB
                [r, o, o, n, n, n, o, o, o, r, r, r, r, r, r, n, n, n, r, o, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // B2
                [r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, o, r, r, r, r, r, r, r, r, r, r, r, r],
                // ZW
                [n, o, o, n, n, n, o, o, o, n, n, n, n, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // CM
                [n, o, o, n, n, n, o, o, o, n, n, n, n, n, n, n, n, n, n, n, o, t, o, n, n, n, n, n, n, n, n, n, n],
                // WJ
                [r, o, o, n, n, n, o, o, o, r, n, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, n, n, r, r, r, n, r],
                // H2
                [r, o, o, n, n, n, o, o, o, r, n, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, n, r, r, r, n, r],
                // H3
                [r, o, o, n, n, n, o, o, o, r, n, r, r, r, r, n, n, n, r, r, o, t, o, n, n, n, n, r, r, r, r, n, r],
                // JL
                [r, o, o, n, n, n, o, o, o, r, n, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, n, n, r, r, r, n, r],
                // JV
                [r, o, o, n, n, n, o, o, o, r, n, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, n, r, r, r, n, r],
                // JT
                [r, o, o, n, n, n, o, o, o, r, r, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, n, r, r, n, r],
                // RI
                [r, o, o, n, n, n, o, o, o, r, n, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, n, n, r],
                // EB
                [r, o, o, n, n, n, o, o, o, r, n, r, r, r, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // EM
                [n, o, o, n, n, n, o, o, o, n, n, n, n, n, r, n, n, n, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r],
                // ZWJ
                [r, o, o, n, n, r, o, o, o, r, r, r, r, r, r, r, r, r, r, r, o, t, o, r, r, r, r, r, r, r, r, n, r]
                // CB
              ];
            }
          ),
          /***/
          62420: (
            /***/
            function(f, d, t) {
              t(18756), d.EncodeStream = t(95291), d.DecodeStream = t(69591), d.Array = t(68332), d.LazyArray = t(11610), d.Bitfield = t(60480), d.Boolean = t(75041), d.Buffer = t(56711), d.Enum = t(36316), d.Optional = t(64241), d.Reserved = t(13549), d.String = t(52676), d.Struct = t(88152), d.VersionedStruct = t(99757);
              var i = t(18128), r = t(56128), n = t(9324);
              Object.assign(d, i, r, n);
            }
          ),
          /***/
          68332: (
            /***/
            function(f, d, t) {
              t(65292), t(73844), t(69330), t(11765), t(81755), t(20731), t(24863), t(14032), t(61726), t(57114), t(58281), t(94712);
              function i(c, s) {
                var v = typeof Symbol != "undefined" && c[Symbol.iterator] || c["@@iterator"];
                if (v)
                  return (v = v.call(c)).next.bind(v);
                if (Array.isArray(c) || (v = r(c)) || s && c && typeof c.length == "number") {
                  v && (c = v);
                  var y = 0;
                  return function() {
                    return y >= c.length ? { done: !0 } : { done: !1, value: c[y++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function r(c, s) {
                if (c) {
                  if (typeof c == "string")
                    return n(c, s);
                  var v = {}.toString.call(c).slice(8, -1);
                  return v === "Object" && c.constructor && (v = c.constructor.name), v === "Map" || v === "Set" ? Array.from(c) : v === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(v) ? n(c, s) : void 0;
                }
              }
              function n(c, s) {
                (s == null || s > c.length) && (s = c.length);
                for (var v = 0, y = Array(s); v < s; v++)
                  y[v] = c[v];
                return y;
              }
              var o = t(56128), h = o.Number, u = t(18128), l = /* @__PURE__ */ function() {
                function c(v, y, x) {
                  x === void 0 && (x = "count"), this.type = v, this.length = y, this.lengthType = x;
                }
                var s = c.prototype;
                return s.decode = function(y, x) {
                  var e, b = y.pos, A = [], P = x;
                  if (this.length != null && (e = u.resolveLength(this.length, y, x)), this.length instanceof h && (Object.defineProperties(A, {
                    parent: {
                      value: x
                    },
                    _startOffset: {
                      value: b
                    },
                    _currentOffset: {
                      value: 0,
                      writable: !0
                    },
                    _length: {
                      value: e
                    }
                  }), P = A), e == null || this.lengthType === "bytes")
                    for (var D = e != null ? y.pos + e : x != null && x._length ? x._startOffset + x._length : y.length; y.pos < D; )
                      A.push(this.type.decode(y, P));
                  else
                    for (var E = 0, T = e; E < T; E++)
                      A.push(this.type.decode(y, P));
                  return A;
                }, s.size = function(y, x) {
                  if (!y)
                    return this.type.size(null, x) * u.resolveLength(this.length, null, x);
                  var e = 0;
                  this.length instanceof h && (e += this.length.size(), x = {
                    parent: x
                  });
                  for (var b = i(y), A; !(A = b()).done; ) {
                    var P = A.value;
                    e += this.type.size(P, x);
                  }
                  return e;
                }, s.encode = function(y, x, e) {
                  var b = e;
                  this.length instanceof h && (b = {
                    pointers: [],
                    startOffset: y.pos,
                    parent: e
                  }, b.pointerOffset = y.pos + this.size(x, b), this.length.encode(y, x.length));
                  for (var A = i(x), P; !(P = A()).done; ) {
                    var D = P.value;
                    this.type.encode(y, D, b);
                  }
                  if (this.length instanceof h)
                    for (var E = 0; E < b.pointers.length; ) {
                      var T = b.pointers[E++];
                      T.type.encode(y, T.val);
                    }
                }, c;
              }();
              f.exports = l;
            }
          ),
          /***/
          60480: (
            /***/
            function(f, d, t) {
              t(74516);
              var i = /* @__PURE__ */ function() {
                function r(o, h) {
                  h === void 0 && (h = []), this.type = o, this.flags = h;
                }
                var n = r.prototype;
                return n.decode = function(h) {
                  for (var u = this.type.decode(h), l = {}, c = 0; c < this.flags.length; c++) {
                    var s = this.flags[c];
                    s != null && (l[s] = !!(u & 1 << c));
                  }
                  return l;
                }, n.size = function() {
                  return this.type.size();
                }, n.encode = function(h, u) {
                  for (var l = 0, c = 0; c < this.flags.length; c++) {
                    var s = this.flags[c];
                    s != null && u[s] && (l |= 1 << c);
                  }
                  return this.type.encode(h, l);
                }, r;
              }();
              f.exports = i;
            }
          ),
          /***/
          75041: (
            /***/
            function(f) {
              var d = /* @__PURE__ */ function() {
                function t(r) {
                  this.type = r;
                }
                var i = t.prototype;
                return i.decode = function(n, o) {
                  return !!this.type.decode(n, o);
                }, i.size = function(n, o) {
                  return this.type.size(n, o);
                }, i.encode = function(n, o, h) {
                  return this.type.encode(n, +o, h);
                }, t;
              }();
              f.exports = d;
            }
          ),
          /***/
          56711: (
            /***/
            function(f, d, t) {
              var i = t(18128), r = t(56128), n = r.Number, o = /* @__PURE__ */ function() {
                function h(l) {
                  this.length = l;
                }
                var u = h.prototype;
                return u.decode = function(c, s) {
                  var v = i.resolveLength(this.length, c, s);
                  return c.readBuffer(v);
                }, u.size = function(c, s) {
                  return c ? c.length : i.resolveLength(this.length, null, s);
                }, u.encode = function(c, s, v) {
                  return this.length instanceof n && this.length.encode(c, s.length), c.writeBuffer(s);
                }, h;
              }();
              f.exports = o;
            }
          ),
          /***/
          69591: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer;
              t(20731), t(14032), t(61726), t(57114), t(46467);
              var r;
              try {
                r = t(54171);
              } catch (u) {
              }
              var n = /* @__PURE__ */ function() {
                function u(c) {
                  this.buffer = c, this.pos = 0, this.length = this.buffer.length;
                }
                var l = u.prototype;
                return l.readString = function(s, v) {
                  switch (v === void 0 && (v = "ascii"), v) {
                    case "utf16le":
                    case "ucs2":
                    case "utf8":
                    case "ascii":
                      return this.buffer.toString(v, this.pos, this.pos += s);
                    case "utf16be":
                      for (var y = i.from(this.readBuffer(s)), x = 0, e = y.length - 1; x < e; x += 2) {
                        var b = y[x];
                        y[x] = y[x + 1], y[x + 1] = b;
                      }
                      return y.toString("utf16le");
                    default:
                      if (y = this.readBuffer(s), r)
                        try {
                          return r.decode(y, v);
                        } catch (A) {
                        }
                      return y;
                  }
                }, l.readBuffer = function(s) {
                  return this.buffer.slice(this.pos, this.pos += s);
                }, l.readUInt24BE = function() {
                  return (this.readUInt16BE() << 8) + this.readUInt8();
                }, l.readUInt24LE = function() {
                  return this.readUInt16LE() + (this.readUInt8() << 16);
                }, l.readInt24BE = function() {
                  return (this.readInt16BE() << 8) + this.readUInt8();
                }, l.readInt24LE = function() {
                  return this.readUInt16LE() + (this.readInt8() << 16);
                }, u;
              }();
              n.TYPES = {
                UInt8: 1,
                UInt16: 2,
                UInt24: 3,
                UInt32: 4,
                Int8: 1,
                Int16: 2,
                Int24: 3,
                Int32: 4,
                Float: 4,
                Double: 8
              };
              var o = function(l) {
                if (l.slice(0, 4) === "read") {
                  var c = n.TYPES[l.replace(/read|[BL]E/g, "")];
                  n.prototype[l] = function() {
                    var s = this.buffer[l](this.pos);
                    return this.pos += c, s;
                  };
                }
              };
              for (var h in i.prototype)
                o(h);
              f.exports = n;
            }
          ),
          /***/
          95291: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer;
              t(41584), t(20731), t(61726), t(46467);
              function r(v, y) {
                v.prototype = Object.create(y.prototype), v.prototype.constructor = v, n(v, y);
              }
              function n(v, y) {
                return n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(x, e) {
                  return x.__proto__ = e, x;
                }, n(v, y);
              }
              var o, h = t(9760), u = t(69591);
              try {
                o = t(54171);
              } catch (v) {
              }
              var l = /* @__PURE__ */ function(v) {
                function y(e) {
                  var b;
                  return e === void 0 && (e = 65536), b = v.apply(this, arguments) || this, b.buffer = i.alloc(e), b.bufferOffset = 0, b.pos = 0, b;
                }
                r(y, v);
                var x = y.prototype;
                return x._read = function() {
                }, x.ensure = function(b) {
                  if (this.bufferOffset + b > this.buffer.length)
                    return this.flush();
                }, x.flush = function() {
                  if (this.bufferOffset > 0)
                    return this.push(i.from(this.buffer.slice(0, this.bufferOffset))), this.bufferOffset = 0;
                }, x.writeBuffer = function(b) {
                  return this.flush(), this.push(b), this.pos += b.length;
                }, x.writeString = function(b, A) {
                  switch (A === void 0 && (A = "ascii"), A) {
                    case "utf16le":
                    case "ucs2":
                    case "utf8":
                    case "ascii":
                      return this.writeBuffer(i.from(b, A));
                    case "utf16be":
                      for (var P = i.from(b, "utf16le"), D = 0, E = P.length - 1; D < E; D += 2) {
                        var T = P[D];
                        P[D] = P[D + 1], P[D + 1] = T;
                      }
                      return this.writeBuffer(P);
                    default:
                      if (o)
                        return this.writeBuffer(o.encode(b, A));
                      throw new Error("Install iconv-lite to enable additional string encodings.");
                  }
                }, x.writeUInt24BE = function(b) {
                  return this.ensure(3), this.buffer[this.bufferOffset++] = b >>> 16 & 255, this.buffer[this.bufferOffset++] = b >>> 8 & 255, this.buffer[this.bufferOffset++] = b & 255, this.pos += 3;
                }, x.writeUInt24LE = function(b) {
                  return this.ensure(3), this.buffer[this.bufferOffset++] = b & 255, this.buffer[this.bufferOffset++] = b >>> 8 & 255, this.buffer[this.bufferOffset++] = b >>> 16 & 255, this.pos += 3;
                }, x.writeInt24BE = function(b) {
                  return b >= 0 ? this.writeUInt24BE(b) : this.writeUInt24BE(b + 16777215 + 1);
                }, x.writeInt24LE = function(b) {
                  return b >= 0 ? this.writeUInt24LE(b) : this.writeUInt24LE(b + 16777215 + 1);
                }, x.fill = function(b, A) {
                  if (A < this.buffer.length)
                    return this.ensure(A), this.buffer.fill(b, this.bufferOffset, this.bufferOffset + A), this.bufferOffset += A, this.pos += A;
                  var P = i.alloc(A);
                  return P.fill(b), this.writeBuffer(P);
                }, x.end = function() {
                  return this.flush(), this.push(null);
                }, y;
              }(h.Readable), c = function(y) {
                if (y.slice(0, 5) === "write") {
                  var x = +u.TYPES[y.replace(/write|[BL]E/g, "")];
                  l.prototype[y] = function(e) {
                    return this.ensure(x), this.buffer[y](e, this.bufferOffset), this.bufferOffset += x, this.pos += x;
                  };
                }
              };
              for (var s in i.prototype)
                c(s);
              f.exports = l;
            }
          ),
          /***/
          36316: (
            /***/
            function(f) {
              var d = /* @__PURE__ */ function() {
                function t(r, n) {
                  n === void 0 && (n = []), this.type = r, this.options = n;
                }
                var i = t.prototype;
                return i.decode = function(n) {
                  var o = this.type.decode(n);
                  return this.options[o] || o;
                }, i.size = function() {
                  return this.type.size();
                }, i.encode = function(n, o) {
                  var h = this.options.indexOf(o);
                  if (h === -1)
                    throw new Error("Unknown option in enum: " + o);
                  return this.type.encode(n, h);
                }, t;
              }();
              f.exports = d;
            }
          ),
          /***/
          11610: (
            /***/
            function(f, d, t) {
              t(14032), t(68067);
              function i(y, x) {
                y.prototype = Object.create(x.prototype), y.prototype.constructor = y, r(y, x);
              }
              function r(y, x) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, b) {
                  return e.__proto__ = b, e;
                }, r(y, x);
              }
              var n = t(68332), o = t(56128), h = o.Number, u = t(18128), l = t(7187), c = l.inspect, s = /* @__PURE__ */ function(y) {
                function x() {
                  return y.apply(this, arguments) || this;
                }
                i(x, y);
                var e = x.prototype;
                return e.decode = function(A, P) {
                  var D = A.pos, E = u.resolveLength(this.length, A, P);
                  this.length instanceof h && (P = {
                    parent: P,
                    _startOffset: D,
                    _currentOffset: 0,
                    _length: E
                  });
                  var T = new v(this.type, E, A, P);
                  return A.pos += E * this.type.size(null, P), T;
                }, e.size = function(A, P) {
                  return A instanceof v && (A = A.toArray()), y.prototype.size.call(this, A, P);
                }, e.encode = function(A, P, D) {
                  return P instanceof v && (P = P.toArray()), y.prototype.encode.call(this, A, P, D);
                }, x;
              }(n), v = /* @__PURE__ */ function() {
                function y(e, b, A, P) {
                  this.type = e, this.length = b, this.stream = A, this.ctx = P, this.base = this.stream.pos, this.items = [];
                }
                var x = y.prototype;
                return x.get = function(b) {
                  if (!(b < 0 || b >= this.length)) {
                    if (this.items[b] == null) {
                      var A = this.stream.pos;
                      this.stream.pos = this.base + this.type.size(null, this.ctx) * b, this.items[b] = this.type.decode(this.stream, this.ctx), this.stream.pos = A;
                    }
                    return this.items[b];
                  }
                }, x.toArray = function() {
                  for (var b = [], A = 0, P = this.length; A < P; A++)
                    b.push(this.get(A));
                  return b;
                }, x.inspect = function() {
                  return c(this.toArray());
                }, y;
              }();
              f.exports = s;
            }
          ),
          /***/
          56128: (
            /***/
            function(f, d, t) {
              function i(u, l) {
                u.prototype = Object.create(l.prototype), u.prototype.constructor = u, r(u, l);
              }
              function r(u, l) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(c, s) {
                  return c.__proto__ = s, c;
                }, r(u, l);
              }
              var n = t(69591), o = /* @__PURE__ */ function() {
                function u(c, s) {
                  s === void 0 && (s = "BE"), this.type = c, this.endian = s, this.fn = this.type, this.type[this.type.length - 1] !== "8" && (this.fn += this.endian);
                }
                var l = u.prototype;
                return l.size = function() {
                  return n.TYPES[this.type];
                }, l.decode = function(s) {
                  return s["read" + this.fn]();
                }, l.encode = function(s, v) {
                  return s["write" + this.fn](v);
                }, u;
              }();
              d.Number = o, d.uint8 = new o("UInt8"), d.uint16be = d.uint16 = new o("UInt16", "BE"), d.uint16le = new o("UInt16", "LE"), d.uint24be = d.uint24 = new o("UInt24", "BE"), d.uint24le = new o("UInt24", "LE"), d.uint32be = d.uint32 = new o("UInt32", "BE"), d.uint32le = new o("UInt32", "LE"), d.int8 = new o("Int8"), d.int16be = d.int16 = new o("Int16", "BE"), d.int16le = new o("Int16", "LE"), d.int24be = d.int24 = new o("Int24", "BE"), d.int24le = new o("Int24", "LE"), d.int32be = d.int32 = new o("Int32", "BE"), d.int32le = new o("Int32", "LE"), d.floatbe = d.float = new o("Float", "BE"), d.floatle = new o("Float", "LE"), d.doublebe = d.double = new o("Double", "BE"), d.doublele = new o("Double", "LE");
              var h = /* @__PURE__ */ function(u) {
                function l(s, v, y) {
                  var x;
                  return y === void 0 && (y = s >> 1), x = u.call(this, "Int" + s, v) || this, x._point = 1 << y, x;
                }
                i(l, u);
                var c = l.prototype;
                return c.decode = function(v) {
                  return u.prototype.decode.call(this, v) / this._point;
                }, c.encode = function(v, y) {
                  return u.prototype.encode.call(this, v, y * this._point | 0);
                }, l;
              }(o);
              d.Fixed = h, d.fixed16be = d.fixed16 = new h(16, "BE"), d.fixed16le = new h(16, "LE"), d.fixed32be = d.fixed32 = new h(32, "BE"), d.fixed32le = new h(32, "LE");
            }
          ),
          /***/
          64241: (
            /***/
            function(f) {
              var d = /* @__PURE__ */ function() {
                function t(r, n) {
                  n === void 0 && (n = !0), this.type = r, this.condition = n;
                }
                var i = t.prototype;
                return i.decode = function(n, o) {
                  var h = this.condition;
                  if (typeof h == "function" && (h = h.call(o, o)), h)
                    return this.type.decode(n, o);
                }, i.size = function(n, o) {
                  var h = this.condition;
                  return typeof h == "function" && (h = h.call(o, o)), h ? this.type.size(n, o) : 0;
                }, i.encode = function(n, o, h) {
                  var u = this.condition;
                  if (typeof u == "function" && (u = u.call(h, h)), u)
                    return this.type.encode(n, o, h);
                }, t;
              }();
              f.exports = d;
            }
          ),
          /***/
          9324: (
            /***/
            function(f, d, t) {
              var i = t(18128), r = /* @__PURE__ */ function() {
                function o(u, l, c) {
                  if (c === void 0 && (c = {}), this.offsetType = u, this.type = l, this.options = c, this.type === "void" && (this.type = null), this.options.type == null && (this.options.type = "local"), this.options.allowNull == null && (this.options.allowNull = !0), this.options.nullValue == null && (this.options.nullValue = 0), this.options.lazy == null && (this.options.lazy = !1), this.options.relativeTo) {
                    if (typeof this.options.relativeTo != "function")
                      throw new Error("relativeTo option must be a function");
                    this.relativeToGetter = c.relativeTo;
                  }
                }
                var h = o.prototype;
                return h.decode = function(l, c) {
                  var s = this, v = this.offsetType.decode(l, c);
                  if (v === this.options.nullValue && this.options.allowNull)
                    return null;
                  var y;
                  switch (this.options.type) {
                    case "local":
                      y = c._startOffset;
                      break;
                    case "immediate":
                      y = l.pos - this.offsetType.size();
                      break;
                    case "parent":
                      y = c.parent._startOffset;
                      break;
                    default:
                      for (var x = c; x.parent; )
                        x = x.parent;
                      y = x._startOffset || 0;
                  }
                  this.options.relativeTo && (y += this.relativeToGetter(c));
                  var e = v + y;
                  if (this.type != null) {
                    var b = null, A = function() {
                      if (b != null)
                        return b;
                      var D = l.pos;
                      return l.pos = e, b = s.type.decode(l, c), l.pos = D, b;
                    };
                    return this.options.lazy ? new i.PropertyDescriptor({
                      get: A
                    }) : A();
                  } else
                    return e;
                }, h.size = function(l, c) {
                  var s = c;
                  switch (this.options.type) {
                    case "local":
                    case "immediate":
                      break;
                    case "parent":
                      c = c.parent;
                      break;
                    default:
                      for (; c.parent; )
                        c = c.parent;
                  }
                  var v = this.type;
                  if (v == null) {
                    if (!(l instanceof n))
                      throw new Error("Must be a VoidPointer");
                    var y = l;
                    v = y.type, l = l.value;
                  }
                  return l && c && (c.pointerSize += v.size(l, s)), this.offsetType.size();
                }, h.encode = function(l, c, s) {
                  var v, y = s;
                  if (c == null) {
                    this.offsetType.encode(l, this.options.nullValue);
                    return;
                  }
                  switch (this.options.type) {
                    case "local":
                      v = s.startOffset;
                      break;
                    case "immediate":
                      v = l.pos + this.offsetType.size(c, y);
                      break;
                    case "parent":
                      s = s.parent, v = s.startOffset;
                      break;
                    default:
                      for (v = 0; s.parent; )
                        s = s.parent;
                  }
                  this.options.relativeTo && (v += this.relativeToGetter(y.val)), this.offsetType.encode(l, s.pointerOffset - v);
                  var x = this.type;
                  if (x == null) {
                    if (!(c instanceof n))
                      throw new Error("Must be a VoidPointer");
                    var e = c;
                    x = e.type, c = c.value;
                  }
                  return s.pointers.push({
                    type: x,
                    val: c,
                    parent: y
                  }), s.pointerOffset += x.size(c, y);
                }, o;
              }(), n = function(h, u) {
                this.type = h, this.value = u;
              };
              d.Pointer = r, d.VoidPointer = n;
            }
          ),
          /***/
          13549: (
            /***/
            function(f, d, t) {
              t(41584);
              var i = t(18128), r = /* @__PURE__ */ function() {
                function n(h, u) {
                  u === void 0 && (u = 1), this.type = h, this.count = u;
                }
                var o = n.prototype;
                return o.decode = function(u, l) {
                  u.pos += this.size(null, l);
                }, o.size = function(u, l) {
                  var c = i.resolveLength(this.count, null, l);
                  return this.type.size() * c;
                }, o.encode = function(u, l, c) {
                  return u.fill(0, this.size(l, c));
                }, n;
              }();
              f.exports = r;
            }
          ),
          /***/
          52676: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer, r = t(56128), n = r.Number, o = t(18128), h = /* @__PURE__ */ function() {
                function u(c, s) {
                  s === void 0 && (s = "ascii"), this.length = c, this.encoding = s;
                }
                var l = u.prototype;
                return l.decode = function(s, v) {
                  var y, x;
                  if (this.length != null)
                    y = o.resolveLength(this.length, s, v);
                  else {
                    var e;
                    for (e = s.buffer, y = s.length, x = s.pos; x < y && e[x] !== 0; )
                      ++x;
                    y = x - s.pos;
                  }
                  var b = this.encoding;
                  typeof b == "function" && (b = b.call(v, v) || "ascii");
                  var A = s.readString(y, b);
                  return this.length == null && s.pos < s.length && s.pos++, A;
                }, l.size = function(s, v) {
                  if (!s)
                    return o.resolveLength(this.length, null, v);
                  var y = this.encoding;
                  typeof y == "function" && (y = y.call(v != null ? v.val : void 0, v != null ? v.val : void 0) || "ascii"), y === "utf16be" && (y = "utf16le");
                  var x = i.byteLength(s, y);
                  return this.length instanceof n && (x += this.length.size()), this.length == null && x++, x;
                }, l.encode = function(s, v, y) {
                  var x = this.encoding;
                  if (typeof x == "function" && (x = x.call(y != null ? y.val : void 0, y != null ? y.val : void 0) || "ascii"), this.length instanceof n && this.length.encode(s, i.byteLength(v, x)), s.writeString(v, x), this.length == null)
                    return s.writeUInt8(0);
                }, u;
              }();
              f.exports = h;
            }
          ),
          /***/
          88152: (
            /***/
            function(f, d, t) {
              var i = t(18128), r = /* @__PURE__ */ function() {
                function n(h) {
                  h === void 0 && (h = {}), this.fields = h;
                }
                var o = n.prototype;
                return o.decode = function(u, l, c) {
                  c === void 0 && (c = 0);
                  var s = this._setup(u, l, c);
                  return this._parseFields(u, s, this.fields), this.process != null && this.process.call(s, u), s;
                }, o._setup = function(u, l, c) {
                  var s = {};
                  return Object.defineProperties(s, {
                    parent: {
                      value: l
                    },
                    _startOffset: {
                      value: u.pos
                    },
                    _currentOffset: {
                      value: 0,
                      writable: !0
                    },
                    _length: {
                      value: c
                    }
                  }), s;
                }, o._parseFields = function(u, l, c) {
                  for (var s in c) {
                    var v, y = c[s];
                    typeof y == "function" ? v = y.call(l, l) : v = y.decode(u, l), v !== void 0 && (v instanceof i.PropertyDescriptor ? Object.defineProperty(l, s, v) : l[s] = v), l._currentOffset = u.pos - l._startOffset;
                  }
                }, o.size = function(u, l, c) {
                  u == null && (u = {}), c == null && (c = !0);
                  var s = {
                    parent: l,
                    val: u,
                    pointerSize: 0
                  }, v = 0;
                  for (var y in this.fields) {
                    var x = this.fields[y];
                    x.size != null && (v += x.size(u[y], s));
                  }
                  return c && (v += s.pointerSize), v;
                }, o.encode = function(u, l, c) {
                  var s;
                  this.preEncode != null && this.preEncode.call(l, u);
                  var v = {
                    pointers: [],
                    startOffset: u.pos,
                    parent: c,
                    val: l,
                    pointerSize: 0
                  };
                  v.pointerOffset = u.pos + this.size(l, v, !1);
                  for (var y in this.fields)
                    s = this.fields[y], s.encode != null && s.encode(u, l[y], v);
                  for (var x = 0; x < v.pointers.length; ) {
                    var e = v.pointers[x++];
                    e.type.encode(u, e.val, e.parent);
                  }
                }, n;
              }();
              f.exports = r;
            }
          ),
          /***/
          99757: (
            /***/
            function(f, d, t) {
              t(14032);
              function i(u, l) {
                u.prototype = Object.create(l.prototype), u.prototype.constructor = u, r(u, l);
              }
              function r(u, l) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(c, s) {
                  return c.__proto__ = s, c;
                }, r(u, l);
              }
              var n = t(88152), o = function(l, c) {
                return c.reduce(function(s, v) {
                  return s && s[v];
                }, l);
              }, h = /* @__PURE__ */ function(u) {
                function l(s, v) {
                  var y;
                  return v === void 0 && (v = {}), y = u.call(this) || this, y.type = s, y.versions = v, typeof s == "string" && (y.versionPath = s.split(".")), y;
                }
                i(l, u);
                var c = l.prototype;
                return c.decode = function(v, y, x) {
                  x === void 0 && (x = 0);
                  var e = this._setup(v, y, x);
                  typeof this.type == "string" ? e.version = o(y, this.versionPath) : e.version = this.type.decode(v), this.versions.header && this._parseFields(v, e, this.versions.header);
                  var b = this.versions[e.version];
                  if (b == null)
                    throw new Error("Unknown version " + e.version);
                  return b instanceof l ? b.decode(v, y) : (this._parseFields(v, e, b), this.process != null && this.process.call(e, v), e);
                }, c.size = function(v, y, x) {
                  x === void 0 && (x = !0);
                  var e, b;
                  if (!v)
                    throw new Error("Not a fixed size");
                  var A = {
                    parent: y,
                    val: v,
                    pointerSize: 0
                  }, P = 0;
                  if (typeof this.type != "string" && (P += this.type.size(v.version, A)), this.versions.header)
                    for (e in this.versions.header)
                      b = this.versions.header[e], b.size != null && (P += b.size(v[e], A));
                  var D = this.versions[v.version];
                  if (D == null)
                    throw new Error("Unknown version " + v.version);
                  for (e in D)
                    b = D[e], b.size != null && (P += b.size(v[e], A));
                  return x && (P += A.pointerSize), P;
                }, c.encode = function(v, y, x) {
                  var e, b;
                  this.preEncode != null && this.preEncode.call(y, v);
                  var A = {
                    pointers: [],
                    startOffset: v.pos,
                    parent: x,
                    val: y,
                    pointerSize: 0
                  };
                  if (A.pointerOffset = v.pos + this.size(y, A, !1), typeof this.type != "string" && this.type.encode(v, y.version), this.versions.header)
                    for (e in this.versions.header)
                      b = this.versions.header[e], b.encode != null && b.encode(v, y[e], A);
                  var P = this.versions[y.version];
                  for (e in P)
                    b = P[e], b.encode != null && b.encode(v, y[e], A);
                  for (var D = 0; D < A.pointers.length; ) {
                    var E = A.pointers[D++];
                    E.type.encode(v, E.val, E.parent);
                  }
                }, l;
              }(n);
              f.exports = h;
            }
          ),
          /***/
          18128: (
            /***/
            function(f, d, t) {
              var i = t(56128), r = i.Number;
              d.resolveLength = function(o, h, u) {
                var l;
                if (typeof o == "number" ? l = o : typeof o == "function" ? l = o.call(u, u) : u && typeof o == "string" ? l = u[o] : h && o instanceof r && (l = o.decode(h)), isNaN(l))
                  throw new Error("Not a fixed size");
                return l;
              };
              var n = function(h) {
                h === void 0 && (h = {}), this.enumerable = !0, this.configurable = !0;
                for (var u in h) {
                  var l = h[u];
                  this[u] = l;
                }
              };
              d.PropertyDescriptor = n;
            }
          ),
          /***/
          14598: (
            /***/
            function(f, d, t) {
              /*!
               * The buffer module from node.js, for the browser.
               *
               * @author   Feross Aboukhadijeh <https://feross.org>
               * @license  MIT
               */
              t(65292), t(73844), t(5597), t(39081), t(68626), t(41584), t(58028), t(81755), t(20731), t(8953), t(7585), t(24863), t(7283), t(2876), t(14032), t(61726), t(57114), t(47458), t(46467), t(72095), t(56912), t(73663), t(29883), t(35471), t(21012), t(88997), t(97464), t(2857), t(94715), t(13624), t(91132), t(62514), t(24597), t(88042), t(4660), t(92451), t(44206), t(66288), t(13250), t(3858), t(84538), t(64793), t(74202), t(52529);
              function i(vt, W) {
                for (var Q = 0; Q < W.length; Q++) {
                  var gt = W[Q];
                  gt.enumerable = gt.enumerable || !1, gt.configurable = !0, "value" in gt && (gt.writable = !0), Object.defineProperty(vt, n(gt.key), gt);
                }
              }
              function r(vt, W, Q) {
                return W && i(vt.prototype, W), Q && i(vt, Q), Object.defineProperty(vt, "prototype", { writable: !1 }), vt;
              }
              function n(vt) {
                var W = o(vt, "string");
                return typeof W == "symbol" ? W : W + "";
              }
              function o(vt, W) {
                if (typeof vt != "object" || !vt)
                  return vt;
                var Q = vt[Symbol.toPrimitive];
                if (Q !== void 0) {
                  var gt = Q.call(vt, W || "default");
                  if (typeof gt != "object")
                    return gt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (W === "string" ? String : Number)(vt);
              }
              function h(vt, W) {
                vt.prototype = Object.create(W.prototype), vt.prototype.constructor = vt, u(vt, W);
              }
              function u(vt, W) {
                return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(Q, gt) {
                  return Q.__proto__ = gt, Q;
                }, u(vt, W);
              }
              var l = t(32504), c = t(89029), s = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
              d.Buffer = e, d.SlowBuffer = O, d.INSPECT_MAX_BYTES = 50;
              var v = 2147483647;
              d.kMaxLength = v, e.TYPED_ARRAY_SUPPORT = y(), !e.TYPED_ARRAY_SUPPORT && typeof console != "undefined" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
              function y() {
                try {
                  var vt = new Uint8Array(1), W = {
                    foo: function() {
                      return 42;
                    }
                  };
                  return Object.setPrototypeOf(W, Uint8Array.prototype), Object.setPrototypeOf(vt, W), vt.foo() === 42;
                } catch (Q) {
                  return !1;
                }
              }
              Object.defineProperty(e.prototype, "parent", {
                enumerable: !0,
                get: function() {
                  if (e.isBuffer(this))
                    return this.buffer;
                }
              }), Object.defineProperty(e.prototype, "offset", {
                enumerable: !0,
                get: function() {
                  if (e.isBuffer(this))
                    return this.byteOffset;
                }
              });
              function x(vt) {
                if (vt > v)
                  throw new RangeError('The value "' + vt + '" is invalid for option "size"');
                var W = new Uint8Array(vt);
                return Object.setPrototypeOf(W, e.prototype), W;
              }
              function e(vt, W, Q) {
                if (typeof vt == "number") {
                  if (typeof W == "string")
                    throw new TypeError('The "string" argument must be of type string. Received type number');
                  return D(vt);
                }
                return b(vt, W, Q);
              }
              e.poolSize = 8192;
              function b(vt, W, Q) {
                if (typeof vt == "string")
                  return E(vt, W);
                if (ArrayBuffer.isView(vt))
                  return C(vt);
                if (vt == null)
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof vt);
                if (he(vt, ArrayBuffer) || vt && he(vt.buffer, ArrayBuffer) || typeof SharedArrayBuffer != "undefined" && (he(vt, SharedArrayBuffer) || vt && he(vt.buffer, SharedArrayBuffer)))
                  return F(vt, W, Q);
                if (typeof vt == "number")
                  throw new TypeError('The "value" argument must not be of type number. Received type number');
                var gt = vt.valueOf && vt.valueOf();
                if (gt != null && gt !== vt)
                  return e.from(gt, W, Q);
                var Pt = m(vt);
                if (Pt)
                  return Pt;
                if (typeof Symbol != "undefined" && Symbol.toPrimitive != null && typeof vt[Symbol.toPrimitive] == "function")
                  return e.from(vt[Symbol.toPrimitive]("string"), W, Q);
                throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof vt);
              }
              e.from = function(vt, W, Q) {
                return b(vt, W, Q);
              }, Object.setPrototypeOf(e.prototype, Uint8Array.prototype), Object.setPrototypeOf(e, Uint8Array);
              function A(vt) {
                if (typeof vt != "number")
                  throw new TypeError('"size" argument must be of type number');
                if (vt < 0)
                  throw new RangeError('The value "' + vt + '" is invalid for option "size"');
              }
              function P(vt, W, Q) {
                return A(vt), vt <= 0 ? x(vt) : W !== void 0 ? typeof Q == "string" ? x(vt).fill(W, Q) : x(vt).fill(W) : x(vt);
              }
              e.alloc = function(vt, W, Q) {
                return P(vt, W, Q);
              };
              function D(vt) {
                return A(vt), x(vt < 0 ? 0 : I(vt) | 0);
              }
              e.allocUnsafe = function(vt) {
                return D(vt);
              }, e.allocUnsafeSlow = function(vt) {
                return D(vt);
              };
              function E(vt, W) {
                if ((typeof W != "string" || W === "") && (W = "utf8"), !e.isEncoding(W))
                  throw new TypeError("Unknown encoding: " + W);
                var Q = M(vt, W) | 0, gt = x(Q), Pt = gt.write(vt, W);
                return Pt !== Q && (gt = gt.slice(0, Pt)), gt;
              }
              function T(vt) {
                for (var W = vt.length < 0 ? 0 : I(vt.length) | 0, Q = x(W), gt = 0; gt < W; gt += 1)
                  Q[gt] = vt[gt] & 255;
                return Q;
              }
              function C(vt) {
                if (he(vt, Uint8Array)) {
                  var W = new Uint8Array(vt);
                  return F(W.buffer, W.byteOffset, W.byteLength);
                }
                return T(vt);
              }
              function F(vt, W, Q) {
                if (W < 0 || vt.byteLength < W)
                  throw new RangeError('"offset" is outside of buffer bounds');
                if (vt.byteLength < W + (Q || 0))
                  throw new RangeError('"length" is outside of buffer bounds');
                var gt;
                return W === void 0 && Q === void 0 ? gt = new Uint8Array(vt) : Q === void 0 ? gt = new Uint8Array(vt, W) : gt = new Uint8Array(vt, W, Q), Object.setPrototypeOf(gt, e.prototype), gt;
              }
              function m(vt) {
                if (e.isBuffer(vt)) {
                  var W = I(vt.length) | 0, Q = x(W);
                  return Q.length === 0 || vt.copy(Q, 0, 0, W), Q;
                }
                if (vt.length !== void 0)
                  return typeof vt.length != "number" || Ee(vt.length) ? x(0) : T(vt);
                if (vt.type === "Buffer" && Array.isArray(vt.data))
                  return T(vt.data);
              }
              function I(vt) {
                if (vt >= v)
                  throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + v.toString(16) + " bytes");
                return vt | 0;
              }
              function O(vt) {
                return +vt != vt && (vt = 0), e.alloc(+vt);
              }
              e.isBuffer = function(W) {
                return W != null && W._isBuffer === !0 && W !== e.prototype;
              }, e.compare = function(W, Q) {
                if (he(W, Uint8Array) && (W = e.from(W, W.offset, W.byteLength)), he(Q, Uint8Array) && (Q = e.from(Q, Q.offset, Q.byteLength)), !e.isBuffer(W) || !e.isBuffer(Q))
                  throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (W === Q)
                  return 0;
                for (var gt = W.length, Pt = Q.length, ht = 0, Ht = Math.min(gt, Pt); ht < Ht; ++ht)
                  if (W[ht] !== Q[ht]) {
                    gt = W[ht], Pt = Q[ht];
                    break;
                  }
                return gt < Pt ? -1 : Pt < gt ? 1 : 0;
              }, e.isEncoding = function(W) {
                switch (String(W).toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "latin1":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return !0;
                  default:
                    return !1;
                }
              }, e.concat = function(W, Q) {
                if (!Array.isArray(W))
                  throw new TypeError('"list" argument must be an Array of Buffers');
                if (W.length === 0)
                  return e.alloc(0);
                var gt;
                if (Q === void 0)
                  for (Q = 0, gt = 0; gt < W.length; ++gt)
                    Q += W[gt].length;
                var Pt = e.allocUnsafe(Q), ht = 0;
                for (gt = 0; gt < W.length; ++gt) {
                  var Ht = W[gt];
                  if (he(Ht, Uint8Array))
                    ht + Ht.length > Pt.length ? (e.isBuffer(Ht) || (Ht = e.from(Ht)), Ht.copy(Pt, ht)) : Uint8Array.prototype.set.call(Pt, Ht, ht);
                  else if (e.isBuffer(Ht))
                    Ht.copy(Pt, ht);
                  else
                    throw new TypeError('"list" argument must be an Array of Buffers');
                  ht += Ht.length;
                }
                return Pt;
              };
              function M(vt, W) {
                if (e.isBuffer(vt))
                  return vt.length;
                if (ArrayBuffer.isView(vt) || he(vt, ArrayBuffer))
                  return vt.byteLength;
                if (typeof vt != "string")
                  throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof vt);
                var Q = vt.length, gt = arguments.length > 2 && arguments[2] === !0;
                if (!gt && Q === 0)
                  return 0;
                for (var Pt = !1; ; )
                  switch (W) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return Q;
                    case "utf8":
                    case "utf-8":
                      return le(vt).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Q * 2;
                    case "hex":
                      return Q >>> 1;
                    case "base64":
                      return $t(vt).length;
                    default:
                      if (Pt)
                        return gt ? -1 : le(vt).length;
                      W = ("" + W).toLowerCase(), Pt = !0;
                  }
              }
              e.byteLength = M;
              function N(vt, W, Q) {
                var gt = !1;
                if ((W === void 0 || W < 0) && (W = 0), W > this.length || ((Q === void 0 || Q > this.length) && (Q = this.length), Q <= 0) || (Q >>>= 0, W >>>= 0, Q <= W))
                  return "";
                for (vt || (vt = "utf8"); ; )
                  switch (vt) {
                    case "hex":
                      return wt(this, W, Q);
                    case "utf8":
                    case "utf-8":
                      return jt(this, W, Q);
                    case "ascii":
                      return ut(this, W, Q);
                    case "latin1":
                    case "binary":
                      return st(this, W, Q);
                    case "base64":
                      return Lt(this, W, Q);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return V(this, W, Q);
                    default:
                      if (gt)
                        throw new TypeError("Unknown encoding: " + vt);
                      vt = (vt + "").toLowerCase(), gt = !0;
                  }
              }
              e.prototype._isBuffer = !0;
              function G(vt, W, Q) {
                var gt = vt[W];
                vt[W] = vt[Q], vt[Q] = gt;
              }
              e.prototype.swap16 = function() {
                var W = this.length;
                if (W % 2 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var Q = 0; Q < W; Q += 2)
                  G(this, Q, Q + 1);
                return this;
              }, e.prototype.swap32 = function() {
                var W = this.length;
                if (W % 4 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var Q = 0; Q < W; Q += 4)
                  G(this, Q, Q + 3), G(this, Q + 1, Q + 2);
                return this;
              }, e.prototype.swap64 = function() {
                var W = this.length;
                if (W % 8 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var Q = 0; Q < W; Q += 8)
                  G(this, Q, Q + 7), G(this, Q + 1, Q + 6), G(this, Q + 2, Q + 5), G(this, Q + 3, Q + 4);
                return this;
              }, e.prototype.toString = function() {
                var W = this.length;
                return W === 0 ? "" : arguments.length === 0 ? jt(this, 0, W) : N.apply(this, arguments);
              }, e.prototype.toLocaleString = e.prototype.toString, e.prototype.equals = function(W) {
                if (!e.isBuffer(W))
                  throw new TypeError("Argument must be a Buffer");
                return this === W ? !0 : e.compare(this, W) === 0;
              }, e.prototype.inspect = function() {
                var W = "", Q = d.INSPECT_MAX_BYTES;
                return W = this.toString("hex", 0, Q).replace(/(.{2})/g, "$1 ").trim(), this.length > Q && (W += " ... "), "<Buffer " + W + ">";
              }, s && (e.prototype[s] = e.prototype.inspect), e.prototype.compare = function(W, Q, gt, Pt, ht) {
                if (he(W, Uint8Array) && (W = e.from(W, W.offset, W.byteLength)), !e.isBuffer(W))
                  throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof W);
                if (Q === void 0 && (Q = 0), gt === void 0 && (gt = W ? W.length : 0), Pt === void 0 && (Pt = 0), ht === void 0 && (ht = this.length), Q < 0 || gt > W.length || Pt < 0 || ht > this.length)
                  throw new RangeError("out of range index");
                if (Pt >= ht && Q >= gt)
                  return 0;
                if (Pt >= ht)
                  return -1;
                if (Q >= gt)
                  return 1;
                if (Q >>>= 0, gt >>>= 0, Pt >>>= 0, ht >>>= 0, this === W)
                  return 0;
                for (var Ht = ht - Pt, we = gt - Q, rt = Math.min(Ht, we), _t = this.slice(Pt, ht), ae = W.slice(Q, gt), Et = 0; Et < rt; ++Et)
                  if (_t[Et] !== ae[Et]) {
                    Ht = _t[Et], we = ae[Et];
                    break;
                  }
                return Ht < we ? -1 : we < Ht ? 1 : 0;
              };
              function ot(vt, W, Q, gt, Pt) {
                if (vt.length === 0)
                  return -1;
                if (typeof Q == "string" ? (gt = Q, Q = 0) : Q > 2147483647 ? Q = 2147483647 : Q < -2147483648 && (Q = -2147483648), Q = +Q, Ee(Q) && (Q = Pt ? 0 : vt.length - 1), Q < 0 && (Q = vt.length + Q), Q >= vt.length) {
                  if (Pt)
                    return -1;
                  Q = vt.length - 1;
                } else if (Q < 0)
                  if (Pt)
                    Q = 0;
                  else
                    return -1;
                if (typeof W == "string" && (W = e.from(W, gt)), e.isBuffer(W))
                  return W.length === 0 ? -1 : K(vt, W, Q, gt, Pt);
                if (typeof W == "number")
                  return W = W & 255, typeof Uint8Array.prototype.indexOf == "function" ? Pt ? Uint8Array.prototype.indexOf.call(vt, W, Q) : Uint8Array.prototype.lastIndexOf.call(vt, W, Q) : K(vt, [W], Q, gt, Pt);
                throw new TypeError("val must be string, number or Buffer");
              }
              function K(vt, W, Q, gt, Pt) {
                var ht = 1, Ht = vt.length, we = W.length;
                if (gt !== void 0 && (gt = String(gt).toLowerCase(), gt === "ucs2" || gt === "ucs-2" || gt === "utf16le" || gt === "utf-16le")) {
                  if (vt.length < 2 || W.length < 2)
                    return -1;
                  ht = 2, Ht /= 2, we /= 2, Q /= 2;
                }
                function rt(fe, Ue) {
                  return ht === 1 ? fe[Ue] : fe.readUInt16BE(Ue * ht);
                }
                var _t;
                if (Pt) {
                  var ae = -1;
                  for (_t = Q; _t < Ht; _t++)
                    if (rt(vt, _t) === rt(W, ae === -1 ? 0 : _t - ae)) {
                      if (ae === -1 && (ae = _t), _t - ae + 1 === we)
                        return ae * ht;
                    } else
                      ae !== -1 && (_t -= _t - ae), ae = -1;
                } else
                  for (Q + we > Ht && (Q = Ht - we), _t = Q; _t >= 0; _t--) {
                    for (var Et = !0, Zt = 0; Zt < we; Zt++)
                      if (rt(vt, _t + Zt) !== rt(W, Zt)) {
                        Et = !1;
                        break;
                      }
                    if (Et)
                      return _t;
                  }
                return -1;
              }
              e.prototype.includes = function(W, Q, gt) {
                return this.indexOf(W, Q, gt) !== -1;
              }, e.prototype.indexOf = function(W, Q, gt) {
                return ot(this, W, Q, gt, !0);
              }, e.prototype.lastIndexOf = function(W, Q, gt) {
                return ot(this, W, Q, gt, !1);
              };
              function nt(vt, W, Q, gt) {
                Q = Number(Q) || 0;
                var Pt = vt.length - Q;
                gt ? (gt = Number(gt), gt > Pt && (gt = Pt)) : gt = Pt;
                var ht = W.length;
                gt > ht / 2 && (gt = ht / 2);
                var Ht;
                for (Ht = 0; Ht < gt; ++Ht) {
                  var we = parseInt(W.substr(Ht * 2, 2), 16);
                  if (Ee(we))
                    return Ht;
                  vt[Q + Ht] = we;
                }
                return Ht;
              }
              function xt(vt, W, Q, gt) {
                return ue(le(W, vt.length - Q), vt, Q, gt);
              }
              function bt(vt, W, Q, gt) {
                return ue(Se(W), vt, Q, gt);
              }
              function St(vt, W, Q, gt) {
                return ue($t(W), vt, Q, gt);
              }
              function Dt(vt, W, Q, gt) {
                return ue(Wt(W, vt.length - Q), vt, Q, gt);
              }
              e.prototype.write = function(W, Q, gt, Pt) {
                if (Q === void 0)
                  Pt = "utf8", gt = this.length, Q = 0;
                else if (gt === void 0 && typeof Q == "string")
                  Pt = Q, gt = this.length, Q = 0;
                else if (isFinite(Q))
                  Q = Q >>> 0, isFinite(gt) ? (gt = gt >>> 0, Pt === void 0 && (Pt = "utf8")) : (Pt = gt, gt = void 0);
                else
                  throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                var ht = this.length - Q;
                if ((gt === void 0 || gt > ht) && (gt = ht), W.length > 0 && (gt < 0 || Q < 0) || Q > this.length)
                  throw new RangeError("Attempt to write outside buffer bounds");
                Pt || (Pt = "utf8");
                for (var Ht = !1; ; )
                  switch (Pt) {
                    case "hex":
                      return nt(this, W, Q, gt);
                    case "utf8":
                    case "utf-8":
                      return xt(this, W, Q, gt);
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return bt(this, W, Q, gt);
                    case "base64":
                      return St(this, W, Q, gt);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Dt(this, W, Q, gt);
                    default:
                      if (Ht)
                        throw new TypeError("Unknown encoding: " + Pt);
                      Pt = ("" + Pt).toLowerCase(), Ht = !0;
                  }
              }, e.prototype.toJSON = function() {
                return {
                  type: "Buffer",
                  data: Array.prototype.slice.call(this._arr || this, 0)
                };
              };
              function Lt(vt, W, Q) {
                return W === 0 && Q === vt.length ? l.fromByteArray(vt) : l.fromByteArray(vt.slice(W, Q));
              }
              function jt(vt, W, Q) {
                Q = Math.min(vt.length, Q);
                for (var gt = [], Pt = W; Pt < Q; ) {
                  var ht = vt[Pt], Ht = null, we = ht > 239 ? 4 : ht > 223 ? 3 : ht > 191 ? 2 : 1;
                  if (Pt + we <= Q) {
                    var rt = void 0, _t = void 0, ae = void 0, Et = void 0;
                    switch (we) {
                      case 1:
                        ht < 128 && (Ht = ht);
                        break;
                      case 2:
                        rt = vt[Pt + 1], (rt & 192) === 128 && (Et = (ht & 31) << 6 | rt & 63, Et > 127 && (Ht = Et));
                        break;
                      case 3:
                        rt = vt[Pt + 1], _t = vt[Pt + 2], (rt & 192) === 128 && (_t & 192) === 128 && (Et = (ht & 15) << 12 | (rt & 63) << 6 | _t & 63, Et > 2047 && (Et < 55296 || Et > 57343) && (Ht = Et));
                        break;
                      case 4:
                        rt = vt[Pt + 1], _t = vt[Pt + 2], ae = vt[Pt + 3], (rt & 192) === 128 && (_t & 192) === 128 && (ae & 192) === 128 && (Et = (ht & 15) << 18 | (rt & 63) << 12 | (_t & 63) << 6 | ae & 63, Et > 65535 && Et < 1114112 && (Ht = Et));
                    }
                  }
                  Ht === null ? (Ht = 65533, we = 1) : Ht > 65535 && (Ht -= 65536, gt.push(Ht >>> 10 & 1023 | 55296), Ht = 56320 | Ht & 1023), gt.push(Ht), Pt += we;
                }
                return yt(gt);
              }
              var J = 4096;
              function yt(vt) {
                var W = vt.length;
                if (W <= J)
                  return String.fromCharCode.apply(String, vt);
                for (var Q = "", gt = 0; gt < W; )
                  Q += String.fromCharCode.apply(String, vt.slice(gt, gt += J));
                return Q;
              }
              function ut(vt, W, Q) {
                var gt = "";
                Q = Math.min(vt.length, Q);
                for (var Pt = W; Pt < Q; ++Pt)
                  gt += String.fromCharCode(vt[Pt] & 127);
                return gt;
              }
              function st(vt, W, Q) {
                var gt = "";
                Q = Math.min(vt.length, Q);
                for (var Pt = W; Pt < Q; ++Pt)
                  gt += String.fromCharCode(vt[Pt]);
                return gt;
              }
              function wt(vt, W, Q) {
                var gt = vt.length;
                (!W || W < 0) && (W = 0), (!Q || Q < 0 || Q > gt) && (Q = gt);
                for (var Pt = "", ht = W; ht < Q; ++ht)
                  Pt += Re[vt[ht]];
                return Pt;
              }
              function V(vt, W, Q) {
                for (var gt = vt.slice(W, Q), Pt = "", ht = 0; ht < gt.length - 1; ht += 2)
                  Pt += String.fromCharCode(gt[ht] + gt[ht + 1] * 256);
                return Pt;
              }
              e.prototype.slice = function(W, Q) {
                var gt = this.length;
                W = ~~W, Q = Q === void 0 ? gt : ~~Q, W < 0 ? (W += gt, W < 0 && (W = 0)) : W > gt && (W = gt), Q < 0 ? (Q += gt, Q < 0 && (Q = 0)) : Q > gt && (Q = gt), Q < W && (Q = W);
                var Pt = this.subarray(W, Q);
                return Object.setPrototypeOf(Pt, e.prototype), Pt;
              };
              function Ft(vt, W, Q) {
                if (vt % 1 !== 0 || vt < 0)
                  throw new RangeError("offset is not uint");
                if (vt + W > Q)
                  throw new RangeError("Trying to access beyond buffer length");
              }
              e.prototype.readUintLE = e.prototype.readUIntLE = function(W, Q, gt) {
                W = W >>> 0, Q = Q >>> 0, gt || Ft(W, Q, this.length);
                for (var Pt = this[W], ht = 1, Ht = 0; ++Ht < Q && (ht *= 256); )
                  Pt += this[W + Ht] * ht;
                return Pt;
              }, e.prototype.readUintBE = e.prototype.readUIntBE = function(W, Q, gt) {
                W = W >>> 0, Q = Q >>> 0, gt || Ft(W, Q, this.length);
                for (var Pt = this[W + --Q], ht = 1; Q > 0 && (ht *= 256); )
                  Pt += this[W + --Q] * ht;
                return Pt;
              }, e.prototype.readUint8 = e.prototype.readUInt8 = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 1, this.length), this[W];
              }, e.prototype.readUint16LE = e.prototype.readUInt16LE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 2, this.length), this[W] | this[W + 1] << 8;
              }, e.prototype.readUint16BE = e.prototype.readUInt16BE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 2, this.length), this[W] << 8 | this[W + 1];
              }, e.prototype.readUint32LE = e.prototype.readUInt32LE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 4, this.length), (this[W] | this[W + 1] << 8 | this[W + 2] << 16) + this[W + 3] * 16777216;
              }, e.prototype.readUint32BE = e.prototype.readUInt32BE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 4, this.length), this[W] * 16777216 + (this[W + 1] << 16 | this[W + 2] << 8 | this[W + 3]);
              }, e.prototype.readBigUInt64LE = Ie(function(W) {
                W = W >>> 0, It(W, "offset");
                var Q = this[W], gt = this[W + 7];
                (Q === void 0 || gt === void 0) && re(W, this.length - 8);
                var Pt = Q + this[++W] * Math.pow(2, 8) + this[++W] * Math.pow(2, 16) + this[++W] * Math.pow(2, 24), ht = this[++W] + this[++W] * Math.pow(2, 8) + this[++W] * Math.pow(2, 16) + gt * Math.pow(2, 24);
                return BigInt(Pt) + (BigInt(ht) << BigInt(32));
              }), e.prototype.readBigUInt64BE = Ie(function(W) {
                W = W >>> 0, It(W, "offset");
                var Q = this[W], gt = this[W + 7];
                (Q === void 0 || gt === void 0) && re(W, this.length - 8);
                var Pt = Q * Math.pow(2, 24) + this[++W] * Math.pow(2, 16) + this[++W] * Math.pow(2, 8) + this[++W], ht = this[++W] * Math.pow(2, 24) + this[++W] * Math.pow(2, 16) + this[++W] * Math.pow(2, 8) + gt;
                return (BigInt(Pt) << BigInt(32)) + BigInt(ht);
              }), e.prototype.readIntLE = function(W, Q, gt) {
                W = W >>> 0, Q = Q >>> 0, gt || Ft(W, Q, this.length);
                for (var Pt = this[W], ht = 1, Ht = 0; ++Ht < Q && (ht *= 256); )
                  Pt += this[W + Ht] * ht;
                return ht *= 128, Pt >= ht && (Pt -= Math.pow(2, 8 * Q)), Pt;
              }, e.prototype.readIntBE = function(W, Q, gt) {
                W = W >>> 0, Q = Q >>> 0, gt || Ft(W, Q, this.length);
                for (var Pt = Q, ht = 1, Ht = this[W + --Pt]; Pt > 0 && (ht *= 256); )
                  Ht += this[W + --Pt] * ht;
                return ht *= 128, Ht >= ht && (Ht -= Math.pow(2, 8 * Q)), Ht;
              }, e.prototype.readInt8 = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 1, this.length), this[W] & 128 ? (255 - this[W] + 1) * -1 : this[W];
              }, e.prototype.readInt16LE = function(W, Q) {
                W = W >>> 0, Q || Ft(W, 2, this.length);
                var gt = this[W] | this[W + 1] << 8;
                return gt & 32768 ? gt | 4294901760 : gt;
              }, e.prototype.readInt16BE = function(W, Q) {
                W = W >>> 0, Q || Ft(W, 2, this.length);
                var gt = this[W + 1] | this[W] << 8;
                return gt & 32768 ? gt | 4294901760 : gt;
              }, e.prototype.readInt32LE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 4, this.length), this[W] | this[W + 1] << 8 | this[W + 2] << 16 | this[W + 3] << 24;
              }, e.prototype.readInt32BE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 4, this.length), this[W] << 24 | this[W + 1] << 16 | this[W + 2] << 8 | this[W + 3];
              }, e.prototype.readBigInt64LE = Ie(function(W) {
                W = W >>> 0, It(W, "offset");
                var Q = this[W], gt = this[W + 7];
                (Q === void 0 || gt === void 0) && re(W, this.length - 8);
                var Pt = this[W + 4] + this[W + 5] * Math.pow(2, 8) + this[W + 6] * Math.pow(2, 16) + (gt << 24);
                return (BigInt(Pt) << BigInt(32)) + BigInt(Q + this[++W] * Math.pow(2, 8) + this[++W] * Math.pow(2, 16) + this[++W] * Math.pow(2, 24));
              }), e.prototype.readBigInt64BE = Ie(function(W) {
                W = W >>> 0, It(W, "offset");
                var Q = this[W], gt = this[W + 7];
                (Q === void 0 || gt === void 0) && re(W, this.length - 8);
                var Pt = (Q << 24) + // Overflow
                this[++W] * Math.pow(2, 16) + this[++W] * Math.pow(2, 8) + this[++W];
                return (BigInt(Pt) << BigInt(32)) + BigInt(this[++W] * Math.pow(2, 24) + this[++W] * Math.pow(2, 16) + this[++W] * Math.pow(2, 8) + gt);
              }), e.prototype.readFloatLE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 4, this.length), c.read(this, W, !0, 23, 4);
              }, e.prototype.readFloatBE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 4, this.length), c.read(this, W, !1, 23, 4);
              }, e.prototype.readDoubleLE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 8, this.length), c.read(this, W, !0, 52, 8);
              }, e.prototype.readDoubleBE = function(W, Q) {
                return W = W >>> 0, Q || Ft(W, 8, this.length), c.read(this, W, !1, 52, 8);
              };
              function U(vt, W, Q, gt, Pt, ht) {
                if (!e.isBuffer(vt))
                  throw new TypeError('"buffer" argument must be a Buffer instance');
                if (W > Pt || W < ht)
                  throw new RangeError('"value" argument is out of bounds');
                if (Q + gt > vt.length)
                  throw new RangeError("Index out of range");
              }
              e.prototype.writeUintLE = e.prototype.writeUIntLE = function(W, Q, gt, Pt) {
                if (W = +W, Q = Q >>> 0, gt = gt >>> 0, !Pt) {
                  var ht = Math.pow(2, 8 * gt) - 1;
                  U(this, W, Q, gt, ht, 0);
                }
                var Ht = 1, we = 0;
                for (this[Q] = W & 255; ++we < gt && (Ht *= 256); )
                  this[Q + we] = W / Ht & 255;
                return Q + gt;
              }, e.prototype.writeUintBE = e.prototype.writeUIntBE = function(W, Q, gt, Pt) {
                if (W = +W, Q = Q >>> 0, gt = gt >>> 0, !Pt) {
                  var ht = Math.pow(2, 8 * gt) - 1;
                  U(this, W, Q, gt, ht, 0);
                }
                var Ht = gt - 1, we = 1;
                for (this[Q + Ht] = W & 255; --Ht >= 0 && (we *= 256); )
                  this[Q + Ht] = W / we & 255;
                return Q + gt;
              }, e.prototype.writeUint8 = e.prototype.writeUInt8 = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 1, 255, 0), this[Q] = W & 255, Q + 1;
              }, e.prototype.writeUint16LE = e.prototype.writeUInt16LE = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 2, 65535, 0), this[Q] = W & 255, this[Q + 1] = W >>> 8, Q + 2;
              }, e.prototype.writeUint16BE = e.prototype.writeUInt16BE = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 2, 65535, 0), this[Q] = W >>> 8, this[Q + 1] = W & 255, Q + 2;
              }, e.prototype.writeUint32LE = e.prototype.writeUInt32LE = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 4, 4294967295, 0), this[Q + 3] = W >>> 24, this[Q + 2] = W >>> 16, this[Q + 1] = W >>> 8, this[Q] = W & 255, Q + 4;
              }, e.prototype.writeUint32BE = e.prototype.writeUInt32BE = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 4, 4294967295, 0), this[Q] = W >>> 24, this[Q + 1] = W >>> 16, this[Q + 2] = W >>> 8, this[Q + 3] = W & 255, Q + 4;
              };
              function S(vt, W, Q, gt, Pt) {
                Gt(W, gt, Pt, vt, Q, 7);
                var ht = Number(W & BigInt(4294967295));
                vt[Q++] = ht, ht = ht >> 8, vt[Q++] = ht, ht = ht >> 8, vt[Q++] = ht, ht = ht >> 8, vt[Q++] = ht;
                var Ht = Number(W >> BigInt(32) & BigInt(4294967295));
                return vt[Q++] = Ht, Ht = Ht >> 8, vt[Q++] = Ht, Ht = Ht >> 8, vt[Q++] = Ht, Ht = Ht >> 8, vt[Q++] = Ht, Q;
              }
              function k(vt, W, Q, gt, Pt) {
                Gt(W, gt, Pt, vt, Q, 7);
                var ht = Number(W & BigInt(4294967295));
                vt[Q + 7] = ht, ht = ht >> 8, vt[Q + 6] = ht, ht = ht >> 8, vt[Q + 5] = ht, ht = ht >> 8, vt[Q + 4] = ht;
                var Ht = Number(W >> BigInt(32) & BigInt(4294967295));
                return vt[Q + 3] = Ht, Ht = Ht >> 8, vt[Q + 2] = Ht, Ht = Ht >> 8, vt[Q + 1] = Ht, Ht = Ht >> 8, vt[Q] = Ht, Q + 8;
              }
              e.prototype.writeBigUInt64LE = Ie(function(W, Q) {
                return Q === void 0 && (Q = 0), S(this, W, Q, BigInt(0), BigInt("0xffffffffffffffff"));
              }), e.prototype.writeBigUInt64BE = Ie(function(W, Q) {
                return Q === void 0 && (Q = 0), k(this, W, Q, BigInt(0), BigInt("0xffffffffffffffff"));
              }), e.prototype.writeIntLE = function(W, Q, gt, Pt) {
                if (W = +W, Q = Q >>> 0, !Pt) {
                  var ht = Math.pow(2, 8 * gt - 1);
                  U(this, W, Q, gt, ht - 1, -ht);
                }
                var Ht = 0, we = 1, rt = 0;
                for (this[Q] = W & 255; ++Ht < gt && (we *= 256); )
                  W < 0 && rt === 0 && this[Q + Ht - 1] !== 0 && (rt = 1), this[Q + Ht] = (W / we >> 0) - rt & 255;
                return Q + gt;
              }, e.prototype.writeIntBE = function(W, Q, gt, Pt) {
                if (W = +W, Q = Q >>> 0, !Pt) {
                  var ht = Math.pow(2, 8 * gt - 1);
                  U(this, W, Q, gt, ht - 1, -ht);
                }
                var Ht = gt - 1, we = 1, rt = 0;
                for (this[Q + Ht] = W & 255; --Ht >= 0 && (we *= 256); )
                  W < 0 && rt === 0 && this[Q + Ht + 1] !== 0 && (rt = 1), this[Q + Ht] = (W / we >> 0) - rt & 255;
                return Q + gt;
              }, e.prototype.writeInt8 = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 1, 127, -128), W < 0 && (W = 255 + W + 1), this[Q] = W & 255, Q + 1;
              }, e.prototype.writeInt16LE = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 2, 32767, -32768), this[Q] = W & 255, this[Q + 1] = W >>> 8, Q + 2;
              }, e.prototype.writeInt16BE = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 2, 32767, -32768), this[Q] = W >>> 8, this[Q + 1] = W & 255, Q + 2;
              }, e.prototype.writeInt32LE = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 4, 2147483647, -2147483648), this[Q] = W & 255, this[Q + 1] = W >>> 8, this[Q + 2] = W >>> 16, this[Q + 3] = W >>> 24, Q + 4;
              }, e.prototype.writeInt32BE = function(W, Q, gt) {
                return W = +W, Q = Q >>> 0, gt || U(this, W, Q, 4, 2147483647, -2147483648), W < 0 && (W = 4294967295 + W + 1), this[Q] = W >>> 24, this[Q + 1] = W >>> 16, this[Q + 2] = W >>> 8, this[Q + 3] = W & 255, Q + 4;
              }, e.prototype.writeBigInt64LE = Ie(function(W, Q) {
                return Q === void 0 && (Q = 0), S(this, W, Q, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
              }), e.prototype.writeBigInt64BE = Ie(function(W, Q) {
                return Q === void 0 && (Q = 0), k(this, W, Q, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
              });
              function H(vt, W, Q, gt, Pt, ht) {
                if (Q + gt > vt.length)
                  throw new RangeError("Index out of range");
                if (Q < 0)
                  throw new RangeError("Index out of range");
              }
              function it(vt, W, Q, gt, Pt) {
                return W = +W, Q = Q >>> 0, Pt || H(vt, W, Q, 4), c.write(vt, W, Q, gt, 23, 4), Q + 4;
              }
              e.prototype.writeFloatLE = function(W, Q, gt) {
                return it(this, W, Q, !0, gt);
              }, e.prototype.writeFloatBE = function(W, Q, gt) {
                return it(this, W, Q, !1, gt);
              };
              function et(vt, W, Q, gt, Pt) {
                return W = +W, Q = Q >>> 0, Pt || H(vt, W, Q, 8), c.write(vt, W, Q, gt, 52, 8), Q + 8;
              }
              e.prototype.writeDoubleLE = function(W, Q, gt) {
                return et(this, W, Q, !0, gt);
              }, e.prototype.writeDoubleBE = function(W, Q, gt) {
                return et(this, W, Q, !1, gt);
              }, e.prototype.copy = function(W, Q, gt, Pt) {
                if (!e.isBuffer(W))
                  throw new TypeError("argument should be a Buffer");
                if (gt || (gt = 0), !Pt && Pt !== 0 && (Pt = this.length), Q >= W.length && (Q = W.length), Q || (Q = 0), Pt > 0 && Pt < gt && (Pt = gt), Pt === gt || W.length === 0 || this.length === 0)
                  return 0;
                if (Q < 0)
                  throw new RangeError("targetStart out of bounds");
                if (gt < 0 || gt >= this.length)
                  throw new RangeError("Index out of range");
                if (Pt < 0)
                  throw new RangeError("sourceEnd out of bounds");
                Pt > this.length && (Pt = this.length), W.length - Q < Pt - gt && (Pt = W.length - Q + gt);
                var ht = Pt - gt;
                return this === W && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(Q, gt, Pt) : Uint8Array.prototype.set.call(W, this.subarray(gt, Pt), Q), ht;
              }, e.prototype.fill = function(W, Q, gt, Pt) {
                if (typeof W == "string") {
                  if (typeof Q == "string" ? (Pt = Q, Q = 0, gt = this.length) : typeof gt == "string" && (Pt = gt, gt = this.length), Pt !== void 0 && typeof Pt != "string")
                    throw new TypeError("encoding must be a string");
                  if (typeof Pt == "string" && !e.isEncoding(Pt))
                    throw new TypeError("Unknown encoding: " + Pt);
                  if (W.length === 1) {
                    var ht = W.charCodeAt(0);
                    (Pt === "utf8" && ht < 128 || Pt === "latin1") && (W = ht);
                  }
                } else
                  typeof W == "number" ? W = W & 255 : typeof W == "boolean" && (W = Number(W));
                if (Q < 0 || this.length < Q || this.length < gt)
                  throw new RangeError("Out of range index");
                if (gt <= Q)
                  return this;
                Q = Q >>> 0, gt = gt === void 0 ? this.length : gt >>> 0, W || (W = 0);
                var Ht;
                if (typeof W == "number")
                  for (Ht = Q; Ht < gt; ++Ht)
                    this[Ht] = W;
                else {
                  var we = e.isBuffer(W) ? W : e.from(W, Pt), rt = we.length;
                  if (rt === 0)
                    throw new TypeError('The value "' + W + '" is invalid for argument "value"');
                  for (Ht = 0; Ht < gt - Q; ++Ht)
                    this[Ht + Q] = we[Ht % rt];
                }
                return this;
              };
              var tt = {};
              function Ct(vt, W, Q) {
                tt[vt] = /* @__PURE__ */ function(gt) {
                  function Pt() {
                    var Ht;
                    return Ht = gt.call(this) || this, Object.defineProperty(Ht, "message", {
                      value: W.apply(Ht, arguments),
                      writable: !0,
                      configurable: !0
                    }), Ht.name = Ht.name + " [" + vt + "]", Ht.stack, delete Ht.name, Ht;
                  }
                  h(Pt, gt);
                  var ht = Pt.prototype;
                  return ht.toString = function() {
                    return this.name + " [" + vt + "]: " + this.message;
                  }, r(Pt, [{
                    key: "code",
                    get: function() {
                      return vt;
                    },
                    set: function(we) {
                      Object.defineProperty(this, "code", {
                        configurable: !0,
                        enumerable: !0,
                        value: we,
                        writable: !0
                      });
                    }
                  }]);
                }(Q);
              }
              Ct("ERR_BUFFER_OUT_OF_BOUNDS", function(vt) {
                return vt ? vt + " is outside of buffer bounds" : "Attempt to access memory outside buffer bounds";
              }, RangeError), Ct("ERR_INVALID_ARG_TYPE", function(vt, W) {
                return 'The "' + vt + '" argument must be of type number. Received type ' + typeof W;
              }, TypeError), Ct("ERR_OUT_OF_RANGE", function(vt, W, Q) {
                var gt = 'The value of "' + vt + '" is out of range.', Pt = Q;
                return Number.isInteger(Q) && Math.abs(Q) > Math.pow(2, 32) ? Pt = Rt(String(Q)) : typeof Q == "bigint" && (Pt = String(Q), (Q > Math.pow(BigInt(2), BigInt(32)) || Q < -Math.pow(BigInt(2), BigInt(32))) && (Pt = Rt(Pt)), Pt += "n"), gt += " It must be " + W + ". Received " + Pt, gt;
              }, RangeError);
              function Rt(vt) {
                for (var W = "", Q = vt.length, gt = vt[0] === "-" ? 1 : 0; Q >= gt + 4; Q -= 3)
                  W = "_" + vt.slice(Q - 3, Q) + W;
                return "" + vt.slice(0, Q) + W;
              }
              function Kt(vt, W, Q) {
                It(W, "offset"), (vt[W] === void 0 || vt[W + Q] === void 0) && re(W, vt.length - (Q + 1));
              }
              function Gt(vt, W, Q, gt, Pt, ht) {
                if (vt > Q || vt < W) {
                  var Ht = typeof W == "bigint" ? "n" : "", we;
                  throw ht > 3 ? W === 0 || W === BigInt(0) ? we = ">= 0" + Ht + " and < 2" + Ht + " ** " + (ht + 1) * 8 + Ht : we = ">= -(2" + Ht + " ** " + ((ht + 1) * 8 - 1) + Ht + ") and < 2 ** " + ("" + ((ht + 1) * 8 - 1) + Ht) : we = ">= " + W + Ht + " and <= " + Q + Ht, new tt.ERR_OUT_OF_RANGE("value", we, vt);
                }
                Kt(gt, Pt, ht);
              }
              function It(vt, W) {
                if (typeof vt != "number")
                  throw new tt.ERR_INVALID_ARG_TYPE(W, "number", vt);
              }
              function re(vt, W, Q) {
                throw Math.floor(vt) !== vt ? (It(vt, Q), new tt.ERR_OUT_OF_RANGE(Q || "offset", "an integer", vt)) : W < 0 ? new tt.ERR_BUFFER_OUT_OF_BOUNDS() : new tt.ERR_OUT_OF_RANGE(Q || "offset", ">= " + (Q ? 1 : 0) + " and <= " + W, vt);
              }
              var be = /[^+/0-9A-Za-z-_]/g;
              function me(vt) {
                if (vt = vt.split("=")[0], vt = vt.trim().replace(be, ""), vt.length < 2)
                  return "";
                for (; vt.length % 4 !== 0; )
                  vt = vt + "=";
                return vt;
              }
              function le(vt, W) {
                W = W || 1 / 0;
                for (var Q, gt = vt.length, Pt = null, ht = [], Ht = 0; Ht < gt; ++Ht) {
                  if (Q = vt.charCodeAt(Ht), Q > 55295 && Q < 57344) {
                    if (!Pt) {
                      if (Q > 56319) {
                        (W -= 3) > -1 && ht.push(239, 191, 189);
                        continue;
                      } else if (Ht + 1 === gt) {
                        (W -= 3) > -1 && ht.push(239, 191, 189);
                        continue;
                      }
                      Pt = Q;
                      continue;
                    }
                    if (Q < 56320) {
                      (W -= 3) > -1 && ht.push(239, 191, 189), Pt = Q;
                      continue;
                    }
                    Q = (Pt - 55296 << 10 | Q - 56320) + 65536;
                  } else
                    Pt && (W -= 3) > -1 && ht.push(239, 191, 189);
                  if (Pt = null, Q < 128) {
                    if ((W -= 1) < 0)
                      break;
                    ht.push(Q);
                  } else if (Q < 2048) {
                    if ((W -= 2) < 0)
                      break;
                    ht.push(Q >> 6 | 192, Q & 63 | 128);
                  } else if (Q < 65536) {
                    if ((W -= 3) < 0)
                      break;
                    ht.push(Q >> 12 | 224, Q >> 6 & 63 | 128, Q & 63 | 128);
                  } else if (Q < 1114112) {
                    if ((W -= 4) < 0)
                      break;
                    ht.push(Q >> 18 | 240, Q >> 12 & 63 | 128, Q >> 6 & 63 | 128, Q & 63 | 128);
                  } else
                    throw new Error("Invalid code point");
                }
                return ht;
              }
              function Se(vt) {
                for (var W = [], Q = 0; Q < vt.length; ++Q)
                  W.push(vt.charCodeAt(Q) & 255);
                return W;
              }
              function Wt(vt, W) {
                for (var Q, gt, Pt, ht = [], Ht = 0; Ht < vt.length && !((W -= 2) < 0); ++Ht)
                  Q = vt.charCodeAt(Ht), gt = Q >> 8, Pt = Q % 256, ht.push(Pt), ht.push(gt);
                return ht;
              }
              function $t(vt) {
                return l.toByteArray(me(vt));
              }
              function ue(vt, W, Q, gt) {
                var Pt;
                for (Pt = 0; Pt < gt && !(Pt + Q >= W.length || Pt >= vt.length); ++Pt)
                  W[Pt + Q] = vt[Pt];
                return Pt;
              }
              function he(vt, W) {
                return vt instanceof W || vt != null && vt.constructor != null && vt.constructor.name != null && vt.constructor.name === W.name;
              }
              function Ee(vt) {
                return vt !== vt;
              }
              var Re = function() {
                for (var vt = "0123456789abcdef", W = new Array(256), Q = 0; Q < 16; ++Q)
                  for (var gt = Q * 16, Pt = 0; Pt < 16; ++Pt)
                    W[gt + Pt] = vt[Q] + vt[Pt];
                return W;
              }();
              function Ie(vt) {
                return typeof BigInt == "undefined" ? Ot : vt;
              }
              function Ot() {
                throw new Error("BigInt not supported");
              }
            }
          ),
          /***/
          30450: (
            /***/
            function(f, d, t) {
              t(8953), t(14032), f.exports = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined";
            }
          ),
          /***/
          59754: (
            /***/
            function(f, d, t) {
              var i = t(30450), r = t(15567), n = t(32010), o = t(94578), h = t(24517), u = t(20340), l = t(52564), c = t(68664), s = t(48914), v = t(13711), y = t(95892).f, x = t(70176), e = t(69548), b = t(3840), A = t(38688), P = t(46859), D = n.Int8Array, E = D && D.prototype, T = n.Uint8ClampedArray, C = T && T.prototype, F = D && e(D), m = E && e(E), I = Object.prototype, O = n.TypeError, M = A("toStringTag"), N = P("TYPED_ARRAY_TAG"), G = P("TYPED_ARRAY_CONSTRUCTOR"), ot = i && !!b && l(n.opera) !== "Opera", K = !1, nt, xt, bt, St = {
                Int8Array: 1,
                Uint8Array: 1,
                Uint8ClampedArray: 1,
                Int16Array: 2,
                Uint16Array: 2,
                Int32Array: 4,
                Uint32Array: 4,
                Float32Array: 4,
                Float64Array: 8
              }, Dt = {
                BigInt64Array: 8,
                BigUint64Array: 8
              }, Lt = function(V) {
                if (!h(V))
                  return !1;
                var Ft = l(V);
                return Ft === "DataView" || u(St, Ft) || u(Dt, Ft);
              }, jt = function(V) {
                if (!h(V))
                  return !1;
                var Ft = l(V);
                return u(St, Ft) || u(Dt, Ft);
              }, J = function(V) {
                if (jt(V))
                  return V;
                throw O("Target is not a typed array");
              }, yt = function(V) {
                if (o(V) && (!b || x(F, V)))
                  return V;
                throw O(c(V) + " is not a typed array constructor");
              }, ut = function(V, Ft, U) {
                if (r) {
                  if (U)
                    for (var S in St) {
                      var k = n[S];
                      if (k && u(k.prototype, V))
                        try {
                          delete k.prototype[V];
                        } catch (H) {
                        }
                    }
                  (!m[V] || U) && v(m, V, U ? Ft : ot && E[V] || Ft);
                }
              }, st = function(V, Ft, U) {
                var S, k;
                if (r) {
                  if (b) {
                    if (U) {
                      for (S in St)
                        if (k = n[S], k && u(k, V))
                          try {
                            delete k[V];
                          } catch (H) {
                          }
                    }
                    if (!F[V] || U)
                      try {
                        return v(F, V, U ? Ft : ot && F[V] || Ft);
                      } catch (H) {
                      }
                    else
                      return;
                  }
                  for (S in St)
                    k = n[S], k && (!k[V] || U) && v(k, V, Ft);
                }
              };
              for (nt in St)
                xt = n[nt], bt = xt && xt.prototype, bt ? s(bt, G, xt) : ot = !1;
              for (nt in Dt)
                xt = n[nt], bt = xt && xt.prototype, bt && s(bt, G, xt);
              if ((!ot || !o(F) || F === Function.prototype) && (F = function() {
                throw O("Incorrect invocation");
              }, ot))
                for (nt in St)
                  n[nt] && b(n[nt], F);
              if ((!ot || !m || m === I) && (m = F.prototype, ot))
                for (nt in St)
                  n[nt] && b(n[nt].prototype, m);
              if (ot && e(C) !== m && b(C, m), r && !u(m, M)) {
                K = !0, y(m, M, {
                  get: function() {
                    return h(this) ? this[N] : void 0;
                  }
                });
                for (nt in St)
                  n[nt] && s(n[nt], N, nt);
              }
              f.exports = {
                NATIVE_ARRAY_BUFFER_VIEWS: ot,
                TYPED_ARRAY_CONSTRUCTOR: G,
                TYPED_ARRAY_TAG: K && N,
                aTypedArray: J,
                aTypedArrayConstructor: yt,
                exportTypedArrayMethod: ut,
                exportTypedArrayStaticMethod: st,
                isView: Lt,
                isTypedArray: jt,
                TypedArray: F,
                TypedArrayPrototype: m
              };
            }
          ),
          /***/
          83124: (
            /***/
            function(f, d, t) {
              t(24863);
              var i = t(32010), r = t(38347), n = t(15567), o = t(30450), h = t(7081), u = t(48914), l = t(15341), c = t(47044), s = t(2868), v = t(26882), y = t(23417), x = t(71265), e = t(64397), b = t(69548), A = t(3840), P = t(6611).f, D = t(95892).f, E = t(72864), T = t(73163), C = t(15216), F = t(70172), m = h.PROPER, I = h.CONFIGURABLE, O = F.get, M = F.set, N = "ArrayBuffer", G = "DataView", ot = "prototype", K = "Wrong length", nt = "Wrong index", xt = i[N], bt = xt, St = bt && bt[ot], Dt = i[G], Lt = Dt && Dt[ot], jt = Object.prototype, J = i.Array, yt = i.RangeError, ut = r(E), st = r([].reverse), wt = e.pack, V = e.unpack, Ft = function(le) {
                return [le & 255];
              }, U = function(le) {
                return [le & 255, le >> 8 & 255];
              }, S = function(le) {
                return [le & 255, le >> 8 & 255, le >> 16 & 255, le >> 24 & 255];
              }, k = function(le) {
                return le[3] << 24 | le[2] << 16 | le[1] << 8 | le[0];
              }, H = function(le) {
                return wt(le, 23, 4);
              }, it = function(le) {
                return wt(le, 52, 8);
              }, et = function(le, Se) {
                D(le[ot], Se, {
                  get: function() {
                    return O(this)[Se];
                  }
                });
              }, tt = function(le, Se, Wt, $t) {
                var ue = x(Wt), he = O(le);
                if (ue + Se > he.byteLength)
                  throw yt(nt);
                var Ee = O(he.buffer).bytes, Re = ue + he.byteOffset, Ie = T(Ee, Re, Re + Se);
                return $t ? Ie : st(Ie);
              }, Ct = function(le, Se, Wt, $t, ue, he) {
                var Ee = x(Wt), Re = O(le);
                if (Ee + Se > Re.byteLength)
                  throw yt(nt);
                for (var Ie = O(Re.buffer).bytes, Ot = Ee + Re.byteOffset, vt = $t(+ue), W = 0; W < Se; W++)
                  Ie[Ot + W] = vt[he ? W : Se - W - 1];
              };
              if (!o)
                bt = function(le) {
                  s(this, St);
                  var Se = x(le);
                  M(this, {
                    bytes: ut(J(Se), 0),
                    byteLength: Se
                  }), n || (this.byteLength = Se);
                }, St = bt[ot], Dt = function(le, Se, Wt) {
                  s(this, Lt), s(le, St);
                  var $t = O(le).byteLength, ue = v(Se);
                  if (ue < 0 || ue > $t)
                    throw yt("Wrong offset");
                  if (Wt = Wt === void 0 ? $t - ue : y(Wt), ue + Wt > $t)
                    throw yt(K);
                  M(this, {
                    buffer: le,
                    byteLength: Wt,
                    byteOffset: ue
                  }), n || (this.buffer = le, this.byteLength = Wt, this.byteOffset = ue);
                }, Lt = Dt[ot], n && (et(bt, "byteLength"), et(Dt, "buffer"), et(Dt, "byteLength"), et(Dt, "byteOffset")), l(Lt, {
                  getInt8: function(le) {
                    return tt(this, 1, le)[0] << 24 >> 24;
                  },
                  getUint8: function(le) {
                    return tt(this, 1, le)[0];
                  },
                  getInt16: function(le) {
                    var Se = tt(this, 2, le, arguments.length > 1 ? arguments[1] : void 0);
                    return (Se[1] << 8 | Se[0]) << 16 >> 16;
                  },
                  getUint16: function(le) {
                    var Se = tt(this, 2, le, arguments.length > 1 ? arguments[1] : void 0);
                    return Se[1] << 8 | Se[0];
                  },
                  getInt32: function(le) {
                    return k(tt(this, 4, le, arguments.length > 1 ? arguments[1] : void 0));
                  },
                  getUint32: function(le) {
                    return k(tt(this, 4, le, arguments.length > 1 ? arguments[1] : void 0)) >>> 0;
                  },
                  getFloat32: function(le) {
                    return V(tt(this, 4, le, arguments.length > 1 ? arguments[1] : void 0), 23);
                  },
                  getFloat64: function(le) {
                    return V(tt(this, 8, le, arguments.length > 1 ? arguments[1] : void 0), 52);
                  },
                  setInt8: function(le, Se) {
                    Ct(this, 1, le, Ft, Se);
                  },
                  setUint8: function(le, Se) {
                    Ct(this, 1, le, Ft, Se);
                  },
                  setInt16: function(le, Se) {
                    Ct(this, 2, le, U, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setUint16: function(le, Se) {
                    Ct(this, 2, le, U, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setInt32: function(le, Se) {
                    Ct(this, 4, le, S, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setUint32: function(le, Se) {
                    Ct(this, 4, le, S, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setFloat32: function(le, Se) {
                    Ct(this, 4, le, H, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setFloat64: function(le, Se) {
                    Ct(this, 8, le, it, Se, arguments.length > 2 ? arguments[2] : void 0);
                  }
                });
              else {
                var Rt = m && xt.name !== N;
                if (!c(function() {
                  xt(1);
                }) || !c(function() {
                  new xt(-1);
                }) || c(function() {
                  return new xt(), new xt(1.5), new xt(NaN), Rt && !I;
                })) {
                  bt = function(le) {
                    return s(this, St), new xt(x(le));
                  }, bt[ot] = St;
                  for (var Kt = P(xt), Gt = 0, It; Kt.length > Gt; )
                    (It = Kt[Gt++]) in bt || u(bt, It, xt[It]);
                  St.constructor = bt;
                } else
                  Rt && I && u(xt, "name", N);
                A && b(Lt) !== jt && A(Lt, jt);
                var re = new Dt(new bt(2)), be = r(Lt.setInt8);
                re.setInt8(0, 2147483648), re.setInt8(1, 2147483649), (re.getInt8(0) || !re.getInt8(1)) && l(Lt, {
                  setInt8: function(le, Se) {
                    be(this, le, Se << 24 >> 24);
                  },
                  setUint8: function(le, Se) {
                    be(this, le, Se << 24 >> 24);
                  }
                }, {
                  unsafe: !0
                });
              }
              C(bt, N), C(Dt, G), f.exports = {
                ArrayBuffer: bt,
                DataView: Dt
              };
            }
          ),
          /***/
          8953: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(83124), o = t(51334), h = "ArrayBuffer", u = n[h], l = r[h];
              i({
                global: !0,
                forced: l !== u
              }, {
                ArrayBuffer: u
              }), o(h);
            }
          ),
          /***/
          22956: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(66947), t(68319), t(82747), t(51270));
              })(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.BlockCipher, h = r.algo, u = [], l = [], c = [], s = [], v = [], y = [], x = [], e = [], b = [], A = [];
                  (function() {
                    for (var E = [], T = 0; T < 256; T++)
                      T < 128 ? E[T] = T << 1 : E[T] = T << 1 ^ 283;
                    for (var C = 0, F = 0, T = 0; T < 256; T++) {
                      var m = F ^ F << 1 ^ F << 2 ^ F << 3 ^ F << 4;
                      m = m >>> 8 ^ m & 255 ^ 99, u[C] = m, l[m] = C;
                      var I = E[C], O = E[I], M = E[O], N = E[m] * 257 ^ m * 16843008;
                      c[C] = N << 24 | N >>> 8, s[C] = N << 16 | N >>> 16, v[C] = N << 8 | N >>> 24, y[C] = N;
                      var N = M * 16843009 ^ O * 65537 ^ I * 257 ^ C * 16843008;
                      x[m] = N << 24 | N >>> 8, e[m] = N << 16 | N >>> 16, b[m] = N << 8 | N >>> 24, A[m] = N, C ? (C = I ^ E[E[E[M ^ I]]], F ^= E[E[F]]) : C = F = 1;
                    }
                  })();
                  var P = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], D = h.AES = o.extend({
                    _doReset: function() {
                      var T;
                      if (!(this._nRounds && this._keyPriorReset === this._key)) {
                        for (var C = this._keyPriorReset = this._key, F = C.words, m = C.sigBytes / 4, I = this._nRounds = m + 6, O = (I + 1) * 4, M = this._keySchedule = [], N = 0; N < O; N++)
                          N < m ? M[N] = F[N] : (T = M[N - 1], N % m ? m > 6 && N % m == 4 && (T = u[T >>> 24] << 24 | u[T >>> 16 & 255] << 16 | u[T >>> 8 & 255] << 8 | u[T & 255]) : (T = T << 8 | T >>> 24, T = u[T >>> 24] << 24 | u[T >>> 16 & 255] << 16 | u[T >>> 8 & 255] << 8 | u[T & 255], T ^= P[N / m | 0] << 24), M[N] = M[N - m] ^ T);
                        for (var G = this._invKeySchedule = [], ot = 0; ot < O; ot++) {
                          var N = O - ot;
                          if (ot % 4)
                            var T = M[N];
                          else
                            var T = M[N - 4];
                          ot < 4 || N <= 4 ? G[ot] = T : G[ot] = x[u[T >>> 24]] ^ e[u[T >>> 16 & 255]] ^ b[u[T >>> 8 & 255]] ^ A[u[T & 255]];
                        }
                      }
                    },
                    encryptBlock: function(T, C) {
                      this._doCryptBlock(T, C, this._keySchedule, c, s, v, y, u);
                    },
                    decryptBlock: function(T, C) {
                      var F = T[C + 1];
                      T[C + 1] = T[C + 3], T[C + 3] = F, this._doCryptBlock(T, C, this._invKeySchedule, x, e, b, A, l);
                      var F = T[C + 1];
                      T[C + 1] = T[C + 3], T[C + 3] = F;
                    },
                    _doCryptBlock: function(T, C, F, m, I, O, M, N) {
                      for (var G = this._nRounds, ot = T[C] ^ F[0], K = T[C + 1] ^ F[1], nt = T[C + 2] ^ F[2], xt = T[C + 3] ^ F[3], bt = 4, St = 1; St < G; St++) {
                        var Dt = m[ot >>> 24] ^ I[K >>> 16 & 255] ^ O[nt >>> 8 & 255] ^ M[xt & 255] ^ F[bt++], Lt = m[K >>> 24] ^ I[nt >>> 16 & 255] ^ O[xt >>> 8 & 255] ^ M[ot & 255] ^ F[bt++], jt = m[nt >>> 24] ^ I[xt >>> 16 & 255] ^ O[ot >>> 8 & 255] ^ M[K & 255] ^ F[bt++], J = m[xt >>> 24] ^ I[ot >>> 16 & 255] ^ O[K >>> 8 & 255] ^ M[nt & 255] ^ F[bt++];
                        ot = Dt, K = Lt, nt = jt, xt = J;
                      }
                      var Dt = (N[ot >>> 24] << 24 | N[K >>> 16 & 255] << 16 | N[nt >>> 8 & 255] << 8 | N[xt & 255]) ^ F[bt++], Lt = (N[K >>> 24] << 24 | N[nt >>> 16 & 255] << 16 | N[xt >>> 8 & 255] << 8 | N[ot & 255]) ^ F[bt++], jt = (N[nt >>> 24] << 24 | N[xt >>> 16 & 255] << 16 | N[ot >>> 8 & 255] << 8 | N[K & 255]) ^ F[bt++], J = (N[xt >>> 24] << 24 | N[ot >>> 16 & 255] << 16 | N[K >>> 8 & 255] << 8 | N[nt & 255]) ^ F[bt++];
                      T[C] = Dt, T[C + 1] = Lt, T[C + 2] = jt, T[C + 3] = J;
                    },
                    keySize: 256 / 32
                  });
                  r.AES = o._createHelper(D);
                }(), i.AES;
              });
            }
          ),
          /***/
          73517: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(66947), t(68319), t(82747), t(51270));
              })(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.BlockCipher, h = r.algo, u = 16, l = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731], c = [[3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, 4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, 1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946], [1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, 1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055], [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, 1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504], [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]], s = {
                    pbox: [],
                    sbox: []
                  };
                  function v(A, P) {
                    var D = P >> 24 & 255, E = P >> 16 & 255, T = P >> 8 & 255, C = P & 255, F = A.sbox[0][D] + A.sbox[1][E];
                    return F = F ^ A.sbox[2][T], F = F + A.sbox[3][C], F;
                  }
                  function y(A, P, D) {
                    for (var E = P, T = D, C, F = 0; F < u; ++F)
                      E = E ^ A.pbox[F], T = v(A, E) ^ T, C = E, E = T, T = C;
                    return C = E, E = T, T = C, T = T ^ A.pbox[u], E = E ^ A.pbox[u + 1], {
                      left: E,
                      right: T
                    };
                  }
                  function x(A, P, D) {
                    for (var E = P, T = D, C, F = u + 1; F > 1; --F)
                      E = E ^ A.pbox[F], T = v(A, E) ^ T, C = E, E = T, T = C;
                    return C = E, E = T, T = C, T = T ^ A.pbox[1], E = E ^ A.pbox[0], {
                      left: E,
                      right: T
                    };
                  }
                  function e(A, P, D) {
                    for (var E = 0; E < 4; E++) {
                      A.sbox[E] = [];
                      for (var T = 0; T < 256; T++)
                        A.sbox[E][T] = c[E][T];
                    }
                    for (var C = 0, F = 0; F < u + 2; F++)
                      A.pbox[F] = l[F] ^ P[C], C++, C >= D && (C = 0);
                    for (var m = 0, I = 0, O = 0, M = 0; M < u + 2; M += 2)
                      O = y(A, m, I), m = O.left, I = O.right, A.pbox[M] = m, A.pbox[M + 1] = I;
                    for (var N = 0; N < 4; N++)
                      for (var G = 0; G < 256; G += 2)
                        O = y(A, m, I), m = O.left, I = O.right, A.sbox[N][G] = m, A.sbox[N][G + 1] = I;
                    return !0;
                  }
                  var b = h.Blowfish = o.extend({
                    _doReset: function() {
                      if (this._keyPriorReset !== this._key) {
                        var P = this._keyPriorReset = this._key, D = P.words, E = P.sigBytes / 4;
                        e(s, D, E);
                      }
                    },
                    encryptBlock: function(P, D) {
                      var E = y(s, P[D], P[D + 1]);
                      P[D] = E.left, P[D + 1] = E.right;
                    },
                    decryptBlock: function(P, D) {
                      var E = x(s, P[D], P[D + 1]);
                      P[D] = E.left, P[D + 1] = E.right;
                    },
                    blockSize: 64 / 32,
                    keySize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  r.Blowfish = o._createHelper(b);
                }(), i.Blowfish;
              });
            }
          ),
          /***/
          51270: (
            /***/
            function(f, d, t) {
              t(39081), t(20731), t(23913), t(14032), t(57114), function(i, r, n) {
                f.exports = r(t(48352), t(82747));
              }(void 0, function(i) {
                i.lib.Cipher || function(r) {
                  var n = i, o = n.lib, h = o.Base, u = o.WordArray, l = o.BufferedBlockAlgorithm, c = n.enc;
                  c.Utf8;
                  var s = c.Base64, v = n.algo, y = v.EvpKDF, x = o.Cipher = l.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {WordArray} iv The IV to use for this operation.
                     */
                    cfg: h.extend(),
                    /**
                     * Creates this cipher in encryption mode.
                     *
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {Cipher} A cipher instance.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
                     */
                    createEncryptor: function(N, G) {
                      return this.create(this._ENC_XFORM_MODE, N, G);
                    },
                    /**
                     * Creates this cipher in decryption mode.
                     *
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {Cipher} A cipher instance.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
                     */
                    createDecryptor: function(N, G) {
                      return this.create(this._DEC_XFORM_MODE, N, G);
                    },
                    /**
                     * Initializes a newly created cipher.
                     *
                     * @param {number} xformMode Either the encryption or decryption transormation mode constant.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
                     */
                    init: function(N, G, ot) {
                      this.cfg = this.cfg.extend(ot), this._xformMode = N, this._key = G, this.reset();
                    },
                    /**
                     * Resets this cipher to its initial state.
                     *
                     * @example
                     *
                     *     cipher.reset();
                     */
                    reset: function() {
                      l.reset.call(this), this._doReset();
                    },
                    /**
                     * Adds data to be encrypted or decrypted.
                     *
                     * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
                     *
                     * @return {WordArray} The data after processing.
                     *
                     * @example
                     *
                     *     var encrypted = cipher.process('data');
                     *     var encrypted = cipher.process(wordArray);
                     */
                    process: function(N) {
                      return this._append(N), this._process();
                    },
                    /**
                     * Finalizes the encryption or decryption process.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
                     *
                     * @return {WordArray} The data after final processing.
                     *
                     * @example
                     *
                     *     var encrypted = cipher.finalize();
                     *     var encrypted = cipher.finalize('data');
                     *     var encrypted = cipher.finalize(wordArray);
                     */
                    finalize: function(N) {
                      N && this._append(N);
                      var G = this._doFinalize();
                      return G;
                    },
                    keySize: 128 / 32,
                    ivSize: 128 / 32,
                    _ENC_XFORM_MODE: 1,
                    _DEC_XFORM_MODE: 2,
                    /**
                     * Creates shortcut functions to a cipher's object interface.
                     *
                     * @param {Cipher} cipher The cipher to create a helper for.
                     *
                     * @return {Object} An object with encrypt and decrypt shortcut functions.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
                     */
                    _createHelper: function() {
                      function M(N) {
                        return typeof N == "string" ? O : F;
                      }
                      return function(N) {
                        return {
                          encrypt: function(ot, K, nt) {
                            return M(K).encrypt(N, ot, K, nt);
                          },
                          decrypt: function(ot, K, nt) {
                            return M(K).decrypt(N, ot, K, nt);
                          }
                        };
                      };
                    }()
                  });
                  o.StreamCipher = x.extend({
                    _doFinalize: function() {
                      var N = this._process(!0);
                      return N;
                    },
                    blockSize: 1
                  });
                  var e = n.mode = {}, b = o.BlockCipherMode = h.extend({
                    /**
                     * Creates this mode for encryption.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
                     */
                    createEncryptor: function(N, G) {
                      return this.Encryptor.create(N, G);
                    },
                    /**
                     * Creates this mode for decryption.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
                     */
                    createDecryptor: function(N, G) {
                      return this.Decryptor.create(N, G);
                    },
                    /**
                     * Initializes a newly created mode.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
                     */
                    init: function(N, G) {
                      this._cipher = N, this._iv = G;
                    }
                  }), A = e.CBC = function() {
                    var M = b.extend();
                    M.Encryptor = M.extend({
                      /**
                       * Processes the data block at offset.
                       *
                       * @param {Array} words The data words to operate on.
                       * @param {number} offset The offset where the block starts.
                       *
                       * @example
                       *
                       *     mode.processBlock(data.words, offset);
                       */
                      processBlock: function(ot, K) {
                        var nt = this._cipher, xt = nt.blockSize;
                        N.call(this, ot, K, xt), nt.encryptBlock(ot, K), this._prevBlock = ot.slice(K, K + xt);
                      }
                    }), M.Decryptor = M.extend({
                      /**
                       * Processes the data block at offset.
                       *
                       * @param {Array} words The data words to operate on.
                       * @param {number} offset The offset where the block starts.
                       *
                       * @example
                       *
                       *     mode.processBlock(data.words, offset);
                       */
                      processBlock: function(ot, K) {
                        var nt = this._cipher, xt = nt.blockSize, bt = ot.slice(K, K + xt);
                        nt.decryptBlock(ot, K), N.call(this, ot, K, xt), this._prevBlock = bt;
                      }
                    });
                    function N(G, ot, K) {
                      var nt, xt = this._iv;
                      xt ? (nt = xt, this._iv = r) : nt = this._prevBlock;
                      for (var bt = 0; bt < K; bt++)
                        G[ot + bt] ^= nt[bt];
                    }
                    return M;
                  }(), P = n.pad = {}, D = P.Pkcs7 = {
                    /**
                     * Pads data using the algorithm defined in PKCS #5/7.
                     *
                     * @param {WordArray} data The data to pad.
                     * @param {number} blockSize The multiple that the data should be padded to.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
                     */
                    pad: function(N, G) {
                      for (var ot = G * 4, K = ot - N.sigBytes % ot, nt = K << 24 | K << 16 | K << 8 | K, xt = [], bt = 0; bt < K; bt += 4)
                        xt.push(nt);
                      var St = u.create(xt, K);
                      N.concat(St);
                    },
                    /**
                     * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
                     *
                     * @param {WordArray} data The data to unpad.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     CryptoJS.pad.Pkcs7.unpad(wordArray);
                     */
                    unpad: function(N) {
                      var G = N.words[N.sigBytes - 1 >>> 2] & 255;
                      N.sigBytes -= G;
                    }
                  };
                  o.BlockCipher = x.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {Mode} mode The block mode to use. Default: CBC
                     * @property {Padding} padding The padding strategy to use. Default: Pkcs7
                     */
                    cfg: x.cfg.extend({
                      mode: A,
                      padding: D
                    }),
                    reset: function() {
                      var N;
                      x.reset.call(this);
                      var G = this.cfg, ot = G.iv, K = G.mode;
                      this._xformMode == this._ENC_XFORM_MODE ? N = K.createEncryptor : (N = K.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == N ? this._mode.init(this, ot && ot.words) : (this._mode = N.call(K, this, ot && ot.words), this._mode.__creator = N);
                    },
                    _doProcessBlock: function(N, G) {
                      this._mode.processBlock(N, G);
                    },
                    _doFinalize: function() {
                      var N, G = this.cfg.padding;
                      return this._xformMode == this._ENC_XFORM_MODE ? (G.pad(this._data, this.blockSize), N = this._process(!0)) : (N = this._process(!0), G.unpad(N)), N;
                    },
                    blockSize: 4
                  });
                  var E = o.CipherParams = h.extend({
                    /**
                     * Initializes a newly created cipher params object.
                     *
                     * @param {Object} cipherParams An object with any of the possible cipher parameters.
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.lib.CipherParams.create({
                     *         ciphertext: ciphertextWordArray,
                     *         key: keyWordArray,
                     *         iv: ivWordArray,
                     *         salt: saltWordArray,
                     *         algorithm: CryptoJS.algo.AES,
                     *         mode: CryptoJS.mode.CBC,
                     *         padding: CryptoJS.pad.PKCS7,
                     *         blockSize: 4,
                     *         formatter: CryptoJS.format.OpenSSL
                     *     });
                     */
                    init: function(N) {
                      this.mixIn(N);
                    },
                    /**
                     * Converts this cipher params object to a string.
                     *
                     * @param {Format} formatter (Optional) The formatting strategy to use.
                     *
                     * @return {string} The stringified cipher params.
                     *
                     * @throws Error If neither the formatter nor the default formatter is set.
                     *
                     * @example
                     *
                     *     var string = cipherParams + '';
                     *     var string = cipherParams.toString();
                     *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
                     */
                    toString: function(N) {
                      return (N || this.formatter).stringify(this);
                    }
                  }), T = n.format = {}, C = T.OpenSSL = {
                    /**
                     * Converts a cipher params object to an OpenSSL-compatible string.
                     *
                     * @param {CipherParams} cipherParams The cipher params object.
                     *
                     * @return {string} The OpenSSL-compatible string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
                     */
                    stringify: function(N) {
                      var G, ot = N.ciphertext, K = N.salt;
                      return K ? G = u.create([1398893684, 1701076831]).concat(K).concat(ot) : G = ot, G.toString(s);
                    },
                    /**
                     * Converts an OpenSSL-compatible string to a cipher params object.
                     *
                     * @param {string} openSSLStr The OpenSSL-compatible string.
                     *
                     * @return {CipherParams} The cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
                     */
                    parse: function(N) {
                      var G, ot = s.parse(N), K = ot.words;
                      return K[0] == 1398893684 && K[1] == 1701076831 && (G = u.create(K.slice(2, 4)), K.splice(0, 4), ot.sigBytes -= 16), E.create({
                        ciphertext: ot,
                        salt: G
                      });
                    }
                  }, F = o.SerializableCipher = h.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
                     */
                    cfg: h.extend({
                      format: C
                    }),
                    /**
                     * Encrypts a message.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {WordArray|string} message The message to encrypt.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {CipherParams} A cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     */
                    encrypt: function(N, G, ot, K) {
                      K = this.cfg.extend(K);
                      var nt = N.createEncryptor(ot, K), xt = nt.finalize(G), bt = nt.cfg;
                      return E.create({
                        ciphertext: xt,
                        key: ot,
                        iv: bt.iv,
                        algorithm: N,
                        mode: bt.mode,
                        padding: bt.padding,
                        blockSize: N.blockSize,
                        formatter: K.format
                      });
                    },
                    /**
                     * Decrypts serialized ciphertext.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {WordArray} The plaintext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     */
                    decrypt: function(N, G, ot, K) {
                      K = this.cfg.extend(K), G = this._parse(G, K.format);
                      var nt = N.createDecryptor(ot, K).finalize(G.ciphertext);
                      return nt;
                    },
                    /**
                     * Converts serialized ciphertext to CipherParams,
                     * else assumed CipherParams already and returns ciphertext unchanged.
                     *
                     * @param {CipherParams|string} ciphertext The ciphertext.
                     * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
                     *
                     * @return {CipherParams} The unserialized ciphertext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
                     */
                    _parse: function(N, G) {
                      return typeof N == "string" ? G.parse(N, this) : N;
                    }
                  }), m = n.kdf = {}, I = m.OpenSSL = {
                    /**
                     * Derives a key and IV from a password.
                     *
                     * @param {string} password The password to derive from.
                     * @param {number} keySize The size in words of the key to generate.
                     * @param {number} ivSize The size in words of the IV to generate.
                     * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
                     *
                     * @return {CipherParams} A cipher params object with the key, IV, and salt.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
                     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
                     */
                    execute: function(N, G, ot, K, nt) {
                      if (K || (K = u.random(64 / 8)), nt)
                        var xt = y.create({
                          keySize: G + ot,
                          hasher: nt
                        }).compute(N, K);
                      else
                        var xt = y.create({
                          keySize: G + ot
                        }).compute(N, K);
                      var bt = u.create(xt.words.slice(G), ot * 4);
                      return xt.sigBytes = G * 4, E.create({
                        key: xt,
                        iv: bt,
                        salt: K
                      });
                    }
                  }, O = o.PasswordBasedCipher = F.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
                     */
                    cfg: F.cfg.extend({
                      kdf: I
                    }),
                    /**
                     * Encrypts a message using a password.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {WordArray|string} message The message to encrypt.
                     * @param {string} password The password.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {CipherParams} A cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
                     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
                     */
                    encrypt: function(N, G, ot, K) {
                      K = this.cfg.extend(K);
                      var nt = K.kdf.execute(ot, N.keySize, N.ivSize, K.salt, K.hasher);
                      K.iv = nt.iv;
                      var xt = F.encrypt.call(this, N, G, nt.key, K);
                      return xt.mixIn(nt), xt;
                    },
                    /**
                     * Decrypts serialized ciphertext using a password.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
                     * @param {string} password The password.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {WordArray} The plaintext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
                     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
                     */
                    decrypt: function(N, G, ot, K) {
                      K = this.cfg.extend(K), G = this._parse(G, K.format);
                      var nt = K.kdf.execute(ot, N.keySize, N.ivSize, G.salt, K.hasher);
                      K.iv = nt.iv;
                      var xt = F.decrypt.call(this, N, G, nt.key, K);
                      return xt;
                    }
                  });
                }();
              });
            }
          ),
          /***/
          48352: (
            /***/
            function(f, d, t) {
              t(39081), t(81755), t(94845), t(20731), t(23913), t(8953), t(14032), t(57114), t(59735), t(73663), t(29883), t(35471), t(21012), t(88997), t(97464), t(2857), t(94715), t(13624), t(91132), t(62514), t(24597), t(88042), t(4660), t(92451), t(44206), t(66288), t(13250), t(3858), t(84538), t(64793), t(74202), t(52529), t(49109), function(i, r) {
                f.exports = r();
              }(void 0, function() {
                var i = i || function(r, n) {
                  var o;
                  if (typeof window != "undefined" && window.crypto && (o = window.crypto), typeof self != "undefined" && self.crypto && (o = self.crypto), typeof globalThis != "undefined" && globalThis.crypto && (o = globalThis.crypto), !o && typeof window != "undefined" && window.msCrypto && (o = window.msCrypto), !o && typeof t.g != "undefined" && t.g.crypto && (o = t.g.crypto), !o)
                    try {
                      o = t(50477);
                    } catch (D) {
                    }
                  var h = function() {
                    if (o) {
                      if (typeof o.getRandomValues == "function")
                        try {
                          return o.getRandomValues(new Uint32Array(1))[0];
                        } catch (E) {
                        }
                      if (typeof o.randomBytes == "function")
                        try {
                          return o.randomBytes(4).readInt32LE();
                        } catch (E) {
                        }
                    }
                    throw new Error("Native crypto module could not be used to get secure random number.");
                  }, u = Object.create || function() {
                    function D() {
                    }
                    return function(E) {
                      var T;
                      return D.prototype = E, T = new D(), D.prototype = null, T;
                    };
                  }(), l = {}, c = l.lib = {}, s = c.Base = function() {
                    return {
                      /**
                       * Creates a new object that inherits from this object.
                       *
                       * @param {Object} overrides Properties to copy into the new object.
                       *
                       * @return {Object} The new object.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var MyType = CryptoJS.lib.Base.extend({
                       *         field: 'value',
                       *
                       *         method: function () {
                       *         }
                       *     });
                       */
                      extend: function(E) {
                        var T = u(this);
                        return E && T.mixIn(E), (!T.hasOwnProperty("init") || this.init === T.init) && (T.init = function() {
                          T.$super.init.apply(this, arguments);
                        }), T.init.prototype = T, T.$super = this, T;
                      },
                      /**
                       * Extends this object and runs the init method.
                       * Arguments to create() will be passed to init().
                       *
                       * @return {Object} The new object.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var instance = MyType.create();
                       */
                      create: function() {
                        var E = this.extend();
                        return E.init.apply(E, arguments), E;
                      },
                      /**
                       * Initializes a newly created object.
                       * Override this method to add some logic when your objects are created.
                       *
                       * @example
                       *
                       *     var MyType = CryptoJS.lib.Base.extend({
                       *         init: function () {
                       *             // ...
                       *         }
                       *     });
                       */
                      init: function() {
                      },
                      /**
                       * Copies properties into this object.
                       *
                       * @param {Object} properties The properties to mix in.
                       *
                       * @example
                       *
                       *     MyType.mixIn({
                       *         field: 'value'
                       *     });
                       */
                      mixIn: function(E) {
                        for (var T in E)
                          E.hasOwnProperty(T) && (this[T] = E[T]);
                        E.hasOwnProperty("toString") && (this.toString = E.toString);
                      },
                      /**
                       * Creates a copy of this object.
                       *
                       * @return {Object} The clone.
                       *
                       * @example
                       *
                       *     var clone = instance.clone();
                       */
                      clone: function() {
                        return this.init.prototype.extend(this);
                      }
                    };
                  }(), v = c.WordArray = s.extend({
                    /**
                     * Initializes a newly created word array.
                     *
                     * @param {Array} words (Optional) An array of 32-bit words.
                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.lib.WordArray.create();
                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
                     */
                    init: function(E, T) {
                      E = this.words = E || [], T != n ? this.sigBytes = T : this.sigBytes = E.length * 4;
                    },
                    /**
                     * Converts this word array to a string.
                     *
                     * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
                     *
                     * @return {string} The stringified word array.
                     *
                     * @example
                     *
                     *     var string = wordArray + '';
                     *     var string = wordArray.toString();
                     *     var string = wordArray.toString(CryptoJS.enc.Utf8);
                     */
                    toString: function(E) {
                      return (E || x).stringify(this);
                    },
                    /**
                     * Concatenates a word array to this word array.
                     *
                     * @param {WordArray} wordArray The word array to append.
                     *
                     * @return {WordArray} This word array.
                     *
                     * @example
                     *
                     *     wordArray1.concat(wordArray2);
                     */
                    concat: function(E) {
                      var T = this.words, C = E.words, F = this.sigBytes, m = E.sigBytes;
                      if (this.clamp(), F % 4)
                        for (var I = 0; I < m; I++) {
                          var O = C[I >>> 2] >>> 24 - I % 4 * 8 & 255;
                          T[F + I >>> 2] |= O << 24 - (F + I) % 4 * 8;
                        }
                      else
                        for (var M = 0; M < m; M += 4)
                          T[F + M >>> 2] = C[M >>> 2];
                      return this.sigBytes += m, this;
                    },
                    /**
                     * Removes insignificant bits.
                     *
                     * @example
                     *
                     *     wordArray.clamp();
                     */
                    clamp: function() {
                      var E = this.words, T = this.sigBytes;
                      E[T >>> 2] &= 4294967295 << 32 - T % 4 * 8, E.length = r.ceil(T / 4);
                    },
                    /**
                     * Creates a copy of this word array.
                     *
                     * @return {WordArray} The clone.
                     *
                     * @example
                     *
                     *     var clone = wordArray.clone();
                     */
                    clone: function() {
                      var E = s.clone.call(this);
                      return E.words = this.words.slice(0), E;
                    },
                    /**
                     * Creates a word array filled with random bytes.
                     *
                     * @param {number} nBytes The number of random bytes to generate.
                     *
                     * @return {WordArray} The random word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.lib.WordArray.random(16);
                     */
                    random: function(E) {
                      for (var T = [], C = 0; C < E; C += 4)
                        T.push(h());
                      return new v.init(T, E);
                    }
                  }), y = l.enc = {}, x = y.Hex = {
                    /**
                     * Converts a word array to a hex string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The hex string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
                     */
                    stringify: function(E) {
                      for (var T = E.words, C = E.sigBytes, F = [], m = 0; m < C; m++) {
                        var I = T[m >>> 2] >>> 24 - m % 4 * 8 & 255;
                        F.push((I >>> 4).toString(16)), F.push((I & 15).toString(16));
                      }
                      return F.join("");
                    },
                    /**
                     * Converts a hex string to a word array.
                     *
                     * @param {string} hexStr The hex string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
                     */
                    parse: function(E) {
                      for (var T = E.length, C = [], F = 0; F < T; F += 2)
                        C[F >>> 3] |= parseInt(E.substr(F, 2), 16) << 24 - F % 8 * 4;
                      return new v.init(C, T / 2);
                    }
                  }, e = y.Latin1 = {
                    /**
                     * Converts a word array to a Latin1 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The Latin1 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
                     */
                    stringify: function(E) {
                      for (var T = E.words, C = E.sigBytes, F = [], m = 0; m < C; m++) {
                        var I = T[m >>> 2] >>> 24 - m % 4 * 8 & 255;
                        F.push(String.fromCharCode(I));
                      }
                      return F.join("");
                    },
                    /**
                     * Converts a Latin1 string to a word array.
                     *
                     * @param {string} latin1Str The Latin1 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
                     */
                    parse: function(E) {
                      for (var T = E.length, C = [], F = 0; F < T; F++)
                        C[F >>> 2] |= (E.charCodeAt(F) & 255) << 24 - F % 4 * 8;
                      return new v.init(C, T);
                    }
                  }, b = y.Utf8 = {
                    /**
                     * Converts a word array to a UTF-8 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-8 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
                     */
                    stringify: function(E) {
                      try {
                        return decodeURIComponent(escape(e.stringify(E)));
                      } catch (T) {
                        throw new Error("Malformed UTF-8 data");
                      }
                    },
                    /**
                     * Converts a UTF-8 string to a word array.
                     *
                     * @param {string} utf8Str The UTF-8 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
                     */
                    parse: function(E) {
                      return e.parse(unescape(encodeURIComponent(E)));
                    }
                  }, A = c.BufferedBlockAlgorithm = s.extend({
                    /**
                     * Resets this block algorithm's data buffer to its initial state.
                     *
                     * @example
                     *
                     *     bufferedBlockAlgorithm.reset();
                     */
                    reset: function() {
                      this._data = new v.init(), this._nDataBytes = 0;
                    },
                    /**
                     * Adds new data to this block algorithm's buffer.
                     *
                     * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
                     *
                     * @example
                     *
                     *     bufferedBlockAlgorithm._append('data');
                     *     bufferedBlockAlgorithm._append(wordArray);
                     */
                    _append: function(E) {
                      typeof E == "string" && (E = b.parse(E)), this._data.concat(E), this._nDataBytes += E.sigBytes;
                    },
                    /**
                     * Processes available data blocks.
                     *
                     * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
                     *
                     * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
                     *
                     * @return {WordArray} The processed data.
                     *
                     * @example
                     *
                     *     var processedData = bufferedBlockAlgorithm._process();
                     *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
                     */
                    _process: function(E) {
                      var T, C = this._data, F = C.words, m = C.sigBytes, I = this.blockSize, O = I * 4, M = m / O;
                      E ? M = r.ceil(M) : M = r.max((M | 0) - this._minBufferSize, 0);
                      var N = M * I, G = r.min(N * 4, m);
                      if (N) {
                        for (var ot = 0; ot < N; ot += I)
                          this._doProcessBlock(F, ot);
                        T = F.splice(0, N), C.sigBytes -= G;
                      }
                      return new v.init(T, G);
                    },
                    /**
                     * Creates a copy of this object.
                     *
                     * @return {Object} The clone.
                     *
                     * @example
                     *
                     *     var clone = bufferedBlockAlgorithm.clone();
                     */
                    clone: function() {
                      var E = s.clone.call(this);
                      return E._data = this._data.clone(), E;
                    },
                    _minBufferSize: 0
                  });
                  c.Hasher = A.extend({
                    /**
                     * Configuration options.
                     */
                    cfg: s.extend(),
                    /**
                     * Initializes a newly created hasher.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
                     *
                     * @example
                     *
                     *     var hasher = CryptoJS.algo.SHA256.create();
                     */
                    init: function(E) {
                      this.cfg = this.cfg.extend(E), this.reset();
                    },
                    /**
                     * Resets this hasher to its initial state.
                     *
                     * @example
                     *
                     *     hasher.reset();
                     */
                    reset: function() {
                      A.reset.call(this), this._doReset();
                    },
                    /**
                     * Updates this hasher with a message.
                     *
                     * @param {WordArray|string} messageUpdate The message to append.
                     *
                     * @return {Hasher} This hasher.
                     *
                     * @example
                     *
                     *     hasher.update('message');
                     *     hasher.update(wordArray);
                     */
                    update: function(E) {
                      return this._append(E), this._process(), this;
                    },
                    /**
                     * Finalizes the hash computation.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} messageUpdate (Optional) A final message update.
                     *
                     * @return {WordArray} The hash.
                     *
                     * @example
                     *
                     *     var hash = hasher.finalize();
                     *     var hash = hasher.finalize('message');
                     *     var hash = hasher.finalize(wordArray);
                     */
                    finalize: function(E) {
                      E && this._append(E);
                      var T = this._doFinalize();
                      return T;
                    },
                    blockSize: 16,
                    /**
                     * Creates a shortcut function to a hasher's object interface.
                     *
                     * @param {Hasher} hasher The hasher to create a helper for.
                     *
                     * @return {Function} The shortcut function.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
                     */
                    _createHelper: function(E) {
                      return function(T, C) {
                        return new E.init(C).finalize(T);
                      };
                    },
                    /**
                     * Creates a shortcut function to the HMAC's object interface.
                     *
                     * @param {Hasher} hasher The hasher to use in this HMAC helper.
                     *
                     * @return {Function} The shortcut function.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
                     */
                    _createHmacHelper: function(E) {
                      return function(T, C) {
                        return new P.HMAC.init(E, C).finalize(T);
                      };
                    }
                  });
                  var P = l.algo = {};
                  return l;
                }(Math);
                return i;
              });
            }
          ),
          /***/
          66947: (
            /***/
            function(f, d, t) {
              t(94845), function(i, r) {
                f.exports = r(t(48352));
              }(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.WordArray, h = r.enc;
                  h.Base64 = {
                    /**
                     * Converts a word array to a Base64 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The Base64 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
                     */
                    stringify: function(c) {
                      var s = c.words, v = c.sigBytes, y = this._map;
                      c.clamp();
                      for (var x = [], e = 0; e < v; e += 3)
                        for (var b = s[e >>> 2] >>> 24 - e % 4 * 8 & 255, A = s[e + 1 >>> 2] >>> 24 - (e + 1) % 4 * 8 & 255, P = s[e + 2 >>> 2] >>> 24 - (e + 2) % 4 * 8 & 255, D = b << 16 | A << 8 | P, E = 0; E < 4 && e + E * 0.75 < v; E++)
                          x.push(y.charAt(D >>> 6 * (3 - E) & 63));
                      var T = y.charAt(64);
                      if (T)
                        for (; x.length % 4; )
                          x.push(T);
                      return x.join("");
                    },
                    /**
                     * Converts a Base64 string to a word array.
                     *
                     * @param {string} base64Str The Base64 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
                     */
                    parse: function(c) {
                      var s = c.length, v = this._map, y = this._reverseMap;
                      if (!y) {
                        y = this._reverseMap = [];
                        for (var x = 0; x < v.length; x++)
                          y[v.charCodeAt(x)] = x;
                      }
                      var e = v.charAt(64);
                      if (e) {
                        var b = c.indexOf(e);
                        b !== -1 && (s = b);
                      }
                      return u(c, s, y);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                  };
                  function u(l, c, s) {
                    for (var v = [], y = 0, x = 0; x < c; x++)
                      if (x % 4) {
                        var e = s[l.charCodeAt(x - 1)] << x % 4 * 2, b = s[l.charCodeAt(x)] >>> 6 - x % 4 * 2, A = e | b;
                        v[y >>> 2] |= A << 24 - y % 4 * 8, y++;
                      }
                    return o.create(v, y);
                  }
                }(), i.enc.Base64;
              });
            }
          ),
          /***/
          16190: (
            /***/
            function(f, d, t) {
              t(94845), function(i, r) {
                f.exports = r(t(48352));
              }(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.WordArray, h = r.enc;
                  h.Base64url = {
                    /**
                     * Converts a word array to a Base64url string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @param {boolean} urlSafe Whether to use url safe
                     *
                     * @return {string} The Base64url string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);
                     */
                    stringify: function(c, s) {
                      s === void 0 && (s = !0);
                      var v = c.words, y = c.sigBytes, x = s ? this._safe_map : this._map;
                      c.clamp();
                      for (var e = [], b = 0; b < y; b += 3)
                        for (var A = v[b >>> 2] >>> 24 - b % 4 * 8 & 255, P = v[b + 1 >>> 2] >>> 24 - (b + 1) % 4 * 8 & 255, D = v[b + 2 >>> 2] >>> 24 - (b + 2) % 4 * 8 & 255, E = A << 16 | P << 8 | D, T = 0; T < 4 && b + T * 0.75 < y; T++)
                          e.push(x.charAt(E >>> 6 * (3 - T) & 63));
                      var C = x.charAt(64);
                      if (C)
                        for (; e.length % 4; )
                          e.push(C);
                      return e.join("");
                    },
                    /**
                     * Converts a Base64url string to a word array.
                     *
                     * @param {string} base64Str The Base64url string.
                     *
                     * @param {boolean} urlSafe Whether to use url safe
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);
                     */
                    parse: function(c, s) {
                      s === void 0 && (s = !0);
                      var v = c.length, y = s ? this._safe_map : this._map, x = this._reverseMap;
                      if (!x) {
                        x = this._reverseMap = [];
                        for (var e = 0; e < y.length; e++)
                          x[y.charCodeAt(e)] = e;
                      }
                      var b = y.charAt(64);
                      if (b) {
                        var A = c.indexOf(b);
                        A !== -1 && (v = A);
                      }
                      return u(c, v, x);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                  };
                  function u(l, c, s) {
                    for (var v = [], y = 0, x = 0; x < c; x++)
                      if (x % 4) {
                        var e = s[l.charCodeAt(x - 1)] << x % 4 * 2, b = s[l.charCodeAt(x)] >>> 6 - x % 4 * 2, A = e | b;
                        v[y >>> 2] |= A << 24 - y % 4 * 8, y++;
                      }
                    return o.create(v, y);
                  }
                }(), i.enc.Base64url;
              });
            }
          ),
          /***/
          2256: (
            /***/
            function(f, d, t) {
              t(94845), function(i, r) {
                f.exports = r(t(48352));
              }(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.WordArray, h = r.enc;
                  h.Utf16 = h.Utf16BE = {
                    /**
                     * Converts a word array to a UTF-16 BE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 BE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
                     */
                    stringify: function(c) {
                      for (var s = c.words, v = c.sigBytes, y = [], x = 0; x < v; x += 2) {
                        var e = s[x >>> 2] >>> 16 - x % 4 * 8 & 65535;
                        y.push(String.fromCharCode(e));
                      }
                      return y.join("");
                    },
                    /**
                     * Converts a UTF-16 BE string to a word array.
                     *
                     * @param {string} utf16Str The UTF-16 BE string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
                     */
                    parse: function(c) {
                      for (var s = c.length, v = [], y = 0; y < s; y++)
                        v[y >>> 1] |= c.charCodeAt(y) << 16 - y % 2 * 16;
                      return o.create(v, s * 2);
                    }
                  }, h.Utf16LE = {
                    /**
                     * Converts a word array to a UTF-16 LE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 LE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
                     */
                    stringify: function(c) {
                      for (var s = c.words, v = c.sigBytes, y = [], x = 0; x < v; x += 2) {
                        var e = u(s[x >>> 2] >>> 16 - x % 4 * 8 & 65535);
                        y.push(String.fromCharCode(e));
                      }
                      return y.join("");
                    },
                    /**
                     * Converts a UTF-16 LE string to a word array.
                     *
                     * @param {string} utf16Str The UTF-16 LE string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
                     */
                    parse: function(c) {
                      for (var s = c.length, v = [], y = 0; y < s; y++)
                        v[y >>> 1] |= u(c.charCodeAt(y) << 16 - y % 2 * 16);
                      return o.create(v, s * 2);
                    }
                  };
                  function u(l) {
                    return l << 8 & 4278255360 | l >>> 8 & 16711935;
                  }
                }(), i.enc.Utf16;
              });
            }
          ),
          /***/
          82747: (
            /***/
            function(f, d, t) {
              t(39081), function(i, r, n) {
                f.exports = r(t(48352), t(37146), t(4420));
              }(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.Base, h = n.WordArray, u = r.algo, l = u.MD5, c = u.EvpKDF = o.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                     * @property {Hasher} hasher The hash algorithm to use. Default: MD5
                     * @property {number} iterations The number of iterations to perform. Default: 1
                     */
                    cfg: o.extend({
                      keySize: 128 / 32,
                      hasher: l,
                      iterations: 1
                    }),
                    /**
                     * Initializes a newly created key derivation function.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                     *
                     * @example
                     *
                     *     var kdf = CryptoJS.algo.EvpKDF.create();
                     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
                     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
                     */
                    init: function(v) {
                      this.cfg = this.cfg.extend(v);
                    },
                    /**
                     * Derives a key from a password.
                     *
                     * @param {WordArray|string} password The password.
                     * @param {WordArray|string} salt A salt.
                     *
                     * @return {WordArray} The derived key.
                     *
                     * @example
                     *
                     *     var key = kdf.compute(password, salt);
                     */
                    compute: function(v, y) {
                      for (var x, e = this.cfg, b = e.hasher.create(), A = h.create(), P = A.words, D = e.keySize, E = e.iterations; P.length < D; ) {
                        x && b.update(x), x = b.update(v).finalize(y), b.reset();
                        for (var T = 1; T < E; T++)
                          x = b.finalize(x), b.reset();
                        A.concat(x);
                      }
                      return A.sigBytes = D * 4, A;
                    }
                  });
                  r.EvpKDF = function(s, v, y) {
                    return c.create(y).compute(s, v);
                  };
                }(), i.EvpKDF;
              });
            }
          ),
          /***/
          73948: (
            /***/
            function(f, d, t) {
              t(14032), t(57114), function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              }(void 0, function(i) {
                return function(r) {
                  var n = i, o = n.lib, h = o.CipherParams, u = n.enc, l = u.Hex, c = n.format;
                  c.Hex = {
                    /**
                     * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
                     *
                     * @param {CipherParams} cipherParams The cipher params object.
                     *
                     * @return {string} The hexadecimally encoded string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
                     */
                    stringify: function(v) {
                      return v.ciphertext.toString(l);
                    },
                    /**
                     * Converts a hexadecimally encoded ciphertext string to a cipher params object.
                     *
                     * @param {string} input The hexadecimally encoded string.
                     *
                     * @return {CipherParams} The cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
                     */
                    parse: function(v) {
                      var y = l.parse(v);
                      return h.create({
                        ciphertext: y
                      });
                    }
                  };
                }(), i.format.Hex;
              });
            }
          ),
          /***/
          4420: (
            /***/
            function(f, d, t) {
              t(39081), function(i, r) {
                f.exports = r(t(48352));
              }(void 0, function(i) {
                (function() {
                  var r = i, n = r.lib, o = n.Base, h = r.enc, u = h.Utf8, l = r.algo;
                  l.HMAC = o.extend({
                    /**
                     * Initializes a newly created HMAC.
                     *
                     * @param {Hasher} hasher The hash algorithm to use.
                     * @param {WordArray|string} key The secret key.
                     *
                     * @example
                     *
                     *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
                     */
                    init: function(s, v) {
                      s = this._hasher = new s.init(), typeof v == "string" && (v = u.parse(v));
                      var y = s.blockSize, x = y * 4;
                      v.sigBytes > x && (v = s.finalize(v)), v.clamp();
                      for (var e = this._oKey = v.clone(), b = this._iKey = v.clone(), A = e.words, P = b.words, D = 0; D < y; D++)
                        A[D] ^= 1549556828, P[D] ^= 909522486;
                      e.sigBytes = b.sigBytes = x, this.reset();
                    },
                    /**
                     * Resets this HMAC to its initial state.
                     *
                     * @example
                     *
                     *     hmacHasher.reset();
                     */
                    reset: function() {
                      var s = this._hasher;
                      s.reset(), s.update(this._iKey);
                    },
                    /**
                     * Updates this HMAC with a message.
                     *
                     * @param {WordArray|string} messageUpdate The message to append.
                     *
                     * @return {HMAC} This HMAC instance.
                     *
                     * @example
                     *
                     *     hmacHasher.update('message');
                     *     hmacHasher.update(wordArray);
                     */
                    update: function(s) {
                      return this._hasher.update(s), this;
                    },
                    /**
                     * Finalizes the HMAC computation.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} messageUpdate (Optional) A final message update.
                     *
                     * @return {WordArray} The HMAC.
                     *
                     * @example
                     *
                     *     var hmac = hmacHasher.finalize();
                     *     var hmac = hmacHasher.finalize('message');
                     *     var hmac = hmacHasher.finalize(wordArray);
                     */
                    finalize: function(s) {
                      var v = this._hasher, y = v.finalize(s);
                      v.reset();
                      var x = v.finalize(this._oKey.clone().concat(y));
                      return x;
                    }
                  });
                })();
              });
            }
          ),
          /***/
          94119: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(18909), t(14287), t(2256), t(66947), t(16190), t(68319), t(37146), t(66664), t(11905), t(51965), t(27772), t(16720), t(1239), t(4420), t(44130), t(82747), t(51270), t(62256), t(48306), t(65881), t(6564), t(29819), t(28164), t(91780), t(14623), t(85628), t(61807), t(73948), t(22956), t(24107), t(95086), t(6819), t(75891), t(73517));
              })(void 0, function(i) {
                return i;
              });
            }
          ),
          /***/
          14287: (
            /***/
            function(f, d, t) {
              t(81755), t(8953), t(14032), t(3131), t(90868), t(65553), t(75626), t(95756), t(56912), t(58099), t(47969), t(59735), t(73663), t(29883), t(35471), t(21012), t(88997), t(97464), t(2857), t(94715), t(13624), t(91132), t(62514), t(24597), t(88042), t(4660), t(92451), t(44206), t(66288), t(13250), t(3858), t(84538), t(64793), t(74202), t(52529), function(i, r) {
                f.exports = r(t(48352));
              }(void 0, function(i) {
                return function() {
                  if (typeof ArrayBuffer == "function") {
                    var r = i, n = r.lib, o = n.WordArray, h = o.init, u = o.init = function(l) {
                      if (l instanceof ArrayBuffer && (l = new Uint8Array(l)), (l instanceof Int8Array || typeof Uint8ClampedArray != "undefined" && l instanceof Uint8ClampedArray || l instanceof Int16Array || l instanceof Uint16Array || l instanceof Int32Array || l instanceof Uint32Array || l instanceof Float32Array || l instanceof Float64Array) && (l = new Uint8Array(l.buffer, l.byteOffset, l.byteLength)), l instanceof Uint8Array) {
                        for (var c = l.byteLength, s = [], v = 0; v < c; v++)
                          s[v >>> 2] |= l[v] << 24 - v % 4 * 8;
                        h.call(this, s, c);
                      } else
                        h.apply(this, arguments);
                    };
                    u.prototype = o;
                  }
                }(), i.lib.WordArray;
              });
            }
          ),
          /***/
          68319: (
            /***/
            function(f, d, t) {
              (function(i, r) {
                f.exports = r(t(48352));
              })(void 0, function(i) {
                return function(r) {
                  var n = i, o = n.lib, h = o.WordArray, u = o.Hasher, l = n.algo, c = [];
                  (function() {
                    for (var b = 0; b < 64; b++)
                      c[b] = r.abs(r.sin(b + 1)) * 4294967296 | 0;
                  })();
                  var s = l.MD5 = u.extend({
                    _doReset: function() {
                      this._hash = new h.init([1732584193, 4023233417, 2562383102, 271733878]);
                    },
                    _doProcessBlock: function(A, P) {
                      for (var D = 0; D < 16; D++) {
                        var E = P + D, T = A[E];
                        A[E] = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360;
                      }
                      var C = this._hash.words, F = A[P + 0], m = A[P + 1], I = A[P + 2], O = A[P + 3], M = A[P + 4], N = A[P + 5], G = A[P + 6], ot = A[P + 7], K = A[P + 8], nt = A[P + 9], xt = A[P + 10], bt = A[P + 11], St = A[P + 12], Dt = A[P + 13], Lt = A[P + 14], jt = A[P + 15], J = C[0], yt = C[1], ut = C[2], st = C[3];
                      J = v(J, yt, ut, st, F, 7, c[0]), st = v(st, J, yt, ut, m, 12, c[1]), ut = v(ut, st, J, yt, I, 17, c[2]), yt = v(yt, ut, st, J, O, 22, c[3]), J = v(J, yt, ut, st, M, 7, c[4]), st = v(st, J, yt, ut, N, 12, c[5]), ut = v(ut, st, J, yt, G, 17, c[6]), yt = v(yt, ut, st, J, ot, 22, c[7]), J = v(J, yt, ut, st, K, 7, c[8]), st = v(st, J, yt, ut, nt, 12, c[9]), ut = v(ut, st, J, yt, xt, 17, c[10]), yt = v(yt, ut, st, J, bt, 22, c[11]), J = v(J, yt, ut, st, St, 7, c[12]), st = v(st, J, yt, ut, Dt, 12, c[13]), ut = v(ut, st, J, yt, Lt, 17, c[14]), yt = v(yt, ut, st, J, jt, 22, c[15]), J = y(J, yt, ut, st, m, 5, c[16]), st = y(st, J, yt, ut, G, 9, c[17]), ut = y(ut, st, J, yt, bt, 14, c[18]), yt = y(yt, ut, st, J, F, 20, c[19]), J = y(J, yt, ut, st, N, 5, c[20]), st = y(st, J, yt, ut, xt, 9, c[21]), ut = y(ut, st, J, yt, jt, 14, c[22]), yt = y(yt, ut, st, J, M, 20, c[23]), J = y(J, yt, ut, st, nt, 5, c[24]), st = y(st, J, yt, ut, Lt, 9, c[25]), ut = y(ut, st, J, yt, O, 14, c[26]), yt = y(yt, ut, st, J, K, 20, c[27]), J = y(J, yt, ut, st, Dt, 5, c[28]), st = y(st, J, yt, ut, I, 9, c[29]), ut = y(ut, st, J, yt, ot, 14, c[30]), yt = y(yt, ut, st, J, St, 20, c[31]), J = x(J, yt, ut, st, N, 4, c[32]), st = x(st, J, yt, ut, K, 11, c[33]), ut = x(ut, st, J, yt, bt, 16, c[34]), yt = x(yt, ut, st, J, Lt, 23, c[35]), J = x(J, yt, ut, st, m, 4, c[36]), st = x(st, J, yt, ut, M, 11, c[37]), ut = x(ut, st, J, yt, ot, 16, c[38]), yt = x(yt, ut, st, J, xt, 23, c[39]), J = x(J, yt, ut, st, Dt, 4, c[40]), st = x(st, J, yt, ut, F, 11, c[41]), ut = x(ut, st, J, yt, O, 16, c[42]), yt = x(yt, ut, st, J, G, 23, c[43]), J = x(J, yt, ut, st, nt, 4, c[44]), st = x(st, J, yt, ut, St, 11, c[45]), ut = x(ut, st, J, yt, jt, 16, c[46]), yt = x(yt, ut, st, J, I, 23, c[47]), J = e(J, yt, ut, st, F, 6, c[48]), st = e(st, J, yt, ut, ot, 10, c[49]), ut = e(ut, st, J, yt, Lt, 15, c[50]), yt = e(yt, ut, st, J, N, 21, c[51]), J = e(J, yt, ut, st, St, 6, c[52]), st = e(st, J, yt, ut, O, 10, c[53]), ut = e(ut, st, J, yt, xt, 15, c[54]), yt = e(yt, ut, st, J, m, 21, c[55]), J = e(J, yt, ut, st, K, 6, c[56]), st = e(st, J, yt, ut, jt, 10, c[57]), ut = e(ut, st, J, yt, G, 15, c[58]), yt = e(yt, ut, st, J, Dt, 21, c[59]), J = e(J, yt, ut, st, M, 6, c[60]), st = e(st, J, yt, ut, bt, 10, c[61]), ut = e(ut, st, J, yt, I, 15, c[62]), yt = e(yt, ut, st, J, nt, 21, c[63]), C[0] = C[0] + J | 0, C[1] = C[1] + yt | 0, C[2] = C[2] + ut | 0, C[3] = C[3] + st | 0;
                    },
                    _doFinalize: function() {
                      var A = this._data, P = A.words, D = this._nDataBytes * 8, E = A.sigBytes * 8;
                      P[E >>> 5] |= 128 << 24 - E % 32;
                      var T = r.floor(D / 4294967296), C = D;
                      P[(E + 64 >>> 9 << 4) + 15] = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, P[(E + 64 >>> 9 << 4) + 14] = (C << 8 | C >>> 24) & 16711935 | (C << 24 | C >>> 8) & 4278255360, A.sigBytes = (P.length + 1) * 4, this._process();
                      for (var F = this._hash, m = F.words, I = 0; I < 4; I++) {
                        var O = m[I];
                        m[I] = (O << 8 | O >>> 24) & 16711935 | (O << 24 | O >>> 8) & 4278255360;
                      }
                      return F;
                    },
                    clone: function() {
                      var A = u.clone.call(this);
                      return A._hash = this._hash.clone(), A;
                    }
                  });
                  function v(b, A, P, D, E, T, C) {
                    var F = b + (A & P | ~A & D) + E + C;
                    return (F << T | F >>> 32 - T) + A;
                  }
                  function y(b, A, P, D, E, T, C) {
                    var F = b + (A & D | P & ~D) + E + C;
                    return (F << T | F >>> 32 - T) + A;
                  }
                  function x(b, A, P, D, E, T, C) {
                    var F = b + (A ^ P ^ D) + E + C;
                    return (F << T | F >>> 32 - T) + A;
                  }
                  function e(b, A, P, D, E, T, C) {
                    var F = b + (P ^ (A | ~D)) + E + C;
                    return (F << T | F >>> 32 - T) + A;
                  }
                  n.MD5 = u._createHelper(s), n.HmacMD5 = u._createHmacHelper(s);
                }(Math), i.MD5;
              });
            }
          ),
          /***/
          62256: (
            /***/
            function(f, d, t) {
              t(20731), function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              }(void 0, function(i) {
                return i.mode.CFB = function() {
                  var r = i.lib.BlockCipherMode.extend();
                  r.Encryptor = r.extend({
                    processBlock: function(h, u) {
                      var l = this._cipher, c = l.blockSize;
                      n.call(this, h, u, c, l), this._prevBlock = h.slice(u, u + c);
                    }
                  }), r.Decryptor = r.extend({
                    processBlock: function(h, u) {
                      var l = this._cipher, c = l.blockSize, s = h.slice(u, u + c);
                      n.call(this, h, u, c, l), this._prevBlock = s;
                    }
                  });
                  function n(o, h, u, l) {
                    var c, s = this._iv;
                    s ? (c = s.slice(0), this._iv = void 0) : c = this._prevBlock, l.encryptBlock(c, 0);
                    for (var v = 0; v < u; v++)
                      o[h + v] ^= c[v];
                  }
                  return r;
                }(), i.mode.CFB;
              });
            }
          ),
          /***/
          65881: (
            /***/
            function(f, d, t) {
              t(20731), function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              }(void 0, function(i) {
                /** @preserve
                 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
                 * derived from CryptoJS.mode.CTR
                 * Jan Hruby jhruby.web@gmail.com
                 */
                return i.mode.CTRGladman = function() {
                  var r = i.lib.BlockCipherMode.extend();
                  function n(u) {
                    if ((u >> 24 & 255) === 255) {
                      var l = u >> 16 & 255, c = u >> 8 & 255, s = u & 255;
                      l === 255 ? (l = 0, c === 255 ? (c = 0, s === 255 ? s = 0 : ++s) : ++c) : ++l, u = 0, u += l << 16, u += c << 8, u += s;
                    } else
                      u += 16777216;
                    return u;
                  }
                  function o(u) {
                    return (u[0] = n(u[0])) === 0 && (u[1] = n(u[1])), u;
                  }
                  var h = r.Encryptor = r.extend({
                    processBlock: function(l, c) {
                      var s = this._cipher, v = s.blockSize, y = this._iv, x = this._counter;
                      y && (x = this._counter = y.slice(0), this._iv = void 0), o(x);
                      var e = x.slice(0);
                      s.encryptBlock(e, 0);
                      for (var b = 0; b < v; b++)
                        l[c + b] ^= e[b];
                    }
                  });
                  return r.Decryptor = h, r;
                }(), i.mode.CTRGladman;
              });
            }
          ),
          /***/
          48306: (
            /***/
            function(f, d, t) {
              t(20731), function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              }(void 0, function(i) {
                return i.mode.CTR = function() {
                  var r = i.lib.BlockCipherMode.extend(), n = r.Encryptor = r.extend({
                    processBlock: function(h, u) {
                      var l = this._cipher, c = l.blockSize, s = this._iv, v = this._counter;
                      s && (v = this._counter = s.slice(0), this._iv = void 0);
                      var y = v.slice(0);
                      l.encryptBlock(y, 0), v[c - 1] = v[c - 1] + 1 | 0;
                      for (var x = 0; x < c; x++)
                        h[u + x] ^= y[x];
                    }
                  });
                  return r.Decryptor = n, r;
                }(), i.mode.CTR;
              });
            }
          ),
          /***/
          29819: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              })(void 0, function(i) {
                return i.mode.ECB = function() {
                  var r = i.lib.BlockCipherMode.extend();
                  return r.Encryptor = r.extend({
                    processBlock: function(o, h) {
                      this._cipher.encryptBlock(o, h);
                    }
                  }), r.Decryptor = r.extend({
                    processBlock: function(o, h) {
                      this._cipher.decryptBlock(o, h);
                    }
                  }), r;
                }(), i.mode.ECB;
              });
            }
          ),
          /***/
          6564: (
            /***/
            function(f, d, t) {
              t(20731), function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              }(void 0, function(i) {
                return i.mode.OFB = function() {
                  var r = i.lib.BlockCipherMode.extend(), n = r.Encryptor = r.extend({
                    processBlock: function(h, u) {
                      var l = this._cipher, c = l.blockSize, s = this._iv, v = this._keystream;
                      s && (v = this._keystream = s.slice(0), this._iv = void 0), l.encryptBlock(v, 0);
                      for (var y = 0; y < c; y++)
                        h[u + y] ^= v[y];
                    }
                  });
                  return r.Decryptor = n, r;
                }(), i.mode.OFB;
              });
            }
          ),
          /***/
          28164: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              })(void 0, function(i) {
                return i.pad.AnsiX923 = {
                  pad: function(n, o) {
                    var h = n.sigBytes, u = o * 4, l = u - h % u, c = h + l - 1;
                    n.clamp(), n.words[c >>> 2] |= l << 24 - c % 4 * 8, n.sigBytes += l;
                  },
                  unpad: function(n) {
                    var o = n.words[n.sigBytes - 1 >>> 2] & 255;
                    n.sigBytes -= o;
                  }
                }, i.pad.Ansix923;
              });
            }
          ),
          /***/
          91780: (
            /***/
            function(f, d, t) {
              t(39081), function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              }(void 0, function(i) {
                return i.pad.Iso10126 = {
                  pad: function(n, o) {
                    var h = o * 4, u = h - n.sigBytes % h;
                    n.concat(i.lib.WordArray.random(u - 1)).concat(i.lib.WordArray.create([u << 24], 1));
                  },
                  unpad: function(n) {
                    var o = n.words[n.sigBytes - 1 >>> 2] & 255;
                    n.sigBytes -= o;
                  }
                }, i.pad.Iso10126;
              });
            }
          ),
          /***/
          14623: (
            /***/
            function(f, d, t) {
              t(39081), function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              }(void 0, function(i) {
                return i.pad.Iso97971 = {
                  pad: function(n, o) {
                    n.concat(i.lib.WordArray.create([2147483648], 1)), i.pad.ZeroPadding.pad(n, o);
                  },
                  unpad: function(n) {
                    i.pad.ZeroPadding.unpad(n), n.sigBytes--;
                  }
                }, i.pad.Iso97971;
              });
            }
          ),
          /***/
          61807: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              })(void 0, function(i) {
                return i.pad.NoPadding = {
                  pad: function() {
                  },
                  unpad: function() {
                  }
                }, i.pad.NoPadding;
              });
            }
          ),
          /***/
          85628: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(51270));
              })(void 0, function(i) {
                return i.pad.ZeroPadding = {
                  pad: function(n, o) {
                    var h = o * 4;
                    n.clamp(), n.sigBytes += h - (n.sigBytes % h || h);
                  },
                  unpad: function(n) {
                    for (var o = n.words, h = n.sigBytes - 1, h = n.sigBytes - 1; h >= 0; h--)
                      if (o[h >>> 2] >>> 24 - h % 4 * 8 & 255) {
                        n.sigBytes = h + 1;
                        break;
                      }
                  }
                }, i.pad.ZeroPadding;
              });
            }
          ),
          /***/
          44130: (
            /***/
            function(f, d, t) {
              t(39081), function(i, r, n) {
                f.exports = r(t(48352), t(66664), t(4420));
              }(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.Base, h = n.WordArray, u = r.algo, l = u.SHA256, c = u.HMAC, s = u.PBKDF2 = o.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                     * @property {Hasher} hasher The hasher to use. Default: SHA256
                     * @property {number} iterations The number of iterations to perform. Default: 250000
                     */
                    cfg: o.extend({
                      keySize: 128 / 32,
                      hasher: l,
                      iterations: 25e4
                    }),
                    /**
                     * Initializes a newly created key derivation function.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                     *
                     * @example
                     *
                     *     var kdf = CryptoJS.algo.PBKDF2.create();
                     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
                     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
                     */
                    init: function(y) {
                      this.cfg = this.cfg.extend(y);
                    },
                    /**
                     * Computes the Password-Based Key Derivation Function 2.
                     *
                     * @param {WordArray|string} password The password.
                     * @param {WordArray|string} salt A salt.
                     *
                     * @return {WordArray} The derived key.
                     *
                     * @example
                     *
                     *     var key = kdf.compute(password, salt);
                     */
                    compute: function(y, x) {
                      for (var e = this.cfg, b = c.create(e.hasher, y), A = h.create(), P = h.create([1]), D = A.words, E = P.words, T = e.keySize, C = e.iterations; D.length < T; ) {
                        var F = b.update(x).finalize(P);
                        b.reset();
                        for (var m = F.words, I = m.length, O = F, M = 1; M < C; M++) {
                          O = b.finalize(O), b.reset();
                          for (var N = O.words, G = 0; G < I; G++)
                            m[G] ^= N[G];
                        }
                        A.concat(F), E[0]++;
                      }
                      return A.sigBytes = T * 4, A;
                    }
                  });
                  r.PBKDF2 = function(v, y, x) {
                    return s.create(x).compute(v, y);
                  };
                }(), i.PBKDF2;
              });
            }
          ),
          /***/
          75891: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(66947), t(68319), t(82747), t(51270));
              })(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.StreamCipher, h = r.algo, u = [], l = [], c = [], s = h.RabbitLegacy = o.extend({
                    _doReset: function() {
                      var x = this._key.words, e = this.cfg.iv, b = this._X = [x[0], x[3] << 16 | x[2] >>> 16, x[1], x[0] << 16 | x[3] >>> 16, x[2], x[1] << 16 | x[0] >>> 16, x[3], x[2] << 16 | x[1] >>> 16], A = this._C = [x[2] << 16 | x[2] >>> 16, x[0] & 4294901760 | x[1] & 65535, x[3] << 16 | x[3] >>> 16, x[1] & 4294901760 | x[2] & 65535, x[0] << 16 | x[0] >>> 16, x[2] & 4294901760 | x[3] & 65535, x[1] << 16 | x[1] >>> 16, x[3] & 4294901760 | x[0] & 65535];
                      this._b = 0;
                      for (var P = 0; P < 4; P++)
                        v.call(this);
                      for (var P = 0; P < 8; P++)
                        A[P] ^= b[P + 4 & 7];
                      if (e) {
                        var D = e.words, E = D[0], T = D[1], C = (E << 8 | E >>> 24) & 16711935 | (E << 24 | E >>> 8) & 4278255360, F = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, m = C >>> 16 | F & 4294901760, I = F << 16 | C & 65535;
                        A[0] ^= C, A[1] ^= m, A[2] ^= F, A[3] ^= I, A[4] ^= C, A[5] ^= m, A[6] ^= F, A[7] ^= I;
                        for (var P = 0; P < 4; P++)
                          v.call(this);
                      }
                    },
                    _doProcessBlock: function(x, e) {
                      var b = this._X;
                      v.call(this), u[0] = b[0] ^ b[5] >>> 16 ^ b[3] << 16, u[1] = b[2] ^ b[7] >>> 16 ^ b[5] << 16, u[2] = b[4] ^ b[1] >>> 16 ^ b[7] << 16, u[3] = b[6] ^ b[3] >>> 16 ^ b[1] << 16;
                      for (var A = 0; A < 4; A++)
                        u[A] = (u[A] << 8 | u[A] >>> 24) & 16711935 | (u[A] << 24 | u[A] >>> 8) & 4278255360, x[e + A] ^= u[A];
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  function v() {
                    for (var y = this._X, x = this._C, e = 0; e < 8; e++)
                      l[e] = x[e];
                    x[0] = x[0] + 1295307597 + this._b | 0, x[1] = x[1] + 3545052371 + (x[0] >>> 0 < l[0] >>> 0 ? 1 : 0) | 0, x[2] = x[2] + 886263092 + (x[1] >>> 0 < l[1] >>> 0 ? 1 : 0) | 0, x[3] = x[3] + 1295307597 + (x[2] >>> 0 < l[2] >>> 0 ? 1 : 0) | 0, x[4] = x[4] + 3545052371 + (x[3] >>> 0 < l[3] >>> 0 ? 1 : 0) | 0, x[5] = x[5] + 886263092 + (x[4] >>> 0 < l[4] >>> 0 ? 1 : 0) | 0, x[6] = x[6] + 1295307597 + (x[5] >>> 0 < l[5] >>> 0 ? 1 : 0) | 0, x[7] = x[7] + 3545052371 + (x[6] >>> 0 < l[6] >>> 0 ? 1 : 0) | 0, this._b = x[7] >>> 0 < l[7] >>> 0 ? 1 : 0;
                    for (var e = 0; e < 8; e++) {
                      var b = y[e] + x[e], A = b & 65535, P = b >>> 16, D = ((A * A >>> 17) + A * P >>> 15) + P * P, E = ((b & 4294901760) * b | 0) + ((b & 65535) * b | 0);
                      c[e] = D ^ E;
                    }
                    y[0] = c[0] + (c[7] << 16 | c[7] >>> 16) + (c[6] << 16 | c[6] >>> 16) | 0, y[1] = c[1] + (c[0] << 8 | c[0] >>> 24) + c[7] | 0, y[2] = c[2] + (c[1] << 16 | c[1] >>> 16) + (c[0] << 16 | c[0] >>> 16) | 0, y[3] = c[3] + (c[2] << 8 | c[2] >>> 24) + c[1] | 0, y[4] = c[4] + (c[3] << 16 | c[3] >>> 16) + (c[2] << 16 | c[2] >>> 16) | 0, y[5] = c[5] + (c[4] << 8 | c[4] >>> 24) + c[3] | 0, y[6] = c[6] + (c[5] << 16 | c[5] >>> 16) + (c[4] << 16 | c[4] >>> 16) | 0, y[7] = c[7] + (c[6] << 8 | c[6] >>> 24) + c[5] | 0;
                  }
                  r.RabbitLegacy = o._createHelper(s);
                }(), i.RabbitLegacy;
              });
            }
          ),
          /***/
          6819: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(66947), t(68319), t(82747), t(51270));
              })(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.StreamCipher, h = r.algo, u = [], l = [], c = [], s = h.Rabbit = o.extend({
                    _doReset: function() {
                      for (var x = this._key.words, e = this.cfg.iv, b = 0; b < 4; b++)
                        x[b] = (x[b] << 8 | x[b] >>> 24) & 16711935 | (x[b] << 24 | x[b] >>> 8) & 4278255360;
                      var A = this._X = [x[0], x[3] << 16 | x[2] >>> 16, x[1], x[0] << 16 | x[3] >>> 16, x[2], x[1] << 16 | x[0] >>> 16, x[3], x[2] << 16 | x[1] >>> 16], P = this._C = [x[2] << 16 | x[2] >>> 16, x[0] & 4294901760 | x[1] & 65535, x[3] << 16 | x[3] >>> 16, x[1] & 4294901760 | x[2] & 65535, x[0] << 16 | x[0] >>> 16, x[2] & 4294901760 | x[3] & 65535, x[1] << 16 | x[1] >>> 16, x[3] & 4294901760 | x[0] & 65535];
                      this._b = 0;
                      for (var b = 0; b < 4; b++)
                        v.call(this);
                      for (var b = 0; b < 8; b++)
                        P[b] ^= A[b + 4 & 7];
                      if (e) {
                        var D = e.words, E = D[0], T = D[1], C = (E << 8 | E >>> 24) & 16711935 | (E << 24 | E >>> 8) & 4278255360, F = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, m = C >>> 16 | F & 4294901760, I = F << 16 | C & 65535;
                        P[0] ^= C, P[1] ^= m, P[2] ^= F, P[3] ^= I, P[4] ^= C, P[5] ^= m, P[6] ^= F, P[7] ^= I;
                        for (var b = 0; b < 4; b++)
                          v.call(this);
                      }
                    },
                    _doProcessBlock: function(x, e) {
                      var b = this._X;
                      v.call(this), u[0] = b[0] ^ b[5] >>> 16 ^ b[3] << 16, u[1] = b[2] ^ b[7] >>> 16 ^ b[5] << 16, u[2] = b[4] ^ b[1] >>> 16 ^ b[7] << 16, u[3] = b[6] ^ b[3] >>> 16 ^ b[1] << 16;
                      for (var A = 0; A < 4; A++)
                        u[A] = (u[A] << 8 | u[A] >>> 24) & 16711935 | (u[A] << 24 | u[A] >>> 8) & 4278255360, x[e + A] ^= u[A];
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  function v() {
                    for (var y = this._X, x = this._C, e = 0; e < 8; e++)
                      l[e] = x[e];
                    x[0] = x[0] + 1295307597 + this._b | 0, x[1] = x[1] + 3545052371 + (x[0] >>> 0 < l[0] >>> 0 ? 1 : 0) | 0, x[2] = x[2] + 886263092 + (x[1] >>> 0 < l[1] >>> 0 ? 1 : 0) | 0, x[3] = x[3] + 1295307597 + (x[2] >>> 0 < l[2] >>> 0 ? 1 : 0) | 0, x[4] = x[4] + 3545052371 + (x[3] >>> 0 < l[3] >>> 0 ? 1 : 0) | 0, x[5] = x[5] + 886263092 + (x[4] >>> 0 < l[4] >>> 0 ? 1 : 0) | 0, x[6] = x[6] + 1295307597 + (x[5] >>> 0 < l[5] >>> 0 ? 1 : 0) | 0, x[7] = x[7] + 3545052371 + (x[6] >>> 0 < l[6] >>> 0 ? 1 : 0) | 0, this._b = x[7] >>> 0 < l[7] >>> 0 ? 1 : 0;
                    for (var e = 0; e < 8; e++) {
                      var b = y[e] + x[e], A = b & 65535, P = b >>> 16, D = ((A * A >>> 17) + A * P >>> 15) + P * P, E = ((b & 4294901760) * b | 0) + ((b & 65535) * b | 0);
                      c[e] = D ^ E;
                    }
                    y[0] = c[0] + (c[7] << 16 | c[7] >>> 16) + (c[6] << 16 | c[6] >>> 16) | 0, y[1] = c[1] + (c[0] << 8 | c[0] >>> 24) + c[7] | 0, y[2] = c[2] + (c[1] << 16 | c[1] >>> 16) + (c[0] << 16 | c[0] >>> 16) | 0, y[3] = c[3] + (c[2] << 8 | c[2] >>> 24) + c[1] | 0, y[4] = c[4] + (c[3] << 16 | c[3] >>> 16) + (c[2] << 16 | c[2] >>> 16) | 0, y[5] = c[5] + (c[4] << 8 | c[4] >>> 24) + c[3] | 0, y[6] = c[6] + (c[5] << 16 | c[5] >>> 16) + (c[4] << 16 | c[4] >>> 16) | 0, y[7] = c[7] + (c[6] << 8 | c[6] >>> 24) + c[5] | 0;
                  }
                  r.Rabbit = o._createHelper(s);
                }(), i.Rabbit;
              });
            }
          ),
          /***/
          95086: (
            /***/
            function(f, d, t) {
              t(14032), t(68067), function(i, r, n) {
                f.exports = r(t(48352), t(66947), t(68319), t(82747), t(51270));
              }(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.StreamCipher, h = r.algo, u = h.RC4 = o.extend({
                    _doReset: function() {
                      for (var v = this._key, y = v.words, x = v.sigBytes, e = this._S = [], b = 0; b < 256; b++)
                        e[b] = b;
                      for (var b = 0, A = 0; b < 256; b++) {
                        var P = b % x, D = y[P >>> 2] >>> 24 - P % 4 * 8 & 255;
                        A = (A + e[b] + D) % 256;
                        var E = e[b];
                        e[b] = e[A], e[A] = E;
                      }
                      this._i = this._j = 0;
                    },
                    _doProcessBlock: function(v, y) {
                      v[y] ^= l.call(this);
                    },
                    keySize: 256 / 32,
                    ivSize: 0
                  });
                  function l() {
                    for (var s = this._S, v = this._i, y = this._j, x = 0, e = 0; e < 4; e++) {
                      v = (v + 1) % 256, y = (y + s[v]) % 256;
                      var b = s[v];
                      s[v] = s[y], s[y] = b, x |= s[(s[v] + s[y]) % 256] << 24 - e * 8;
                    }
                    return this._i = v, this._j = y, x;
                  }
                  r.RC4 = o._createHelper(u);
                  var c = h.RC4Drop = u.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} drop The number of keystream words to drop. Default 192
                     */
                    cfg: u.cfg.extend({
                      drop: 192
                    }),
                    _doReset: function() {
                      u._doReset.call(this);
                      for (var v = this.cfg.drop; v > 0; v--)
                        l.call(this);
                    }
                  });
                  r.RC4Drop = o._createHelper(c);
                }(), i.RC4;
              });
            }
          ),
          /***/
          1239: (
            /***/
            function(f, d, t) {
              (function(i, r) {
                f.exports = r(t(48352));
              })(void 0, function(i) {
                /** @preserve
                (c) 2012 by CÃ©dric Mesnil. All rights reserved.
                	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
                	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                */
                return function(r) {
                  var n = i, o = n.lib, h = o.WordArray, u = o.Hasher, l = n.algo, c = h.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), s = h.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), v = h.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), y = h.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), x = h.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), e = h.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), b = l.RIPEMD160 = u.extend({
                    _doReset: function() {
                      this._hash = h.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function(m, I) {
                      for (var O = 0; O < 16; O++) {
                        var M = I + O, N = m[M];
                        m[M] = (N << 8 | N >>> 24) & 16711935 | (N << 24 | N >>> 8) & 4278255360;
                      }
                      var G = this._hash.words, ot = x.words, K = e.words, nt = c.words, xt = s.words, bt = v.words, St = y.words, Dt, Lt, jt, J, yt, ut, st, wt, V, Ft;
                      ut = Dt = G[0], st = Lt = G[1], wt = jt = G[2], V = J = G[3], Ft = yt = G[4];
                      for (var U, O = 0; O < 80; O += 1)
                        U = Dt + m[I + nt[O]] | 0, O < 16 ? U += A(Lt, jt, J) + ot[0] : O < 32 ? U += P(Lt, jt, J) + ot[1] : O < 48 ? U += D(Lt, jt, J) + ot[2] : O < 64 ? U += E(Lt, jt, J) + ot[3] : U += T(Lt, jt, J) + ot[4], U = U | 0, U = C(U, bt[O]), U = U + yt | 0, Dt = yt, yt = J, J = C(jt, 10), jt = Lt, Lt = U, U = ut + m[I + xt[O]] | 0, O < 16 ? U += T(st, wt, V) + K[0] : O < 32 ? U += E(st, wt, V) + K[1] : O < 48 ? U += D(st, wt, V) + K[2] : O < 64 ? U += P(st, wt, V) + K[3] : U += A(st, wt, V) + K[4], U = U | 0, U = C(U, St[O]), U = U + Ft | 0, ut = Ft, Ft = V, V = C(wt, 10), wt = st, st = U;
                      U = G[1] + jt + V | 0, G[1] = G[2] + J + Ft | 0, G[2] = G[3] + yt + ut | 0, G[3] = G[4] + Dt + st | 0, G[4] = G[0] + Lt + wt | 0, G[0] = U;
                    },
                    _doFinalize: function() {
                      var m = this._data, I = m.words, O = this._nDataBytes * 8, M = m.sigBytes * 8;
                      I[M >>> 5] |= 128 << 24 - M % 32, I[(M + 64 >>> 9 << 4) + 14] = (O << 8 | O >>> 24) & 16711935 | (O << 24 | O >>> 8) & 4278255360, m.sigBytes = (I.length + 1) * 4, this._process();
                      for (var N = this._hash, G = N.words, ot = 0; ot < 5; ot++) {
                        var K = G[ot];
                        G[ot] = (K << 8 | K >>> 24) & 16711935 | (K << 24 | K >>> 8) & 4278255360;
                      }
                      return N;
                    },
                    clone: function() {
                      var m = u.clone.call(this);
                      return m._hash = this._hash.clone(), m;
                    }
                  });
                  function A(F, m, I) {
                    return F ^ m ^ I;
                  }
                  function P(F, m, I) {
                    return F & m | ~F & I;
                  }
                  function D(F, m, I) {
                    return (F | ~m) ^ I;
                  }
                  function E(F, m, I) {
                    return F & I | m & ~I;
                  }
                  function T(F, m, I) {
                    return F ^ (m | ~I);
                  }
                  function C(F, m) {
                    return F << m | F >>> 32 - m;
                  }
                  n.RIPEMD160 = u._createHelper(b), n.HmacRIPEMD160 = u._createHmacHelper(b);
                }(), i.RIPEMD160;
              });
            }
          ),
          /***/
          37146: (
            /***/
            function(f, d, t) {
              (function(i, r) {
                f.exports = r(t(48352));
              })(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.WordArray, h = n.Hasher, u = r.algo, l = [], c = u.SHA1 = h.extend({
                    _doReset: function() {
                      this._hash = new o.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function(v, y) {
                      for (var x = this._hash.words, e = x[0], b = x[1], A = x[2], P = x[3], D = x[4], E = 0; E < 80; E++) {
                        if (E < 16)
                          l[E] = v[y + E] | 0;
                        else {
                          var T = l[E - 3] ^ l[E - 8] ^ l[E - 14] ^ l[E - 16];
                          l[E] = T << 1 | T >>> 31;
                        }
                        var C = (e << 5 | e >>> 27) + D + l[E];
                        E < 20 ? C += (b & A | ~b & P) + 1518500249 : E < 40 ? C += (b ^ A ^ P) + 1859775393 : E < 60 ? C += (b & A | b & P | A & P) - 1894007588 : C += (b ^ A ^ P) - 899497514, D = P, P = A, A = b << 30 | b >>> 2, b = e, e = C;
                      }
                      x[0] = x[0] + e | 0, x[1] = x[1] + b | 0, x[2] = x[2] + A | 0, x[3] = x[3] + P | 0, x[4] = x[4] + D | 0;
                    },
                    _doFinalize: function() {
                      var v = this._data, y = v.words, x = this._nDataBytes * 8, e = v.sigBytes * 8;
                      return y[e >>> 5] |= 128 << 24 - e % 32, y[(e + 64 >>> 9 << 4) + 14] = Math.floor(x / 4294967296), y[(e + 64 >>> 9 << 4) + 15] = x, v.sigBytes = y.length * 4, this._process(), this._hash;
                    },
                    clone: function() {
                      var v = h.clone.call(this);
                      return v._hash = this._hash.clone(), v;
                    }
                  });
                  r.SHA1 = h._createHelper(c), r.HmacSHA1 = h._createHmacHelper(c);
                }(), i.SHA1;
              });
            }
          ),
          /***/
          11905: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(66664));
              })(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.WordArray, h = r.algo, u = h.SHA256, l = h.SHA224 = u.extend({
                    _doReset: function() {
                      this._hash = new o.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
                    },
                    _doFinalize: function() {
                      var s = u._doFinalize.call(this);
                      return s.sigBytes -= 4, s;
                    }
                  });
                  r.SHA224 = u._createHelper(l), r.HmacSHA224 = u._createHmacHelper(l);
                }(), i.SHA224;
              });
            }
          ),
          /***/
          66664: (
            /***/
            function(f, d, t) {
              t(20731), function(i, r) {
                f.exports = r(t(48352));
              }(void 0, function(i) {
                return function(r) {
                  var n = i, o = n.lib, h = o.WordArray, u = o.Hasher, l = n.algo, c = [], s = [];
                  (function() {
                    function x(P) {
                      for (var D = r.sqrt(P), E = 2; E <= D; E++)
                        if (!(P % E))
                          return !1;
                      return !0;
                    }
                    function e(P) {
                      return (P - (P | 0)) * 4294967296 | 0;
                    }
                    for (var b = 2, A = 0; A < 64; )
                      x(b) && (A < 8 && (c[A] = e(r.pow(b, 0.5))), s[A] = e(r.pow(b, 0.3333333333333333)), A++), b++;
                  })();
                  var v = [], y = l.SHA256 = u.extend({
                    _doReset: function() {
                      this._hash = new h.init(c.slice(0));
                    },
                    _doProcessBlock: function(e, b) {
                      for (var A = this._hash.words, P = A[0], D = A[1], E = A[2], T = A[3], C = A[4], F = A[5], m = A[6], I = A[7], O = 0; O < 64; O++) {
                        if (O < 16)
                          v[O] = e[b + O] | 0;
                        else {
                          var M = v[O - 15], N = (M << 25 | M >>> 7) ^ (M << 14 | M >>> 18) ^ M >>> 3, G = v[O - 2], ot = (G << 15 | G >>> 17) ^ (G << 13 | G >>> 19) ^ G >>> 10;
                          v[O] = N + v[O - 7] + ot + v[O - 16];
                        }
                        var K = C & F ^ ~C & m, nt = P & D ^ P & E ^ D & E, xt = (P << 30 | P >>> 2) ^ (P << 19 | P >>> 13) ^ (P << 10 | P >>> 22), bt = (C << 26 | C >>> 6) ^ (C << 21 | C >>> 11) ^ (C << 7 | C >>> 25), St = I + bt + K + s[O] + v[O], Dt = xt + nt;
                        I = m, m = F, F = C, C = T + St | 0, T = E, E = D, D = P, P = St + Dt | 0;
                      }
                      A[0] = A[0] + P | 0, A[1] = A[1] + D | 0, A[2] = A[2] + E | 0, A[3] = A[3] + T | 0, A[4] = A[4] + C | 0, A[5] = A[5] + F | 0, A[6] = A[6] + m | 0, A[7] = A[7] + I | 0;
                    },
                    _doFinalize: function() {
                      var e = this._data, b = e.words, A = this._nDataBytes * 8, P = e.sigBytes * 8;
                      return b[P >>> 5] |= 128 << 24 - P % 32, b[(P + 64 >>> 9 << 4) + 14] = r.floor(A / 4294967296), b[(P + 64 >>> 9 << 4) + 15] = A, e.sigBytes = b.length * 4, this._process(), this._hash;
                    },
                    clone: function() {
                      var e = u.clone.call(this);
                      return e._hash = this._hash.clone(), e;
                    }
                  });
                  n.SHA256 = u._createHelper(y), n.HmacSHA256 = u._createHmacHelper(y);
                }(Math), i.SHA256;
              });
            }
          ),
          /***/
          16720: (
            /***/
            function(f, d, t) {
              t(20731), function(i, r, n) {
                f.exports = r(t(48352), t(18909));
              }(void 0, function(i) {
                return function(r) {
                  var n = i, o = n.lib, h = o.WordArray, u = o.Hasher, l = n.x64, c = l.Word, s = n.algo, v = [], y = [], x = [];
                  (function() {
                    for (var A = 1, P = 0, D = 0; D < 24; D++) {
                      v[A + 5 * P] = (D + 1) * (D + 2) / 2 % 64;
                      var E = P % 5, T = (2 * A + 3 * P) % 5;
                      A = E, P = T;
                    }
                    for (var A = 0; A < 5; A++)
                      for (var P = 0; P < 5; P++)
                        y[A + 5 * P] = P + (2 * A + 3 * P) % 5 * 5;
                    for (var C = 1, F = 0; F < 24; F++) {
                      for (var m = 0, I = 0, O = 0; O < 7; O++) {
                        if (C & 1) {
                          var M = (1 << O) - 1;
                          M < 32 ? I ^= 1 << M : m ^= 1 << M - 32;
                        }
                        C & 128 ? C = C << 1 ^ 113 : C <<= 1;
                      }
                      x[F] = c.create(m, I);
                    }
                  })();
                  var e = [];
                  (function() {
                    for (var A = 0; A < 25; A++)
                      e[A] = c.create();
                  })();
                  var b = s.SHA3 = u.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} outputLength
                     *   The desired number of bits in the output hash.
                     *   Only values permitted are: 224, 256, 384, 512.
                     *   Default: 512
                     */
                    cfg: u.cfg.extend({
                      outputLength: 512
                    }),
                    _doReset: function() {
                      for (var P = this._state = [], D = 0; D < 25; D++)
                        P[D] = new c.init();
                      this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
                    },
                    _doProcessBlock: function(P, D) {
                      for (var E = this._state, T = this.blockSize / 2, C = 0; C < T; C++) {
                        var F = P[D + 2 * C], m = P[D + 2 * C + 1];
                        F = (F << 8 | F >>> 24) & 16711935 | (F << 24 | F >>> 8) & 4278255360, m = (m << 8 | m >>> 24) & 16711935 | (m << 24 | m >>> 8) & 4278255360;
                        var I = E[C];
                        I.high ^= m, I.low ^= F;
                      }
                      for (var O = 0; O < 24; O++) {
                        for (var M = 0; M < 5; M++) {
                          for (var N = 0, G = 0, ot = 0; ot < 5; ot++) {
                            var I = E[M + 5 * ot];
                            N ^= I.high, G ^= I.low;
                          }
                          var K = e[M];
                          K.high = N, K.low = G;
                        }
                        for (var M = 0; M < 5; M++)
                          for (var nt = e[(M + 4) % 5], xt = e[(M + 1) % 5], bt = xt.high, St = xt.low, N = nt.high ^ (bt << 1 | St >>> 31), G = nt.low ^ (St << 1 | bt >>> 31), ot = 0; ot < 5; ot++) {
                            var I = E[M + 5 * ot];
                            I.high ^= N, I.low ^= G;
                          }
                        for (var Dt = 1; Dt < 25; Dt++) {
                          var N, G, I = E[Dt], Lt = I.high, jt = I.low, J = v[Dt];
                          J < 32 ? (N = Lt << J | jt >>> 32 - J, G = jt << J | Lt >>> 32 - J) : (N = jt << J - 32 | Lt >>> 64 - J, G = Lt << J - 32 | jt >>> 64 - J);
                          var yt = e[y[Dt]];
                          yt.high = N, yt.low = G;
                        }
                        var ut = e[0], st = E[0];
                        ut.high = st.high, ut.low = st.low;
                        for (var M = 0; M < 5; M++)
                          for (var ot = 0; ot < 5; ot++) {
                            var Dt = M + 5 * ot, I = E[Dt], wt = e[Dt], V = e[(M + 1) % 5 + 5 * ot], Ft = e[(M + 2) % 5 + 5 * ot];
                            I.high = wt.high ^ ~V.high & Ft.high, I.low = wt.low ^ ~V.low & Ft.low;
                          }
                        var I = E[0], U = x[O];
                        I.high ^= U.high, I.low ^= U.low;
                      }
                    },
                    _doFinalize: function() {
                      var P = this._data, D = P.words;
                      this._nDataBytes * 8;
                      var E = P.sigBytes * 8, T = this.blockSize * 32;
                      D[E >>> 5] |= 1 << 24 - E % 32, D[(r.ceil((E + 1) / T) * T >>> 5) - 1] |= 128, P.sigBytes = D.length * 4, this._process();
                      for (var C = this._state, F = this.cfg.outputLength / 8, m = F / 8, I = [], O = 0; O < m; O++) {
                        var M = C[O], N = M.high, G = M.low;
                        N = (N << 8 | N >>> 24) & 16711935 | (N << 24 | N >>> 8) & 4278255360, G = (G << 8 | G >>> 24) & 16711935 | (G << 24 | G >>> 8) & 4278255360, I.push(G), I.push(N);
                      }
                      return new h.init(I, F);
                    },
                    clone: function() {
                      for (var P = u.clone.call(this), D = P._state = this._state.slice(0), E = 0; E < 25; E++)
                        D[E] = D[E].clone();
                      return P;
                    }
                  });
                  n.SHA3 = u._createHelper(b), n.HmacSHA3 = u._createHmacHelper(b);
                }(Math), i.SHA3;
              });
            }
          ),
          /***/
          27772: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(18909), t(51965));
              })(void 0, function(i) {
                return function() {
                  var r = i, n = r.x64, o = n.Word, h = n.WordArray, u = r.algo, l = u.SHA512, c = u.SHA384 = l.extend({
                    _doReset: function() {
                      this._hash = new h.init([new o.init(3418070365, 3238371032), new o.init(1654270250, 914150663), new o.init(2438529370, 812702999), new o.init(355462360, 4144912697), new o.init(1731405415, 4290775857), new o.init(2394180231, 1750603025), new o.init(3675008525, 1694076839), new o.init(1203062813, 3204075428)]);
                    },
                    _doFinalize: function() {
                      var v = l._doFinalize.call(this);
                      return v.sigBytes -= 16, v;
                    }
                  });
                  r.SHA384 = l._createHelper(c), r.HmacSHA384 = l._createHmacHelper(c);
                }(), i.SHA384;
              });
            }
          ),
          /***/
          51965: (
            /***/
            function(f, d, t) {
              (function(i, r, n) {
                f.exports = r(t(48352), t(18909));
              })(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.Hasher, h = r.x64, u = h.Word, l = h.WordArray, c = r.algo;
                  function s() {
                    return u.create.apply(u, arguments);
                  }
                  var v = [s(1116352408, 3609767458), s(1899447441, 602891725), s(3049323471, 3964484399), s(3921009573, 2173295548), s(961987163, 4081628472), s(1508970993, 3053834265), s(2453635748, 2937671579), s(2870763221, 3664609560), s(3624381080, 2734883394), s(310598401, 1164996542), s(607225278, 1323610764), s(1426881987, 3590304994), s(1925078388, 4068182383), s(2162078206, 991336113), s(2614888103, 633803317), s(3248222580, 3479774868), s(3835390401, 2666613458), s(4022224774, 944711139), s(264347078, 2341262773), s(604807628, 2007800933), s(770255983, 1495990901), s(1249150122, 1856431235), s(1555081692, 3175218132), s(1996064986, 2198950837), s(2554220882, 3999719339), s(2821834349, 766784016), s(2952996808, 2566594879), s(3210313671, 3203337956), s(3336571891, 1034457026), s(3584528711, 2466948901), s(113926993, 3758326383), s(338241895, 168717936), s(666307205, 1188179964), s(773529912, 1546045734), s(1294757372, 1522805485), s(1396182291, 2643833823), s(1695183700, 2343527390), s(1986661051, 1014477480), s(2177026350, 1206759142), s(2456956037, 344077627), s(2730485921, 1290863460), s(2820302411, 3158454273), s(3259730800, 3505952657), s(3345764771, 106217008), s(3516065817, 3606008344), s(3600352804, 1432725776), s(4094571909, 1467031594), s(275423344, 851169720), s(430227734, 3100823752), s(506948616, 1363258195), s(659060556, 3750685593), s(883997877, 3785050280), s(958139571, 3318307427), s(1322822218, 3812723403), s(1537002063, 2003034995), s(1747873779, 3602036899), s(1955562222, 1575990012), s(2024104815, 1125592928), s(2227730452, 2716904306), s(2361852424, 442776044), s(2428436474, 593698344), s(2756734187, 3733110249), s(3204031479, 2999351573), s(3329325298, 3815920427), s(3391569614, 3928383900), s(3515267271, 566280711), s(3940187606, 3454069534), s(4118630271, 4000239992), s(116418474, 1914138554), s(174292421, 2731055270), s(289380356, 3203993006), s(460393269, 320620315), s(685471733, 587496836), s(852142971, 1086792851), s(1017036298, 365543100), s(1126000580, 2618297676), s(1288033470, 3409855158), s(1501505948, 4234509866), s(1607167915, 987167468), s(1816402316, 1246189591)], y = [];
                  (function() {
                    for (var e = 0; e < 80; e++)
                      y[e] = s();
                  })();
                  var x = c.SHA512 = o.extend({
                    _doReset: function() {
                      this._hash = new l.init([new u.init(1779033703, 4089235720), new u.init(3144134277, 2227873595), new u.init(1013904242, 4271175723), new u.init(2773480762, 1595750129), new u.init(1359893119, 2917565137), new u.init(2600822924, 725511199), new u.init(528734635, 4215389547), new u.init(1541459225, 327033209)]);
                    },
                    _doProcessBlock: function(b, A) {
                      for (var P = this._hash.words, D = P[0], E = P[1], T = P[2], C = P[3], F = P[4], m = P[5], I = P[6], O = P[7], M = D.high, N = D.low, G = E.high, ot = E.low, K = T.high, nt = T.low, xt = C.high, bt = C.low, St = F.high, Dt = F.low, Lt = m.high, jt = m.low, J = I.high, yt = I.low, ut = O.high, st = O.low, wt = M, V = N, Ft = G, U = ot, S = K, k = nt, H = xt, it = bt, et = St, tt = Dt, Ct = Lt, Rt = jt, Kt = J, Gt = yt, It = ut, re = st, be = 0; be < 80; be++) {
                        var me, le, Se = y[be];
                        if (be < 16)
                          le = Se.high = b[A + be * 2] | 0, me = Se.low = b[A + be * 2 + 1] | 0;
                        else {
                          var Wt = y[be - 15], $t = Wt.high, ue = Wt.low, he = ($t >>> 1 | ue << 31) ^ ($t >>> 8 | ue << 24) ^ $t >>> 7, Ee = (ue >>> 1 | $t << 31) ^ (ue >>> 8 | $t << 24) ^ (ue >>> 7 | $t << 25), Re = y[be - 2], Ie = Re.high, Ot = Re.low, vt = (Ie >>> 19 | Ot << 13) ^ (Ie << 3 | Ot >>> 29) ^ Ie >>> 6, W = (Ot >>> 19 | Ie << 13) ^ (Ot << 3 | Ie >>> 29) ^ (Ot >>> 6 | Ie << 26), Q = y[be - 7], gt = Q.high, Pt = Q.low, ht = y[be - 16], Ht = ht.high, we = ht.low;
                          me = Ee + Pt, le = he + gt + (me >>> 0 < Ee >>> 0 ? 1 : 0), me = me + W, le = le + vt + (me >>> 0 < W >>> 0 ? 1 : 0), me = me + we, le = le + Ht + (me >>> 0 < we >>> 0 ? 1 : 0), Se.high = le, Se.low = me;
                        }
                        var rt = et & Ct ^ ~et & Kt, _t = tt & Rt ^ ~tt & Gt, ae = wt & Ft ^ wt & S ^ Ft & S, Et = V & U ^ V & k ^ U & k, Zt = (wt >>> 28 | V << 4) ^ (wt << 30 | V >>> 2) ^ (wt << 25 | V >>> 7), fe = (V >>> 28 | wt << 4) ^ (V << 30 | wt >>> 2) ^ (V << 25 | wt >>> 7), Ue = (et >>> 14 | tt << 18) ^ (et >>> 18 | tt << 14) ^ (et << 23 | tt >>> 9), Be = (tt >>> 14 | et << 18) ^ (tt >>> 18 | et << 14) ^ (tt << 23 | et >>> 9), ke = v[be], He = ke.high, nn = ke.low, er = re + Be, Te = It + Ue + (er >>> 0 < re >>> 0 ? 1 : 0), er = er + _t, Te = Te + rt + (er >>> 0 < _t >>> 0 ? 1 : 0), er = er + nn, Te = Te + He + (er >>> 0 < nn >>> 0 ? 1 : 0), er = er + me, Te = Te + le + (er >>> 0 < me >>> 0 ? 1 : 0), Oe = fe + Et, Xe = Zt + ae + (Oe >>> 0 < fe >>> 0 ? 1 : 0);
                        It = Kt, re = Gt, Kt = Ct, Gt = Rt, Ct = et, Rt = tt, tt = it + er | 0, et = H + Te + (tt >>> 0 < it >>> 0 ? 1 : 0) | 0, H = S, it = k, S = Ft, k = U, Ft = wt, U = V, V = er + Oe | 0, wt = Te + Xe + (V >>> 0 < er >>> 0 ? 1 : 0) | 0;
                      }
                      N = D.low = N + V, D.high = M + wt + (N >>> 0 < V >>> 0 ? 1 : 0), ot = E.low = ot + U, E.high = G + Ft + (ot >>> 0 < U >>> 0 ? 1 : 0), nt = T.low = nt + k, T.high = K + S + (nt >>> 0 < k >>> 0 ? 1 : 0), bt = C.low = bt + it, C.high = xt + H + (bt >>> 0 < it >>> 0 ? 1 : 0), Dt = F.low = Dt + tt, F.high = St + et + (Dt >>> 0 < tt >>> 0 ? 1 : 0), jt = m.low = jt + Rt, m.high = Lt + Ct + (jt >>> 0 < Rt >>> 0 ? 1 : 0), yt = I.low = yt + Gt, I.high = J + Kt + (yt >>> 0 < Gt >>> 0 ? 1 : 0), st = O.low = st + re, O.high = ut + It + (st >>> 0 < re >>> 0 ? 1 : 0);
                    },
                    _doFinalize: function() {
                      var b = this._data, A = b.words, P = this._nDataBytes * 8, D = b.sigBytes * 8;
                      A[D >>> 5] |= 128 << 24 - D % 32, A[(D + 128 >>> 10 << 5) + 30] = Math.floor(P / 4294967296), A[(D + 128 >>> 10 << 5) + 31] = P, b.sigBytes = A.length * 4, this._process();
                      var E = this._hash.toX32();
                      return E;
                    },
                    clone: function() {
                      var b = o.clone.call(this);
                      return b._hash = this._hash.clone(), b;
                    },
                    blockSize: 1024 / 32
                  });
                  r.SHA512 = o._createHelper(x), r.HmacSHA512 = o._createHmacHelper(x);
                }(), i.SHA512;
              });
            }
          ),
          /***/
          24107: (
            /***/
            function(f, d, t) {
              t(20731), function(i, r, n) {
                f.exports = r(t(48352), t(66947), t(68319), t(82747), t(51270));
              }(void 0, function(i) {
                return function() {
                  var r = i, n = r.lib, o = n.WordArray, h = n.BlockCipher, u = r.algo, l = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], c = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], s = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], v = [{
                    0: 8421888,
                    268435456: 32768,
                    536870912: 8421378,
                    805306368: 2,
                    1073741824: 512,
                    1342177280: 8421890,
                    1610612736: 8389122,
                    1879048192: 8388608,
                    2147483648: 514,
                    2415919104: 8389120,
                    2684354560: 33280,
                    2952790016: 8421376,
                    3221225472: 32770,
                    3489660928: 8388610,
                    3758096384: 0,
                    4026531840: 33282,
                    134217728: 0,
                    402653184: 8421890,
                    671088640: 33282,
                    939524096: 32768,
                    1207959552: 8421888,
                    1476395008: 512,
                    1744830464: 8421378,
                    2013265920: 2,
                    2281701376: 8389120,
                    2550136832: 33280,
                    2818572288: 8421376,
                    3087007744: 8389122,
                    3355443200: 8388610,
                    3623878656: 32770,
                    3892314112: 514,
                    4160749568: 8388608,
                    1: 32768,
                    268435457: 2,
                    536870913: 8421888,
                    805306369: 8388608,
                    1073741825: 8421378,
                    1342177281: 33280,
                    1610612737: 512,
                    1879048193: 8389122,
                    2147483649: 8421890,
                    2415919105: 8421376,
                    2684354561: 8388610,
                    2952790017: 33282,
                    3221225473: 514,
                    3489660929: 8389120,
                    3758096385: 32770,
                    4026531841: 0,
                    134217729: 8421890,
                    402653185: 8421376,
                    671088641: 8388608,
                    939524097: 512,
                    1207959553: 32768,
                    1476395009: 8388610,
                    1744830465: 2,
                    2013265921: 33282,
                    2281701377: 32770,
                    2550136833: 8389122,
                    2818572289: 514,
                    3087007745: 8421888,
                    3355443201: 8389120,
                    3623878657: 0,
                    3892314113: 33280,
                    4160749569: 8421378
                  }, {
                    0: 1074282512,
                    16777216: 16384,
                    33554432: 524288,
                    50331648: 1074266128,
                    67108864: 1073741840,
                    83886080: 1074282496,
                    100663296: 1073758208,
                    117440512: 16,
                    134217728: 540672,
                    150994944: 1073758224,
                    167772160: 1073741824,
                    184549376: 540688,
                    201326592: 524304,
                    218103808: 0,
                    234881024: 16400,
                    251658240: 1074266112,
                    8388608: 1073758208,
                    25165824: 540688,
                    41943040: 16,
                    58720256: 1073758224,
                    75497472: 1074282512,
                    92274688: 1073741824,
                    109051904: 524288,
                    125829120: 1074266128,
                    142606336: 524304,
                    159383552: 0,
                    176160768: 16384,
                    192937984: 1074266112,
                    209715200: 1073741840,
                    226492416: 540672,
                    243269632: 1074282496,
                    260046848: 16400,
                    268435456: 0,
                    285212672: 1074266128,
                    301989888: 1073758224,
                    318767104: 1074282496,
                    335544320: 1074266112,
                    352321536: 16,
                    369098752: 540688,
                    385875968: 16384,
                    402653184: 16400,
                    419430400: 524288,
                    436207616: 524304,
                    452984832: 1073741840,
                    469762048: 540672,
                    486539264: 1073758208,
                    503316480: 1073741824,
                    520093696: 1074282512,
                    276824064: 540688,
                    293601280: 524288,
                    310378496: 1074266112,
                    327155712: 16384,
                    343932928: 1073758208,
                    360710144: 1074282512,
                    377487360: 16,
                    394264576: 1073741824,
                    411041792: 1074282496,
                    427819008: 1073741840,
                    444596224: 1073758224,
                    461373440: 524304,
                    478150656: 0,
                    494927872: 16400,
                    511705088: 1074266128,
                    528482304: 540672
                  }, {
                    0: 260,
                    1048576: 0,
                    2097152: 67109120,
                    3145728: 65796,
                    4194304: 65540,
                    5242880: 67108868,
                    6291456: 67174660,
                    7340032: 67174400,
                    8388608: 67108864,
                    9437184: 67174656,
                    10485760: 65792,
                    11534336: 67174404,
                    12582912: 67109124,
                    13631488: 65536,
                    14680064: 4,
                    15728640: 256,
                    524288: 67174656,
                    1572864: 67174404,
                    2621440: 0,
                    3670016: 67109120,
                    4718592: 67108868,
                    5767168: 65536,
                    6815744: 65540,
                    7864320: 260,
                    8912896: 4,
                    9961472: 256,
                    11010048: 67174400,
                    12058624: 65796,
                    13107200: 65792,
                    14155776: 67109124,
                    15204352: 67174660,
                    16252928: 67108864,
                    16777216: 67174656,
                    17825792: 65540,
                    18874368: 65536,
                    19922944: 67109120,
                    20971520: 256,
                    22020096: 67174660,
                    23068672: 67108868,
                    24117248: 0,
                    25165824: 67109124,
                    26214400: 67108864,
                    27262976: 4,
                    28311552: 65792,
                    29360128: 67174400,
                    30408704: 260,
                    31457280: 65796,
                    32505856: 67174404,
                    17301504: 67108864,
                    18350080: 260,
                    19398656: 67174656,
                    20447232: 0,
                    21495808: 65540,
                    22544384: 67109120,
                    23592960: 256,
                    24641536: 67174404,
                    25690112: 65536,
                    26738688: 67174660,
                    27787264: 65796,
                    28835840: 67108868,
                    29884416: 67109124,
                    30932992: 67174400,
                    31981568: 4,
                    33030144: 65792
                  }, {
                    0: 2151682048,
                    65536: 2147487808,
                    131072: 4198464,
                    196608: 2151677952,
                    262144: 0,
                    327680: 4198400,
                    393216: 2147483712,
                    458752: 4194368,
                    524288: 2147483648,
                    589824: 4194304,
                    655360: 64,
                    720896: 2147487744,
                    786432: 2151678016,
                    851968: 4160,
                    917504: 4096,
                    983040: 2151682112,
                    32768: 2147487808,
                    98304: 64,
                    163840: 2151678016,
                    229376: 2147487744,
                    294912: 4198400,
                    360448: 2151682112,
                    425984: 0,
                    491520: 2151677952,
                    557056: 4096,
                    622592: 2151682048,
                    688128: 4194304,
                    753664: 4160,
                    819200: 2147483648,
                    884736: 4194368,
                    950272: 4198464,
                    1015808: 2147483712,
                    1048576: 4194368,
                    1114112: 4198400,
                    1179648: 2147483712,
                    1245184: 0,
                    1310720: 4160,
                    1376256: 2151678016,
                    1441792: 2151682048,
                    1507328: 2147487808,
                    1572864: 2151682112,
                    1638400: 2147483648,
                    1703936: 2151677952,
                    1769472: 4198464,
                    1835008: 2147487744,
                    1900544: 4194304,
                    1966080: 64,
                    2031616: 4096,
                    1081344: 2151677952,
                    1146880: 2151682112,
                    1212416: 0,
                    1277952: 4198400,
                    1343488: 4194368,
                    1409024: 2147483648,
                    1474560: 2147487808,
                    1540096: 64,
                    1605632: 2147483712,
                    1671168: 4096,
                    1736704: 2147487744,
                    1802240: 2151678016,
                    1867776: 4160,
                    1933312: 2151682048,
                    1998848: 4194304,
                    2064384: 4198464
                  }, {
                    0: 128,
                    4096: 17039360,
                    8192: 262144,
                    12288: 536870912,
                    16384: 537133184,
                    20480: 16777344,
                    24576: 553648256,
                    28672: 262272,
                    32768: 16777216,
                    36864: 537133056,
                    40960: 536871040,
                    45056: 553910400,
                    49152: 553910272,
                    53248: 0,
                    57344: 17039488,
                    61440: 553648128,
                    2048: 17039488,
                    6144: 553648256,
                    10240: 128,
                    14336: 17039360,
                    18432: 262144,
                    22528: 537133184,
                    26624: 553910272,
                    30720: 536870912,
                    34816: 537133056,
                    38912: 0,
                    43008: 553910400,
                    47104: 16777344,
                    51200: 536871040,
                    55296: 553648128,
                    59392: 16777216,
                    63488: 262272,
                    65536: 262144,
                    69632: 128,
                    73728: 536870912,
                    77824: 553648256,
                    81920: 16777344,
                    86016: 553910272,
                    90112: 537133184,
                    94208: 16777216,
                    98304: 553910400,
                    102400: 553648128,
                    106496: 17039360,
                    110592: 537133056,
                    114688: 262272,
                    118784: 536871040,
                    122880: 0,
                    126976: 17039488,
                    67584: 553648256,
                    71680: 16777216,
                    75776: 17039360,
                    79872: 537133184,
                    83968: 536870912,
                    88064: 17039488,
                    92160: 128,
                    96256: 553910272,
                    100352: 262272,
                    104448: 553910400,
                    108544: 0,
                    112640: 553648128,
                    116736: 16777344,
                    120832: 262144,
                    124928: 537133056,
                    129024: 536871040
                  }, {
                    0: 268435464,
                    256: 8192,
                    512: 270532608,
                    768: 270540808,
                    1024: 268443648,
                    1280: 2097152,
                    1536: 2097160,
                    1792: 268435456,
                    2048: 0,
                    2304: 268443656,
                    2560: 2105344,
                    2816: 8,
                    3072: 270532616,
                    3328: 2105352,
                    3584: 8200,
                    3840: 270540800,
                    128: 270532608,
                    384: 270540808,
                    640: 8,
                    896: 2097152,
                    1152: 2105352,
                    1408: 268435464,
                    1664: 268443648,
                    1920: 8200,
                    2176: 2097160,
                    2432: 8192,
                    2688: 268443656,
                    2944: 270532616,
                    3200: 0,
                    3456: 270540800,
                    3712: 2105344,
                    3968: 268435456,
                    4096: 268443648,
                    4352: 270532616,
                    4608: 270540808,
                    4864: 8200,
                    5120: 2097152,
                    5376: 268435456,
                    5632: 268435464,
                    5888: 2105344,
                    6144: 2105352,
                    6400: 0,
                    6656: 8,
                    6912: 270532608,
                    7168: 8192,
                    7424: 268443656,
                    7680: 270540800,
                    7936: 2097160,
                    4224: 8,
                    4480: 2105344,
                    4736: 2097152,
                    4992: 268435464,
                    5248: 268443648,
                    5504: 8200,
                    5760: 270540808,
                    6016: 270532608,
                    6272: 270540800,
                    6528: 270532616,
                    6784: 8192,
                    7040: 2105352,
                    7296: 2097160,
                    7552: 0,
                    7808: 268435456,
                    8064: 268443656
                  }, {
                    0: 1048576,
                    16: 33555457,
                    32: 1024,
                    48: 1049601,
                    64: 34604033,
                    80: 0,
                    96: 1,
                    112: 34603009,
                    128: 33555456,
                    144: 1048577,
                    160: 33554433,
                    176: 34604032,
                    192: 34603008,
                    208: 1025,
                    224: 1049600,
                    240: 33554432,
                    8: 34603009,
                    24: 0,
                    40: 33555457,
                    56: 34604032,
                    72: 1048576,
                    88: 33554433,
                    104: 33554432,
                    120: 1025,
                    136: 1049601,
                    152: 33555456,
                    168: 34603008,
                    184: 1048577,
                    200: 1024,
                    216: 34604033,
                    232: 1,
                    248: 1049600,
                    256: 33554432,
                    272: 1048576,
                    288: 33555457,
                    304: 34603009,
                    320: 1048577,
                    336: 33555456,
                    352: 34604032,
                    368: 1049601,
                    384: 1025,
                    400: 34604033,
                    416: 1049600,
                    432: 1,
                    448: 0,
                    464: 34603008,
                    480: 33554433,
                    496: 1024,
                    264: 1049600,
                    280: 33555457,
                    296: 34603009,
                    312: 1,
                    328: 33554432,
                    344: 1048576,
                    360: 1025,
                    376: 34604032,
                    392: 33554433,
                    408: 34603008,
                    424: 0,
                    440: 34604033,
                    456: 1049601,
                    472: 1024,
                    488: 33555456,
                    504: 1048577
                  }, {
                    0: 134219808,
                    1: 131072,
                    2: 134217728,
                    3: 32,
                    4: 131104,
                    5: 134350880,
                    6: 134350848,
                    7: 2048,
                    8: 134348800,
                    9: 134219776,
                    10: 133120,
                    11: 134348832,
                    12: 2080,
                    13: 0,
                    14: 134217760,
                    15: 133152,
                    2147483648: 2048,
                    2147483649: 134350880,
                    2147483650: 134219808,
                    2147483651: 134217728,
                    2147483652: 134348800,
                    2147483653: 133120,
                    2147483654: 133152,
                    2147483655: 32,
                    2147483656: 134217760,
                    2147483657: 2080,
                    2147483658: 131104,
                    2147483659: 134350848,
                    2147483660: 0,
                    2147483661: 134348832,
                    2147483662: 134219776,
                    2147483663: 131072,
                    16: 133152,
                    17: 134350848,
                    18: 32,
                    19: 2048,
                    20: 134219776,
                    21: 134217760,
                    22: 134348832,
                    23: 131072,
                    24: 0,
                    25: 131104,
                    26: 134348800,
                    27: 134219808,
                    28: 134350880,
                    29: 133120,
                    30: 2080,
                    31: 134217728,
                    2147483664: 131072,
                    2147483665: 2048,
                    2147483666: 134348832,
                    2147483667: 133152,
                    2147483668: 32,
                    2147483669: 134348800,
                    2147483670: 134217728,
                    2147483671: 134219808,
                    2147483672: 134350880,
                    2147483673: 134217760,
                    2147483674: 134219776,
                    2147483675: 0,
                    2147483676: 133120,
                    2147483677: 2080,
                    2147483678: 131104,
                    2147483679: 134350848
                  }], y = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], x = u.DES = h.extend({
                    _doReset: function() {
                      for (var D = this._key, E = D.words, T = [], C = 0; C < 56; C++) {
                        var F = l[C] - 1;
                        T[C] = E[F >>> 5] >>> 31 - F % 32 & 1;
                      }
                      for (var m = this._subKeys = [], I = 0; I < 16; I++) {
                        for (var O = m[I] = [], M = s[I], C = 0; C < 24; C++)
                          O[C / 6 | 0] |= T[(c[C] - 1 + M) % 28] << 31 - C % 6, O[4 + (C / 6 | 0)] |= T[28 + (c[C + 24] - 1 + M) % 28] << 31 - C % 6;
                        O[0] = O[0] << 1 | O[0] >>> 31;
                        for (var C = 1; C < 7; C++)
                          O[C] = O[C] >>> (C - 1) * 4 + 3;
                        O[7] = O[7] << 5 | O[7] >>> 27;
                      }
                      for (var N = this._invSubKeys = [], C = 0; C < 16; C++)
                        N[C] = m[15 - C];
                    },
                    encryptBlock: function(D, E) {
                      this._doCryptBlock(D, E, this._subKeys);
                    },
                    decryptBlock: function(D, E) {
                      this._doCryptBlock(D, E, this._invSubKeys);
                    },
                    _doCryptBlock: function(D, E, T) {
                      this._lBlock = D[E], this._rBlock = D[E + 1], e.call(this, 4, 252645135), e.call(this, 16, 65535), b.call(this, 2, 858993459), b.call(this, 8, 16711935), e.call(this, 1, 1431655765);
                      for (var C = 0; C < 16; C++) {
                        for (var F = T[C], m = this._lBlock, I = this._rBlock, O = 0, M = 0; M < 8; M++)
                          O |= v[M][((I ^ F[M]) & y[M]) >>> 0];
                        this._lBlock = I, this._rBlock = m ^ O;
                      }
                      var N = this._lBlock;
                      this._lBlock = this._rBlock, this._rBlock = N, e.call(this, 1, 1431655765), b.call(this, 8, 16711935), b.call(this, 2, 858993459), e.call(this, 16, 65535), e.call(this, 4, 252645135), D[E] = this._lBlock, D[E + 1] = this._rBlock;
                    },
                    keySize: 64 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                  });
                  function e(P, D) {
                    var E = (this._lBlock >>> P ^ this._rBlock) & D;
                    this._rBlock ^= E, this._lBlock ^= E << P;
                  }
                  function b(P, D) {
                    var E = (this._rBlock >>> P ^ this._lBlock) & D;
                    this._lBlock ^= E, this._rBlock ^= E << P;
                  }
                  r.DES = h._createHelper(x);
                  var A = u.TripleDES = h.extend({
                    _doReset: function() {
                      var D = this._key, E = D.words;
                      if (E.length !== 2 && E.length !== 4 && E.length < 6)
                        throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                      var T = E.slice(0, 2), C = E.length < 4 ? E.slice(0, 2) : E.slice(2, 4), F = E.length < 6 ? E.slice(0, 2) : E.slice(4, 6);
                      this._des1 = x.createEncryptor(o.create(T)), this._des2 = x.createEncryptor(o.create(C)), this._des3 = x.createEncryptor(o.create(F));
                    },
                    encryptBlock: function(D, E) {
                      this._des1.encryptBlock(D, E), this._des2.decryptBlock(D, E), this._des3.encryptBlock(D, E);
                    },
                    decryptBlock: function(D, E) {
                      this._des3.decryptBlock(D, E), this._des2.encryptBlock(D, E), this._des1.decryptBlock(D, E);
                    },
                    keySize: 192 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                  });
                  r.TripleDES = h._createHelper(A);
                }(), i.TripleDES;
              });
            }
          ),
          /***/
          18909: (
            /***/
            function(f, d, t) {
              t(20731), function(i, r) {
                f.exports = r(t(48352));
              }(void 0, function(i) {
                return function(r) {
                  var n = i, o = n.lib, h = o.Base, u = o.WordArray, l = n.x64 = {};
                  l.Word = h.extend({
                    /**
                     * Initializes a newly created 64-bit word.
                     *
                     * @param {number} high The high 32 bits.
                     * @param {number} low The low 32 bits.
                     *
                     * @example
                     *
                     *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
                     */
                    init: function(s, v) {
                      this.high = s, this.low = v;
                    }
                    /**
                     * Bitwise NOTs this word.
                     *
                     * @return {X64Word} A new x64-Word object after negating.
                     *
                     * @example
                     *
                     *     var negated = x64Word.not();
                     */
                    // not: function () {
                    // var high = ~this.high;
                    // var low = ~this.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise ANDs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to AND with this word.
                     *
                     * @return {X64Word} A new x64-Word object after ANDing.
                     *
                     * @example
                     *
                     *     var anded = x64Word.and(anotherX64Word);
                     */
                    // and: function (word) {
                    // var high = this.high & word.high;
                    // var low = this.low & word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise ORs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to OR with this word.
                     *
                     * @return {X64Word} A new x64-Word object after ORing.
                     *
                     * @example
                     *
                     *     var ored = x64Word.or(anotherX64Word);
                     */
                    // or: function (word) {
                    // var high = this.high | word.high;
                    // var low = this.low | word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise XORs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to XOR with this word.
                     *
                     * @return {X64Word} A new x64-Word object after XORing.
                     *
                     * @example
                     *
                     *     var xored = x64Word.xor(anotherX64Word);
                     */
                    // xor: function (word) {
                    // var high = this.high ^ word.high;
                    // var low = this.low ^ word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Shifts this word n bits to the left.
                     *
                     * @param {number} n The number of bits to shift.
                     *
                     * @return {X64Word} A new x64-Word object after shifting.
                     *
                     * @example
                     *
                     *     var shifted = x64Word.shiftL(25);
                     */
                    // shiftL: function (n) {
                    // if (n < 32) {
                    // var high = (this.high << n) | (this.low >>> (32 - n));
                    // var low = this.low << n;
                    // } else {
                    // var high = this.low << (n - 32);
                    // var low = 0;
                    // }
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Shifts this word n bits to the right.
                     *
                     * @param {number} n The number of bits to shift.
                     *
                     * @return {X64Word} A new x64-Word object after shifting.
                     *
                     * @example
                     *
                     *     var shifted = x64Word.shiftR(7);
                     */
                    // shiftR: function (n) {
                    // if (n < 32) {
                    // var low = (this.low >>> n) | (this.high << (32 - n));
                    // var high = this.high >>> n;
                    // } else {
                    // var low = this.high >>> (n - 32);
                    // var high = 0;
                    // }
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Rotates this word n bits to the left.
                     *
                     * @param {number} n The number of bits to rotate.
                     *
                     * @return {X64Word} A new x64-Word object after rotating.
                     *
                     * @example
                     *
                     *     var rotated = x64Word.rotL(25);
                     */
                    // rotL: function (n) {
                    // return this.shiftL(n).or(this.shiftR(64 - n));
                    // },
                    /**
                     * Rotates this word n bits to the right.
                     *
                     * @param {number} n The number of bits to rotate.
                     *
                     * @return {X64Word} A new x64-Word object after rotating.
                     *
                     * @example
                     *
                     *     var rotated = x64Word.rotR(7);
                     */
                    // rotR: function (n) {
                    // return this.shiftR(n).or(this.shiftL(64 - n));
                    // },
                    /**
                     * Adds this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to add with this word.
                     *
                     * @return {X64Word} A new x64-Word object after adding.
                     *
                     * @example
                     *
                     *     var added = x64Word.add(anotherX64Word);
                     */
                    // add: function (word) {
                    // var low = (this.low + word.low) | 0;
                    // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
                    // var high = (this.high + word.high + carry) | 0;
                    // return X64Word.create(high, low);
                    // }
                  }), l.WordArray = h.extend({
                    /**
                     * Initializes a newly created word array.
                     *
                     * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create();
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create([
                     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                     *     ]);
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create([
                     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                     *     ], 10);
                     */
                    init: function(s, v) {
                      s = this.words = s || [], v != r ? this.sigBytes = v : this.sigBytes = s.length * 8;
                    },
                    /**
                     * Converts this 64-bit word array to a 32-bit word array.
                     *
                     * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
                     *
                     * @example
                     *
                     *     var x32WordArray = x64WordArray.toX32();
                     */
                    toX32: function() {
                      for (var s = this.words, v = s.length, y = [], x = 0; x < v; x++) {
                        var e = s[x];
                        y.push(e.high), y.push(e.low);
                      }
                      return u.create(y, this.sigBytes);
                    },
                    /**
                     * Creates a copy of this word array.
                     *
                     * @return {X64WordArray} The clone.
                     *
                     * @example
                     *
                     *     var clone = x64WordArray.clone();
                     */
                    clone: function() {
                      for (var s = h.clone.call(this), v = s.words = this.words.slice(0), y = v.length, x = 0; x < y; x++)
                        v[x] = v[x].clone();
                      return s;
                    }
                  });
                }(), i;
              });
            }
          ),
          /***/
          18645: (
            /***/
            function(f, d, t) {
              t(65292), t(73844), t(35877), t(38178), t(11765), t(24863), t(43448), t(63956), t(71950), t(68067), t(57114), t(42437), t(69330), t(81755), t(20731), t(14032), t(61726), t(58281), t(6422), t(94712);
              function i(c, s) {
                var v = typeof Symbol != "undefined" && c[Symbol.iterator] || c["@@iterator"];
                if (v)
                  return (v = v.call(c)).next.bind(v);
                if (Array.isArray(c) || (v = r(c)) || s && c && typeof c.length == "number") {
                  v && (c = v);
                  var y = 0;
                  return function() {
                    return y >= c.length ? { done: !0 } : { done: !1, value: c[y++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function r(c, s) {
                if (c) {
                  if (typeof c == "string")
                    return n(c, s);
                  var v = {}.toString.call(c).slice(8, -1);
                  return v === "Object" && c.constructor && (v = c.constructor.name), v === "Map" || v === "Set" ? Array.from(c) : v === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(v) ? n(c, s) : void 0;
                }
              }
              function n(c, s) {
                (s == null || s > c.length) && (s = c.length);
                for (var v = 0, y = Array(s); v < s; v++)
                  y[v] = c[v];
                return y;
              }
              function o() {
                /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
                o = function() {
                  return s;
                };
                var c, s = {}, v = Object.prototype, y = v.hasOwnProperty, x = Object.defineProperty || function(st, wt, V) {
                  st[wt] = V.value;
                }, e = typeof Symbol == "function" ? Symbol : {}, b = e.iterator || "@@iterator", A = e.asyncIterator || "@@asyncIterator", P = e.toStringTag || "@@toStringTag";
                function D(st, wt, V) {
                  return Object.defineProperty(st, wt, { value: V, enumerable: !0, configurable: !0, writable: !0 }), st[wt];
                }
                try {
                  D({}, "");
                } catch (st) {
                  D = function(V, Ft, U) {
                    return V[Ft] = U;
                  };
                }
                function E(st, wt, V, Ft) {
                  var U = wt && wt.prototype instanceof M ? wt : M, S = Object.create(U.prototype), k = new yt(Ft || []);
                  return x(S, "_invoke", { value: Dt(st, V, k) }), S;
                }
                function T(st, wt, V) {
                  try {
                    return { type: "normal", arg: st.call(wt, V) };
                  } catch (Ft) {
                    return { type: "throw", arg: Ft };
                  }
                }
                s.wrap = E;
                var C = "suspendedStart", F = "suspendedYield", m = "executing", I = "completed", O = {};
                function M() {
                }
                function N() {
                }
                function G() {
                }
                var ot = {};
                D(ot, b, function() {
                  return this;
                });
                var K = Object.getPrototypeOf, nt = K && K(K(ut([])));
                nt && nt !== v && y.call(nt, b) && (ot = nt);
                var xt = G.prototype = M.prototype = Object.create(ot);
                function bt(st) {
                  ["next", "throw", "return"].forEach(function(wt) {
                    D(st, wt, function(V) {
                      return this._invoke(wt, V);
                    });
                  });
                }
                function St(st, wt) {
                  function V(U, S, k, H) {
                    var it = T(st[U], st, S);
                    if (it.type !== "throw") {
                      var et = it.arg, tt = et.value;
                      return tt && typeof tt == "object" && y.call(tt, "__await") ? wt.resolve(tt.__await).then(function(Ct) {
                        V("next", Ct, k, H);
                      }, function(Ct) {
                        V("throw", Ct, k, H);
                      }) : wt.resolve(tt).then(function(Ct) {
                        et.value = Ct, k(et);
                      }, function(Ct) {
                        return V("throw", Ct, k, H);
                      });
                    }
                    H(it.arg);
                  }
                  var Ft;
                  x(this, "_invoke", { value: function(S, k) {
                    function H() {
                      return new wt(function(it, et) {
                        V(S, k, it, et);
                      });
                    }
                    return Ft = Ft ? Ft.then(H, H) : H();
                  } });
                }
                function Dt(st, wt, V) {
                  var Ft = C;
                  return function(U, S) {
                    if (Ft === m)
                      throw Error("Generator is already running");
                    if (Ft === I) {
                      if (U === "throw")
                        throw S;
                      return { value: c, done: !0 };
                    }
                    for (V.method = U, V.arg = S; ; ) {
                      var k = V.delegate;
                      if (k) {
                        var H = Lt(k, V);
                        if (H) {
                          if (H === O)
                            continue;
                          return H;
                        }
                      }
                      if (V.method === "next")
                        V.sent = V._sent = V.arg;
                      else if (V.method === "throw") {
                        if (Ft === C)
                          throw Ft = I, V.arg;
                        V.dispatchException(V.arg);
                      } else
                        V.method === "return" && V.abrupt("return", V.arg);
                      Ft = m;
                      var it = T(st, wt, V);
                      if (it.type === "normal") {
                        if (Ft = V.done ? I : F, it.arg === O)
                          continue;
                        return { value: it.arg, done: V.done };
                      }
                      it.type === "throw" && (Ft = I, V.method = "throw", V.arg = it.arg);
                    }
                  };
                }
                function Lt(st, wt) {
                  var V = wt.method, Ft = st.iterator[V];
                  if (Ft === c)
                    return wt.delegate = null, V === "throw" && st.iterator.return && (wt.method = "return", wt.arg = c, Lt(st, wt), wt.method === "throw") || V !== "return" && (wt.method = "throw", wt.arg = new TypeError("The iterator does not provide a '" + V + "' method")), O;
                  var U = T(Ft, st.iterator, wt.arg);
                  if (U.type === "throw")
                    return wt.method = "throw", wt.arg = U.arg, wt.delegate = null, O;
                  var S = U.arg;
                  return S ? S.done ? (wt[st.resultName] = S.value, wt.next = st.nextLoc, wt.method !== "return" && (wt.method = "next", wt.arg = c), wt.delegate = null, O) : S : (wt.method = "throw", wt.arg = new TypeError("iterator result is not an object"), wt.delegate = null, O);
                }
                function jt(st) {
                  var wt = { tryLoc: st[0] };
                  1 in st && (wt.catchLoc = st[1]), 2 in st && (wt.finallyLoc = st[2], wt.afterLoc = st[3]), this.tryEntries.push(wt);
                }
                function J(st) {
                  var wt = st.completion || {};
                  wt.type = "normal", delete wt.arg, st.completion = wt;
                }
                function yt(st) {
                  this.tryEntries = [{ tryLoc: "root" }], st.forEach(jt, this), this.reset(!0);
                }
                function ut(st) {
                  if (st || st === "") {
                    var wt = st[b];
                    if (wt)
                      return wt.call(st);
                    if (typeof st.next == "function")
                      return st;
                    if (!isNaN(st.length)) {
                      var V = -1, Ft = function U() {
                        for (; ++V < st.length; )
                          if (y.call(st, V))
                            return U.value = st[V], U.done = !1, U;
                        return U.value = c, U.done = !0, U;
                      };
                      return Ft.next = Ft;
                    }
                  }
                  throw new TypeError(typeof st + " is not iterable");
                }
                return N.prototype = G, x(xt, "constructor", { value: G, configurable: !0 }), x(G, "constructor", { value: N, configurable: !0 }), N.displayName = D(G, P, "GeneratorFunction"), s.isGeneratorFunction = function(st) {
                  var wt = typeof st == "function" && st.constructor;
                  return !!wt && (wt === N || (wt.displayName || wt.name) === "GeneratorFunction");
                }, s.mark = function(st) {
                  return Object.setPrototypeOf ? Object.setPrototypeOf(st, G) : (st.__proto__ = G, D(st, P, "GeneratorFunction")), st.prototype = Object.create(xt), st;
                }, s.awrap = function(st) {
                  return { __await: st };
                }, bt(St.prototype), D(St.prototype, A, function() {
                  return this;
                }), s.AsyncIterator = St, s.async = function(st, wt, V, Ft, U) {
                  U === void 0 && (U = Promise);
                  var S = new St(E(st, wt, V, Ft), U);
                  return s.isGeneratorFunction(wt) ? S : S.next().then(function(k) {
                    return k.done ? k.value : S.next();
                  });
                }, bt(xt), D(xt, P, "Generator"), D(xt, b, function() {
                  return this;
                }), D(xt, "toString", function() {
                  return "[object Generator]";
                }), s.keys = function(st) {
                  var wt = Object(st), V = [];
                  for (var Ft in wt)
                    V.push(Ft);
                  return V.reverse(), function U() {
                    for (; V.length; ) {
                      var S = V.pop();
                      if (S in wt)
                        return U.value = S, U.done = !1, U;
                    }
                    return U.done = !0, U;
                  };
                }, s.values = ut, yt.prototype = { constructor: yt, reset: function(wt) {
                  if (this.prev = 0, this.next = 0, this.sent = this._sent = c, this.done = !1, this.delegate = null, this.method = "next", this.arg = c, this.tryEntries.forEach(J), !wt)
                    for (var V in this)
                      V.charAt(0) === "t" && y.call(this, V) && !isNaN(+V.slice(1)) && (this[V] = c);
                }, stop: function() {
                  this.done = !0;
                  var wt = this.tryEntries[0].completion;
                  if (wt.type === "throw")
                    throw wt.arg;
                  return this.rval;
                }, dispatchException: function(wt) {
                  if (this.done)
                    throw wt;
                  var V = this;
                  function Ft(et, tt) {
                    return k.type = "throw", k.arg = wt, V.next = et, tt && (V.method = "next", V.arg = c), !!tt;
                  }
                  for (var U = this.tryEntries.length - 1; U >= 0; --U) {
                    var S = this.tryEntries[U], k = S.completion;
                    if (S.tryLoc === "root")
                      return Ft("end");
                    if (S.tryLoc <= this.prev) {
                      var H = y.call(S, "catchLoc"), it = y.call(S, "finallyLoc");
                      if (H && it) {
                        if (this.prev < S.catchLoc)
                          return Ft(S.catchLoc, !0);
                        if (this.prev < S.finallyLoc)
                          return Ft(S.finallyLoc);
                      } else if (H) {
                        if (this.prev < S.catchLoc)
                          return Ft(S.catchLoc, !0);
                      } else {
                        if (!it)
                          throw Error("try statement without catch or finally");
                        if (this.prev < S.finallyLoc)
                          return Ft(S.finallyLoc);
                      }
                    }
                  }
                }, abrupt: function(wt, V) {
                  for (var Ft = this.tryEntries.length - 1; Ft >= 0; --Ft) {
                    var U = this.tryEntries[Ft];
                    if (U.tryLoc <= this.prev && y.call(U, "finallyLoc") && this.prev < U.finallyLoc) {
                      var S = U;
                      break;
                    }
                  }
                  S && (wt === "break" || wt === "continue") && S.tryLoc <= V && V <= S.finallyLoc && (S = null);
                  var k = S ? S.completion : {};
                  return k.type = wt, k.arg = V, S ? (this.method = "next", this.next = S.finallyLoc, O) : this.complete(k);
                }, complete: function(wt, V) {
                  if (wt.type === "throw")
                    throw wt.arg;
                  return wt.type === "break" || wt.type === "continue" ? this.next = wt.arg : wt.type === "return" ? (this.rval = this.arg = wt.arg, this.method = "return", this.next = "end") : wt.type === "normal" && V && (this.next = V), O;
                }, finish: function(wt) {
                  for (var V = this.tryEntries.length - 1; V >= 0; --V) {
                    var Ft = this.tryEntries[V];
                    if (Ft.finallyLoc === wt)
                      return this.complete(Ft.completion, Ft.afterLoc), J(Ft), O;
                  }
                }, catch: function(wt) {
                  for (var V = this.tryEntries.length - 1; V >= 0; --V) {
                    var Ft = this.tryEntries[V];
                    if (Ft.tryLoc === wt) {
                      var U = Ft.completion;
                      if (U.type === "throw") {
                        var S = U.arg;
                        J(Ft);
                      }
                      return S;
                    }
                  }
                  throw Error("illegal catch attempt");
                }, delegateYield: function(wt, V, Ft) {
                  return this.delegate = { iterator: ut(wt), resultName: V, nextLoc: Ft }, this.method === "next" && (this.arg = c), O;
                } }, s;
              }
              var h = 1, u = 0, l = /* @__PURE__ */ function() {
                function c(v) {
                  this.stateTable = v.stateTable, this.accepting = v.accepting, this.tags = v.tags;
                }
                var s = c.prototype;
                return s.match = function(y) {
                  var x, e = this;
                  return x = {}, x[Symbol.iterator] = /* @__PURE__ */ o().mark(function b() {
                    var A, P, D, E, T, C;
                    return o().wrap(function(m) {
                      for (; ; )
                        switch (m.prev = m.next) {
                          case 0:
                            A = h, P = null, D = null, E = null, T = 0;
                          case 5:
                            if (!(T < y.length)) {
                              m.next = 21;
                              break;
                            }
                            if (C = y[T], E = A, A = e.stateTable[A][C], A !== u) {
                              m.next = 15;
                              break;
                            }
                            if (!(P != null && D != null && D >= P)) {
                              m.next = 13;
                              break;
                            }
                            return m.next = 13, [P, D, e.tags[E]];
                          case 13:
                            A = e.stateTable[h][C], P = null;
                          case 15:
                            A !== u && P == null && (P = T), e.accepting[A] && (D = T), A === u && (A = h);
                          case 18:
                            T++, m.next = 5;
                            break;
                          case 21:
                            if (!(P != null && D != null && D >= P)) {
                              m.next = 24;
                              break;
                            }
                            return m.next = 24, [P, D, e.tags[A]];
                          case 24:
                          case "end":
                            return m.stop();
                        }
                    }, b);
                  }), x;
                }, s.apply = function(y, x) {
                  for (var e = i(this.match(y)), b; !(b = e()).done; )
                    for (var A = b.value, P = A[0], D = A[1], E = A[2], T = i(E), C; !(C = T()).done; ) {
                      var F = C.value;
                      typeof x[F] == "function" && x[F](P, D, y.slice(P, D + 1));
                    }
                }, c;
              }();
              f.exports = l;
            }
          ),
          /***/
          84695: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer;
              t(58028), t(20731), t(14032), t(68067);
              var r = t(48181), n = t(6729);
              f.exports = /* @__PURE__ */ function() {
                function o(u) {
                  var l;
                  for (this.data = u, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.text = {}; ; ) {
                    var c = this.readUInt32(), s = "";
                    for (l = 0; l < 4; l++)
                      s += String.fromCharCode(this.data[this.pos++]);
                    switch (s) {
                      case "IHDR":
                        this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
                        break;
                      case "PLTE":
                        this.palette = this.read(c);
                        break;
                      case "IDAT":
                        for (l = 0; l < c; l++)
                          this.imgData.push(this.data[this.pos++]);
                        break;
                      case "tRNS":
                        switch (this.transparency = {}, this.colorType) {
                          case 3:
                            this.transparency.indexed = this.read(c);
                            var v = 255 - this.transparency.indexed.length;
                            if (v > 0)
                              for (l = 0; l < v; l++)
                                this.transparency.indexed.push(255);
                            break;
                          case 0:
                            this.transparency.grayscale = this.read(c)[0];
                            break;
                          case 2:
                            this.transparency.rgb = this.read(c);
                            break;
                        }
                        break;
                      case "tEXt":
                        var y = this.read(c), x = y.indexOf(0), e = String.fromCharCode.apply(String, y.slice(0, x));
                        this.text[e] = String.fromCharCode.apply(String, y.slice(x + 1));
                        break;
                      case "IEND":
                        switch (this.colorType) {
                          case 0:
                          case 3:
                          case 4:
                            this.colors = 1;
                            break;
                          case 2:
                          case 6:
                            this.colors = 3;
                            break;
                        }
                        this.hasAlphaChannel = [4, 6].includes(this.colorType);
                        var b = this.colors + (this.hasAlphaChannel ? 1 : 0);
                        switch (this.pixelBitlength = this.bits * b, this.colors) {
                          case 1:
                            this.colorSpace = "DeviceGray";
                            break;
                          case 3:
                            this.colorSpace = "DeviceRGB";
                            break;
                        }
                        this.imgData = new i(this.imgData);
                        return;
                      default:
                        this.pos += c;
                    }
                    if (this.pos += 4, this.pos > this.data.length)
                      throw new Error("Incomplete or corrupt PNG file");
                  }
                }
                o.decode = function(l, c) {
                  return r.readFile(l, function(s, v) {
                    var y = new o(v);
                    return y.decode(function(x) {
                      return c(x);
                    });
                  });
                }, o.load = function(l) {
                  var c = r.readFileSync(l);
                  return new o(c);
                };
                var h = o.prototype;
                return h.read = function(l) {
                  for (var c = new Array(l), s = 0; s < l; s++)
                    c[s] = this.data[this.pos++];
                  return c;
                }, h.readUInt32 = function() {
                  var l = this.data[this.pos++] << 24, c = this.data[this.pos++] << 16, s = this.data[this.pos++] << 8, v = this.data[this.pos++];
                  return l | c | s | v;
                }, h.readUInt16 = function() {
                  var l = this.data[this.pos++] << 8, c = this.data[this.pos++];
                  return l | c;
                }, h.decodePixels = function(l) {
                  var c = this;
                  return n.inflate(this.imgData, function(s, v) {
                    if (s)
                      throw s;
                    var y = c.width, x = c.height, e = c.pixelBitlength / 8, b = new i(y * x * e), A = v.length, P = 0;
                    function D(E, T, C, F, m) {
                      m === void 0 && (m = !1);
                      for (var I = Math.ceil((y - E) / C), O = Math.ceil((x - T) / F), M = e * I, N = m ? b : new i(M * O), G = 0, ot = 0; G < O && P < A; ) {
                        var K, nt, xt, bt, St;
                        switch (v[P++]) {
                          case 0:
                            for (xt = 0; xt < M; xt++)
                              N[ot++] = v[P++];
                            break;
                          case 1:
                            for (xt = 0; xt < M; xt++)
                              K = v[P++], bt = xt < e ? 0 : N[ot - e], N[ot++] = (K + bt) % 256;
                            break;
                          case 2:
                            for (xt = 0; xt < M; xt++)
                              K = v[P++], nt = (xt - xt % e) / e, St = G && N[(G - 1) * M + nt * e + xt % e], N[ot++] = (St + K) % 256;
                            break;
                          case 3:
                            for (xt = 0; xt < M; xt++)
                              K = v[P++], nt = (xt - xt % e) / e, bt = xt < e ? 0 : N[ot - e], St = G && N[(G - 1) * M + nt * e + xt % e], N[ot++] = (K + Math.floor((bt + St) / 2)) % 256;
                            break;
                          case 4:
                            for (xt = 0; xt < M; xt++) {
                              var Dt, Lt;
                              K = v[P++], nt = (xt - xt % e) / e, bt = xt < e ? 0 : N[ot - e], G === 0 ? St = Lt = 0 : (St = N[(G - 1) * M + nt * e + xt % e], Lt = nt && N[(G - 1) * M + (nt - 1) * e + xt % e]);
                              var jt = bt + St - Lt, J = Math.abs(jt - bt), yt = Math.abs(jt - St), ut = Math.abs(jt - Lt);
                              J <= yt && J <= ut ? Dt = bt : yt <= ut ? Dt = St : Dt = Lt, N[ot++] = (K + Dt) % 256;
                            }
                            break;
                          default:
                            throw new Error("Invalid filter algorithm: " + v[P - 1]);
                        }
                        if (!m) {
                          var st = ((T + G * F) * y + E) * e, wt = G * M;
                          for (xt = 0; xt < I; xt++) {
                            for (var V = 0; V < e; V++)
                              b[st++] = N[wt++];
                            st += (C - 1) * e;
                          }
                        }
                        G++;
                      }
                    }
                    return c.interlaceMethod === 1 ? (D(0, 0, 8, 8), D(4, 0, 8, 8), D(0, 4, 4, 8), D(2, 0, 4, 4), D(0, 2, 2, 4), D(1, 0, 2, 2), D(0, 1, 1, 2)) : D(0, 0, 1, 1, !0), l(b);
                  });
                }, h.decodePalette = function() {
                  for (var l = this.palette, c = l.length, s = this.transparency.indexed || [], v = new i(s.length + c), y = 0, x = 0, e = 0; e < c; e += 3) {
                    var b;
                    v[y++] = l[e], v[y++] = l[e + 1], v[y++] = l[e + 2], v[y++] = (b = s[x++]) != null ? b : 255;
                  }
                  return v;
                }, h.copyToImageData = function(l, c) {
                  var s, v, y = this.colors, x = null, e = this.hasAlphaChannel;
                  this.palette.length && (x = this._decodedPalette || (this._decodedPalette = this.decodePalette()), y = 4, e = !0);
                  var b = l.data || l, A = b.length, P = x || c, D = s = 0;
                  if (y === 1)
                    for (; D < A; ) {
                      v = x ? c[D / 4] * 4 : s;
                      var E = P[v++];
                      b[D++] = E, b[D++] = E, b[D++] = E, b[D++] = e ? P[v++] : 255, s = v;
                    }
                  else
                    for (; D < A; )
                      v = x ? c[D / 4] * 4 : s, b[D++] = P[v++], b[D++] = P[v++], b[D++] = P[v++], b[D++] = e ? P[v++] : 255, s = v;
                }, h.decode = function(l) {
                  var c = this, s = new i(this.width * this.height * 4);
                  return this.decodePixels(function(v) {
                    return c.copyToImageData(s, v), l(s);
                  });
                }, o;
              }();
            }
          ),
          /***/
          93143: (
            /***/
            function(f, d, t) {
              var i = t(9964);
              t(41584), t(81755), t(8953), t(14032), t(56912), t(73663), t(29883), t(35471), t(21012), t(88997), t(97464), t(2857), t(83326), t(94715), t(13624), t(91132), t(62514), t(24597), t(88042), t(4660), t(92451), t(44206), t(66288), t(13250), t(3858), t(84538), t(64793), t(74202), t(52529);
              var r = t(14598), n = r.Buffer, o = {}, h;
              for (h in r)
                r.hasOwnProperty(h) && (h === "SlowBuffer" || h === "Buffer" || (o[h] = r[h]));
              var u = o.Buffer = {};
              for (h in n)
                n.hasOwnProperty(h) && (h === "allocUnsafe" || h === "allocUnsafeSlow" || (u[h] = n[h]));
              if (o.Buffer.prototype = n.prototype, (!u.from || u.from === Uint8Array.from) && (u.from = function(l, c, s) {
                if (typeof l == "number")
                  throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof l);
                if (l && typeof l.length == "undefined")
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof l);
                return n(l, c, s);
              }), u.alloc || (u.alloc = function(l, c, s) {
                if (typeof l != "number")
                  throw new TypeError('The "size" argument must be of type number. Received type ' + typeof l);
                if (l < 0 || l >= 2147483648)
                  throw new RangeError('The value "' + l + '" is invalid for option "size"');
                var v = n(l);
                return !c || c.length === 0 ? v.fill(0) : typeof s == "string" ? v.fill(c, s) : v.fill(c), v;
              }), !o.kStringMaxLength)
                try {
                  o.kStringMaxLength = i.binding("buffer").kStringMaxLength;
                } catch (l) {
                }
              o.constants || (o.constants = {
                MAX_LENGTH: o.kMaxLength
              }, o.kStringMaxLength && (o.constants.MAX_STRING_LENGTH = o.kStringMaxLength)), f.exports = o;
            }
          ),
          /***/
          24433: (
            /***/
            function(f, d, t) {
              t(65292), t(5597), t(49063), t(20731), t(7585), t(7283), t(57444), t(28331), t(37309), t(14032), t(42437);
              function i(A, P) {
                var D = Object.keys(A);
                if (Object.getOwnPropertySymbols) {
                  var E = Object.getOwnPropertySymbols(A);
                  P && (E = E.filter(function(T) {
                    return Object.getOwnPropertyDescriptor(A, T).enumerable;
                  })), D.push.apply(D, E);
                }
                return D;
              }
              function r(A) {
                for (var P = 1; P < arguments.length; P++) {
                  var D = arguments[P] != null ? arguments[P] : {};
                  P % 2 ? i(Object(D), !0).forEach(function(E) {
                    n(A, E, D[E]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(A, Object.getOwnPropertyDescriptors(D)) : i(Object(D)).forEach(function(E) {
                    Object.defineProperty(A, E, Object.getOwnPropertyDescriptor(D, E));
                  });
                }
                return A;
              }
              function n(A, P, D) {
                return P = l(P), P in A ? Object.defineProperty(A, P, {
                  value: D,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : A[P] = D, A;
              }
              function o(A, P) {
                if (!(A instanceof P))
                  throw new TypeError("Cannot call a class as a function");
              }
              function h(A, P) {
                for (var D = 0; D < P.length; D++) {
                  var E = P[D];
                  E.enumerable = E.enumerable || !1, E.configurable = !0, "value" in E && (E.writable = !0), Object.defineProperty(A, l(E.key), E);
                }
              }
              function u(A, P, D) {
                return P && h(A.prototype, P), D && h(A, D), Object.defineProperty(A, "prototype", {
                  writable: !1
                }), A;
              }
              function l(A) {
                var P = c(A, "string");
                return typeof P == "symbol" ? P : String(P);
              }
              function c(A, P) {
                if (typeof A != "object" || A === null)
                  return A;
                var D = A[Symbol.toPrimitive];
                if (D !== void 0) {
                  var E = D.call(A, P || "default");
                  if (typeof E != "object")
                    return E;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (P === "string" ? String : Number)(A);
              }
              var s = t(14598), v = s.Buffer, y = t(63779), x = y.inspect, e = x && x.custom || "inspect";
              function b(A, P, D) {
                v.prototype.copy.call(A, P, D);
              }
              f.exports = /* @__PURE__ */ function() {
                function A() {
                  o(this, A), this.head = null, this.tail = null, this.length = 0;
                }
                return u(A, [{
                  key: "push",
                  value: function(D) {
                    var E = {
                      data: D,
                      next: null
                    };
                    this.length > 0 ? this.tail.next = E : this.head = E, this.tail = E, ++this.length;
                  }
                }, {
                  key: "unshift",
                  value: function(D) {
                    var E = {
                      data: D,
                      next: this.head
                    };
                    this.length === 0 && (this.tail = E), this.head = E, ++this.length;
                  }
                }, {
                  key: "shift",
                  value: function() {
                    if (this.length !== 0) {
                      var D = this.head.data;
                      return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, D;
                    }
                  }
                }, {
                  key: "clear",
                  value: function() {
                    this.head = this.tail = null, this.length = 0;
                  }
                }, {
                  key: "join",
                  value: function(D) {
                    if (this.length === 0)
                      return "";
                    for (var E = this.head, T = "" + E.data; E = E.next; )
                      T += D + E.data;
                    return T;
                  }
                }, {
                  key: "concat",
                  value: function(D) {
                    if (this.length === 0)
                      return v.alloc(0);
                    for (var E = v.allocUnsafe(D >>> 0), T = this.head, C = 0; T; )
                      b(T.data, E, C), C += T.data.length, T = T.next;
                    return E;
                  }
                  // Consumes a specified amount of bytes or characters from the buffered data.
                }, {
                  key: "consume",
                  value: function(D, E) {
                    var T;
                    return D < this.head.data.length ? (T = this.head.data.slice(0, D), this.head.data = this.head.data.slice(D)) : D === this.head.data.length ? T = this.shift() : T = E ? this._getString(D) : this._getBuffer(D), T;
                  }
                }, {
                  key: "first",
                  value: function() {
                    return this.head.data;
                  }
                  // Consumes a specified amount of characters from the buffered data.
                }, {
                  key: "_getString",
                  value: function(D) {
                    var E = this.head, T = 1, C = E.data;
                    for (D -= C.length; E = E.next; ) {
                      var F = E.data, m = D > F.length ? F.length : D;
                      if (m === F.length ? C += F : C += F.slice(0, D), D -= m, D === 0) {
                        m === F.length ? (++T, E.next ? this.head = E.next : this.head = this.tail = null) : (this.head = E, E.data = F.slice(m));
                        break;
                      }
                      ++T;
                    }
                    return this.length -= T, C;
                  }
                  // Consumes a specified amount of bytes from the buffered data.
                }, {
                  key: "_getBuffer",
                  value: function(D) {
                    var E = v.allocUnsafe(D), T = this.head, C = 1;
                    for (T.data.copy(E), D -= T.data.length; T = T.next; ) {
                      var F = T.data, m = D > F.length ? F.length : D;
                      if (F.copy(E, E.length - D, 0, m), D -= m, D === 0) {
                        m === F.length ? (++C, T.next ? this.head = T.next : this.head = this.tail = null) : (this.head = T, T.data = F.slice(m));
                        break;
                      }
                      ++C;
                    }
                    return this.length -= C, E;
                  }
                  // Make sure the linked list only shows the minimal necessary information.
                }, {
                  key: e,
                  value: function(D, E) {
                    return x(this, r(r({}, E), {}, {
                      // Only inspect one level.
                      depth: 0,
                      // It should not recurse.
                      customInspect: !1
                    }));
                  }
                }]), A;
              }();
            }
          ),
          /***/
          11432: (
            /***/
            function(f, d, t) {
              t(41584);
              var i = t(14598), r = i.Buffer;
              function n(h, u) {
                for (var l in h)
                  u[l] = h[l];
              }
              r.from && r.alloc && r.allocUnsafe && r.allocUnsafeSlow ? f.exports = i : (n(i, d), d.Buffer = o);
              function o(h, u, l) {
                return r(h, u, l);
              }
              n(r, o), o.from = function(h, u, l) {
                if (typeof h == "number")
                  throw new TypeError("Argument must not be a number");
                return r(h, u, l);
              }, o.alloc = function(h, u, l) {
                if (typeof h != "number")
                  throw new TypeError("Argument must be a number");
                var c = r(h);
                return u !== void 0 ? typeof l == "string" ? c.fill(u, l) : c.fill(u) : c.fill(0), c;
              }, o.allocUnsafe = function(h) {
                if (typeof h != "number")
                  throw new TypeError("Argument must be a number");
                return r(h);
              }, o.allocUnsafeSlow = function(h) {
                if (typeof h != "number")
                  throw new TypeError("Argument must be a number");
                return i.SlowBuffer(h);
              };
            }
          ),
          /***/
          59006: (
            /***/
            function(f, d, t) {
              t(81755), t(20731), t(8953), t(14032), t(56912), t(59735), t(73663), t(29883), t(35471), t(21012), t(88997), t(97464), t(2857), t(94715), t(13624), t(91132), t(62514), t(24597), t(88042), t(4660), t(92451), t(44206), t(66288), t(13250), t(3858), t(84538), t(64793), t(74202), t(52529);
              var i = t(3483), r = t(84327), n = r.swap32LE, o = 6 + 5, h = 5, u = o - h, l = 65536 >> o, c = 1 << u, s = c - 1, v = 2, y = 1 << h, x = y - 1, e = 65536 >> h, b = 1024 >> h, A = e + b, P = A, D = 32, E = P + D, T = 1 << v, C = /* @__PURE__ */ function() {
                function F(I) {
                  var O = typeof I.readUInt32BE == "function" && typeof I.slice == "function";
                  if (O || I instanceof Uint8Array) {
                    var M;
                    if (O)
                      this.highStart = I.readUInt32LE(0), this.errorValue = I.readUInt32LE(4), M = I.readUInt32LE(8), I = I.slice(12);
                    else {
                      var N = new DataView(I.buffer);
                      this.highStart = N.getUint32(0, !0), this.errorValue = N.getUint32(4, !0), M = N.getUint32(8, !0), I = I.subarray(12);
                    }
                    I = i(I, new Uint8Array(M)), I = i(I, new Uint8Array(M)), n(I), this.data = new Uint32Array(I.buffer);
                  } else {
                    var G = I;
                    this.data = G.data, this.highStart = G.highStart, this.errorValue = G.errorValue;
                  }
                }
                var m = F.prototype;
                return m.get = function(O) {
                  var M;
                  return O < 0 || O > 1114111 ? this.errorValue : O < 55296 || O > 56319 && O <= 65535 ? (M = (this.data[O >> h] << v) + (O & x), this.data[M]) : O <= 65535 ? (M = (this.data[e + (O - 55296 >> h)] << v) + (O & x), this.data[M]) : O < this.highStart ? (M = this.data[E - l + (O >> o)], M = this.data[M + (O >> h & s)], M = (M << v) + (O & x), this.data[M]) : this.data[this.data.length - T];
                }, F;
              }();
              f.exports = C;
            }
          ),
          /***/
          84327: (
            /***/
            function(f, d, t) {
              t(81755), t(8953), t(14032), t(56912), t(59735), t(73663), t(29883), t(35471), t(21012), t(88997), t(97464), t(2857), t(94715), t(13624), t(91132), t(62514), t(24597), t(88042), t(4660), t(92451), t(44206), t(66288), t(13250), t(3858), t(84538), t(64793), t(74202), t(52529);
              var i = new Uint8Array(new Uint32Array([305419896]).buffer)[0] === 18, r = function(u, l, c) {
                var s = u[l];
                u[l] = u[c], u[c] = s;
              }, n = function(u) {
                for (var l = u.length, c = 0; c < l; c += 4)
                  r(u, c, c + 3), r(u, c + 1, c + 2);
              }, o = function(u) {
                i && n(u);
              };
              f.exports = {
                swap32LE: o
              };
            }
          ),
          /***/
          5557: (
            /***/
            function(f, d, t) {
              var i = t(64781);
              f.exports = i;
            }
          ),
          /***/
          64781: (
            /***/
            function(f, d, t) {
              f = t.nmd(f), t(39081), t(41584), t(81755), t(20731), t(24863), t(7283), t(37309), t(14032), t(61726), t(6422), t(46467), t(7851), t(72095), t(47259), t(1083), t(94712);
              var i = function(n, o, h, u, l) {
                var c = {
                  aliceblue: [240, 248, 255],
                  antiquewhite: [250, 235, 215],
                  aqua: [0, 255, 255],
                  aquamarine: [127, 255, 212],
                  azure: [240, 255, 255],
                  beige: [245, 245, 220],
                  bisque: [255, 228, 196],
                  black: [0, 0, 0],
                  blanchedalmond: [255, 235, 205],
                  blue: [0, 0, 255],
                  blueviolet: [138, 43, 226],
                  brown: [165, 42, 42],
                  burlywood: [222, 184, 135],
                  cadetblue: [95, 158, 160],
                  chartreuse: [127, 255, 0],
                  chocolate: [210, 105, 30],
                  coral: [255, 127, 80],
                  cornflowerblue: [100, 149, 237],
                  cornsilk: [255, 248, 220],
                  crimson: [220, 20, 60],
                  cyan: [0, 255, 255],
                  darkblue: [0, 0, 139],
                  darkcyan: [0, 139, 139],
                  darkgoldenrod: [184, 134, 11],
                  darkgray: [169, 169, 169],
                  darkgrey: [169, 169, 169],
                  darkgreen: [0, 100, 0],
                  darkkhaki: [189, 183, 107],
                  darkmagenta: [139, 0, 139],
                  darkolivegreen: [85, 107, 47],
                  darkorange: [255, 140, 0],
                  darkorchid: [153, 50, 204],
                  darkred: [139, 0, 0],
                  darksalmon: [233, 150, 122],
                  darkseagreen: [143, 188, 143],
                  darkslateblue: [72, 61, 139],
                  darkslategray: [47, 79, 79],
                  darkslategrey: [47, 79, 79],
                  darkturquoise: [0, 206, 209],
                  darkviolet: [148, 0, 211],
                  deeppink: [255, 20, 147],
                  deepskyblue: [0, 191, 255],
                  dimgray: [105, 105, 105],
                  dimgrey: [105, 105, 105],
                  dodgerblue: [30, 144, 255],
                  firebrick: [178, 34, 34],
                  floralwhite: [255, 250, 240],
                  forestgreen: [34, 139, 34],
                  fuchsia: [255, 0, 255],
                  gainsboro: [220, 220, 220],
                  ghostwhite: [248, 248, 255],
                  gold: [255, 215, 0],
                  goldenrod: [218, 165, 32],
                  gray: [128, 128, 128],
                  grey: [128, 128, 128],
                  green: [0, 128, 0],
                  greenyellow: [173, 255, 47],
                  honeydew: [240, 255, 240],
                  hotpink: [255, 105, 180],
                  indianred: [205, 92, 92],
                  indigo: [75, 0, 130],
                  ivory: [255, 255, 240],
                  khaki: [240, 230, 140],
                  lavender: [230, 230, 250],
                  lavenderblush: [255, 240, 245],
                  lawngreen: [124, 252, 0],
                  lemonchiffon: [255, 250, 205],
                  lightblue: [173, 216, 230],
                  lightcoral: [240, 128, 128],
                  lightcyan: [224, 255, 255],
                  lightgoldenrodyellow: [250, 250, 210],
                  lightgray: [211, 211, 211],
                  lightgrey: [211, 211, 211],
                  lightgreen: [144, 238, 144],
                  lightpink: [255, 182, 193],
                  lightsalmon: [255, 160, 122],
                  lightseagreen: [32, 178, 170],
                  lightskyblue: [135, 206, 250],
                  lightslategray: [119, 136, 153],
                  lightslategrey: [119, 136, 153],
                  lightsteelblue: [176, 196, 222],
                  lightyellow: [255, 255, 224],
                  lime: [0, 255, 0],
                  limegreen: [50, 205, 50],
                  linen: [250, 240, 230],
                  magenta: [255, 0, 255],
                  maroon: [128, 0, 0],
                  mediumaquamarine: [102, 205, 170],
                  mediumblue: [0, 0, 205],
                  mediumorchid: [186, 85, 211],
                  mediumpurple: [147, 112, 219],
                  mediumseagreen: [60, 179, 113],
                  mediumslateblue: [123, 104, 238],
                  mediumspringgreen: [0, 250, 154],
                  mediumturquoise: [72, 209, 204],
                  mediumvioletred: [199, 21, 133],
                  midnightblue: [25, 25, 112],
                  mintcream: [245, 255, 250],
                  mistyrose: [255, 228, 225],
                  moccasin: [255, 228, 181],
                  navajowhite: [255, 222, 173],
                  navy: [0, 0, 128],
                  oldlace: [253, 245, 230],
                  olive: [128, 128, 0],
                  olivedrab: [107, 142, 35],
                  orange: [255, 165, 0],
                  orangered: [255, 69, 0],
                  orchid: [218, 112, 214],
                  palegoldenrod: [238, 232, 170],
                  palegreen: [152, 251, 152],
                  paleturquoise: [175, 238, 238],
                  palevioletred: [219, 112, 147],
                  papayawhip: [255, 239, 213],
                  peachpuff: [255, 218, 185],
                  peru: [205, 133, 63],
                  pink: [255, 192, 203],
                  plum: [221, 160, 221],
                  powderblue: [176, 224, 230],
                  purple: [128, 0, 128],
                  rebeccapurple: [102, 51, 153],
                  red: [255, 0, 0],
                  rosybrown: [188, 143, 143],
                  royalblue: [65, 105, 225],
                  saddlebrown: [139, 69, 19],
                  salmon: [250, 128, 114],
                  sandybrown: [244, 164, 96],
                  seagreen: [46, 139, 87],
                  seashell: [255, 245, 238],
                  sienna: [160, 82, 45],
                  silver: [192, 192, 192],
                  skyblue: [135, 206, 235],
                  slateblue: [106, 90, 205],
                  slategray: [112, 128, 144],
                  slategrey: [112, 128, 144],
                  snow: [255, 250, 250],
                  springgreen: [0, 255, 127],
                  steelblue: [70, 130, 180],
                  tan: [210, 180, 140],
                  teal: [0, 128, 128],
                  thistle: [216, 191, 216],
                  tomato: [255, 99, 71],
                  turquoise: [64, 224, 208],
                  violet: [238, 130, 238],
                  wheat: [245, 222, 179],
                  white: [255, 255, 255],
                  whitesmoke: [245, 245, 245],
                  yellow: [255, 255, 0]
                }, s = {
                  black: [c.black, 1],
                  white: [c.white, 1],
                  transparent: [c.black, 0]
                }, v = {
                  quot: 34,
                  amp: 38,
                  lt: 60,
                  gt: 62,
                  apos: 39,
                  OElig: 338,
                  oelig: 339,
                  Scaron: 352,
                  scaron: 353,
                  Yuml: 376,
                  circ: 710,
                  tilde: 732,
                  ensp: 8194,
                  emsp: 8195,
                  thinsp: 8201,
                  zwnj: 8204,
                  zwj: 8205,
                  lrm: 8206,
                  rlm: 8207,
                  ndash: 8211,
                  mdash: 8212,
                  lsquo: 8216,
                  rsquo: 8217,
                  sbquo: 8218,
                  ldquo: 8220,
                  rdquo: 8221,
                  bdquo: 8222,
                  dagger: 8224,
                  Dagger: 8225,
                  permil: 8240,
                  lsaquo: 8249,
                  rsaquo: 8250,
                  euro: 8364,
                  nbsp: 160,
                  iexcl: 161,
                  cent: 162,
                  pound: 163,
                  curren: 164,
                  yen: 165,
                  brvbar: 166,
                  sect: 167,
                  uml: 168,
                  copy: 169,
                  ordf: 170,
                  laquo: 171,
                  not: 172,
                  shy: 173,
                  reg: 174,
                  macr: 175,
                  deg: 176,
                  plusmn: 177,
                  sup2: 178,
                  sup3: 179,
                  acute: 180,
                  micro: 181,
                  para: 182,
                  middot: 183,
                  cedil: 184,
                  sup1: 185,
                  ordm: 186,
                  raquo: 187,
                  frac14: 188,
                  frac12: 189,
                  frac34: 190,
                  iquest: 191,
                  Agrave: 192,
                  Aacute: 193,
                  Acirc: 194,
                  Atilde: 195,
                  Auml: 196,
                  Aring: 197,
                  AElig: 198,
                  Ccedil: 199,
                  Egrave: 200,
                  Eacute: 201,
                  Ecirc: 202,
                  Euml: 203,
                  Igrave: 204,
                  Iacute: 205,
                  Icirc: 206,
                  Iuml: 207,
                  ETH: 208,
                  Ntilde: 209,
                  Ograve: 210,
                  Oacute: 211,
                  Ocirc: 212,
                  Otilde: 213,
                  Ouml: 214,
                  times: 215,
                  Oslash: 216,
                  Ugrave: 217,
                  Uacute: 218,
                  Ucirc: 219,
                  Uuml: 220,
                  Yacute: 221,
                  THORN: 222,
                  szlig: 223,
                  agrave: 224,
                  aacute: 225,
                  acirc: 226,
                  atilde: 227,
                  auml: 228,
                  aring: 229,
                  aelig: 230,
                  ccedil: 231,
                  egrave: 232,
                  eacute: 233,
                  ecirc: 234,
                  euml: 235,
                  igrave: 236,
                  iacute: 237,
                  icirc: 238,
                  iuml: 239,
                  eth: 240,
                  ntilde: 241,
                  ograve: 242,
                  oacute: 243,
                  ocirc: 244,
                  otilde: 245,
                  ouml: 246,
                  divide: 247,
                  oslash: 248,
                  ugrave: 249,
                  uacute: 250,
                  ucirc: 251,
                  uuml: 252,
                  yacute: 253,
                  thorn: 254,
                  yuml: 255,
                  fnof: 402,
                  Alpha: 913,
                  Beta: 914,
                  Gamma: 915,
                  Delta: 916,
                  Epsilon: 917,
                  Zeta: 918,
                  Eta: 919,
                  Theta: 920,
                  Iota: 921,
                  Kappa: 922,
                  Lambda: 923,
                  Mu: 924,
                  Nu: 925,
                  Xi: 926,
                  Omicron: 927,
                  Pi: 928,
                  Rho: 929,
                  Sigma: 931,
                  Tau: 932,
                  Upsilon: 933,
                  Phi: 934,
                  Chi: 935,
                  Psi: 936,
                  Omega: 937,
                  alpha: 945,
                  beta: 946,
                  gamma: 947,
                  delta: 948,
                  epsilon: 949,
                  zeta: 950,
                  eta: 951,
                  theta: 952,
                  iota: 953,
                  kappa: 954,
                  lambda: 955,
                  mu: 956,
                  nu: 957,
                  xi: 958,
                  omicron: 959,
                  pi: 960,
                  rho: 961,
                  sigmaf: 962,
                  sigma: 963,
                  tau: 964,
                  upsilon: 965,
                  phi: 966,
                  chi: 967,
                  psi: 968,
                  omega: 969,
                  thetasym: 977,
                  upsih: 978,
                  piv: 982,
                  bull: 8226,
                  hellip: 8230,
                  prime: 8242,
                  Prime: 8243,
                  oline: 8254,
                  frasl: 8260,
                  weierp: 8472,
                  image: 8465,
                  real: 8476,
                  trade: 8482,
                  alefsym: 8501,
                  larr: 8592,
                  uarr: 8593,
                  rarr: 8594,
                  darr: 8595,
                  harr: 8596,
                  crarr: 8629,
                  lArr: 8656,
                  uArr: 8657,
                  rArr: 8658,
                  dArr: 8659,
                  hArr: 8660,
                  forall: 8704,
                  part: 8706,
                  exist: 8707,
                  empty: 8709,
                  nabla: 8711,
                  isin: 8712,
                  notin: 8713,
                  ni: 8715,
                  prod: 8719,
                  sum: 8721,
                  minus: 8722,
                  lowast: 8727,
                  radic: 8730,
                  prop: 8733,
                  infin: 8734,
                  ang: 8736,
                  and: 8743,
                  or: 8744,
                  cap: 8745,
                  cup: 8746,
                  int: 8747,
                  there4: 8756,
                  sim: 8764,
                  cong: 8773,
                  asymp: 8776,
                  ne: 8800,
                  equiv: 8801,
                  le: 8804,
                  ge: 8805,
                  sub: 8834,
                  sup: 8835,
                  nsub: 8836,
                  sube: 8838,
                  supe: 8839,
                  oplus: 8853,
                  otimes: 8855,
                  perp: 8869,
                  sdot: 8901,
                  lceil: 8968,
                  rceil: 8969,
                  lfloor: 8970,
                  rfloor: 8971,
                  lang: 9001,
                  rang: 9002,
                  loz: 9674,
                  spades: 9824,
                  clubs: 9827,
                  hearts: 9829,
                  diams: 9830
                }, y = {
                  A: 7,
                  a: 7,
                  C: 6,
                  c: 6,
                  H: 1,
                  h: 1,
                  L: 2,
                  l: 2,
                  M: 2,
                  m: 2,
                  Q: 4,
                  q: 4,
                  S: 4,
                  s: 4,
                  T: 2,
                  t: 2,
                  V: 1,
                  v: 1,
                  Z: 0,
                  z: 0
                }, x = {
                  A3: !0,
                  A4: !0,
                  a3: !0,
                  a4: !0
                }, e = {
                  color: {
                    inherit: !0,
                    initial: void 0
                  },
                  visibility: {
                    inherit: !0,
                    initial: "visible",
                    values: {
                      hidden: "hidden",
                      collapse: "hidden",
                      visible: "visible"
                    }
                  },
                  fill: {
                    inherit: !0,
                    initial: s.black
                  },
                  stroke: {
                    inherit: !0,
                    initial: "none"
                  },
                  "stop-color": {
                    inherit: !1,
                    initial: s.black
                  },
                  "fill-opacity": {
                    inherit: !0,
                    initial: 1
                  },
                  "stroke-opacity": {
                    inherit: !0,
                    initial: 1
                  },
                  "stop-opacity": {
                    inherit: !1,
                    initial: 1
                  },
                  "fill-rule": {
                    inherit: !0,
                    initial: "nonzero",
                    values: {
                      nonzero: "nonzero",
                      evenodd: "evenodd"
                    }
                  },
                  "clip-rule": {
                    inherit: !0,
                    initial: "nonzero",
                    values: {
                      nonzero: "nonzero",
                      evenodd: "evenodd"
                    }
                  },
                  "stroke-width": {
                    inherit: !0,
                    initial: 1
                  },
                  "stroke-dasharray": {
                    inherit: !0,
                    initial: []
                  },
                  "stroke-dashoffset": {
                    inherit: !0,
                    initial: 0
                  },
                  "stroke-miterlimit": {
                    inherit: !0,
                    initial: 4
                  },
                  "stroke-linejoin": {
                    inherit: !0,
                    initial: "miter",
                    values: {
                      miter: "miter",
                      round: "round",
                      bevel: "bevel"
                    }
                  },
                  "stroke-linecap": {
                    inherit: !0,
                    initial: "butt",
                    values: {
                      butt: "butt",
                      round: "round",
                      square: "square"
                    }
                  },
                  "font-size": {
                    inherit: !0,
                    initial: 16,
                    values: {
                      "xx-small": 9,
                      "x-small": 10,
                      small: 13,
                      medium: 16,
                      large: 18,
                      "x-large": 24,
                      "xx-large": 32
                    }
                  },
                  "font-family": {
                    inherit: !0,
                    initial: "sans-serif"
                  },
                  "font-weight": {
                    inherit: !0,
                    initial: "normal",
                    values: {
                      600: "bold",
                      700: "bold",
                      800: "bold",
                      900: "bold",
                      bold: "bold",
                      bolder: "bold",
                      500: "normal",
                      400: "normal",
                      300: "normal",
                      200: "normal",
                      100: "normal",
                      normal: "normal",
                      lighter: "normal"
                    }
                  },
                  "font-style": {
                    inherit: !0,
                    initial: "normal",
                    values: {
                      italic: "italic",
                      oblique: "italic",
                      normal: "normal"
                    }
                  },
                  "text-anchor": {
                    inherit: !0,
                    initial: "start",
                    values: {
                      start: "start",
                      middle: "middle",
                      end: "end"
                    }
                  },
                  direction: {
                    inherit: !0,
                    initial: "ltr",
                    values: {
                      ltr: "ltr",
                      rtl: "rtl"
                    }
                  },
                  "dominant-baseline": {
                    inherit: !0,
                    initial: "baseline",
                    values: {
                      auto: "baseline",
                      baseline: "baseline",
                      "before-edge": "before-edge",
                      "text-before-edge": "before-edge",
                      middle: "middle",
                      central: "central",
                      "after-edge": "after-edge",
                      "text-after-edge": "after-edge",
                      ideographic: "ideographic",
                      alphabetic: "alphabetic",
                      hanging: "hanging",
                      mathematical: "mathematical"
                    }
                  },
                  "alignment-baseline": {
                    inherit: !1,
                    initial: void 0,
                    values: {
                      auto: "baseline",
                      baseline: "baseline",
                      "before-edge": "before-edge",
                      "text-before-edge": "before-edge",
                      middle: "middle",
                      central: "central",
                      "after-edge": "after-edge",
                      "text-after-edge": "after-edge",
                      ideographic: "ideographic",
                      alphabetic: "alphabetic",
                      hanging: "hanging",
                      mathematical: "mathematical"
                    }
                  },
                  "baseline-shift": {
                    inherit: !0,
                    initial: "baseline",
                    values: {
                      baseline: "baseline",
                      sub: "sub",
                      super: "super"
                    }
                  },
                  "word-spacing": {
                    inherit: !0,
                    initial: 0,
                    values: {
                      normal: 0
                    }
                  },
                  "letter-spacing": {
                    inherit: !0,
                    initial: 0,
                    values: {
                      normal: 0
                    }
                  },
                  "text-decoration": {
                    inherit: !1,
                    initial: "none",
                    values: {
                      none: "none",
                      underline: "underline",
                      overline: "overline",
                      "line-through": "line-through"
                    }
                  },
                  "xml:space": {
                    inherit: !0,
                    initial: "default",
                    css: "white-space",
                    values: {
                      preserve: "preserve",
                      default: "default",
                      pre: "preserve",
                      "pre-line": "preserve",
                      "pre-wrap": "preserve",
                      nowrap: "default"
                    }
                  },
                  "marker-start": {
                    inherit: !0,
                    initial: "none"
                  },
                  "marker-mid": {
                    inherit: !0,
                    initial: "none"
                  },
                  "marker-end": {
                    inherit: !0,
                    initial: "none"
                  },
                  opacity: {
                    inherit: !1,
                    initial: 1
                  },
                  transform: {
                    inherit: !1,
                    initial: [1, 0, 0, 1, 0, 0]
                  },
                  display: {
                    inherit: !1,
                    initial: "inline",
                    values: {
                      none: "none",
                      inline: "inline",
                      block: "inline"
                    }
                  },
                  "clip-path": {
                    inherit: !1,
                    initial: "none"
                  },
                  mask: {
                    inherit: !1,
                    initial: "none"
                  },
                  overflow: {
                    inherit: !1,
                    initial: "hidden",
                    values: {
                      hidden: "hidden",
                      scroll: "hidden",
                      visible: "visible"
                    }
                  }
                };
                function b(qt) {
                  var Bt = new function() {
                  }();
                  return Bt.name = "G" + (n._groupCount = (n._groupCount || 0) + 1), Bt.resources = n.ref(), Bt.xobj = n.ref({
                    Type: "XObject",
                    Subtype: "Form",
                    FormType: 1,
                    BBox: qt,
                    Group: {
                      S: "Transparency",
                      CS: "DeviceRGB",
                      I: !0,
                      K: !1
                    },
                    Resources: Bt.resources
                  }), Bt.xobj.write(""), Bt.savedMatrix = n._ctm, Bt.savedPage = n.page, fa.push(Bt), n._ctm = [1, 0, 0, 1, 0, 0], n.page = {
                    width: n.page.width,
                    height: n.page.height,
                    write: function(Mt) {
                      Bt.xobj.write(Mt);
                    },
                    fonts: {},
                    xobjects: {},
                    ext_gstates: {},
                    patterns: {}
                  }, Bt;
                }
                function A(qt) {
                  if (qt !== fa.pop())
                    throw "Group not matching";
                  Object.keys(n.page.fonts).length && (qt.resources.data.Font = n.page.fonts), Object.keys(n.page.xobjects).length && (qt.resources.data.XObject = n.page.xobjects), Object.keys(n.page.ext_gstates).length && (qt.resources.data.ExtGState = n.page.ext_gstates), Object.keys(n.page.patterns).length && (qt.resources.data.Pattern = n.page.patterns), qt.resources.end(), qt.xobj.end(), n._ctm = qt.savedMatrix, n.page = qt.savedPage;
                }
                function P(qt) {
                  n.page.xobjects[qt.name] = qt.xobj, n.addContent("/" + qt.name + " Do");
                }
                function D(qt, Bt) {
                  var ne = "M" + (n._maskCount = (n._maskCount || 0) + 1), Mt = n.ref({
                    Type: "ExtGState",
                    CA: 1,
                    ca: 1,
                    BM: "Normal",
                    SMask: {
                      S: "Luminosity",
                      G: qt.xobj,
                      BC: Bt ? [0, 0, 0] : [1, 1, 1]
                    }
                  });
                  Mt.end(), n.page.ext_gstates[ne] = Mt, n.addContent("/" + ne + " gs");
                }
                function E(qt, Bt, ne, Mt) {
                  var zt = new function() {
                  }();
                  return zt.group = qt, zt.dx = Bt, zt.dy = ne, zt.matrix = Mt || [1, 0, 0, 1, 0, 0], zt;
                }
                function T(qt, Bt) {
                  var ne = "P" + (n._patternCount = (n._patternCount || 0) + 1), Mt = n.ref({
                    Type: "Pattern",
                    PatternType: 1,
                    PaintType: 1,
                    TilingType: 2,
                    BBox: [0, 0, qt.dx, qt.dy],
                    XStep: qt.dx,
                    YStep: qt.dy,
                    Matrix: bt(n._ctm, qt.matrix),
                    Resources: {
                      ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                      XObject: function() {
                        var zt = {};
                        return zt[qt.group.name] = qt.group.xobj, zt;
                      }()
                    }
                  });
                  Mt.write("/" + qt.group.name + " Do"), Mt.end(), n.page.patterns[ne] = Mt, Bt ? (n.addContent("/Pattern CS"), n.addContent("/" + ne + " SCN")) : (n.addContent("/Pattern cs"), n.addContent("/" + ne + " scn"));
                }
                function C(qt, Bt) {
                  n.page.fonts[qt.id] || (n.page.fonts[qt.id] = qt.ref()), n.addContent("BT").addContent("/" + qt.id + " " + Bt + " Tf");
                }
                function F(qt, Bt, ne, Mt, zt, Ut) {
                  n.addContent(V(qt) + " " + V(Bt) + " " + V(-ne) + " " + V(-Mt) + " " + V(zt) + " " + V(Ut) + " Tm");
                }
                function m(qt, Bt) {
                  var ne = qt && Bt ? 2 : Bt ? 1 : qt ? 0 : 3;
                  n.addContent(ne + " Tr");
                }
                function I(qt) {
                  n.addContent("<" + qt + "> Tj");
                }
                function O() {
                  n.addContent("ET");
                }
                function M(qt) {
                  qt[0].constructor.name === "PDFPattern" ? (n.fillOpacity(qt[1]), T(qt[0], !1)) : n.fillColor(qt[0], qt[1]);
                }
                function N(qt) {
                  qt[0].constructor.name === "PDFPattern" ? (n.strokeOpacity(qt[1]), T(qt[0], !0)) : n.strokeColor(qt[0], qt[1]);
                }
                function G(qt, Bt, ne, Mt, zt) {
                  var Ut = n.ref({
                    Type: "Annot",
                    Subtype: "Link",
                    Rect: [qt, Bt, ne, Mt],
                    Border: [0, 0, 0],
                    A: {
                      S: "URI",
                      URI: new String(zt)
                    }
                  });
                  Ut.end(), gr.push(Ut);
                }
                function ot(qt) {
                  var Bt = function(kt, oe, Jt, ye) {
                    this.error = ye, this.nodeName = kt, this.nodeValue = Jt, this.nodeType = oe, this.attributes = /* @__PURE__ */ Object.create(null), this.childNodes = [], this.parentNode = null, this.id = "", this.textContent = "", this.classList = [];
                  };
                  Bt.prototype.getAttribute = function(ee) {
                    return this.attributes[ee] != null ? this.attributes[ee] : null;
                  }, Bt.prototype.getElementById = function(ee) {
                    var kt = null;
                    return function oe(Jt) {
                      if (!kt && Jt.nodeType === 1) {
                        Jt.id === ee && (kt = Jt);
                        for (var ye = 0; ye < Jt.childNodes.length; ye++)
                          oe(Jt.childNodes[ye]);
                      }
                    }(this), kt;
                  }, Bt.prototype.getElementsByTagName = function(ee) {
                    var kt = [];
                    return function oe(Jt) {
                      if (Jt.nodeType === 1) {
                        Jt.nodeName === ee && kt.push(Jt);
                        for (var ye = 0; ye < Jt.childNodes.length; ye++)
                          oe(Jt.childNodes[ye]);
                      }
                    }(this), kt;
                  };
                  for (var ne = new me(qt.trim()), Mt, zt, Ut = !1, Vt = function() {
                    var kt, oe;
                    if (kt = ne.match(/^<([\w:.-]+)\s*/, !0)) {
                      for (var Jt = new Bt(kt[1], 1, null, Ut); kt = ne.match(/^([\w:.-]+)(?:\s*=\s*"([^"]*)"|\s*=\s*'([^']*)')?\s*/, !0); ) {
                        var ye = kt[1], Pe = K(kt[2] || kt[3] || "");
                        Jt.attributes[ye] ? (nr('parseXml: duplicate attribute "' + ye + '"'), Ut = !0) : (Jt.attributes[ye] = Pe, ye === "id" && (Jt.id = Pe), ye === "class" && (Jt.classList = Pe.split(" ")));
                      }
                      if (ne.match(/^>/)) {
                        for (; oe = Vt(); )
                          Jt.childNodes.push(oe), oe.parentNode = Jt, Jt.textContent += oe.nodeType === 3 || oe.nodeType === 4 ? oe.nodeValue : oe.textContent;
                        return (kt = ne.match(/^<\/([\w:.-]+)\s*>/, !0)) ? (kt[1] === Jt.nodeName || (nr('parseXml: tag not matching, opening "' + Jt.nodeName + '" & closing "' + kt[1] + '"'), Ut = !0), Jt) : (nr('parseXml: tag not matching, opening "' + Jt.nodeName + '" & not closing'), Ut = !0, Jt);
                      } else {
                        if (ne.match(/^\/>/))
                          return Jt;
                        nr('parseXml: tag could not be parsed "' + Jt.nodeName + '"'), Ut = !0;
                      }
                    } else {
                      if (kt = ne.match(/^<!--[\s\S]*?-->/))
                        return new Bt(null, 8, kt, Ut);
                      if (kt = ne.match(/^<\?[\s\S]*?\?>/))
                        return new Bt(null, 7, kt, Ut);
                      if (kt = ne.match(/^<!DOCTYPE\s*([\s\S]*?)>/))
                        return new Bt(null, 10, kt, Ut);
                      if (kt = ne.match(/^<!\[CDATA\[([\s\S]*?)\]\]>/, !0))
                        return new Bt("#cdata-section", 4, kt[1], Ut);
                      if (kt = ne.match(/^([^<]+)/, !0))
                        return new Bt("#text", 3, K(kt[1]), Ut);
                    }
                  }; zt = Vt(); )
                    zt.nodeType === 1 && !Mt ? Mt = zt : (zt.nodeType === 1 || zt.nodeType === 3 && zt.nodeValue.trim() !== "") && nr("parseXml: data after document end has been discarded");
                  return ne.matchAll() && nr("parseXml: parsing error"), Mt;
                }
                function K(qt) {
                  return qt.replace(/&(?:#([0-9]+)|#[xX]([0-9A-Fa-f]+)|([0-9A-Za-z]+));/g, function(Bt, ne, Mt, zt) {
                    return ne ? String.fromCharCode(parseInt(ne, 10)) : Mt ? String.fromCharCode(parseInt(Mt, 16)) : zt && v[zt] ? String.fromCharCode(v[zt]) : Bt;
                  });
                }
                function nt(qt) {
                  var Bt, ne;
                  return qt = (qt || "").trim(), (Bt = c[qt]) ? ne = [Bt.slice(), 1] : (Bt = qt.match(/^rgba\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9.]+)\s*\)$/i)) ? (Bt[1] = parseInt(Bt[1]), Bt[2] = parseInt(Bt[2]), Bt[3] = parseInt(Bt[3]), Bt[4] = parseFloat(Bt[4]), Bt[1] < 256 && Bt[2] < 256 && Bt[3] < 256 && Bt[4] <= 1 && (ne = [Bt.slice(1, 4), Bt[4]])) : (Bt = qt.match(/^rgb\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)$/i)) ? (Bt[1] = parseInt(Bt[1]), Bt[2] = parseInt(Bt[2]), Bt[3] = parseInt(Bt[3]), Bt[1] < 256 && Bt[2] < 256 && Bt[3] < 256 && (ne = [Bt.slice(1, 4), 1])) : (Bt = qt.match(/^rgb\(\s*([0-9.]+)%\s*,\s*([0-9.]+)%\s*,\s*([0-9.]+)%\s*\)$/i)) ? (Bt[1] = 2.55 * parseFloat(Bt[1]), Bt[2] = 2.55 * parseFloat(Bt[2]), Bt[3] = 2.55 * parseFloat(Bt[3]), Bt[1] < 256 && Bt[2] < 256 && Bt[3] < 256 && (ne = [Bt.slice(1, 4), 1])) : (Bt = qt.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i)) ? ne = [[parseInt(Bt[1], 16), parseInt(Bt[2], 16), parseInt(Bt[3], 16)], 1] : (Bt = qt.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i)) && (ne = [[17 * parseInt(Bt[1], 16), 17 * parseInt(Bt[2], 16), 17 * parseInt(Bt[3], 16)], 1]), $r ? $r(ne, qt) : ne;
                }
                function xt(qt, Bt, ne) {
                  var Mt = qt[0].slice(), zt = qt[1] * Bt;
                  if (ne) {
                    for (var Ut = 0; Ut < qt.length; Ut++)
                      Mt[Ut] *= zt;
                    return [Mt, 1];
                  } else
                    return [Mt, zt];
                }
                function bt() {
                  function qt(Mt, zt) {
                    return [Mt[0] * zt[0] + Mt[2] * zt[1], Mt[1] * zt[0] + Mt[3] * zt[1], Mt[0] * zt[2] + Mt[2] * zt[3], Mt[1] * zt[2] + Mt[3] * zt[3], Mt[0] * zt[4] + Mt[2] * zt[5] + Mt[4], Mt[1] * zt[4] + Mt[3] * zt[5] + Mt[5]];
                  }
                  for (var Bt = arguments[0], ne = 1; ne < arguments.length; ne++)
                    Bt = qt(Bt, arguments[ne]);
                  return Bt;
                }
                function St(qt, Bt) {
                  return [Bt[0] * qt[0] + Bt[2] * qt[1] + Bt[4], Bt[1] * qt[0] + Bt[3] * qt[1] + Bt[5]];
                }
                function Dt() {
                  for (var qt = n._ctm, Bt = fa.length - 1; Bt >= 0; Bt--)
                    qt = bt(fa[Bt].savedMatrix, qt);
                  return qt;
                }
                function Lt() {
                  return new Wt().M(0, 0).L(n.page.width, 0).L(n.page.width, n.page.height).L(0, n.page.height).transform(jt(Dt())).getBoundingBox();
                }
                function jt(qt) {
                  var Bt = qt[0] * qt[3] - qt[1] * qt[2];
                  return [qt[3] / Bt, -qt[1] / Bt, -qt[2] / Bt, qt[0] / Bt, (qt[2] * qt[5] - qt[3] * qt[4]) / Bt, (qt[1] * qt[4] - qt[0] * qt[5]) / Bt];
                }
                function J(qt) {
                  var Bt = V(qt[0]), ne = V(qt[1]), Mt = V(qt[2]), zt = V(qt[3]), Ut = V(qt[4]), Vt = V(qt[5]);
                  if (wt(Bt * zt - ne * Mt, 0))
                    return [Bt, ne, Mt, zt, Ut, Vt];
                }
                function yt(qt) {
                  var Bt = qt[2] || 0, ne = qt[1] || 0, Mt = qt[0] || 0;
                  if (st(Bt, 0) && st(ne, 0))
                    return [];
                  if (st(Bt, 0))
                    return [-Mt / ne];
                  var zt = ne * ne - 4 * Bt * Mt;
                  return wt(zt, 0) && zt > 0 ? [(-ne + Math.sqrt(zt)) / (2 * Bt), (-ne - Math.sqrt(zt)) / (2 * Bt)] : st(zt, 0) ? [-ne / (2 * Bt)] : [];
                }
                function ut(qt, Bt) {
                  return (Bt[0] || 0) + (Bt[1] || 0) * qt + (Bt[2] || 0) * qt * qt + (Bt[3] || 0) * qt * qt * qt;
                }
                function st(qt, Bt) {
                  return Math.abs(qt - Bt) < 1e-10;
                }
                function wt(qt, Bt) {
                  return Math.abs(qt - Bt) >= 1e-10;
                }
                function V(qt) {
                  return qt > -1e21 && qt < 1e21 ? Math.round(qt * 1e6) / 1e6 : 0;
                }
                function Ft(qt) {
                  return typeof qt == "object" && qt !== null && typeof qt.length == "number";
                }
                function U(qt) {
                  for (var Bt = new me((qt || "").trim()), ne = [1, 0, 0, 1, 0, 0], Mt; Mt = Bt.match(/^([A-Za-z]+)\s*[(]([^(]+)[)]/, !0); ) {
                    for (var zt = Mt[1], Ut = [], Vt = new me(Mt[2].trim()), ee = void 0; ee = Vt.matchNumber(); )
                      Ut.push(Number(ee)), Vt.matchSeparator();
                    if (zt === "matrix" && Ut.length === 6)
                      ne = bt(ne, [Ut[0], Ut[1], Ut[2], Ut[3], Ut[4], Ut[5]]);
                    else if (zt === "translate" && Ut.length === 2)
                      ne = bt(ne, [1, 0, 0, 1, Ut[0], Ut[1]]);
                    else if (zt === "translate" && Ut.length === 1)
                      ne = bt(ne, [1, 0, 0, 1, Ut[0], 0]);
                    else if (zt === "scale" && Ut.length === 2)
                      ne = bt(ne, [Ut[0], 0, 0, Ut[1], 0, 0]);
                    else if (zt === "scale" && Ut.length === 1)
                      ne = bt(ne, [Ut[0], 0, 0, Ut[0], 0, 0]);
                    else if (zt === "rotate" && Ut.length === 3) {
                      var kt = Ut[0] * Math.PI / 180;
                      ne = bt(ne, [1, 0, 0, 1, Ut[1], Ut[2]], [Math.cos(kt), Math.sin(kt), -Math.sin(kt), Math.cos(kt), 0, 0], [1, 0, 0, 1, -Ut[1], -Ut[2]]);
                    } else if (zt === "rotate" && Ut.length === 1) {
                      var oe = Ut[0] * Math.PI / 180;
                      ne = bt(ne, [Math.cos(oe), Math.sin(oe), -Math.sin(oe), Math.cos(oe), 0, 0]);
                    } else if (zt === "skewX" && Ut.length === 1) {
                      var Jt = Ut[0] * Math.PI / 180;
                      ne = bt(ne, [1, 0, Math.tan(Jt), 1, 0, 0]);
                    } else if (zt === "skewY" && Ut.length === 1) {
                      var ye = Ut[0] * Math.PI / 180;
                      ne = bt(ne, [1, Math.tan(ye), 0, 1, 0, 0]);
                    } else
                      return;
                    Bt.matchSeparator();
                  }
                  if (!Bt.matchAll())
                    return ne;
                }
                function S(qt, Bt, ne, Mt, zt, Ut) {
                  var Vt = (qt || "").trim().match(/^(none)$|^x(Min|Mid|Max)Y(Min|Mid|Max)(?:\s+(meet|slice))?$/) || [], ee = Vt[1] || Vt[4] || "meet", kt = Vt[2] || "Mid", oe = Vt[3] || "Mid", Jt = Bt / Mt, ye = ne / zt, Pe = {
                    Min: 0,
                    Mid: 0.5,
                    Max: 1
                  }[kt] - (Ut || 0), Le = {
                    Min: 0,
                    Mid: 0.5,
                    Max: 1
                  }[oe] - (Ut || 0);
                  return ee === "slice" ? ye = Jt = Math.max(Jt, ye) : ee === "meet" && (ye = Jt = Math.min(Jt, ye)), [Jt, 0, 0, ye, Pe * (Bt - Mt * Jt), Le * (ne - zt * ye)];
                }
                function k(qt) {
                  var Bt = /* @__PURE__ */ Object.create(null);
                  qt = (qt || "").trim().split(/;/);
                  for (var ne = 0; ne < qt.length; ne++) {
                    var Mt = (qt[ne].split(":")[0] || "").trim(), zt = (qt[ne].split(":")[1] || "").trim();
                    Mt && (Bt[Mt] = zt);
                  }
                  if (Bt.marker && (Bt["marker-start"] || (Bt["marker-start"] = Bt.marker), Bt["marker-mid"] || (Bt["marker-mid"] = Bt.marker), Bt["marker-end"] || (Bt["marker-end"] = Bt.marker)), Bt.font) {
                    for (var Ut = null, Vt = null, ee = "normal", kt = "normal", oe = "normal", Jt = Bt.font.split(/\s+/), ye = 0; ye < Jt.length; ye++)
                      switch (Jt[ye]) {
                        case "normal":
                          break;
                        case "italic":
                        case "oblique":
                          ee = Jt[ye];
                          break;
                        case "small-caps":
                          oe = Jt[ye];
                          break;
                        case "bold":
                        case "bolder":
                        case "lighter":
                        case "100":
                        case "200":
                        case "300":
                        case "400":
                        case "500":
                        case "600":
                        case "700":
                        case "800":
                        case "900":
                          kt = Jt[ye];
                          break;
                        default:
                          Vt ? Ut ? Ut += " " + Jt[ye] : Ut = Jt[ye] : Vt = Jt[ye].split("/")[0];
                          break;
                      }
                    Bt["font-style"] || (Bt["font-style"] = ee), Bt["font-variant"] || (Bt["font-variant"] = oe), Bt["font-weight"] || (Bt["font-weight"] = kt), Bt["font-size"] || (Bt["font-size"] = Vt), Bt["font-family"] || (Bt["font-family"] = Ut);
                  }
                  return Bt;
                }
                function H(qt) {
                  for (var Bt = qt.split(/(?=[.#])/g), ne = [], Mt = [], zt = [], Ut, Vt = 0; Vt < Bt.length; Vt++)
                    if (Ut = Bt[Vt].match(/^[#]([_A-Za-z0-9-]+)$/))
                      ne.push(Ut[1]);
                    else if (Ut = Bt[Vt].match(/^[.]([_A-Za-z0-9-]+)$/))
                      Mt.push(Ut[1]);
                    else if (Ut = Bt[Vt].match(/^([_A-Za-z0-9-]+)$/))
                      zt.push(Ut[1]);
                    else if (Bt[Vt] !== "*")
                      return;
                  return {
                    tags: zt,
                    ids: ne,
                    classes: Mt,
                    specificity: ne.length * 1e4 + Mt.length * 100 + zt.length
                  };
                }
                function it(qt) {
                  for (var Bt = new me(qt.trim()), ne = [], Mt; Mt = Bt.match(/^\s*([^\{\}]*?)\s*\{([^\{\}]*?)\}/, !0); )
                    for (var zt = Mt[1].split(/\s*,\s*/g), Ut = k(Mt[2]), Vt = 0; Vt < zt.length; Vt++) {
                      var ee = H(zt[Vt]);
                      ee && ne.push({
                        selector: ee,
                        css: Ut
                      });
                    }
                  return ne;
                }
                function et(qt, Bt) {
                  if (qt.nodeType !== 1)
                    return !1;
                  for (var ne = 0; ne < Bt.tags.length; ne++)
                    if (Bt.tags[ne] !== qt.nodeName)
                      return !1;
                  for (var Mt = 0; Mt < Bt.ids.length; Mt++)
                    if (Bt.ids[Mt] !== qt.id)
                      return !1;
                  for (var zt = 0; zt < Bt.classes.length; zt++)
                    if (qt.classList.indexOf(Bt.classes[zt]) === -1)
                      return !1;
                  return !0;
                }
                function tt(qt) {
                  for (var Bt = /* @__PURE__ */ Object.create(null), ne = /* @__PURE__ */ Object.create(null), Mt = 0; Mt < rn.length; Mt++) {
                    var zt = rn[Mt];
                    if (et(qt, zt.selector))
                      for (var Ut in zt.css)
                        ne[Ut] > zt.selector.specificity || (Bt[Ut] = zt.css[Ut], ne[Ut] = zt.selector.specificity);
                  }
                  return Bt;
                }
                function Ct(qt, Bt) {
                  return qt.concat(Bt.slice(qt.length));
                }
                function Rt(qt, Bt) {
                  return Math.max(qt.ascender, (qt.bbox[3] || qt.bbox.maxY) * (qt.scale || 1)) * Bt / 1e3;
                }
                function Kt(qt, Bt) {
                  return Math.min(qt.descender, (qt.bbox[1] || qt.bbox.minY) * (qt.scale || 1)) * Bt / 1e3;
                }
                function Gt(qt, Bt) {
                  return (qt.xHeight || 0.5 * (qt.ascender - qt.descender)) * Bt / 1e3;
                }
                function It(qt, Bt, ne, Mt) {
                  var zt, Ut;
                  switch (ne) {
                    case "middle":
                      zt = 0.5 * Gt(qt, Bt);
                      break;
                    case "central":
                      zt = 0.5 * (Kt(qt, Bt) + Rt(qt, Bt));
                      break;
                    case "after-edge":
                    case "text-after-edge":
                      zt = Kt(qt, Bt);
                      break;
                    case "alphabetic":
                    case "auto":
                    case "baseline":
                      zt = 0;
                      break;
                    case "mathematical":
                      zt = 0.5 * Rt(qt, Bt);
                      break;
                    case "hanging":
                      zt = 0.8 * Rt(qt, Bt);
                      break;
                    case "before-edge":
                    case "text-before-edge":
                      zt = Rt(qt, Bt);
                      break;
                    default:
                      zt = 0;
                      break;
                  }
                  switch (Mt) {
                    case "baseline":
                      Ut = 0;
                      break;
                    case "super":
                      Ut = 0.6 * Bt;
                      break;
                    case "sub":
                      Ut = -0.6 * Bt;
                      break;
                    default:
                      Ut = Mt;
                      break;
                  }
                  return zt - Ut;
                }
                function re(qt, Bt, ne) {
                  for (var Mt = qt.encode("" + ne), zt = Mt[0], Ut = Mt[1], Vt = [], ee = 0; ee < zt.length; ee++) {
                    var kt = qt.unicode ? qt.unicode[parseInt(zt[ee], 16)] : [ne.charCodeAt(ee)];
                    Vt.push({
                      glyph: zt[ee],
                      unicode: kt,
                      width: Ut[ee].advanceWidth * Bt / 1e3,
                      xOffset: Ut[ee].xOffset * Bt / 1e3,
                      yOffset: Ut[ee].yOffset * Bt / 1e3,
                      xAdvance: Ut[ee].xAdvance * Bt / 1e3,
                      yAdvance: Ut[ee].yAdvance * Bt / 1e3
                    });
                  }
                  return Vt;
                }
                function be(qt, Bt) {
                  switch (qt.nodeName) {
                    case "use":
                      return new Re(qt, Bt);
                    case "symbol":
                      return new Ie(qt, Bt);
                    case "g":
                      return new Ot(qt, Bt);
                    case "a":
                      return new vt(qt, Bt);
                    case "svg":
                      return new W(qt, Bt);
                    case "image":
                      return new Q(qt, Bt);
                    case "rect":
                      return new Ht(qt, Bt);
                    case "circle":
                      return new we(qt, Bt);
                    case "ellipse":
                      return new rt(qt, Bt);
                    case "line":
                      return new _t(qt, Bt);
                    case "polyline":
                      return new ae(qt, Bt);
                    case "polygon":
                      return new Et(qt, Bt);
                    case "path":
                      return new Zt(qt, Bt);
                    case "text":
                      return new Te(qt, Bt);
                    case "tspan":
                      return new nn(qt, Bt);
                    case "textPath":
                      return new er(qt, Bt);
                    case "#text":
                    case "#cdata-section":
                      return new He(qt);
                    default:
                      return new $t(qt, Bt);
                  }
                }
                var me = function(Bt) {
                  this.match = function(ne, Mt) {
                    var zt = Bt.match(ne);
                    if (!(!zt || zt.index !== 0))
                      return Bt = Bt.substring(zt[0].length), Mt ? zt : zt[0];
                  }, this.matchSeparator = function() {
                    return this.match(/^(?:\s*,\s*|\s*|)/);
                  }, this.matchSpace = function() {
                    return this.match(/^(?:\s*)/);
                  }, this.matchLengthUnit = function() {
                    return this.match(/^(?:px|pt|cm|mm|in|pc|em|ex|%|)/);
                  }, this.matchNumber = function() {
                    return this.match(/^(?:[-+]?(?:[0-9]+[.][0-9]+|[0-9]+[.]|[.][0-9]+|[0-9]+)(?:[eE][-+]?[0-9]+)?)/);
                  }, this.matchAll = function() {
                    return this.match(/^[\s\S]+/);
                  };
                }, le = function(Bt, ne, Mt, zt, Ut, Vt, ee, kt) {
                  for (var oe = 6 * Jn, Jt = [Bt, -3 * Bt + 3 * Mt, 3 * Bt - 6 * Mt + 3 * Ut, -Bt + 3 * Mt - 3 * Ut + ee], ye = [ne, -3 * ne + 3 * zt, 3 * ne - 6 * zt + 3 * Vt, -ne + 3 * zt - 3 * Vt + kt], Pe = [-3 * Bt + 3 * Mt, 6 * Bt - 12 * Mt + 6 * Ut, -3 * Bt + 9 * Mt - 9 * Ut + 3 * ee], Le = [-3 * ne + 3 * zt, 6 * ne - 12 * zt + 6 * Vt, -3 * ne + 9 * zt - 9 * Vt + 3 * kt], Ze = [0], $e = 1; $e <= oe; $e++) {
                    var or = ($e - 0.5) / oe, pe = ut(or, Pe) / oe, ze = ut(or, Le) / oe, qe = Math.sqrt(pe * pe + ze * ze);
                    Ze[$e] = Ze[$e - 1] + qe;
                  }
                  this.totalLength = Ze[oe], this.startPoint = [Bt, ne, st(Bt, Mt) && st(ne, zt) ? Math.atan2(Vt - zt, Ut - Mt) : Math.atan2(zt - ne, Mt - Bt)], this.endPoint = [ee, kt, st(Ut, ee) && st(Vt, kt) ? Math.atan2(Vt - zt, Ut - Mt) : Math.atan2(kt - Vt, ee - Ut)], this.getBoundingBox = function() {
                    var Ve, sr = ut(0, Jt), Je = ut(0, ye), dr = ut(1, Jt), lr = ut(1, ye);
                    sr > dr && (Ve = dr, dr = sr, sr = Ve), Je > lr && (Ve = lr, lr = Je, Je = Ve);
                    for (var Tr = yt(Pe), Hr = 0; Hr < Tr.length; Hr++)
                      if (Tr[Hr] >= 0 && Tr[Hr] <= 1) {
                        var Rr = ut(Tr[Hr], Jt);
                        Rr < sr && (sr = Rr), Rr > dr && (dr = Rr);
                      }
                    for (var Or = yt(Le), Vr = 0; Vr < Or.length; Vr++)
                      if (Or[Vr] >= 0 && Or[Vr] <= 1) {
                        var tn = ut(Or[Vr], ye);
                        tn < Je && (Je = tn), tn > lr && (lr = tn);
                      }
                    return [sr, Je, dr, lr];
                  }, this.getPointAtLength = function(Ve) {
                    if (st(Ve, 0))
                      return this.startPoint;
                    if (st(Ve, this.totalLength))
                      return this.endPoint;
                    if (!(Ve < 0 || Ve > this.totalLength))
                      for (var sr = 1; sr <= oe; sr++) {
                        var Je = Ze[sr - 1], dr = Ze[sr];
                        if (Je <= Ve && Ve <= dr) {
                          var lr = (sr - (dr - Ve) / (dr - Je)) / oe, Tr = ut(lr, Jt), Hr = ut(lr, ye), Rr = ut(lr, Pe), Or = ut(lr, Le);
                          return [Tr, Hr, Math.atan2(Or, Rr)];
                        }
                      }
                  };
                }, Se = function(Bt, ne, Mt, zt) {
                  this.totalLength = Math.sqrt((Mt - Bt) * (Mt - Bt) + (zt - ne) * (zt - ne)), this.startPoint = [Bt, ne, Math.atan2(zt - ne, Mt - Bt)], this.endPoint = [Mt, zt, Math.atan2(zt - ne, Mt - Bt)], this.getBoundingBox = function() {
                    return [Math.min(this.startPoint[0], this.endPoint[0]), Math.min(this.startPoint[1], this.endPoint[1]), Math.max(this.startPoint[0], this.endPoint[0]), Math.max(this.startPoint[1], this.endPoint[1])];
                  }, this.getPointAtLength = function(Ut) {
                    if (Ut >= 0 && Ut <= this.totalLength) {
                      var Vt = Ut / this.totalLength || 0, ee = this.startPoint[0] + Vt * (this.endPoint[0] - this.startPoint[0]), kt = this.startPoint[1] + Vt * (this.endPoint[1] - this.startPoint[1]);
                      return [ee, kt, this.startPoint[2]];
                    }
                  };
                }, Wt = function() {
                  this.pathCommands = [], this.pathSegments = [], this.startPoint = null, this.endPoint = null, this.totalLength = 0;
                  var Bt = 0, ne = 0, Mt = 0, zt = 0, Ut, Vt, ee;
                  this.move = function(kt, oe) {
                    return Bt = Mt = kt, ne = zt = oe, null;
                  }, this.line = function(kt, oe) {
                    var Jt = new Se(Mt, zt, kt, oe);
                    return Mt = kt, zt = oe, Jt;
                  }, this.curve = function(kt, oe, Jt, ye, Pe, Le) {
                    var Ze = new le(Mt, zt, kt, oe, Jt, ye, Pe, Le);
                    return Mt = Pe, zt = Le, Ze;
                  }, this.close = function() {
                    var kt = new Se(Mt, zt, Bt, ne);
                    return Mt = Bt, zt = ne, kt;
                  }, this.addCommand = function(kt) {
                    this.pathCommands.push(kt);
                    var oe = this[kt[0]].apply(this, kt.slice(3));
                    oe && (oe.hasStart = kt[1], oe.hasEnd = kt[2], this.startPoint = this.startPoint || oe.startPoint, this.endPoint = oe.endPoint, this.pathSegments.push(oe), this.totalLength += oe.totalLength);
                  }, this.M = function(kt, oe) {
                    return this.addCommand(["move", !0, !0, kt, oe]), Ut = "M", this;
                  }, this.m = function(kt, oe) {
                    return this.M(Mt + kt, zt + oe);
                  }, this.Z = this.z = function() {
                    return this.addCommand(["close", !0, !0]), Ut = "Z", this;
                  }, this.L = function(kt, oe) {
                    return this.addCommand(["line", !0, !0, kt, oe]), Ut = "L", this;
                  }, this.l = function(kt, oe) {
                    return this.L(Mt + kt, zt + oe);
                  }, this.H = function(kt) {
                    return this.L(kt, zt);
                  }, this.h = function(kt) {
                    return this.L(Mt + kt, zt);
                  }, this.V = function(kt) {
                    return this.L(Mt, kt);
                  }, this.v = function(kt) {
                    return this.L(Mt, zt + kt);
                  }, this.C = function(kt, oe, Jt, ye, Pe, Le) {
                    return this.addCommand(["curve", !0, !0, kt, oe, Jt, ye, Pe, Le]), Ut = "C", Vt = Jt, ee = ye, this;
                  }, this.c = function(kt, oe, Jt, ye, Pe, Le) {
                    return this.C(Mt + kt, zt + oe, Mt + Jt, zt + ye, Mt + Pe, zt + Le);
                  }, this.S = function(kt, oe, Jt, ye) {
                    return this.C(Mt + (Ut === "C" ? Mt - Vt : 0), zt + (Ut === "C" ? zt - ee : 0), kt, oe, Jt, ye);
                  }, this.s = function(kt, oe, Jt, ye) {
                    return this.C(Mt + (Ut === "C" ? Mt - Vt : 0), zt + (Ut === "C" ? zt - ee : 0), Mt + kt, zt + oe, Mt + Jt, zt + ye);
                  }, this.Q = function(kt, oe, Jt, ye) {
                    var Pe = Mt + 0.6666666666666666 * (kt - Mt), Le = zt + 2 / 3 * (oe - zt), Ze = Jt + 2 / 3 * (kt - Jt), $e = ye + 2 / 3 * (oe - ye);
                    return this.addCommand(["curve", !0, !0, Pe, Le, Ze, $e, Jt, ye]), Ut = "Q", Vt = kt, ee = oe, this;
                  }, this.q = function(kt, oe, Jt, ye) {
                    return this.Q(Mt + kt, zt + oe, Mt + Jt, zt + ye);
                  }, this.T = function(kt, oe) {
                    return this.Q(Mt + (Ut === "Q" ? Mt - Vt : 0), zt + (Ut === "Q" ? zt - ee : 0), kt, oe);
                  }, this.t = function(kt, oe) {
                    return this.Q(Mt + (Ut === "Q" ? Mt - Vt : 0), zt + (Ut === "Q" ? zt - ee : 0), Mt + kt, zt + oe);
                  }, this.A = function(kt, oe, Jt, ye, Pe, Le, Ze) {
                    if (st(kt, 0) || st(oe, 0))
                      this.addCommand(["line", !0, !0, Le, Ze]);
                    else {
                      Jt = Jt * (Math.PI / 180), kt = Math.abs(kt), oe = Math.abs(oe), ye = 1 * !!ye, Pe = 1 * !!Pe;
                      var $e = Math.cos(Jt) * (Mt - Le) / 2 + Math.sin(Jt) * (zt - Ze) / 2, or = Math.cos(Jt) * (zt - Ze) / 2 - Math.sin(Jt) * (Mt - Le) / 2, pe = $e * $e / (kt * kt) + or * or / (oe * oe);
                      pe > 1 && (kt *= Math.sqrt(pe), oe *= Math.sqrt(pe));
                      var ze = Math.sqrt(Math.max(0, kt * kt * oe * oe - kt * kt * or * or - oe * oe * $e * $e) / (kt * kt * or * or + oe * oe * $e * $e)), qe = (ye === Pe ? -1 : 1) * ze * kt * or / oe, Ve = (ye === Pe ? 1 : -1) * ze * oe * $e / kt, sr = Math.cos(Jt) * qe - Math.sin(Jt) * Ve + (Mt + Le) / 2, Je = Math.sin(Jt) * qe + Math.cos(Jt) * Ve + (zt + Ze) / 2, dr = Math.atan2((or - Ve) / oe, ($e - qe) / kt), lr = Math.atan2((-or - Ve) / oe, (-$e - qe) / kt);
                      Pe === 0 && lr - dr > 0 ? lr -= 2 * Math.PI : Pe === 1 && lr - dr < 0 && (lr += 2 * Math.PI);
                      for (var Tr = Math.ceil(Math.abs(lr - dr) / (Math.PI / Jn)), Hr = 0; Hr < Tr; Hr++) {
                        var Rr = dr + Hr * (lr - dr) / Tr, Or = dr + (Hr + 1) * (lr - dr) / Tr, Vr = 4 / 3 * Math.tan((Or - Rr) / 4), tn = sr + Math.cos(Jt) * kt * (Math.cos(Rr) - Vr * Math.sin(Rr)) - Math.sin(Jt) * oe * (Math.sin(Rr) + Vr * Math.cos(Rr)), Pn = Je + Math.sin(Jt) * kt * (Math.cos(Rr) - Vr * Math.sin(Rr)) + Math.cos(Jt) * oe * (Math.sin(Rr) + Vr * Math.cos(Rr)), on = sr + Math.cos(Jt) * kt * (Math.cos(Or) + Vr * Math.sin(Or)) - Math.sin(Jt) * oe * (Math.sin(Or) - Vr * Math.cos(Or)), Tn = Je + Math.sin(Jt) * kt * (Math.cos(Or) + Vr * Math.sin(Or)) + Math.cos(Jt) * oe * (Math.sin(Or) - Vr * Math.cos(Or)), Gn = sr + Math.cos(Jt) * kt * Math.cos(Or) - Math.sin(Jt) * oe * Math.sin(Or), ln = Je + Math.sin(Jt) * kt * Math.cos(Or) + Math.cos(Jt) * oe * Math.sin(Or);
                        this.addCommand(["curve", Hr === 0, Hr === Tr - 1, tn, Pn, on, Tn, Gn, ln]);
                      }
                    }
                    return Ut = "A", this;
                  }, this.a = function(kt, oe, Jt, ye, Pe, Le, Ze) {
                    return this.A(kt, oe, Jt, ye, Pe, Mt + Le, zt + Ze);
                  }, this.path = function(kt) {
                    for (var oe, Jt, ye, Pe = new me((kt || "").trim()); oe = Pe.match(/^[astvzqmhlcASTVZQMHLC]/); ) {
                      Pe.matchSeparator();
                      for (var Le = []; Jt = x[oe + Le.length] ? Pe.match(/^[01]/) : Pe.matchNumber(); )
                        Pe.matchSeparator(), Le.length === y[oe] && (this[oe].apply(this, Le), Le = [], oe === "M" ? oe = "L" : oe === "m" && (oe = "l")), Le.push(Number(Jt));
                      if (Le.length === y[oe])
                        this[oe].apply(this, Le);
                      else {
                        nr("SvgPath: command " + oe + " with " + Le.length + " numbers");
                        return;
                      }
                    }
                    return (ye = Pe.matchAll()) && nr("SvgPath: unexpected string " + ye), this;
                  }, this.getBoundingBox = function() {
                    var kt = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
                    function oe(ye) {
                      ye[0] < kt[0] && (kt[0] = ye[0]), ye[2] > kt[2] && (kt[2] = ye[2]), ye[1] < kt[1] && (kt[1] = ye[1]), ye[3] > kt[3] && (kt[3] = ye[3]);
                    }
                    for (var Jt = 0; Jt < this.pathSegments.length; Jt++)
                      oe(this.pathSegments[Jt].getBoundingBox());
                    return kt[0] === 1 / 0 && (kt[0] = 0), kt[1] === 1 / 0 && (kt[1] = 0), kt[2] === -1 / 0 && (kt[2] = 0), kt[3] === -1 / 0 && (kt[3] = 0), kt;
                  }, this.getPointAtLength = function(kt) {
                    if (kt >= 0 && kt <= this.totalLength) {
                      for (var oe, Jt = 0; Jt < this.pathSegments.length; Jt++) {
                        if (oe = this.pathSegments[Jt].getPointAtLength(kt))
                          return oe;
                        kt -= this.pathSegments[Jt].totalLength;
                      }
                      return this.endPoint;
                    }
                  }, this.transform = function(kt) {
                    this.pathSegments = [], this.startPoint = null, this.endPoint = null, this.totalLength = 0;
                    for (var oe = 0; oe < this.pathCommands.length; oe++) {
                      for (var Jt = this.pathCommands.shift(), ye = 3; ye < Jt.length; ye += 2) {
                        var Pe = St([Jt[ye], Jt[ye + 1]], kt);
                        Jt[ye] = Pe[0], Jt[ye + 1] = Pe[1];
                      }
                      this.addCommand(Jt);
                    }
                    return this;
                  }, this.mergeShape = function(kt) {
                    for (var oe = 0; oe < kt.pathCommands.length; oe++)
                      this.addCommand(kt.pathCommands[oe].slice());
                    return this;
                  }, this.clone = function() {
                    return new Wt().mergeShape(this);
                  }, this.insertInDocument = function() {
                    for (var kt = 0; kt < this.pathCommands.length; kt++) {
                      var oe = this.pathCommands[kt][0], Jt = this.pathCommands[kt].slice(3);
                      switch (oe) {
                        case "move":
                          n.moveTo(Jt[0], Jt[1]);
                          break;
                        case "line":
                          n.lineTo(Jt[0], Jt[1]);
                          break;
                        case "curve":
                          n.bezierCurveTo(Jt[0], Jt[1], Jt[2], Jt[3], Jt[4], Jt[5]);
                          break;
                        case "close":
                          n.closePath();
                          break;
                      }
                    }
                  }, this.getSubPaths = function() {
                    for (var kt = [], oe = new Wt(), Jt = 0; Jt < this.pathCommands.length; Jt++) {
                      var ye = this.pathCommands[Jt], Pe = this.pathCommands[Jt][0];
                      Pe === "move" && Jt !== 0 && (kt.push(oe), oe = new Wt()), oe.addCommand(ye);
                    }
                    return kt.push(oe), kt;
                  }, this.getMarkers = function() {
                    for (var kt = [], oe = this.getSubPaths(), Jt = 0; Jt < oe.length; Jt++) {
                      for (var ye = oe[Jt], Pe = [], Le = 0; Le < ye.pathSegments.length; Le++) {
                        var Ze = ye.pathSegments[Le];
                        if (wt(Ze.totalLength, 0) || Le === 0 || Le === ye.pathSegments.length - 1) {
                          if (Ze.hasStart) {
                            var $e = Ze.getPointAtLength(0), or = Pe.pop();
                            or && ($e[2] = 0.5 * (or[2] + $e[2])), Pe.push($e);
                          }
                          if (Ze.hasEnd) {
                            var pe = Ze.getPointAtLength(Ze.totalLength);
                            Pe.push(pe);
                          }
                        }
                      }
                      kt = kt.concat(Pe);
                    }
                    return kt;
                  };
                }, $t = function(Bt, ne) {
                  var Mt = /* @__PURE__ */ Object.create(null), zt = null;
                  this.name = Bt.nodeName, this.isOuterElement = Bt === o || !Bt.parentNode, this.inherits = ne || (this.isOuterElement ? null : be(Bt.parentNode, null)), this.stack = this.inherits ? this.inherits.stack.concat(Bt) : [Bt], this.style = k(typeof Bt.getAttribute == "function" && Bt.getAttribute("style")), this.css = wn ? getComputedStyle(Bt) : tt(Bt), this.allowedChildren = [], this.attr = function(Ut) {
                    if (typeof Bt.getAttribute == "function")
                      return Bt.getAttribute(Ut);
                  }, this.resolveUrl = function(Ut) {
                    var Vt = (Ut || "").match(/^\s*(?:url\("(.*)#(.*)"\)|url\('(.*)#(.*)'\)|url\((.*)#(.*)\)|(.*)#(.*))\s*$/) || [], ee = Vt[1] || Vt[3] || Vt[5] || Vt[7], kt = Vt[2] || Vt[4] || Vt[6] || Vt[8];
                    if (kt) {
                      if (!ee) {
                        var oe = o.getElementById(kt);
                        if (oe) {
                          if (this.stack.indexOf(oe) === -1)
                            return oe;
                          nr('SVGtoPDF: loop of circular references for id "' + kt + '"');
                          return;
                        }
                      }
                      if (Xr) {
                        var Jt = hn[ee];
                        if (!Jt) {
                          Jt = Xr(ee), Ft(Jt) || (Jt = [Jt]);
                          for (var ye = 0; ye < Jt.length; ye++)
                            typeof Jt[ye] == "string" && (Jt[ye] = ot(Jt[ye]));
                          hn[ee] = Jt;
                        }
                        for (var Pe = 0; Pe < Jt.length; Pe++) {
                          var Le = Jt[Pe].getElementById(kt);
                          if (Le) {
                            if (this.stack.indexOf(Le) === -1)
                              return Le;
                            nr('SVGtoPDF: loop of circular references for id "' + ee + "#" + kt + '"');
                            return;
                          }
                        }
                      }
                    }
                  }, this.computeUnits = function(Ut, Vt, ee, kt) {
                    return Vt === "%" ? parseFloat(Ut) / 100 * (kt || ee != null ? ee : this.getViewport()) : Vt === "ex" || Vt === "em" ? Ut * {
                      em: 1,
                      ex: 0.5
                    }[Vt] * (kt ? ee : this.get("font-size")) : Ut * {
                      "": 1,
                      px: 1,
                      pt: 96 / 72,
                      cm: 96 / 2.54,
                      mm: 96 / 25.4,
                      in: 96,
                      pc: 96 / 6
                    }[Vt];
                  }, this.computeLength = function(Ut, Vt, ee, kt) {
                    var oe = new me((Ut || "").trim()), Jt, ye;
                    return typeof (Jt = oe.matchNumber()) == "string" && typeof (ye = oe.matchLengthUnit()) == "string" && !oe.matchAll() ? this.computeUnits(Jt, ye, Vt, kt) : ee;
                  }, this.computeLengthList = function(Ut, Vt, ee) {
                    for (var kt = new me((Ut || "").trim()), oe = [], Jt, ye; typeof (Jt = kt.matchNumber()) == "string" && typeof (ye = kt.matchLengthUnit()) == "string"; )
                      oe.push(this.computeUnits(Jt, ye, Vt)), kt.matchSeparator();
                    if (!(ee && kt.matchAll()))
                      return oe;
                  }, this.getLength = function(Ut, Vt, ee) {
                    return this.computeLength(this.attr(Ut), Vt, ee);
                  }, this.getLengthList = function(Ut, Vt) {
                    return this.computeLengthList(this.attr(Ut), Vt);
                  }, this.getUrl = function(Ut) {
                    return this.resolveUrl(this.attr(Ut));
                  }, this.getNumberList = function(Ut) {
                    for (var Vt = new me((this.attr(Ut) || "").trim()), ee = [], kt; kt = Vt.matchNumber(); )
                      ee.push(Number(kt)), Vt.matchSeparator();
                    return ee.error = Vt.matchAll(), ee;
                  }, this.getViewbox = function(Ut, Vt) {
                    var ee = this.getNumberList(Ut);
                    return ee.length === 4 && ee[2] >= 0 && ee[3] >= 0 ? ee : Vt;
                  }, this.getPercent = function(Ut, Vt) {
                    var ee = this.attr(Ut), kt = new me((ee || "").trim()), oe = kt.matchNumber();
                    return !oe || (kt.match("%") && (oe *= 0.01), kt.matchAll()) ? Vt : Math.max(0, Math.min(1, oe));
                  }, this.chooseValue = function(Ut) {
                    for (var Vt = 0; Vt < arguments.length; Vt++)
                      if (arguments[Vt] != null && arguments[Vt] === arguments[Vt])
                        return arguments[Vt];
                    return arguments[arguments.length - 1];
                  }, this.get = function(Ut) {
                    if (Mt[Ut] !== void 0)
                      return Mt[Ut];
                    for (var Vt = e[Ut] || {}, ee, kt, oe = 0; oe < 3; oe++) {
                      switch (oe) {
                        case 0:
                          Ut !== "transform" && (ee = this.css[Vt.css || Ut]);
                          break;
                        case 1:
                          ee = this.style[Ut];
                          break;
                        case 2:
                          ee = this.attr(Ut);
                          break;
                      }
                      if (ee === "inherit" && (kt = this.inherits ? this.inherits.get(Ut) : Vt.initial, kt != null) || Vt.values != null && (kt = Vt.values[ee], kt != null))
                        return Mt[Ut] = kt;
                      if (ee != null) {
                        var Jt = void 0;
                        switch (Ut) {
                          case "font-size":
                            kt = this.computeLength(ee, this.inherits ? this.inherits.get(Ut) : Vt.initial, void 0, !0);
                            break;
                          case "baseline-shift":
                            kt = this.computeLength(ee, this.get("font-size"));
                            break;
                          case "font-family":
                            kt = ee || void 0;
                            break;
                          case "opacity":
                          case "stroke-opacity":
                          case "fill-opacity":
                          case "stop-opacity":
                            Jt = parseFloat(ee), isNaN(Jt) || (kt = Math.max(0, Math.min(1, Jt)));
                            break;
                          case "transform":
                            kt = U(ee);
                            break;
                          case "stroke-dasharray":
                            if (ee === "none")
                              kt = [];
                            else if (Jt = this.computeLengthList(ee, this.getViewport(), !0)) {
                              for (var ye = 0, Pe = !1, Le = 0; Le < Jt.length; Le++)
                                Jt[Le] < 0 && (Pe = !0), ye += Jt[Le];
                              Pe || (Jt.length % 2 === 1 && (Jt = Jt.concat(Jt)), kt = ye === 0 ? [] : Jt);
                            }
                            break;
                          case "color":
                            ee === "none" || ee === "transparent" ? kt = "none" : kt = nt(ee);
                            break;
                          case "fill":
                          case "stroke":
                            if (ee === "none" || ee === "transparent")
                              kt = "none";
                            else if (ee === "currentColor")
                              kt = this.get("color");
                            else {
                              if (Jt = nt(ee))
                                return Jt;
                              if (Jt = (ee || "").split(" ")) {
                                var Ze = this.resolveUrl(Jt[0]), $e = nt(Jt[1]);
                                Ze == null ? kt = $e : Ze.nodeName === "linearGradient" || Ze.nodeName === "radialGradient" ? kt = new Pt(Ze, null, $e) : Ze.nodeName === "pattern" ? kt = new gt(Ze, null, $e) : kt = $e;
                              }
                            }
                            break;
                          case "stop-color":
                            ee === "none" || ee === "transparent" ? kt = "none" : ee === "currentColor" ? kt = this.get("color") : kt = nt(ee);
                            break;
                          case "marker-start":
                          case "marker-mid":
                          case "marker-end":
                          case "clip-path":
                          case "mask":
                            ee === "none" ? kt = "none" : kt = this.resolveUrl(ee);
                            break;
                          case "stroke-width":
                            Jt = this.computeLength(ee, this.getViewport()), Jt != null && Jt >= 0 && (kt = Jt);
                            break;
                          case "stroke-miterlimit":
                            Jt = parseFloat(ee), Jt != null && Jt >= 1 && (kt = Jt);
                            break;
                          case "word-spacing":
                          case "letter-spacing":
                            kt = this.computeLength(ee, this.getViewport());
                            break;
                          case "stroke-dashoffset":
                            if (kt = this.computeLength(ee, this.getViewport()), kt != null && kt < 0)
                              for (var or = this.get("stroke-dasharray"), pe = 0; pe < or.length; pe++)
                                kt += or[pe];
                            break;
                        }
                        if (kt != null)
                          return Mt[Ut] = kt;
                      }
                    }
                    return Mt[Ut] = Vt.inherit && this.inherits ? this.inherits.get(Ut) : Vt.initial;
                  }, this.getChildren = function() {
                    if (zt != null)
                      return zt;
                    for (var Ut = [], Vt = 0; Vt < Bt.childNodes.length; Vt++) {
                      var ee = Bt.childNodes[Vt];
                      !ee.error && this.allowedChildren.indexOf(ee.nodeName) !== -1 && Ut.push(be(ee, this));
                    }
                    return zt = Ut;
                  }, this.getParentVWidth = function() {
                    return this.inherits ? this.inherits.getVWidth() : Xe;
                  }, this.getParentVHeight = function() {
                    return this.inherits ? this.inherits.getVHeight() : tr;
                  }, this.getParentViewport = function() {
                    return Math.sqrt(0.5 * this.getParentVWidth() * this.getParentVWidth() + 0.5 * this.getParentVHeight() * this.getParentVHeight());
                  }, this.getVWidth = function() {
                    return this.getParentVWidth();
                  }, this.getVHeight = function() {
                    return this.getParentVHeight();
                  }, this.getViewport = function() {
                    return Math.sqrt(0.5 * this.getVWidth() * this.getVWidth() + 0.5 * this.getVHeight() * this.getVHeight());
                  }, this.getBoundingBox = function() {
                    var Ut = this.getBoundingShape();
                    return Ut.getBoundingBox();
                  };
                }, ue = function(Bt, ne) {
                  $t.call(this, Bt, ne), this.transform = function() {
                    n.transform.apply(n, this.getTransformation());
                  }, this.clip = function() {
                    if (this.get("clip-path") !== "none") {
                      var Mt = new Ue(this.get("clip-path"), null);
                      return Mt.useMask(this.getBoundingBox()), !0;
                    }
                  }, this.mask = function() {
                    if (this.get("mask") !== "none") {
                      var Mt = new Be(this.get("mask"), null);
                      return Mt.useMask(this.getBoundingBox()), !0;
                    }
                  }, this.getFill = function(Mt, zt) {
                    var Ut = this.get("opacity"), Vt = this.get("fill"), ee = this.get("fill-opacity");
                    if (Mt)
                      return s.white;
                    if (Vt !== "none" && Ut && ee)
                      return Vt instanceof Pt || Vt instanceof gt ? Vt.getPaint(this.getBoundingBox(), ee * Ut, Mt, zt) : xt(Vt, ee * Ut, zt);
                  }, this.getStroke = function(Mt, zt) {
                    var Ut = this.get("opacity"), Vt = this.get("stroke"), ee = this.get("stroke-opacity");
                    if (!(Mt || st(this.get("stroke-width"), 0)) && Vt !== "none" && Ut && ee)
                      return Vt instanceof Pt || Vt instanceof gt ? Vt.getPaint(this.getBoundingBox(), ee * Ut, Mt, zt) : xt(Vt, ee * Ut, zt);
                  };
                }, he = function(Bt, ne) {
                  ue.call(this, Bt, ne), this.allowedChildren = ["use", "g", "a", "svg", "image", "rect", "circle", "ellipse", "line", "polyline", "polygon", "path", "text"], this.getBoundingShape = function() {
                    for (var Mt = new Wt(), zt = this.getChildren(), Ut = 0; Ut < zt.length; Ut++)
                      if (zt[Ut].get("display") !== "none" && typeof zt[Ut].getBoundingShape == "function") {
                        var Vt = zt[Ut].getBoundingShape().clone();
                        typeof zt[Ut].getTransformation == "function" && Vt.transform(zt[Ut].getTransformation()), Mt.mergeShape(Vt);
                      }
                    return Mt;
                  }, this.drawChildren = function(Mt, zt) {
                    for (var Ut = this.getChildren(), Vt = 0; Vt < Ut.length; Vt++)
                      Ut[Vt].get("display") !== "none" && typeof Ut[Vt].drawInDocument == "function" && Ut[Vt].drawInDocument(Mt, zt);
                  };
                }, Ee = function(Bt, ne) {
                  he.call(this, Bt, ne), this.drawContent = function(Mt, zt) {
                    this.transform();
                    var Ut = this.clip(), Vt = this.mask(), ee;
                    (this.get("opacity") < 1 || Ut || Vt) && !Mt && (ee = b(Lt())), this.drawChildren(Mt, zt), ee && (A(ee), n.fillOpacity(this.get("opacity")), P(ee));
                  };
                }, Re = function(Bt, ne) {
                  Ee.call(this, Bt, ne);
                  var Mt = this.getLength("x", this.getVWidth(), 0), zt = this.getLength("y", this.getVHeight(), 0), Ut = this.getUrl("href") || this.getUrl("xlink:href");
                  Ut && (Ut = be(Ut, this)), this.getChildren = function() {
                    return Ut ? [Ut] : [];
                  }, this.drawInDocument = function(Vt, ee) {
                    n.save(), this.drawContent(Vt, ee), n.restore();
                  }, this.getTransformation = function() {
                    return bt(this.get("transform"), [1, 0, 0, 1, Mt, zt]);
                  };
                }, Ie = function(Bt, ne) {
                  Ee.call(this, Bt, ne);
                  var Mt = this.getLength("width", this.getParentVWidth(), this.getParentVWidth()), zt = this.getLength("height", this.getParentVHeight(), this.getParentVHeight());
                  ne instanceof Re && (Mt = ne.getLength("width", ne.getParentVWidth(), Mt), zt = ne.getLength("height", ne.getParentVHeight(), zt));
                  var Ut = (this.attr("preserveAspectRatio") || "").trim(), Vt = this.getViewbox("viewBox", [0, 0, Mt, zt]);
                  this.getVWidth = function() {
                    return Vt[2];
                  }, this.getVHeight = function() {
                    return Vt[3];
                  }, this.drawInDocument = function(ee, kt) {
                    n.save(), this.drawContent(ee, kt), n.restore();
                  }, this.getTransformation = function() {
                    return bt(S(Ut, Mt, zt, Vt[2], Vt[3]), [1, 0, 0, 1, -Vt[0], -Vt[1]]);
                  };
                }, Ot = function(Bt, ne) {
                  Ee.call(this, Bt, ne), this.drawInDocument = function(Mt, zt) {
                    n.save(), this.link && !Mt && !zt && this.addLink(), this.drawContent(Mt, zt), n.restore();
                  }, this.getTransformation = function() {
                    return this.get("transform");
                  };
                }, vt = function(Bt, ne) {
                  ne && ne.isText ? (nn.call(this, Bt, ne), this.allowedChildren = ["textPath", "tspan", "#text", "#cdata-section", "a"]) : Ot.call(this, Bt, ne), this.link = this.attr("href") || this.attr("xlink:href"), this.addLink = function() {
                    if (this.link.match(/^(?:[a-z][a-z0-9+.-]*:|\/\/)?/i) && this.getChildren().length) {
                      var Mt = this.getBoundingShape().transform(Dt()).getBoundingBox();
                      G(Mt[0], Mt[1], Mt[2], Mt[3], this.link);
                    }
                  };
                }, W = function(Bt, ne) {
                  Ee.call(this, Bt, ne);
                  var Mt = this.getLength("width", this.getParentVWidth(), this.getParentVWidth()), zt = this.getLength("height", this.getParentVHeight(), this.getParentVHeight()), Ut = this.getLength("x", this.getParentVWidth(), 0), Vt = this.getLength("y", this.getParentVHeight(), 0);
                  ne instanceof Re && (Mt = ne.getLength("width", ne.getParentVWidth(), Mt), zt = ne.getLength("height", ne.getParentVHeight(), zt));
                  var ee = this.attr("preserveAspectRatio"), kt = this.getViewbox("viewBox", [0, 0, Mt, zt]);
                  this.isOuterElement && cn && (Ut = Vt = 0, Mt = Xe, zt = tr, ee = cn), this.getVWidth = function() {
                    return kt[2];
                  }, this.getVHeight = function() {
                    return kt[3];
                  }, this.drawInDocument = function(oe, Jt) {
                    n.save(), this.get("overflow") === "hidden" && (new Wt().M(Ut, Vt).L(Ut + Mt, Vt).L(Ut + Mt, Vt + zt).L(Ut, Vt + zt).Z().transform(this.get("transform")).insertInDocument(), n.clip()), this.drawContent(oe, Jt), n.restore();
                  }, this.getTransformation = function() {
                    return bt(this.get("transform"), [1, 0, 0, 1, Ut, Vt], S(ee, Mt, zt, kt[2], kt[3]), [1, 0, 0, 1, -kt[0], -kt[1]]);
                  };
                }, Q = function(Bt, ne) {
                  ue.call(this, Bt, ne);
                  var Mt = Wr(this.attr("href") || this.attr("xlink:href") || ""), zt = this.getLength("x", this.getVWidth(), 0), Ut = this.getLength("y", this.getVHeight(), 0), Vt = this.getLength("width", this.getVWidth(), "auto"), ee = this.getLength("height", this.getVHeight(), "auto"), kt;
                  try {
                    kt = n.openImage(Mt);
                  } catch (oe) {
                    nr('SVGElemImage: failed to open image "' + Mt + '" in PDFKit');
                  }
                  kt && (Vt === "auto" && ee !== "auto" ? Vt = ee * kt.width / kt.height : ee === "auto" && Vt !== "auto" ? ee = Vt * kt.height / kt.width : Vt === "auto" && ee === "auto" && (Vt = kt.width, ee = kt.height)), (Vt === "auto" || Vt < 0) && (Vt = 0), (ee === "auto" || ee < 0) && (ee = 0), this.getTransformation = function() {
                    return this.get("transform");
                  }, this.getBoundingShape = function() {
                    return new Wt().M(zt, Ut).L(zt + Vt, Ut).M(zt + Vt, Ut + ee).L(zt, Ut + ee);
                  }, this.drawInDocument = function(oe, Jt) {
                    this.get("visibility") === "hidden" || !kt || (n.save(), this.transform(), this.get("overflow") === "hidden" && n.rect(zt, Ut, Vt, ee).clip(), this.clip(), this.mask(), n.translate(zt, Ut), n.transform.apply(n, S(this.attr("preserveAspectRatio"), Vt, ee, kt ? kt.width : Vt, kt ? kt.height : ee)), oe ? (n.rect(0, 0, kt.width, kt.height), M(s.white).fill()) : (n.fillOpacity(this.get("opacity")), n.image(kt, 0, 0)), n.restore());
                  };
                }, gt = function(Bt, ne, Mt) {
                  he.call(this, Bt, ne), this.ref = function() {
                    var Vt = this.getUrl("href") || this.getUrl("xlink:href");
                    if (Vt && Vt.nodeName === Bt.nodeName)
                      return new gt(Vt, ne, Mt);
                  }.call(this);
                  var zt = this.attr;
                  this.attr = function(Vt) {
                    var ee = zt.call(this, Vt);
                    return ee != null || Vt === "href" || Vt === "xlink:href" ? ee : this.ref ? this.ref.attr(Vt) : null;
                  };
                  var Ut = this.getChildren;
                  this.getChildren = function() {
                    var Vt = Ut.call(this);
                    return Vt.length > 0 ? Vt : this.ref ? this.ref.getChildren() : [];
                  }, this.getPaint = function(Vt, ee, kt, oe) {
                    var Jt = this.attr("patternUnits") !== "userSpaceOnUse", ye = this.attr("patternContentUnits") === "objectBoundingBox", Pe = this.getLength("x", Jt ? 1 : this.getParentVWidth(), 0), Le = this.getLength("y", Jt ? 1 : this.getParentVHeight(), 0), Ze = this.getLength("width", Jt ? 1 : this.getParentVWidth(), 0), $e = this.getLength("height", Jt ? 1 : this.getParentVHeight(), 0);
                    ye && !Jt ? (Pe = (Pe - Vt[0]) / (Vt[2] - Vt[0]) || 0, Le = (Le - Vt[1]) / (Vt[3] - Vt[1]) || 0, Ze = Ze / (Vt[2] - Vt[0]) || 0, $e = $e / (Vt[3] - Vt[1]) || 0) : !ye && Jt && (Pe = Vt[0] + Pe * (Vt[2] - Vt[0]), Le = Vt[1] + Le * (Vt[3] - Vt[1]), Ze = Ze * (Vt[2] - Vt[0]), $e = $e * (Vt[3] - Vt[1]));
                    var or = this.getViewbox("viewBox", [0, 0, Ze, $e]), pe = (this.attr("preserveAspectRatio") || "").trim(), ze = bt(S(pe, Ze, $e, or[2], or[3], 0), [1, 0, 0, 1, -or[0], -or[1]]), qe = U(this.attr("patternTransform"));
                    if (ye && (qe = bt([Vt[2] - Vt[0], 0, 0, Vt[3] - Vt[1], Vt[0], Vt[1]], qe)), qe = bt(qe, [1, 0, 0, 1, Pe, Le]), (qe = J(qe)) && (ze = J(ze)) && (Ze = V(Ze)) && ($e = V($e))) {
                      var Ve = b([0, 0, Ze, $e]);
                      return n.transform.apply(n, ze), this.drawChildren(kt, oe), A(Ve), [E(Ve, Ze, $e, qe), ee];
                    } else
                      return Mt ? [Mt[0], Mt[1] * ee] : void 0;
                  }, this.getVWidth = function() {
                    var Vt = this.attr("patternUnits") !== "userSpaceOnUse", ee = this.getLength("width", Vt ? 1 : this.getParentVWidth(), 0);
                    return this.getViewbox("viewBox", [0, 0, ee, 0])[2];
                  }, this.getVHeight = function() {
                    var Vt = this.attr("patternUnits") !== "userSpaceOnUse", ee = this.getLength("height", Vt ? 1 : this.getParentVHeight(), 0);
                    return this.getViewbox("viewBox", [0, 0, 0, ee])[3];
                  };
                }, Pt = function(Bt, ne, Mt) {
                  $t.call(this, Bt, ne), this.allowedChildren = ["stop"], this.ref = function() {
                    var Vt = this.getUrl("href") || this.getUrl("xlink:href");
                    if (Vt && Vt.nodeName === Bt.nodeName)
                      return new Pt(Vt, ne, Mt);
                  }.call(this);
                  var zt = this.attr;
                  this.attr = function(Vt) {
                    var ee = zt.call(this, Vt);
                    return ee != null || Vt === "href" || Vt === "xlink:href" ? ee : this.ref ? this.ref.attr(Vt) : null;
                  };
                  var Ut = this.getChildren;
                  this.getChildren = function() {
                    var Vt = Ut.call(this);
                    return Vt.length > 0 ? Vt : this.ref ? this.ref.getChildren() : [];
                  }, this.getPaint = function(Vt, ee, kt, oe) {
                    var Jt = this.getChildren();
                    if (Jt.length !== 0) {
                      if (Jt.length === 1) {
                        var ye = Jt[0], Pe = ye.get("stop-color");
                        return Pe === "none" ? void 0 : xt(Pe, ye.get("stop-opacity") * ee, oe);
                      }
                      var Le = this.attr("gradientUnits") !== "userSpaceOnUse", Ze = U(this.attr("gradientTransform")), $e = this.attr("spreadMethod"), or, pe, ze, qe, Ve, sr, Je = 0, dr = 0, lr = 1;
                      if (Le && (Ze = bt([Vt[2] - Vt[0], 0, 0, Vt[3] - Vt[1], Vt[0], Vt[1]], Ze)), Ze = J(Ze)) {
                        if (this.name === "linearGradient")
                          pe = this.getLength("x1", Le ? 1 : this.getVWidth(), 0), ze = this.getLength("x2", Le ? 1 : this.getVWidth(), Le ? 1 : this.getVWidth()), qe = this.getLength("y1", Le ? 1 : this.getVHeight(), 0), Ve = this.getLength("y2", Le ? 1 : this.getVHeight(), 0);
                        else {
                          ze = this.getLength("cx", Le ? 1 : this.getVWidth(), Le ? 0.5 : 0.5 * this.getVWidth()), Ve = this.getLength("cy", Le ? 1 : this.getVHeight(), Le ? 0.5 : 0.5 * this.getVHeight()), sr = this.getLength("r", Le ? 1 : this.getViewport(), Le ? 0.5 : 0.5 * this.getViewport()), pe = this.getLength("fx", Le ? 1 : this.getVWidth(), ze), qe = this.getLength("fy", Le ? 1 : this.getVHeight(), Ve), sr < 0 && nr("SvgElemGradient: negative r value");
                          var Tr = Math.sqrt(Math.pow(ze - pe, 2) + Math.pow(Ve - qe, 2)), Hr = 1;
                          Tr > sr && (Hr = sr / Tr, pe = ze + (pe - ze) * Hr, qe = Ve + (qe - Ve) * Hr), sr = Math.max(sr, Tr * Hr * (1 + 1e-6));
                        }
                        if ($e === "reflect" || $e === "repeat") {
                          var Rr = jt(Ze), Or = St([Vt[0], Vt[1]], Rr), Vr = St([Vt[2], Vt[1]], Rr), tn = St([Vt[2], Vt[3]], Rr), Pn = St([Vt[0], Vt[3]], Rr);
                          this.name === "linearGradient" ? (Je = Math.max((Or[0] - ze) * (ze - pe) + (Or[1] - Ve) * (Ve - qe), (Vr[0] - ze) * (ze - pe) + (Vr[1] - Ve) * (Ve - qe), (tn[0] - ze) * (ze - pe) + (tn[1] - Ve) * (Ve - qe), (Pn[0] - ze) * (ze - pe) + (Pn[1] - Ve) * (Ve - qe)) / (Math.pow(ze - pe, 2) + Math.pow(Ve - qe, 2)), dr = Math.max((Or[0] - pe) * (pe - ze) + (Or[1] - qe) * (qe - Ve), (Vr[0] - pe) * (pe - ze) + (Vr[1] - qe) * (qe - Ve), (tn[0] - pe) * (pe - ze) + (tn[1] - qe) * (qe - Ve), (Pn[0] - pe) * (pe - ze) + (Pn[1] - qe) * (qe - Ve)) / (Math.pow(ze - pe, 2) + Math.pow(Ve - qe, 2))) : Je = Math.sqrt(Math.max(Math.pow(Or[0] - ze, 2) + Math.pow(Or[1] - Ve, 2), Math.pow(Vr[0] - ze, 2) + Math.pow(Vr[1] - Ve, 2), Math.pow(tn[0] - ze, 2) + Math.pow(tn[1] - Ve, 2), Math.pow(Pn[0] - ze, 2) + Math.pow(Pn[1] - Ve, 2))) / sr - 1, Je = Math.ceil(Je + 0.5), dr = Math.ceil(dr + 0.5), lr = dr + 1 + Je;
                        }
                        this.name === "linearGradient" ? or = n.linearGradient(pe - dr * (ze - pe), qe - dr * (Ve - qe), ze + Je * (ze - pe), Ve + Je * (Ve - qe)) : or = n.radialGradient(pe, qe, 0, ze, Ve, sr + Je * sr);
                        for (var on = 0; on < lr; on++)
                          for (var Tn = 0, Gn = $e !== "reflect" || (on - dr) % 2 === 0, ln = 0; ln < Jt.length; ln++) {
                            var dn = Jt[Gn ? ln : Jt.length - 1 - ln], Lr = dn.get("stop-color");
                            Lr === "none" && (Lr = s.transparent), Lr = xt(Lr, dn.get("stop-opacity") * ee, oe), Tn = Math.max(Tn, Gn ? dn.getPercent("offset", 0) : 1 - dn.getPercent("offset", 0)), ln === 0 && Lr[0].length === 4 && (or._colorSpace = "DeviceCMYK"), ln === 0 && Tn > 0 && or.stop((on + 0) / lr, Lr[0], Lr[1]), or.stop((on + Tn) / (Je + dr + 1), Lr[0], Lr[1]), ln === Jt.length - 1 && Tn < 1 && or.stop((on + 1) / lr, Lr[0], Lr[1]);
                          }
                        return or.setTransform.apply(or, Ze), [or, 1];
                      } else
                        return Mt ? [Mt[0], Mt[1] * ee] : void 0;
                    }
                  };
                }, ht = function(Bt, ne) {
                  ue.call(this, Bt, ne), this.dashScale = 1, this.getBoundingShape = function() {
                    return this.shape;
                  }, this.getTransformation = function() {
                    return this.get("transform");
                  }, this.drawInDocument = function(Mt, zt) {
                    if (!(this.get("visibility") === "hidden" || !this.shape)) {
                      if (n.save(), this.transform(), this.clip(), Mt)
                        this.shape.insertInDocument(), M(s.white), n.fill(this.get("clip-rule"));
                      else {
                        var Ut = this.mask(), Vt;
                        Ut && (Vt = b(Lt()));
                        var ee = this.shape.getSubPaths(), kt = this.getFill(Mt, zt), oe = this.getStroke(Mt, zt), Jt = this.get("stroke-width"), ye = this.get("stroke-linecap");
                        if (kt || oe) {
                          if (kt && M(kt), oe) {
                            for (var Pe = 0; Pe < ee.length; Pe++)
                              if (st(ee[Pe].totalLength, 0) && (ye === "square" || ye === "round") && Jt > 0 && ee[Pe].startPoint && ee[Pe].startPoint.length > 1) {
                                var Le = ee[Pe].startPoint[0], Ze = ee[Pe].startPoint[1];
                                M(oe), ye === "square" ? n.rect(Le - 0.5 * Jt, Ze - 0.5 * Jt, Jt, Jt) : ye === "round" && n.circle(Le, Ze, 0.5 * Jt), n.fill();
                              }
                            var $e = this.get("stroke-dasharray"), or = this.get("stroke-dashoffset");
                            if (wt(this.dashScale, 1)) {
                              for (var pe = 0; pe < $e.length; pe++)
                                $e[pe] *= this.dashScale;
                              or *= this.dashScale;
                            }
                            N(oe), n.lineWidth(Jt).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(ye).dash($e, {
                              phase: or
                            });
                          }
                          for (var ze = 0; ze < ee.length; ze++)
                            ee[ze].totalLength > 0 && ee[ze].insertInDocument();
                          kt && oe ? n.fillAndStroke(this.get("fill-rule")) : kt ? n.fill(this.get("fill-rule")) : oe && n.stroke();
                        }
                        var qe = this.get("marker-start"), Ve = this.get("marker-mid"), sr = this.get("marker-end");
                        if (qe !== "none" || Ve !== "none" || sr !== "none") {
                          var Je = this.shape.getMarkers();
                          if (qe !== "none") {
                            var dr = new fe(qe, null);
                            dr.drawMarker(!1, zt, Je[0], Jt);
                          }
                          if (Ve !== "none")
                            for (var lr = 1; lr < Je.length - 1; lr++) {
                              var Tr = new fe(Ve, null);
                              Tr.drawMarker(!1, zt, Je[lr], Jt);
                            }
                          if (sr !== "none") {
                            var Hr = new fe(sr, null);
                            Hr.drawMarker(!1, zt, Je[Je.length - 1], Jt);
                          }
                        }
                        Vt && (A(Vt), P(Vt));
                      }
                      n.restore();
                    }
                  };
                }, Ht = function(Bt, ne) {
                  ht.call(this, Bt, ne);
                  var Mt = this.getLength("x", this.getVWidth(), 0), zt = this.getLength("y", this.getVHeight(), 0), Ut = this.getLength("width", this.getVWidth(), 0), Vt = this.getLength("height", this.getVHeight(), 0), ee = this.getLength("rx", this.getVWidth()), kt = this.getLength("ry", this.getVHeight());
                  ee === void 0 && kt === void 0 ? ee = kt = 0 : ee === void 0 && kt !== void 0 ? ee = kt : ee !== void 0 && kt === void 0 && (kt = ee), Ut > 0 && Vt > 0 ? ee && kt ? (ee = Math.min(ee, 0.5 * Ut), kt = Math.min(kt, 0.5 * Vt), this.shape = new Wt().M(Mt + ee, zt).L(Mt + Ut - ee, zt).A(ee, kt, 0, 0, 1, Mt + Ut, zt + kt).L(Mt + Ut, zt + Vt - kt).A(ee, kt, 0, 0, 1, Mt + Ut - ee, zt + Vt).L(Mt + ee, zt + Vt).A(ee, kt, 0, 0, 1, Mt, zt + Vt - kt).L(Mt, zt + kt).A(ee, kt, 0, 0, 1, Mt + ee, zt).Z()) : this.shape = new Wt().M(Mt, zt).L(Mt + Ut, zt).L(Mt + Ut, zt + Vt).L(Mt, zt + Vt).Z() : this.shape = new Wt();
                }, we = function(Bt, ne) {
                  ht.call(this, Bt, ne);
                  var Mt = this.getLength("cx", this.getVWidth(), 0), zt = this.getLength("cy", this.getVHeight(), 0), Ut = this.getLength("r", this.getViewport(), 0);
                  Ut > 0 ? this.shape = new Wt().M(Mt + Ut, zt).A(Ut, Ut, 0, 0, 1, Mt - Ut, zt).A(Ut, Ut, 0, 0, 1, Mt + Ut, zt).Z() : this.shape = new Wt();
                }, rt = function(Bt, ne) {
                  ht.call(this, Bt, ne);
                  var Mt = this.getLength("cx", this.getVWidth(), 0), zt = this.getLength("cy", this.getVHeight(), 0), Ut = this.getLength("rx", this.getVWidth(), 0), Vt = this.getLength("ry", this.getVHeight(), 0);
                  Ut > 0 && Vt > 0 ? this.shape = new Wt().M(Mt + Ut, zt).A(Ut, Vt, 0, 0, 1, Mt - Ut, zt).A(Ut, Vt, 0, 0, 1, Mt + Ut, zt).Z() : this.shape = new Wt();
                }, _t = function(Bt, ne) {
                  ht.call(this, Bt, ne);
                  var Mt = this.getLength("x1", this.getVWidth(), 0), zt = this.getLength("y1", this.getVHeight(), 0), Ut = this.getLength("x2", this.getVWidth(), 0), Vt = this.getLength("y2", this.getVHeight(), 0);
                  this.shape = new Wt().M(Mt, zt).L(Ut, Vt);
                }, ae = function(Bt, ne) {
                  ht.call(this, Bt, ne);
                  var Mt = this.getNumberList("points");
                  this.shape = new Wt();
                  for (var zt = 0; zt < Mt.length - 1; zt += 2)
                    zt === 0 ? this.shape.M(Mt[zt], Mt[zt + 1]) : this.shape.L(Mt[zt], Mt[zt + 1]);
                  Mt.error && nr("SvgElemPolygon: unexpected string " + Mt.error), Mt.length % 2 === 1 && nr("SvgElemPolyline: uneven number of coordinates");
                }, Et = function(Bt, ne) {
                  ht.call(this, Bt, ne);
                  var Mt = this.getNumberList("points");
                  this.shape = new Wt();
                  for (var zt = 0; zt < Mt.length - 1; zt += 2)
                    zt === 0 ? this.shape.M(Mt[zt], Mt[zt + 1]) : this.shape.L(Mt[zt], Mt[zt + 1]);
                  this.shape.Z(), Mt.error && nr("SvgElemPolygon: unexpected string " + Mt.error), Mt.length % 2 === 1 && nr("SvgElemPolygon: uneven number of coordinates");
                }, Zt = function(Bt, ne) {
                  ht.call(this, Bt, ne), this.shape = new Wt().path(this.attr("d"));
                  var Mt = this.getLength("pathLength", this.getViewport());
                  this.pathLength = Mt > 0 ? Mt : void 0, this.dashScale = this.pathLength !== void 0 ? this.shape.totalLength / this.pathLength : 1;
                }, fe = function(Bt, ne) {
                  he.call(this, Bt, ne);
                  var Mt = this.getLength("markerWidth", this.getParentVWidth(), 3), zt = this.getLength("markerHeight", this.getParentVHeight(), 3), Ut = this.getViewbox("viewBox", [0, 0, Mt, zt]);
                  this.getVWidth = function() {
                    return Ut[2];
                  }, this.getVHeight = function() {
                    return Ut[3];
                  }, this.drawMarker = function(Vt, ee, kt, oe) {
                    n.save();
                    var Jt = this.attr("orient"), ye = this.attr("markerUnits"), Pe = Jt === "auto" ? kt[2] : (parseFloat(Jt) || 0) * Math.PI / 180, Le = ye === "userSpaceOnUse" ? 1 : oe;
                    n.transform(Math.cos(Pe) * Le, Math.sin(Pe) * Le, -Math.sin(Pe) * Le, Math.cos(Pe) * Le, kt[0], kt[1]);
                    var Ze = this.getLength("refX", this.getVWidth(), 0), $e = this.getLength("refY", this.getVHeight(), 0), or = S(this.attr("preserveAspectRatio"), Mt, zt, Ut[2], Ut[3], 0.5);
                    this.get("overflow") === "hidden" && n.rect(or[0] * (Ut[0] + Ut[2] / 2 - Ze) - Mt / 2, or[3] * (Ut[1] + Ut[3] / 2 - $e) - zt / 2, Mt, zt).clip(), n.transform.apply(n, or), n.translate(-Ze, -$e);
                    var pe;
                    this.get("opacity") < 1 && !Vt && (pe = b(Lt())), this.drawChildren(Vt, ee), pe && (A(pe), n.fillOpacity(this.get("opacity")), P(pe)), n.restore();
                  };
                }, Ue = function(Bt, ne) {
                  he.call(this, Bt, ne), this.useMask = function(Mt) {
                    var zt = b(Lt());
                    n.save(), this.attr("clipPathUnits") === "objectBoundingBox" && n.transform(Mt[2] - Mt[0], 0, 0, Mt[3] - Mt[1], Mt[0], Mt[1]), this.clip(), this.drawChildren(!0, !1), n.restore(), A(zt), D(zt, !0);
                  };
                }, Be = function(Bt, ne) {
                  he.call(this, Bt, ne), this.useMask = function(Mt) {
                    var zt = b(Lt());
                    n.save();
                    var Ut, Vt, ee, kt;
                    this.attr("maskUnits") === "userSpaceOnUse" ? (Ut = this.getLength("x", this.getVWidth(), -0.1 * (Mt[2] - Mt[0]) + Mt[0]), Vt = this.getLength("y", this.getVHeight(), -0.1 * (Mt[3] - Mt[1]) + Mt[1]), ee = this.getLength("width", this.getVWidth(), 1.2 * (Mt[2] - Mt[0])), kt = this.getLength("height", this.getVHeight(), 1.2 * (Mt[3] - Mt[1]))) : (Ut = this.getLength("x", this.getVWidth(), -0.1) * (Mt[2] - Mt[0]) + Mt[0], Vt = this.getLength("y", this.getVHeight(), -0.1) * (Mt[3] - Mt[1]) + Mt[1], ee = this.getLength("width", this.getVWidth(), 1.2) * (Mt[2] - Mt[0]), kt = this.getLength("height", this.getVHeight(), 1.2) * (Mt[3] - Mt[1])), n.rect(Ut, Vt, ee, kt).clip(), this.attr("maskContentUnits") === "objectBoundingBox" && n.transform(Mt[2] - Mt[0], 0, 0, Mt[3] - Mt[1], Mt[0], Mt[1]), this.clip(), this.drawChildren(!1, !0), n.restore(), A(zt), D(zt, !0);
                  };
                }, ke = function(Bt, ne) {
                  ue.call(this, Bt, ne), this.allowedChildren = ["tspan", "#text", "#cdata-section", "a"], this.isText = !0, this.getBoundingShape = function() {
                    for (var Mt = new Wt(), zt = 0; zt < this._pos.length; zt++) {
                      var Ut = this._pos[zt];
                      if (!Ut.hidden) {
                        var Vt = Ut.ascent * Math.sin(Ut.rotate), ee = -Ut.ascent * Math.cos(Ut.rotate), kt = Ut.descent * Math.sin(Ut.rotate), oe = -Ut.descent * Math.cos(Ut.rotate), Jt = Ut.width * Math.cos(Ut.rotate), ye = Ut.width * Math.sin(Ut.rotate);
                        Mt.M(Ut.x + Vt, Ut.y + ee).L(Ut.x + Vt + Jt, Ut.y + ee + ye).M(Ut.x + kt + Jt, Ut.y + oe + ye).L(Ut.x + kt, Ut.y + oe);
                      }
                    }
                    return Mt;
                  }, this.drawTextInDocument = function(Mt, zt) {
                    this.link && !Mt && !zt && this.addLink(), this.get("text-decoration") === "underline" && this.decorate(0.05 * this._font.size, -0.075 * this._font.size, Mt, zt), this.get("text-decoration") === "overline" && this.decorate(0.05 * this._font.size, Rt(this._font.font, this._font.size) + 0.075 * this._font.size, Mt, zt);
                    var Ut = this.getFill(Mt, zt), Vt = this.getStroke(Mt, zt), ee = this.get("stroke-width");
                    this._font.fauxBold && (Vt ? ee += this._font.size * 0.03 : (Vt = Ut, ee = this._font.size * 0.03));
                    for (var kt = this.getChildren(), oe = 0; oe < kt.length; oe++) {
                      var Jt = kt[oe];
                      switch (Jt.name) {
                        case "tspan":
                        case "textPath":
                        case "a":
                          Jt.get("display") !== "none" && Jt.drawTextInDocument(Mt, zt);
                          break;
                        case "#text":
                        case "#cdata-section":
                          if (this.get("visibility") === "hidden")
                            continue;
                          if (Ut || Vt || Mt) {
                            Ut && M(Ut), Vt && ee && (N(Vt), n.lineWidth(ee).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(this.get("stroke-linecap")).dash(this.get("stroke-dasharray"), {
                              phase: this.get("stroke-dashoffset")
                            })), C(this._font.font, this._font.size), m(!!Ut, !!Vt);
                            for (var ye = 0, Pe = Jt._pos; ye < Pe.length; ye++)
                              if (!Pe[ye].hidden && wt(Pe[ye].width, 0)) {
                                var Le = Math.cos(Pe[ye].rotate), Ze = Math.sin(Pe[ye].rotate), $e = this._font.fauxItalic ? -0.25 : 0;
                                F(Le * Pe[ye].scale, Ze * Pe[ye].scale, Le * $e - Ze, Ze * $e + Le, Pe[ye].x, Pe[ye].y), I(Pe[ye].glyph);
                              }
                            O();
                          }
                          break;
                      }
                    }
                    this.get("text-decoration") === "line-through" && this.decorate(0.05 * this._font.size, 0.5 * (Rt(this._font.font, this._font.size) + Kt(this._font.font, this._font.size)), Mt, zt);
                  }, this.decorate = function(Mt, zt, Ut, Vt) {
                    var ee = this.getFill(Ut, Vt), kt = this.getStroke(Ut, Vt);
                    ee && M(ee), kt && (N(kt), n.lineWidth(this.get("stroke-width")).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(this.get("stroke-linecap")).dash(this.get("stroke-dasharray"), {
                      phase: this.get("stroke-dashoffset")
                    }));
                    for (var oe = 0, Jt = this._pos; oe < Jt.length; oe++)
                      if (!Jt[oe].hidden && wt(Jt[oe].width, 0)) {
                        var ye = (zt + Mt / 2) * Math.sin(Jt[oe].rotate), Pe = -(zt + Mt / 2) * Math.cos(Jt[oe].rotate), Le = (zt - Mt / 2) * Math.sin(Jt[oe].rotate), Ze = -(zt - Mt / 2) * Math.cos(Jt[oe].rotate), $e = Jt[oe].width * Math.cos(Jt[oe].rotate), or = Jt[oe].width * Math.sin(Jt[oe].rotate);
                        new Wt().M(Jt[oe].x + ye, Jt[oe].y + Pe).L(Jt[oe].x + ye + $e, Jt[oe].y + Pe + or).L(Jt[oe].x + Le + $e, Jt[oe].y + Ze + or).L(Jt[oe].x + Le, Jt[oe].y + Ze).Z().insertInDocument(), ee && kt ? n.fillAndStroke() : ee ? n.fill() : kt && n.stroke();
                      }
                  };
                }, He = function(Bt, ne) {
                  this.name = Bt.nodeName, this.textContent = Bt.nodeValue;
                }, nn = function(Bt, ne) {
                  ke.call(this, Bt, ne);
                }, er = function(Bt, ne) {
                  ke.call(this, Bt, ne);
                  var Mt;
                  if ((Mt = this.attr("path")) && Mt.trim() !== "") {
                    var zt = this.getLength("pathLength", this.getViewport());
                    this.pathObject = new Wt().path(Mt), this.pathLength = zt > 0 ? zt : this.pathObject.totalLength, this.pathScale = this.pathObject.totalLength / this.pathLength;
                  } else if ((Mt = this.getUrl("href") || this.getUrl("xlink:href")) && Mt.nodeName === "path") {
                    var Ut = new Zt(Mt, this);
                    this.pathObject = Ut.shape.clone().transform(Ut.get("transform")), this.pathLength = this.chooseValue(Ut.pathLength, this.pathObject.totalLength), this.pathScale = this.pathObject.totalLength / this.pathLength;
                  }
                }, Te = function(Bt, ne) {
                  ke.call(this, Bt, ne), this.allowedChildren = ["textPath", "tspan", "#text", "#cdata-section", "a"], function(Mt) {
                    var zt = "", Ut = Bt.textContent, Vt = [], ee = [], kt, oe, Jt = 0, ye = 0;
                    function Pe() {
                      if (ee.length)
                        for (var pe = ee[ee.length - 1], ze = ee[0], qe = pe.x + pe.width - ze.x, Ve = {
                          startltr: 0,
                          middleltr: 0.5,
                          endltr: 1,
                          startrtl: 1,
                          middlertl: 0.5,
                          endrtl: 0
                        }[kt + oe] * qe || 0, sr = 0; sr < ee.length; sr++)
                          ee[sr].x -= Ve;
                      ee = [];
                    }
                    function Le(pe, ze, qe) {
                      var Ve = pe[0], sr = pe[pe.length - 1], Je = Ve.x, dr = sr.x + sr.width;
                      if (qe) {
                        var lr = ze / (dr - Je);
                        if (lr > 0 && lr < 1 / 0)
                          for (var Tr = 0; Tr < pe.length; Tr++)
                            pe[Tr].x = Je + lr * (pe[Tr].x - Je), pe[Tr].scale *= lr, pe[Tr].width *= lr;
                      } else if (pe.length >= 2)
                        for (var Hr = (ze - (dr - Je)) / (pe.length - 1), Rr = 0; Rr < pe.length; Rr++)
                          pe[Rr].x += Rr * Hr;
                      Jt += ze - (dr - Je);
                    }
                    function Ze(pe, ze) {
                      pe._x = Ct(pe.getLengthList("x", pe.getVWidth()), ze ? ze._x.slice(ze._pos.length) : []), pe._y = Ct(pe.getLengthList("y", pe.getVHeight()), ze ? ze._y.slice(ze._pos.length) : []), pe._dx = Ct(pe.getLengthList("dx", pe.getVWidth()), ze ? ze._dx.slice(ze._pos.length) : []), pe._dy = Ct(pe.getLengthList("dy", pe.getVHeight()), ze ? ze._dy.slice(ze._pos.length) : []), pe._rot = Ct(pe.getNumberList("rotate"), ze ? ze._rot.slice(ze._pos.length) : []), pe._defRot = pe.chooseValue(pe._rot[pe._rot.length - 1], ze && ze._defRot, 0), pe.name === "textPath" && (pe._y = []);
                      var qe = {
                        fauxItalic: !1,
                        fauxBold: !1
                      }, Ve = an(pe.get("font-family"), pe.get("font-weight") === "bold", pe.get("font-style") === "italic", qe);
                      try {
                        n.font(Ve);
                      } catch (ie) {
                        nr('SVGElemText: failed to open font "' + Ve + '" in PDFKit');
                      }
                      pe._pos = [], pe._index = 0, pe._font = {
                        font: n._font,
                        size: pe.get("font-size"),
                        fauxItalic: qe.fauxItalic,
                        fauxBold: qe.fauxBold
                      };
                      var sr = pe.getLength("textLength", pe.getVWidth(), void 0), Je = pe.attr("lengthAdjust") === "spacingAndGlyphs", dr = pe.get("word-spacing"), lr = pe.get("letter-spacing"), Tr = pe.get("text-anchor"), Hr = pe.get("direction"), Rr = It(pe._font.font, pe._font.size, pe.get("alignment-baseline") || pe.get("dominant-baseline"), pe.get("baseline-shift"));
                      pe.name === "textPath" && (Pe(), Jt = ye = 0);
                      for (var Or = pe.getChildren(), Vr = 0; Vr < Or.length; Vr++) {
                        var tn = Or[Vr];
                        switch (tn.name) {
                          case "tspan":
                          case "textPath":
                          case "a":
                            Ze(tn, pe);
                            break;
                          case "#text":
                          case "#cdata-section":
                            var Pn = tn.textContent, on = Pn, Tn = void 0;
                            tn._font = pe._font, tn._pos = [], Ut = Ut.substring(Pn.length), pe.get("xml:space") === "preserve" ? on = on.replace(/[\s]/g, " ") : (on = on.replace(/[\s]+/g, " "), zt.match(/[\s]$|^$/) && (on = on.replace(/^[\s]/, "")), Ut.match(/^[\s]*$/) && (on = on.replace(/[\s]$/, ""))), zt += Pn, dr === 0 ? Tn = [on] : Tn = on.split(/(\s)/);
                            for (var Gn = 0; Gn < Tn.length; Gn++) {
                              for (var ln = re(pe._font.font, pe._font.size, Tn[Gn]), dn = 0; dn < ln.length; dn++) {
                                var Lr = pe._index, Tt = pe._x[Lr], Z = pe._y[Lr], Y = pe._dx[Lr], q = pe._dy[Lr], _ = pe._rot[Lr], ct = !(Gn === 0 && dn === 0);
                                Tt !== void 0 && (ct = !1, Pe(), Jt = Tt), Z !== void 0 && (ct = !1, Pe(), ye = Z), Y !== void 0 && (ct = !1, Jt += Y), q !== void 0 && (ct = !1, ye += q), (_ !== void 0 || pe._defRot !== 0) && (ct = !1);
                                var At = {
                                  glyph: ln[dn].glyph,
                                  rotate: Math.PI / 180 * pe.chooseValue(_, pe._defRot),
                                  x: Jt + ln[dn].xOffset,
                                  y: ye + Rr + ln[dn].yOffset,
                                  width: ln[dn].width,
                                  ascent: Rt(pe._font.font, pe._font.size),
                                  descent: Kt(pe._font.font, pe._font.size),
                                  scale: 1,
                                  hidden: !1,
                                  continuous: ct
                                };
                                ee.push(At), tn._pos.push(At), pe._pos.push(At), pe._index += ln[dn].unicode.length, ee.length === 1 && (kt = Tr, oe = Hr), Jt += ln[dn].xAdvance + lr, ye += ln[dn].yAdvance;
                              }
                              Tn[Gn] === " " && (Jt += dr);
                            }
                            break;
                          default:
                            Ut = Ut.substring(tn.textContent.length);
                        }
                      }
                      if (sr && pe._pos.length && Le(pe._pos, sr, Je), (pe.name === "textPath" || pe.name === "text") && Pe(), pe.name === "textPath") {
                        Vt.push(pe);
                        var Qt = pe.pathObject;
                        Qt && (Jt = Qt.endPoint[0], ye = Qt.endPoint[1]);
                      }
                      ze && (ze._pos = ze._pos.concat(pe._pos), ze._index += pe._index);
                    }
                    function $e(pe) {
                      var ze = pe.pathObject, qe = pe.pathLength, Ve = pe.pathScale;
                      if (ze)
                        for (var sr = pe.getLength("startOffset", qe, 0), Je = 0; Je < pe._pos.length; Je++) {
                          var dr = sr + pe._pos[Je].x + 0.5 * pe._pos[Je].width;
                          if (dr > qe || dr < 0)
                            pe._pos[Je].hidden = !0;
                          else {
                            var lr = ze.getPointAtLength(dr * Ve);
                            wt(Ve, 1) && (pe._pos[Je].scale *= Ve, pe._pos[Je].width *= Ve), pe._pos[Je].x = lr[0] - 0.5 * pe._pos[Je].width * Math.cos(lr[2]) - pe._pos[Je].y * Math.sin(lr[2]), pe._pos[Je].y = lr[1] - 0.5 * pe._pos[Je].width * Math.sin(lr[2]) + pe._pos[Je].y * Math.cos(lr[2]), pe._pos[Je].rotate = lr[2] + pe._pos[Je].rotate, pe._pos[Je].continuous = !1;
                          }
                        }
                      else
                        for (var Tr = 0; Tr < pe._pos.length; Tr++)
                          pe._pos[Tr].hidden = !0;
                    }
                    Ze(Mt, null);
                    for (var or = 0; or < Vt.length; or++)
                      $e(Vt[or]);
                  }(this), this.getTransformation = function() {
                    return this.get("transform");
                  }, this.drawInDocument = function(Mt, zt) {
                    n.save(), this.transform(), this.clip();
                    var Ut = this.mask(), Vt;
                    Ut && (Vt = b(Lt())), this.drawTextInDocument(Mt, zt), Vt && (A(Vt), P(Vt)), n.restore();
                  };
                };
                l = l || {};
                var Oe = l.assumePt ? 1 : 72 / 96, Xe = (l.width || n.page.width) / Oe, tr = (l.height || n.page.height) / Oe, cn = l.preserveAspectRatio || null, wn = l.useCSS && typeof SVGElement != "undefined" && o instanceof SVGElement && typeof getComputedStyle == "function", nr = l.warningCallback, an = l.fontCallback, Wr = l.imageCallback, $r = l.colorCallback, Xr = l.documentCallback, Jn = Math.ceil(Math.max(1, l.precision)) || 3, fa = [], hn = {}, gr = [], rn = [];
                if (typeof nr != "function" && (nr = function(Bt) {
                  typeof console !== void 0 && typeof console.warn == "function" && console.warn(Bt);
                }), typeof an != "function" && (an = function(Bt, ne, Mt, zt) {
                  if (ne && Mt) {
                    if (n._registeredFonts.hasOwnProperty(Bt + "-BoldItalic"))
                      return Bt + "-BoldItalic";
                    if (n._registeredFonts.hasOwnProperty(Bt + "-Italic"))
                      return zt.fauxBold = !0, Bt + "-Italic";
                    if (n._registeredFonts.hasOwnProperty(Bt + "-Bold"))
                      return zt.fauxItalic = !0, Bt + "-Bold";
                    if (n._registeredFonts.hasOwnProperty(Bt))
                      return zt.fauxBold = !0, zt.fauxItalic = !0, Bt;
                  }
                  if (ne && !Mt) {
                    if (n._registeredFonts.hasOwnProperty(Bt + "-Bold"))
                      return Bt + "-Bold";
                    if (n._registeredFonts.hasOwnProperty(Bt))
                      return zt.fauxBold = !0, Bt;
                  }
                  if (!ne && Mt) {
                    if (n._registeredFonts.hasOwnProperty(Bt + "-Italic"))
                      return Bt + "-Italic";
                    if (n._registeredFonts.hasOwnProperty(Bt))
                      return zt.fauxItalic = !0, Bt;
                  }
                  if (!ne && !Mt && n._registeredFonts.hasOwnProperty(Bt))
                    return Bt;
                  if (Bt.match(/(?:^|,)\s*serif\s*$/)) {
                    if (ne && Mt)
                      return "Times-BoldItalic";
                    if (ne && !Mt)
                      return "Times-Bold";
                    if (!ne && Mt)
                      return "Times-Italic";
                    if (!ne && !Mt)
                      return "Times-Roman";
                  } else if (Bt.match(/(?:^|,)\s*monospace\s*$/)) {
                    if (ne && Mt)
                      return "Courier-BoldOblique";
                    if (ne && !Mt)
                      return "Courier-Bold";
                    if (!ne && Mt)
                      return "Courier-Oblique";
                    if (!ne && !Mt)
                      return "Courier";
                  } else {
                    if (Bt.match(/(?:^|,)\s*sans-serif\s*$/), ne && Mt)
                      return "Helvetica-BoldOblique";
                    if (ne && !Mt)
                      return "Helvetica-Bold";
                    if (!ne && Mt)
                      return "Helvetica-Oblique";
                    if (!ne && !Mt)
                      return "Helvetica";
                  }
                }), typeof Wr != "function" && (Wr = function(Bt) {
                  return Bt.replace(/\s+/g, "");
                }), typeof $r != "function")
                  $r = null;
                else
                  for (var Qn in s) {
                    var jn = $r(s[Qn]);
                    s[Qn][0] = jn[0], s[Qn][1] = jn[1];
                  }
                if (typeof Xr != "function" && (Xr = null), typeof o == "string" && (o = ot(o)), o) {
                  for (var $n = o.getElementsByTagName("style"), da = 0; da < $n.length; da++)
                    rn = rn.concat(it($n[da].textContent));
                  var ga = be(o, null);
                  if (typeof ga.drawInDocument == "function") {
                    l.useCSS && !wn && nr("SVGtoPDF: useCSS option can only be used for SVG *elements* in compatible browsers");
                    var qn = n._fillColor;
                    n.save().translate(h || 0, u || 0).scale(Oe), ga.drawInDocument();
                    for (var la = 0; la < gr.length; la++)
                      n.page.annotations.push(gr[la]);
                    n.restore(), n._fillColor = qn;
                  } else
                    nr("SVGtoPDF: this element can't be rendered directly: " + o.nodeName);
                } else
                  nr("SVGtoPDF: the input does not look like a valid SVG");
              };
              f && typeof f.exports != "undefined" && (f.exports = i);
            }
          ),
          /***/
          65300: (
            /***/
            function(f, d, t) {
              t(49063), t(97514), t(11765), t(81755), t(80055), t(20731), t(7283), t(18756), t(37309), t(14032), t(76014), t(58281), t(28356), t(42437), t(94712);
              var i = t(2318), r = t(98883), n = t(42526), o = t(79178), h = t(11220), u = t(77530), l = t(89836), c = t(70770), s = t(91867).isString, v = t(91867).isArray, y = t(91867).isUndefined, x = t(91867).isNull, e = t(91867).pack, b = t(91867).offsetVector, A = t(91867).fontStringify, P = t(91867).getNodeId, D = t(91867).isFunction, E = t(11548), T = t(76442), C = t(91867).isNumber;
              function F(O, M) {
                M.forEach(function(N) {
                  O.push(N);
                });
              }
              function m(O, M, N, G) {
                this.pageSize = O, this.pageMargins = M, this.tracker = new i(), this.imageMeasure = N, this.svgMeasure = G, this.tableLayouts = {}, this.nestedLevel = 0;
              }
              m.prototype.registerTableLayouts = function(O) {
                this.tableLayouts = e(this.tableLayouts, O);
              }, m.prototype.layoutDocument = function(O, M, N, G, ot, K, nt, xt, bt, St) {
                function Dt(J, yt) {
                  if (!D(St))
                    return !1;
                  J = J.filter(function(H) {
                    return H.positions.length > 0;
                  }), J.forEach(function(H) {
                    var it = {};
                    ["id", "text", "ul", "ol", "table", "image", "qr", "canvas", "svg", "columns", "headlineLevel", "style", "pageBreak", "pageOrientation", "width", "height"].forEach(function(et) {
                      H[et] !== void 0 && (it[et] = H[et]);
                    }), it.startPosition = H.positions[0], it.pageNumbers = Array.from(new Set(H.positions.map(function(et) {
                      return et.pageNumber;
                    }))), it.pages = yt.length, it.stack = v(H.stack), H.nodeInfo = it;
                  });
                  for (var ut = 0; ut < J.length; ut++) {
                    var st = J[ut];
                    if (st.pageBreak !== "before" && !st.pageBreakCalculated) {
                      st.pageBreakCalculated = !0;
                      var wt = st.nodeInfo.pageNumbers[0], V = [], Ft = [], U = [];
                      if (St.length > 1)
                        for (var S = ut + 1, k = J.length; S < k; S++)
                          J[S].nodeInfo.pageNumbers.indexOf(wt) > -1 && V.push(J[S].nodeInfo), St.length > 2 && J[S].nodeInfo.pageNumbers.indexOf(wt + 1) > -1 && Ft.push(J[S].nodeInfo);
                      if (St.length > 3)
                        for (var S = 0; S < ut; S++)
                          J[S].nodeInfo.pageNumbers.indexOf(wt) > -1 && U.push(J[S].nodeInfo);
                      if (St(st.nodeInfo, V, Ft, U))
                        return st.pageBreak = "before", !0;
                    }
                  }
                  return !1;
                }
                this.docPreprocessor = new r(), this.docMeasure = new n(M, N, G, this.imageMeasure, this.svgMeasure, this.tableLayouts, xt);
                function Lt(J) {
                  J.linearNodeList.forEach(function(yt) {
                    yt.resetXY();
                  });
                }
                for (var jt = this.tryLayoutDocument(O, M, N, G, ot, K, nt, xt, bt); Dt(jt.linearNodeList, jt.pages); )
                  Lt(jt), jt = this.tryLayoutDocument(O, M, N, G, ot, K, nt, xt, bt);
                return jt.pages;
              }, m.prototype.tryLayoutDocument = function(O, M, N, G, ot, K, nt, xt, bt, St) {
                this.linearNodeList = [], O = this.docPreprocessor.preprocessDocument(O), O = this.docMeasure.measureDocument(O), this.writer = new h(new o(this.pageSize, this.pageMargins), this.tracker);
                var Dt = this;
                return this.writer.context().tracker.startTracking("pageAdded", function() {
                  Dt.addBackground(ot);
                }), this.addBackground(ot), this.processNode(O), this.addHeadersAndFooters(K, nt), bt != null && this.addWatermark(bt, M, G), {
                  pages: this.writer.context().pages,
                  linearNodeList: this.linearNodeList
                };
              }, m.prototype.addBackground = function(O) {
                var M = D(O) ? O : function() {
                  return O;
                }, N = this.writer.context(), G = N.getCurrentPage().pageSize, ot = M(N.page + 1, G);
                ot && (this.writer.beginUnbreakableBlock(G.width, G.height), ot = this.docPreprocessor.preprocessDocument(ot), this.processNode(this.docMeasure.measureDocument(ot)), this.writer.commitUnbreakableBlock(0, 0), N.backgroundLength[N.page] += ot.positions.length);
              }, m.prototype.addStaticRepeatable = function(O, M) {
                this.addDynamicRepeatable(function() {
                  return JSON.parse(JSON.stringify(O));
                }, M);
              }, m.prototype.addDynamicRepeatable = function(O, M) {
                for (var N = this.writer.context().pages, G = 0, ot = N.length; G < ot; G++) {
                  this.writer.context().page = G;
                  var K = O(G + 1, ot, this.writer.context().pages[G].pageSize);
                  if (K) {
                    var nt = M(this.writer.context().getCurrentPage().pageSize, this.pageMargins);
                    this.writer.beginUnbreakableBlock(nt.width, nt.height), K = this.docPreprocessor.preprocessDocument(K), this.processNode(this.docMeasure.measureDocument(K)), this.writer.commitUnbreakableBlock(nt.x, nt.y);
                  }
                }
              }, m.prototype.addHeadersAndFooters = function(O, M) {
                var N = function(K, nt) {
                  return {
                    x: 0,
                    y: 0,
                    width: K.width,
                    height: nt.top
                  };
                }, G = function(K, nt) {
                  return {
                    x: 0,
                    y: K.height - nt.bottom,
                    width: K.width,
                    height: nt.bottom
                  };
                };
                D(O) ? this.addDynamicRepeatable(O, N) : O && this.addStaticRepeatable(O, N), D(M) ? this.addDynamicRepeatable(M, G) : M && this.addStaticRepeatable(M, G);
              }, m.prototype.addWatermark = function(O, M, N) {
                if (s(O) && (O = {
                  text: O
                }), !O.text)
                  return;
                for (var G = this.writer.context().pages, ot = 0, K = G.length; ot < K; ot++)
                  G[ot].watermark = nt(Object.assign({}, O), G[ot].pageSize, M, N);
                function nt(St, Dt, Lt, jt) {
                  St.font = St.font || jt.font || "Roboto", St.fontSize = St.fontSize || "auto", St.color = St.color || "black", St.opacity = C(St.opacity) ? St.opacity : 0.6, St.bold = St.bold || !1, St.italics = St.italics || !1, St.angle = !y(St.angle) && !x(St.angle) ? St.angle : null, St.angle === null && (St.angle = Math.atan2(Dt.height, Dt.width) * -180 / Math.PI), St.fontSize === "auto" && (St.fontSize = bt(Dt, St, Lt));
                  var J = {
                    text: St.text,
                    font: Lt.provideFont(St.font, St.bold, St.italics),
                    fontSize: St.fontSize,
                    color: St.color,
                    opacity: St.opacity,
                    angle: St.angle
                  };
                  return J._size = xt(St, Lt), J;
                }
                function xt(St, Dt) {
                  var Lt = new E(Dt), jt = new T(null, {
                    font: St.font,
                    bold: St.bold,
                    italics: St.italics
                  });
                  jt.push({
                    fontSize: St.fontSize
                  });
                  var J = Lt.sizeOfString(St.text, jt), yt = Lt.sizeOfRotatedText(St.text, St.angle, jt);
                  return {
                    size: J,
                    rotatedSize: yt
                  };
                }
                function bt(St, Dt, Lt) {
                  for (var jt = new E(Lt), J = new T(null, {
                    font: Dt.font,
                    bold: Dt.bold,
                    italics: Dt.italics
                  }), yt, ut = 0, st = 1e3, wt = (ut + st) / 2; Math.abs(ut - st) > 1; )
                    J.push({
                      fontSize: wt
                    }), yt = jt.sizeOfRotatedText(Dt.text, Dt.angle, J), yt.width > St.width ? (st = wt, wt = (ut + st) / 2) : yt.width < St.width && (yt.height > St.height ? (st = wt, wt = (ut + st) / 2) : (ut = wt, wt = (ut + st) / 2)), J.pop();
                  return wt;
                }
              };
              function I(O) {
                var M = O.x, N = O.y;
                O.positions = [], v(O.canvas) && O.canvas.forEach(function(G) {
                  var ot = G.x, K = G.y, nt = G.x1, xt = G.y1, bt = G.x2, St = G.y2;
                  G.resetXY = function() {
                    G.x = ot, G.y = K, G.x1 = nt, G.y1 = xt, G.x2 = bt, G.y2 = St;
                  };
                }), O.resetXY = function() {
                  O.x = M, O.y = N, v(O.canvas) && O.canvas.forEach(function(G) {
                    G.resetXY();
                  });
                };
              }
              m.prototype.processNode = function(O) {
                var M = this;
                this.linearNodeList.push(O), I(O), N(function() {
                  var G = O.unbreakable;
                  G && M.writer.beginUnbreakableBlock();
                  var ot = O.absolutePosition;
                  ot && (M.writer.context().beginDetachedBlock(), M.writer.context().moveTo(ot.x || 0, ot.y || 0));
                  var K = O.relativePosition;
                  if (K && (M.writer.context().beginDetachedBlock(), M.writer.context().moveToRelative(K.x || 0, K.y || 0)), O.stack)
                    M.processVerticalContainer(O);
                  else if (O.columns)
                    M.processColumns(O);
                  else if (O.ul)
                    M.processList(!1, O);
                  else if (O.ol)
                    M.processList(!0, O);
                  else if (O.table)
                    M.processTable(O);
                  else if (O.text !== void 0)
                    M.processLeaf(O);
                  else if (O.toc)
                    M.processToc(O);
                  else if (O.image)
                    M.processImage(O);
                  else if (O.svg)
                    M.processSVG(O);
                  else if (O.canvas)
                    M.processCanvas(O);
                  else if (O.qr)
                    M.processQr(O);
                  else if (!O._span)
                    throw "Unrecognized document structure: " + JSON.stringify(O, A);
                  (ot || K) && M.writer.context().endDetachedBlock(), G && M.writer.commitUnbreakableBlock();
                });
                function N(G) {
                  var ot = O._margin;
                  O.pageBreak === "before" ? M.writer.moveToNextPage(O.pageOrientation) : O.pageBreak === "beforeOdd" ? (M.writer.moveToNextPage(O.pageOrientation), (M.writer.context().page + 1) % 2 === 1 && M.writer.moveToNextPage(O.pageOrientation)) : O.pageBreak === "beforeEven" && (M.writer.moveToNextPage(O.pageOrientation), (M.writer.context().page + 1) % 2 === 0 && M.writer.moveToNextPage(O.pageOrientation));
                  var K = O.relativePosition || O.absolutePosition;
                  if (ot && !K) {
                    var nt = M.writer.context().availableHeight;
                    nt - ot[1] < 0 ? (M.writer.context().moveDown(nt), M.writer.moveToNextPage(O.pageOrientation)) : M.writer.context().moveDown(ot[1]), M.writer.context().addMargin(ot[0], ot[2]);
                  }
                  if (G(), ot && !K) {
                    var xt = M.writer.context().availableHeight;
                    xt - ot[3] < 0 ? (M.writer.context().moveDown(xt), M.writer.moveToNextPage(O.pageOrientation)) : M.writer.context().moveDown(ot[3]), M.writer.context().addMargin(-ot[0], -ot[2]);
                  }
                  O.pageBreak === "after" ? M.writer.moveToNextPage(O.pageOrientation) : O.pageBreak === "afterOdd" ? (M.writer.moveToNextPage(O.pageOrientation), (M.writer.context().page + 1) % 2 === 1 && M.writer.moveToNextPage(O.pageOrientation)) : O.pageBreak === "afterEven" && (M.writer.moveToNextPage(O.pageOrientation), (M.writer.context().page + 1) % 2 === 0 && M.writer.moveToNextPage(O.pageOrientation));
                }
              }, m.prototype.processVerticalContainer = function(O) {
                var M = this;
                O.stack.forEach(function(N) {
                  M.processNode(N), F(O.positions, N.positions);
                });
              }, m.prototype.processColumns = function(O) {
                this.nestedLevel++;
                var M = O.columns, N = this.writer.context().availableWidth, G = K(O._gap);
                G && (N -= (G.length - 1) * O._gap), u.buildColumnWidths(M, N);
                var ot = this.processRow({
                  marginX: O._margin ? [O._margin[0], O._margin[2]] : [0, 0],
                  cells: M,
                  widths: M,
                  gaps: G
                });
                F(O.positions, ot.positions), this.nestedLevel--, this.nestedLevel === 0 && this.writer.context().resetMarginXTopParent();
                function K(nt) {
                  if (!nt)
                    return null;
                  var xt = [];
                  xt.push(0);
                  for (var bt = M.length - 1; bt > 0; bt--)
                    xt.push(nt);
                  return xt;
                }
              }, m.prototype._findStartingRowSpanCell = function(O, M) {
                for (var N = 1, G = M - 1; G >= 0; G--) {
                  if (!O[G]._span)
                    return O[G].rowSpan > 1 && (O[G].colSpan || 1) === N ? O[G] : null;
                  N++;
                }
                return null;
              }, m.prototype._getPageBreak = function(O, M) {
                return O.find(function(N) {
                  return N.prevPage === M;
                });
              }, m.prototype._getPageBreakListBySpan = function(O, M, N) {
                if (!O || !O._breaksBySpan)
                  return null;
                var G = O._breaksBySpan.filter(function(nt) {
                  return nt.prevPage === M && N <= nt.rowIndexOfSpanEnd;
                }), ot = Number.MAX_VALUE, K = Number.MIN_VALUE;
                return G.forEach(function(nt) {
                  K = Math.max(nt.prevY, K), ot = Math.min(nt.y, ot);
                }), {
                  prevPage: M,
                  prevY: K,
                  y: ot
                };
              }, m.prototype._findSameRowPageBreakByRowSpanData = function(O, M, N) {
                return O ? O.find(function(G) {
                  return G.prevPage === M && N === G.rowIndexOfSpanEnd;
                }) : null;
              }, m.prototype._updatePageBreaksData = function(O, M, N) {
                var G = this;
                Object.keys(M._bottomByPage).forEach(function(ot) {
                  var K = Number(ot), nt = G._getPageBreak(O, K);
                  if (nt && (nt.prevY = Math.max(nt.prevY, M._bottomByPage[K])), M._breaksBySpan && M._breaksBySpan.length > 0) {
                    var xt = M._breaksBySpan.filter(function(bt) {
                      return bt.prevPage === K && N <= bt.rowIndexOfSpanEnd;
                    });
                    xt && xt.length > 0 && xt.forEach(function(bt) {
                      bt.prevY = Math.max(bt.prevY, M._bottomByPage[K]);
                    });
                  }
                });
              }, m.prototype._resolveBreakY = function(O, M, N) {
                N.prevY = Math.max(O.prevY, M.prevY), N.y = Math.min(O.y, M.y);
              }, m.prototype._storePageBreakData = function(O, M, N, G) {
                var ot, K;
                if (!M)
                  ot = this._getPageBreak(N, O.prevPage), K = this._getPageBreakListBySpan(G, O.prevPage, O.rowIndex), ot || (ot = Object.assign({}, O), N.push(ot)), K && this._resolveBreakY(ot, K, ot), this._resolveBreakY(ot, O, ot);
                else {
                  var nt = G && G._breaksBySpan || null;
                  K = this._findSameRowPageBreakByRowSpanData(nt, O.prevPage, O.rowIndex), K || (K = Object.assign({}, O, {
                    rowIndexOfSpanEnd: O.rowIndex + O.rowSpan - 1
                  }), G._breaksBySpan || (G._breaksBySpan = []), G._breaksBySpan.push(K)), K.prevY = Math.max(K.prevY, O.prevY), K.y = Math.min(K.y, O.y), ot = this._getPageBreak(N, O.prevPage), ot && this._resolveBreakY(ot, K, ot);
                }
              }, m.prototype._colLeftOffset = function(O, M) {
                return M && M.length > O ? M[O] : 0;
              }, m.prototype._getRowSpanEndingCell = function(O, M, N, G) {
                if (N.rowSpan && N.rowSpan > 1) {
                  var ot = M + N.rowSpan - 1;
                  if (ot >= O.length)
                    throw new Error("Row span for column " + G + " (with indexes starting from 0) exceeded row count");
                  return O[ot][G];
                }
                return null;
              }, m.prototype.processRow = function(O) {
                var M = O.marginX, N = M === void 0 ? [0, 0] : M, G = O.dontBreakRows, ot = G === void 0 ? !1 : G, K = O.rowsWithoutPageBreak, nt = K === void 0 ? 0 : K, xt = O.cells, bt = O.widths, St = O.gaps, Dt = O.tableNode, Lt = O.tableBody, jt = O.rowIndex, J = O.height, yt = this, ut = ot || jt <= nt - 1, st = [], wt = [], V = [], Ft = !1;
                bt = bt || xt, !ut && J > yt.writer.context().availableHeight && (Ft = !0);
                var U = yt.nestedLevel === 1 ? N : null, S = Dt ? Dt._bottomByPage : null;
                this.writer.context().beginColumnGroup(U, S);
                for (var k = 0, H = xt.length; k < H; k++) {
                  var it = xt[k];
                  this.tracker.auto("pageChanged", Kt, function() {
                    var Gt = bt[k]._calcWidth, It = yt._colLeftOffset(k, St), re = yt._findStartingRowSpanCell(xt, k);
                    if (it.colSpan && it.colSpan > 1)
                      for (var be = 1; be < it.colSpan; be++)
                        Gt += bt[++k]._calcWidth + St[k];
                    var me = yt._getRowSpanEndingCell(Lt, jt, it, k);
                    me && (it._endingCell = me, it._endingCell._startingRowSpanY = it._startingRowSpanY);
                    var le = null;
                    if (re && re._endingCell && (le = re._endingCell, yt.writer.transactionLevel > 0 && (le._isUnbreakableContext = !0, le._originalXOffset = yt.writer.originalX)), yt.writer.context().beginColumn(Gt, It, le), !it._span)
                      yt.processNode(it), yt.writer.context().updateBottomByPage(), F(V, it.positions);
                    else if (it._columnEndingContext) {
                      var Se = 0;
                      if (ot) {
                        var Wt = yt.writer.writer.contextStack[yt.writer.writer.contextStack.length - 1];
                        Se = Wt.y - it._startingRowSpanY;
                      }
                      var $t = 0;
                      it._isUnbreakableContext && !yt.writer.transactionLevel && ($t = it._originalXOffset), yt.writer.context().markEnding(it, $t, Se);
                    }
                  });
                }
                var et = null, tt = xt.length > 0 ? xt[xt.length - 1] : null;
                if (tt) {
                  if (tt._endingCell)
                    et = tt._endingCell;
                  else if (tt._span === !0) {
                    var Ct = this._findStartingRowSpanCell(xt, xt.length);
                    Ct && (et = Ct._endingCell, this.writer.transactionLevel > 0 && (et._isUnbreakableContext = !0, et._originalXOffset = this.writer.originalX));
                  }
                }
                Ft && !ut && st.length === 0 && (this.writer.context().moveDown(this.writer.context().availableHeight), this.writer.moveToNextPage());
                var Rt = this.writer.context().completeColumnGroup(J, et);
                return Dt && (Dt._bottomByPage = Rt, this._updatePageBreaksData(st, Dt, jt)), {
                  pageBreaksBySpan: wt,
                  pageBreaks: st,
                  positions: V
                };
                function Kt(Gt) {
                  var It = it.rowSpan && it.rowSpan > 1;
                  It && (Gt.rowSpan = it.rowSpan), Gt.rowIndex = jt, yt._storePageBreakData(Gt, It, st, Dt);
                }
              }, m.prototype.processList = function(O, M) {
                var N = this, G = O ? M.ol : M.ul, ot = M._gapSize;
                this.writer.context().addMargin(ot.width);
                var K;
                this.tracker.auto("lineAdded", nt, function() {
                  G.forEach(function(xt) {
                    K = xt.listMarker, N.processNode(xt), F(M.positions, xt.positions);
                  });
                }), this.writer.context().addMargin(-ot.width);
                function nt(xt) {
                  if (K) {
                    var bt = K;
                    if (K = null, bt.canvas) {
                      var St = bt.canvas[0];
                      b(St, -bt._minWidth, 0), N.writer.addVector(St);
                    } else if (bt._inlines) {
                      var Dt = new c(N.pageSize.width);
                      Dt.addInline(bt._inlines[0]), Dt.x = -bt._minWidth, Dt.y = xt.getAscenderHeight() - Dt.getAscenderHeight(), N.writer.addLine(Dt, !0);
                    }
                  }
                }
              }, m.prototype.processTable = function(O) {
                var M = this;
                this.nestedLevel++;
                var N = new l(O);
                N.beginTable(this.writer);
                for (var G = O.table.heights, ot = 0, K = O.table.body.length; ot < K; ot++) {
                  N.dontBreakRows && O.table.body[ot].forEach(function(jt) {
                    jt.rowSpan && jt.rowSpan > 1 && (jt._startingRowSpanY = M.writer.context().y);
                  }), N.beginRow(ot, this.writer);
                  var nt;
                  D(G) ? nt = G(ot) : v(G) ? nt = G[ot] : nt = G, nt === "auto" && (nt = void 0);
                  var xt = this.writer.context().page, bt = this.processRow({
                    marginX: O._margin ? [O._margin[0], O._margin[2]] : [0, 0],
                    dontBreakRows: N.dontBreakRows,
                    rowsWithoutPageBreak: N.rowsWithoutPageBreak,
                    cells: O.table.body[ot],
                    widths: O.table.widths,
                    gaps: O._offsets.offsets,
                    tableBody: O.table.body,
                    tableNode: O,
                    rowIndex: ot,
                    height: nt
                  });
                  if (F(O.positions, bt.positions), !bt.pageBreaks || bt.pageBreaks.length === 0) {
                    var St = O && O._breaksBySpan || null, Dt = this._findSameRowPageBreakByRowSpanData(St, xt, ot);
                    if (Dt) {
                      var Lt = this._getPageBreakListBySpan(O, Dt.prevPage, ot);
                      bt.pageBreaks.push(Lt);
                    }
                  }
                  N.endRow(ot, this.writer, bt.pageBreaks);
                }
                N.endTable(this.writer), this.nestedLevel--, this.nestedLevel === 0 && this.writer.context().resetMarginXTopParent();
              }, m.prototype.processLeaf = function(O) {
                var M = this.buildNextLine(O);
                M && (O.tocItem || O.id) && (M._node = O);
                var N = M ? M.getHeight() : 0, G = O.maxHeight || -1;
                if (M) {
                  var ot = P(O);
                  ot && (M.id = ot);
                }
                if (O._tocItemRef && (M._pageNodeRef = O._tocItemRef), O._pageRef && (M._pageNodeRef = O._pageRef._nodeRef), M && M.inlines && v(M.inlines))
                  for (var K = 0, nt = M.inlines.length; K < nt; K++)
                    M.inlines[K]._tocItemRef && (M.inlines[K]._pageNodeRef = M.inlines[K]._tocItemRef), M.inlines[K]._pageRef && (M.inlines[K]._pageNodeRef = M.inlines[K]._pageRef._nodeRef);
                for (; M && (G === -1 || N < G); ) {
                  var xt = this.writer.addLine(M);
                  O.positions.push(xt), M = this.buildNextLine(O), M && (N += M.getHeight());
                }
              }, m.prototype.processToc = function(O) {
                O.toc.title && this.processNode(O.toc.title), O.toc._table && this.processNode(O.toc._table);
              }, m.prototype.buildNextLine = function(O) {
                function M(Dt) {
                  var Lt = Dt.constructor();
                  for (var jt in Dt)
                    Lt[jt] = Dt[jt];
                  return Lt;
                }
                if (!O._inlines || O._inlines.length === 0)
                  return null;
                for (var N = new c(this.writer.context().availableWidth), G = new E(null), ot = !1; O._inlines && O._inlines.length > 0 && (N.hasEnoughSpaceForInline(O._inlines[0], O._inlines.slice(1)) || ot); ) {
                  var K = !1, nt = O._inlines.shift();
                  if (ot = !1, !nt.noWrap && nt.text.length > 1 && nt.width > N.getAvailableWidth()) {
                    var xt = nt.width / nt.text.length, bt = Math.floor(N.getAvailableWidth() / xt);
                    if (bt < 1 && (bt = 1), bt < nt.text.length) {
                      var St = M(nt);
                      St.text = nt.text.substr(bt), nt.text = nt.text.substr(0, bt), St.width = G.widthOfString(St.text, St.font, St.fontSize, St.characterSpacing, St.fontFeatures), nt.width = G.widthOfString(nt.text, nt.font, nt.fontSize, nt.characterSpacing, nt.fontFeatures), O._inlines.unshift(St), K = !0;
                    }
                  }
                  N.addInline(nt), ot = nt.noNewLine && !K;
                }
                return N.lastLineInParagraph = O._inlines.length === 0, N;
              }, m.prototype.processImage = function(O) {
                var M = this.writer.addImage(O);
                O.positions.push(M);
              }, m.prototype.processSVG = function(O) {
                var M = this.writer.addSVG(O);
                O.positions.push(M);
              }, m.prototype.processCanvas = function(O) {
                var M = O._minHeight;
                O.absolutePosition === void 0 && this.writer.context().availableHeight < M && this.writer.moveToNextPage(), this.writer.alignCanvas(O), O.canvas.forEach(function(N) {
                  var G = this.writer.addVector(N);
                  O.positions.push(G);
                }, this), this.writer.context().moveDown(M);
              }, m.prototype.processQr = function(O) {
                var M = this.writer.addQr(O);
                O.positions.push(M);
              }, f.exports = m;
            }
          ),
          /***/
          30357: (
            /***/
            function(f, d, t) {
              var i = "/", r = t(14598).Buffer;
              t(69330), t(5597), t(11765), t(7585), t(7283), t(58281), Object.defineProperty(d, "__esModule", {
                value: !0
              }), d.default = void 0, t(65292), t(73844), t(39081), t(41584), t(49063), t(58028), t(81755), t(94845), t(80055), t(20731), t(45337), t(8953), t(24863), t(70095), t(10849), t(18756), t(37309), t(14032), t(59883), t(68067), t(61726), t(57114), t(26663), t(65578), t(6422), t(46467), t(7851), t(72095), t(62046), t(47259), t(18425), t(56912), t(73663), t(29883), t(35471), t(21012), t(88997), t(97464), t(2857), t(94715), t(13624), t(91132), t(62514), t(24597), t(88042), t(4660), t(92451), t(44206), t(66288), t(13250), t(3858), t(84538), t(64793), t(74202), t(52529), t(64654), t(42437), t(94712);
              var n = y(t(9760)), o = y(t(6729)), h = y(t(94119)), u = y(t(10740)), l = t(64785), c = y(t(5417)), s = y(t(38834)), v = y(t(84695));
              function y(Tt) {
                return Tt && Tt.__esModule ? Tt : { default: Tt };
              }
              function x(Tt, Z) {
                for (var Y = 0; Y < Z.length; Y++) {
                  var q = Z[Y];
                  q.enumerable = q.enumerable || !1, q.configurable = !0, "value" in q && (q.writable = !0), Object.defineProperty(Tt, b(q.key), q);
                }
              }
              function e(Tt, Z, Y) {
                return Z && x(Tt.prototype, Z), Y && x(Tt, Y), Object.defineProperty(Tt, "prototype", { writable: !1 }), Tt;
              }
              function b(Tt) {
                var Z = A(Tt, "string");
                return typeof Z == "symbol" ? Z : Z + "";
              }
              function A(Tt, Z) {
                if (typeof Tt != "object" || !Tt)
                  return Tt;
                var Y = Tt[Symbol.toPrimitive];
                if (Y !== void 0) {
                  var q = Y.call(Tt, Z || "default");
                  if (typeof q != "object")
                    return q;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (Z === "string" ? String : Number)(Tt);
              }
              function P(Tt, Z) {
                Tt.prototype = Object.create(Z.prototype), Tt.prototype.constructor = Tt, D(Tt, Z);
              }
              function D(Tt, Z) {
                return D = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(Y, q) {
                  return Y.__proto__ = q, Y;
                }, D(Tt, Z);
              }
              function E(Tt, Z) {
                var Y = typeof Symbol != "undefined" && Tt[Symbol.iterator] || Tt["@@iterator"];
                if (Y)
                  return (Y = Y.call(Tt)).next.bind(Y);
                if (Array.isArray(Tt) || (Y = T(Tt)) || Z && Tt && typeof Tt.length == "number") {
                  Y && (Tt = Y);
                  var q = 0;
                  return function() {
                    return q >= Tt.length ? { done: !0 } : { done: !1, value: Tt[q++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function T(Tt, Z) {
                if (Tt) {
                  if (typeof Tt == "string")
                    return C(Tt, Z);
                  var Y = {}.toString.call(Tt).slice(8, -1);
                  return Y === "Object" && Tt.constructor && (Y = Tt.constructor.name), Y === "Map" || Y === "Set" ? Array.from(Tt) : Y === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(Y) ? C(Tt, Z) : void 0;
                }
              }
              function C(Tt, Z) {
                (Z == null || Z > Tt.length) && (Z = Tt.length);
                for (var Y = 0, q = Array(Z); Y < Z; Y++)
                  q[Y] = Tt[Y];
                return q;
              }
              var F = t(48181), m = /* @__PURE__ */ function() {
                function Tt() {
                }
                var Z = Tt.prototype;
                return Z.toString = function() {
                  throw new Error("Must be implemented by subclasses");
                }, Tt;
              }(), I = /* @__PURE__ */ function() {
                function Tt() {
                  var Y = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                  this._items = {}, this.limits = typeof Y.limits == "boolean" ? Y.limits : !0;
                }
                var Z = Tt.prototype;
                return Z.add = function(q, _) {
                  return this._items[q] = _;
                }, Z.get = function(q) {
                  return this._items[q];
                }, Z.toString = function() {
                  var q = this, _ = Object.keys(this._items).sort(function(Ae, Fe) {
                    return q._compareKeys(Ae, Fe);
                  }), ct = ["<<"];
                  if (this.limits && _.length > 1) {
                    var At = _[0], Qt = _[_.length - 1];
                    ct.push("  /Limits " + K.convert([this._dataForKey(At), this._dataForKey(Qt)]));
                  }
                  ct.push("  /" + this._keysName() + " [");
                  for (var ie = E(_), ge; !(ge = ie()).done; ) {
                    var xe = ge.value;
                    ct.push("    " + K.convert(this._dataForKey(xe)) + " " + K.convert(this._items[xe]));
                  }
                  return ct.push("]"), ct.push(">>"), ct.join(`
`);
                }, Z._compareKeys = function() {
                  throw new Error("Must be implemented by subclasses");
                }, Z._keysName = function() {
                  throw new Error("Must be implemented by subclasses");
                }, Z._dataForKey = function() {
                  throw new Error("Must be implemented by subclasses");
                }, Tt;
              }(), O = /* @__PURE__ */ function() {
                function Tt(Y, q, _, ct, At, Qt) {
                  this.id = "CS" + Object.keys(Y.spotColors).length, this.name = q, this.values = [_, ct, At, Qt], this.ref = Y.ref(["Separation", this.name, "DeviceCMYK", {
                    Range: [0, 1, 0, 1, 0, 1, 0, 1],
                    C0: [0, 0, 0, 0],
                    C1: this.values.map(function(ie) {
                      return ie / 100;
                    }),
                    FunctionType: 2,
                    Domain: [0, 1],
                    N: 1
                  }]), this.ref.end();
                }
                var Z = Tt.prototype;
                return Z.toString = function() {
                  return this.ref.id + " 0 R";
                }, Tt;
              }(), M = function(Z, Y) {
                return (Array(Y + 1).join("0") + Z).slice(-Y);
              }, N = /[\n\r\t\b\f()\\]/g, G = {
                "\n": "\\n",
                "\r": "\\r",
                "	": "\\t",
                "\b": "\\b",
                "\f": "\\f",
                "\\": "\\\\",
                "(": "\\(",
                ")": "\\)"
              }, ot = function(Z) {
                var Y = Z.length;
                if (Y & 1)
                  throw new Error("Buffer length must be even");
                for (var q = 0, _ = Y - 1; q < _; q += 2) {
                  var ct = Z[q];
                  Z[q] = Z[q + 1], Z[q + 1] = ct;
                }
                return Z;
              }, K = /* @__PURE__ */ function() {
                function Tt() {
                }
                return Tt.convert = function(Y) {
                  var q = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                  if (typeof Y == "string")
                    return "/" + Y;
                  if (Y instanceof String) {
                    for (var _ = Y, ct = !1, At = 0, Qt = _.length; At < Qt; At++)
                      if (_.charCodeAt(At) > 127) {
                        ct = !0;
                        break;
                      }
                    var ie;
                    return ct ? ie = ot(r.from("\uFEFF" + _, "utf16le")) : ie = r.from(_.valueOf(), "ascii"), q ? _ = q(ie).toString("binary") : _ = ie.toString("binary"), _ = _.replace(N, function(We) {
                      return G[We];
                    }), "(" + _ + ")";
                  } else {
                    if (r.isBuffer(Y))
                      return "<" + Y.toString("hex") + ">";
                    if (Y instanceof m || Y instanceof I || Y instanceof O)
                      return Y.toString();
                    if (Y instanceof Date) {
                      var ge = "D:" + M(Y.getUTCFullYear(), 4) + M(Y.getUTCMonth() + 1, 2) + M(Y.getUTCDate(), 2) + M(Y.getUTCHours(), 2) + M(Y.getUTCMinutes(), 2) + M(Y.getUTCSeconds(), 2) + "Z";
                      return q && (ge = q(r.from(ge, "ascii")).toString("binary"), ge = ge.replace(N, function(We) {
                        return G[We];
                      })), "(" + ge + ")";
                    } else if (Array.isArray(Y)) {
                      var xe = Y.map(function(We) {
                        return Tt.convert(We, q);
                      }).join(" ");
                      return "[" + xe + "]";
                    } else if ({}.toString.call(Y) === "[object Object]") {
                      var Ae = ["<<"];
                      for (var Fe in Y) {
                        var Ne = Y[Fe];
                        Ae.push("/" + Fe + " " + Tt.convert(Ne, q));
                      }
                      return Ae.push(">>"), Ae.join(`
`);
                    } else
                      return typeof Y == "number" ? Tt.number(Y) : "" + Y;
                  }
                }, Tt.number = function(Y) {
                  if (Y > -1e21 && Y < 1e21)
                    return Math.round(Y * 1e6) / 1e6;
                  throw new Error("unsupported number: " + Y);
                }, Tt;
              }(), nt = /* @__PURE__ */ function(Tt) {
                function Z(q, _) {
                  var ct, At = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  return ct = Tt.call(this) || this, ct.document = q, ct.id = _, ct.data = At, ct.gen = 0, ct.compress = ct.document.compress && !ct.data.Filter, ct.uncompressedLength = 0, ct.buffer = [], ct;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y.write = function(_) {
                  if (r.isBuffer(_) || (_ = r.from(_ + `
`, "binary")), this.uncompressedLength += _.length, this.data.Length == null && (this.data.Length = 0), this.buffer.push(_), this.data.Length += _.length, this.compress)
                    return this.data.Filter = "FlateDecode";
                }, Y.end = function(_) {
                  return _ && this.write(_), this.finalize();
                }, Y.finalize = function() {
                  this.offset = this.document._offset;
                  var _ = this.document._security ? this.document._security.getEncryptFn(this.id, this.gen) : null;
                  this.buffer.length && (this.buffer = r.concat(this.buffer), this.compress && (this.buffer = o.default.deflateSync(this.buffer)), _ && (this.buffer = _(this.buffer)), this.data.Length = this.buffer.length), this.document._write(this.id + " " + this.gen + " obj"), this.document._write(K.convert(this.data, _)), this.buffer.length && (this.document._write("stream"), this.document._write(this.buffer), this.buffer = [], this.document._write(`
endstream`)), this.document._write("endobj"), this.document._refEnd(this);
                }, Y.toString = function() {
                  return this.id + " " + this.gen + " R";
                }, Z;
              }(m), xt = {
                top: 72,
                left: 72,
                bottom: 72,
                right: 72
              }, bt = {
                "4A0": [4767.87, 6740.79],
                "2A0": [3370.39, 4767.87],
                A0: [2383.94, 3370.39],
                A1: [1683.78, 2383.94],
                A2: [1190.55, 1683.78],
                A3: [841.89, 1190.55],
                A4: [595.28, 841.89],
                A5: [419.53, 595.28],
                A6: [297.64, 419.53],
                A7: [209.76, 297.64],
                A8: [147.4, 209.76],
                A9: [104.88, 147.4],
                A10: [73.7, 104.88],
                B0: [2834.65, 4008.19],
                B1: [2004.09, 2834.65],
                B2: [1417.32, 2004.09],
                B3: [1000.63, 1417.32],
                B4: [708.66, 1000.63],
                B5: [498.9, 708.66],
                B6: [354.33, 498.9],
                B7: [249.45, 354.33],
                B8: [175.75, 249.45],
                B9: [124.72, 175.75],
                B10: [87.87, 124.72],
                C0: [2599.37, 3676.54],
                C1: [1836.85, 2599.37],
                C2: [1298.27, 1836.85],
                C3: [918.43, 1298.27],
                C4: [649.13, 918.43],
                C5: [459.21, 649.13],
                C6: [323.15, 459.21],
                C7: [229.61, 323.15],
                C8: [161.57, 229.61],
                C9: [113.39, 161.57],
                C10: [79.37, 113.39],
                RA0: [2437.8, 3458.27],
                RA1: [1729.13, 2437.8],
                RA2: [1218.9, 1729.13],
                RA3: [864.57, 1218.9],
                RA4: [609.45, 864.57],
                SRA0: [2551.18, 3628.35],
                SRA1: [1814.17, 2551.18],
                SRA2: [1275.59, 1814.17],
                SRA3: [907.09, 1275.59],
                SRA4: [637.8, 907.09],
                EXECUTIVE: [521.86, 756],
                FOLIO: [612, 936],
                LEGAL: [612, 1008],
                LETTER: [612, 792],
                TABLOID: [792, 1224]
              }, St = /* @__PURE__ */ function() {
                function Tt(Y) {
                  var q = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  this.document = Y, this.size = q.size || "letter", this.layout = q.layout || "portrait", typeof q.margin == "number" ? this.margins = {
                    top: q.margin,
                    left: q.margin,
                    bottom: q.margin,
                    right: q.margin
                  } : this.margins = q.margins || xt;
                  var _ = Array.isArray(this.size) ? this.size : bt[this.size.toUpperCase()];
                  this.width = _[this.layout === "portrait" ? 0 : 1], this.height = _[this.layout === "portrait" ? 1 : 0], this.content = this.document.ref(), this.resources = this.document.ref({
                    ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"]
                  }), this.dictionary = this.document.ref({
                    Type: "Page",
                    Parent: this.document._root.data.Pages,
                    MediaBox: [0, 0, this.width, this.height],
                    Contents: this.content,
                    Resources: this.resources
                  }), this.markings = [];
                }
                var Z = Tt.prototype;
                return Z.maxY = function() {
                  return this.height - this.margins.bottom;
                }, Z.write = function(q) {
                  return this.content.write(q);
                }, Z._setTabOrder = function() {
                  !this.dictionary.Tabs && this.document.hasMarkInfoDictionary() && (this.dictionary.data.Tabs = "S");
                }, Z.end = function() {
                  this._setTabOrder(), this.dictionary.end(), this.resources.data.ColorSpace = this.resources.data.ColorSpace || {};
                  for (var q = 0, _ = Object.values(this.document.spotColors); q < _.length; q++) {
                    var ct = _[q];
                    this.resources.data.ColorSpace[ct.id] = ct;
                  }
                  return this.resources.end(), this.content.end();
                }, e(Tt, [{
                  key: "fonts",
                  get: function() {
                    var q = this.resources.data;
                    return q.Font != null ? q.Font : q.Font = {};
                  }
                }, {
                  key: "xobjects",
                  get: function() {
                    var q = this.resources.data;
                    return q.XObject != null ? q.XObject : q.XObject = {};
                  }
                }, {
                  key: "ext_gstates",
                  get: function() {
                    var q = this.resources.data;
                    return q.ExtGState != null ? q.ExtGState : q.ExtGState = {};
                  }
                }, {
                  key: "patterns",
                  get: function() {
                    var q = this.resources.data;
                    return q.Pattern != null ? q.Pattern : q.Pattern = {};
                  }
                }, {
                  key: "colorSpaces",
                  get: function() {
                    var q = this.resources.data;
                    return q.ColorSpace || (q.ColorSpace = {});
                  }
                }, {
                  key: "annotations",
                  get: function() {
                    var q = this.dictionary.data;
                    return q.Annots != null ? q.Annots : q.Annots = [];
                  }
                }, {
                  key: "structParentTreeKey",
                  get: function() {
                    var q = this.dictionary.data;
                    return q.StructParents != null ? q.StructParents : q.StructParents = this.document.createStructParentTreeNextKey();
                  }
                }]);
              }(), Dt = /* @__PURE__ */ function(Tt) {
                function Z() {
                  return Tt.apply(this, arguments) || this;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y._compareKeys = function(_, ct) {
                  return _.localeCompare(ct);
                }, Y._keysName = function() {
                  return "Names";
                }, Y._dataForKey = function(_) {
                  return new String(_);
                }, Z;
              }(I);
              function Lt(Tt, Z) {
                if (Tt < Z[0])
                  return !1;
                for (var Y = 0, q = Z.length / 2; Y <= q; ) {
                  var _ = Math.floor((Y + q) / 2), ct = _ * 2;
                  if (Tt >= Z[ct] && Tt <= Z[ct + 1])
                    return !0;
                  Tt > Z[ct + 1] ? Y = _ + 1 : q = _ - 1;
                }
                return !1;
              }
              var jt = [545, 545, 564, 591, 686, 687, 751, 767, 848, 863, 880, 883, 886, 889, 891, 893, 895, 899, 907, 907, 909, 909, 930, 930, 975, 975, 1015, 1023, 1159, 1159, 1231, 1231, 1270, 1271, 1274, 1279, 1296, 1328, 1367, 1368, 1376, 1376, 1416, 1416, 1419, 1424, 1442, 1442, 1466, 1466, 1477, 1487, 1515, 1519, 1525, 1547, 1549, 1562, 1564, 1566, 1568, 1568, 1595, 1599, 1622, 1631, 1774, 1775, 1791, 1791, 1806, 1806, 1837, 1839, 1867, 1919, 1970, 2304, 2308, 2308, 2362, 2363, 2382, 2383, 2389, 2391, 2417, 2432, 2436, 2436, 2445, 2446, 2449, 2450, 2473, 2473, 2481, 2481, 2483, 2485, 2490, 2491, 2493, 2493, 2501, 2502, 2505, 2506, 2510, 2518, 2520, 2523, 2526, 2526, 2532, 2533, 2555, 2561, 2563, 2564, 2571, 2574, 2577, 2578, 2601, 2601, 2609, 2609, 2612, 2612, 2615, 2615, 2618, 2619, 2621, 2621, 2627, 2630, 2633, 2634, 2638, 2648, 2653, 2653, 2655, 2661, 2677, 2688, 2692, 2692, 2700, 2700, 2702, 2702, 2706, 2706, 2729, 2729, 2737, 2737, 2740, 2740, 2746, 2747, 2758, 2758, 2762, 2762, 2766, 2767, 2769, 2783, 2785, 2789, 2800, 2816, 2820, 2820, 2829, 2830, 2833, 2834, 2857, 2857, 2865, 2865, 2868, 2869, 2874, 2875, 2884, 2886, 2889, 2890, 2894, 2901, 2904, 2907, 2910, 2910, 2914, 2917, 2929, 2945, 2948, 2948, 2955, 2957, 2961, 2961, 2966, 2968, 2971, 2971, 2973, 2973, 2976, 2978, 2981, 2983, 2987, 2989, 2998, 2998, 3002, 3005, 3011, 3013, 3017, 3017, 3022, 3030, 3032, 3046, 3059, 3072, 3076, 3076, 3085, 3085, 3089, 3089, 3113, 3113, 3124, 3124, 3130, 3133, 3141, 3141, 3145, 3145, 3150, 3156, 3159, 3167, 3170, 3173, 3184, 3201, 3204, 3204, 3213, 3213, 3217, 3217, 3241, 3241, 3252, 3252, 3258, 3261, 3269, 3269, 3273, 3273, 3278, 3284, 3287, 3293, 3295, 3295, 3298, 3301, 3312, 3329, 3332, 3332, 3341, 3341, 3345, 3345, 3369, 3369, 3386, 3389, 3396, 3397, 3401, 3401, 3406, 3414, 3416, 3423, 3426, 3429, 3440, 3457, 3460, 3460, 3479, 3481, 3506, 3506, 3516, 3516, 3518, 3519, 3527, 3529, 3531, 3534, 3541, 3541, 3543, 3543, 3552, 3569, 3573, 3584, 3643, 3646, 3676, 3712, 3715, 3715, 3717, 3718, 3721, 3721, 3723, 3724, 3726, 3731, 3736, 3736, 3744, 3744, 3748, 3748, 3750, 3750, 3752, 3753, 3756, 3756, 3770, 3770, 3774, 3775, 3781, 3781, 3783, 3783, 3790, 3791, 3802, 3803, 3806, 3839, 3912, 3912, 3947, 3952, 3980, 3983, 3992, 3992, 4029, 4029, 4045, 4046, 4048, 4095, 4130, 4130, 4136, 4136, 4139, 4139, 4147, 4149, 4154, 4159, 4186, 4255, 4294, 4303, 4345, 4346, 4348, 4351, 4442, 4446, 4515, 4519, 4602, 4607, 4615, 4615, 4679, 4679, 4681, 4681, 4686, 4687, 4695, 4695, 4697, 4697, 4702, 4703, 4743, 4743, 4745, 4745, 4750, 4751, 4783, 4783, 4785, 4785, 4790, 4791, 4799, 4799, 4801, 4801, 4806, 4807, 4815, 4815, 4823, 4823, 4847, 4847, 4879, 4879, 4881, 4881, 4886, 4887, 4895, 4895, 4935, 4935, 4955, 4960, 4989, 5023, 5109, 5120, 5751, 5759, 5789, 5791, 5873, 5887, 5901, 5901, 5909, 5919, 5943, 5951, 5972, 5983, 5997, 5997, 6001, 6001, 6004, 6015, 6109, 6111, 6122, 6143, 6159, 6159, 6170, 6175, 6264, 6271, 6314, 7679, 7836, 7839, 7930, 7935, 7958, 7959, 7966, 7967, 8006, 8007, 8014, 8015, 8024, 8024, 8026, 8026, 8028, 8028, 8030, 8030, 8062, 8063, 8117, 8117, 8133, 8133, 8148, 8149, 8156, 8156, 8176, 8177, 8181, 8181, 8191, 8191, 8275, 8278, 8280, 8286, 8292, 8297, 8306, 8307, 8335, 8351, 8370, 8399, 8427, 8447, 8507, 8508, 8524, 8530, 8580, 8591, 9167, 9215, 9255, 9279, 9291, 9311, 9471, 9471, 9748, 9749, 9752, 9752, 9854, 9855, 9866, 9984, 9989, 9989, 9994, 9995, 10024, 10024, 10060, 10060, 10062, 10062, 10067, 10069, 10071, 10071, 10079, 10080, 10133, 10135, 10160, 10160, 10175, 10191, 10220, 10223, 11008, 11903, 11930, 11930, 12020, 12031, 12246, 12271, 12284, 12287, 12352, 12352, 12439, 12440, 12544, 12548, 12589, 12592, 12687, 12687, 12728, 12783, 12829, 12831, 12868, 12880, 12924, 12926, 13004, 13007, 13055, 13055, 13175, 13178, 13278, 13279, 13311, 13311, 19894, 19967, 40870, 40959, 42125, 42127, 42183, 44031, 55204, 55295, 64046, 64047, 64107, 64255, 64263, 64274, 64280, 64284, 64311, 64311, 64317, 64317, 64319, 64319, 64322, 64322, 64325, 64325, 64434, 64466, 64832, 64847, 64912, 64913, 64968, 64975, 65021, 65023, 65040, 65055, 65060, 65071, 65095, 65096, 65107, 65107, 65127, 65127, 65132, 65135, 65141, 65141, 65277, 65278, 65280, 65280, 65471, 65473, 65480, 65481, 65488, 65489, 65496, 65497, 65501, 65503, 65511, 65511, 65519, 65528, 65536, 66303, 66335, 66335, 66340, 66351, 66379, 66559, 66598, 66599, 66638, 118783, 119030, 119039, 119079, 119081, 119262, 119807, 119893, 119893, 119965, 119965, 119968, 119969, 119971, 119972, 119975, 119976, 119981, 119981, 119994, 119994, 119996, 119996, 120001, 120001, 120004, 120004, 120070, 120070, 120075, 120076, 120085, 120085, 120093, 120093, 120122, 120122, 120127, 120127, 120133, 120133, 120135, 120137, 120145, 120145, 120484, 120487, 120778, 120781, 120832, 131069, 173783, 194559, 195102, 196605, 196608, 262141, 262144, 327677, 327680, 393213, 393216, 458749, 458752, 524285, 524288, 589821, 589824, 655357, 655360, 720893, 720896, 786429, 786432, 851965, 851968, 917501, 917504, 917504, 917506, 917535, 917632, 983037], J = function(Z) {
                return Lt(Z, jt);
              }, yt = [173, 173, 847, 847, 6150, 6150, 6155, 6155, 6156, 6156, 6157, 6157, 8203, 8203, 8204, 8204, 8205, 8205, 8288, 8288, 65024, 65024, 65025, 65025, 65026, 65026, 65027, 65027, 65028, 65028, 65029, 65029, 65030, 65030, 65031, 65031, 65032, 65032, 65033, 65033, 65034, 65034, 65035, 65035, 65036, 65036, 65037, 65037, 65038, 65038, 65039, 65039, 65279, 65279], ut = function(Z) {
                return Lt(Z, yt);
              }, st = [
                160,
                160,
                5760,
                5760,
                8192,
                8192,
                8193,
                8193,
                8194,
                8194,
                8195,
                8195,
                8196,
                8196,
                8197,
                8197,
                8198,
                8198,
                8199,
                8199,
                8200,
                8200,
                8201,
                8201,
                8202,
                8202,
                8203,
                8203,
                8239,
                8239,
                8287,
                8287,
                12288,
                12288
                /* IDEOGRAPHIC SPACE */
              ], wt = function(Z) {
                return Lt(Z, st);
              }, V = [
                /**
                 * C.2.2 Non-ASCII control characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.2
                 */
                128,
                159,
                1757,
                1757,
                1807,
                1807,
                6158,
                6158,
                8204,
                8204,
                8205,
                8205,
                8232,
                8232,
                8233,
                8233,
                8288,
                8288,
                8289,
                8289,
                8290,
                8290,
                8291,
                8291,
                8298,
                8303,
                65279,
                65279,
                65529,
                65532,
                119155,
                119162
                /* [MUSICAL CONTROL CHARACTERS] */
              ], Ft = [
                /**
                 * C.4 Non-character code points
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.4
                 */
                64976,
                65007,
                65534,
                65535,
                131070,
                131071,
                196606,
                196607,
                262142,
                262143,
                327678,
                327679,
                393214,
                393215,
                458750,
                458751,
                524286,
                524287,
                589822,
                589823,
                655358,
                655359,
                720894,
                720895,
                786430,
                786431,
                851966,
                851967,
                917502,
                917503,
                983038,
                983039,
                1114110,
                1114111
                /* [NONCHARACTER CODE POINTS] */
              ], U = [
                /**
                 * C.2.1 ASCII control characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.1
                 */
                0,
                31,
                127,
                127,
                /**
                 * C.8 Change display properties or are deprecated
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.8
                 */
                832,
                832,
                833,
                833,
                8206,
                8206,
                8207,
                8207,
                8234,
                8234,
                8235,
                8235,
                8236,
                8236,
                8237,
                8237,
                8238,
                8238,
                8298,
                8298,
                8299,
                8299,
                8300,
                8300,
                8301,
                8301,
                8302,
                8302,
                8303,
                8303,
                /**
                 * C.7 Inappropriate for canonical representation
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.7
                 */
                12272,
                12283,
                /**
                 * C.5 Surrogate codes
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.5
                 */
                55296,
                57343,
                /**
                 * C.3 Private use
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3
                 */
                57344,
                63743,
                /**
                 * C.6 Inappropriate for plain text
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.6
                 */
                65529,
                65529,
                65530,
                65530,
                65531,
                65531,
                65532,
                65532,
                65533,
                65533,
                /**
                 * C.9 Tagging characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.9
                 */
                917505,
                917505,
                917536,
                917631,
                /**
                 * C.3 Private use
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3
                 */
                983040,
                1048573,
                1048576,
                1114109
                /* [PRIVATE USE, PLANE 16] */
              ], S = function(Z) {
                return Lt(Z, st) || Lt(Z, U) || Lt(Z, V) || Lt(Z, Ft);
              }, k = [1470, 1470, 1472, 1472, 1475, 1475, 1488, 1514, 1520, 1524, 1563, 1563, 1567, 1567, 1569, 1594, 1600, 1610, 1645, 1647, 1649, 1749, 1757, 1757, 1765, 1766, 1786, 1790, 1792, 1805, 1808, 1808, 1810, 1836, 1920, 1957, 1969, 1969, 8207, 8207, 64285, 64285, 64287, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65020, 65136, 65140, 65142, 65276], H = function(Z) {
                return Lt(Z, k);
              }, it = [65, 90, 97, 122, 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 544, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736, 740, 750, 750, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 1013, 1024, 1154, 1162, 1230, 1232, 1269, 1272, 1273, 1280, 1295, 1329, 1366, 1369, 1375, 1377, 1415, 1417, 1417, 2307, 2307, 2309, 2361, 2365, 2368, 2377, 2380, 2384, 2384, 2392, 2401, 2404, 2416, 2434, 2435, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2494, 2496, 2503, 2504, 2507, 2508, 2519, 2519, 2524, 2525, 2527, 2529, 2534, 2545, 2548, 2554, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2622, 2624, 2649, 2652, 2654, 2654, 2662, 2671, 2674, 2676, 2691, 2691, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2752, 2761, 2761, 2763, 2764, 2768, 2768, 2784, 2784, 2790, 2799, 2818, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870, 2873, 2877, 2878, 2880, 2880, 2887, 2888, 2891, 2892, 2903, 2903, 2908, 2909, 2911, 2913, 2918, 2928, 2947, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3006, 3007, 3009, 3010, 3014, 3016, 3018, 3020, 3031, 3031, 3047, 3058, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3137, 3140, 3168, 3169, 3174, 3183, 3202, 3203, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3262, 3262, 3264, 3268, 3271, 3272, 3274, 3275, 3285, 3286, 3294, 3294, 3296, 3297, 3302, 3311, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3390, 3392, 3398, 3400, 3402, 3404, 3415, 3415, 3424, 3425, 3430, 3439, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3535, 3537, 3544, 3551, 3570, 3572, 3585, 3632, 3634, 3635, 3648, 3654, 3663, 3675, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3792, 3801, 3804, 3805, 3840, 3863, 3866, 3892, 3894, 3894, 3896, 3896, 3902, 3911, 3913, 3946, 3967, 3967, 3973, 3973, 3976, 3979, 4030, 4037, 4039, 4044, 4047, 4047, 4096, 4129, 4131, 4135, 4137, 4138, 4140, 4140, 4145, 4145, 4152, 4152, 4160, 4183, 4256, 4293, 4304, 4344, 4347, 4347, 4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 4961, 4988, 5024, 5108, 5121, 5750, 5761, 5786, 5792, 5872, 5888, 5900, 5902, 5905, 5920, 5937, 5941, 5942, 5952, 5969, 5984, 5996, 5998, 6e3, 6016, 6070, 6078, 6085, 6087, 6088, 6100, 6106, 6108, 6108, 6112, 6121, 6160, 6169, 6176, 6263, 6272, 6312, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8206, 8206, 8305, 8305, 8319, 8319, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8509, 8511, 8517, 8521, 8544, 8579, 9014, 9082, 9109, 9109, 9372, 9449, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12588, 12593, 12686, 12688, 12727, 12784, 12828, 12832, 12867, 12896, 12923, 12927, 12976, 12992, 13003, 13008, 13054, 13056, 13174, 13179, 13277, 13280, 13310, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 55296, 64045, 64048, 64106, 64256, 64262, 64275, 64279, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, 66304, 66334, 66336, 66339, 66352, 66378, 66560, 66597, 66600, 66637, 118784, 119029, 119040, 119078, 119082, 119142, 119146, 119154, 119171, 119172, 119180, 119209, 119214, 119261, 119808, 119892, 119894, 119964, 119966, 119967, 119970, 119970, 119973, 119974, 119977, 119980, 119982, 119993, 119995, 119995, 119997, 12e4, 120002, 120003, 120005, 120069, 120071, 120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126, 120128, 120132, 120134, 120134, 120138, 120144, 120146, 120483, 120488, 120777, 131072, 173782, 194560, 195101, 983040, 1048573, 1048576, 1114109], et = function(Z) {
                return Lt(Z, it);
              }, tt = wt, Ct = ut, Rt = function(Z) {
                return Z.codePointAt(0);
              }, Kt = function(Z) {
                return Z[0];
              }, Gt = function(Z) {
                return Z[Z.length - 1];
              };
              function It(Tt) {
                for (var Z = [], Y = Tt.length, q = 0; q < Y; q += 1) {
                  var _ = Tt.charCodeAt(q);
                  if (_ >= 55296 && _ <= 56319 && Y > q + 1) {
                    var ct = Tt.charCodeAt(q + 1);
                    if (ct >= 56320 && ct <= 57343) {
                      Z.push((_ - 55296) * 1024 + ct - 56320 + 65536), q += 1;
                      continue;
                    }
                  }
                  Z.push(_);
                }
                return Z;
              }
              function re(Tt) {
                var Z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                if (typeof Tt != "string")
                  throw new TypeError("Expected string.");
                if (Tt.length === 0)
                  return "";
                var Y = It(Tt).map(function(Ae) {
                  return tt(Ae) ? 32 : Ae;
                }).filter(function(Ae) {
                  return !Ct(Ae);
                }), q = String.fromCodePoint.apply(null, Y).normalize("NFKC"), _ = It(q), ct = _.some(S);
                if (ct)
                  throw new Error("Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3");
                if (Z.allowUnassigned !== !0) {
                  var At = _.some(J);
                  if (At)
                    throw new Error("Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5");
                }
                var Qt = _.some(H), ie = _.some(et);
                if (Qt && ie)
                  throw new Error("String must not contain RandALCat and LCat at the same time, see https://tools.ietf.org/html/rfc3454#section-6");
                var ge = H(Rt(Kt(q))), xe = H(Rt(Gt(q)));
                if (Qt && !(ge && xe))
                  throw new Error("Bidirectional RandALCat character must be the first and the last character of the string, see https://tools.ietf.org/html/rfc3454#section-6");
                return q;
              }
              var be = /* @__PURE__ */ function() {
                function Tt(Y) {
                  var q = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  if (!q.ownerPassword && !q.userPassword)
                    throw new Error("None of owner password and user password is defined.");
                  this.document = Y, this._setupEncryption(q);
                }
                Tt.generateFileID = function() {
                  var q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ = q.CreationDate.getTime() + `
`;
                  for (var ct in q)
                    q.hasOwnProperty(ct) && (_ += ct + ": " + q[ct].valueOf() + `
`);
                  return Pt(h.default.MD5(_));
                }, Tt.generateRandomWordArray = function(q) {
                  return h.default.lib.WordArray.random(q);
                }, Tt.create = function(q) {
                  var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  return !_.ownerPassword && !_.userPassword ? null : new Tt(q, _);
                };
                var Z = Tt.prototype;
                return Z._setupEncryption = function(q) {
                  switch (q.pdfVersion) {
                    case "1.4":
                    case "1.5":
                      this.version = 2;
                      break;
                    case "1.6":
                    case "1.7":
                      this.version = 4;
                      break;
                    case "1.7ext3":
                      this.version = 5;
                      break;
                    default:
                      this.version = 1;
                      break;
                  }
                  var _ = {
                    Filter: "Standard"
                  };
                  switch (this.version) {
                    case 1:
                    case 2:
                    case 4:
                      this._setupEncryptionV1V2V4(this.version, _, q);
                      break;
                    case 5:
                      this._setupEncryptionV5(_, q);
                      break;
                  }
                  this.dictionary = this.document.ref(_);
                }, Z._setupEncryptionV1V2V4 = function(q, _, ct) {
                  var At, Qt;
                  switch (q) {
                    case 1:
                      At = 2, this.keyBits = 40, Qt = me(ct.permissions);
                      break;
                    case 2:
                      At = 3, this.keyBits = 128, Qt = le(ct.permissions);
                      break;
                    case 4:
                      At = 4, this.keyBits = 128, Qt = le(ct.permissions);
                      break;
                  }
                  var ie = W(ct.userPassword), ge = ct.ownerPassword ? W(ct.ownerPassword) : ie, xe = $t(At, this.keyBits, ie, ge);
                  this.encryptionKey = ue(At, this.keyBits, this.document._id, ie, xe, Qt);
                  var Ae;
                  At === 2 ? Ae = Se(this.encryptionKey) : Ae = Wt(this.document._id, this.encryptionKey), _.V = q, q >= 2 && (_.Length = this.keyBits), q === 4 && (_.CF = {
                    StdCF: {
                      AuthEvent: "DocOpen",
                      CFM: "AESV2",
                      Length: this.keyBits / 8
                    }
                  }, _.StmF = "StdCF", _.StrF = "StdCF"), _.R = At, _.O = Pt(xe), _.U = Pt(Ae), _.P = Qt;
                }, Z._setupEncryptionV5 = function(q, _) {
                  this.keyBits = 256;
                  var ct = le(_.permissions), At = Q(_.userPassword), Qt = _.ownerPassword ? Q(_.ownerPassword) : At;
                  this.encryptionKey = Ot(Tt.generateRandomWordArray);
                  var ie = he(At, Tt.generateRandomWordArray), ge = h.default.lib.WordArray.create(ie.words.slice(10, 12), 8), xe = Ee(At, ge, this.encryptionKey), Ae = Re(Qt, ie, Tt.generateRandomWordArray), Fe = h.default.lib.WordArray.create(Ae.words.slice(10, 12), 8), Ne = Ie(Qt, Fe, ie, this.encryptionKey), We = vt(ct, this.encryptionKey, Tt.generateRandomWordArray);
                  q.V = 5, q.Length = this.keyBits, q.CF = {
                    StdCF: {
                      AuthEvent: "DocOpen",
                      CFM: "AESV3",
                      Length: this.keyBits / 8
                    }
                  }, q.StmF = "StdCF", q.StrF = "StdCF", q.R = 5, q.O = Pt(Ae), q.OE = Pt(Ne), q.U = Pt(ie), q.UE = Pt(xe), q.P = ct, q.Perms = Pt(We);
                }, Z.getEncryptFn = function(q, _) {
                  var ct;
                  if (this.version < 5 && (ct = this.encryptionKey.clone().concat(h.default.lib.WordArray.create([(q & 255) << 24 | (q & 65280) << 8 | q >> 8 & 65280 | _ & 255, (_ & 65280) << 16], 5))), this.version === 1 || this.version === 2) {
                    var At = h.default.MD5(ct);
                    return At.sigBytes = Math.min(16, this.keyBits / 8 + 5), function(xe) {
                      return Pt(h.default.RC4.encrypt(h.default.lib.WordArray.create(xe), At).ciphertext);
                    };
                  }
                  var Qt;
                  this.version === 4 ? Qt = h.default.MD5(ct.concat(h.default.lib.WordArray.create([1933667412], 4))) : Qt = this.encryptionKey;
                  var ie = Tt.generateRandomWordArray(16), ge = {
                    mode: h.default.mode.CBC,
                    padding: h.default.pad.Pkcs7,
                    iv: ie
                  };
                  return function(xe) {
                    return Pt(ie.clone().concat(h.default.AES.encrypt(h.default.lib.WordArray.create(xe), Qt, ge).ciphertext));
                  };
                }, Z.end = function() {
                  this.dictionary.end();
                }, Tt;
              }();
              function me() {
                var Tt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = -64;
                return Tt.printing && (Z |= 4), Tt.modifying && (Z |= 8), Tt.copying && (Z |= 16), Tt.annotating && (Z |= 32), Z;
              }
              function le() {
                var Tt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = -3904;
                return Tt.printing === "lowResolution" && (Z |= 4), Tt.printing === "highResolution" && (Z |= 2052), Tt.modifying && (Z |= 8), Tt.copying && (Z |= 16), Tt.annotating && (Z |= 32), Tt.fillingForms && (Z |= 256), Tt.contentAccessibility && (Z |= 512), Tt.documentAssembly && (Z |= 1024), Z;
              }
              function Se(Tt) {
                return h.default.RC4.encrypt(W(), Tt).ciphertext;
              }
              function Wt(Tt, Z) {
                for (var Y = Z.clone(), q = h.default.MD5(W().concat(h.default.lib.WordArray.create(Tt))), _ = 0; _ < 20; _++) {
                  for (var ct = Math.ceil(Y.sigBytes / 4), At = 0; At < ct; At++)
                    Y.words[At] = Z.words[At] ^ (_ | _ << 8 | _ << 16 | _ << 24);
                  q = h.default.RC4.encrypt(q, Y).ciphertext;
                }
                return q.concat(h.default.lib.WordArray.create(null, 16));
              }
              function $t(Tt, Z, Y, q) {
                for (var _ = q, ct = Tt >= 3 ? 51 : 1, At = 0; At < ct; At++)
                  _ = h.default.MD5(_);
                var Qt = _.clone();
                Qt.sigBytes = Z / 8;
                var ie = Y;
                ct = Tt >= 3 ? 20 : 1;
                for (var ge = 0; ge < ct; ge++) {
                  for (var xe = Math.ceil(Qt.sigBytes / 4), Ae = 0; Ae < xe; Ae++)
                    Qt.words[Ae] = _.words[Ae] ^ (ge | ge << 8 | ge << 16 | ge << 24);
                  ie = h.default.RC4.encrypt(ie, Qt).ciphertext;
                }
                return ie;
              }
              function ue(Tt, Z, Y, q, _, ct) {
                for (var At = q.clone().concat(_).concat(h.default.lib.WordArray.create([gt(ct)], 4)).concat(h.default.lib.WordArray.create(Y)), Qt = Tt >= 3 ? 51 : 1, ie = 0; ie < Qt; ie++)
                  At = h.default.MD5(At), At.sigBytes = Z / 8;
                return At;
              }
              function he(Tt, Z) {
                var Y = Z(8), q = Z(8);
                return h.default.SHA256(Tt.clone().concat(Y)).concat(Y).concat(q);
              }
              function Ee(Tt, Z, Y) {
                var q = h.default.SHA256(Tt.clone().concat(Z)), _ = {
                  mode: h.default.mode.CBC,
                  padding: h.default.pad.NoPadding,
                  iv: h.default.lib.WordArray.create(null, 16)
                };
                return h.default.AES.encrypt(Y, q, _).ciphertext;
              }
              function Re(Tt, Z, Y) {
                var q = Y(8), _ = Y(8);
                return h.default.SHA256(Tt.clone().concat(q).concat(Z)).concat(q).concat(_);
              }
              function Ie(Tt, Z, Y, q) {
                var _ = h.default.SHA256(Tt.clone().concat(Z).concat(Y)), ct = {
                  mode: h.default.mode.CBC,
                  padding: h.default.pad.NoPadding,
                  iv: h.default.lib.WordArray.create(null, 16)
                };
                return h.default.AES.encrypt(q, _, ct).ciphertext;
              }
              function Ot(Tt) {
                return Tt(32);
              }
              function vt(Tt, Z, Y) {
                var q = h.default.lib.WordArray.create([gt(Tt), 4294967295, 1415668834], 12).concat(Y(4)), _ = {
                  mode: h.default.mode.ECB,
                  padding: h.default.pad.NoPadding
                };
                return h.default.AES.encrypt(q, Z, _).ciphertext;
              }
              function W() {
                for (var Tt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", Z = r.alloc(32), Y = Tt.length, q = 0; q < Y && q < 32; ) {
                  var _ = Tt.charCodeAt(q);
                  if (_ > 255)
                    throw new Error("Password contains one or more invalid characters.");
                  Z[q] = _, q++;
                }
                for (; q < 32; )
                  Z[q] = ht[q - Y], q++;
                return h.default.lib.WordArray.create(Z);
              }
              function Q() {
                var Tt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
                Tt = unescape(encodeURIComponent(re(Tt)));
                for (var Z = Math.min(127, Tt.length), Y = r.alloc(Z), q = 0; q < Z; q++)
                  Y[q] = Tt.charCodeAt(q);
                return h.default.lib.WordArray.create(Y);
              }
              function gt(Tt) {
                return (Tt & 255) << 24 | (Tt & 65280) << 8 | Tt >> 8 & 65280 | Tt >> 24 & 255;
              }
              function Pt(Tt) {
                for (var Z = [], Y = 0; Y < Tt.sigBytes; Y++)
                  Z.push(Tt.words[Math.floor(Y / 4)] >> 8 * (3 - Y % 4) & 255);
                return r.from(Z);
              }
              var ht = [40, 191, 78, 94, 78, 117, 138, 65, 100, 0, 78, 86, 255, 250, 1, 8, 46, 46, 0, 182, 208, 104, 62, 128, 47, 12, 169, 254, 100, 83, 105, 122], Ht = K.number, we = /* @__PURE__ */ function() {
                function Tt(Y) {
                  this.doc = Y, this.stops = [], this.embedded = !1, this.transform = [1, 0, 0, 1, 0, 0];
                }
                var Z = Tt.prototype;
                return Z.stop = function(q, _, ct) {
                  if (ct == null && (ct = 1), _ = this.doc._normalizeColor(_), this.stops.length === 0)
                    if (_.length === 3)
                      this._colorSpace = "DeviceRGB";
                    else if (_.length === 4)
                      this._colorSpace = "DeviceCMYK";
                    else if (_.length === 1)
                      this._colorSpace = "DeviceGray";
                    else
                      throw new Error("Unknown color space");
                  else if (this._colorSpace === "DeviceRGB" && _.length !== 3 || this._colorSpace === "DeviceCMYK" && _.length !== 4 || this._colorSpace === "DeviceGray" && _.length !== 1)
                    throw new Error("All gradient stops must use the same color space");
                  return ct = Math.max(0, Math.min(1, ct)), this.stops.push([q, _, ct]), this;
                }, Z.setTransform = function(q, _, ct, At, Qt, ie) {
                  return this.transform = [q, _, ct, At, Qt, ie], this;
                }, Z.embed = function(q) {
                  var _, ct = this.stops.length;
                  if (ct !== 0) {
                    this.embedded = !0, this.matrix = q;
                    var At = this.stops[ct - 1];
                    At[0] < 1 && this.stops.push([1, At[1], At[2]]);
                    for (var Qt = [], ie = [], ge = [], xe = 0; xe < ct - 1; xe++)
                      ie.push(0, 1), xe + 2 !== ct && Qt.push(this.stops[xe + 1][0]), _ = this.doc.ref({
                        FunctionType: 2,
                        Domain: [0, 1],
                        C0: this.stops[xe + 0][1],
                        C1: this.stops[xe + 1][1],
                        N: 1
                      }), ge.push(_), _.end();
                    ct === 1 ? _ = ge[0] : (_ = this.doc.ref({
                      FunctionType: 3,
                      // stitching function
                      Domain: [0, 1],
                      Functions: ge,
                      Bounds: Qt,
                      Encode: ie
                    }), _.end()), this.id = "Sh" + ++this.doc._gradCount;
                    var Ae = this.shader(_);
                    Ae.end();
                    var Fe = this.doc.ref({
                      Type: "Pattern",
                      PatternType: 2,
                      Shading: Ae,
                      Matrix: this.matrix.map(Ht)
                    });
                    if (Fe.end(), this.stops.some(function(je) {
                      return je[2] < 1;
                    })) {
                      var Ne = this.opacityGradient();
                      Ne._colorSpace = "DeviceGray";
                      for (var We = E(this.stops), Ye; !(Ye = We()).done; ) {
                        var vr = Ye.value;
                        Ne.stop(vr[0], [vr[2]]);
                      }
                      Ne = Ne.embed(this.matrix);
                      var _e = [0, 0, this.doc.page.width, this.doc.page.height], hr = this.doc.ref({
                        Type: "XObject",
                        Subtype: "Form",
                        FormType: 1,
                        BBox: _e,
                        Group: {
                          Type: "Group",
                          S: "Transparency",
                          CS: "DeviceGray"
                        },
                        Resources: {
                          ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                          Pattern: {
                            Sh1: Ne
                          }
                        }
                      });
                      hr.write("/Pattern cs /Sh1 scn"), hr.end(_e.join(" ") + " re f");
                      var Cr = this.doc.ref({
                        Type: "ExtGState",
                        SMask: {
                          Type: "Mask",
                          S: "Luminosity",
                          G: hr
                        }
                      });
                      Cr.end();
                      var fr = this.doc.ref({
                        Type: "Pattern",
                        PatternType: 1,
                        PaintType: 1,
                        TilingType: 2,
                        BBox: _e,
                        XStep: _e[2],
                        YStep: _e[3],
                        Resources: {
                          ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                          Pattern: {
                            Sh1: Fe
                          },
                          ExtGState: {
                            Gs1: Cr
                          }
                        }
                      });
                      fr.write("/Gs1 gs /Pattern cs /Sh1 scn"), fr.end(_e.join(" ") + " re f"), this.doc.page.patterns[this.id] = fr;
                    } else
                      this.doc.page.patterns[this.id] = Fe;
                    return Fe;
                  }
                }, Z.apply = function(q) {
                  var _ = this.doc._ctm, ct = _[0], At = _[1], Qt = _[2], ie = _[3], ge = _[4], xe = _[5], Ae = this.transform, Fe = Ae[0], Ne = Ae[1], We = Ae[2], Ye = Ae[3], vr = Ae[4], _e = Ae[5], hr = [ct * Fe + Qt * Ne, At * Fe + ie * Ne, ct * We + Qt * Ye, At * We + ie * Ye, ct * vr + Qt * _e + ge, At * vr + ie * _e + xe];
                  (!this.embedded || hr.join(" ") !== this.matrix.join(" ")) && this.embed(hr), this.doc._setColorSpace("Pattern", q);
                  var Cr = q ? "SCN" : "scn";
                  return this.doc.addContent("/" + this.id + " " + Cr);
                }, Tt;
              }(), rt = /* @__PURE__ */ function(Tt) {
                function Z(q, _, ct, At, Qt) {
                  var ie;
                  return ie = Tt.call(this, q) || this, ie.x1 = _, ie.y1 = ct, ie.x2 = At, ie.y2 = Qt, ie;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y.shader = function(_) {
                  return this.doc.ref({
                    ShadingType: 2,
                    ColorSpace: this._colorSpace,
                    Coords: [this.x1, this.y1, this.x2, this.y2],
                    Function: _,
                    Extend: [!0, !0]
                  });
                }, Y.opacityGradient = function() {
                  return new Z(this.doc, this.x1, this.y1, this.x2, this.y2);
                }, Z;
              }(we), _t = /* @__PURE__ */ function(Tt) {
                function Z(q, _, ct, At, Qt, ie, ge) {
                  var xe;
                  return xe = Tt.call(this, q) || this, xe.doc = q, xe.x1 = _, xe.y1 = ct, xe.r1 = At, xe.x2 = Qt, xe.y2 = ie, xe.r2 = ge, xe;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y.shader = function(_) {
                  return this.doc.ref({
                    ShadingType: 3,
                    ColorSpace: this._colorSpace,
                    Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],
                    Function: _,
                    Extend: [!0, !0]
                  });
                }, Y.opacityGradient = function() {
                  return new Z(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);
                }, Z;
              }(we), ae = {
                PDFGradient: we,
                PDFLinearGradient: rt,
                PDFRadialGradient: _t
              }, Et = ["DeviceCMYK", "DeviceRGB"], Zt = /* @__PURE__ */ function() {
                function Tt(Y, q, _, ct, At) {
                  this.doc = Y, this.bBox = q, this.xStep = _, this.yStep = ct, this.stream = At;
                }
                var Z = Tt.prototype;
                return Z.createPattern = function() {
                  var q = this.doc.ref();
                  q.end();
                  var _ = this.doc._ctm, ct = _[0], At = _[1], Qt = _[2], ie = _[3], ge = _[4], xe = _[5], Ae = 1, Fe = 0, Ne = 0, We = 1, Ye = 0, vr = 0, _e = [ct * Ae + Qt * Fe, At * Ae + ie * Fe, ct * Ne + Qt * We, At * Ne + ie * We, ct * Ye + Qt * vr + ge, At * Ye + ie * vr + xe], hr = this.doc.ref({
                    Type: "Pattern",
                    PatternType: 1,
                    // tiling
                    PaintType: 2,
                    // 1-colored, 2-uncolored
                    TilingType: 2,
                    // 2-no distortion
                    BBox: this.bBox,
                    XStep: this.xStep,
                    YStep: this.yStep,
                    Matrix: _e.map(function(Cr) {
                      return +Cr.toFixed(5);
                    }),
                    Resources: q
                  });
                  return hr.end(this.stream), hr;
                }, Z.embedPatternColorSpaces = function() {
                  var q = this;
                  Et.forEach(function(_) {
                    var ct = q.getPatternColorSpaceId(_);
                    if (!q.doc.page.colorSpaces[ct]) {
                      var At = q.doc.ref(["Pattern", _]);
                      At.end(), q.doc.page.colorSpaces[ct] = At;
                    }
                  });
                }, Z.getPatternColorSpaceId = function(q) {
                  return "CsP" + q;
                }, Z.embed = function() {
                  this.id || (this.doc._patternCount = this.doc._patternCount + 1, this.id = "P" + this.doc._patternCount, this.pattern = this.createPattern()), this.doc.page.patterns[this.id] || (this.doc.page.patterns[this.id] = this.pattern);
                }, Z.apply = function(q, _) {
                  this.embedPatternColorSpaces(), this.embed();
                  var ct = this.doc._normalizeColor(_);
                  if (!ct)
                    throw Error("invalid pattern color. (value: " + _ + ")");
                  var At = this.getPatternColorSpaceId(this.doc._getColorSpace(ct));
                  this.doc._setColorSpace(At, q);
                  var Qt = q ? "SCN" : "scn";
                  return this.doc.addContent(ct.join(" ") + " /" + this.id + " " + Qt);
                }, Tt;
              }(), fe = {
                PDFTilingPattern: Zt
              }, Ue = ae.PDFGradient, Be = ae.PDFLinearGradient, ke = ae.PDFRadialGradient, He = fe.PDFTilingPattern, nn = {
                initColor: function() {
                  return this.spotColors = {}, this._opacityRegistry = {}, this._opacityCount = 0, this._patternCount = 0, this._gradCount = 0;
                },
                _normalizeColor: function(Z) {
                  if (typeof Z == "string") {
                    if (Z.charAt(0) === "#") {
                      Z.length === 4 && (Z = Z.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, "#$1$1$2$2$3$3"));
                      var Y = parseInt(Z.slice(1), 16);
                      Z = [Y >> 16, Y >> 8 & 255, Y & 255];
                    } else if (er[Z])
                      Z = er[Z];
                    else if (this.spotColors[Z])
                      return this.spotColors[Z];
                  }
                  return Array.isArray(Z) ? (Z.length === 3 ? Z = Z.map(function(q) {
                    return q / 255;
                  }) : Z.length === 4 && (Z = Z.map(function(q) {
                    return q / 100;
                  })), Z) : null;
                },
                _setColor: function(Z, Y) {
                  return Z instanceof Ue ? (Z.apply(Y), !0) : Array.isArray(Z) && Z[0] instanceof He ? (Z[0].apply(Y, Z[1]), !0) : this._setColorCore(Z, Y);
                },
                _setColorCore: function(Z, Y) {
                  if (Z = this._normalizeColor(Z), !Z)
                    return !1;
                  var q = Y ? "SCN" : "scn", _ = this._getColorSpace(Z);
                  return this._setColorSpace(_, Y), Z instanceof O ? (this.page.colorSpaces[Z.id] = Z.ref, this.addContent("1 " + q)) : this.addContent(Z.join(" ") + " " + q), !0;
                },
                _setColorSpace: function(Z, Y) {
                  var q = Y ? "CS" : "cs";
                  return this.addContent("/" + Z + " " + q);
                },
                _getColorSpace: function(Z) {
                  return Z instanceof O ? Z.id : Z.length === 4 ? "DeviceCMYK" : "DeviceRGB";
                },
                fillColor: function(Z, Y) {
                  var q = this._setColor(Z, !1);
                  return q && this.fillOpacity(Y), this._fillColor = [Z, Y], this;
                },
                strokeColor: function(Z, Y) {
                  var q = this._setColor(Z, !0);
                  return q && this.strokeOpacity(Y), this;
                },
                opacity: function(Z) {
                  return this._doOpacity(Z, Z), this;
                },
                fillOpacity: function(Z) {
                  return this._doOpacity(Z, null), this;
                },
                strokeOpacity: function(Z) {
                  return this._doOpacity(null, Z), this;
                },
                _doOpacity: function(Z, Y) {
                  var q, _;
                  if (!(Z == null && Y == null)) {
                    Z != null && (Z = Math.max(0, Math.min(1, Z))), Y != null && (Y = Math.max(0, Math.min(1, Y)));
                    var ct = Z + "_" + Y;
                    if (this._opacityRegistry[ct]) {
                      var At = this._opacityRegistry[ct];
                      q = At[0], _ = At[1];
                    } else {
                      q = {
                        Type: "ExtGState"
                      }, Z != null && (q.ca = Z), Y != null && (q.CA = Y), q = this.ref(q), q.end();
                      var Qt = ++this._opacityCount;
                      _ = "Gs" + Qt, this._opacityRegistry[ct] = [q, _];
                    }
                    return this.page.ext_gstates[_] = q, this.addContent("/" + _ + " gs");
                  }
                },
                linearGradient: function(Z, Y, q, _) {
                  return new Be(this, Z, Y, q, _);
                },
                radialGradient: function(Z, Y, q, _, ct, At) {
                  return new ke(this, Z, Y, q, _, ct, At);
                },
                pattern: function(Z, Y, q, _) {
                  return new He(this, Z, Y, q, _);
                },
                addSpotColor: function(Z, Y, q, _, ct) {
                  var At = new O(this, Z, Y, q, _, ct);
                  return this.spotColors[Z] = At, this;
                }
              }, er = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                grey: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
              }, Te, Oe, Xe, tr, cn, wn;
              Te = Oe = Xe = tr = cn = wn = 0;
              var nr = {
                A: 7,
                a: 7,
                C: 6,
                c: 6,
                H: 1,
                h: 1,
                L: 2,
                l: 2,
                M: 2,
                m: 2,
                Q: 4,
                q: 4,
                S: 4,
                s: 4,
                T: 2,
                t: 2,
                V: 1,
                v: 1,
                Z: 0,
                z: 0
              }, an = function(Z) {
                for (var Y, q = [], _ = [], ct = "", At = !1, Qt = 0, ie = E(Z), ge; !(ge = ie()).done; ) {
                  var xe = ge.value;
                  if (nr[xe] != null)
                    Qt = nr[xe], Y && (ct.length > 0 && (_[_.length] = +ct), q[q.length] = {
                      cmd: Y,
                      args: _
                    }, _ = [], ct = "", At = !1), Y = xe;
                  else if ([" ", ","].includes(xe) || xe === "-" && ct.length > 0 && ct[ct.length - 1] !== "e" || xe === "." && At) {
                    if (ct.length === 0)
                      continue;
                    _.length === Qt ? (q[q.length] = {
                      cmd: Y,
                      args: _
                    }, _ = [+ct], Y === "M" && (Y = "L"), Y === "m" && (Y = "l")) : _[_.length] = +ct, At = xe === ".", ct = ["-", "."].includes(xe) ? xe : "";
                  } else
                    ct += xe, xe === "." && (At = !0);
                }
                return ct.length > 0 && (_.length === Qt ? (q[q.length] = {
                  cmd: Y,
                  args: _
                }, _ = [+ct], Y === "M" && (Y = "L"), Y === "m" && (Y = "l")) : _[_.length] = +ct), q[q.length] = {
                  cmd: Y,
                  args: _
                }, q;
              }, Wr = function(Z, Y) {
                Te = Oe = Xe = tr = cn = wn = 0;
                for (var q = 0; q < Z.length; q++) {
                  var _ = Z[q];
                  typeof $r[_.cmd] == "function" && $r[_.cmd](Y, _.args);
                }
              }, $r = {
                M: function(Z, Y) {
                  return Te = Y[0], Oe = Y[1], Xe = tr = null, cn = Te, wn = Oe, Z.moveTo(Te, Oe);
                },
                m: function(Z, Y) {
                  return Te += Y[0], Oe += Y[1], Xe = tr = null, cn = Te, wn = Oe, Z.moveTo(Te, Oe);
                },
                C: function(Z, Y) {
                  return Te = Y[4], Oe = Y[5], Xe = Y[2], tr = Y[3], Z.bezierCurveTo.apply(Z, Y);
                },
                c: function(Z, Y) {
                  return Z.bezierCurveTo(Y[0] + Te, Y[1] + Oe, Y[2] + Te, Y[3] + Oe, Y[4] + Te, Y[5] + Oe), Xe = Te + Y[2], tr = Oe + Y[3], Te += Y[4], Oe += Y[5];
                },
                S: function(Z, Y) {
                  return Xe === null && (Xe = Te, tr = Oe), Z.bezierCurveTo(Te - (Xe - Te), Oe - (tr - Oe), Y[0], Y[1], Y[2], Y[3]), Xe = Y[0], tr = Y[1], Te = Y[2], Oe = Y[3];
                },
                s: function(Z, Y) {
                  return Xe === null && (Xe = Te, tr = Oe), Z.bezierCurveTo(Te - (Xe - Te), Oe - (tr - Oe), Te + Y[0], Oe + Y[1], Te + Y[2], Oe + Y[3]), Xe = Te + Y[0], tr = Oe + Y[1], Te += Y[2], Oe += Y[3];
                },
                Q: function(Z, Y) {
                  return Xe = Y[0], tr = Y[1], Te = Y[2], Oe = Y[3], Z.quadraticCurveTo(Y[0], Y[1], Te, Oe);
                },
                q: function(Z, Y) {
                  return Z.quadraticCurveTo(Y[0] + Te, Y[1] + Oe, Y[2] + Te, Y[3] + Oe), Xe = Te + Y[0], tr = Oe + Y[1], Te += Y[2], Oe += Y[3];
                },
                T: function(Z, Y) {
                  return Xe === null ? (Xe = Te, tr = Oe) : (Xe = Te - (Xe - Te), tr = Oe - (tr - Oe)), Z.quadraticCurveTo(Xe, tr, Y[0], Y[1]), Xe = Te - (Xe - Te), tr = Oe - (tr - Oe), Te = Y[0], Oe = Y[1];
                },
                t: function(Z, Y) {
                  return Xe === null ? (Xe = Te, tr = Oe) : (Xe = Te - (Xe - Te), tr = Oe - (tr - Oe)), Z.quadraticCurveTo(Xe, tr, Te + Y[0], Oe + Y[1]), Te += Y[0], Oe += Y[1];
                },
                A: function(Z, Y) {
                  return Xr(Z, Te, Oe, Y), Te = Y[5], Oe = Y[6];
                },
                a: function(Z, Y) {
                  return Y[5] += Te, Y[6] += Oe, Xr(Z, Te, Oe, Y), Te = Y[5], Oe = Y[6];
                },
                L: function(Z, Y) {
                  return Te = Y[0], Oe = Y[1], Xe = tr = null, Z.lineTo(Te, Oe);
                },
                l: function(Z, Y) {
                  return Te += Y[0], Oe += Y[1], Xe = tr = null, Z.lineTo(Te, Oe);
                },
                H: function(Z, Y) {
                  return Te = Y[0], Xe = tr = null, Z.lineTo(Te, Oe);
                },
                h: function(Z, Y) {
                  return Te += Y[0], Xe = tr = null, Z.lineTo(Te, Oe);
                },
                V: function(Z, Y) {
                  return Oe = Y[0], Xe = tr = null, Z.lineTo(Te, Oe);
                },
                v: function(Z, Y) {
                  return Oe += Y[0], Xe = tr = null, Z.lineTo(Te, Oe);
                },
                Z: function(Z) {
                  return Z.closePath(), Te = cn, Oe = wn;
                },
                z: function(Z) {
                  return Z.closePath(), Te = cn, Oe = wn;
                }
              }, Xr = function(Z, Y, q, _) {
                for (var ct = _[0], At = _[1], Qt = _[2], ie = _[3], ge = _[4], xe = _[5], Ae = _[6], Fe = Jn(xe, Ae, ct, At, ie, ge, Qt, Y, q), Ne = E(Fe), We; !(We = Ne()).done; ) {
                  var Ye = We.value, vr = fa.apply(void 0, Ye);
                  Z.bezierCurveTo.apply(Z, vr);
                }
              }, Jn = function(Z, Y, q, _, ct, At, Qt, ie, ge) {
                var xe = Qt * (Math.PI / 180), Ae = Math.sin(xe), Fe = Math.cos(xe);
                q = Math.abs(q), _ = Math.abs(_), Xe = Fe * (ie - Z) * 0.5 + Ae * (ge - Y) * 0.5, tr = Fe * (ge - Y) * 0.5 - Ae * (ie - Z) * 0.5;
                var Ne = Xe * Xe / (q * q) + tr * tr / (_ * _);
                Ne > 1 && (Ne = Math.sqrt(Ne), q *= Ne, _ *= Ne);
                var We = Fe / q, Ye = Ae / q, vr = -Ae / _, _e = Fe / _, hr = We * ie + Ye * ge, Cr = vr * ie + _e * ge, fr = We * Z + Ye * Y, je = vr * Z + _e * Y, vn = (fr - hr) * (fr - hr) + (je - Cr) * (je - Cr), Dr = 1 / vn - 0.25;
                Dr < 0 && (Dr = 0);
                var Br = Math.sqrt(Dr);
                At === ct && (Br = -Br);
                var pn = 0.5 * (hr + fr) - Br * (je - Cr), Fn = 0.5 * (Cr + je) + Br * (fr - hr), gn = Math.atan2(Cr - Fn, hr - pn), Vn = Math.atan2(je - Fn, fr - pn), Cn = Vn - gn;
                Cn < 0 && At === 1 ? Cn += 2 * Math.PI : Cn > 0 && At === 0 && (Cn -= 2 * Math.PI);
                for (var _n = Math.ceil(Math.abs(Cn / (Math.PI * 0.5 + 1e-3))), Aa = [], ma = 0; ma < _n; ma++) {
                  var Ei = gn + ma * Cn / _n, va = gn + (ma + 1) * Cn / _n;
                  Aa[ma] = [pn, Fn, Ei, va, q, _, Ae, Fe];
                }
                return Aa;
              }, fa = function(Z, Y, q, _, ct, At, Qt, ie) {
                var ge = ie * ct, xe = -Qt * At, Ae = Qt * ct, Fe = ie * At, Ne = 0.5 * (_ - q), We = 8 / 3 * Math.sin(Ne * 0.5) * Math.sin(Ne * 0.5) / Math.sin(Ne), Ye = Z + Math.cos(q) - We * Math.sin(q), vr = Y + Math.sin(q) + We * Math.cos(q), _e = Z + Math.cos(_), hr = Y + Math.sin(_), Cr = _e + We * Math.sin(_), fr = hr - We * Math.cos(_);
                return [ge * Ye + xe * vr, Ae * Ye + Fe * vr, ge * Cr + xe * fr, Ae * Cr + Fe * fr, ge * _e + xe * hr, Ae * _e + Fe * hr];
              }, hn = /* @__PURE__ */ function() {
                function Tt() {
                }
                return Tt.apply = function(Y, q) {
                  var _ = an(q);
                  Wr(_, Y);
                }, Tt;
              }(), gr = K.number, rn = 4 * ((Math.sqrt(2) - 1) / 3), Qn = {
                initVector: function() {
                  return this._ctm = [1, 0, 0, 1, 0, 0], this._ctmStack = [];
                },
                save: function() {
                  return this._ctmStack.push(this._ctm.slice()), this.addContent("q");
                },
                restore: function() {
                  return this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0], this.addContent("Q");
                },
                closePath: function() {
                  return this.addContent("h");
                },
                lineWidth: function(Z) {
                  return this.addContent(gr(Z) + " w");
                },
                _CAP_STYLES: {
                  BUTT: 0,
                  ROUND: 1,
                  SQUARE: 2
                },
                lineCap: function(Z) {
                  return typeof Z == "string" && (Z = this._CAP_STYLES[Z.toUpperCase()]), this.addContent(Z + " J");
                },
                _JOIN_STYLES: {
                  MITER: 0,
                  ROUND: 1,
                  BEVEL: 2
                },
                lineJoin: function(Z) {
                  return typeof Z == "string" && (Z = this._JOIN_STYLES[Z.toUpperCase()]), this.addContent(Z + " j");
                },
                miterLimit: function(Z) {
                  return this.addContent(gr(Z) + " M");
                },
                dash: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, q = Z;
                  Array.isArray(Z) || (Z = [Z, Y.space || Z]);
                  var _ = Z.every(function(ct) {
                    return Number.isFinite(ct) && ct > 0;
                  });
                  if (!_)
                    throw new Error("dash(" + JSON.stringify(q) + ", " + JSON.stringify(Y) + ") invalid, lengths must be numeric and greater than zero");
                  return Z = Z.map(gr).join(" "), this.addContent("[" + Z + "] " + gr(Y.phase || 0) + " d");
                },
                undash: function() {
                  return this.addContent("[] 0 d");
                },
                moveTo: function(Z, Y) {
                  return this.addContent(gr(Z) + " " + gr(Y) + " m");
                },
                lineTo: function(Z, Y) {
                  return this.addContent(gr(Z) + " " + gr(Y) + " l");
                },
                bezierCurveTo: function(Z, Y, q, _, ct, At) {
                  return this.addContent(gr(Z) + " " + gr(Y) + " " + gr(q) + " " + gr(_) + " " + gr(ct) + " " + gr(At) + " c");
                },
                quadraticCurveTo: function(Z, Y, q, _) {
                  return this.addContent(gr(Z) + " " + gr(Y) + " " + gr(q) + " " + gr(_) + " v");
                },
                rect: function(Z, Y, q, _) {
                  return this.addContent(gr(Z) + " " + gr(Y) + " " + gr(q) + " " + gr(_) + " re");
                },
                roundedRect: function(Z, Y, q, _, ct) {
                  ct == null && (ct = 0), ct = Math.min(ct, 0.5 * q, 0.5 * _);
                  var At = ct * (1 - rn);
                  return this.moveTo(Z + ct, Y), this.lineTo(Z + q - ct, Y), this.bezierCurveTo(Z + q - At, Y, Z + q, Y + At, Z + q, Y + ct), this.lineTo(Z + q, Y + _ - ct), this.bezierCurveTo(Z + q, Y + _ - At, Z + q - At, Y + _, Z + q - ct, Y + _), this.lineTo(Z + ct, Y + _), this.bezierCurveTo(Z + At, Y + _, Z, Y + _ - At, Z, Y + _ - ct), this.lineTo(Z, Y + ct), this.bezierCurveTo(Z, Y + At, Z + At, Y, Z + ct, Y), this.closePath();
                },
                ellipse: function(Z, Y, q, _) {
                  _ == null && (_ = q), Z -= q, Y -= _;
                  var ct = q * rn, At = _ * rn, Qt = Z + q * 2, ie = Y + _ * 2, ge = Z + q, xe = Y + _;
                  return this.moveTo(Z, xe), this.bezierCurveTo(Z, xe - At, ge - ct, Y, ge, Y), this.bezierCurveTo(ge + ct, Y, Qt, xe - At, Qt, xe), this.bezierCurveTo(Qt, xe + At, ge + ct, ie, ge, ie), this.bezierCurveTo(ge - ct, ie, Z, xe + At, Z, xe), this.closePath();
                },
                circle: function(Z, Y, q) {
                  return this.ellipse(Z, Y, q);
                },
                arc: function(Z, Y, q, _, ct, At) {
                  At == null && (At = !1);
                  var Qt = 2 * Math.PI, ie = 0.5 * Math.PI, ge = ct - _;
                  if (Math.abs(ge) > Qt)
                    ge = Qt;
                  else if (ge !== 0 && At !== ge < 0) {
                    var xe = At ? -1 : 1;
                    ge = xe * Qt + ge;
                  }
                  var Ae = Math.ceil(Math.abs(ge) / ie), Fe = ge / Ae, Ne = Fe / ie * rn * q, We = _, Ye = -Math.sin(We) * Ne, vr = Math.cos(We) * Ne, _e = Z + Math.cos(We) * q, hr = Y + Math.sin(We) * q;
                  this.moveTo(_e, hr);
                  for (var Cr = 0; Cr < Ae; Cr++) {
                    var fr = _e + Ye, je = hr + vr;
                    We += Fe, _e = Z + Math.cos(We) * q, hr = Y + Math.sin(We) * q, Ye = -Math.sin(We) * Ne, vr = Math.cos(We) * Ne;
                    var vn = _e - Ye, Dr = hr - vr;
                    this.bezierCurveTo(fr, je, vn, Dr, _e, hr);
                  }
                  return this;
                },
                polygon: function() {
                  for (var Z = arguments.length, Y = new Array(Z), q = 0; q < Z; q++)
                    Y[q] = arguments[q];
                  this.moveTo.apply(this, Y.shift() || []);
                  for (var _ = 0, ct = Y; _ < ct.length; _++) {
                    var At = ct[_];
                    this.lineTo.apply(this, At || []);
                  }
                  return this.closePath();
                },
                path: function(Z) {
                  return hn.apply(this, Z), this;
                },
                _windingRule: function(Z) {
                  return /even-?odd/.test(Z) ? "*" : "";
                },
                fill: function(Z, Y) {
                  return /(even-?odd)|(non-?zero)/.test(Z) && (Y = Z, Z = null), Z && this.fillColor(Z), this.addContent("f" + this._windingRule(Y));
                },
                stroke: function(Z) {
                  return Z && this.strokeColor(Z), this.addContent("S");
                },
                fillAndStroke: function(Z, Y, q) {
                  Y == null && (Y = Z);
                  var _ = /(even-?odd)|(non-?zero)/;
                  return _.test(Z) && (q = Z, Z = null), _.test(Y) && (q = Y, Y = Z), Z && (this.fillColor(Z), this.strokeColor(Y)), this.addContent("B" + this._windingRule(q));
                },
                clip: function(Z) {
                  return this.addContent("W" + this._windingRule(Z) + " n");
                },
                transform: function(Z, Y, q, _, ct, At) {
                  if (Z === 1 && Y === 0 && q === 0 && _ === 1 && ct === 0 && At === 0)
                    return this;
                  var Qt = this._ctm, ie = Qt[0], ge = Qt[1], xe = Qt[2], Ae = Qt[3], Fe = Qt[4], Ne = Qt[5];
                  Qt[0] = ie * Z + xe * Y, Qt[1] = ge * Z + Ae * Y, Qt[2] = ie * q + xe * _, Qt[3] = ge * q + Ae * _, Qt[4] = ie * ct + xe * At + Fe, Qt[5] = ge * ct + Ae * At + Ne;
                  var We = [Z, Y, q, _, ct, At].map(function(Ye) {
                    return gr(Ye);
                  }).join(" ");
                  return this.addContent(We + " cm");
                },
                translate: function(Z, Y) {
                  return this.transform(1, 0, 0, 1, Z, Y);
                },
                rotate: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, q, _ = Z * Math.PI / 180, ct = Math.cos(_), At = Math.sin(_), Qt = q = 0;
                  if (Y.origin != null) {
                    var ie = Y.origin;
                    Qt = ie[0], q = ie[1];
                    var ge = Qt * ct - q * At, xe = Qt * At + q * ct;
                    Qt -= ge, q -= xe;
                  }
                  return this.transform(ct, At, -At, ct, Qt, q);
                },
                scale: function(Z, Y) {
                  var q = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _;
                  Y == null && (Y = Z), typeof Y == "object" && (q = Y, Y = Z);
                  var ct = _ = 0;
                  if (q.origin != null) {
                    var At = q.origin;
                    ct = At[0], _ = At[1], ct -= Z * ct, _ -= Y * _;
                  }
                  return this.transform(Z, 0, 0, Y, ct, _);
                }
              }, jn = {
                402: 131,
                8211: 150,
                8212: 151,
                8216: 145,
                8217: 146,
                8218: 130,
                8220: 147,
                8221: 148,
                8222: 132,
                8224: 134,
                8225: 135,
                8226: 149,
                8230: 133,
                8364: 128,
                8240: 137,
                8249: 139,
                8250: 155,
                710: 136,
                8482: 153,
                338: 140,
                339: 156,
                732: 152,
                352: 138,
                353: 154,
                376: 159,
                381: 142,
                382: 158
              }, $n = `.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
  
space         exclam         quotedbl       numbersign
dollar        percent        ampersand      quotesingle
parenleft     parenright     asterisk       plus
comma         hyphen         period         slash
zero          one            two            three
four          five           six            seven
eight         nine           colon          semicolon
less          equal          greater        question
  
at            A              B              C
D             E              F              G
H             I              J              K
L             M              N              O
P             Q              R              S
T             U              V              W
X             Y              Z              bracketleft
backslash     bracketright   asciicircum    underscore
  
grave         a              b              c
d             e              f              g
h             i              j              k
l             m              n              o
p             q              r              s
t             u              v              w
x             y              z              braceleft
bar           braceright     asciitilde     .notdef
  
Euro          .notdef        quotesinglbase florin
quotedblbase  ellipsis       dagger         daggerdbl
circumflex    perthousand    Scaron         guilsinglleft
OE            .notdef        Zcaron         .notdef
.notdef       quoteleft      quoteright     quotedblleft
quotedblright bullet         endash         emdash
tilde         trademark      scaron         guilsinglright
oe            .notdef        zcaron         ydieresis
  
space         exclamdown     cent           sterling
currency      yen            brokenbar      section
dieresis      copyright      ordfeminine    guillemotleft
logicalnot    hyphen         registered     macron
degree        plusminus      twosuperior    threesuperior
acute         mu             paragraph      periodcentered
cedilla       onesuperior    ordmasculine   guillemotright
onequarter    onehalf        threequarters  questiondown
  
Agrave        Aacute         Acircumflex    Atilde
Adieresis     Aring          AE             Ccedilla
Egrave        Eacute         Ecircumflex    Edieresis
Igrave        Iacute         Icircumflex    Idieresis
Eth           Ntilde         Ograve         Oacute
Ocircumflex   Otilde         Odieresis      multiply
Oslash        Ugrave         Uacute         Ucircumflex
Udieresis     Yacute         Thorn          germandbls
  
agrave        aacute         acircumflex    atilde
adieresis     aring          ae             ccedilla
egrave        eacute         ecircumflex    edieresis
igrave        iacute         icircumflex    idieresis
eth           ntilde         ograve         oacute
ocircumflex   otilde         odieresis      divide
oslash        ugrave         uacute         ucircumflex
udieresis     yacute         thorn          ydieresis`.split(/\s+/), da = /* @__PURE__ */ function() {
                function Tt(Y) {
                  this.contents = Y, this.attributes = {}, this.glyphWidths = {}, this.boundingBoxes = {}, this.kernPairs = {}, this.parse(), this.charWidths = new Array(256);
                  for (var q = 0; q <= 255; q++)
                    this.charWidths[q] = this.glyphWidths[$n[q]];
                  this.bbox = this.attributes.FontBBox.split(/\s+/).map(function(_) {
                    return +_;
                  }), this.ascender = +(this.attributes.Ascender || 0), this.descender = +(this.attributes.Descender || 0), this.xHeight = +(this.attributes.XHeight || 0), this.capHeight = +(this.attributes.CapHeight || 0), this.lineGap = this.bbox[3] - this.bbox[1] - (this.ascender - this.descender);
                }
                Tt.open = function(q) {
                  return new Tt(F.readFileSync(q, "utf8"));
                };
                var Z = Tt.prototype;
                return Z.parse = function() {
                  for (var q = "", _ = E(this.contents.split(`
`)), ct; !(ct = _()).done; ) {
                    var At = ct.value, Qt, ie;
                    if (Qt = At.match(/^Start(\w+)/)) {
                      q = Qt[1];
                      continue;
                    } else if (Qt = At.match(/^End(\w+)/)) {
                      q = "";
                      continue;
                    }
                    switch (q) {
                      case "FontMetrics":
                        Qt = At.match(/(^\w+)\s+(.*)/);
                        var ge = Qt[1], xe = Qt[2];
                        (ie = this.attributes[ge]) ? (Array.isArray(ie) || (ie = this.attributes[ge] = [ie]), ie.push(xe)) : this.attributes[ge] = xe;
                        break;
                      case "CharMetrics":
                        if (!/^CH?\s/.test(At))
                          continue;
                        var Ae = At.match(/\bN\s+(\.?\w+)\s*;/)[1];
                        this.glyphWidths[Ae] = +At.match(/\bWX\s+(\d+)\s*;/)[1];
                        break;
                      case "KernPairs":
                        Qt = At.match(/^KPX\s+(\.?\w+)\s+(\.?\w+)\s+(-?\d+)/), Qt && (this.kernPairs[Qt[1] + "\0" + Qt[2]] = parseInt(Qt[3]));
                        break;
                    }
                  }
                }, Z.encodeText = function(q) {
                  for (var _ = [], ct = 0, At = q.length; ct < At; ct++) {
                    var Qt = q.charCodeAt(ct);
                    Qt = jn[Qt] || Qt, _.push(Qt.toString(16));
                  }
                  return _;
                }, Z.glyphsForString = function(q) {
                  for (var _ = [], ct = 0, At = q.length; ct < At; ct++) {
                    var Qt = q.charCodeAt(ct);
                    _.push(this.characterToGlyph(Qt));
                  }
                  return _;
                }, Z.characterToGlyph = function(q) {
                  return $n[jn[q] || q] || ".notdef";
                }, Z.widthOfGlyph = function(q) {
                  return this.glyphWidths[q] || 0;
                }, Z.getKernPair = function(q, _) {
                  return this.kernPairs[q + "\0" + _] || 0;
                }, Z.advancesForGlyphs = function(q) {
                  for (var _ = [], ct = 0; ct < q.length; ct++) {
                    var At = q[ct], Qt = q[ct + 1];
                    _.push(this.widthOfGlyph(At) + this.getKernPair(At, Qt));
                  }
                  return _;
                }, Tt;
              }(), ga = /* @__PURE__ */ function() {
                function Tt() {
                }
                var Z = Tt.prototype;
                return Z.encode = function() {
                  throw new Error("Must be implemented by subclasses");
                }, Z.widthOfString = function() {
                  throw new Error("Must be implemented by subclasses");
                }, Z.ref = function() {
                  return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();
                }, Z.finalize = function() {
                  if (!(this.embedded || this.dictionary == null))
                    return this.embed(), this.embedded = !0;
                }, Z.embed = function() {
                  throw new Error("Must be implemented by subclasses");
                }, Z.lineHeight = function(q, _) {
                  _ == null && (_ = !1);
                  var ct = _ ? this.lineGap : 0;
                  return (this.ascender + ct - this.descender) / 1e3 * q;
                }, Tt;
              }(), qn = {
                Courier: function() {
                  return F.readFileSync(i + "/data/Courier.afm", "utf8");
                },
                "Courier-Bold": function() {
                  return F.readFileSync(i + "/data/Courier-Bold.afm", "utf8");
                },
                "Courier-Oblique": function() {
                  return F.readFileSync(i + "/data/Courier-Oblique.afm", "utf8");
                },
                "Courier-BoldOblique": function() {
                  return F.readFileSync(i + "/data/Courier-BoldOblique.afm", "utf8");
                },
                Helvetica: function() {
                  return F.readFileSync(i + "/data/Helvetica.afm", "utf8");
                },
                "Helvetica-Bold": function() {
                  return F.readFileSync(i + "/data/Helvetica-Bold.afm", "utf8");
                },
                "Helvetica-Oblique": function() {
                  return F.readFileSync(i + "/data/Helvetica-Oblique.afm", "utf8");
                },
                "Helvetica-BoldOblique": function() {
                  return F.readFileSync(i + "/data/Helvetica-BoldOblique.afm", "utf8");
                },
                "Times-Roman": function() {
                  return F.readFileSync(i + "/data/Times-Roman.afm", "utf8");
                },
                "Times-Bold": function() {
                  return F.readFileSync(i + "/data/Times-Bold.afm", "utf8");
                },
                "Times-Italic": function() {
                  return F.readFileSync(i + "/data/Times-Italic.afm", "utf8");
                },
                "Times-BoldItalic": function() {
                  return F.readFileSync(i + "/data/Times-BoldItalic.afm", "utf8");
                },
                Symbol: function() {
                  return F.readFileSync(i + "/data/Symbol.afm", "utf8");
                },
                ZapfDingbats: function() {
                  return F.readFileSync(i + "/data/ZapfDingbats.afm", "utf8");
                }
              }, la = /* @__PURE__ */ function(Tt) {
                function Z(q, _, ct) {
                  var At;
                  At = Tt.call(this) || this, At.document = q, At.name = _, At.id = ct, At.font = new da(qn[At.name]());
                  var Qt = At.font;
                  return At.ascender = Qt.ascender, At.descender = Qt.descender, At.bbox = Qt.bbox, At.lineGap = Qt.lineGap, At.xHeight = Qt.xHeight, At.capHeight = Qt.capHeight, At;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y.embed = function() {
                  return this.dictionary.data = {
                    Type: "Font",
                    BaseFont: this.name,
                    Subtype: "Type1",
                    Encoding: "WinAnsiEncoding"
                  }, this.dictionary.end();
                }, Y.encode = function(_) {
                  for (var ct = this.font.encodeText(_), At = this.font.glyphsForString("" + _), Qt = this.font.advancesForGlyphs(At), ie = [], ge = 0; ge < At.length; ge++) {
                    var xe = At[ge];
                    ie.push({
                      xAdvance: Qt[ge],
                      yAdvance: 0,
                      xOffset: 0,
                      yOffset: 0,
                      advanceWidth: this.font.widthOfGlyph(xe)
                    });
                  }
                  return [ct, ie];
                }, Y.widthOfString = function(_, ct) {
                  for (var At = this.font.glyphsForString("" + _), Qt = this.font.advancesForGlyphs(At), ie = 0, ge = E(Qt), xe; !(xe = ge()).done; ) {
                    var Ae = xe.value;
                    ie += Ae;
                  }
                  var Fe = ct / 1e3;
                  return ie * Fe;
                }, Z.isStandardFont = function(_) {
                  return _ in qn;
                }, Z;
              }(ga), qt = function(Z) {
                return ("0000" + Z.toString(16)).slice(-4);
              }, Bt = /* @__PURE__ */ function(Tt) {
                function Z(q, _, ct) {
                  var At;
                  return At = Tt.call(this) || this, At.document = q, At.font = _, At.id = ct, At.subset = At.font.createSubset(), At.unicode = [[0]], At.widths = [At.font.getGlyph(0).advanceWidth], At.name = At.font.postscriptName, At.scale = 1e3 / At.font.unitsPerEm, At.ascender = At.font.ascent * At.scale, At.descender = At.font.descent * At.scale, At.xHeight = At.font.xHeight * At.scale, At.capHeight = At.font.capHeight * At.scale, At.lineGap = At.font.lineGap * At.scale, At.bbox = At.font.bbox, q.options.fontLayoutCache !== !1 && (At.layoutCache = /* @__PURE__ */ Object.create(null)), At;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y.layoutRun = function(_, ct) {
                  for (var At = this.font.layout(_, ct), Qt = 0; Qt < At.positions.length; Qt++) {
                    var ie = At.positions[Qt];
                    for (var ge in ie)
                      ie[ge] *= this.scale;
                    ie.advanceWidth = At.glyphs[Qt].advanceWidth * this.scale;
                  }
                  return At;
                }, Y.layoutCached = function(_) {
                  if (!this.layoutCache)
                    return this.layoutRun(_);
                  var ct;
                  if (ct = this.layoutCache[_])
                    return ct;
                  var At = this.layoutRun(_);
                  return this.layoutCache[_] = At, At;
                }, Y.layout = function(_, ct, At) {
                  if (ct)
                    return this.layoutRun(_, ct);
                  for (var Qt = At ? null : [], ie = At ? null : [], ge = 0, xe = 0, Ae = 0; Ae <= _.length; ) {
                    var Fe;
                    if (Ae === _.length && xe < Ae || (Fe = _.charAt(Ae), [" ", "	"].includes(Fe))) {
                      var Ne = this.layoutCached(_.slice(xe, ++Ae));
                      At || (Qt = Qt.concat(Ne.glyphs), ie = ie.concat(Ne.positions)), ge += Ne.advanceWidth, xe = Ae;
                    } else
                      Ae++;
                  }
                  return {
                    glyphs: Qt,
                    positions: ie,
                    advanceWidth: ge
                  };
                }, Y.encode = function(_, ct) {
                  for (var At = this.layout(_, ct), Qt = At.glyphs, ie = At.positions, ge = [], xe = 0; xe < Qt.length; xe++) {
                    var Ae = Qt[xe], Fe = this.subset.includeGlyph(Ae.id);
                    ge.push(("0000" + Fe.toString(16)).slice(-4)), this.widths[Fe] == null && (this.widths[Fe] = Ae.advanceWidth * this.scale), this.unicode[Fe] == null && (this.unicode[Fe] = Ae.codePoints);
                  }
                  return [ge, ie];
                }, Y.widthOfString = function(_, ct, At) {
                  var Qt = this.layout(_, At, !0).advanceWidth, ie = ct / 1e3;
                  return Qt * ie;
                }, Y.embed = function() {
                  var _ = this, ct = this.subset.cff != null, At = this.document.ref();
                  ct && (At.data.Subtype = "CIDFontType0C"), this.subset.encodeStream().on("data", function(_e) {
                    return At.write(_e);
                  }).on("end", function() {
                    return At.end();
                  });
                  var Qt = ((this.font["OS/2"] != null ? this.font["OS/2"].sFamilyClass : void 0) || 0) >> 8, ie = 0;
                  this.font.post.isFixedPitch && (ie |= 1), 1 <= Qt && Qt <= 7 && (ie |= 2), ie |= 4, Qt === 10 && (ie |= 8), this.font.head.macStyle.italic && (ie |= 64);
                  var ge = [1, 2, 3, 4, 5, 6].map(function(_e) {
                    return String.fromCharCode((_.id.charCodeAt(_e) || 73) + 17);
                  }).join(""), xe = ge + "+" + this.font.postscriptName.replaceAll(" ", "_"), Ae = this.font.bbox, Fe = this.document.ref({
                    Type: "FontDescriptor",
                    FontName: xe,
                    Flags: ie,
                    FontBBox: [Ae.minX * this.scale, Ae.minY * this.scale, Ae.maxX * this.scale, Ae.maxY * this.scale],
                    ItalicAngle: this.font.italicAngle,
                    Ascent: this.ascender,
                    Descent: this.descender,
                    CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,
                    XHeight: (this.font.xHeight || 0) * this.scale,
                    StemV: 0
                  });
                  if (ct ? Fe.data.FontFile3 = At : Fe.data.FontFile2 = At, this.document.subset && this.document.subset === 1) {
                    var Ne = r.from("FFFFFFFFC0", "hex"), We = this.document.ref();
                    We.write(Ne), We.end(), Fe.data.CIDSet = We;
                  }
                  Fe.end();
                  var Ye = {
                    Type: "Font",
                    Subtype: "CIDFontType0",
                    BaseFont: xe,
                    CIDSystemInfo: {
                      Registry: new String("Adobe"),
                      Ordering: new String("Identity"),
                      Supplement: 0
                    },
                    FontDescriptor: Fe,
                    W: [0, this.widths]
                  };
                  ct || (Ye.Subtype = "CIDFontType2", Ye.CIDToGIDMap = "Identity");
                  var vr = this.document.ref(Ye);
                  return vr.end(), this.dictionary.data = {
                    Type: "Font",
                    Subtype: "Type0",
                    BaseFont: xe,
                    Encoding: "Identity-H",
                    DescendantFonts: [vr],
                    ToUnicode: this.toUnicodeCmap()
                  }, this.dictionary.end();
                }, Y.toUnicodeCmap = function() {
                  for (var _ = this.document.ref(), ct = [], At = E(this.unicode), Qt; !(Qt = At()).done; ) {
                    for (var ie = Qt.value, ge = [], xe = E(ie), Ae; !(Ae = xe()).done; ) {
                      var Fe = Ae.value;
                      Fe > 65535 && (Fe -= 65536, ge.push(qt(Fe >>> 10 & 1023 | 55296)), Fe = 56320 | Fe & 1023), ge.push(qt(Fe));
                    }
                    ct.push("<" + ge.join(" ") + ">");
                  }
                  for (var Ne = 256, We = Math.ceil(ct.length / Ne), Ye = [], vr = 0; vr < We; vr++) {
                    var _e = vr * Ne, hr = Math.min((vr + 1) * Ne, ct.length);
                    Ye.push("<" + qt(_e) + "> <" + qt(hr - 1) + "> [" + ct.slice(_e, hr).join(" ") + "]");
                  }
                  return _.end(`/CIDInit /ProcSet findresource begin
12 dict begin
begincmap
/CIDSystemInfo <<
  /Registry (Adobe)
  /Ordering (UCS)
  /Supplement 0
>> def
/CMapName /Adobe-Identity-UCS def
/CMapType 2 def
1 begincodespacerange
<0000><ffff>
endcodespacerange
1 beginbfrange
` + Ye.join(`
`) + `
endbfrange
endcmap
CMapName currentdict /CMap defineresource pop
end
end`), _;
                }, Z;
              }(ga), ne = /* @__PURE__ */ function() {
                function Tt() {
                }
                return Tt.open = function(Y, q, _, ct) {
                  var At;
                  if (typeof q == "string") {
                    if (la.isStandardFont(q))
                      return new la(Y, q, ct);
                    q = F.readFileSync(q);
                  }
                  if (r.isBuffer(q) ? At = u.default.create(q, _) : q instanceof Uint8Array ? At = u.default.create(r.from(q), _) : q instanceof ArrayBuffer && (At = u.default.create(r.from(new Uint8Array(q)), _)), At == null)
                    throw new Error("Not a supported font format or standard PDF font.");
                  return new Bt(Y, At, ct);
                }, Tt;
              }(), Mt = function(Z, Y) {
                var q, _, ct, At;
                return !(((q = Z.font._tables) == null || (q = q.head) == null ? void 0 : q.checkSumAdjustment) !== ((_ = Y.font._tables) == null || (_ = _.head) == null ? void 0 : _.checkSumAdjustment) || JSON.stringify((ct = Z.font._tables) == null || (ct = ct.name) == null ? void 0 : ct.records) !== JSON.stringify((At = Y.font._tables) == null || (At = At.name) == null ? void 0 : At.records));
              }, zt = {
                initFonts: function() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Helvetica";
                  this._fontFamilies = {}, this._fontCount = 0, this._fontSize = 12, this._font = null, this._registeredFonts = {}, Z && this.font(Z);
                },
                font: function(Z, Y, q) {
                  var _, ct;
                  if (typeof Y == "number" && (q = Y, Y = null), typeof Z == "string" && this._registeredFonts[Z]) {
                    _ = Z;
                    var At = this._registeredFonts[Z];
                    Z = At.src, Y = At.family;
                  } else
                    _ = Y || Z, typeof _ != "string" && (_ = null);
                  if (q != null && this.fontSize(q), ct = this._fontFamilies[_])
                    return this._font = ct, this;
                  var Qt = "F" + ++this._fontCount;
                  return this._font = ne.open(this, Z, Y, Qt), (ct = this._fontFamilies[this._font.name]) && Mt(this._font, ct) ? (this._font = ct, this) : (_ && (this._fontFamilies[_] = this._font), this._font.name && (this._fontFamilies[this._font.name] = this._font), this);
                },
                fontSize: function(Z) {
                  return this._fontSize = Z, this;
                },
                currentLineHeight: function(Z) {
                  return Z == null && (Z = !1), this._font.lineHeight(this._fontSize, Z);
                },
                registerFont: function(Z, Y, q) {
                  return this._registeredFonts[Z] = {
                    src: Y,
                    family: q
                  }, this;
                }
              }, Ut = "Â­", Vt = "-", ee = /* @__PURE__ */ function(Tt) {
                function Z(q, _) {
                  var ct;
                  return ct = Tt.call(this) || this, ct.document = q, ct.horizontalScaling = _.horizontalScaling || 100, ct.indent = (_.indent || 0) * ct.horizontalScaling / 100, ct.characterSpacing = (_.characterSpacing || 0) * ct.horizontalScaling / 100, ct.wordSpacing = (_.wordSpacing === 0) * ct.horizontalScaling / 100, ct.columns = _.columns || 1, ct.columnGap = (_.columnGap != null ? _.columnGap : 18) * ct.horizontalScaling / 100, ct.lineWidth = (_.width * ct.horizontalScaling / 100 - ct.columnGap * (ct.columns - 1)) / ct.columns, ct.spaceLeft = ct.lineWidth, ct.startX = ct.document.x, ct.startY = ct.document.y, ct.column = 1, ct.ellipsis = _.ellipsis, ct.continuedX = 0, ct.features = _.features, _.height != null ? (ct.height = _.height, ct.maxY = ct.startY + _.height) : ct.maxY = ct.document.page.maxY(), ct.on("firstLine", function(At) {
                    var Qt = ct.continuedX || ct.indent;
                    if (ct.document.x += Qt, ct.lineWidth -= Qt, !At.indentAllLines)
                      return ct.once("line", function() {
                        if (ct.document.x -= Qt, ct.lineWidth += Qt, At.continued && !ct.continuedX && (ct.continuedX = ct.indent), !At.continued)
                          return ct.continuedX = 0;
                      });
                  }), ct.on("lastLine", function(At) {
                    var Qt = At.align;
                    return Qt === "justify" && (At.align = "left"), ct.lastLine = !0, ct.once("line", function() {
                      return ct.document.y += At.paragraphGap || 0, At.align = Qt, ct.lastLine = !1;
                    });
                  }), ct;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y.wordWidth = function(_) {
                  return this.document.widthOfString(_, this) + this.characterSpacing + this.wordSpacing;
                }, Y.canFit = function(_, ct) {
                  return _[_.length - 1] != Ut ? ct <= this.spaceLeft : ct + this.wordWidth(Vt) <= this.spaceLeft;
                }, Y.eachWord = function(_, ct) {
                  for (var At, Qt = new c.default(_), ie = null, ge = /* @__PURE__ */ Object.create(null); At = Qt.nextBreak(); ) {
                    var xe, Ae = _.slice((ie != null ? ie.position : void 0) || 0, At.position), Fe = ge[Ae] != null ? ge[Ae] : ge[Ae] = this.wordWidth(Ae);
                    if (Fe > this.lineWidth + this.continuedX)
                      for (var Ne = ie, We = {}; Ae.length; ) {
                        var Ye, vr;
                        Fe > this.spaceLeft ? (Ye = Math.ceil(this.spaceLeft / (Fe / Ae.length)), Fe = this.wordWidth(Ae.slice(0, Ye)), vr = Fe <= this.spaceLeft && Ye < Ae.length) : Ye = Ae.length;
                        for (var _e = Fe > this.spaceLeft && Ye > 0; _e || vr; )
                          _e ? (Fe = this.wordWidth(Ae.slice(0, --Ye)), _e = Fe > this.spaceLeft && Ye > 0) : (Fe = this.wordWidth(Ae.slice(0, ++Ye)), _e = Fe > this.spaceLeft && Ye > 0, vr = Fe <= this.spaceLeft && Ye < Ae.length);
                        if (Ye === 0 && this.spaceLeft === this.lineWidth && (Ye = 1), We.required = At.required || Ye < Ae.length, xe = ct(Ae.slice(0, Ye), Fe, We, Ne), Ne = {
                          required: !1
                        }, Ae = Ae.slice(Ye), Fe = this.wordWidth(Ae), xe === !1)
                          break;
                      }
                    else
                      xe = ct(Ae, Fe, At, ie);
                    if (xe === !1)
                      break;
                    ie = At;
                  }
                }, Y.wrap = function(_, ct) {
                  var At = this;
                  this.horizontalScaling = ct.horizontalScaling || 100, ct.indent != null && (this.indent = ct.indent * this.horizontalScaling / 100), ct.characterSpacing != null && (this.characterSpacing = ct.characterSpacing * this.horizontalScaling / 100), ct.wordSpacing != null && (this.wordSpacing = ct.wordSpacing * this.horizontalScaling / 100), ct.ellipsis != null && (this.ellipsis = ct.ellipsis);
                  var Qt = this.document.y + this.document.currentLineHeight(!0);
                  (this.document.y > this.maxY || Qt > this.maxY) && this.nextSection();
                  var ie = "", ge = 0, xe = 0, Ae = 0, Fe = this.document.y, Ne = function() {
                    return ct.textWidth = ge + At.wordSpacing * (xe - 1), ct.wordCount = xe, ct.lineWidth = At.lineWidth, Fe = At.document.y, At.emit("line", ie, ct, At), Ae++;
                  };
                  return this.emit("sectionStart", ct, this), this.eachWord(_, function(We, Ye, vr, _e) {
                    if ((_e == null || _e.required) && (At.emit("firstLine", ct, At), At.spaceLeft = At.lineWidth), At.canFit(We, Ye) && (ie += We, ge += Ye, xe++), vr.required || !At.canFit(We, Ye)) {
                      var hr = At.document.currentLineHeight(!0);
                      if (At.height != null && At.ellipsis && At.document.y + hr * 2 > At.maxY && At.column >= At.columns) {
                        for (At.ellipsis === !0 && (At.ellipsis = "â¦"), ie = ie.replace(/\s+$/, ""), ge = At.wordWidth(ie + At.ellipsis); ie && ge > At.lineWidth; )
                          ie = ie.slice(0, -1).replace(/\s+$/, ""), ge = At.wordWidth(ie + At.ellipsis);
                        ge <= At.lineWidth && (ie = ie + At.ellipsis), ge = At.wordWidth(ie);
                      }
                      if (vr.required && (Ye > At.spaceLeft && (Ne(), ie = We, ge = Ye, xe = 1), At.emit("lastLine", ct, At)), ie[ie.length - 1] == Ut && (ie = ie.slice(0, -1) + Vt, At.spaceLeft -= At.wordWidth(Vt)), Ne(), At.document.y + hr > At.maxY) {
                        var Cr = At.nextSection();
                        if (!Cr)
                          return xe = 0, ie = "", !1;
                      }
                      return vr.required ? (At.spaceLeft = At.lineWidth, ie = "", ge = 0, xe = 0) : (At.spaceLeft = At.lineWidth - Ye, ie = We, ge = Ye, xe = 1);
                    } else
                      return At.spaceLeft -= Ye;
                  }), xe > 0 && (this.emit("lastLine", ct, this), Ne()), this.emit("sectionEnd", ct, this), ct.continued === !0 ? (Ae > 1 && (this.continuedX = 0), this.continuedX += ct.textWidth || 0, this.document.y = Fe) : this.document.x = this.startX;
                }, Y.nextSection = function(_) {
                  if (this.emit("sectionEnd", _, this), ++this.column > this.columns) {
                    if (this.height != null)
                      return !1;
                    if (this.document.continueOnNewPage(), this.column = 1, this.startY = this.document.page.margins.top, this.maxY = this.document.page.maxY(), this.document.x = this.startX, this.document._fillColor) {
                      var ct;
                      (ct = this.document).fillColor.apply(ct, this.document._fillColor);
                    }
                    this.emit("pageBreak", _, this);
                  } else
                    this.document.x += this.lineWidth + this.columnGap, this.document.y = this.startY, this.emit("columnBreak", _, this);
                  return this.emit("sectionStart", _, this), !0;
                }, Z;
              }(l.EventEmitter), kt = K.number, oe = {
                initText: function() {
                  return this._line = this._line.bind(this), this.x = 0, this.y = 0, this._lineGap = 0;
                },
                lineGap: function(Z) {
                  return this._lineGap = Z, this;
                },
                moveDown: function(Z) {
                  return Z == null && (Z = 1), this.y += this.currentLineHeight(!0) * Z + this._lineGap, this;
                },
                moveUp: function(Z) {
                  return Z == null && (Z = 1), this.y -= this.currentLineHeight(!0) * Z + this._lineGap, this;
                },
                _text: function(Z, Y, q, _, ct) {
                  var At = this;
                  _ = this._initOptions(Y, q, _), Z = Z == null ? "" : "" + Z, _.wordSpacing && (Z = Z.replace(/\s{2,}/g, " "));
                  var Qt = function() {
                    _.structParent && _.structParent.add(At.struct(_.structType || "P", [At.markStructureContent(_.structType || "P")]));
                  };
                  if (_.width) {
                    var ie = this._wrapper;
                    ie || (ie = new ee(this, _), ie.on("line", ct), ie.on("firstLine", Qt)), this._wrapper = _.continued ? ie : null, this._textOptions = _.continued ? _ : null, ie.wrap(Z, _);
                  } else
                    for (var ge = E(Z.split(`
`)), xe; !(xe = ge()).done; ) {
                      var Ae = xe.value;
                      Qt(), ct(Ae, _);
                    }
                  return this;
                },
                text: function(Z, Y, q, _) {
                  return this._text(Z, Y, q, _, this._line);
                },
                widthOfString: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, q = Y.horizontalScaling || 100;
                  return (this._font.widthOfString(Z, this._fontSize, Y.features) + (Y.characterSpacing || 0) * (Z.length - 1)) * q / 100;
                },
                heightOfString: function(Z, Y) {
                  var q = this, _ = this.x, ct = this.y;
                  Y = this._initOptions(Y), Y.height = 1 / 0;
                  var At = Y.lineGap || this._lineGap || 0;
                  this._text(Z, this.x, this.y, Y, function() {
                    return q.y += q.currentLineHeight(!0) + At;
                  });
                  var Qt = this.y - ct;
                  return this.x = _, this.y = ct, Qt;
                },
                list: function(Z, Y, q, _, ct) {
                  _ = this._initOptions(Y, q, _);
                  var At = _.listType || "bullet", Qt = Math.round(this._font.ascender / 1e3 * this._fontSize), ie = Qt / 2, ge = _.bulletRadius || Qt / 3, xe = _.textIndent || (At === "bullet" ? ge * 5 : Qt * 2), Ae = _.bulletIndent || (At === "bullet" ? ge * 8 : Qt * 2), Fe = 1, Ne = [], We = [], Ye = [], vr = function(je) {
                    for (var vn = 1, Dr = 0; Dr < je.length; Dr++) {
                      var Br = je[Dr];
                      Array.isArray(Br) ? (Fe++, vr(Br), Fe--) : (Ne.push(Br), We.push(Fe), At !== "bullet" && Ye.push(vn++));
                    }
                  };
                  vr(Z);
                  for (var _e = function(je) {
                    switch (At) {
                      case "numbered":
                        return je + ".";
                      case "lettered":
                        var vn = String.fromCharCode((je - 1) % 26 + 65), Dr = Math.floor((je - 1) / 26 + 1), Br = Array(Dr + 1).join(vn);
                        return Br + ".";
                    }
                  }, hr = function(je, vn) {
                    var Dr = this;
                    ct = new ee(this, _), ct.on("line", this._line), Fe = 1, ct.once("firstLine", function() {
                      var Br, pn, Fn, gn;
                      if (_.structParent)
                        if (_.structTypes) {
                          var Vn = _.structTypes;
                          pn = Vn[0], Fn = Vn[1], gn = Vn[2];
                        } else
                          pn = "LI", Fn = "Lbl", gn = "LBody";
                      pn ? (Br = Dr.struct(pn), _.structParent.add(Br)) : _.structParent && (Br = _.structParent);
                      var Cn;
                      if ((Cn = We[vn++]) !== Fe) {
                        var _n = Ae * (Cn - Fe);
                        Dr.x += _n, ct.lineWidth -= _n, Fe = Cn;
                      }
                      switch (Br && (Fn || gn) && Br.add(Dr.struct(Fn || gn, [Dr.markStructureContent(Fn || gn)])), At) {
                        case "bullet":
                          Dr.circle(Dr.x - xe + ge, Dr.y + ie, ge), Dr.fill();
                          break;
                        case "numbered":
                        case "lettered":
                          var Aa = _e(Ye[vn - 1]);
                          Dr._fragment(Aa, Dr.x - xe, Dr.y, _);
                          break;
                      }
                      Br && Fn && gn && Br.add(Dr.struct(gn, [Dr.markStructureContent(gn)])), Br && Br !== _.structParent && Br.end();
                    }), ct.on("sectionStart", function() {
                      var Br = xe + Ae * (Fe - 1);
                      return Dr.x += Br, ct.lineWidth -= Br;
                    }), ct.on("sectionEnd", function() {
                      var Br = xe + Ae * (Fe - 1);
                      return Dr.x -= Br, ct.lineWidth += Br;
                    }), ct.wrap(je, _);
                  }, Cr = 0; Cr < Ne.length; Cr++)
                    hr.call(this, Ne[Cr], Cr);
                  return this;
                },
                _initOptions: function() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Y = arguments.length > 1 ? arguments[1] : void 0, q = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  typeof Z == "object" && (q = Z, Z = null);
                  var _ = Object.assign({}, q);
                  if (this._textOptions)
                    for (var ct in this._textOptions) {
                      var At = this._textOptions[ct];
                      ct !== "continued" && _[ct] === void 0 && (_[ct] = At);
                    }
                  return Z != null && (this.x = Z), Y != null && (this.y = Y), _.lineBreak !== !1 && (_.width == null && (_.width = this.page.width - this.x - this.page.margins.right), _.width = Math.max(_.width, 0)), _.columns || (_.columns = 0), _.columnGap == null && (_.columnGap = 18), _;
                },
                _line: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, q = arguments.length > 2 ? arguments[2] : void 0;
                  this._fragment(Z, this.x, this.y, Y);
                  var _ = Y.lineGap || this._lineGap || 0;
                  return q ? this.y += this.currentLineHeight(!0) + _ : this.x += this.widthOfString(Z, Y);
                },
                _fragment: function(Z, Y, q, _) {
                  var ct = this, At, Qt, ie, ge, xe, Ae;
                  if (Z = ("" + Z).replace(/\n/g, ""), Z.length !== 0) {
                    var Fe = _.align || "left", Ne = _.wordSpacing || 0, We = _.characterSpacing || 0, Ye = _.horizontalScaling || 100;
                    if (_.width)
                      switch (Fe) {
                        case "right":
                          xe = this.widthOfString(Z.replace(/\s+$/, ""), _), Y += _.lineWidth - xe;
                          break;
                        case "center":
                          Y += _.lineWidth / 2 - _.textWidth / 2;
                          break;
                        case "justify":
                          Ae = Z.trim().split(/\s+/), xe = this.widthOfString(Z.replace(/\s+/g, ""), _);
                          var vr = this.widthOfString(" ") + We;
                          Ne = Math.max(0, (_.lineWidth - xe) / Math.max(1, Ae.length - 1) - vr);
                          break;
                      }
                    if (typeof _.baseline == "number")
                      At = -_.baseline;
                    else {
                      switch (_.baseline) {
                        case "svg-middle":
                          At = 0.5 * this._font.xHeight;
                          break;
                        case "middle":
                        case "svg-central":
                          At = 0.5 * (this._font.descender + this._font.ascender);
                          break;
                        case "bottom":
                        case "ideographic":
                          At = this._font.descender;
                          break;
                        case "alphabetic":
                          At = 0;
                          break;
                        case "mathematical":
                          At = 0.5 * this._font.ascender;
                          break;
                        case "hanging":
                          At = 0.8 * this._font.ascender;
                          break;
                        case "top":
                          At = this._font.ascender;
                          break;
                        default:
                          At = this._font.ascender;
                      }
                      At = At / 1e3 * this._fontSize;
                    }
                    var _e = _.textWidth + Ne * (_.wordCount - 1) + We * (Z.length - 1);
                    if (_.link != null && this.link(Y, q, _e, this.currentLineHeight(), _.link), _.goTo != null && this.goTo(Y, q, _e, this.currentLineHeight(), _.goTo), _.destination != null && this.addNamedDestination(_.destination, "XYZ", Y, q, null), _.underline) {
                      this.save(), _.stroke || this.strokeColor.apply(this, this._fillColor || []);
                      var hr = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
                      this.lineWidth(hr);
                      var Cr = q + this.currentLineHeight() - hr;
                      this.moveTo(Y, Cr), this.lineTo(Y + _e, Cr), this.stroke(), this.restore();
                    }
                    if (_.strike) {
                      this.save(), _.stroke || this.strokeColor.apply(this, this._fillColor || []);
                      var fr = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
                      this.lineWidth(fr);
                      var je = q + this.currentLineHeight() / 2;
                      this.moveTo(Y, je), this.lineTo(Y + _e, je), this.stroke(), this.restore();
                    }
                    if (this.save(), _.oblique) {
                      var vn;
                      typeof _.oblique == "number" ? vn = -Math.tan(_.oblique * Math.PI / 180) : vn = -0.25, this.transform(1, 0, 0, 1, Y, q), this.transform(1, 0, vn, 1, -vn * At, 0), this.transform(1, 0, 0, 1, -Y, -q);
                    }
                    this.transform(1, 0, 0, -1, 0, this.page.height), q = this.page.height - q - At, this.page.fonts[this._font.id] == null && (this.page.fonts[this._font.id] = this._font.ref()), this.addContent("BT"), this.addContent("1 0 0 1 " + kt(Y) + " " + kt(q) + " Tm"), this.addContent("/" + this._font.id + " " + kt(this._fontSize) + " Tf");
                    var Dr = _.fill && _.stroke ? 2 : _.stroke ? 1 : 0;
                    if (Dr && this.addContent(Dr + " Tr"), We && this.addContent(kt(We) + " Tc"), Ye !== 100 && this.addContent(Ye + " Tz"), Ne) {
                      Ae = Z.trim().split(/\s+/), Ne += this.widthOfString(" ") + We, Ne *= 1e3 / this._fontSize, Qt = [], ge = [];
                      for (var Br = E(Ae), pn; !(pn = Br()).done; ) {
                        var Fn = pn.value, gn = this._font.encode(Fn, _.features), Vn = gn[0], Cn = gn[1];
                        Qt = Qt.concat(Vn), ge = ge.concat(Cn);
                        var _n = {}, Aa = ge[ge.length - 1];
                        for (var ma in Aa) {
                          var Ei = Aa[ma];
                          _n[ma] = Ei;
                        }
                        _n.xAdvance += Ne, ge[ge.length - 1] = _n;
                      }
                    } else {
                      var va = this._font.encode(Z, _.features);
                      Qt = va[0], ge = va[1];
                    }
                    var Ti = this._fontSize / 1e3, Va = [], Fi = 0, Ii = !1, ao = function(Ca) {
                      if (Fi < Ca) {
                        var io = Qt.slice(Fi, Ca).join(""), us = ge[Ca - 1].xAdvance - ge[Ca - 1].advanceWidth;
                        Va.push("<" + io + "> " + kt(-us));
                      }
                      return Fi = Ca;
                    }, Oa = function(Ca) {
                      if (ao(Ca), Va.length > 0)
                        return ct.addContent("[" + Va.join(" ") + "] TJ"), Va.length = 0;
                    };
                    for (ie = 0; ie < ge.length; ie++) {
                      var Sa = ge[ie];
                      Sa.xOffset || Sa.yOffset ? (Oa(ie), this.addContent("1 0 0 1 " + kt(Y + Sa.xOffset * Ti) + " " + kt(q + Sa.yOffset * Ti) + " Tm"), Oa(ie + 1), Ii = !0) : (Ii && (this.addContent("1 0 0 1 " + kt(Y) + " " + kt(q) + " Tm"), Ii = !1), Sa.xAdvance - Sa.advanceWidth !== 0 && ao(ie + 1)), Y += Sa.xAdvance * Ti;
                    }
                    return Oa(ie), this.addContent("ET"), this.restore();
                  }
                }
              }, Jt = [65472, 65473, 65474, 65475, 65477, 65478, 65479, 65480, 65481, 65482, 65483, 65484, 65485, 65486, 65487], ye = {
                1: "DeviceGray",
                3: "DeviceRGB",
                4: "DeviceCMYK"
              }, Pe = /* @__PURE__ */ function() {
                function Tt(Y, q) {
                  var _;
                  if (this.data = Y, this.label = q, this.data.readUInt16BE(0) !== 65496)
                    throw "SOI not found in JPEG";
                  this.orientation = s.default.fromBuffer(this.data).Orientation || 1;
                  for (var ct = 2; ct < this.data.length && (_ = this.data.readUInt16BE(ct), ct += 2, !Jt.includes(_)); )
                    ct += this.data.readUInt16BE(ct);
                  if (!Jt.includes(_))
                    throw "Invalid JPEG.";
                  ct += 2, this.bits = this.data[ct++], this.height = this.data.readUInt16BE(ct), ct += 2, this.width = this.data.readUInt16BE(ct), ct += 2;
                  var At = this.data[ct++];
                  this.colorSpace = ye[At], this.obj = null;
                }
                var Z = Tt.prototype;
                return Z.embed = function(q) {
                  if (!this.obj)
                    return this.obj = q.ref({
                      Type: "XObject",
                      Subtype: "Image",
                      BitsPerComponent: this.bits,
                      Width: this.width,
                      Height: this.height,
                      ColorSpace: this.colorSpace,
                      Filter: "DCTDecode"
                    }), this.colorSpace === "DeviceCMYK" && (this.obj.data.Decode = [1, 0, 1, 0, 1, 0, 1, 0]), this.obj.end(this.data), this.data = null;
                }, Tt;
              }(), Le = /* @__PURE__ */ function() {
                function Tt(Y, q) {
                  this.label = q, this.image = new v.default(Y), this.width = this.image.width, this.height = this.image.height, this.imgData = this.image.imgData, this.obj = null;
                }
                var Z = Tt.prototype;
                return Z.embed = function(q) {
                  var _ = !1;
                  if (this.document = q, !this.obj) {
                    var ct = this.image.hasAlphaChannel, At = this.image.interlaceMethod === 1;
                    if (this.obj = this.document.ref({
                      Type: "XObject",
                      Subtype: "Image",
                      BitsPerComponent: ct ? 8 : this.image.bits,
                      Width: this.width,
                      Height: this.height,
                      Filter: "FlateDecode"
                    }), !ct) {
                      var Qt = this.document.ref({
                        Predictor: At ? 1 : 15,
                        Colors: this.image.colors,
                        BitsPerComponent: this.image.bits,
                        Columns: this.width
                      });
                      this.obj.data.DecodeParms = Qt, Qt.end();
                    }
                    if (this.image.palette.length === 0)
                      this.obj.data.ColorSpace = this.image.colorSpace;
                    else {
                      var ie = this.document.ref();
                      ie.end(r.from(this.image.palette)), this.obj.data.ColorSpace = ["Indexed", "DeviceRGB", this.image.palette.length / 3 - 1, ie];
                    }
                    if (this.image.transparency.grayscale != null) {
                      var ge = this.image.transparency.grayscale;
                      this.obj.data.Mask = [ge, ge];
                    } else if (this.image.transparency.rgb) {
                      for (var xe = this.image.transparency.rgb, Ae = [], Fe = E(xe), Ne; !(Ne = Fe()).done; ) {
                        var We = Ne.value;
                        Ae.push(We, We);
                      }
                      this.obj.data.Mask = Ae;
                    } else {
                      if (this.image.transparency.indexed)
                        return _ = !0, this.loadIndexedAlphaChannel();
                      if (ct)
                        return _ = !0, this.splitAlphaChannel();
                    }
                    if (At && !_)
                      return this.decodeData();
                    this.finalize();
                  }
                }, Z.finalize = function() {
                  if (this.alphaChannel) {
                    var q = this.document.ref({
                      Type: "XObject",
                      Subtype: "Image",
                      Height: this.height,
                      Width: this.width,
                      BitsPerComponent: 8,
                      Filter: "FlateDecode",
                      ColorSpace: "DeviceGray",
                      Decode: [0, 1]
                    });
                    q.end(this.alphaChannel), this.obj.data.SMask = q;
                  }
                  return this.obj.end(this.imgData), this.image = null, this.imgData = null;
                }, Z.splitAlphaChannel = function() {
                  var q = this;
                  return this.image.decodePixels(function(_) {
                    for (var ct, At, Qt = q.image.colors, ie = q.width * q.height, ge = r.alloc(ie * Qt), xe = r.alloc(ie), Ae = At = ct = 0, Fe = _.length, Ne = q.image.bits === 16 ? 1 : 0; Ae < Fe; ) {
                      for (var We = 0; We < Qt; We++)
                        ge[At++] = _[Ae++], Ae += Ne;
                      xe[ct++] = _[Ae++], Ae += Ne;
                    }
                    return q.imgData = o.default.deflateSync(ge), q.alphaChannel = o.default.deflateSync(xe), q.finalize();
                  });
                }, Z.loadIndexedAlphaChannel = function() {
                  var q = this, _ = this.image.transparency.indexed;
                  return this.image.decodePixels(function(ct) {
                    for (var At = r.alloc(q.width * q.height), Qt = 0, ie = 0, ge = ct.length; ie < ge; ie++)
                      At[Qt++] = _[ct[ie]];
                    return q.alphaChannel = o.default.deflateSync(At), q.finalize();
                  });
                }, Z.decodeData = function() {
                  var q = this;
                  this.image.decodePixels(function(_) {
                    q.imgData = o.default.deflateSync(_), q.finalize();
                  });
                }, Tt;
              }(), Ze = /* @__PURE__ */ function() {
                function Tt() {
                }
                return Tt.open = function(Y, q) {
                  var _;
                  if (r.isBuffer(Y))
                    _ = Y;
                  else if (Y instanceof ArrayBuffer)
                    _ = r.from(new Uint8Array(Y));
                  else {
                    var ct;
                    if (ct = /^data:.+?;base64,(.*)$/.exec(Y))
                      _ = r.from(ct[1], "base64");
                    else if (_ = F.readFileSync(Y), !_)
                      return;
                  }
                  if (_[0] === 255 && _[1] === 216)
                    return new Pe(_, q);
                  if (_[0] === 137 && _.toString("ascii", 1, 4) === "PNG")
                    return new Le(_, q);
                  throw new Error("Unknown image format.");
                }, Tt;
              }(), $e = {
                initImages: function() {
                  return this._imageRegistry = {}, this._imageCount = 0;
                },
                image: function(Z, Y, q) {
                  var _ = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, ct, At, Qt, ie, ge, xe, Ae, Fe, Ne, We;
                  typeof Y == "object" && (_ = Y, Y = null);
                  var Ye = _.ignoreOrientation || _.ignoreOrientation !== !1 && this.options.ignoreOrientation;
                  Y = (xe = Y != null ? Y : _.x) != null ? xe : this.x, q = (Ae = q != null ? q : _.y) != null ? Ae : this.y, typeof Z == "string" && (ie = this._imageRegistry[Z]), ie || (Z.width && Z.height ? ie = Z : ie = this.openImage(Z)), ie.obj || ie.embed(this), this.page.xobjects[ie.label] == null && (this.page.xobjects[ie.label] = ie.obj);
                  var vr = ie, _e = vr.width, hr = vr.height;
                  if (!Ye && ie.orientation > 4) {
                    var Cr = [hr, _e];
                    _e = Cr[0], hr = Cr[1];
                  }
                  var fr = _.width || _e, je = _.height || hr;
                  if (_.width && !_.height) {
                    var vn = fr / _e;
                    fr = _e * vn, je = hr * vn;
                  } else if (_.height && !_.width) {
                    var Dr = je / hr;
                    fr = _e * Dr, je = hr * Dr;
                  } else if (_.scale)
                    fr = _e * _.scale, je = hr * _.scale;
                  else if (_.fit) {
                    var Br = _.fit;
                    Qt = Br[0], ct = Br[1], At = Qt / ct, ge = _e / hr, ge > At ? (fr = Qt, je = Qt / ge) : (je = ct, fr = ct * ge);
                  } else if (_.cover) {
                    var pn = _.cover;
                    Qt = pn[0], ct = pn[1], At = Qt / ct, ge = _e / hr, ge > At ? (je = ct, fr = ct * ge) : (fr = Qt, je = Qt / ge);
                  }
                  if ((_.fit || _.cover) && (_.align === "center" ? Y = Y + Qt / 2 - fr / 2 : _.align === "right" && (Y = Y + Qt - fr), _.valign === "center" ? q = q + ct / 2 - je / 2 : _.valign === "bottom" && (q = q + ct - je)), Ye)
                    je = -je, q -= je, Fe = 0;
                  else
                    switch (ie.orientation) {
                      default:
                      case 1:
                        je = -je, q -= je, Fe = 0;
                        break;
                      case 2:
                        fr = -fr, je = -je, Y -= fr, q -= je, Fe = 0;
                        break;
                      case 3:
                        Ne = Y, We = q, je = -je, Y -= fr, Fe = 180;
                        break;
                      case 4:
                        break;
                      case 5:
                        Ne = Y, We = q;
                        var Fn = [je, fr];
                        fr = Fn[0], je = Fn[1], q -= je, Fe = 90;
                        break;
                      case 6:
                        Ne = Y, We = q;
                        var gn = [je, fr];
                        fr = gn[0], je = gn[1], je = -je, Fe = 90;
                        break;
                      case 7:
                        Ne = Y, We = q;
                        var Vn = [je, fr];
                        fr = Vn[0], je = Vn[1], je = -je, fr = -fr, Y -= fr, Fe = 90;
                        break;
                      case 8:
                        Ne = Y, We = q;
                        var Cn = [je, fr];
                        fr = Cn[0], je = Cn[1], je = -je, Y -= fr, q -= je, Fe = -90;
                        break;
                    }
                  return _.link != null && this.link(Y, q, fr, je, _.link), _.goTo != null && this.goTo(Y, q, fr, je, _.goTo), _.destination != null && this.addNamedDestination(_.destination, "XYZ", Y, q, null), this.y === q && (this.y += je), this.save(), Fe && this.rotate(Fe, {
                    origin: [Ne, We]
                  }), this.transform(fr, 0, 0, je, Y, q), this.addContent("/" + ie.label + " Do"), this.restore(), this;
                },
                openImage: function(Z) {
                  var Y;
                  return typeof Z == "string" && (Y = this._imageRegistry[Z]), Y || (Y = Ze.open(Z, "I" + ++this._imageCount), typeof Z == "string" && (this._imageRegistry[Z] = Y)), Y;
                }
              }, or = {
                annotate: function(Z, Y, q, _, ct) {
                  ct.Type = "Annot", ct.Rect = this._convertRect(Z, Y, q, _), ct.Border = [0, 0, 0], ct.Subtype === "Link" && typeof ct.F == "undefined" && (ct.F = 4), ct.Subtype !== "Link" && ct.C == null && (ct.C = this._normalizeColor(ct.color || [0, 0, 0])), delete ct.color, typeof ct.Dest == "string" && (ct.Dest = new String(ct.Dest));
                  for (var At in ct) {
                    var Qt = ct[At];
                    ct[At[0].toUpperCase() + At.slice(1)] = Qt;
                  }
                  var ie = this.ref(ct);
                  return this.page.annotations.push(ie), ie.end(), this;
                },
                note: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return At.Subtype = "Text", At.Contents = new String(ct), At.Name == null && (At.Name = "Comment"), At.color == null && (At.color = [243, 223, 92]), this.annotate(Z, Y, q, _, At);
                },
                goTo: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return At.Subtype = "Link", At.A = this.ref({
                    S: "GoTo",
                    D: new String(ct)
                  }), At.A.end(), this.annotate(Z, Y, q, _, At);
                },
                link: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  if (At.Subtype = "Link", typeof ct == "number") {
                    var Qt = this._root.data.Pages.data;
                    if (ct >= 0 && ct < Qt.Kids.length)
                      At.A = this.ref({
                        S: "GoTo",
                        D: [Qt.Kids[ct], "XYZ", null, null, null]
                      }), At.A.end();
                    else
                      throw new Error("The document has no page " + ct);
                  } else
                    At.A = this.ref({
                      S: "URI",
                      URI: new String(ct)
                    }), At.A.end();
                  return this.annotate(Z, Y, q, _, At);
                },
                _markup: function(Z, Y, q, _) {
                  var ct = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, At = this._convertRect(Z, Y, q, _), Qt = At[0], ie = At[1], ge = At[2], xe = At[3];
                  return ct.QuadPoints = [Qt, xe, ge, xe, Qt, ie, ge, ie], ct.Contents = new String(), this.annotate(Z, Y, q, _, ct);
                },
                highlight: function(Z, Y, q, _) {
                  var ct = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return ct.Subtype = "Highlight", ct.color == null && (ct.color = [241, 238, 148]), this._markup(Z, Y, q, _, ct);
                },
                underline: function(Z, Y, q, _) {
                  var ct = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return ct.Subtype = "Underline", this._markup(Z, Y, q, _, ct);
                },
                strike: function(Z, Y, q, _) {
                  var ct = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return ct.Subtype = "StrikeOut", this._markup(Z, Y, q, _, ct);
                },
                lineAnnotation: function(Z, Y, q, _) {
                  var ct = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return ct.Subtype = "Line", ct.Contents = new String(), ct.L = [Z, this.page.height - Y, q, this.page.height - _], this.annotate(Z, Y, q, _, ct);
                },
                rectAnnotation: function(Z, Y, q, _) {
                  var ct = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return ct.Subtype = "Square", ct.Contents = new String(), this.annotate(Z, Y, q, _, ct);
                },
                ellipseAnnotation: function(Z, Y, q, _) {
                  var ct = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return ct.Subtype = "Circle", ct.Contents = new String(), this.annotate(Z, Y, q, _, ct);
                },
                textAnnotation: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return At.Subtype = "FreeText", At.Contents = new String(ct), At.DA = new String(), this.annotate(Z, Y, q, _, At);
                },
                fileAnnotation: function(Z, Y, q, _) {
                  var ct = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {}, Qt = this.file(ct.src, Object.assign({
                    hidden: !0
                  }, ct));
                  return At.Subtype = "FileAttachment", At.FS = Qt, At.Contents ? At.Contents = new String(At.Contents) : Qt.data.Desc && (At.Contents = Qt.data.Desc), this.annotate(Z, Y, q, _, At);
                },
                _convertRect: function(Z, Y, q, _) {
                  var ct = Y;
                  Y += _;
                  var At = Z + q, Qt = this._ctm, ie = Qt[0], ge = Qt[1], xe = Qt[2], Ae = Qt[3], Fe = Qt[4], Ne = Qt[5];
                  return Z = ie * Z + xe * Y + Fe, Y = ge * Z + Ae * Y + Ne, At = ie * At + xe * ct + Fe, ct = ge * At + Ae * ct + Ne, [Z, Y, At, ct];
                }
              }, pe = /* @__PURE__ */ function() {
                function Tt(Y, q, _, ct) {
                  var At = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
                    expanded: !1
                  };
                  this.document = Y, this.options = At, this.outlineData = {}, ct !== null && (this.outlineData.Dest = [ct.dictionary, "Fit"]), q !== null && (this.outlineData.Parent = q), _ !== null && (this.outlineData.Title = new String(_)), this.dictionary = this.document.ref(this.outlineData), this.children = [];
                }
                var Z = Tt.prototype;
                return Z.addItem = function(q) {
                  var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                    expanded: !1
                  }, ct = new Tt(this.document, this.dictionary, q, this.document.page, _);
                  return this.children.push(ct), ct;
                }, Z.endOutline = function() {
                  if (this.children.length > 0) {
                    this.options.expanded && (this.outlineData.Count = this.children.length);
                    var q = this.children[0], _ = this.children[this.children.length - 1];
                    this.outlineData.First = q.dictionary, this.outlineData.Last = _.dictionary;
                    for (var ct = 0, At = this.children.length; ct < At; ct++) {
                      var Qt = this.children[ct];
                      ct > 0 && (Qt.outlineData.Prev = this.children[ct - 1].dictionary), ct < this.children.length - 1 && (Qt.outlineData.Next = this.children[ct + 1].dictionary), Qt.endOutline();
                    }
                  }
                  return this.dictionary.end();
                }, Tt;
              }(), ze = {
                initOutline: function() {
                  return this.outline = new pe(this, null, null, null);
                },
                endOutline: function() {
                  if (this.outline.endOutline(), this.outline.children.length > 0)
                    return this._root.data.Outlines = this.outline.dictionary, this._root.data.PageMode = "UseOutlines";
                }
              }, qe = /* @__PURE__ */ function() {
                function Tt(Y, q) {
                  this.refs = [{
                    pageRef: Y,
                    mcid: q
                  }];
                }
                var Z = Tt.prototype;
                return Z.push = function(q) {
                  var _ = this;
                  q.refs.forEach(function(ct) {
                    return _.refs.push(ct);
                  });
                }, Tt;
              }(), Ve = /* @__PURE__ */ function() {
                function Tt(Y, q) {
                  var _ = this, ct = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, At = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
                  this.document = Y, this._attached = !1, this._ended = !1, this._flushed = !1, this.dictionary = Y.ref({
                    // Type: "StructElem",
                    S: q
                  });
                  var Qt = this.dictionary.data;
                  (Array.isArray(ct) || this._isValidChild(ct)) && (At = ct, ct = {}), typeof ct.title != "undefined" && (Qt.T = new String(ct.title)), typeof ct.lang != "undefined" && (Qt.Lang = new String(ct.lang)), typeof ct.alt != "undefined" && (Qt.Alt = new String(ct.alt)), typeof ct.expanded != "undefined" && (Qt.E = new String(ct.expanded)), typeof ct.actual != "undefined" && (Qt.ActualText = new String(ct.actual)), this._children = [], At && (Array.isArray(At) || (At = [At]), At.forEach(function(ie) {
                    return _.add(ie);
                  }), this.end());
                }
                var Z = Tt.prototype;
                return Z.add = function(q) {
                  if (this._ended)
                    throw new Error("Cannot add child to already-ended structure element");
                  if (!this._isValidChild(q))
                    throw new Error("Invalid structure element child");
                  return q instanceof Tt && (q.setParent(this.dictionary), this._attached && q.setAttached()), q instanceof qe && this._addContentToParentTree(q), typeof q == "function" && this._attached && (q = this._contentForClosure(q)), this._children.push(q), this;
                }, Z._addContentToParentTree = function(q) {
                  var _ = this;
                  q.refs.forEach(function(ct) {
                    var At = ct.pageRef, Qt = ct.mcid, ie = _.document.getStructParentTree().get(At.data.StructParents);
                    ie[Qt] = _.dictionary;
                  });
                }, Z.setParent = function(q) {
                  if (this.dictionary.data.P)
                    throw new Error("Structure element added to more than one parent");
                  this.dictionary.data.P = q, this._flush();
                }, Z.setAttached = function() {
                  var q = this;
                  this._attached || (this._children.forEach(function(_, ct) {
                    _ instanceof Tt && _.setAttached(), typeof _ == "function" && (q._children[ct] = q._contentForClosure(_));
                  }), this._attached = !0, this._flush());
                }, Z.end = function() {
                  this._ended || (this._children.filter(function(q) {
                    return q instanceof Tt;
                  }).forEach(function(q) {
                    return q.end();
                  }), this._ended = !0, this._flush());
                }, Z._isValidChild = function(q) {
                  return q instanceof Tt || q instanceof qe || typeof q == "function";
                }, Z._contentForClosure = function(q) {
                  var _ = this.document.markStructureContent(this.dictionary.data.S);
                  return q(), this.document.endMarkedContent(), this._addContentToParentTree(_), _;
                }, Z._isFlushable = function() {
                  return !this.dictionary.data.P || !this._ended ? !1 : this._children.every(function(q) {
                    return typeof q == "function" ? !1 : q instanceof Tt ? q._isFlushable() : !0;
                  });
                }, Z._flush = function() {
                  var q = this;
                  this._flushed || !this._isFlushable() || (this.dictionary.data.K = [], this._children.forEach(function(_) {
                    return q._flushChild(_);
                  }), this.dictionary.end(), this._children = [], this.dictionary.data.K = null, this._flushed = !0);
                }, Z._flushChild = function(q) {
                  var _ = this;
                  q instanceof Tt && this.dictionary.data.K.push(q.dictionary), q instanceof qe && q.refs.forEach(function(ct) {
                    var At = ct.pageRef, Qt = ct.mcid;
                    _.dictionary.data.Pg || (_.dictionary.data.Pg = At), _.dictionary.data.Pg === At ? _.dictionary.data.K.push(Qt) : _.dictionary.data.K.push({
                      Type: "MCR",
                      Pg: At,
                      MCID: Qt
                    });
                  });
                }, Tt;
              }(), sr = /* @__PURE__ */ function(Tt) {
                function Z() {
                  return Tt.apply(this, arguments) || this;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y._compareKeys = function(_, ct) {
                  return parseInt(_) - parseInt(ct);
                }, Y._keysName = function() {
                  return "Nums";
                }, Y._dataForKey = function(_) {
                  return parseInt(_);
                }, Z;
              }(I), Je = {
                initMarkings: function(Z) {
                  this.structChildren = [], Z.tagged && (this.getMarkInfoDictionary().data.Marked = !0, this.getStructTreeRoot());
                },
                markContent: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                  if (Z === "Artifact" || Y && Y.mcid) {
                    var q = 0;
                    for (this.page.markings.forEach(function(ct) {
                      (q || ct.structContent || ct.tag === "Artifact") && q++;
                    }); q--; )
                      this.endMarkedContent();
                  }
                  if (!Y)
                    return this.page.markings.push({
                      tag: Z
                    }), this.addContent("/" + Z + " BMC"), this;
                  this.page.markings.push({
                    tag: Z,
                    options: Y
                  });
                  var _ = {};
                  return typeof Y.mcid != "undefined" && (_.MCID = Y.mcid), Z === "Artifact" && (typeof Y.type == "string" && (_.Type = Y.type), Array.isArray(Y.bbox) && (_.BBox = [Y.bbox[0], this.page.height - Y.bbox[3], Y.bbox[2], this.page.height - Y.bbox[1]]), Array.isArray(Y.attached) && Y.attached.every(function(ct) {
                    return typeof ct == "string";
                  }) && (_.Attached = Y.attached)), Z === "Span" && (Y.lang && (_.Lang = new String(Y.lang)), Y.alt && (_.Alt = new String(Y.alt)), Y.expanded && (_.E = new String(Y.expanded)), Y.actual && (_.ActualText = new String(Y.actual))), this.addContent("/" + Z + " " + K.convert(_) + " BDC"), this;
                },
                markStructureContent: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, q = this.getStructParentTree().get(this.page.structParentTreeKey), _ = q.length;
                  q.push(null), this.markContent(Z, Object.assign({}, Y, {
                    mcid: _
                  }));
                  var ct = new qe(this.page.dictionary, _);
                  return this.page.markings.slice(-1)[0].structContent = ct, ct;
                },
                endMarkedContent: function() {
                  return this.page.markings.pop(), this.addContent("EMC"), this;
                },
                struct: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, q = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
                  return new Ve(this, Z, Y, q);
                },
                addStructure: function(Z) {
                  var Y = this.getStructTreeRoot();
                  return Z.setParent(Y), Z.setAttached(), this.structChildren.push(Z), Y.data.K || (Y.data.K = []), Y.data.K.push(Z.dictionary), this;
                },
                initPageMarkings: function(Z) {
                  var Y = this;
                  Z.forEach(function(q) {
                    if (q.structContent) {
                      var _ = q.structContent, ct = Y.markStructureContent(q.tag, q.options);
                      _.push(ct), Y.page.markings.slice(-1)[0].structContent = _;
                    } else
                      Y.markContent(q.tag, q.options);
                  });
                },
                endPageMarkings: function(Z) {
                  var Y = Z.markings;
                  return Y.forEach(function() {
                    return Z.write("EMC");
                  }), Z.markings = [], Y;
                },
                getMarkInfoDictionary: function() {
                  return this._root.data.MarkInfo || (this._root.data.MarkInfo = this.ref({})), this._root.data.MarkInfo;
                },
                hasMarkInfoDictionary: function() {
                  return !!this._root.data.MarkInfo;
                },
                getStructTreeRoot: function() {
                  return this._root.data.StructTreeRoot || (this._root.data.StructTreeRoot = this.ref({
                    Type: "StructTreeRoot",
                    ParentTree: new sr(),
                    ParentTreeNextKey: 0
                  })), this._root.data.StructTreeRoot;
                },
                getStructParentTree: function() {
                  return this.getStructTreeRoot().data.ParentTree;
                },
                createStructParentTreeNextKey: function() {
                  this.getMarkInfoDictionary();
                  var Z = this.getStructTreeRoot(), Y = Z.data.ParentTreeNextKey++;
                  return Z.data.ParentTree.add(Y, []), Y;
                },
                endMarkings: function() {
                  var Z = this._root.data.StructTreeRoot;
                  Z && (Z.end(), this.structChildren.forEach(function(Y) {
                    return Y.end();
                  })), this._root.data.MarkInfo && this._root.data.MarkInfo.end();
                }
              }, dr = {
                readOnly: 1,
                required: 2,
                noExport: 4,
                multiline: 4096,
                password: 8192,
                toggleToOffButton: 16384,
                radioButton: 32768,
                pushButton: 65536,
                combo: 131072,
                edit: 262144,
                sort: 524288,
                multiSelect: 2097152,
                noSpell: 4194304
              }, lr = {
                left: 0,
                center: 1,
                right: 2
              }, Tr = {
                value: "V",
                defaultValue: "DV"
              }, Hr = {
                zip: "0",
                zipPlus4: "1",
                zip4: "1",
                phone: "2",
                ssn: "3"
              }, Rr = {
                number: {
                  nDec: 0,
                  sepComma: !1,
                  negStyle: "MinusBlack",
                  currency: "",
                  currencyPrepend: !0
                },
                percent: {
                  nDec: 0,
                  sepComma: !1
                }
              }, Or = {
                /**
                 * Must call if adding AcroForms to a document. Must also call font() before
                 * this method to set the default font.
                 */
                initForm: function() {
                  if (!this._font)
                    throw new Error("Must set a font before calling initForm method");
                  this._acroform = {
                    fonts: {},
                    defaultFont: this._font.name
                  }, this._acroform.fonts[this._font.id] = this._font.ref();
                  var Z = {
                    Fields: [],
                    NeedAppearances: !0,
                    DA: new String("/" + this._font.id + " 0 Tf 0 g"),
                    DR: {
                      Font: {}
                    }
                  };
                  Z.DR.Font[this._font.id] = this._font.ref();
                  var Y = this.ref(Z);
                  return this._root.data.AcroForm = Y, this;
                },
                /**
                 * Called automatically by document.js
                 */
                endAcroForm: function() {
                  var Z = this;
                  if (this._root.data.AcroForm) {
                    if (!Object.keys(this._acroform.fonts).length && !this._acroform.defaultFont)
                      throw new Error("No fonts specified for PDF form");
                    var Y = this._root.data.AcroForm.data.DR.Font;
                    Object.keys(this._acroform.fonts).forEach(function(q) {
                      Y[q] = Z._acroform.fonts[q];
                    }), this._root.data.AcroForm.data.Fields.forEach(function(q) {
                      Z._endChild(q);
                    }), this._root.data.AcroForm.end();
                  }
                  return this;
                },
                _endChild: function(Z) {
                  var Y = this;
                  return Array.isArray(Z.data.Kids) && (Z.data.Kids.forEach(function(q) {
                    Y._endChild(q);
                  }), Z.end()), this;
                },
                /**
                 * Creates and adds a form field to the document. Form fields are intermediate
                 * nodes in a PDF form that are used to specify form name heirarchy and form
                 * value defaults.
                 * @param {string} name - field name (T attribute in field dictionary)
                 * @param {object} options  - other attributes to include in field dictionary
                 */
                formField: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, q = this._fieldDict(Z, null, Y), _ = this.ref(q);
                  return this._addToParent(_), _;
                },
                /**
                 * Creates and adds a Form Annotation to the document. Form annotations are
                 * called Widget annotations internally within a PDF file.
                 * @param {string} name - form field name (T attribute of widget annotation
                 * dictionary)
                 * @param {number} x
                 * @param {number} y
                 * @param {number} w
                 * @param {number} h
                 * @param {object} options
                 */
                formAnnotation: function(Z, Y, q, _, ct, At) {
                  var Qt = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : {}, ie = this._fieldDict(Z, Y, Qt);
                  ie.Subtype = "Widget", ie.F === void 0 && (ie.F = 4), this.annotate(q, _, ct, At, ie);
                  var ge = this.page.annotations[this.page.annotations.length - 1];
                  return this._addToParent(ge);
                },
                formText: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "text", Y, q, _, ct, At);
                },
                formPushButton: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "pushButton", Y, q, _, ct, At);
                },
                formCombo: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "combo", Y, q, _, ct, At);
                },
                formList: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "list", Y, q, _, ct, At);
                },
                formRadioButton: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "radioButton", Y, q, _, ct, At);
                },
                formCheckbox: function(Z, Y, q, _, ct) {
                  var At = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "checkbox", Y, q, _, ct, At);
                },
                _addToParent: function(Z) {
                  var Y = Z.data.Parent;
                  return Y ? (Y.data.Kids || (Y.data.Kids = []), Y.data.Kids.push(Z)) : this._root.data.AcroForm.data.Fields.push(Z), this;
                },
                _fieldDict: function(Z, Y) {
                  var q = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  if (!this._acroform)
                    throw new Error("Call document.initForm() method before adding form elements to document");
                  var _ = Object.assign({}, q);
                  return Y !== null && (_ = this._resolveType(Y, q)), _ = this._resolveFlags(_), _ = this._resolveJustify(_), _ = this._resolveFont(_), _ = this._resolveStrings(_), _ = this._resolveColors(_), _ = this._resolveFormat(_), _.T = new String(Z), _.parent && (_.Parent = _.parent, delete _.parent), _;
                },
                _resolveType: function(Z, Y) {
                  if (Z === "text")
                    Y.FT = "Tx";
                  else if (Z === "pushButton")
                    Y.FT = "Btn", Y.pushButton = !0;
                  else if (Z === "radioButton")
                    Y.FT = "Btn", Y.radioButton = !0;
                  else if (Z === "checkbox")
                    Y.FT = "Btn";
                  else if (Z === "combo")
                    Y.FT = "Ch", Y.combo = !0;
                  else if (Z === "list")
                    Y.FT = "Ch";
                  else
                    throw new Error("Invalid form annotation type '" + Z + "'");
                  return Y;
                },
                _resolveFormat: function(Z) {
                  var Y = Z.format;
                  if (Y && Y.type) {
                    var q, _, ct = "";
                    if (Hr[Y.type] !== void 0)
                      q = "AFSpecial_Keystroke", _ = "AFSpecial_Format", ct = Hr[Y.type];
                    else {
                      var At = Y.type.charAt(0).toUpperCase() + Y.type.slice(1);
                      if (q = "AF" + At + "_Keystroke", _ = "AF" + At + "_Format", Y.type === "date")
                        q += "Ex", ct = String(Y.param);
                      else if (Y.type === "time")
                        ct = String(Y.param);
                      else if (Y.type === "number") {
                        var Qt = Object.assign({}, Rr.number, Y);
                        ct = String([String(Qt.nDec), Qt.sepComma ? "0" : "1", '"' + Qt.negStyle + '"', "null", '"' + Qt.currency + '"', String(Qt.currencyPrepend)].join(","));
                      } else if (Y.type === "percent") {
                        var ie = Object.assign({}, Rr.percent, Y);
                        ct = String([String(ie.nDec), ie.sepComma ? "0" : "1"].join(","));
                      }
                    }
                    Z.AA = Z.AA ? Z.AA : {}, Z.AA.K = {
                      S: "JavaScript",
                      JS: new String(q + "(" + ct + ");")
                    }, Z.AA.F = {
                      S: "JavaScript",
                      JS: new String(_ + "(" + ct + ");")
                    };
                  }
                  return delete Z.format, Z;
                },
                _resolveColors: function(Z) {
                  var Y = this._normalizeColor(Z.backgroundColor);
                  return Y && (Z.MK || (Z.MK = {}), Z.MK.BG = Y), Y = this._normalizeColor(Z.borderColor), Y && (Z.MK || (Z.MK = {}), Z.MK.BC = Y), delete Z.backgroundColor, delete Z.borderColor, Z;
                },
                _resolveFlags: function(Z) {
                  var Y = 0;
                  return Object.keys(Z).forEach(function(q) {
                    dr[q] && (Z[q] && (Y |= dr[q]), delete Z[q]);
                  }), Y !== 0 && (Z.Ff = Z.Ff ? Z.Ff : 0, Z.Ff |= Y), Z;
                },
                _resolveJustify: function(Z) {
                  var Y = 0;
                  return Z.align !== void 0 && (typeof lr[Z.align] == "number" && (Y = lr[Z.align]), delete Z.align), Y !== 0 && (Z.Q = Y), Z;
                },
                _resolveFont: function(Z) {
                  if (this._acroform.fonts[this._font.id] == null && (this._acroform.fonts[this._font.id] = this._font.ref()), this._acroform.defaultFont !== this._font.name) {
                    Z.DR = {
                      Font: {}
                    };
                    var Y = Z.fontSize || 0;
                    Z.DR.Font[this._font.id] = this._font.ref(), Z.DA = new String("/" + this._font.id + " " + Y + " Tf 0 g");
                  }
                  return Z;
                },
                _resolveStrings: function(Z) {
                  var Y = [];
                  function q(_) {
                    if (Array.isArray(_))
                      for (var ct = 0; ct < _.length; ct++)
                        typeof _[ct] == "string" ? Y.push(new String(_[ct])) : Y.push(_[ct]);
                  }
                  return q(Z.Opt), Z.select && (q(Z.select), delete Z.select), Y.length && (Z.Opt = Y), Object.keys(Tr).forEach(function(_) {
                    Z[_] !== void 0 && (Z[Tr[_]] = Z[_], delete Z[_]);
                  }), ["V", "DV"].forEach(function(_) {
                    typeof Z[_] == "string" && (Z[_] = new String(Z[_]));
                  }), Z.MK && Z.MK.CA && (Z.MK.CA = new String(Z.MK.CA)), Z.label && (Z.MK = Z.MK ? Z.MK : {}, Z.MK.CA = new String(Z.label), delete Z.label), Z;
                }
              }, Vr = {
                /**
                 * Embed contents of `src` in PDF
                 * @param {Buffer | ArrayBuffer | string} src input Buffer, ArrayBuffer, base64 encoded string or path to file
                 * @param {object} options
                 *  * options.name: filename to be shown in PDF, will use `src` if none set
                 *  * options.type: filetype to be shown in PDF
                 *  * options.description: description to be shown in PDF
                 *  * options.hidden: if true, do not add attachment to EmbeddedFiles dictionary. Useful for file attachment annotations
                 *  * options.creationDate: override creation date
                 *  * options.modifiedDate: override modified date
                 *  * options.relationship: Relationship between the PDF document and its attached file. Can be 'Alternative', 'Data', 'Source', 'Supplement' or 'Unspecified'.
                 * @returns filespec reference
                 */
                file: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  Y.name = Y.name || Z, Y.relationship = Y.relationship || "Unspecified";
                  var q = {
                    Type: "EmbeddedFile",
                    Params: {}
                  }, _;
                  if (!Z)
                    throw new Error("No src specified");
                  if (r.isBuffer(Z))
                    _ = Z;
                  else if (Z instanceof ArrayBuffer)
                    _ = r.from(new Uint8Array(Z));
                  else {
                    var ct;
                    if (ct = /^data:(.*?);base64,(.*)$/.exec(Z))
                      ct[1] && (q.Subtype = ct[1].replace("/", "#2F")), _ = r.from(ct[2], "base64");
                    else {
                      if (_ = F.readFileSync(Z), !_)
                        throw new Error("Could not read contents of file at filepath " + Z);
                      var At = F.statSync(Z), Qt = At.birthtime, ie = At.ctime;
                      q.Params.CreationDate = Qt, q.Params.ModDate = ie;
                    }
                  }
                  Y.creationDate instanceof Date && (q.Params.CreationDate = Y.creationDate), Y.modifiedDate instanceof Date && (q.Params.ModDate = Y.modifiedDate), Y.type && (q.Subtype = Y.type.replace("/", "#2F"));
                  var ge = h.default.MD5(h.default.lib.WordArray.create(new Uint8Array(_)));
                  q.Params.CheckSum = new String(ge), q.Params.Size = _.byteLength;
                  var xe;
                  this._fileRegistry || (this._fileRegistry = {});
                  var Ae = this._fileRegistry[Y.name];
                  Ae && tn(q, Ae) ? xe = Ae.ref : (xe = this.ref(q), xe.end(_), this._fileRegistry[Y.name] = Object.assign({}, q, {
                    ref: xe
                  }));
                  var Fe = {
                    Type: "Filespec",
                    AFRelationship: Y.relationship,
                    F: new String(Y.name),
                    EF: {
                      F: xe
                    },
                    UF: new String(Y.name)
                  };
                  Y.description && (Fe.Desc = new String(Y.description));
                  var Ne = this.ref(Fe);
                  return Ne.end(), Y.hidden || this.addNamedEmbeddedFile(Y.name, Ne), this._root.data.AF ? this._root.data.AF.push(Ne) : this._root.data.AF = [Ne], Ne;
                }
              };
              function tn(Tt, Z) {
                return Tt.Subtype === Z.Subtype && Tt.Params.CheckSum.toString() === Z.Params.CheckSum.toString() && Tt.Params.Size === Z.Params.Size && Tt.Params.CreationDate.getTime() === Z.Params.CreationDate.getTime() && (Tt.Params.ModDate === void 0 && Z.Params.ModDate === void 0 || Tt.Params.ModDate.getTime() === Z.Params.ModDate.getTime());
              }
              var Pn = {
                initPDFA: function(Z) {
                  Z.charAt(Z.length - 3) === "-" ? (this.subset_conformance = Z.charAt(Z.length - 1).toUpperCase(), this.subset = parseInt(Z.charAt(Z.length - 2))) : (this.subset_conformance = "B", this.subset = parseInt(Z.charAt(Z.length - 1)));
                },
                endSubset: function() {
                  this._addPdfaMetadata(), this._addColorOutputIntent();
                },
                _addColorOutputIntent: function() {
                  var Z = r("AAAL0AAAAAACAAAAbW50clJHQiBYWVogB98AAgAPAAAAAAAAYWNzcAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAPbWAAEAAAAA0y0AAAAAPQ6y3q6Tl76bZybOjApDzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQZGVzYwAAAUQAAABjYlhZWgAAAagAAAAUYlRSQwAAAbwAAAgMZ1RSQwAAAbwAAAgMclRSQwAAAbwAAAgMZG1kZAAACcgAAACIZ1hZWgAAClAAAAAUbHVtaQAACmQAAAAUbWVhcwAACngAAAAkYmtwdAAACpwAAAAUclhZWgAACrAAAAAUdGVjaAAACsQAAAAMdnVlZAAACtAAAACHd3RwdAAAC1gAAAAUY3BydAAAC2wAAAA3Y2hhZAAAC6QAAAAsZGVzYwAAAAAAAAAJc1JHQjIwMTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAAAkoAAAD4QAALbPY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t//9kZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi0xIERlZmF1bHQgUkdCIENvbG91ciBTcGFjZSAtIHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAAAAAUAAAAAAAAG1lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlhZWiAAAAAAAAAAngAAAKQAAACHWFlaIAAAAAAAAG+iAAA49QAAA5BzaWcgAAAAAENSVCBkZXNjAAAAAAAAAC1SZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDIDYxOTY2LTItMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPbWAAEAAAAA0y10ZXh0AAAAAENvcHlyaWdodCBJbnRlcm5hdGlvbmFsIENvbG9yIENvbnNvcnRpdW0sIDIwMTUAAHNmMzIAAAAAAAEMRAAABd////MmAAAHlAAA/Y////uh///9ogAAA9sAAMB1", "base64"), Y = this.ref({
                    Length: Z.length,
                    N: 3
                  });
                  Y.write(Z), Y.end();
                  var q = this.ref({
                    Type: "OutputIntent",
                    S: "GTS_PDFA1",
                    Info: new String("sRGB IEC61966-2.1"),
                    OutputConditionIdentifier: new String("sRGB IEC61966-2.1"),
                    DestOutputProfile: Y
                  });
                  q.end(), this._root.data.OutputIntents = [q];
                },
                _getPdfaid: function() {
                  return `
        <rdf:Description xmlns:pdfaid="http://www.aiim.org/pdfa/ns/id/" rdf:about="">
            <pdfaid:part>` + this.subset + `</pdfaid:part>
            <pdfaid:conformance>` + this.subset_conformance + `</pdfaid:conformance>
        </rdf:Description>
        `;
                },
                _addPdfaMetadata: function() {
                  this.appendXML(this._getPdfaid());
                }
              }, on = {
                initPDFUA: function() {
                  this.subset = 1;
                },
                endSubset: function() {
                  this._addPdfuaMetadata();
                },
                _addPdfuaMetadata: function() {
                  this.appendXML(this._getPdfuaid());
                },
                _getPdfuaid: function() {
                  return `
        <rdf:Description xmlns:pdfuaid="http://www.aiim.org/pdfua/ns/id/" rdf:about="">
            <pdfuaid:part>` + this.subset + `</pdfuaid:part>
        </rdf:Description>
        `;
                }
              }, Tn = {
                _importSubset: function(Z) {
                  Object.assign(this, Z);
                },
                initSubset: function(Z) {
                  switch (Z.subset) {
                    case "PDF/A-1":
                    case "PDF/A-1a":
                    case "PDF/A-1b":
                    case "PDF/A-2":
                    case "PDF/A-2a":
                    case "PDF/A-2b":
                    case "PDF/A-3":
                    case "PDF/A-3a":
                    case "PDF/A-3b":
                      this._importSubset(Pn), this.initPDFA(Z.subset);
                      break;
                    case "PDF/UA":
                      this._importSubset(on), this.initPDFUA();
                      break;
                  }
                }
              }, Gn = /* @__PURE__ */ function() {
                function Tt() {
                  this._metadata = `
        <?xpacket begin="\uFEFF" id="W5M0MpCehiHzreSzNTczkc9d"?>
            <x:xmpmeta xmlns:x="adobe:ns:meta/">
                <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
        `;
                }
                var Z = Tt.prototype;
                return Z._closeTags = function() {
                  this._metadata = this._metadata.concat(`
                </rdf:RDF>
            </x:xmpmeta>
        <?xpacket end="w"?>
        `);
                }, Z.append = function(q) {
                  var _ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
                  this._metadata = this._metadata.concat(q), _ && (this._metadata = this._metadata.concat(`
`));
                }, Z.getXML = function() {
                  return this._metadata;
                }, Z.getLength = function() {
                  return this._metadata.length;
                }, Z.end = function() {
                  this._closeTags(), this._metadata = this._metadata.trim();
                }, Tt;
              }(), ln = {
                initMetadata: function() {
                  this.metadata = new Gn();
                },
                appendXML: function(Z) {
                  var Y = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
                  this.metadata.append(Z, Y);
                },
                _addInfo: function() {
                  this.appendXML(`
        <rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
            <xmp:CreateDate>` + (this.info.CreationDate.toISOString().split(".")[0] + "Z") + `</xmp:CreateDate>
            <xmp:CreatorTool>` + this.info.Creator + `</xmp:CreatorTool>
        </rdf:Description>
        `), (this.info.Title || this.info.Author || this.info.Subject) && (this.appendXML(`
            <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">
            `), this.info.Title && this.appendXML(`
                <dc:title>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">` + this.info.Title + `</rdf:li>
                    </rdf:Alt>
                </dc:title>
                `), this.info.Author && this.appendXML(`
                <dc:creator>
                    <rdf:Seq>
                        <rdf:li>` + this.info.Author + `</rdf:li>
                    </rdf:Seq>
                </dc:creator>
                `), this.info.Subject && this.appendXML(`
                <dc:description>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">` + this.info.Subject + `</rdf:li>
                    </rdf:Alt>
                </dc:description>
                `), this.appendXML(`
            </rdf:Description>
            `)), this.appendXML(`
        <rdf:Description rdf:about="" xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
            <pdf:Producer>` + this.info.Creator + "</pdf:Producer>", !1), this.info.Keywords && this.appendXML(`
            <pdf:Keywords>` + this.info.Keywords + "</pdf:Keywords>", !1), this.appendXML(`
        </rdf:Description>
        `);
                },
                endMetadata: function() {
                  this._addInfo(), this.metadata.end(), this.version != 1.3 && (this.metadataRef = this.ref({
                    length: this.metadata.getLength(),
                    Type: "Metadata",
                    Subtype: "XML"
                  }), this.metadataRef.compress = !1, this.metadataRef.write(r.from(this.metadata.getXML(), "utf-8")), this.metadataRef.end(), this._root.data.Metadata = this.metadataRef);
                }
              }, dn = /* @__PURE__ */ function(Tt) {
                function Z() {
                  var q, _ = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                  switch (q = Tt.call(this, _) || this, q.options = _, _.pdfVersion) {
                    case "1.4":
                      q.version = 1.4;
                      break;
                    case "1.5":
                      q.version = 1.5;
                      break;
                    case "1.6":
                      q.version = 1.6;
                      break;
                    case "1.7":
                    case "1.7ext3":
                      q.version = 1.7;
                      break;
                    default:
                      q.version = 1.3;
                      break;
                  }
                  q.compress = q.options.compress != null ? q.options.compress : !0, q._pageBuffer = [], q._pageBufferStart = 0, q._offsets = [], q._waiting = 0, q._ended = !1, q._offset = 0;
                  var ct = q.ref({
                    Type: "Pages",
                    Count: 0,
                    Kids: []
                  }), At = q.ref({
                    Dests: new Dt()
                  });
                  if (q._root = q.ref({
                    Type: "Catalog",
                    Pages: ct,
                    Names: At
                  }), q.options.lang && (q._root.data.Lang = new String(q.options.lang)), q.page = null, q.initMetadata(), q.initColor(), q.initVector(), q.initFonts(_.font), q.initText(), q.initImages(), q.initOutline(), q.initMarkings(_), q.initSubset(_), q.info = {
                    Producer: "PDFKit",
                    Creator: "PDFKit",
                    CreationDate: /* @__PURE__ */ new Date()
                  }, q.options.info)
                    for (var Qt in q.options.info) {
                      var ie = q.options.info[Qt];
                      q.info[Qt] = ie;
                    }
                  return q.options.displayTitle && (q._root.data.ViewerPreferences = q.ref({
                    DisplayDocTitle: !0
                  })), q._id = be.generateFileID(q.info), q._security = be.create(q, _), q._write("%PDF-" + q.version), q._write("%Ã¿Ã¿Ã¿Ã¿"), q.options.autoFirstPage !== !1 && q.addPage(), q;
                }
                P(Z, Tt);
                var Y = Z.prototype;
                return Y.addPage = function(_) {
                  _ == null && (_ = this.options), this.options.bufferPages || this.flushPages(), this.page = new St(this, _), this._pageBuffer.push(this.page);
                  var ct = this._root.data.Pages.data;
                  return ct.Kids.push(this.page.dictionary), ct.Count++, this.x = this.page.margins.left, this.y = this.page.margins.top, this._ctm = [1, 0, 0, 1, 0, 0], this.transform(1, 0, 0, -1, 0, this.page.height), this.emit("pageAdded"), this;
                }, Y.continueOnNewPage = function(_) {
                  var ct = this.endPageMarkings(this.page);
                  return this.addPage(_), this.initPageMarkings(ct), this;
                }, Y.bufferedPageRange = function() {
                  return {
                    start: this._pageBufferStart,
                    count: this._pageBuffer.length
                  };
                }, Y.switchToPage = function(_) {
                  var ct;
                  if (!(ct = this._pageBuffer[_ - this._pageBufferStart]))
                    throw new Error("switchToPage(" + _ + ") out of bounds, current buffer covers pages " + this._pageBufferStart + " to " + (this._pageBufferStart + this._pageBuffer.length - 1));
                  return this.page = ct;
                }, Y.flushPages = function() {
                  var _ = this._pageBuffer;
                  this._pageBuffer = [], this._pageBufferStart += _.length;
                  for (var ct = E(_), At; !(At = ct()).done; ) {
                    var Qt = At.value;
                    this.endPageMarkings(Qt), Qt.end();
                  }
                }, Y.addNamedDestination = function(_) {
                  for (var ct = arguments.length, At = new Array(ct > 1 ? ct - 1 : 0), Qt = 1; Qt < ct; Qt++)
                    At[Qt - 1] = arguments[Qt];
                  At.length === 0 && (At = ["XYZ", null, null, null]), At[0] === "XYZ" && At[2] !== null && (At[2] = this.page.height - At[2]), At.unshift(this.page.dictionary), this._root.data.Names.data.Dests.add(_, At);
                }, Y.addNamedEmbeddedFile = function(_, ct) {
                  this._root.data.Names.data.EmbeddedFiles || (this._root.data.Names.data.EmbeddedFiles = new Dt({
                    limits: !1
                  })), this._root.data.Names.data.EmbeddedFiles.add(_, ct);
                }, Y.addNamedJavaScript = function(_, ct) {
                  this._root.data.Names.data.JavaScript || (this._root.data.Names.data.JavaScript = new Dt());
                  var At = {
                    JS: new String(ct),
                    S: "JavaScript"
                  };
                  this._root.data.Names.data.JavaScript.add(_, At);
                }, Y.ref = function(_) {
                  var ct = new nt(this, this._offsets.length + 1, _);
                  return this._offsets.push(null), this._waiting++, ct;
                }, Y._read = function() {
                }, Y._write = function(_) {
                  return r.isBuffer(_) || (_ = r.from(_ + `
`, "binary")), this.push(_), this._offset += _.length;
                }, Y.addContent = function(_) {
                  return this.page.write(_), this;
                }, Y._refEnd = function(_) {
                  if (this._offsets[_.id - 1] = _.offset, --this._waiting === 0 && this._ended)
                    return this._finalize(), this._ended = !1;
                }, Y.end = function() {
                  this.flushPages(), this._info = this.ref();
                  for (var _ in this.info) {
                    var ct = this.info[_];
                    typeof ct == "string" && (ct = new String(ct));
                    var At = this.ref(ct);
                    At.end(), this._info.data[_] = At;
                  }
                  this._info.end();
                  for (var Qt in this._fontFamilies) {
                    var ie = this._fontFamilies[Qt];
                    ie.finalize();
                  }
                  return this.endOutline(), this.endMarkings(), this.subset && this.endSubset(), this.endMetadata(), this._root.end(), this._root.data.Pages.end(), this._root.data.Names.end(), this.endAcroForm(), this._root.data.ViewerPreferences && this._root.data.ViewerPreferences.end(), this._security && this._security.end(), this._waiting === 0 ? this._finalize() : this._ended = !0;
                }, Y._finalize = function() {
                  var _ = this._offset;
                  this._write("xref"), this._write("0 " + (this._offsets.length + 1)), this._write("0000000000 65535 f ");
                  for (var ct = E(this._offsets), At; !(At = ct()).done; ) {
                    var Qt = At.value;
                    Qt = ("0000000000" + Qt).slice(-10), this._write(Qt + " 00000 n ");
                  }
                  var ie = {
                    Size: this._offsets.length + 1,
                    Root: this._root,
                    Info: this._info,
                    ID: [this._id, this._id]
                  };
                  return this._security && (ie.Encrypt = this._security.dictionary), this._write("trailer"), this._write(K.convert(ie)), this._write("startxref"), this._write("" + _), this._write("%%EOF"), this.push(null);
                }, Y.toString = function() {
                  return "[object PDFDocument]";
                }, Z;
              }(n.default.Readable), Lr = function(Z) {
                Object.assign(dn.prototype, Z);
              };
              Lr(ln), Lr(nn), Lr(Qn), Lr(zt), Lr(oe), Lr($e), Lr(or), Lr(ze), Lr(Je), Lr(Or), Lr(Vr), Lr(Tn), dn.LineWrapper = ee, d.default = dn;
            }
          ),
          /***/
          73751: (
            /***/
            function(f, d, t) {
              var i = t(45314), r = t(72022), n = r;
              typeof n.pdfMake == "undefined" && (n.pdfMake = i), f.exports = i;
            }
          ),
          /***/
          80182: (
            /***/
            function(f, d, t) {
              var i = t(9964);
              function r(S) {
                "@babel/helpers - typeof";
                return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(k) {
                  return typeof k;
                } : function(k) {
                  return k && typeof Symbol == "function" && k.constructor === Symbol && k !== Symbol.prototype ? "symbol" : typeof k;
                }, r(S);
              }
              function n(S, k) {
                for (var H = 0; H < k.length; H++) {
                  var it = k[H];
                  it.enumerable = it.enumerable || !1, it.configurable = !0, "value" in it && (it.writable = !0), Object.defineProperty(S, h(it.key), it);
                }
              }
              function o(S, k, H) {
                return k && n(S.prototype, k), H && n(S, H), Object.defineProperty(S, "prototype", { writable: !1 }), S;
              }
              function h(S) {
                var k = u(S, "string");
                return r(k) === "symbol" ? k : String(k);
              }
              function u(S, k) {
                if (r(S) !== "object" || S === null)
                  return S;
                var H = S[Symbol.toPrimitive];
                if (H !== void 0) {
                  var it = H.call(S, k || "default");
                  if (r(it) !== "object")
                    return it;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (k === "string" ? String : Number)(S);
              }
              function l(S, k) {
                if (!(S instanceof k))
                  throw new TypeError("Cannot call a class as a function");
              }
              var c = t(35403), s = c.codes, v = s.ERR_AMBIGUOUS_ARGUMENT, y = s.ERR_INVALID_ARG_TYPE, x = s.ERR_INVALID_ARG_VALUE, e = s.ERR_INVALID_RETURN_VALUE, b = s.ERR_MISSING_ARGS, A = t(85416), P = t(7187), D = P.inspect, E = t(7187).types, T = E.isPromise, C = E.isRegExp, F = t(37596)(), m = t(89636)(), I = t(67913)("RegExp.prototype.test"), O, M;
              function N() {
                var S = t(86781);
                O = S.isDeepEqual, M = S.isDeepStrictEqual;
              }
              var G = !1, ot = f.exports = St, K = {};
              function nt(S) {
                throw S.message instanceof Error ? S.message : new A(S);
              }
              function xt(S, k, H, it, et) {
                var tt = arguments.length, Ct;
                if (tt === 0)
                  Ct = "Failed";
                else if (tt === 1)
                  H = S, S = void 0;
                else {
                  if (G === !1) {
                    G = !0;
                    var Rt = i.emitWarning ? i.emitWarning : console.warn.bind(console);
                    Rt("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094");
                  }
                  tt === 2 && (it = "!=");
                }
                if (H instanceof Error)
                  throw H;
                var Kt = {
                  actual: S,
                  expected: k,
                  operator: it === void 0 ? "fail" : it,
                  stackStartFn: et || xt
                };
                H !== void 0 && (Kt.message = H);
                var Gt = new A(Kt);
                throw Ct && (Gt.message = Ct, Gt.generatedMessage = !0), Gt;
              }
              ot.fail = xt, ot.AssertionError = A;
              function bt(S, k, H, it) {
                if (!H) {
                  var et = !1;
                  if (k === 0)
                    et = !0, it = "No value argument passed to `assert.ok()`";
                  else if (it instanceof Error)
                    throw it;
                  var tt = new A({
                    actual: H,
                    expected: !0,
                    message: it,
                    operator: "==",
                    stackStartFn: S
                  });
                  throw tt.generatedMessage = et, tt;
                }
              }
              function St() {
                for (var S = arguments.length, k = new Array(S), H = 0; H < S; H++)
                  k[H] = arguments[H];
                bt.apply(void 0, [St, k.length].concat(k));
              }
              ot.ok = St, ot.equal = function S(k, H, it) {
                if (arguments.length < 2)
                  throw new b("actual", "expected");
                k != H && nt({
                  actual: k,
                  expected: H,
                  message: it,
                  operator: "==",
                  stackStartFn: S
                });
              }, ot.notEqual = function S(k, H, it) {
                if (arguments.length < 2)
                  throw new b("actual", "expected");
                k == H && nt({
                  actual: k,
                  expected: H,
                  message: it,
                  operator: "!=",
                  stackStartFn: S
                });
              }, ot.deepEqual = function S(k, H, it) {
                if (arguments.length < 2)
                  throw new b("actual", "expected");
                O === void 0 && N(), O(k, H) || nt({
                  actual: k,
                  expected: H,
                  message: it,
                  operator: "deepEqual",
                  stackStartFn: S
                });
              }, ot.notDeepEqual = function S(k, H, it) {
                if (arguments.length < 2)
                  throw new b("actual", "expected");
                O === void 0 && N(), O(k, H) && nt({
                  actual: k,
                  expected: H,
                  message: it,
                  operator: "notDeepEqual",
                  stackStartFn: S
                });
              }, ot.deepStrictEqual = function S(k, H, it) {
                if (arguments.length < 2)
                  throw new b("actual", "expected");
                O === void 0 && N(), M(k, H) || nt({
                  actual: k,
                  expected: H,
                  message: it,
                  operator: "deepStrictEqual",
                  stackStartFn: S
                });
              }, ot.notDeepStrictEqual = Dt;
              function Dt(S, k, H) {
                if (arguments.length < 2)
                  throw new b("actual", "expected");
                O === void 0 && N(), M(S, k) && nt({
                  actual: S,
                  expected: k,
                  message: H,
                  operator: "notDeepStrictEqual",
                  stackStartFn: Dt
                });
              }
              ot.strictEqual = function S(k, H, it) {
                if (arguments.length < 2)
                  throw new b("actual", "expected");
                m(k, H) || nt({
                  actual: k,
                  expected: H,
                  message: it,
                  operator: "strictEqual",
                  stackStartFn: S
                });
              }, ot.notStrictEqual = function S(k, H, it) {
                if (arguments.length < 2)
                  throw new b("actual", "expected");
                m(k, H) && nt({
                  actual: k,
                  expected: H,
                  message: it,
                  operator: "notStrictEqual",
                  stackStartFn: S
                });
              };
              var Lt = /* @__PURE__ */ o(function S(k, H, it) {
                var et = this;
                l(this, S), H.forEach(function(tt) {
                  tt in k && (it !== void 0 && typeof it[tt] == "string" && C(k[tt]) && I(k[tt], it[tt]) ? et[tt] = it[tt] : et[tt] = k[tt]);
                });
              });
              function jt(S, k, H, it, et, tt) {
                if (!(H in S) || !M(S[H], k[H])) {
                  if (!it) {
                    var Ct = new Lt(S, et), Rt = new Lt(k, et, S), Kt = new A({
                      actual: Ct,
                      expected: Rt,
                      operator: "deepStrictEqual",
                      stackStartFn: tt
                    });
                    throw Kt.actual = S, Kt.expected = k, Kt.operator = tt.name, Kt;
                  }
                  nt({
                    actual: S,
                    expected: k,
                    message: it,
                    operator: tt.name,
                    stackStartFn: tt
                  });
                }
              }
              function J(S, k, H, it) {
                if (typeof k != "function") {
                  if (C(k))
                    return I(k, S);
                  if (arguments.length === 2)
                    throw new y("expected", ["Function", "RegExp"], k);
                  if (r(S) !== "object" || S === null) {
                    var et = new A({
                      actual: S,
                      expected: k,
                      message: H,
                      operator: "deepStrictEqual",
                      stackStartFn: it
                    });
                    throw et.operator = it.name, et;
                  }
                  var tt = Object.keys(k);
                  if (k instanceof Error)
                    tt.push("name", "message");
                  else if (tt.length === 0)
                    throw new x("error", k, "may not be an empty object");
                  return O === void 0 && N(), tt.forEach(function(Ct) {
                    typeof S[Ct] == "string" && C(k[Ct]) && I(k[Ct], S[Ct]) || jt(S, k, Ct, H, tt, it);
                  }), !0;
                }
                return k.prototype !== void 0 && S instanceof k ? !0 : Error.isPrototypeOf(k) ? !1 : k.call({}, S) === !0;
              }
              function yt(S) {
                if (typeof S != "function")
                  throw new y("fn", "Function", S);
                try {
                  S();
                } catch (k) {
                  return k;
                }
                return K;
              }
              function ut(S) {
                return T(S) || S !== null && r(S) === "object" && typeof S.then == "function" && typeof S.catch == "function";
              }
              function st(S) {
                return Promise.resolve().then(function() {
                  var k;
                  if (typeof S == "function") {
                    if (k = S(), !ut(k))
                      throw new e("instance of Promise", "promiseFn", k);
                  } else if (ut(S))
                    k = S;
                  else
                    throw new y("promiseFn", ["Function", "Promise"], S);
                  return Promise.resolve().then(function() {
                    return k;
                  }).then(function() {
                    return K;
                  }).catch(function(H) {
                    return H;
                  });
                });
              }
              function wt(S, k, H, it) {
                if (typeof H == "string") {
                  if (arguments.length === 4)
                    throw new y("error", ["Object", "Error", "Function", "RegExp"], H);
                  if (r(k) === "object" && k !== null) {
                    if (k.message === H)
                      throw new v("error/message", 'The error message "'.concat(k.message, '" is identical to the message.'));
                  } else if (k === H)
                    throw new v("error/message", 'The error "'.concat(k, '" is identical to the message.'));
                  it = H, H = void 0;
                } else if (H != null && r(H) !== "object" && typeof H != "function")
                  throw new y("error", ["Object", "Error", "Function", "RegExp"], H);
                if (k === K) {
                  var et = "";
                  H && H.name && (et += " (".concat(H.name, ")")), et += it ? ": ".concat(it) : ".";
                  var tt = S.name === "rejects" ? "rejection" : "exception";
                  nt({
                    actual: void 0,
                    expected: H,
                    operator: S.name,
                    message: "Missing expected ".concat(tt).concat(et),
                    stackStartFn: S
                  });
                }
                if (H && !J(k, H, it, S))
                  throw k;
              }
              function V(S, k, H, it) {
                if (k !== K) {
                  if (typeof H == "string" && (it = H, H = void 0), !H || J(k, H)) {
                    var et = it ? ": ".concat(it) : ".", tt = S.name === "doesNotReject" ? "rejection" : "exception";
                    nt({
                      actual: k,
                      expected: H,
                      operator: S.name,
                      message: "Got unwanted ".concat(tt).concat(et, `
`) + 'Actual message: "'.concat(k && k.message, '"'),
                      stackStartFn: S
                    });
                  }
                  throw k;
                }
              }
              ot.throws = function S(k) {
                for (var H = arguments.length, it = new Array(H > 1 ? H - 1 : 0), et = 1; et < H; et++)
                  it[et - 1] = arguments[et];
                wt.apply(void 0, [S, yt(k)].concat(it));
              }, ot.rejects = function S(k) {
                for (var H = arguments.length, it = new Array(H > 1 ? H - 1 : 0), et = 1; et < H; et++)
                  it[et - 1] = arguments[et];
                return st(k).then(function(tt) {
                  return wt.apply(void 0, [S, tt].concat(it));
                });
              }, ot.doesNotThrow = function S(k) {
                for (var H = arguments.length, it = new Array(H > 1 ? H - 1 : 0), et = 1; et < H; et++)
                  it[et - 1] = arguments[et];
                V.apply(void 0, [S, yt(k)].concat(it));
              }, ot.doesNotReject = function S(k) {
                for (var H = arguments.length, it = new Array(H > 1 ? H - 1 : 0), et = 1; et < H; et++)
                  it[et - 1] = arguments[et];
                return st(k).then(function(tt) {
                  return V.apply(void 0, [S, tt].concat(it));
                });
              }, ot.ifError = function S(k) {
                if (k != null) {
                  var H = "ifError got unwanted exception: ";
                  r(k) === "object" && typeof k.message == "string" ? k.message.length === 0 && k.constructor ? H += k.constructor.name : H += k.message : H += D(k);
                  var it = new A({
                    actual: k,
                    expected: null,
                    operator: "ifError",
                    message: H,
                    stackStartFn: S
                  }), et = k.stack;
                  if (typeof et == "string") {
                    var tt = et.split(`
`);
                    tt.shift();
                    for (var Ct = it.stack.split(`
`), Rt = 0; Rt < tt.length; Rt++) {
                      var Kt = Ct.indexOf(tt[Rt]);
                      if (Kt !== -1) {
                        Ct = Ct.slice(0, Kt);
                        break;
                      }
                    }
                    it.stack = "".concat(Ct.join(`
`), `
`).concat(tt.join(`
`));
                  }
                  throw it;
                }
              };
              function Ft(S, k, H, it, et) {
                if (!C(k))
                  throw new y("regexp", "RegExp", k);
                var tt = et === "match";
                if (typeof S != "string" || I(k, S) !== tt) {
                  if (H instanceof Error)
                    throw H;
                  var Ct = !H;
                  H = H || (typeof S != "string" ? 'The "string" argument must be of type string. Received type ' + "".concat(r(S), " (").concat(D(S), ")") : (tt ? "The input did not match the regular expression " : "The input was expected to not match the regular expression ") + "".concat(D(k), `. Input:

`).concat(D(S), `
`));
                  var Rt = new A({
                    actual: S,
                    expected: k,
                    message: H,
                    operator: et,
                    stackStartFn: it
                  });
                  throw Rt.generatedMessage = Ct, Rt;
                }
              }
              ot.match = function S(k, H, it) {
                Ft(k, H, it, S, "match");
              }, ot.doesNotMatch = function S(k, H, it) {
                Ft(k, H, it, S, "doesNotMatch");
              };
              function U() {
                for (var S = arguments.length, k = new Array(S), H = 0; H < S; H++)
                  k[H] = arguments[H];
                bt.apply(void 0, [U, k.length].concat(k));
              }
              ot.strict = F(U, ot, {
                equal: ot.strictEqual,
                deepEqual: ot.deepStrictEqual,
                notEqual: ot.notStrictEqual,
                notDeepEqual: ot.notDeepStrictEqual
              }), ot.strict.strict = ot.strict;
            }
          ),
          /***/
          85416: (
            /***/
            function(f, d, t) {
              var i = t(9964);
              function r(J, yt) {
                var ut = Object.keys(J);
                if (Object.getOwnPropertySymbols) {
                  var st = Object.getOwnPropertySymbols(J);
                  yt && (st = st.filter(function(wt) {
                    return Object.getOwnPropertyDescriptor(J, wt).enumerable;
                  })), ut.push.apply(ut, st);
                }
                return ut;
              }
              function n(J) {
                for (var yt = 1; yt < arguments.length; yt++) {
                  var ut = arguments[yt] != null ? arguments[yt] : {};
                  yt % 2 ? r(Object(ut), !0).forEach(function(st) {
                    o(J, st, ut[st]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(J, Object.getOwnPropertyDescriptors(ut)) : r(Object(ut)).forEach(function(st) {
                    Object.defineProperty(J, st, Object.getOwnPropertyDescriptor(ut, st));
                  });
                }
                return J;
              }
              function o(J, yt, ut) {
                return yt = c(yt), yt in J ? Object.defineProperty(J, yt, { value: ut, enumerable: !0, configurable: !0, writable: !0 }) : J[yt] = ut, J;
              }
              function h(J, yt) {
                if (!(J instanceof yt))
                  throw new TypeError("Cannot call a class as a function");
              }
              function u(J, yt) {
                for (var ut = 0; ut < yt.length; ut++) {
                  var st = yt[ut];
                  st.enumerable = st.enumerable || !1, st.configurable = !0, "value" in st && (st.writable = !0), Object.defineProperty(J, c(st.key), st);
                }
              }
              function l(J, yt, ut) {
                return yt && u(J.prototype, yt), ut && u(J, ut), Object.defineProperty(J, "prototype", { writable: !1 }), J;
              }
              function c(J) {
                var yt = s(J, "string");
                return C(yt) === "symbol" ? yt : String(yt);
              }
              function s(J, yt) {
                if (C(J) !== "object" || J === null)
                  return J;
                var ut = J[Symbol.toPrimitive];
                if (ut !== void 0) {
                  var st = ut.call(J, yt || "default");
                  if (C(st) !== "object")
                    return st;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (yt === "string" ? String : Number)(J);
              }
              function v(J, yt) {
                if (typeof yt != "function" && yt !== null)
                  throw new TypeError("Super expression must either be null or a function");
                J.prototype = Object.create(yt && yt.prototype, { constructor: { value: J, writable: !0, configurable: !0 } }), Object.defineProperty(J, "prototype", { writable: !1 }), yt && E(J, yt);
              }
              function y(J) {
                var yt = P();
                return function() {
                  var st = T(J), wt;
                  if (yt) {
                    var V = T(this).constructor;
                    wt = Reflect.construct(st, arguments, V);
                  } else
                    wt = st.apply(this, arguments);
                  return x(this, wt);
                };
              }
              function x(J, yt) {
                if (yt && (C(yt) === "object" || typeof yt == "function"))
                  return yt;
                if (yt !== void 0)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return e(J);
              }
              function e(J) {
                if (J === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return J;
              }
              function b(J) {
                var yt = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
                return b = function(st) {
                  if (st === null || !D(st))
                    return st;
                  if (typeof st != "function")
                    throw new TypeError("Super expression must either be null or a function");
                  if (typeof yt != "undefined") {
                    if (yt.has(st))
                      return yt.get(st);
                    yt.set(st, wt);
                  }
                  function wt() {
                    return A(st, arguments, T(this).constructor);
                  }
                  return wt.prototype = Object.create(st.prototype, { constructor: { value: wt, enumerable: !1, writable: !0, configurable: !0 } }), E(wt, st);
                }, b(J);
              }
              function A(J, yt, ut) {
                return P() ? A = Reflect.construct.bind() : A = function(wt, V, Ft) {
                  var U = [null];
                  U.push.apply(U, V);
                  var S = Function.bind.apply(wt, U), k = new S();
                  return Ft && E(k, Ft.prototype), k;
                }, A.apply(null, arguments);
              }
              function P() {
                if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), !0;
                } catch (J) {
                  return !1;
                }
              }
              function D(J) {
                return Function.toString.call(J).indexOf("[native code]") !== -1;
              }
              function E(J, yt) {
                return E = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(st, wt) {
                  return st.__proto__ = wt, st;
                }, E(J, yt);
              }
              function T(J) {
                return T = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ut) {
                  return ut.__proto__ || Object.getPrototypeOf(ut);
                }, T(J);
              }
              function C(J) {
                "@babel/helpers - typeof";
                return C = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(yt) {
                  return typeof yt;
                } : function(yt) {
                  return yt && typeof Symbol == "function" && yt.constructor === Symbol && yt !== Symbol.prototype ? "symbol" : typeof yt;
                }, C(J);
              }
              var F = t(7187), m = F.inspect, I = t(35403), O = I.codes.ERR_INVALID_ARG_TYPE;
              function M(J, yt, ut) {
                return (ut === void 0 || ut > J.length) && (ut = J.length), J.substring(ut - yt.length, ut) === yt;
              }
              function N(J, yt) {
                if (yt = Math.floor(yt), J.length == 0 || yt == 0)
                  return "";
                var ut = J.length * yt;
                for (yt = Math.floor(Math.log(yt) / Math.log(2)); yt; )
                  J += J, yt--;
                return J += J.substring(0, ut - J.length), J;
              }
              var G = "", ot = "", K = "", nt = "", xt = {
                deepStrictEqual: "Expected values to be strictly deep-equal:",
                strictEqual: "Expected values to be strictly equal:",
                strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
                deepEqual: "Expected values to be loosely deep-equal:",
                equal: "Expected values to be loosely equal:",
                notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
                notStrictEqual: 'Expected "actual" to be strictly unequal to:',
                notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
                notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
                notEqual: 'Expected "actual" to be loosely unequal to:',
                notIdentical: "Values identical but not reference-equal:"
              }, bt = 10;
              function St(J) {
                var yt = Object.keys(J), ut = Object.create(Object.getPrototypeOf(J));
                return yt.forEach(function(st) {
                  ut[st] = J[st];
                }), Object.defineProperty(ut, "message", {
                  value: J.message
                }), ut;
              }
              function Dt(J) {
                return m(J, {
                  compact: !1,
                  customInspect: !1,
                  depth: 1e3,
                  maxArrayLength: 1 / 0,
                  // Assert compares only enumerable properties (with a few exceptions).
                  showHidden: !1,
                  // Having a long line as error is better than wrapping the line for
                  // comparison for now.
                  // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we
                  // have meta information about the inspected properties (i.e., know where
                  // in what line the property starts and ends).
                  breakLength: 1 / 0,
                  // Assert does not detect proxies currently.
                  showProxy: !1,
                  sorted: !0,
                  // Inspect getters as we also check them when comparing entries.
                  getters: !0
                });
              }
              function Lt(J, yt, ut) {
                var st = "", wt = "", V = 0, Ft = "", U = !1, S = Dt(J), k = S.split(`
`), H = Dt(yt).split(`
`), it = 0, et = "";
                if (ut === "strictEqual" && C(J) === "object" && C(yt) === "object" && J !== null && yt !== null && (ut = "strictEqualObject"), k.length === 1 && H.length === 1 && k[0] !== H[0]) {
                  var tt = k[0].length + H[0].length;
                  if (tt <= bt) {
                    if ((C(J) !== "object" || J === null) && (C(yt) !== "object" || yt === null) && (J !== 0 || yt !== 0))
                      return "".concat(xt[ut], `

`) + "".concat(k[0], " !== ").concat(H[0], `
`);
                  } else if (ut !== "strictEqualObject") {
                    var Ct = i.stderr && i.stderr.isTTY ? i.stderr.columns : 80;
                    if (tt < Ct) {
                      for (; k[0][it] === H[0][it]; )
                        it++;
                      it > 2 && (et = `
  `.concat(N(" ", it), "^"), it = 0);
                    }
                  }
                }
                for (var Rt = k[k.length - 1], Kt = H[H.length - 1]; Rt === Kt && (it++ < 2 ? Ft = `
  `.concat(Rt).concat(Ft) : st = Rt, k.pop(), H.pop(), !(k.length === 0 || H.length === 0)); )
                  Rt = k[k.length - 1], Kt = H[H.length - 1];
                var Gt = Math.max(k.length, H.length);
                if (Gt === 0) {
                  var It = S.split(`
`);
                  if (It.length > 30)
                    for (It[26] = "".concat(G, "...").concat(nt); It.length > 27; )
                      It.pop();
                  return "".concat(xt.notIdentical, `

`).concat(It.join(`
`), `
`);
                }
                it > 3 && (Ft = `
`.concat(G, "...").concat(nt).concat(Ft), U = !0), st !== "" && (Ft = `
  `.concat(st).concat(Ft), st = "");
                var re = 0, be = xt[ut] + `
`.concat(ot, "+ actual").concat(nt, " ").concat(K, "- expected").concat(nt), me = " ".concat(G, "...").concat(nt, " Lines skipped");
                for (it = 0; it < Gt; it++) {
                  var le = it - V;
                  if (k.length < it + 1)
                    le > 1 && it > 2 && (le > 4 ? (wt += `
`.concat(G, "...").concat(nt), U = !0) : le > 3 && (wt += `
  `.concat(H[it - 2]), re++), wt += `
  `.concat(H[it - 1]), re++), V = it, st += `
`.concat(K, "-").concat(nt, " ").concat(H[it]), re++;
                  else if (H.length < it + 1)
                    le > 1 && it > 2 && (le > 4 ? (wt += `
`.concat(G, "...").concat(nt), U = !0) : le > 3 && (wt += `
  `.concat(k[it - 2]), re++), wt += `
  `.concat(k[it - 1]), re++), V = it, wt += `
`.concat(ot, "+").concat(nt, " ").concat(k[it]), re++;
                  else {
                    var Se = H[it], Wt = k[it], $t = Wt !== Se && (!M(Wt, ",") || Wt.slice(0, -1) !== Se);
                    $t && M(Se, ",") && Se.slice(0, -1) === Wt && ($t = !1, Wt += ","), $t ? (le > 1 && it > 2 && (le > 4 ? (wt += `
`.concat(G, "...").concat(nt), U = !0) : le > 3 && (wt += `
  `.concat(k[it - 2]), re++), wt += `
  `.concat(k[it - 1]), re++), V = it, wt += `
`.concat(ot, "+").concat(nt, " ").concat(Wt), st += `
`.concat(K, "-").concat(nt, " ").concat(Se), re += 2) : (wt += st, st = "", (le === 1 || it === 0) && (wt += `
  `.concat(Wt), re++));
                  }
                  if (re > 20 && it < Gt - 2)
                    return "".concat(be).concat(me, `
`).concat(wt, `
`).concat(G, "...").concat(nt).concat(st, `
`) + "".concat(G, "...").concat(nt);
                }
                return "".concat(be).concat(U ? me : "", `
`).concat(wt).concat(st).concat(Ft).concat(et);
              }
              var jt = /* @__PURE__ */ function(J, yt) {
                v(st, J);
                var ut = y(st);
                function st(wt) {
                  var V;
                  if (h(this, st), C(wt) !== "object" || wt === null)
                    throw new O("options", "Object", wt);
                  var Ft = wt.message, U = wt.operator, S = wt.stackStartFn, k = wt.actual, H = wt.expected, it = Error.stackTraceLimit;
                  if (Error.stackTraceLimit = 0, Ft != null)
                    V = ut.call(this, String(Ft));
                  else if (i.stderr && i.stderr.isTTY && (i.stderr && i.stderr.getColorDepth && i.stderr.getColorDepth() !== 1 ? (G = "\x1B[34m", ot = "\x1B[32m", nt = "\x1B[39m", K = "\x1B[31m") : (G = "", ot = "", nt = "", K = "")), C(k) === "object" && k !== null && C(H) === "object" && H !== null && "stack" in k && k instanceof Error && "stack" in H && H instanceof Error && (k = St(k), H = St(H)), U === "deepStrictEqual" || U === "strictEqual")
                    V = ut.call(this, Lt(k, H, U));
                  else if (U === "notDeepStrictEqual" || U === "notStrictEqual") {
                    var et = xt[U], tt = Dt(k).split(`
`);
                    if (U === "notStrictEqual" && C(k) === "object" && k !== null && (et = xt.notStrictEqualObject), tt.length > 30)
                      for (tt[26] = "".concat(G, "...").concat(nt); tt.length > 27; )
                        tt.pop();
                    tt.length === 1 ? V = ut.call(this, "".concat(et, " ").concat(tt[0])) : V = ut.call(this, "".concat(et, `

`).concat(tt.join(`
`), `
`));
                  } else {
                    var Ct = Dt(k), Rt = "", Kt = xt[U];
                    U === "notDeepEqual" || U === "notEqual" ? (Ct = "".concat(xt[U], `

`).concat(Ct), Ct.length > 1024 && (Ct = "".concat(Ct.slice(0, 1021), "..."))) : (Rt = "".concat(Dt(H)), Ct.length > 512 && (Ct = "".concat(Ct.slice(0, 509), "...")), Rt.length > 512 && (Rt = "".concat(Rt.slice(0, 509), "...")), U === "deepEqual" || U === "equal" ? Ct = "".concat(Kt, `

`).concat(Ct, `

should equal

`) : Rt = " ".concat(U, " ").concat(Rt)), V = ut.call(this, "".concat(Ct).concat(Rt));
                  }
                  return Error.stackTraceLimit = it, V.generatedMessage = !Ft, Object.defineProperty(e(V), "name", {
                    value: "AssertionError [ERR_ASSERTION]",
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                  }), V.code = "ERR_ASSERTION", V.actual = k, V.expected = H, V.operator = U, Error.captureStackTrace && Error.captureStackTrace(e(V), S), V.stack, V.name = "AssertionError", x(V);
                }
                return l(st, [{
                  key: "toString",
                  value: function() {
                    return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
                  }
                }, {
                  key: yt,
                  value: function(V, Ft) {
                    return m(this, n(n({}, Ft), {}, {
                      customInspect: !1,
                      depth: 0
                    }));
                  }
                }]), st;
              }(/* @__PURE__ */ b(Error), m.custom);
              f.exports = jt;
            }
          ),
          /***/
          35403: (
            /***/
            function(f, d, t) {
              function i(m) {
                "@babel/helpers - typeof";
                return i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(I) {
                  return typeof I;
                } : function(I) {
                  return I && typeof Symbol == "function" && I.constructor === Symbol && I !== Symbol.prototype ? "symbol" : typeof I;
                }, i(m);
              }
              function r(m, I) {
                for (var O = 0; O < I.length; O++) {
                  var M = I[O];
                  M.enumerable = M.enumerable || !1, M.configurable = !0, "value" in M && (M.writable = !0), Object.defineProperty(m, o(M.key), M);
                }
              }
              function n(m, I, O) {
                return I && r(m.prototype, I), O && r(m, O), Object.defineProperty(m, "prototype", { writable: !1 }), m;
              }
              function o(m) {
                var I = h(m, "string");
                return i(I) === "symbol" ? I : String(I);
              }
              function h(m, I) {
                if (i(m) !== "object" || m === null)
                  return m;
                var O = m[Symbol.toPrimitive];
                if (O !== void 0) {
                  var M = O.call(m, I || "default");
                  if (i(M) !== "object")
                    return M;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (I === "string" ? String : Number)(m);
              }
              function u(m, I) {
                if (!(m instanceof I))
                  throw new TypeError("Cannot call a class as a function");
              }
              function l(m, I) {
                if (typeof I != "function" && I !== null)
                  throw new TypeError("Super expression must either be null or a function");
                m.prototype = Object.create(I && I.prototype, { constructor: { value: m, writable: !0, configurable: !0 } }), Object.defineProperty(m, "prototype", { writable: !1 }), I && c(m, I);
              }
              function c(m, I) {
                return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(M, N) {
                  return M.__proto__ = N, M;
                }, c(m, I);
              }
              function s(m) {
                var I = x();
                return function() {
                  var M = e(m), N;
                  if (I) {
                    var G = e(this).constructor;
                    N = Reflect.construct(M, arguments, G);
                  } else
                    N = M.apply(this, arguments);
                  return v(this, N);
                };
              }
              function v(m, I) {
                if (I && (i(I) === "object" || typeof I == "function"))
                  return I;
                if (I !== void 0)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return y(m);
              }
              function y(m) {
                if (m === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return m;
              }
              function x() {
                if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), !0;
                } catch (m) {
                  return !1;
                }
              }
              function e(m) {
                return e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(O) {
                  return O.__proto__ || Object.getPrototypeOf(O);
                }, e(m);
              }
              var b = {}, A, P;
              function D(m, I, O) {
                O || (O = Error);
                function M(G, ot, K) {
                  return typeof I == "string" ? I : I(G, ot, K);
                }
                var N = /* @__PURE__ */ function(G) {
                  l(K, G);
                  var ot = s(K);
                  function K(nt, xt, bt) {
                    var St;
                    return u(this, K), St = ot.call(this, M(nt, xt, bt)), St.code = m, St;
                  }
                  return n(K);
                }(O);
                b[m] = N;
              }
              function E(m, I) {
                if (Array.isArray(m)) {
                  var O = m.length;
                  return m = m.map(function(M) {
                    return String(M);
                  }), O > 2 ? "one of ".concat(I, " ").concat(m.slice(0, O - 1).join(", "), ", or ") + m[O - 1] : O === 2 ? "one of ".concat(I, " ").concat(m[0], " or ").concat(m[1]) : "of ".concat(I, " ").concat(m[0]);
                } else
                  return "of ".concat(I, " ").concat(String(m));
              }
              function T(m, I, O) {
                return m.substr(!O || O < 0 ? 0 : +O, I.length) === I;
              }
              function C(m, I, O) {
                return (O === void 0 || O > m.length) && (O = m.length), m.substring(O - I.length, O) === I;
              }
              function F(m, I, O) {
                return typeof O != "number" && (O = 0), O + I.length > m.length ? !1 : m.indexOf(I, O) !== -1;
              }
              D("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), D("ERR_INVALID_ARG_TYPE", function(m, I, O) {
                A === void 0 && (A = t(80182)), A(typeof m == "string", "'name' must be a string");
                var M;
                typeof I == "string" && T(I, "not ") ? (M = "must not be", I = I.replace(/^not /, "")) : M = "must be";
                var N;
                if (C(m, " argument"))
                  N = "The ".concat(m, " ").concat(M, " ").concat(E(I, "type"));
                else {
                  var G = F(m, ".") ? "property" : "argument";
                  N = 'The "'.concat(m, '" ').concat(G, " ").concat(M, " ").concat(E(I, "type"));
                }
                return N += ". Received type ".concat(i(O)), N;
              }, TypeError), D("ERR_INVALID_ARG_VALUE", function(m, I) {
                var O = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "is invalid";
                P === void 0 && (P = t(7187));
                var M = P.inspect(I);
                return M.length > 128 && (M = "".concat(M.slice(0, 128), "...")), "The argument '".concat(m, "' ").concat(O, ". Received ").concat(M);
              }, TypeError), D("ERR_INVALID_RETURN_VALUE", function(m, I, O) {
                var M;
                return O && O.constructor && O.constructor.name ? M = "instance of ".concat(O.constructor.name) : M = "type ".concat(i(O)), "Expected ".concat(m, ' to be returned from the "').concat(I, '"') + " function but got ".concat(M, ".");
              }, TypeError), D("ERR_MISSING_ARGS", function() {
                for (var m = arguments.length, I = new Array(m), O = 0; O < m; O++)
                  I[O] = arguments[O];
                A === void 0 && (A = t(80182)), A(I.length > 0, "At least one arg needs to be specified");
                var M = "The ", N = I.length;
                switch (I = I.map(function(G) {
                  return '"'.concat(G, '"');
                }), N) {
                  case 1:
                    M += "".concat(I[0], " argument");
                    break;
                  case 2:
                    M += "".concat(I[0], " and ").concat(I[1], " arguments");
                    break;
                  default:
                    M += I.slice(0, N - 1).join(", "), M += ", and ".concat(I[N - 1], " arguments");
                    break;
                }
                return "".concat(M, " must be specified");
              }, TypeError), f.exports.codes = b;
            }
          ),
          /***/
          86781: (
            /***/
            function(f, d, t) {
              function i(Wt, $t) {
                return u(Wt) || h(Wt, $t) || n(Wt, $t) || r();
              }
              function r() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function n(Wt, $t) {
                if (Wt) {
                  if (typeof Wt == "string")
                    return o(Wt, $t);
                  var ue = Object.prototype.toString.call(Wt).slice(8, -1);
                  if (ue === "Object" && Wt.constructor && (ue = Wt.constructor.name), ue === "Map" || ue === "Set")
                    return Array.from(Wt);
                  if (ue === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ue))
                    return o(Wt, $t);
                }
              }
              function o(Wt, $t) {
                ($t == null || $t > Wt.length) && ($t = Wt.length);
                for (var ue = 0, he = new Array($t); ue < $t; ue++)
                  he[ue] = Wt[ue];
                return he;
              }
              function h(Wt, $t) {
                var ue = Wt == null ? null : typeof Symbol != "undefined" && Wt[Symbol.iterator] || Wt["@@iterator"];
                if (ue != null) {
                  var he, Ee, Re, Ie, Ot = [], vt = !0, W = !1;
                  try {
                    if (Re = (ue = ue.call(Wt)).next, $t === 0) {
                      if (Object(ue) !== ue)
                        return;
                      vt = !1;
                    } else
                      for (; !(vt = (he = Re.call(ue)).done) && (Ot.push(he.value), Ot.length !== $t); vt = !0)
                        ;
                  } catch (Q) {
                    W = !0, Ee = Q;
                  } finally {
                    try {
                      if (!vt && ue.return != null && (Ie = ue.return(), Object(Ie) !== Ie))
                        return;
                    } finally {
                      if (W)
                        throw Ee;
                    }
                  }
                  return Ot;
                }
              }
              function u(Wt) {
                if (Array.isArray(Wt))
                  return Wt;
              }
              function l(Wt) {
                "@babel/helpers - typeof";
                return l = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function($t) {
                  return typeof $t;
                } : function($t) {
                  return $t && typeof Symbol == "function" && $t.constructor === Symbol && $t !== Symbol.prototype ? "symbol" : typeof $t;
                }, l(Wt);
              }
              var c = /a/g.flags !== void 0, s = function($t) {
                var ue = [];
                return $t.forEach(function(he) {
                  return ue.push(he);
                }), ue;
              }, v = function($t) {
                var ue = [];
                return $t.forEach(function(he, Ee) {
                  return ue.push([Ee, he]);
                }), ue;
              }, y = Object.is ? Object.is : t(98527), x = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
                return [];
              }, e = Number.isNaN ? Number.isNaN : t(7051);
              function b(Wt) {
                return Wt.call.bind(Wt);
              }
              var A = b(Object.prototype.hasOwnProperty), P = b(Object.prototype.propertyIsEnumerable), D = b(Object.prototype.toString), E = t(7187).types, T = E.isAnyArrayBuffer, C = E.isArrayBufferView, F = E.isDate, m = E.isMap, I = E.isRegExp, O = E.isSet, M = E.isNativeError, N = E.isBoxedPrimitive, G = E.isNumberObject, ot = E.isStringObject, K = E.isBooleanObject, nt = E.isBigIntObject, xt = E.isSymbolObject, bt = E.isFloat32Array, St = E.isFloat64Array;
              function Dt(Wt) {
                if (Wt.length === 0 || Wt.length > 10)
                  return !0;
                for (var $t = 0; $t < Wt.length; $t++) {
                  var ue = Wt.charCodeAt($t);
                  if (ue < 48 || ue > 57)
                    return !0;
                }
                return Wt.length === 10 && Wt >= Math.pow(2, 32);
              }
              function Lt(Wt) {
                return Object.keys(Wt).filter(Dt).concat(x(Wt).filter(Object.prototype.propertyIsEnumerable.bind(Wt)));
              }
              /*!
               * The buffer module from node.js, for the browser.
               *
               * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
               * @license  MIT
               */
              function jt(Wt, $t) {
                if (Wt === $t)
                  return 0;
                for (var ue = Wt.length, he = $t.length, Ee = 0, Re = Math.min(ue, he); Ee < Re; ++Ee)
                  if (Wt[Ee] !== $t[Ee]) {
                    ue = Wt[Ee], he = $t[Ee];
                    break;
                  }
                return ue < he ? -1 : he < ue ? 1 : 0;
              }
              var J = !0, yt = !1, ut = 0, st = 1, wt = 2, V = 3;
              function Ft(Wt, $t) {
                return c ? Wt.source === $t.source && Wt.flags === $t.flags : RegExp.prototype.toString.call(Wt) === RegExp.prototype.toString.call($t);
              }
              function U(Wt, $t) {
                if (Wt.byteLength !== $t.byteLength)
                  return !1;
                for (var ue = 0; ue < Wt.byteLength; ue++)
                  if (Wt[ue] !== $t[ue])
                    return !1;
                return !0;
              }
              function S(Wt, $t) {
                return Wt.byteLength !== $t.byteLength ? !1 : jt(new Uint8Array(Wt.buffer, Wt.byteOffset, Wt.byteLength), new Uint8Array($t.buffer, $t.byteOffset, $t.byteLength)) === 0;
              }
              function k(Wt, $t) {
                return Wt.byteLength === $t.byteLength && jt(new Uint8Array(Wt), new Uint8Array($t)) === 0;
              }
              function H(Wt, $t) {
                return G(Wt) ? G($t) && y(Number.prototype.valueOf.call(Wt), Number.prototype.valueOf.call($t)) : ot(Wt) ? ot($t) && String.prototype.valueOf.call(Wt) === String.prototype.valueOf.call($t) : K(Wt) ? K($t) && Boolean.prototype.valueOf.call(Wt) === Boolean.prototype.valueOf.call($t) : nt(Wt) ? nt($t) && BigInt.prototype.valueOf.call(Wt) === BigInt.prototype.valueOf.call($t) : xt($t) && Symbol.prototype.valueOf.call(Wt) === Symbol.prototype.valueOf.call($t);
              }
              function it(Wt, $t, ue, he) {
                if (Wt === $t)
                  return Wt !== 0 ? !0 : ue ? y(Wt, $t) : !0;
                if (ue) {
                  if (l(Wt) !== "object")
                    return typeof Wt == "number" && e(Wt) && e($t);
                  if (l($t) !== "object" || Wt === null || $t === null || Object.getPrototypeOf(Wt) !== Object.getPrototypeOf($t))
                    return !1;
                } else {
                  if (Wt === null || l(Wt) !== "object")
                    return $t === null || l($t) !== "object" ? Wt == $t : !1;
                  if ($t === null || l($t) !== "object")
                    return !1;
                }
                var Ee = D(Wt), Re = D($t);
                if (Ee !== Re)
                  return !1;
                if (Array.isArray(Wt)) {
                  if (Wt.length !== $t.length)
                    return !1;
                  var Ie = Lt(Wt), Ot = Lt($t);
                  return Ie.length !== Ot.length ? !1 : tt(Wt, $t, ue, he, st, Ie);
                }
                if (Ee === "[object Object]" && (!m(Wt) && m($t) || !O(Wt) && O($t)))
                  return !1;
                if (F(Wt)) {
                  if (!F($t) || Date.prototype.getTime.call(Wt) !== Date.prototype.getTime.call($t))
                    return !1;
                } else if (I(Wt)) {
                  if (!I($t) || !Ft(Wt, $t))
                    return !1;
                } else if (M(Wt) || Wt instanceof Error) {
                  if (Wt.message !== $t.message || Wt.name !== $t.name)
                    return !1;
                } else if (C(Wt)) {
                  if (!ue && (bt(Wt) || St(Wt))) {
                    if (!U(Wt, $t))
                      return !1;
                  } else if (!S(Wt, $t))
                    return !1;
                  var vt = Lt(Wt), W = Lt($t);
                  return vt.length !== W.length ? !1 : tt(Wt, $t, ue, he, ut, vt);
                } else {
                  if (O(Wt))
                    return !O($t) || Wt.size !== $t.size ? !1 : tt(Wt, $t, ue, he, wt);
                  if (m(Wt))
                    return !m($t) || Wt.size !== $t.size ? !1 : tt(Wt, $t, ue, he, V);
                  if (T(Wt)) {
                    if (!k(Wt, $t))
                      return !1;
                  } else if (N(Wt) && !H(Wt, $t))
                    return !1;
                }
                return tt(Wt, $t, ue, he, ut);
              }
              function et(Wt, $t) {
                return $t.filter(function(ue) {
                  return P(Wt, ue);
                });
              }
              function tt(Wt, $t, ue, he, Ee, Re) {
                if (arguments.length === 5) {
                  Re = Object.keys(Wt);
                  var Ie = Object.keys($t);
                  if (Re.length !== Ie.length)
                    return !1;
                }
                for (var Ot = 0; Ot < Re.length; Ot++)
                  if (!A($t, Re[Ot]))
                    return !1;
                if (ue && arguments.length === 5) {
                  var vt = x(Wt);
                  if (vt.length !== 0) {
                    var W = 0;
                    for (Ot = 0; Ot < vt.length; Ot++) {
                      var Q = vt[Ot];
                      if (P(Wt, Q)) {
                        if (!P($t, Q))
                          return !1;
                        Re.push(Q), W++;
                      } else if (P($t, Q))
                        return !1;
                    }
                    var gt = x($t);
                    if (vt.length !== gt.length && et($t, gt).length !== W)
                      return !1;
                  } else {
                    var Pt = x($t);
                    if (Pt.length !== 0 && et($t, Pt).length !== 0)
                      return !1;
                  }
                }
                if (Re.length === 0 && (Ee === ut || Ee === st && Wt.length === 0 || Wt.size === 0))
                  return !0;
                if (he === void 0)
                  he = {
                    val1: /* @__PURE__ */ new Map(),
                    val2: /* @__PURE__ */ new Map(),
                    position: 0
                  };
                else {
                  var ht = he.val1.get(Wt);
                  if (ht !== void 0) {
                    var Ht = he.val2.get($t);
                    if (Ht !== void 0)
                      return ht === Ht;
                  }
                  he.position++;
                }
                he.val1.set(Wt, he.position), he.val2.set($t, he.position);
                var we = me(Wt, $t, ue, Re, he, Ee);
                return he.val1.delete(Wt), he.val2.delete($t), we;
              }
              function Ct(Wt, $t, ue, he) {
                for (var Ee = s(Wt), Re = 0; Re < Ee.length; Re++) {
                  var Ie = Ee[Re];
                  if (it($t, Ie, ue, he))
                    return Wt.delete(Ie), !0;
                }
                return !1;
              }
              function Rt(Wt) {
                switch (l(Wt)) {
                  case "undefined":
                    return null;
                  case "object":
                    return;
                  case "symbol":
                    return !1;
                  case "string":
                    Wt = +Wt;
                  case "number":
                    if (e(Wt))
                      return !1;
                }
                return !0;
              }
              function Kt(Wt, $t, ue) {
                var he = Rt(ue);
                return he != null ? he : $t.has(he) && !Wt.has(he);
              }
              function Gt(Wt, $t, ue, he, Ee) {
                var Re = Rt(ue);
                if (Re != null)
                  return Re;
                var Ie = $t.get(Re);
                return Ie === void 0 && !$t.has(Re) || !it(he, Ie, !1, Ee) ? !1 : !Wt.has(Re) && it(he, Ie, !1, Ee);
              }
              function It(Wt, $t, ue, he) {
                for (var Ee = null, Re = s(Wt), Ie = 0; Ie < Re.length; Ie++) {
                  var Ot = Re[Ie];
                  if (l(Ot) === "object" && Ot !== null)
                    Ee === null && (Ee = /* @__PURE__ */ new Set()), Ee.add(Ot);
                  else if (!$t.has(Ot)) {
                    if (ue || !Kt(Wt, $t, Ot))
                      return !1;
                    Ee === null && (Ee = /* @__PURE__ */ new Set()), Ee.add(Ot);
                  }
                }
                if (Ee !== null) {
                  for (var vt = s($t), W = 0; W < vt.length; W++) {
                    var Q = vt[W];
                    if (l(Q) === "object" && Q !== null) {
                      if (!Ct(Ee, Q, ue, he))
                        return !1;
                    } else if (!ue && !Wt.has(Q) && !Ct(Ee, Q, ue, he))
                      return !1;
                  }
                  return Ee.size === 0;
                }
                return !0;
              }
              function re(Wt, $t, ue, he, Ee, Re) {
                for (var Ie = s(Wt), Ot = 0; Ot < Ie.length; Ot++) {
                  var vt = Ie[Ot];
                  if (it(ue, vt, Ee, Re) && it(he, $t.get(vt), Ee, Re))
                    return Wt.delete(vt), !0;
                }
                return !1;
              }
              function be(Wt, $t, ue, he) {
                for (var Ee = null, Re = v(Wt), Ie = 0; Ie < Re.length; Ie++) {
                  var Ot = i(Re[Ie], 2), vt = Ot[0], W = Ot[1];
                  if (l(vt) === "object" && vt !== null)
                    Ee === null && (Ee = /* @__PURE__ */ new Set()), Ee.add(vt);
                  else {
                    var Q = $t.get(vt);
                    if (Q === void 0 && !$t.has(vt) || !it(W, Q, ue, he)) {
                      if (ue || !Gt(Wt, $t, vt, W, he))
                        return !1;
                      Ee === null && (Ee = /* @__PURE__ */ new Set()), Ee.add(vt);
                    }
                  }
                }
                if (Ee !== null) {
                  for (var gt = v($t), Pt = 0; Pt < gt.length; Pt++) {
                    var ht = i(gt[Pt], 2), Ht = ht[0], we = ht[1];
                    if (l(Ht) === "object" && Ht !== null) {
                      if (!re(Ee, Wt, Ht, we, ue, he))
                        return !1;
                    } else if (!ue && (!Wt.has(Ht) || !it(Wt.get(Ht), we, !1, he)) && !re(Ee, Wt, Ht, we, !1, he))
                      return !1;
                  }
                  return Ee.size === 0;
                }
                return !0;
              }
              function me(Wt, $t, ue, he, Ee, Re) {
                var Ie = 0;
                if (Re === wt) {
                  if (!It(Wt, $t, ue, Ee))
                    return !1;
                } else if (Re === V) {
                  if (!be(Wt, $t, ue, Ee))
                    return !1;
                } else if (Re === st)
                  for (; Ie < Wt.length; Ie++)
                    if (A(Wt, Ie)) {
                      if (!A($t, Ie) || !it(Wt[Ie], $t[Ie], ue, Ee))
                        return !1;
                    } else {
                      if (A($t, Ie))
                        return !1;
                      for (var Ot = Object.keys(Wt); Ie < Ot.length; Ie++) {
                        var vt = Ot[Ie];
                        if (!A($t, vt) || !it(Wt[vt], $t[vt], ue, Ee))
                          return !1;
                      }
                      return Ot.length === Object.keys($t).length;
                    }
                for (Ie = 0; Ie < he.length; Ie++) {
                  var W = he[Ie];
                  if (!it(Wt[W], $t[W], ue, Ee))
                    return !1;
                }
                return !0;
              }
              function le(Wt, $t) {
                return it(Wt, $t, yt);
              }
              function Se(Wt, $t) {
                return it(Wt, $t, J);
              }
              f.exports = {
                isDeepEqual: le,
                isDeepStrictEqual: Se
              };
            }
          ),
          /***/
          32504: (
            /***/
            function(f, d) {
              d.byteLength = l, d.toByteArray = s, d.fromByteArray = x;
              for (var t = [], i = [], r = typeof Uint8Array != "undefined" ? Uint8Array : Array, n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0, h = n.length; o < h; ++o)
                t[o] = n[o], i[n.charCodeAt(o)] = o;
              i["-".charCodeAt(0)] = 62, i["_".charCodeAt(0)] = 63;
              function u(e) {
                var b = e.length;
                if (b % 4 > 0)
                  throw new Error("Invalid string. Length must be a multiple of 4");
                var A = e.indexOf("=");
                A === -1 && (A = b);
                var P = A === b ? 0 : 4 - A % 4;
                return [A, P];
              }
              function l(e) {
                var b = u(e), A = b[0], P = b[1];
                return (A + P) * 3 / 4 - P;
              }
              function c(e, b, A) {
                return (b + A) * 3 / 4 - A;
              }
              function s(e) {
                var b, A = u(e), P = A[0], D = A[1], E = new r(c(e, P, D)), T = 0, C = D > 0 ? P - 4 : P, F;
                for (F = 0; F < C; F += 4)
                  b = i[e.charCodeAt(F)] << 18 | i[e.charCodeAt(F + 1)] << 12 | i[e.charCodeAt(F + 2)] << 6 | i[e.charCodeAt(F + 3)], E[T++] = b >> 16 & 255, E[T++] = b >> 8 & 255, E[T++] = b & 255;
                return D === 2 && (b = i[e.charCodeAt(F)] << 2 | i[e.charCodeAt(F + 1)] >> 4, E[T++] = b & 255), D === 1 && (b = i[e.charCodeAt(F)] << 10 | i[e.charCodeAt(F + 1)] << 4 | i[e.charCodeAt(F + 2)] >> 2, E[T++] = b >> 8 & 255, E[T++] = b & 255), E;
              }
              function v(e) {
                return t[e >> 18 & 63] + t[e >> 12 & 63] + t[e >> 6 & 63] + t[e & 63];
              }
              function y(e, b, A) {
                for (var P, D = [], E = b; E < A; E += 3)
                  P = (e[E] << 16 & 16711680) + (e[E + 1] << 8 & 65280) + (e[E + 2] & 255), D.push(v(P));
                return D.join("");
              }
              function x(e) {
                for (var b, A = e.length, P = A % 3, D = [], E = 16383, T = 0, C = A - P; T < C; T += E)
                  D.push(y(
                    e,
                    T,
                    T + E > C ? C : T + E
                  ));
                return P === 1 ? (b = e[A - 1], D.push(
                  t[b >> 2] + t[b << 4 & 63] + "=="
                )) : P === 2 && (b = (e[A - 2] << 8) + e[A - 1], D.push(
                  t[b >> 10] + t[b >> 4 & 63] + t[b << 2 & 63] + "="
                )), D.join("");
              }
            }
          ),
          /***/
          34097: (
            /***/
            function(f) {
              var d = 4096, t = 2 * d + 32, i = 2 * d - 1, r = new Uint32Array([
                0,
                1,
                3,
                7,
                15,
                31,
                63,
                127,
                255,
                511,
                1023,
                2047,
                4095,
                8191,
                16383,
                32767,
                65535,
                131071,
                262143,
                524287,
                1048575,
                2097151,
                4194303,
                8388607,
                16777215
              ]);
              function n(o) {
                this.buf_ = new Uint8Array(t), this.input_ = o, this.reset();
              }
              n.READ_SIZE = d, n.IBUF_MASK = i, n.prototype.reset = function() {
                this.buf_ptr_ = 0, this.val_ = 0, this.pos_ = 0, this.bit_pos_ = 0, this.bit_end_pos_ = 0, this.eos_ = 0, this.readMoreInput();
                for (var o = 0; o < 4; o++)
                  this.val_ |= this.buf_[this.pos_] << 8 * o, ++this.pos_;
                return this.bit_end_pos_ > 0;
              }, n.prototype.readMoreInput = function() {
                if (!(this.bit_end_pos_ > 256))
                  if (this.eos_) {
                    if (this.bit_pos_ > this.bit_end_pos_)
                      throw new Error("Unexpected end of input " + this.bit_pos_ + " " + this.bit_end_pos_);
                  } else {
                    var o = this.buf_ptr_, h = this.input_.read(this.buf_, o, d);
                    if (h < 0)
                      throw new Error("Unexpected end of input");
                    if (h < d) {
                      this.eos_ = 1;
                      for (var u = 0; u < 32; u++)
                        this.buf_[o + h + u] = 0;
                    }
                    if (o === 0) {
                      for (var u = 0; u < 32; u++)
                        this.buf_[(d << 1) + u] = this.buf_[u];
                      this.buf_ptr_ = d;
                    } else
                      this.buf_ptr_ = 0;
                    this.bit_end_pos_ += h << 3;
                  }
              }, n.prototype.fillBitWindow = function() {
                for (; this.bit_pos_ >= 8; )
                  this.val_ >>>= 8, this.val_ |= this.buf_[this.pos_ & i] << 24, ++this.pos_, this.bit_pos_ = this.bit_pos_ - 8 >>> 0, this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;
              }, n.prototype.readBits = function(o) {
                32 - this.bit_pos_ < o && this.fillBitWindow();
                var h = this.val_ >>> this.bit_pos_ & r[o];
                return this.bit_pos_ += o, h;
              }, f.exports = n;
            }
          ),
          /***/
          7043: (
            /***/
            function(f, d) {
              d.lookup = new Uint8Array([
                /* CONTEXT_UTF8, last byte. */
                /* ASCII range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                4,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                8,
                12,
                16,
                12,
                12,
                20,
                12,
                16,
                24,
                28,
                12,
                12,
                32,
                12,
                36,
                12,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                32,
                32,
                24,
                40,
                28,
                12,
                12,
                48,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                24,
                12,
                28,
                12,
                12,
                12,
                56,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                24,
                12,
                28,
                12,
                0,
                /* UTF8 continuation byte range. */
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                /* UTF8 lead byte range. */
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                /* CONTEXT_UTF8 second last byte. */
                /* ASCII range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                1,
                1,
                1,
                1,
                0,
                /* UTF8 continuation byte range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                /* UTF8 lead byte range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                /* CONTEXT_SIGNED, second last byte. */
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                7,
                /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */
                0,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                56,
                /* CONTEXT_LSB6, last byte. */
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                /* CONTEXT_MSB6, last byte. */
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                6,
                6,
                6,
                6,
                7,
                7,
                7,
                7,
                8,
                8,
                8,
                8,
                9,
                9,
                9,
                9,
                10,
                10,
                10,
                10,
                11,
                11,
                11,
                11,
                12,
                12,
                12,
                12,
                13,
                13,
                13,
                13,
                14,
                14,
                14,
                14,
                15,
                15,
                15,
                15,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                22,
                22,
                22,
                22,
                23,
                23,
                23,
                23,
                24,
                24,
                24,
                24,
                25,
                25,
                25,
                25,
                26,
                26,
                26,
                26,
                27,
                27,
                27,
                27,
                28,
                28,
                28,
                28,
                29,
                29,
                29,
                29,
                30,
                30,
                30,
                30,
                31,
                31,
                31,
                31,
                32,
                32,
                32,
                32,
                33,
                33,
                33,
                33,
                34,
                34,
                34,
                34,
                35,
                35,
                35,
                35,
                36,
                36,
                36,
                36,
                37,
                37,
                37,
                37,
                38,
                38,
                38,
                38,
                39,
                39,
                39,
                39,
                40,
                40,
                40,
                40,
                41,
                41,
                41,
                41,
                42,
                42,
                42,
                42,
                43,
                43,
                43,
                43,
                44,
                44,
                44,
                44,
                45,
                45,
                45,
                45,
                46,
                46,
                46,
                46,
                47,
                47,
                47,
                47,
                48,
                48,
                48,
                48,
                49,
                49,
                49,
                49,
                50,
                50,
                50,
                50,
                51,
                51,
                51,
                51,
                52,
                52,
                52,
                52,
                53,
                53,
                53,
                53,
                54,
                54,
                54,
                54,
                55,
                55,
                55,
                55,
                56,
                56,
                56,
                56,
                57,
                57,
                57,
                57,
                58,
                58,
                58,
                58,
                59,
                59,
                59,
                59,
                60,
                60,
                60,
                60,
                61,
                61,
                61,
                61,
                62,
                62,
                62,
                62,
                63,
                63,
                63,
                63,
                /* CONTEXT_{M,L}SB6, second last byte, */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ]), d.lookupOffsets = new Uint16Array([
                /* CONTEXT_LSB6 */
                1024,
                1536,
                /* CONTEXT_MSB6 */
                1280,
                1536,
                /* CONTEXT_UTF8 */
                0,
                256,
                /* CONTEXT_SIGNED */
                768,
                512
              ]);
            }
          ),
          /***/
          20980: (
            /***/
            function(f, d, t) {
              var i = t(98197).z, r = t(98197).y, n = t(34097), o = t(80614), h = t(81561).z, u = t(81561).u, l = t(7043), c = t(42210), s = t(87984), v = 8, y = 16, x = 256, e = 704, b = 26, A = 6, P = 2, D = 8, E = 255, T = 1080, C = 18, F = new Uint8Array([
                1,
                2,
                3,
                4,
                0,
                5,
                17,
                6,
                16,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]), m = 16, I = new Uint8Array([
                3,
                2,
                1,
                0,
                3,
                3,
                3,
                3,
                3,
                3,
                2,
                2,
                2,
                2,
                2,
                2
              ]), O = new Int8Array([
                0,
                0,
                0,
                0,
                -1,
                1,
                -2,
                2,
                -3,
                3,
                -1,
                1,
                -2,
                2,
                -3,
                3
              ]), M = new Uint16Array([
                256,
                402,
                436,
                468,
                500,
                534,
                566,
                598,
                630,
                662,
                694,
                726,
                758,
                790,
                822,
                854,
                886,
                920,
                952,
                984,
                1016,
                1048,
                1080
              ]);
              function N(S) {
                var k;
                return S.readBits(1) === 0 ? 16 : (k = S.readBits(3), k > 0 ? 17 + k : (k = S.readBits(3), k > 0 ? 8 + k : 17));
              }
              function G(S) {
                if (S.readBits(1)) {
                  var k = S.readBits(3);
                  return k === 0 ? 1 : S.readBits(k) + (1 << k);
                }
                return 0;
              }
              function ot() {
                this.meta_block_length = 0, this.input_end = 0, this.is_uncompressed = 0, this.is_metadata = !1;
              }
              function K(S) {
                var k = new ot(), H, it, et;
                if (k.input_end = S.readBits(1), k.input_end && S.readBits(1))
                  return k;
                if (H = S.readBits(2) + 4, H === 7) {
                  if (k.is_metadata = !0, S.readBits(1) !== 0)
                    throw new Error("Invalid reserved bit");
                  if (it = S.readBits(2), it === 0)
                    return k;
                  for (et = 0; et < it; et++) {
                    var tt = S.readBits(8);
                    if (et + 1 === it && it > 1 && tt === 0)
                      throw new Error("Invalid size byte");
                    k.meta_block_length |= tt << et * 8;
                  }
                } else
                  for (et = 0; et < H; ++et) {
                    var Ct = S.readBits(4);
                    if (et + 1 === H && H > 4 && Ct === 0)
                      throw new Error("Invalid size nibble");
                    k.meta_block_length |= Ct << et * 4;
                  }
                return ++k.meta_block_length, !k.input_end && !k.is_metadata && (k.is_uncompressed = S.readBits(1)), k;
              }
              function nt(S, k, H) {
                var it;
                return H.fillBitWindow(), k += H.val_ >>> H.bit_pos_ & E, it = S[k].bits - D, it > 0 && (H.bit_pos_ += D, k += S[k].value, k += H.val_ >>> H.bit_pos_ & (1 << it) - 1), H.bit_pos_ += S[k].bits, S[k].value;
              }
              function xt(S, k, H, it) {
                for (var et = 0, tt = v, Ct = 0, Rt = 0, Kt = 32768, Gt = [], It = 0; It < 32; It++)
                  Gt.push(new h(0, 0));
                for (u(Gt, 0, 5, S, C); et < k && Kt > 0; ) {
                  var re = 0, be;
                  if (it.readMoreInput(), it.fillBitWindow(), re += it.val_ >>> it.bit_pos_ & 31, it.bit_pos_ += Gt[re].bits, be = Gt[re].value & 255, be < y)
                    Ct = 0, H[et++] = be, be !== 0 && (tt = be, Kt -= 32768 >> be);
                  else {
                    var me = be - 14, le, Se, Wt = 0;
                    if (be === y && (Wt = tt), Rt !== Wt && (Ct = 0, Rt = Wt), le = Ct, Ct > 0 && (Ct -= 2, Ct <<= me), Ct += it.readBits(me) + 3, Se = Ct - le, et + Se > k)
                      throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");
                    for (var $t = 0; $t < Se; $t++)
                      H[et + $t] = Rt;
                    et += Se, Rt !== 0 && (Kt -= Se << 15 - Rt);
                  }
                }
                if (Kt !== 0)
                  throw new Error("[ReadHuffmanCodeLengths] space = " + Kt);
                for (; et < k; et++)
                  H[et] = 0;
              }
              function bt(S, k, H, it) {
                var et = 0, tt, Ct = new Uint8Array(S);
                if (it.readMoreInput(), tt = it.readBits(2), tt === 1) {
                  for (var Rt, Kt = S - 1, Gt = 0, It = new Int32Array(4), re = it.readBits(2) + 1; Kt; )
                    Kt >>= 1, ++Gt;
                  for (Rt = 0; Rt < re; ++Rt)
                    It[Rt] = it.readBits(Gt) % S, Ct[It[Rt]] = 2;
                  switch (Ct[It[0]] = 1, re) {
                    case 1:
                      break;
                    case 3:
                      if (It[0] === It[1] || It[0] === It[2] || It[1] === It[2])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      break;
                    case 2:
                      if (It[0] === It[1])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      Ct[It[1]] = 1;
                      break;
                    case 4:
                      if (It[0] === It[1] || It[0] === It[2] || It[0] === It[3] || It[1] === It[2] || It[1] === It[3] || It[2] === It[3])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      it.readBits(1) ? (Ct[It[2]] = 3, Ct[It[3]] = 3) : Ct[It[0]] = 2;
                      break;
                  }
                } else {
                  var Rt, be = new Uint8Array(C), me = 32, le = 0, Se = [
                    new h(2, 0),
                    new h(2, 4),
                    new h(2, 3),
                    new h(3, 2),
                    new h(2, 0),
                    new h(2, 4),
                    new h(2, 3),
                    new h(4, 1),
                    new h(2, 0),
                    new h(2, 4),
                    new h(2, 3),
                    new h(3, 2),
                    new h(2, 0),
                    new h(2, 4),
                    new h(2, 3),
                    new h(4, 5)
                  ];
                  for (Rt = tt; Rt < C && me > 0; ++Rt) {
                    var Wt = F[Rt], $t = 0, ue;
                    it.fillBitWindow(), $t += it.val_ >>> it.bit_pos_ & 15, it.bit_pos_ += Se[$t].bits, ue = Se[$t].value, be[Wt] = ue, ue !== 0 && (me -= 32 >> ue, ++le);
                  }
                  if (!(le === 1 || me === 0))
                    throw new Error("[ReadHuffmanCode] invalid num_codes or space");
                  xt(be, S, Ct, it);
                }
                if (et = u(k, H, D, Ct, S), et === 0)
                  throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");
                return et;
              }
              function St(S, k, H) {
                var it, et;
                return it = nt(S, k, H), et = c.kBlockLengthPrefixCode[it].nbits, c.kBlockLengthPrefixCode[it].offset + H.readBits(et);
              }
              function Dt(S, k, H) {
                var it;
                return S < m ? (H += I[S], H &= 3, it = k[H] + O[S]) : it = S - m + 1, it;
              }
              function Lt(S, k) {
                for (var H = S[k], it = k; it; --it)
                  S[it] = S[it - 1];
                S[0] = H;
              }
              function jt(S, k) {
                var H = new Uint8Array(256), it;
                for (it = 0; it < 256; ++it)
                  H[it] = it;
                for (it = 0; it < k; ++it) {
                  var et = S[it];
                  S[it] = H[et], et && Lt(H, et);
                }
              }
              function J(S, k) {
                this.alphabet_size = S, this.num_htrees = k, this.codes = new Array(k + k * M[S + 31 >>> 5]), this.htrees = new Uint32Array(k);
              }
              J.prototype.decode = function(S) {
                var k, H, it = 0;
                for (k = 0; k < this.num_htrees; ++k)
                  this.htrees[k] = it, H = bt(this.alphabet_size, this.codes, it, S), it += H;
              };
              function yt(S, k) {
                var H = { num_htrees: null, context_map: null }, it, et = 0, tt, Ct;
                k.readMoreInput();
                var Rt = H.num_htrees = G(k) + 1, Kt = H.context_map = new Uint8Array(S);
                if (Rt <= 1)
                  return H;
                for (it = k.readBits(1), it && (et = k.readBits(4) + 1), tt = [], Ct = 0; Ct < T; Ct++)
                  tt[Ct] = new h(0, 0);
                for (bt(Rt + et, tt, 0, k), Ct = 0; Ct < S; ) {
                  var Gt;
                  if (k.readMoreInput(), Gt = nt(tt, 0, k), Gt === 0)
                    Kt[Ct] = 0, ++Ct;
                  else if (Gt <= et)
                    for (var It = 1 + (1 << Gt) + k.readBits(Gt); --It; ) {
                      if (Ct >= S)
                        throw new Error("[DecodeContextMap] i >= context_map_size");
                      Kt[Ct] = 0, ++Ct;
                    }
                  else
                    Kt[Ct] = Gt - et, ++Ct;
                }
                return k.readBits(1) && jt(Kt, S), H;
              }
              function ut(S, k, H, it, et, tt, Ct) {
                var Rt = H * 2, Kt = H, Gt = nt(k, H * T, Ct), It;
                Gt === 0 ? It = et[Rt + (tt[Kt] & 1)] : Gt === 1 ? It = et[Rt + (tt[Kt] - 1 & 1)] + 1 : It = Gt - 2, It >= S && (It -= S), it[H] = It, et[Rt + (tt[Kt] & 1)] = It, ++tt[Kt];
              }
              function st(S, k, H, it, et, tt) {
                var Ct = et + 1, Rt = H & et, Kt = tt.pos_ & n.IBUF_MASK, Gt;
                if (k < 8 || tt.bit_pos_ + (k << 3) < tt.bit_end_pos_) {
                  for (; k-- > 0; )
                    tt.readMoreInput(), it[Rt++] = tt.readBits(8), Rt === Ct && (S.write(it, Ct), Rt = 0);
                  return;
                }
                if (tt.bit_end_pos_ < 32)
                  throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");
                for (; tt.bit_pos_ < 32; )
                  it[Rt] = tt.val_ >>> tt.bit_pos_, tt.bit_pos_ += 8, ++Rt, --k;
                if (Gt = tt.bit_end_pos_ - tt.bit_pos_ >> 3, Kt + Gt > n.IBUF_MASK) {
                  for (var It = n.IBUF_MASK + 1 - Kt, re = 0; re < It; re++)
                    it[Rt + re] = tt.buf_[Kt + re];
                  Gt -= It, Rt += It, k -= It, Kt = 0;
                }
                for (var re = 0; re < Gt; re++)
                  it[Rt + re] = tt.buf_[Kt + re];
                if (Rt += Gt, k -= Gt, Rt >= Ct) {
                  S.write(it, Ct), Rt -= Ct;
                  for (var re = 0; re < Rt; re++)
                    it[re] = it[Ct + re];
                }
                for (; Rt + k >= Ct; ) {
                  if (Gt = Ct - Rt, tt.input_.read(it, Rt, Gt) < Gt)
                    throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                  S.write(it, Ct), k -= Gt, Rt = 0;
                }
                if (tt.input_.read(it, Rt, k) < k)
                  throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                tt.reset();
              }
              function wt(S) {
                var k = S.bit_pos_ + 7 & -8, H = S.readBits(k - S.bit_pos_);
                return H == 0;
              }
              function V(S) {
                var k = new i(S), H = new n(k);
                N(H);
                var it = K(H);
                return it.meta_block_length;
              }
              function Ft(S, k) {
                var H = new i(S);
                k == null && (k = V(S));
                var it = new Uint8Array(k), et = new r(it);
                return U(H, et), et.pos < et.buffer.length && (et.buffer = et.buffer.subarray(0, et.pos)), et.buffer;
              }
              d.BrotliDecompressBuffer = Ft;
              function U(S, k) {
                var H, it = 0, et = 0, tt = 0, Ct, Rt = 0, Kt, Gt, It, re, be = [16, 15, 11, 4], me = 0, le = 0, Se = 0, Wt = [new J(0, 0), new J(0, 0), new J(0, 0)], $t, ue, he, Ee = 128 + n.READ_SIZE;
                he = new n(S), tt = N(he), Ct = (1 << tt) - 16, Kt = 1 << tt, Gt = Kt - 1, It = new Uint8Array(Kt + Ee + o.maxDictionaryWordLength), re = Kt, $t = [], ue = [];
                for (var Re = 0; Re < 3 * T; Re++)
                  $t[Re] = new h(0, 0), ue[Re] = new h(0, 0);
                for (; !et; ) {
                  var Ie = 0, Ot, vt = [1 << 28, 1 << 28, 1 << 28], W = [0], Q = [1, 1, 1], gt = [0, 1, 0, 1, 0, 1], Pt = [0], ht, Ht, we, rt, _t = null, ae = null, Et, Zt = null, fe, Ue = 0, Be = null, ke = 0, He = 0, nn = null, er = 0, Te = 0, Oe = 0, Xe, tr;
                  for (H = 0; H < 3; ++H)
                    Wt[H].codes = null, Wt[H].htrees = null;
                  he.readMoreInput();
                  var cn = K(he);
                  if (Ie = cn.meta_block_length, it + Ie > k.buffer.length) {
                    var wn = new Uint8Array(it + Ie);
                    wn.set(k.buffer), k.buffer = wn;
                  }
                  if (et = cn.input_end, Ot = cn.is_uncompressed, cn.is_metadata) {
                    for (wt(he); Ie > 0; --Ie)
                      he.readMoreInput(), he.readBits(8);
                    continue;
                  }
                  if (Ie !== 0) {
                    if (Ot) {
                      he.bit_pos_ = he.bit_pos_ + 7 & -8, st(
                        k,
                        Ie,
                        it,
                        It,
                        Gt,
                        he
                      ), it += Ie;
                      continue;
                    }
                    for (H = 0; H < 3; ++H)
                      Q[H] = G(he) + 1, Q[H] >= 2 && (bt(Q[H] + 2, $t, H * T, he), bt(b, ue, H * T, he), vt[H] = St(ue, H * T, he), Pt[H] = 1);
                    for (he.readMoreInput(), ht = he.readBits(2), Ht = m + (he.readBits(4) << ht), we = (1 << ht) - 1, rt = Ht + (48 << ht), ae = new Uint8Array(Q[0]), H = 0; H < Q[0]; ++H)
                      he.readMoreInput(), ae[H] = he.readBits(2) << 1;
                    var nr = yt(Q[0] << A, he);
                    Et = nr.num_htrees, _t = nr.context_map;
                    var an = yt(Q[2] << P, he);
                    for (fe = an.num_htrees, Zt = an.context_map, Wt[0] = new J(x, Et), Wt[1] = new J(e, Q[1]), Wt[2] = new J(rt, fe), H = 0; H < 3; ++H)
                      Wt[H].decode(he);
                    for (Be = 0, nn = 0, Xe = ae[W[0]], Te = l.lookupOffsets[Xe], Oe = l.lookupOffsets[Xe + 1], tr = Wt[1].htrees[0]; Ie > 0; ) {
                      var Wr, $r, Xr, Jn, fa, hn, gr, rn, Qn, jn, $n;
                      for (he.readMoreInput(), vt[1] === 0 && (ut(
                        Q[1],
                        $t,
                        1,
                        W,
                        gt,
                        Pt,
                        he
                      ), vt[1] = St(ue, T, he), tr = Wt[1].htrees[W[1]]), --vt[1], Wr = nt(Wt[1].codes, tr, he), $r = Wr >> 6, $r >= 2 ? ($r -= 2, gr = -1) : gr = 0, Xr = c.kInsertRangeLut[$r] + (Wr >> 3 & 7), Jn = c.kCopyRangeLut[$r] + (Wr & 7), fa = c.kInsertLengthPrefixCode[Xr].offset + he.readBits(c.kInsertLengthPrefixCode[Xr].nbits), hn = c.kCopyLengthPrefixCode[Jn].offset + he.readBits(c.kCopyLengthPrefixCode[Jn].nbits), le = It[it - 1 & Gt], Se = It[it - 2 & Gt], jn = 0; jn < fa; ++jn)
                        he.readMoreInput(), vt[0] === 0 && (ut(
                          Q[0],
                          $t,
                          0,
                          W,
                          gt,
                          Pt,
                          he
                        ), vt[0] = St(ue, 0, he), Ue = W[0] << A, Be = Ue, Xe = ae[W[0]], Te = l.lookupOffsets[Xe], Oe = l.lookupOffsets[Xe + 1]), Qn = l.lookup[Te + le] | l.lookup[Oe + Se], ke = _t[Be + Qn], --vt[0], Se = le, le = nt(Wt[0].codes, Wt[0].htrees[ke], he), It[it & Gt] = le, (it & Gt) === Gt && k.write(It, Kt), ++it;
                      if (Ie -= fa, Ie <= 0)
                        break;
                      if (gr < 0) {
                        var Qn;
                        if (he.readMoreInput(), vt[2] === 0 && (ut(
                          Q[2],
                          $t,
                          2,
                          W,
                          gt,
                          Pt,
                          he
                        ), vt[2] = St(ue, 2 * T, he), He = W[2] << P, nn = He), --vt[2], Qn = (hn > 4 ? 3 : hn - 2) & 255, er = Zt[nn + Qn], gr = nt(Wt[2].codes, Wt[2].htrees[er], he), gr >= Ht) {
                          var da, ga, qn;
                          gr -= Ht, ga = gr & we, gr >>= ht, da = (gr >> 1) + 1, qn = (2 + (gr & 1) << da) - 4, gr = Ht + (qn + he.readBits(da) << ht) + ga;
                        }
                      }
                      if (rn = Dt(gr, be, me), rn < 0)
                        throw new Error("[BrotliDecompress] invalid distance");
                      if (it < Ct && Rt !== Ct ? Rt = it : Rt = Ct, $n = it & Gt, rn > Rt)
                        if (hn >= o.minDictionaryWordLength && hn <= o.maxDictionaryWordLength) {
                          var qn = o.offsetsByLength[hn], la = rn - Rt - 1, qt = o.sizeBitsByLength[hn], Bt = (1 << qt) - 1, ne = la & Bt, Mt = la >> qt;
                          if (qn += ne * hn, Mt < s.kNumTransforms) {
                            var zt = s.transformDictionaryWord(It, $n, qn, hn, Mt);
                            if ($n += zt, it += zt, Ie -= zt, $n >= re) {
                              k.write(It, Kt);
                              for (var Ut = 0; Ut < $n - re; Ut++)
                                It[Ut] = It[re + Ut];
                            }
                          } else
                            throw new Error("Invalid backward reference. pos: " + it + " distance: " + rn + " len: " + hn + " bytes left: " + Ie);
                        } else
                          throw new Error("Invalid backward reference. pos: " + it + " distance: " + rn + " len: " + hn + " bytes left: " + Ie);
                      else {
                        if (gr > 0 && (be[me & 3] = rn, ++me), hn > Ie)
                          throw new Error("Invalid backward reference. pos: " + it + " distance: " + rn + " len: " + hn + " bytes left: " + Ie);
                        for (jn = 0; jn < hn; ++jn)
                          It[it & Gt] = It[it - rn & Gt], (it & Gt) === Gt && k.write(It, Kt), ++it, --Ie;
                      }
                      le = It[it - 1 & Gt], Se = It[it - 2 & Gt];
                    }
                    it &= 1073741823;
                  }
                }
                k.write(It, it & Gt);
              }
              o.init();
            }
          ),
          /***/
          84543: (
            /***/
            function(f, d, t) {
              var i = t(32504);
              d.init = function() {
                var r = t(20980).BrotliDecompressBuffer, n = i.toByteArray(t(13501));
                return r(n);
              };
            }
          ),
          /***/
          13501: (
            /***/
            function(f) {
              f.exports = "";
            }
          ),
          /***/
          80614: (
            /***/
            function(f, d, t) {
              var i = t(84543);
              d.init = function() {
                d.dictionary = i.init();
              }, d.offsetsByLength = new Uint32Array([
                0,
                0,
                0,
                0,
                0,
                4096,
                9216,
                21504,
                35840,
                44032,
                53248,
                63488,
                74752,
                87040,
                93696,
                100864,
                104704,
                106752,
                108928,
                113536,
                115968,
                118528,
                119872,
                121280,
                122016
              ]), d.sizeBitsByLength = new Uint8Array([
                0,
                0,
                0,
                0,
                10,
                10,
                11,
                11,
                10,
                10,
                10,
                10,
                10,
                9,
                9,
                8,
                7,
                7,
                8,
                7,
                7,
                6,
                6,
                5,
                5
              ]), d.minDictionaryWordLength = 4, d.maxDictionaryWordLength = 24;
            }
          ),
          /***/
          81561: (
            /***/
            function(f, d) {
              function t(h, u) {
                this.bits = h, this.value = u;
              }
              d.z = t;
              var i = 15;
              function r(h, u) {
                for (var l = 1 << u - 1; h & l; )
                  l >>= 1;
                return (h & l - 1) + l;
              }
              function n(h, u, l, c, s) {
                do
                  c -= l, h[u + c] = new t(s.bits, s.value);
                while (c > 0);
              }
              function o(h, u, l) {
                for (var c = 1 << u - l; u < i && (c -= h[u], !(c <= 0)); )
                  ++u, c <<= 1;
                return u - l;
              }
              d.u = function(h, u, l, c, s) {
                var v = u, y, x, e, b, A, P, D, E, T, C, F, m = new Int32Array(i + 1), I = new Int32Array(i + 1);
                for (F = new Int32Array(s), e = 0; e < s; e++)
                  m[c[e]]++;
                for (I[1] = 0, x = 1; x < i; x++)
                  I[x + 1] = I[x] + m[x];
                for (e = 0; e < s; e++)
                  c[e] !== 0 && (F[I[c[e]]++] = e);
                if (E = l, T = 1 << E, C = T, I[i] === 1) {
                  for (b = 0; b < C; ++b)
                    h[u + b] = new t(0, F[0] & 65535);
                  return C;
                }
                for (b = 0, e = 0, x = 1, A = 2; x <= l; ++x, A <<= 1)
                  for (; m[x] > 0; --m[x])
                    y = new t(x & 255, F[e++] & 65535), n(h, u + b, A, T, y), b = r(b, x);
                for (D = C - 1, P = -1, x = l + 1, A = 2; x <= i; ++x, A <<= 1)
                  for (; m[x] > 0; --m[x])
                    (b & D) !== P && (u += T, E = o(m, x, l), T = 1 << E, C += T, P = b & D, h[v + P] = new t(E + l & 255, u - v - P & 65535)), y = new t(x - l & 255, F[e++] & 65535), n(h, u + (b >> l), A, T, y), b = r(b, x);
                return C;
              };
            }
          ),
          /***/
          42210: (
            /***/
            function(f, d) {
              function t(i, r) {
                this.offset = i, this.nbits = r;
              }
              d.kBlockLengthPrefixCode = [
                new t(1, 2),
                new t(5, 2),
                new t(9, 2),
                new t(13, 2),
                new t(17, 3),
                new t(25, 3),
                new t(33, 3),
                new t(41, 3),
                new t(49, 4),
                new t(65, 4),
                new t(81, 4),
                new t(97, 4),
                new t(113, 5),
                new t(145, 5),
                new t(177, 5),
                new t(209, 5),
                new t(241, 6),
                new t(305, 6),
                new t(369, 7),
                new t(497, 8),
                new t(753, 9),
                new t(1265, 10),
                new t(2289, 11),
                new t(4337, 12),
                new t(8433, 13),
                new t(16625, 24)
              ], d.kInsertLengthPrefixCode = [
                new t(0, 0),
                new t(1, 0),
                new t(2, 0),
                new t(3, 0),
                new t(4, 0),
                new t(5, 0),
                new t(6, 1),
                new t(8, 1),
                new t(10, 2),
                new t(14, 2),
                new t(18, 3),
                new t(26, 3),
                new t(34, 4),
                new t(50, 4),
                new t(66, 5),
                new t(98, 5),
                new t(130, 6),
                new t(194, 7),
                new t(322, 8),
                new t(578, 9),
                new t(1090, 10),
                new t(2114, 12),
                new t(6210, 14),
                new t(22594, 24)
              ], d.kCopyLengthPrefixCode = [
                new t(2, 0),
                new t(3, 0),
                new t(4, 0),
                new t(5, 0),
                new t(6, 0),
                new t(7, 0),
                new t(8, 0),
                new t(9, 0),
                new t(10, 1),
                new t(12, 1),
                new t(14, 2),
                new t(18, 2),
                new t(22, 3),
                new t(30, 3),
                new t(38, 4),
                new t(54, 4),
                new t(70, 5),
                new t(102, 5),
                new t(134, 6),
                new t(198, 7),
                new t(326, 8),
                new t(582, 9),
                new t(1094, 10),
                new t(2118, 24)
              ], d.kInsertRangeLut = [
                0,
                0,
                8,
                8,
                0,
                16,
                8,
                16,
                16
              ], d.kCopyRangeLut = [
                0,
                8,
                0,
                8,
                16,
                0,
                16,
                8,
                16
              ];
            }
          ),
          /***/
          98197: (
            /***/
            function(f, d) {
              function t(r) {
                this.buffer = r, this.pos = 0;
              }
              t.prototype.read = function(r, n, o) {
                this.pos + o > this.buffer.length && (o = this.buffer.length - this.pos);
                for (var h = 0; h < o; h++)
                  r[n + h] = this.buffer[this.pos + h];
                return this.pos += o, o;
              }, d.z = t;
              function i(r) {
                this.buffer = r, this.pos = 0;
              }
              i.prototype.write = function(r, n) {
                if (this.pos + n > this.buffer.length)
                  throw new Error("Output buffer is not large enough");
                return this.buffer.set(r.subarray(0, n), this.pos), this.pos += n, n;
              }, d.y = i;
            }
          ),
          /***/
          87984: (
            /***/
            function(f, d, t) {
              var i = t(80614), r = 0, n = 1, o = 2, h = 3, u = 4, l = 5, c = 6, s = 7, v = 8, y = 9, x = 10, e = 11, b = 12, A = 13, P = 14, D = 15, E = 16, T = 17, C = 18, F = 20;
              function m(M, N, G) {
                this.prefix = new Uint8Array(M.length), this.transform = N, this.suffix = new Uint8Array(G.length);
                for (var ot = 0; ot < M.length; ot++)
                  this.prefix[ot] = M.charCodeAt(ot);
                for (var ot = 0; ot < G.length; ot++)
                  this.suffix[ot] = G.charCodeAt(ot);
              }
              var I = [
                new m("", r, ""),
                new m("", r, " "),
                new m(" ", r, " "),
                new m("", b, ""),
                new m("", x, " "),
                new m("", r, " the "),
                new m(" ", r, ""),
                new m("s ", r, " "),
                new m("", r, " of "),
                new m("", x, ""),
                new m("", r, " and "),
                new m("", A, ""),
                new m("", n, ""),
                new m(", ", r, " "),
                new m("", r, ", "),
                new m(" ", x, " "),
                new m("", r, " in "),
                new m("", r, " to "),
                new m("e ", r, " "),
                new m("", r, '"'),
                new m("", r, "."),
                new m("", r, '">'),
                new m("", r, `
`),
                new m("", h, ""),
                new m("", r, "]"),
                new m("", r, " for "),
                new m("", P, ""),
                new m("", o, ""),
                new m("", r, " a "),
                new m("", r, " that "),
                new m(" ", x, ""),
                new m("", r, ". "),
                new m(".", r, ""),
                new m(" ", r, ", "),
                new m("", D, ""),
                new m("", r, " with "),
                new m("", r, "'"),
                new m("", r, " from "),
                new m("", r, " by "),
                new m("", E, ""),
                new m("", T, ""),
                new m(" the ", r, ""),
                new m("", u, ""),
                new m("", r, ". The "),
                new m("", e, ""),
                new m("", r, " on "),
                new m("", r, " as "),
                new m("", r, " is "),
                new m("", s, ""),
                new m("", n, "ing "),
                new m("", r, `
	`),
                new m("", r, ":"),
                new m(" ", r, ". "),
                new m("", r, "ed "),
                new m("", F, ""),
                new m("", C, ""),
                new m("", c, ""),
                new m("", r, "("),
                new m("", x, ", "),
                new m("", v, ""),
                new m("", r, " at "),
                new m("", r, "ly "),
                new m(" the ", r, " of "),
                new m("", l, ""),
                new m("", y, ""),
                new m(" ", x, ", "),
                new m("", x, '"'),
                new m(".", r, "("),
                new m("", e, " "),
                new m("", x, '">'),
                new m("", r, '="'),
                new m(" ", r, "."),
                new m(".com/", r, ""),
                new m(" the ", r, " of the "),
                new m("", x, "'"),
                new m("", r, ". This "),
                new m("", r, ","),
                new m(".", r, " "),
                new m("", x, "("),
                new m("", x, "."),
                new m("", r, " not "),
                new m(" ", r, '="'),
                new m("", r, "er "),
                new m(" ", e, " "),
                new m("", r, "al "),
                new m(" ", e, ""),
                new m("", r, "='"),
                new m("", e, '"'),
                new m("", x, ". "),
                new m(" ", r, "("),
                new m("", r, "ful "),
                new m(" ", x, ". "),
                new m("", r, "ive "),
                new m("", r, "less "),
                new m("", e, "'"),
                new m("", r, "est "),
                new m(" ", x, "."),
                new m("", e, '">'),
                new m(" ", r, "='"),
                new m("", x, ","),
                new m("", r, "ize "),
                new m("", e, "."),
                new m("ÃÂ ", r, ""),
                new m(" ", r, ","),
                new m("", x, '="'),
                new m("", e, '="'),
                new m("", r, "ous "),
                new m("", e, ", "),
                new m("", x, "='"),
                new m(" ", x, ","),
                new m(" ", e, '="'),
                new m(" ", e, ", "),
                new m("", e, ","),
                new m("", e, "("),
                new m("", e, ". "),
                new m(" ", e, "."),
                new m("", e, "='"),
                new m(" ", e, ". "),
                new m(" ", x, '="'),
                new m(" ", e, "='"),
                new m(" ", x, "='")
              ];
              d.kTransforms = I, d.kNumTransforms = I.length;
              function O(M, N) {
                return M[N] < 192 ? (M[N] >= 97 && M[N] <= 122 && (M[N] ^= 32), 1) : M[N] < 224 ? (M[N + 1] ^= 32, 2) : (M[N + 2] ^= 5, 3);
              }
              d.transformDictionaryWord = function(M, N, G, ot, K) {
                var nt = I[K].prefix, xt = I[K].suffix, bt = I[K].transform, St = bt < b ? 0 : bt - (b - 1), Dt = 0, Lt = N, jt;
                St > ot && (St = ot);
                for (var J = 0; J < nt.length; )
                  M[N++] = nt[J++];
                for (G += St, ot -= St, bt <= y && (ot -= bt), Dt = 0; Dt < ot; Dt++)
                  M[N++] = i.dictionary[G + Dt];
                if (jt = N - ot, bt === x)
                  O(M, jt);
                else if (bt === e)
                  for (; ot > 0; ) {
                    var yt = O(M, jt);
                    jt += yt, ot -= yt;
                  }
                for (var ut = 0; ut < xt.length; )
                  M[N++] = xt[ut++];
                return N - Lt;
              };
            }
          ),
          /***/
          34460: (
            /***/
            function(f, d, t) {
              f.exports = t(20980).BrotliDecompressBuffer;
            }
          ),
          /***/
          72908: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer, r = t(9964), n = t(80182), o = t(37468), h = t(22925), u = t(2269), l = t(81607);
              for (var c in l)
                d[c] = l[c];
              d.NONE = 0, d.DEFLATE = 1, d.INFLATE = 2, d.GZIP = 3, d.GUNZIP = 4, d.DEFLATERAW = 5, d.INFLATERAW = 6, d.UNZIP = 7;
              var s = 31, v = 139;
              function y(x) {
                if (typeof x != "number" || x < d.DEFLATE || x > d.UNZIP)
                  throw new TypeError("Bad argument");
                this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = !1, this.level = 0, this.memLevel = 0, this.mode = x, this.strategy = 0, this.windowBits = 0, this.write_in_progress = !1, this.pending_close = !1, this.gzip_id_bytes_read = 0;
              }
              y.prototype.close = function() {
                if (this.write_in_progress) {
                  this.pending_close = !0;
                  return;
                }
                this.pending_close = !1, n(this.init_done, "close before init"), n(this.mode <= d.UNZIP), this.mode === d.DEFLATE || this.mode === d.GZIP || this.mode === d.DEFLATERAW ? h.deflateEnd(this.strm) : (this.mode === d.INFLATE || this.mode === d.GUNZIP || this.mode === d.INFLATERAW || this.mode === d.UNZIP) && u.inflateEnd(this.strm), this.mode = d.NONE, this.dictionary = null;
              }, y.prototype.write = function(x, e, b, A, P, D, E) {
                return this._write(!0, x, e, b, A, P, D, E);
              }, y.prototype.writeSync = function(x, e, b, A, P, D, E) {
                return this._write(!1, x, e, b, A, P, D, E);
              }, y.prototype._write = function(x, e, b, A, P, D, E, T) {
                if (n.equal(arguments.length, 8), n(this.init_done, "write before init"), n(this.mode !== d.NONE, "already finalized"), n.equal(!1, this.write_in_progress, "write already in progress"), n.equal(!1, this.pending_close, "close is pending"), this.write_in_progress = !0, n.equal(!1, e === void 0, "must provide flush value"), this.write_in_progress = !0, e !== d.Z_NO_FLUSH && e !== d.Z_PARTIAL_FLUSH && e !== d.Z_SYNC_FLUSH && e !== d.Z_FULL_FLUSH && e !== d.Z_FINISH && e !== d.Z_BLOCK)
                  throw new Error("Invalid flush value");
                if (b == null && (b = i.alloc(0), P = 0, A = 0), this.strm.avail_in = P, this.strm.input = b, this.strm.next_in = A, this.strm.avail_out = T, this.strm.output = D, this.strm.next_out = E, this.flush = e, !x)
                  return this._process(), this._checkError() ? this._afterSync() : void 0;
                var C = this;
                return r.nextTick(function() {
                  C._process(), C._after();
                }), this;
              }, y.prototype._afterSync = function() {
                var x = this.strm.avail_out, e = this.strm.avail_in;
                return this.write_in_progress = !1, [e, x];
              }, y.prototype._process = function() {
                var x = null;
                switch (this.mode) {
                  case d.DEFLATE:
                  case d.GZIP:
                  case d.DEFLATERAW:
                    this.err = h.deflate(this.strm, this.flush);
                    break;
                  case d.UNZIP:
                    switch (this.strm.avail_in > 0 && (x = this.strm.next_in), this.gzip_id_bytes_read) {
                      case 0:
                        if (x === null)
                          break;
                        if (this.strm.input[x] === s) {
                          if (this.gzip_id_bytes_read = 1, x++, this.strm.avail_in === 1)
                            break;
                        } else {
                          this.mode = d.INFLATE;
                          break;
                        }
                      case 1:
                        if (x === null)
                          break;
                        this.strm.input[x] === v ? (this.gzip_id_bytes_read = 2, this.mode = d.GUNZIP) : this.mode = d.INFLATE;
                        break;
                      default:
                        throw new Error("invalid number of gzip magic number bytes read");
                    }
                  case d.INFLATE:
                  case d.GUNZIP:
                  case d.INFLATERAW:
                    for (this.err = u.inflate(
                      this.strm,
                      this.flush
                      // If data was encoded with dictionary
                    ), this.err === d.Z_NEED_DICT && this.dictionary && (this.err = u.inflateSetDictionary(this.strm, this.dictionary), this.err === d.Z_OK ? this.err = u.inflate(this.strm, this.flush) : this.err === d.Z_DATA_ERROR && (this.err = d.Z_NEED_DICT)); this.strm.avail_in > 0 && this.mode === d.GUNZIP && this.err === d.Z_STREAM_END && this.strm.next_in[0] !== 0; )
                      this.reset(), this.err = u.inflate(this.strm, this.flush);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
              }, y.prototype._checkError = function() {
                switch (this.err) {
                  case d.Z_OK:
                  case d.Z_BUF_ERROR:
                    if (this.strm.avail_out !== 0 && this.flush === d.Z_FINISH)
                      return this._error("unexpected end of file"), !1;
                    break;
                  case d.Z_STREAM_END:
                    break;
                  case d.Z_NEED_DICT:
                    return this.dictionary == null ? this._error("Missing dictionary") : this._error("Bad dictionary"), !1;
                  default:
                    return this._error("Zlib error"), !1;
                }
                return !0;
              }, y.prototype._after = function() {
                if (this._checkError()) {
                  var x = this.strm.avail_out, e = this.strm.avail_in;
                  this.write_in_progress = !1, this.callback(e, x), this.pending_close && this.close();
                }
              }, y.prototype._error = function(x) {
                this.strm.msg && (x = this.strm.msg), this.onerror(
                  x,
                  this.err
                  // no hope of rescue.
                ), this.write_in_progress = !1, this.pending_close && this.close();
              }, y.prototype.init = function(x, e, b, A, P) {
                n(arguments.length === 4 || arguments.length === 5, "init(windowBits, level, memLevel, strategy, [dictionary])"), n(x >= 8 && x <= 15, "invalid windowBits"), n(e >= -1 && e <= 9, "invalid compression level"), n(b >= 1 && b <= 9, "invalid memlevel"), n(A === d.Z_FILTERED || A === d.Z_HUFFMAN_ONLY || A === d.Z_RLE || A === d.Z_FIXED || A === d.Z_DEFAULT_STRATEGY, "invalid strategy"), this._init(e, x, b, A, P), this._setDictionary();
              }, y.prototype.params = function() {
                throw new Error("deflateParams Not supported");
              }, y.prototype.reset = function() {
                this._reset(), this._setDictionary();
              }, y.prototype._init = function(x, e, b, A, P) {
                switch (this.level = x, this.windowBits = e, this.memLevel = b, this.strategy = A, this.flush = d.Z_NO_FLUSH, this.err = d.Z_OK, (this.mode === d.GZIP || this.mode === d.GUNZIP) && (this.windowBits += 16), this.mode === d.UNZIP && (this.windowBits += 32), (this.mode === d.DEFLATERAW || this.mode === d.INFLATERAW) && (this.windowBits = -1 * this.windowBits), this.strm = new o(), this.mode) {
                  case d.DEFLATE:
                  case d.GZIP:
                  case d.DEFLATERAW:
                    this.err = h.deflateInit2(this.strm, this.level, d.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
                    break;
                  case d.INFLATE:
                  case d.GUNZIP:
                  case d.INFLATERAW:
                  case d.UNZIP:
                    this.err = u.inflateInit2(this.strm, this.windowBits);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
                this.err !== d.Z_OK && this._error("Init error"), this.dictionary = P, this.write_in_progress = !1, this.init_done = !0;
              }, y.prototype._setDictionary = function() {
                if (this.dictionary != null) {
                  switch (this.err = d.Z_OK, this.mode) {
                    case d.DEFLATE:
                    case d.DEFLATERAW:
                      this.err = h.deflateSetDictionary(this.strm, this.dictionary);
                      break;
                  }
                  this.err !== d.Z_OK && this._error("Failed to set dictionary");
                }
              }, y.prototype._reset = function() {
                switch (this.err = d.Z_OK, this.mode) {
                  case d.DEFLATE:
                  case d.DEFLATERAW:
                  case d.GZIP:
                    this.err = h.deflateReset(this.strm);
                    break;
                  case d.INFLATE:
                  case d.INFLATERAW:
                  case d.GUNZIP:
                    this.err = u.inflateReset(this.strm);
                    break;
                }
                this.err !== d.Z_OK && this._error("Failed to reset stream");
              }, d.Zlib = y;
            }
          ),
          /***/
          6729: (
            /***/
            function(f, d, t) {
              var i = t(9964), r = t(14598).Buffer, n = t(9760).Transform, o = t(72908), h = t(7187), u = t(80182).ok, l = t(14598).kMaxLength, c = "Cannot create final Buffer. It would be larger than 0x" + l.toString(16) + " bytes";
              o.Z_MIN_WINDOWBITS = 8, o.Z_MAX_WINDOWBITS = 15, o.Z_DEFAULT_WINDOWBITS = 15, o.Z_MIN_CHUNK = 64, o.Z_MAX_CHUNK = 1 / 0, o.Z_DEFAULT_CHUNK = 16384, o.Z_MIN_MEMLEVEL = 1, o.Z_MAX_MEMLEVEL = 9, o.Z_DEFAULT_MEMLEVEL = 8, o.Z_MIN_LEVEL = -1, o.Z_MAX_LEVEL = 9, o.Z_DEFAULT_LEVEL = o.Z_DEFAULT_COMPRESSION;
              for (var s = Object.keys(o), v = 0; v < s.length; v++) {
                var y = s[v];
                y.match(/^Z/) && Object.defineProperty(d, y, {
                  enumerable: !0,
                  value: o[y],
                  writable: !1
                });
              }
              for (var x = {
                Z_OK: o.Z_OK,
                Z_STREAM_END: o.Z_STREAM_END,
                Z_NEED_DICT: o.Z_NEED_DICT,
                Z_ERRNO: o.Z_ERRNO,
                Z_STREAM_ERROR: o.Z_STREAM_ERROR,
                Z_DATA_ERROR: o.Z_DATA_ERROR,
                Z_MEM_ERROR: o.Z_MEM_ERROR,
                Z_BUF_ERROR: o.Z_BUF_ERROR,
                Z_VERSION_ERROR: o.Z_VERSION_ERROR
              }, e = Object.keys(x), b = 0; b < e.length; b++) {
                var A = e[b];
                x[x[A]] = A;
              }
              Object.defineProperty(d, "codes", {
                enumerable: !0,
                value: Object.freeze(x),
                writable: !1
              }), d.Deflate = E, d.Inflate = T, d.Gzip = C, d.Gunzip = F, d.DeflateRaw = m, d.InflateRaw = I, d.Unzip = O, d.createDeflate = function(K) {
                return new E(K);
              }, d.createInflate = function(K) {
                return new T(K);
              }, d.createDeflateRaw = function(K) {
                return new m(K);
              }, d.createInflateRaw = function(K) {
                return new I(K);
              }, d.createGzip = function(K) {
                return new C(K);
              }, d.createGunzip = function(K) {
                return new F(K);
              }, d.createUnzip = function(K) {
                return new O(K);
              }, d.deflate = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), P(new E(nt), K, xt);
              }, d.deflateSync = function(K, nt) {
                return D(new E(nt), K);
              }, d.gzip = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), P(new C(nt), K, xt);
              }, d.gzipSync = function(K, nt) {
                return D(new C(nt), K);
              }, d.deflateRaw = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), P(new m(nt), K, xt);
              }, d.deflateRawSync = function(K, nt) {
                return D(new m(nt), K);
              }, d.unzip = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), P(new O(nt), K, xt);
              }, d.unzipSync = function(K, nt) {
                return D(new O(nt), K);
              }, d.inflate = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), P(new T(nt), K, xt);
              }, d.inflateSync = function(K, nt) {
                return D(new T(nt), K);
              }, d.gunzip = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), P(new F(nt), K, xt);
              }, d.gunzipSync = function(K, nt) {
                return D(new F(nt), K);
              }, d.inflateRaw = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), P(new I(nt), K, xt);
              }, d.inflateRawSync = function(K, nt) {
                return D(new I(nt), K);
              };
              function P(K, nt, xt) {
                var bt = [], St = 0;
                K.on("error", Lt), K.on("end", jt), K.end(nt), Dt();
                function Dt() {
                  for (var J; (J = K.read()) !== null; )
                    bt.push(J), St += J.length;
                  K.once("readable", Dt);
                }
                function Lt(J) {
                  K.removeListener("end", jt), K.removeListener("readable", Dt), xt(J);
                }
                function jt() {
                  var J, yt = null;
                  St >= l ? yt = new RangeError(c) : J = r.concat(bt, St), bt = [], K.close(), xt(yt, J);
                }
              }
              function D(K, nt) {
                if (typeof nt == "string" && (nt = r.from(nt)), !r.isBuffer(nt))
                  throw new TypeError("Not a string or buffer");
                var xt = K._finishFlushFlag;
                return K._processChunk(nt, xt);
              }
              function E(K) {
                if (!(this instanceof E))
                  return new E(K);
                N.call(this, K, o.DEFLATE);
              }
              function T(K) {
                if (!(this instanceof T))
                  return new T(K);
                N.call(this, K, o.INFLATE);
              }
              function C(K) {
                if (!(this instanceof C))
                  return new C(K);
                N.call(this, K, o.GZIP);
              }
              function F(K) {
                if (!(this instanceof F))
                  return new F(K);
                N.call(this, K, o.GUNZIP);
              }
              function m(K) {
                if (!(this instanceof m))
                  return new m(K);
                N.call(this, K, o.DEFLATERAW);
              }
              function I(K) {
                if (!(this instanceof I))
                  return new I(K);
                N.call(this, K, o.INFLATERAW);
              }
              function O(K) {
                if (!(this instanceof O))
                  return new O(K);
                N.call(this, K, o.UNZIP);
              }
              function M(K) {
                return K === o.Z_NO_FLUSH || K === o.Z_PARTIAL_FLUSH || K === o.Z_SYNC_FLUSH || K === o.Z_FULL_FLUSH || K === o.Z_FINISH || K === o.Z_BLOCK;
              }
              function N(K, nt) {
                var xt = this;
                if (this._opts = K = K || {}, this._chunkSize = K.chunkSize || d.Z_DEFAULT_CHUNK, n.call(this, K), K.flush && !M(K.flush))
                  throw new Error("Invalid flush flag: " + K.flush);
                if (K.finishFlush && !M(K.finishFlush))
                  throw new Error("Invalid flush flag: " + K.finishFlush);
                if (this._flushFlag = K.flush || o.Z_NO_FLUSH, this._finishFlushFlag = typeof K.finishFlush != "undefined" ? K.finishFlush : o.Z_FINISH, K.chunkSize && (K.chunkSize < d.Z_MIN_CHUNK || K.chunkSize > d.Z_MAX_CHUNK))
                  throw new Error("Invalid chunk size: " + K.chunkSize);
                if (K.windowBits && (K.windowBits < d.Z_MIN_WINDOWBITS || K.windowBits > d.Z_MAX_WINDOWBITS))
                  throw new Error("Invalid windowBits: " + K.windowBits);
                if (K.level && (K.level < d.Z_MIN_LEVEL || K.level > d.Z_MAX_LEVEL))
                  throw new Error("Invalid compression level: " + K.level);
                if (K.memLevel && (K.memLevel < d.Z_MIN_MEMLEVEL || K.memLevel > d.Z_MAX_MEMLEVEL))
                  throw new Error("Invalid memLevel: " + K.memLevel);
                if (K.strategy && K.strategy != d.Z_FILTERED && K.strategy != d.Z_HUFFMAN_ONLY && K.strategy != d.Z_RLE && K.strategy != d.Z_FIXED && K.strategy != d.Z_DEFAULT_STRATEGY)
                  throw new Error("Invalid strategy: " + K.strategy);
                if (K.dictionary && !r.isBuffer(K.dictionary))
                  throw new Error("Invalid dictionary: it should be a Buffer instance");
                this._handle = new o.Zlib(nt);
                var bt = this;
                this._hadError = !1, this._handle.onerror = function(Lt, jt) {
                  G(bt), bt._hadError = !0;
                  var J = new Error(Lt);
                  J.errno = jt, J.code = d.codes[jt], bt.emit("error", J);
                };
                var St = d.Z_DEFAULT_COMPRESSION;
                typeof K.level == "number" && (St = K.level);
                var Dt = d.Z_DEFAULT_STRATEGY;
                typeof K.strategy == "number" && (Dt = K.strategy), this._handle.init(K.windowBits || d.Z_DEFAULT_WINDOWBITS, St, K.memLevel || d.Z_DEFAULT_MEMLEVEL, Dt, K.dictionary), this._buffer = r.allocUnsafe(this._chunkSize), this._offset = 0, this._level = St, this._strategy = Dt, this.once("end", this.close), Object.defineProperty(this, "_closed", {
                  get: function() {
                    return !xt._handle;
                  },
                  configurable: !0,
                  enumerable: !0
                });
              }
              h.inherits(N, n), N.prototype.params = function(K, nt, xt) {
                if (K < d.Z_MIN_LEVEL || K > d.Z_MAX_LEVEL)
                  throw new RangeError("Invalid compression level: " + K);
                if (nt != d.Z_FILTERED && nt != d.Z_HUFFMAN_ONLY && nt != d.Z_RLE && nt != d.Z_FIXED && nt != d.Z_DEFAULT_STRATEGY)
                  throw new TypeError("Invalid strategy: " + nt);
                if (this._level !== K || this._strategy !== nt) {
                  var bt = this;
                  this.flush(o.Z_SYNC_FLUSH, function() {
                    u(bt._handle, "zlib binding closed"), bt._handle.params(K, nt), bt._hadError || (bt._level = K, bt._strategy = nt, xt && xt());
                  });
                } else
                  i.nextTick(xt);
              }, N.prototype.reset = function() {
                return u(this._handle, "zlib binding closed"), this._handle.reset();
              }, N.prototype._flush = function(K) {
                this._transform(r.alloc(0), "", K);
              }, N.prototype.flush = function(K, nt) {
                var xt = this, bt = this._writableState;
                (typeof K == "function" || K === void 0 && !nt) && (nt = K, K = o.Z_FULL_FLUSH), bt.ended ? nt && i.nextTick(nt) : bt.ending ? nt && this.once("end", nt) : bt.needDrain ? nt && this.once("drain", function() {
                  return xt.flush(K, nt);
                }) : (this._flushFlag = K, this.write(r.alloc(0), "", nt));
              }, N.prototype.close = function(K) {
                G(this, K), i.nextTick(ot, this);
              };
              function G(K, nt) {
                nt && i.nextTick(nt), K._handle && (K._handle.close(), K._handle = null);
              }
              function ot(K) {
                K.emit("close");
              }
              N.prototype._transform = function(K, nt, xt) {
                var bt, St = this._writableState, Dt = St.ending || St.ended, Lt = Dt && (!K || St.length === K.length);
                if (K !== null && !r.isBuffer(K))
                  return xt(new Error("invalid input"));
                if (!this._handle)
                  return xt(new Error("zlib binding closed"));
                Lt ? bt = this._finishFlushFlag : (bt = this._flushFlag, K.length >= St.length && (this._flushFlag = this._opts.flush || o.Z_NO_FLUSH)), this._processChunk(K, bt, xt);
              }, N.prototype._processChunk = function(K, nt, xt) {
                var bt = K && K.length, St = this._chunkSize - this._offset, Dt = 0, Lt = this, jt = typeof xt == "function";
                if (!jt) {
                  var J = [], yt = 0, ut;
                  this.on("error", function(U) {
                    ut = U;
                  }), u(this._handle, "zlib binding closed");
                  do
                    var st = this._handle.writeSync(
                      nt,
                      K,
                      // in
                      Dt,
                      // in_off
                      bt,
                      // in_len
                      this._buffer,
                      // out
                      this._offset,
                      //out_off
                      St
                    );
                  while (!this._hadError && Ft(st[0], st[1]));
                  if (this._hadError)
                    throw ut;
                  if (yt >= l)
                    throw G(this), new RangeError(c);
                  var wt = r.concat(J, yt);
                  return G(this), wt;
                }
                u(this._handle, "zlib binding closed");
                var V = this._handle.write(
                  nt,
                  K,
                  // in
                  Dt,
                  // in_off
                  bt,
                  // in_len
                  this._buffer,
                  // out
                  this._offset,
                  //out_off
                  St
                );
                V.buffer = K, V.callback = Ft;
                function Ft(U, S) {
                  if (this && (this.buffer = null, this.callback = null), !Lt._hadError) {
                    var k = St - S;
                    if (u(k >= 0, "have should not go down"), k > 0) {
                      var H = Lt._buffer.slice(Lt._offset, Lt._offset + k);
                      Lt._offset += k, jt ? Lt.push(H) : (J.push(H), yt += H.length);
                    }
                    if ((S === 0 || Lt._offset >= Lt._chunkSize) && (St = Lt._chunkSize, Lt._offset = 0, Lt._buffer = r.allocUnsafe(Lt._chunkSize)), S === 0) {
                      if (Dt += bt - U, bt = U, !jt)
                        return !0;
                      var it = Lt._handle.write(nt, K, Dt, bt, Lt._buffer, Lt._offset, Lt._chunkSize);
                      it.callback = Ft, it.buffer = K;
                      return;
                    }
                    if (!jt)
                      return !1;
                    xt();
                  }
                }
              }, h.inherits(E, N), h.inherits(T, N), h.inherits(C, N), h.inherits(F, N), h.inherits(m, N), h.inherits(I, N), h.inherits(O, N);
            }
          ),
          /***/
          17802: (
            /***/
            function(f, d, t) {
              var i = t(5049), r = t(73036), n = t(10078), o = t(61909);
              f.exports = o || i.call(n, r);
            }
          ),
          /***/
          28619: (
            /***/
            function(f, d, t) {
              var i = t(5049), r = t(73036), n = t(17802);
              f.exports = function() {
                return n(i, r, arguments);
              };
            }
          ),
          /***/
          73036: (
            /***/
            function(f) {
              f.exports = Function.prototype.apply;
            }
          ),
          /***/
          10078: (
            /***/
            function(f) {
              f.exports = Function.prototype.call;
            }
          ),
          /***/
          36688: (
            /***/
            function(f, d, t) {
              var i = t(5049), r = t(96785), n = t(10078), o = t(17802);
              f.exports = function(u) {
                if (u.length < 1 || typeof u[0] != "function")
                  throw new r("a function is required");
                return o(i, n, u);
              };
            }
          ),
          /***/
          61909: (
            /***/
            function(f) {
              f.exports = typeof Reflect != "undefined" && Reflect && Reflect.apply;
            }
          ),
          /***/
          67913: (
            /***/
            function(f, d, t) {
              var i = t(28651), r = t(26601), n = r(i("String.prototype.indexOf"));
              f.exports = function(h, u) {
                var l = i(h, !!u);
                return typeof l == "function" && n(h, ".prototype.") > -1 ? r(l) : l;
              };
            }
          ),
          /***/
          26601: (
            /***/
            function(f, d, t) {
              var i = t(86255), r = t(56649), n = t(36688), o = t(28619);
              f.exports = function(u) {
                var l = n(arguments), c = u.length - (arguments.length - 1);
                return i(
                  l,
                  1 + (c > 0 ? c : 0),
                  !0
                );
              }, r ? r(f.exports, "apply", { value: o }) : f.exports.apply = o;
            }
          ),
          /***/
          22774: (
            /***/
            function(f, d, t) {
              var i = t(28651), r = t(36688), n = r([i("%String.prototype.indexOf%")]);
              f.exports = function(h, u) {
                var l = (
                  /** @type {Parameters<typeof callBindBasic>[0][0]} */
                  i(h, !!u)
                );
                return typeof l == "function" && n(h, ".prototype.") > -1 ? r([l]) : l;
              };
            }
          ),
          /***/
          41613: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer, r = function() {
                function n(s, v, y, x) {
                  typeof v == "object" && (y = v.depth, x = v.prototype, v.filter, v = v.circular);
                  var e = [], b = [], A = typeof i != "undefined";
                  typeof v == "undefined" && (v = !0), typeof y == "undefined" && (y = 1 / 0);
                  function P(D, E) {
                    if (D === null)
                      return null;
                    if (E == 0)
                      return D;
                    var T, C;
                    if (typeof D != "object")
                      return D;
                    if (n.__isArray(D))
                      T = [];
                    else if (n.__isRegExp(D))
                      T = new RegExp(D.source, c(D)), D.lastIndex && (T.lastIndex = D.lastIndex);
                    else if (n.__isDate(D))
                      T = new Date(D.getTime());
                    else {
                      if (A && i.isBuffer(D))
                        return i.allocUnsafe ? T = i.allocUnsafe(D.length) : T = new i(D.length), D.copy(T), T;
                      typeof x == "undefined" ? (C = Object.getPrototypeOf(D), T = Object.create(C)) : (T = Object.create(x), C = x);
                    }
                    if (v) {
                      var F = e.indexOf(D);
                      if (F != -1)
                        return b[F];
                      e.push(D), b.push(T);
                    }
                    for (var m in D) {
                      var I;
                      C && (I = Object.getOwnPropertyDescriptor(C, m)), !(I && I.set == null) && (T[m] = P(D[m], E - 1));
                    }
                    return T;
                  }
                  return P(s, y);
                }
                n.clonePrototype = function(v) {
                  if (v === null)
                    return null;
                  var y = function() {
                  };
                  return y.prototype = v, new y();
                };
                function o(s) {
                  return Object.prototype.toString.call(s);
                }
                n.__objToStr = o;
                function h(s) {
                  return typeof s == "object" && o(s) === "[object Date]";
                }
                n.__isDate = h;
                function u(s) {
                  return typeof s == "object" && o(s) === "[object Array]";
                }
                n.__isArray = u;
                function l(s) {
                  return typeof s == "object" && o(s) === "[object RegExp]";
                }
                n.__isRegExp = l;
                function c(s) {
                  var v = "";
                  return s.global && (v += "g"), s.ignoreCase && (v += "i"), s.multiline && (v += "m"), v;
                }
                return n.__getRegExpFlags = c, n;
              }();
              f.exports && (f.exports = r);
            }
          ),
          /***/
          83043: (
            /***/
            function(f, d, t) {
              t(59883);
              var i = t(11206);
              f.exports = i.Object.values;
            }
          ),
          /***/
          42075: (
            /***/
            function(f, d, t) {
              t(94910), t(81755), t(14032), t(68067), t(77074), t(44455), t(80986), t(58281);
              var i = t(11206);
              f.exports = i.Promise;
            }
          ),
          /***/
          98168: (
            /***/
            function(f, d, t) {
              var i = t(90780);
              t(84151), t(98443), t(49261), t(67858), f.exports = i;
            }
          ),
          /***/
          32631: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(94578), n = t(68664), o = i.TypeError;
              f.exports = function(h) {
                if (r(h))
                  return h;
                throw o(n(h) + " is not a function");
              };
            }
          ),
          /***/
          69075: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(20884), n = t(68664), o = i.TypeError;
              f.exports = function(h) {
                if (r(h))
                  return h;
                throw o(n(h) + " is not a constructor");
              };
            }
          ),
          /***/
          58659: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(94578), n = i.String, o = i.TypeError;
              f.exports = function(h) {
                if (typeof h == "object" || r(h))
                  return h;
                throw o("Can't set " + n(h) + " as a prototype");
              };
            }
          ),
          /***/
          71156: (
            /***/
            function(f, d, t) {
              var i = t(38688), r = t(10819), n = t(95892), o = i("unscopables"), h = Array.prototype;
              h[o] == null && n.f(h, o, {
                configurable: !0,
                value: r(null)
              }), f.exports = function(u) {
                h[o][u] = !0;
              };
            }
          ),
          /***/
          36352: (
            /***/
            function(f, d, t) {
              var i = t(69510).charAt;
              f.exports = function(r, n, o) {
                return n + (o ? i(r, n).length : 1);
              };
            }
          ),
          /***/
          2868: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(70176), n = i.TypeError;
              f.exports = function(o, h) {
                if (r(h, o))
                  return o;
                throw n("Incorrect invocation");
              };
            }
          ),
          /***/
          34984: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(24517), n = i.String, o = i.TypeError;
              f.exports = function(h) {
                if (r(h))
                  return h;
                throw o(n(h) + " is not an object");
              };
            }
          ),
          /***/
          92642: (
            /***/
            function(f, d, t) {
              var i = t(43162), r = t(74841), n = t(45495), o = Math.min;
              f.exports = [].copyWithin || function(u, l) {
                var c = i(this), s = n(c), v = r(u, s), y = r(l, s), x = arguments.length > 2 ? arguments[2] : void 0, e = o((x === void 0 ? s : r(x, s)) - y, s - v), b = 1;
                for (y < v && v < y + e && (b = -1, y += e - 1, v += e - 1); e-- > 0; )
                  y in c ? c[v] = c[y] : delete c[v], v += b, y += b;
                return c;
              };
            }
          ),
          /***/
          72864: (
            /***/
            function(f, d, t) {
              var i = t(43162), r = t(74841), n = t(45495);
              f.exports = function(h) {
                for (var u = i(this), l = n(u), c = arguments.length, s = r(c > 1 ? arguments[1] : void 0, l), v = c > 2 ? arguments[2] : void 0, y = v === void 0 ? l : r(v, l); y > s; )
                  u[s++] = h;
                return u;
              };
            }
          ),
          /***/
          82938: (
            /***/
            function(f, d, t) {
              var i = t(91102).forEach, r = t(81007), n = r("forEach");
              f.exports = n ? [].forEach : function(h) {
                return i(this, h, arguments.length > 1 ? arguments[1] : void 0);
              };
            }
          ),
          /***/
          34269: (
            /***/
            function(f) {
              f.exports = function(d, t) {
                for (var i = 0, r = t.length, n = new d(r); r > i; )
                  n[i] = t[i++];
                return n;
              };
            }
          ),
          /***/
          95717: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(25567), n = t(2834), o = t(43162), h = t(97738), u = t(89564), l = t(20884), c = t(45495), s = t(38639), v = t(15892), y = t(13872), x = i.Array;
              f.exports = function(b) {
                var A = o(b), P = l(this), D = arguments.length, E = D > 1 ? arguments[1] : void 0, T = E !== void 0;
                T && (E = r(E, D > 2 ? arguments[2] : void 0));
                var C = y(A), F = 0, m, I, O, M, N, G;
                if (C && !(this == x && u(C)))
                  for (M = v(A, C), N = M.next, I = P ? new this() : []; !(O = n(N, M)).done; F++)
                    G = T ? h(M, E, [O.value, F], !0) : O.value, s(I, F, G);
                else
                  for (m = c(A), I = P ? new this(m) : x(m); m > F; F++)
                    G = T ? E(A[F], F) : A[F], s(I, F, G);
                return I.length = F, I;
              };
            }
          ),
          /***/
          12636: (
            /***/
            function(f, d, t) {
              var i = t(98086), r = t(74841), n = t(45495), o = function(h) {
                return function(u, l, c) {
                  var s = i(u), v = n(s), y = r(c, v), x;
                  if (h && l != l) {
                    for (; v > y; )
                      if (x = s[y++], x != x)
                        return !0;
                  } else
                    for (; v > y; y++)
                      if ((h || y in s) && s[y] === l)
                        return h || y || 0;
                  return !h && -1;
                };
              };
              f.exports = {
                // `Array.prototype.includes` method
                // https://tc39.es/ecma262/#sec-array.prototype.includes
                includes: o(!0),
                // `Array.prototype.indexOf` method
                // https://tc39.es/ecma262/#sec-array.prototype.indexof
                indexOf: o(!1)
              };
            }
          ),
          /***/
          91102: (
            /***/
            function(f, d, t) {
              var i = t(25567), r = t(38347), n = t(7514), o = t(43162), h = t(45495), u = t(45744), l = r([].push), c = function(s) {
                var v = s == 1, y = s == 2, x = s == 3, e = s == 4, b = s == 6, A = s == 7, P = s == 5 || b;
                return function(D, E, T, C) {
                  for (var F = o(D), m = n(F), I = i(E, T), O = h(m), M = 0, N = C || u, G = v ? N(D, O) : y || A ? N(D, 0) : void 0, ot, K; O > M; M++)
                    if ((P || M in m) && (ot = m[M], K = I(ot, M, F), s))
                      if (v)
                        G[M] = K;
                      else if (K)
                        switch (s) {
                          case 3:
                            return !0;
                          case 5:
                            return ot;
                          case 6:
                            return M;
                          case 2:
                            l(G, ot);
                        }
                      else
                        switch (s) {
                          case 4:
                            return !1;
                          case 7:
                            l(G, ot);
                        }
                  return b ? -1 : x || e ? e : G;
                };
              };
              f.exports = {
                // `Array.prototype.forEach` method
                // https://tc39.es/ecma262/#sec-array.prototype.foreach
                forEach: c(0),
                // `Array.prototype.map` method
                // https://tc39.es/ecma262/#sec-array.prototype.map
                map: c(1),
                // `Array.prototype.filter` method
                // https://tc39.es/ecma262/#sec-array.prototype.filter
                filter: c(2),
                // `Array.prototype.some` method
                // https://tc39.es/ecma262/#sec-array.prototype.some
                some: c(3),
                // `Array.prototype.every` method
                // https://tc39.es/ecma262/#sec-array.prototype.every
                every: c(4),
                // `Array.prototype.find` method
                // https://tc39.es/ecma262/#sec-array.prototype.find
                find: c(5),
                // `Array.prototype.findIndex` method
                // https://tc39.es/ecma262/#sec-array.prototype.findIndex
                findIndex: c(6),
                // `Array.prototype.filterReject` method
                // https://github.com/tc39/proposal-array-filtering
                filterReject: c(7)
              };
            }
          ),
          /***/
          84320: (
            /***/
            function(f, d, t) {
              var i = t(58448), r = t(98086), n = t(26882), o = t(45495), h = t(81007), u = Math.min, l = [].lastIndexOf, c = !!l && 1 / [1].lastIndexOf(1, -0) < 0, s = h("lastIndexOf"), v = c || !s;
              f.exports = v ? function(x) {
                if (c)
                  return i(l, this, arguments) || 0;
                var e = r(this), b = o(e), A = b - 1;
                for (arguments.length > 1 && (A = u(A, n(arguments[1]))), A < 0 && (A = b + A); A >= 0; A--)
                  if (A in e && e[A] === x)
                    return A || 0;
                return -1;
              } : l;
            }
          ),
          /***/
          56280: (
            /***/
            function(f, d, t) {
              var i = t(47044), r = t(38688), n = t(70091), o = r("species");
              f.exports = function(h) {
                return n >= 51 || !i(function() {
                  var u = [], l = u.constructor = {};
                  return l[o] = function() {
                    return { foo: 1 };
                  }, u[h](Boolean).foo !== 1;
                });
              };
            }
          ),
          /***/
          81007: (
            /***/
            function(f, d, t) {
              var i = t(47044);
              f.exports = function(r, n) {
                var o = [][r];
                return !!o && i(function() {
                  o.call(null, n || function() {
                    throw 1;
                  }, 1);
                });
              };
            }
          ),
          /***/
          32843: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(32631), n = t(43162), o = t(7514), h = t(45495), u = i.TypeError, l = function(c) {
                return function(s, v, y, x) {
                  r(v);
                  var e = n(s), b = o(e), A = h(e), P = c ? A - 1 : 0, D = c ? -1 : 1;
                  if (y < 2)
                    for (; ; ) {
                      if (P in b) {
                        x = b[P], P += D;
                        break;
                      }
                      if (P += D, c ? P < 0 : A <= P)
                        throw u("Reduce of empty array with no initial value");
                    }
                  for (; c ? P >= 0 : A > P; P += D)
                    P in b && (x = v(x, b[P], P, e));
                  return x;
                };
              };
              f.exports = {
                // `Array.prototype.reduce` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduce
                left: l(!1),
                // `Array.prototype.reduceRight` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduceright
                right: l(!0)
              };
            }
          ),
          /***/
          73163: (
            /***/
            function(f, d, t) {
              var i = t(38347);
              f.exports = i([].slice);
            }
          ),
          /***/
          43977: (
            /***/
            function(f, d, t) {
              var i = t(73163), r = Math.floor, n = function(u, l) {
                var c = u.length, s = r(c / 2);
                return c < 8 ? o(u, l) : h(
                  u,
                  n(i(u, 0, s), l),
                  n(i(u, s), l),
                  l
                );
              }, o = function(u, l) {
                for (var c = u.length, s = 1, v, y; s < c; ) {
                  for (y = s, v = u[s]; y && l(u[y - 1], v) > 0; )
                    u[y] = u[--y];
                  y !== s++ && (u[y] = v);
                }
                return u;
              }, h = function(u, l, c, s) {
                for (var v = l.length, y = c.length, x = 0, e = 0; x < v || e < y; )
                  u[x + e] = x < v && e < y ? s(l[x], c[e]) <= 0 ? l[x++] : c[e++] : x < v ? l[x++] : c[e++];
                return u;
              };
              f.exports = n;
            }
          ),
          /***/
          98578: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(59113), n = t(20884), o = t(24517), h = t(38688), u = h("species"), l = i.Array;
              f.exports = function(c) {
                var s;
                return r(c) && (s = c.constructor, n(s) && (s === l || r(s.prototype)) ? s = void 0 : o(s) && (s = s[u], s === null && (s = void 0))), s === void 0 ? l : s;
              };
            }
          ),
          /***/
          45744: (
            /***/
            function(f, d, t) {
              var i = t(98578);
              f.exports = function(r, n) {
                return new (i(r))(n === 0 ? 0 : n);
              };
            }
          ),
          /***/
          97738: (
            /***/
            function(f, d, t) {
              var i = t(34984), r = t(50194);
              f.exports = function(n, o, h, u) {
                try {
                  return u ? o(i(h)[0], h[1]) : o(h);
                } catch (l) {
                  r(n, "throw", l);
                }
              };
            }
          ),
          /***/
          46769: (
            /***/
            function(f, d, t) {
              var i = t(38688), r = i("iterator"), n = !1;
              try {
                var o = 0, h = {
                  next: function() {
                    return { done: !!o++ };
                  },
                  return: function() {
                    n = !0;
                  }
                };
                h[r] = function() {
                  return this;
                }, Array.from(h, function() {
                  throw 2;
                });
              } catch (u) {
              }
              f.exports = function(u, l) {
                if (!l && !n)
                  return !1;
                var c = !1;
                try {
                  var s = {};
                  s[r] = function() {
                    return {
                      next: function() {
                        return { done: c = !0 };
                      }
                    };
                  }, u(s);
                } catch (v) {
                }
                return c;
              };
            }
          ),
          /***/
          93975: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = i({}.toString), n = i("".slice);
              f.exports = function(o) {
                return n(r(o), 8, -1);
              };
            }
          ),
          /***/
          52564: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(24663), n = t(94578), o = t(93975), h = t(38688), u = h("toStringTag"), l = i.Object, c = o(function() {
                return arguments;
              }()) == "Arguments", s = function(v, y) {
                try {
                  return v[y];
                } catch (x) {
                }
              };
              f.exports = r ? o : function(v) {
                var y, x, e;
                return v === void 0 ? "Undefined" : v === null ? "Null" : typeof (x = s(y = l(v), u)) == "string" ? x : c ? o(y) : (e = o(y)) == "Object" && n(y.callee) ? "Arguments" : e;
              };
            }
          ),
          /***/
          34074: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(73163), n = i("".replace), o = i("".split), h = i([].join), u = function(v) {
                return String(Error(v).stack);
              }("zxcasd"), l = /\n\s*at [^:]*:[^\n]*/, c = l.test(u), s = /@[^\n]*\n/.test(u) && !/zxcasd/.test(u);
              f.exports = function(v, y) {
                if (typeof v != "string")
                  return v;
                if (c)
                  for (; y--; )
                    v = n(v, l, "");
                else if (s)
                  return h(r(o(v, `
`), y), `
`);
                return v;
              };
            }
          ),
          /***/
          9649: (
            /***/
            function(f, d, t) {
              var i = t(95892).f, r = t(10819), n = t(15341), o = t(25567), h = t(2868), u = t(80383), l = t(97001), c = t(51334), s = t(15567), v = t(62148).fastKey, y = t(70172), x = y.set, e = y.getterFor;
              f.exports = {
                getConstructor: function(b, A, P, D) {
                  var E = b(function(I, O) {
                    h(I, T), x(I, {
                      type: A,
                      index: r(null),
                      first: void 0,
                      last: void 0,
                      size: 0
                    }), s || (I.size = 0), O != null && u(O, I[D], { that: I, AS_ENTRIES: P });
                  }), T = E.prototype, C = e(A), F = function(I, O, M) {
                    var N = C(I), G = m(I, O), ot, K;
                    return G ? G.value = M : (N.last = G = {
                      index: K = v(O, !0),
                      key: O,
                      value: M,
                      previous: ot = N.last,
                      next: void 0,
                      removed: !1
                    }, N.first || (N.first = G), ot && (ot.next = G), s ? N.size++ : I.size++, K !== "F" && (N.index[K] = G)), I;
                  }, m = function(I, O) {
                    var M = C(I), N = v(O), G;
                    if (N !== "F")
                      return M.index[N];
                    for (G = M.first; G; G = G.next)
                      if (G.key == O)
                        return G;
                  };
                  return n(T, {
                    // `{ Map, Set }.prototype.clear()` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.clear
                    // https://tc39.es/ecma262/#sec-set.prototype.clear
                    clear: function() {
                      for (var O = this, M = C(O), N = M.index, G = M.first; G; )
                        G.removed = !0, G.previous && (G.previous = G.previous.next = void 0), delete N[G.index], G = G.next;
                      M.first = M.last = void 0, s ? M.size = 0 : O.size = 0;
                    },
                    // `{ Map, Set }.prototype.delete(key)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.delete
                    // https://tc39.es/ecma262/#sec-set.prototype.delete
                    delete: function(I) {
                      var O = this, M = C(O), N = m(O, I);
                      if (N) {
                        var G = N.next, ot = N.previous;
                        delete M.index[N.index], N.removed = !0, ot && (ot.next = G), G && (G.previous = ot), M.first == N && (M.first = G), M.last == N && (M.last = ot), s ? M.size-- : O.size--;
                      }
                      return !!N;
                    },
                    // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.foreach
                    // https://tc39.es/ecma262/#sec-set.prototype.foreach
                    forEach: function(O) {
                      for (var M = C(this), N = o(O, arguments.length > 1 ? arguments[1] : void 0), G; G = G ? G.next : M.first; )
                        for (N(G.value, G.key, this); G && G.removed; )
                          G = G.previous;
                    },
                    // `{ Map, Set}.prototype.has(key)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.has
                    // https://tc39.es/ecma262/#sec-set.prototype.has
                    has: function(O) {
                      return !!m(this, O);
                    }
                  }), n(T, P ? {
                    // `Map.prototype.get(key)` method
                    // https://tc39.es/ecma262/#sec-map.prototype.get
                    get: function(O) {
                      var M = m(this, O);
                      return M && M.value;
                    },
                    // `Map.prototype.set(key, value)` method
                    // https://tc39.es/ecma262/#sec-map.prototype.set
                    set: function(O, M) {
                      return F(this, O === 0 ? 0 : O, M);
                    }
                  } : {
                    // `Set.prototype.add(value)` method
                    // https://tc39.es/ecma262/#sec-set.prototype.add
                    add: function(O) {
                      return F(this, O = O === 0 ? 0 : O, O);
                    }
                  }), s && i(T, "size", {
                    get: function() {
                      return C(this).size;
                    }
                  }), E;
                },
                setStrong: function(b, A, P) {
                  var D = A + " Iterator", E = e(A), T = e(D);
                  l(b, A, function(C, F) {
                    x(this, {
                      type: D,
                      target: C,
                      state: E(C),
                      kind: F,
                      last: void 0
                    });
                  }, function() {
                    for (var C = T(this), F = C.kind, m = C.last; m && m.removed; )
                      m = m.previous;
                    return !C.target || !(C.last = m = m ? m.next : C.state.first) ? (C.target = void 0, { value: void 0, done: !0 }) : F == "keys" ? { value: m.key, done: !1 } : F == "values" ? { value: m.value, done: !1 } : { value: [m.key, m.value], done: !1 };
                  }, P ? "entries" : "values", !P, !0), c(A);
                }
              };
            }
          ),
          /***/
          36673: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(38347), o = t(39599), h = t(13711), u = t(62148), l = t(80383), c = t(2868), s = t(94578), v = t(24517), y = t(47044), x = t(46769), e = t(15216), b = t(51868);
              f.exports = function(A, P, D) {
                var E = A.indexOf("Map") !== -1, T = A.indexOf("Weak") !== -1, C = E ? "set" : "add", F = r[A], m = F && F.prototype, I = F, O = {}, M = function(bt) {
                  var St = n(m[bt]);
                  h(
                    m,
                    bt,
                    bt == "add" ? function(Lt) {
                      return St(this, Lt === 0 ? 0 : Lt), this;
                    } : bt == "delete" ? function(Dt) {
                      return T && !v(Dt) ? !1 : St(this, Dt === 0 ? 0 : Dt);
                    } : bt == "get" ? function(Lt) {
                      return T && !v(Lt) ? void 0 : St(this, Lt === 0 ? 0 : Lt);
                    } : bt == "has" ? function(Lt) {
                      return T && !v(Lt) ? !1 : St(this, Lt === 0 ? 0 : Lt);
                    } : function(Lt, jt) {
                      return St(this, Lt === 0 ? 0 : Lt, jt), this;
                    }
                  );
                }, N = o(
                  A,
                  !s(F) || !(T || m.forEach && !y(function() {
                    new F().entries().next();
                  }))
                );
                if (N)
                  I = D.getConstructor(P, A, E, C), u.enable();
                else if (o(A, !0)) {
                  var G = new I(), ot = G[C](T ? {} : -0, 1) != G, K = y(function() {
                    G.has(1);
                  }), nt = x(function(bt) {
                    new F(bt);
                  }), xt = !T && y(function() {
                    for (var bt = new F(), St = 5; St--; )
                      bt[C](St, St);
                    return !bt.has(-0);
                  });
                  nt || (I = P(function(bt, St) {
                    c(bt, m);
                    var Dt = b(new F(), bt, I);
                    return St != null && l(St, Dt[C], { that: Dt, AS_ENTRIES: E }), Dt;
                  }), I.prototype = m, m.constructor = I), (K || xt) && (M("delete"), M("has"), E && M("get")), (xt || ot) && M(C), T && m.clear && delete m.clear;
                }
                return O[A] = I, i({ global: !0, forced: I != F }, O), e(I, A), T || D.setStrong(I, A, E), I;
              };
            }
          ),
          /***/
          2675: (
            /***/
            function(f, d, t) {
              var i = t(20340), r = t(21594), n = t(72062), o = t(95892);
              f.exports = function(h, u) {
                for (var l = r(u), c = o.f, s = n.f, v = 0; v < l.length; v++) {
                  var y = l[v];
                  i(h, y) || c(h, y, s(u, y));
                }
              };
            }
          ),
          /***/
          91151: (
            /***/
            function(f, d, t) {
              var i = t(38688), r = i("match");
              f.exports = function(n) {
                var o = /./;
                try {
                  "/./"[n](o);
                } catch (h) {
                  try {
                    return o[r] = !1, "/./"[n](o);
                  } catch (u) {
                  }
                }
                return !1;
              };
            }
          ),
          /***/
          68494: (
            /***/
            function(f, d, t) {
              var i = t(47044);
              f.exports = !i(function() {
                function r() {
                }
                return r.prototype.constructor = null, Object.getPrototypeOf(new r()) !== r.prototype;
              });
            }
          ),
          /***/
          91159: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(83943), n = t(25096), o = /"/g, h = i("".replace);
              f.exports = function(u, l, c, s) {
                var v = n(r(u)), y = "<" + l;
                return c !== "" && (y += " " + c + '="' + h(n(s), o, "&quot;") + '"'), y + ">" + v + "</" + l + ">";
              };
            }
          ),
          /***/
          13945: (
            /***/
            function(f, d, t) {
              var i = t(5844).IteratorPrototype, r = t(10819), n = t(97841), o = t(15216), h = t(15366), u = function() {
                return this;
              };
              f.exports = function(l, c, s) {
                var v = c + " Iterator";
                return l.prototype = r(i, { next: n(1, s) }), o(l, v, !1, !0), h[v] = u, l;
              };
            }
          ),
          /***/
          48914: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(95892), n = t(97841);
              f.exports = i ? function(o, h, u) {
                return r.f(o, h, n(1, u));
              } : function(o, h, u) {
                return o[h] = u, o;
              };
            }
          ),
          /***/
          97841: (
            /***/
            function(f) {
              f.exports = function(d, t) {
                return {
                  enumerable: !(d & 1),
                  configurable: !(d & 2),
                  writable: !(d & 4),
                  value: t
                };
              };
            }
          ),
          /***/
          38639: (
            /***/
            function(f, d, t) {
              var i = t(63918), r = t(95892), n = t(97841);
              f.exports = function(o, h, u) {
                var l = i(h);
                l in o ? r.f(o, l, n(0, u)) : o[l] = u;
              };
            }
          ),
          /***/
          53087: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(34984), n = t(39629), o = i.TypeError;
              f.exports = function(h) {
                if (r(this), h === "string" || h === "default")
                  h = "string";
                else if (h !== "number")
                  throw o("Incorrect hint");
                return n(this, h);
              };
            }
          ),
          /***/
          97001: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(2834), n = t(63432), o = t(7081), h = t(94578), u = t(13945), l = t(69548), c = t(3840), s = t(15216), v = t(48914), y = t(13711), x = t(38688), e = t(15366), b = t(5844), A = o.PROPER, P = o.CONFIGURABLE, D = b.IteratorPrototype, E = b.BUGGY_SAFARI_ITERATORS, T = x("iterator"), C = "keys", F = "values", m = "entries", I = function() {
                return this;
              };
              f.exports = function(O, M, N, G, ot, K, nt) {
                u(N, M, G);
                var xt = function(wt) {
                  if (wt === ot && jt)
                    return jt;
                  if (!E && wt in Dt)
                    return Dt[wt];
                  switch (wt) {
                    case C:
                      return function() {
                        return new N(this, wt);
                      };
                    case F:
                      return function() {
                        return new N(this, wt);
                      };
                    case m:
                      return function() {
                        return new N(this, wt);
                      };
                  }
                  return function() {
                    return new N(this);
                  };
                }, bt = M + " Iterator", St = !1, Dt = O.prototype, Lt = Dt[T] || Dt["@@iterator"] || ot && Dt[ot], jt = !E && Lt || xt(ot), J = M == "Array" && Dt.entries || Lt, yt, ut, st;
                if (J && (yt = l(J.call(new O())), yt !== Object.prototype && yt.next && (!n && l(yt) !== D && (c ? c(yt, D) : h(yt[T]) || y(yt, T, I)), s(yt, bt, !0, !0), n && (e[bt] = I))), A && ot == F && Lt && Lt.name !== F && (!n && P ? v(Dt, "name", F) : (St = !0, jt = function() {
                  return r(Lt, this);
                })), ot)
                  if (ut = {
                    values: xt(F),
                    keys: K ? jt : xt(C),
                    entries: xt(m)
                  }, nt)
                    for (st in ut)
                      (E || St || !(st in Dt)) && y(Dt, st, ut[st]);
                  else
                    i({ target: M, proto: !0, forced: E || St }, ut);
                return (!n || nt) && Dt[T] !== jt && y(Dt, T, jt, { name: ot }), e[M] = jt, ut;
              };
            }
          ),
          /***/
          46042: (
            /***/
            function(f, d, t) {
              var i = t(11206), r = t(20340), n = t(75960), o = t(95892).f;
              f.exports = function(h) {
                var u = i.Symbol || (i.Symbol = {});
                r(u, h) || o(u, h, {
                  value: n.f(h)
                });
              };
            }
          ),
          /***/
          15567: (
            /***/
            function(f, d, t) {
              var i = t(47044);
              f.exports = !i(function() {
                return Object.defineProperty({}, 1, { get: function() {
                  return 7;
                } })[1] != 7;
              });
            }
          ),
          /***/
          12072: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(24517), n = i.document, o = r(n) && r(n.createElement);
              f.exports = function(h) {
                return o ? n.createElement(h) : {};
              };
            }
          ),
          /***/
          23327: (
            /***/
            function(f) {
              f.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
              };
            }
          ),
          /***/
          67797: (
            /***/
            function(f, d, t) {
              var i = t(12072), r = i("span").classList, n = r && r.constructor && r.constructor.prototype;
              f.exports = n === Object.prototype ? void 0 : n;
            }
          ),
          /***/
          3809: (
            /***/
            function(f, d, t) {
              var i = t(40715), r = i.match(/firefox\/(\d+)/i);
              f.exports = !!r && +r[1];
            }
          ),
          /***/
          3157: (
            /***/
            function(f) {
              f.exports = typeof window == "object";
            }
          ),
          /***/
          21983: (
            /***/
            function(f, d, t) {
              var i = t(40715);
              f.exports = /MSIE|Trident/.test(i);
            }
          ),
          /***/
          70573: (
            /***/
            function(f, d, t) {
              var i = t(40715), r = t(32010);
              f.exports = /ipad|iphone|ipod/i.test(i) && r.Pebble !== void 0;
            }
          ),
          /***/
          17716: (
            /***/
            function(f, d, t) {
              var i = t(40715);
              f.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(i);
            }
          ),
          /***/
          95053: (
            /***/
            function(f, d, t) {
              var i = t(93975), r = t(32010);
              f.exports = i(r.process) == "process";
            }
          ),
          /***/
          664: (
            /***/
            function(f, d, t) {
              var i = t(40715);
              f.exports = /web0s(?!.*chrome)/i.test(i);
            }
          ),
          /***/
          40715: (
            /***/
            function(f, d, t) {
              var i = t(38486);
              f.exports = i("navigator", "userAgent") || "";
            }
          ),
          /***/
          70091: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(40715), n = i.process, o = i.Deno, h = n && n.versions || o && o.version, u = h && h.v8, l, c;
              u && (l = u.split("."), c = l[0] > 0 && l[0] < 4 ? 1 : +(l[0] + l[1])), !c && r && (l = r.match(/Edge\/(\d+)/), (!l || l[1] >= 74) && (l = r.match(/Chrome\/(\d+)/), l && (c = +l[1]))), f.exports = c;
            }
          ),
          /***/
          41731: (
            /***/
            function(f, d, t) {
              var i = t(40715), r = i.match(/AppleWebKit\/(\d+)\./);
              f.exports = !!r && +r[1];
            }
          ),
          /***/
          2416: (
            /***/
            function(f) {
              f.exports = [
                "constructor",
                "hasOwnProperty",
                "isPrototypeOf",
                "propertyIsEnumerable",
                "toLocaleString",
                "toString",
                "valueOf"
              ];
            }
          ),
          /***/
          45144: (
            /***/
            function(f, d, t) {
              var i = t(47044), r = t(97841);
              f.exports = !i(function() {
                var n = Error("a");
                return "stack" in n ? (Object.defineProperty(n, "stack", r(1, 7)), n.stack !== 7) : !0;
              });
            }
          ),
          /***/
          56475: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(72062).f, n = t(48914), o = t(13711), h = t(7421), u = t(2675), l = t(39599);
              f.exports = function(c, s) {
                var v = c.target, y = c.global, x = c.stat, e, b, A, P, D, E;
                if (y ? b = i : x ? b = i[v] || h(v, {}) : b = (i[v] || {}).prototype, b)
                  for (A in s) {
                    if (D = s[A], c.noTargetGet ? (E = r(b, A), P = E && E.value) : P = b[A], e = l(y ? A : v + (x ? "." : "#") + A, c.forced), !e && P !== void 0) {
                      if (typeof D == typeof P)
                        continue;
                      u(D, P);
                    }
                    (c.sham || P && P.sham) && n(D, "sham", !0), o(b, A, D, c);
                  }
              };
            }
          ),
          /***/
          47044: (
            /***/
            function(f) {
              f.exports = function(d) {
                try {
                  return !!d();
                } catch (t) {
                  return !0;
                }
              };
            }
          ),
          /***/
          11813: (
            /***/
            function(f, d, t) {
              t(61726);
              var i = t(38347), r = t(13711), n = t(49820), o = t(47044), h = t(38688), u = t(48914), l = h("species"), c = RegExp.prototype;
              f.exports = function(s, v, y, x) {
                var e = h(s), b = !o(function() {
                  var E = {};
                  return E[e] = function() {
                    return 7;
                  }, ""[s](E) != 7;
                }), A = b && !o(function() {
                  var E = !1, T = /a/;
                  return s === "split" && (T = {}, T.constructor = {}, T.constructor[l] = function() {
                    return T;
                  }, T.flags = "", T[e] = /./[e]), T.exec = function() {
                    return E = !0, null;
                  }, T[e](""), !E;
                });
                if (!b || !A || y) {
                  var P = i(/./[e]), D = v(e, ""[s], function(E, T, C, F, m) {
                    var I = i(E), O = T.exec;
                    return O === n || O === c.exec ? b && !m ? { done: !0, value: P(T, C, F) } : { done: !0, value: I(C, T, F) } : { done: !1 };
                  });
                  r(String.prototype, s, D[0]), r(c, e, D[1]);
                }
                x && u(c[e], "sham", !0);
              };
            }
          ),
          /***/
          55481: (
            /***/
            function(f, d, t) {
              var i = t(47044);
              f.exports = !i(function() {
                return Object.isExtensible(Object.preventExtensions({}));
              });
            }
          ),
          /***/
          58448: (
            /***/
            function(f) {
              var d = Function.prototype, t = d.apply, i = d.bind, r = d.call;
              f.exports = typeof Reflect == "object" && Reflect.apply || (i ? r.bind(t) : function() {
                return r.apply(t, arguments);
              });
            }
          ),
          /***/
          25567: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(32631), n = i(i.bind);
              f.exports = function(o, h) {
                return r(o), h === void 0 ? o : n ? n(o, h) : function() {
                  return o.apply(h, arguments);
                };
              };
            }
          ),
          /***/
          2834: (
            /***/
            function(f) {
              var d = Function.prototype.call;
              f.exports = d.bind ? d.bind(d) : function() {
                return d.apply(d, arguments);
              };
            }
          ),
          /***/
          7081: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(20340), n = Function.prototype, o = i && Object.getOwnPropertyDescriptor, h = r(n, "name"), u = h && function() {
              }.name === "something", l = h && (!i || i && o(n, "name").configurable);
              f.exports = {
                EXISTS: h,
                PROPER: u,
                CONFIGURABLE: l
              };
            }
          ),
          /***/
          38347: (
            /***/
            function(f) {
              var d = Function.prototype, t = d.bind, i = d.call, r = t && t.bind(i);
              f.exports = t ? function(n) {
                return n && r(i, n);
              } : function(n) {
                return n && function() {
                  return i.apply(n, arguments);
                };
              };
            }
          ),
          /***/
          38486: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(94578), n = function(o) {
                return r(o) ? o : void 0;
              };
              f.exports = function(o, h) {
                return arguments.length < 2 ? n(i[o]) : i[o] && i[o][h];
              };
            }
          ),
          /***/
          13872: (
            /***/
            function(f, d, t) {
              var i = t(52564), r = t(51839), n = t(15366), o = t(38688), h = o("iterator");
              f.exports = function(u) {
                if (u != null)
                  return r(u, h) || r(u, "@@iterator") || n[i(u)];
              };
            }
          ),
          /***/
          15892: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(2834), n = t(32631), o = t(34984), h = t(68664), u = t(13872), l = i.TypeError;
              f.exports = function(c, s) {
                var v = arguments.length < 2 ? u(c) : s;
                if (n(v))
                  return o(r(v, c));
                throw l(h(c) + " is not iterable");
              };
            }
          ),
          /***/
          51839: (
            /***/
            function(f, d, t) {
              var i = t(32631);
              f.exports = function(r, n) {
                var o = r[n];
                return o == null ? void 0 : i(o);
              };
            }
          ),
          /***/
          29519: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(43162), n = Math.floor, o = i("".charAt), h = i("".replace), u = i("".slice), l = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, c = /\$([$&'`]|\d{1,2})/g;
              f.exports = function(s, v, y, x, e, b) {
                var A = y + s.length, P = x.length, D = c;
                return e !== void 0 && (e = r(e), D = l), h(b, D, function(E, T) {
                  var C;
                  switch (o(T, 0)) {
                    case "$":
                      return "$";
                    case "&":
                      return s;
                    case "`":
                      return u(v, 0, y);
                    case "'":
                      return u(v, A);
                    case "<":
                      C = e[u(T, 1, -1)];
                      break;
                    default:
                      var F = +T;
                      if (F === 0)
                        return E;
                      if (F > P) {
                        var m = n(F / 10);
                        return m === 0 ? E : m <= P ? x[m - 1] === void 0 ? o(T, 1) : x[m - 1] + o(T, 1) : E;
                      }
                      C = x[F - 1];
                  }
                  return C === void 0 ? "" : C;
                });
              };
            }
          ),
          /***/
          32010: (
            /***/
            function(f, d, t) {
              var i = function(r) {
                return r && r.Math == Math && r;
              };
              f.exports = // eslint-disable-next-line es/no-global-this -- safe
              i(typeof globalThis == "object" && globalThis) || i(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
              i(typeof self == "object" && self) || i(typeof t.g == "object" && t.g) || // eslint-disable-next-line no-new-func -- fallback
              function() {
                return this;
              }() || Function("return this")();
            }
          ),
          /***/
          20340: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(43162), n = i({}.hasOwnProperty);
              f.exports = Object.hasOwn || function(h, u) {
                return n(r(h), u);
              };
            }
          ),
          /***/
          90682: (
            /***/
            function(f) {
              f.exports = {};
            }
          ),
          /***/
          61144: (
            /***/
            function(f, d, t) {
              var i = t(32010);
              f.exports = function(r, n) {
                var o = i.console;
                o && o.error && (arguments.length == 1 ? o.error(r) : o.error(r, n));
              };
            }
          ),
          /***/
          520: (
            /***/
            function(f, d, t) {
              var i = t(38486);
              f.exports = i("document", "documentElement");
            }
          ),
          /***/
          18904: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(47044), n = t(12072);
              f.exports = !i && !r(function() {
                return Object.defineProperty(n("div"), "a", {
                  get: function() {
                    return 7;
                  }
                }).a != 7;
              });
            }
          ),
          /***/
          64397: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = i.Array, n = Math.abs, o = Math.pow, h = Math.floor, u = Math.log, l = Math.LN2, c = function(v, y, x) {
                var e = r(x), b = x * 8 - y - 1, A = (1 << b) - 1, P = A >> 1, D = y === 23 ? o(2, -24) - o(2, -77) : 0, E = v < 0 || v === 0 && 1 / v < 0 ? 1 : 0, T = 0, C, F, m;
                for (v = n(v), v != v || v === 1 / 0 ? (F = v != v ? 1 : 0, C = A) : (C = h(u(v) / l), v * (m = o(2, -C)) < 1 && (C--, m *= 2), C + P >= 1 ? v += D / m : v += D * o(2, 1 - P), v * m >= 2 && (C++, m /= 2), C + P >= A ? (F = 0, C = A) : C + P >= 1 ? (F = (v * m - 1) * o(2, y), C = C + P) : (F = v * o(2, P - 1) * o(2, y), C = 0)); y >= 8; e[T++] = F & 255, F /= 256, y -= 8)
                  ;
                for (C = C << y | F, b += y; b > 0; e[T++] = C & 255, C /= 256, b -= 8)
                  ;
                return e[--T] |= E * 128, e;
              }, s = function(v, y) {
                var x = v.length, e = x * 8 - y - 1, b = (1 << e) - 1, A = b >> 1, P = e - 7, D = x - 1, E = v[D--], T = E & 127, C;
                for (E >>= 7; P > 0; T = T * 256 + v[D], D--, P -= 8)
                  ;
                for (C = T & (1 << -P) - 1, T >>= -P, P += y; P > 0; C = C * 256 + v[D], D--, P -= 8)
                  ;
                if (T === 0)
                  T = 1 - A;
                else {
                  if (T === b)
                    return C ? NaN : E ? -1 / 0 : 1 / 0;
                  C = C + o(2, y), T = T - A;
                }
                return (E ? -1 : 1) * C * o(2, T - y);
              };
              f.exports = {
                pack: c,
                unpack: s
              };
            }
          ),
          /***/
          7514: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(38347), n = t(47044), o = t(93975), h = i.Object, u = r("".split);
              f.exports = n(function() {
                return !h("z").propertyIsEnumerable(0);
              }) ? function(l) {
                return o(l) == "String" ? u(l, "") : h(l);
              } : h;
            }
          ),
          /***/
          51868: (
            /***/
            function(f, d, t) {
              var i = t(94578), r = t(24517), n = t(3840);
              f.exports = function(o, h, u) {
                var l, c;
                return (
                  // it can work only with native `setPrototypeOf`
                  n && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
                  i(l = h.constructor) && l !== u && r(c = l.prototype) && c !== u.prototype && n(o, c), o
                );
              };
            }
          ),
          /***/
          10447: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(94578), n = t(55480), o = i(Function.toString);
              r(n.inspectSource) || (n.inspectSource = function(h) {
                return o(h);
              }), f.exports = n.inspectSource;
            }
          ),
          /***/
          87811: (
            /***/
            function(f, d, t) {
              var i = t(24517), r = t(48914);
              f.exports = function(n, o) {
                i(o) && "cause" in o && r(n, "cause", o.cause);
              };
            }
          ),
          /***/
          62148: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(38347), n = t(90682), o = t(24517), h = t(20340), u = t(95892).f, l = t(6611), c = t(8807), s = t(46859), v = t(55481), y = !1, x = s("meta"), e = 0, b = Object.isExtensible || function() {
                return !0;
              }, A = function(F) {
                u(F, x, { value: {
                  objectID: "O" + e++,
                  // object ID
                  weakData: {}
                  // weak collections IDs
                } });
              }, P = function(F, m) {
                if (!o(F))
                  return typeof F == "symbol" ? F : (typeof F == "string" ? "S" : "P") + F;
                if (!h(F, x)) {
                  if (!b(F))
                    return "F";
                  if (!m)
                    return "E";
                  A(F);
                }
                return F[x].objectID;
              }, D = function(F, m) {
                if (!h(F, x)) {
                  if (!b(F))
                    return !0;
                  if (!m)
                    return !1;
                  A(F);
                }
                return F[x].weakData;
              }, E = function(F) {
                return v && y && b(F) && !h(F, x) && A(F), F;
              }, T = function() {
                C.enable = function() {
                }, y = !0;
                var F = l.f, m = r([].splice), I = {};
                I[x] = 1, F(I).length && (l.f = function(O) {
                  for (var M = F(O), N = 0, G = M.length; N < G; N++)
                    if (M[N] === x) {
                      m(M, N, 1);
                      break;
                    }
                  return M;
                }, i({ target: "Object", stat: !0, forced: !0 }, {
                  getOwnPropertyNames: c.f
                }));
              }, C = f.exports = {
                enable: T,
                fastKey: P,
                getWeakData: D,
                onFreeze: E
              };
              n[x] = !0;
            }
          ),
          /***/
          70172: (
            /***/
            function(f, d, t) {
              var i = t(26168), r = t(32010), n = t(38347), o = t(24517), h = t(48914), u = t(20340), l = t(55480), c = t(82194), s = t(90682), v = "Object already initialized", y = r.TypeError, x = r.WeakMap, e, b, A, P = function(I) {
                return A(I) ? b(I) : e(I, {});
              }, D = function(I) {
                return function(O) {
                  var M;
                  if (!o(O) || (M = b(O)).type !== I)
                    throw y("Incompatible receiver, " + I + " required");
                  return M;
                };
              };
              if (i || l.state) {
                var E = l.state || (l.state = new x()), T = n(E.get), C = n(E.has), F = n(E.set);
                e = function(I, O) {
                  if (C(E, I))
                    throw new y(v);
                  return O.facade = I, F(E, I, O), O;
                }, b = function(I) {
                  return T(E, I) || {};
                }, A = function(I) {
                  return C(E, I);
                };
              } else {
                var m = c("state");
                s[m] = !0, e = function(I, O) {
                  if (u(I, m))
                    throw new y(v);
                  return O.facade = I, h(I, m, O), O;
                }, b = function(I) {
                  return u(I, m) ? I[m] : {};
                }, A = function(I) {
                  return u(I, m);
                };
              }
              f.exports = {
                set: e,
                get: b,
                has: A,
                enforce: P,
                getterFor: D
              };
            }
          ),
          /***/
          89564: (
            /***/
            function(f, d, t) {
              var i = t(38688), r = t(15366), n = i("iterator"), o = Array.prototype;
              f.exports = function(h) {
                return h !== void 0 && (r.Array === h || o[n] === h);
              };
            }
          ),
          /***/
          59113: (
            /***/
            function(f, d, t) {
              var i = t(93975);
              f.exports = Array.isArray || function(n) {
                return i(n) == "Array";
              };
            }
          ),
          /***/
          94578: (
            /***/
            function(f) {
              f.exports = function(d) {
                return typeof d == "function";
              };
            }
          ),
          /***/
          20884: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(47044), n = t(94578), o = t(52564), h = t(38486), u = t(10447), l = function() {
              }, c = [], s = h("Reflect", "construct"), v = /^\s*(?:class|function)\b/, y = i(v.exec), x = !v.exec(l), e = function(A) {
                if (!n(A))
                  return !1;
                try {
                  return s(l, c, A), !0;
                } catch (P) {
                  return !1;
                }
              }, b = function(A) {
                if (!n(A))
                  return !1;
                switch (o(A)) {
                  case "AsyncFunction":
                  case "GeneratorFunction":
                  case "AsyncGeneratorFunction":
                    return !1;
                }
                return x || !!y(v, u(A));
              };
              f.exports = !s || r(function() {
                var A;
                return e(e.call) || !e(Object) || !e(function() {
                  A = !0;
                }) || A;
              }) ? b : e;
            }
          ),
          /***/
          39599: (
            /***/
            function(f, d, t) {
              var i = t(47044), r = t(94578), n = /#|\.prototype\./, o = function(s, v) {
                var y = u[h(s)];
                return y == c ? !0 : y == l ? !1 : r(v) ? i(v) : !!v;
              }, h = o.normalize = function(s) {
                return String(s).replace(n, ".").toLowerCase();
              }, u = o.data = {}, l = o.NATIVE = "N", c = o.POLYFILL = "P";
              f.exports = o;
            }
          ),
          /***/
          17506: (
            /***/
            function(f, d, t) {
              var i = t(24517), r = Math.floor;
              f.exports = Number.isInteger || function(o) {
                return !i(o) && isFinite(o) && r(o) === o;
              };
            }
          ),
          /***/
          24517: (
            /***/
            function(f, d, t) {
              var i = t(94578);
              f.exports = function(r) {
                return typeof r == "object" ? r !== null : i(r);
              };
            }
          ),
          /***/
          63432: (
            /***/
            function(f) {
              f.exports = !1;
            }
          ),
          /***/
          28831: (
            /***/
            function(f, d, t) {
              var i = t(24517), r = t(93975), n = t(38688), o = n("match");
              f.exports = function(h) {
                var u;
                return i(h) && ((u = h[o]) !== void 0 ? !!u : r(h) == "RegExp");
              };
            }
          ),
          /***/
          46290: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(38486), n = t(94578), o = t(70176), h = t(9567), u = i.Object;
              f.exports = h ? function(l) {
                return typeof l == "symbol";
              } : function(l) {
                var c = r("Symbol");
                return n(c) && o(c.prototype, u(l));
              };
            }
          ),
          /***/
          80383: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(25567), n = t(2834), o = t(34984), h = t(68664), u = t(89564), l = t(45495), c = t(70176), s = t(15892), v = t(13872), y = t(50194), x = i.TypeError, e = function(A, P) {
                this.stopped = A, this.result = P;
              }, b = e.prototype;
              f.exports = function(A, P, D) {
                var E = D && D.that, T = !!(D && D.AS_ENTRIES), C = !!(D && D.IS_ITERATOR), F = !!(D && D.INTERRUPTED), m = r(P, E), I, O, M, N, G, ot, K, nt = function(bt) {
                  return I && y(I, "normal", bt), new e(!0, bt);
                }, xt = function(bt) {
                  return T ? (o(bt), F ? m(bt[0], bt[1], nt) : m(bt[0], bt[1])) : F ? m(bt, nt) : m(bt);
                };
                if (C)
                  I = A;
                else {
                  if (O = v(A), !O)
                    throw x(h(A) + " is not iterable");
                  if (u(O)) {
                    for (M = 0, N = l(A); N > M; M++)
                      if (G = xt(A[M]), G && c(b, G))
                        return G;
                    return new e(!1);
                  }
                  I = s(A, O);
                }
                for (ot = I.next; !(K = n(ot, I)).done; ) {
                  try {
                    G = xt(K.value);
                  } catch (bt) {
                    y(I, "throw", bt);
                  }
                  if (typeof G == "object" && G && c(b, G))
                    return G;
                }
                return new e(!1);
              };
            }
          ),
          /***/
          50194: (
            /***/
            function(f, d, t) {
              var i = t(2834), r = t(34984), n = t(51839);
              f.exports = function(o, h, u) {
                var l, c;
                r(o);
                try {
                  if (l = n(o, "return"), !l) {
                    if (h === "throw")
                      throw u;
                    return u;
                  }
                  l = i(l, o);
                } catch (s) {
                  c = !0, l = s;
                }
                if (h === "throw")
                  throw u;
                if (c)
                  throw l;
                return r(l), u;
              };
            }
          ),
          /***/
          5844: (
            /***/
            function(f, d, t) {
              var i = t(47044), r = t(94578), n = t(10819), o = t(69548), h = t(13711), u = t(38688), l = t(63432), c = u("iterator"), s = !1, v, y, x;
              [].keys && (x = [].keys(), "next" in x ? (y = o(o(x)), y !== Object.prototype && (v = y)) : s = !0);
              var e = v == null || i(function() {
                var b = {};
                return v[c].call(b) !== b;
              });
              e ? v = {} : l && (v = n(v)), r(v[c]) || h(v, c, function() {
                return this;
              }), f.exports = {
                IteratorPrototype: v,
                BUGGY_SAFARI_ITERATORS: s
              };
            }
          ),
          /***/
          15366: (
            /***/
            function(f) {
              f.exports = {};
            }
          ),
          /***/
          45495: (
            /***/
            function(f, d, t) {
              var i = t(23417);
              f.exports = function(r) {
                return i(r.length);
              };
            }
          ),
          /***/
          59804: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(25567), n = t(72062).f, o = t(6616).set, h = t(17716), u = t(70573), l = t(664), c = t(95053), s = i.MutationObserver || i.WebKitMutationObserver, v = i.document, y = i.process, x = i.Promise, e = n(i, "queueMicrotask"), b = e && e.value, A, P, D, E, T, C, F, m;
              b || (A = function() {
                var I, O;
                for (c && (I = y.domain) && I.exit(); P; ) {
                  O = P.fn, P = P.next;
                  try {
                    O();
                  } catch (M) {
                    throw P ? E() : D = void 0, M;
                  }
                }
                D = void 0, I && I.enter();
              }, !h && !c && !l && s && v ? (T = !0, C = v.createTextNode(""), new s(A).observe(C, { characterData: !0 }), E = function() {
                C.data = T = !T;
              }) : !u && x && x.resolve ? (F = x.resolve(void 0), F.constructor = x, m = r(F.then, F), E = function() {
                m(A);
              }) : c ? E = function() {
                y.nextTick(A);
              } : (o = r(o, i), E = function() {
                o(A);
              })), f.exports = b || function(I) {
                var O = { fn: I, next: void 0 };
                D && (D.next = O), P || (P = O, E()), D = O;
              };
            }
          ),
          /***/
          5155: (
            /***/
            function(f, d, t) {
              var i = t(32010);
              f.exports = i.Promise;
            }
          ),
          /***/
          46887: (
            /***/
            function(f, d, t) {
              var i = t(70091), r = t(47044);
              f.exports = !!Object.getOwnPropertySymbols && !r(function() {
                var n = Symbol();
                return !String(n) || !(Object(n) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
                !Symbol.sham && i && i < 41;
              });
            }
          ),
          /***/
          26168: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(94578), n = t(10447), o = i.WeakMap;
              f.exports = r(o) && /native code/.test(n(o));
            }
          ),
          /***/
          56614: (
            /***/
            function(f, d, t) {
              var i = t(32631), r = function(n) {
                var o, h;
                this.promise = new n(function(u, l) {
                  if (o !== void 0 || h !== void 0)
                    throw TypeError("Bad Promise constructor");
                  o = u, h = l;
                }), this.resolve = i(o), this.reject = i(h);
              };
              f.exports.f = function(n) {
                return new r(n);
              };
            }
          ),
          /***/
          86392: (
            /***/
            function(f, d, t) {
              var i = t(25096);
              f.exports = function(r, n) {
                return r === void 0 ? arguments.length < 2 ? "" : n : i(r);
              };
            }
          ),
          /***/
          93666: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(28831), n = i.TypeError;
              f.exports = function(o) {
                if (r(o))
                  throw n("The method doesn't accept regular expressions");
                return o;
              };
            }
          ),
          /***/
          59805: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = i.isFinite;
              f.exports = Number.isFinite || function(o) {
                return typeof o == "number" && r(o);
              };
            }
          ),
          /***/
          87146: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(38347), n = t(2834), o = t(47044), h = t(84675), u = t(61146), l = t(55574), c = t(43162), s = t(7514), v = Object.assign, y = Object.defineProperty, x = r([].concat);
              f.exports = !v || o(function() {
                if (i && v({ b: 1 }, v(y({}, "a", {
                  enumerable: !0,
                  get: function() {
                    y(this, "b", {
                      value: 3,
                      enumerable: !1
                    });
                  }
                }), { b: 2 })).b !== 1)
                  return !0;
                var e = {}, b = {}, A = Symbol(), P = "abcdefghijklmnopqrst";
                return e[A] = 7, P.split("").forEach(function(D) {
                  b[D] = D;
                }), v({}, e)[A] != 7 || h(v({}, b)).join("") != P;
              }) ? function(b, A) {
                for (var P = c(b), D = arguments.length, E = 1, T = u.f, C = l.f; D > E; )
                  for (var F = s(arguments[E++]), m = T ? x(h(F), T(F)) : h(F), I = m.length, O = 0, M; I > O; )
                    M = m[O++], (!i || n(C, F, M)) && (P[M] = F[M]);
                return P;
              } : v;
            }
          ),
          /***/
          10819: (
            /***/
            function(f, d, t) {
              var i = t(34984), r = t(10196), n = t(2416), o = t(90682), h = t(520), u = t(12072), l = t(82194), c = ">", s = "<", v = "prototype", y = "script", x = l("IE_PROTO"), e = function() {
              }, b = function(T) {
                return s + y + c + T + s + "/" + y + c;
              }, A = function(T) {
                T.write(b("")), T.close();
                var C = T.parentWindow.Object;
                return T = null, C;
              }, P = function() {
                var T = u("iframe"), C = "java" + y + ":", F;
                return T.style.display = "none", h.appendChild(T), T.src = String(C), F = T.contentWindow.document, F.open(), F.write(b("document.F=Object")), F.close(), F.F;
              }, D, E = function() {
                try {
                  D = new ActiveXObject("htmlfile");
                } catch (C) {
                }
                E = typeof document != "undefined" ? document.domain && D ? A(D) : P() : A(D);
                for (var T = n.length; T--; )
                  delete E[v][n[T]];
                return E();
              };
              o[x] = !0, f.exports = Object.create || function(C, F) {
                var m;
                return C !== null ? (e[v] = i(C), m = new e(), e[v] = null, m[x] = C) : m = E(), F === void 0 ? m : r(m, F);
              };
            }
          ),
          /***/
          10196: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(95892), n = t(34984), o = t(98086), h = t(84675);
              f.exports = i ? Object.defineProperties : function(l, c) {
                n(l);
                for (var s = o(c), v = h(c), y = v.length, x = 0, e; y > x; )
                  r.f(l, e = v[x++], s[e]);
                return l;
              };
            }
          ),
          /***/
          95892: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(15567), n = t(18904), o = t(34984), h = t(63918), u = i.TypeError, l = Object.defineProperty;
              d.f = r ? l : function(s, v, y) {
                if (o(s), v = h(v), o(y), n)
                  try {
                    return l(s, v, y);
                  } catch (x) {
                  }
                if ("get" in y || "set" in y)
                  throw u("Accessors not supported");
                return "value" in y && (s[v] = y.value), s;
              };
            }
          ),
          /***/
          72062: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(2834), n = t(55574), o = t(97841), h = t(98086), u = t(63918), l = t(20340), c = t(18904), s = Object.getOwnPropertyDescriptor;
              d.f = i ? s : function(y, x) {
                if (y = h(y), x = u(x), c)
                  try {
                    return s(y, x);
                  } catch (e) {
                  }
                if (l(y, x))
                  return o(!r(n.f, y, x), y[x]);
              };
            }
          ),
          /***/
          8807: (
            /***/
            function(f, d, t) {
              var i = t(93975), r = t(98086), n = t(6611).f, o = t(73163), h = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], u = function(l) {
                try {
                  return n(l);
                } catch (c) {
                  return o(h);
                }
              };
              f.exports.f = function(c) {
                return h && i(c) == "Window" ? u(c) : n(r(c));
              };
            }
          ),
          /***/
          6611: (
            /***/
            function(f, d, t) {
              var i = t(64429), r = t(2416), n = r.concat("length", "prototype");
              d.f = Object.getOwnPropertyNames || function(h) {
                return i(h, n);
              };
            }
          ),
          /***/
          61146: (
            /***/
            function(f, d) {
              d.f = Object.getOwnPropertySymbols;
            }
          ),
          /***/
          69548: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(20340), n = t(94578), o = t(43162), h = t(82194), u = t(68494), l = h("IE_PROTO"), c = i.Object, s = c.prototype;
              f.exports = u ? c.getPrototypeOf : function(v) {
                var y = o(v);
                if (r(y, l))
                  return y[l];
                var x = y.constructor;
                return n(x) && y instanceof x ? x.prototype : y instanceof c ? s : null;
              };
            }
          ),
          /***/
          70176: (
            /***/
            function(f, d, t) {
              var i = t(38347);
              f.exports = i({}.isPrototypeOf);
            }
          ),
          /***/
          64429: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(20340), n = t(98086), o = t(12636).indexOf, h = t(90682), u = i([].push);
              f.exports = function(l, c) {
                var s = n(l), v = 0, y = [], x;
                for (x in s)
                  !r(h, x) && r(s, x) && u(y, x);
                for (; c.length > v; )
                  r(s, x = c[v++]) && (~o(y, x) || u(y, x));
                return y;
              };
            }
          ),
          /***/
          84675: (
            /***/
            function(f, d, t) {
              var i = t(64429), r = t(2416);
              f.exports = Object.keys || function(o) {
                return i(o, r);
              };
            }
          ),
          /***/
          55574: (
            /***/
            function(f, d) {
              var t = {}.propertyIsEnumerable, i = Object.getOwnPropertyDescriptor, r = i && !t.call({ 1: 2 }, 1);
              d.f = r ? function(o) {
                var h = i(this, o);
                return !!h && h.enumerable;
              } : t;
            }
          ),
          /***/
          3840: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(34984), n = t(58659);
              f.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                var o = !1, h = {}, u;
                try {
                  u = i(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set), u(h, []), o = h instanceof Array;
                } catch (l) {
                }
                return function(c, s) {
                  return r(c), n(s), o ? u(c, s) : c.__proto__ = s, c;
                };
              }() : void 0);
            }
          ),
          /***/
          80754: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(38347), n = t(84675), o = t(98086), h = t(55574).f, u = r(h), l = r([].push), c = function(s) {
                return function(v) {
                  for (var y = o(v), x = n(y), e = x.length, b = 0, A = [], P; e > b; )
                    P = x[b++], (!i || u(y, P)) && l(A, s ? [P, y[P]] : y[P]);
                  return A;
                };
              };
              f.exports = {
                // `Object.entries` method
                // https://tc39.es/ecma262/#sec-object.entries
                entries: c(!0),
                // `Object.values` method
                // https://tc39.es/ecma262/#sec-object.values
                values: c(!1)
              };
            }
          ),
          /***/
          52598: (
            /***/
            function(f, d, t) {
              var i = t(24663), r = t(52564);
              f.exports = i ? {}.toString : function() {
                return "[object " + r(this) + "]";
              };
            }
          ),
          /***/
          39629: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(2834), n = t(94578), o = t(24517), h = i.TypeError;
              f.exports = function(u, l) {
                var c, s;
                if (l === "string" && n(c = u.toString) && !o(s = r(c, u)) || n(c = u.valueOf) && !o(s = r(c, u)) || l !== "string" && n(c = u.toString) && !o(s = r(c, u)))
                  return s;
                throw h("Can't convert object to primitive value");
              };
            }
          ),
          /***/
          21594: (
            /***/
            function(f, d, t) {
              var i = t(38486), r = t(38347), n = t(6611), o = t(61146), h = t(34984), u = r([].concat);
              f.exports = i("Reflect", "ownKeys") || function(c) {
                var s = n.f(h(c)), v = o.f;
                return v ? u(s, v(c)) : s;
              };
            }
          ),
          /***/
          11206: (
            /***/
            function(f, d, t) {
              var i = t(32010);
              f.exports = i;
            }
          ),
          /***/
          61900: (
            /***/
            function(f) {
              f.exports = function(d) {
                try {
                  return { error: !1, value: d() };
                } catch (t) {
                  return { error: !0, value: t };
                }
              };
            }
          ),
          /***/
          28617: (
            /***/
            function(f, d, t) {
              var i = t(34984), r = t(24517), n = t(56614);
              f.exports = function(o, h) {
                if (i(o), r(h) && h.constructor === o)
                  return h;
                var u = n.f(o), l = u.resolve;
                return l(h), u.promise;
              };
            }
          ),
          /***/
          15341: (
            /***/
            function(f, d, t) {
              var i = t(13711);
              f.exports = function(r, n, o) {
                for (var h in n)
                  i(r, h, n[h], o);
                return r;
              };
            }
          ),
          /***/
          13711: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(94578), n = t(20340), o = t(48914), h = t(7421), u = t(10447), l = t(70172), c = t(7081).CONFIGURABLE, s = l.get, v = l.enforce, y = String(String).split("String");
              (f.exports = function(x, e, b, A) {
                var P = A ? !!A.unsafe : !1, D = A ? !!A.enumerable : !1, E = A ? !!A.noTargetGet : !1, T = A && A.name !== void 0 ? A.name : e, C;
                if (r(b) && (String(T).slice(0, 7) === "Symbol(" && (T = "[" + String(T).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!n(b, "name") || c && b.name !== T) && o(b, "name", T), C = v(b), C.source || (C.source = y.join(typeof T == "string" ? T : ""))), x === i) {
                  D ? x[e] = b : h(e, b);
                  return;
                } else
                  P ? !E && x[e] && (D = !0) : delete x[e];
                D ? x[e] = b : o(x, e, b);
              })(Function.prototype, "toString", function() {
                return r(this) && s(this).source || u(this);
              });
            }
          ),
          /***/
          66723: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(2834), n = t(34984), o = t(94578), h = t(93975), u = t(49820), l = i.TypeError;
              f.exports = function(c, s) {
                var v = c.exec;
                if (o(v)) {
                  var y = r(v, c, s);
                  return y !== null && n(y), y;
                }
                if (h(c) === "RegExp")
                  return r(u, c, s);
                throw l("RegExp#exec called on incompatible receiver");
              };
            }
          ),
          /***/
          49820: (
            /***/
            function(f, d, t) {
              var i = t(2834), r = t(38347), n = t(25096), o = t(21182), h = t(74846), u = t(464), l = t(10819), c = t(70172).get, s = t(84030), v = t(97739), y = u("native-string-replace", String.prototype.replace), x = RegExp.prototype.exec, e = x, b = r("".charAt), A = r("".indexOf), P = r("".replace), D = r("".slice), E = function() {
                var m = /a/, I = /b*/g;
                return i(x, m, "a"), i(x, I, "a"), m.lastIndex !== 0 || I.lastIndex !== 0;
              }(), T = h.UNSUPPORTED_Y || h.BROKEN_CARET, C = /()??/.exec("")[1] !== void 0, F = E || C || T || s || v;
              F && (e = function(I) {
                var O = this, M = c(O), N = n(I), G = M.raw, ot, K, nt, xt, bt, St, Dt;
                if (G)
                  return G.lastIndex = O.lastIndex, ot = i(e, G, N), O.lastIndex = G.lastIndex, ot;
                var Lt = M.groups, jt = T && O.sticky, J = i(o, O), yt = O.source, ut = 0, st = N;
                if (jt && (J = P(J, "y", ""), A(J, "g") === -1 && (J += "g"), st = D(N, O.lastIndex), O.lastIndex > 0 && (!O.multiline || O.multiline && b(N, O.lastIndex - 1) !== `
`) && (yt = "(?: " + yt + ")", st = " " + st, ut++), K = new RegExp("^(?:" + yt + ")", J)), C && (K = new RegExp("^" + yt + "$(?!\\s)", J)), E && (nt = O.lastIndex), xt = i(x, jt ? K : O, st), jt ? xt ? (xt.input = D(xt.input, ut), xt[0] = D(xt[0], ut), xt.index = O.lastIndex, O.lastIndex += xt[0].length) : O.lastIndex = 0 : E && xt && (O.lastIndex = O.global ? xt.index + xt[0].length : nt), C && xt && xt.length > 1 && i(y, xt[0], K, function() {
                  for (bt = 1; bt < arguments.length - 2; bt++)
                    arguments[bt] === void 0 && (xt[bt] = void 0);
                }), xt && Lt)
                  for (xt.groups = St = l(null), bt = 0; bt < Lt.length; bt++)
                    Dt = Lt[bt], St[Dt[0]] = xt[Dt[1]];
                return xt;
              }), f.exports = e;
            }
          ),
          /***/
          21182: (
            /***/
            function(f, d, t) {
              var i = t(34984);
              f.exports = function() {
                var r = i(this), n = "";
                return r.global && (n += "g"), r.ignoreCase && (n += "i"), r.multiline && (n += "m"), r.dotAll && (n += "s"), r.unicode && (n += "u"), r.sticky && (n += "y"), n;
              };
            }
          ),
          /***/
          74846: (
            /***/
            function(f, d, t) {
              var i = t(47044), r = t(32010), n = r.RegExp;
              d.UNSUPPORTED_Y = i(function() {
                var o = n("a", "y");
                return o.lastIndex = 2, o.exec("abcd") != null;
              }), d.BROKEN_CARET = i(function() {
                var o = n("^r", "gy");
                return o.lastIndex = 2, o.exec("str") != null;
              });
            }
          ),
          /***/
          84030: (
            /***/
            function(f, d, t) {
              var i = t(47044), r = t(32010), n = r.RegExp;
              f.exports = i(function() {
                var o = n(".", "s");
                return !(o.dotAll && o.exec(`
`) && o.flags === "s");
              });
            }
          ),
          /***/
          97739: (
            /***/
            function(f, d, t) {
              var i = t(47044), r = t(32010), n = r.RegExp;
              f.exports = i(function() {
                var o = n("(?<a>b)", "g");
                return o.exec("b").groups.a !== "b" || "b".replace(o, "$<a>c") !== "bc";
              });
            }
          ),
          /***/
          83943: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = i.TypeError;
              f.exports = function(n) {
                if (n == null)
                  throw r("Can't call method on " + n);
                return n;
              };
            }
          ),
          /***/
          7421: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = Object.defineProperty;
              f.exports = function(n, o) {
                try {
                  r(i, n, { value: o, configurable: !0, writable: !0 });
                } catch (h) {
                  i[n] = o;
                }
                return o;
              };
            }
          ),
          /***/
          51334: (
            /***/
            function(f, d, t) {
              var i = t(38486), r = t(95892), n = t(38688), o = t(15567), h = n("species");
              f.exports = function(u) {
                var l = i(u), c = r.f;
                o && l && !l[h] && c(l, h, {
                  configurable: !0,
                  get: function() {
                    return this;
                  }
                });
              };
            }
          ),
          /***/
          15216: (
            /***/
            function(f, d, t) {
              var i = t(95892).f, r = t(20340), n = t(38688), o = n("toStringTag");
              f.exports = function(h, u, l) {
                h && !r(h = l ? h : h.prototype, o) && i(h, o, { configurable: !0, value: u });
              };
            }
          ),
          /***/
          82194: (
            /***/
            function(f, d, t) {
              var i = t(464), r = t(46859), n = i("keys");
              f.exports = function(o) {
                return n[o] || (n[o] = r(o));
              };
            }
          ),
          /***/
          55480: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(7421), n = "__core-js_shared__", o = i[n] || r(n, {});
              f.exports = o;
            }
          ),
          /***/
          464: (
            /***/
            function(f, d, t) {
              var i = t(63432), r = t(55480);
              (f.exports = function(n, o) {
                return r[n] || (r[n] = o !== void 0 ? o : {});
              })("versions", []).push({
                version: "3.19.0",
                mode: i ? "pure" : "global",
                copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)"
              });
            }
          ),
          /***/
          27754: (
            /***/
            function(f, d, t) {
              var i = t(34984), r = t(69075), n = t(38688), o = n("species");
              f.exports = function(h, u) {
                var l = i(h).constructor, c;
                return l === void 0 || (c = i(l)[o]) == null ? u : r(c);
              };
            }
          ),
          /***/
          7452: (
            /***/
            function(f, d, t) {
              var i = t(47044);
              f.exports = function(r) {
                return i(function() {
                  var n = ""[r]('"');
                  return n !== n.toLowerCase() || n.split('"').length > 3;
                });
              };
            }
          ),
          /***/
          69510: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(26882), n = t(25096), o = t(83943), h = i("".charAt), u = i("".charCodeAt), l = i("".slice), c = function(s) {
                return function(v, y) {
                  var x = n(o(v)), e = r(y), b = x.length, A, P;
                  return e < 0 || e >= b ? s ? "" : void 0 : (A = u(x, e), A < 55296 || A > 56319 || e + 1 === b || (P = u(x, e + 1)) < 56320 || P > 57343 ? s ? h(x, e) : A : s ? l(x, e, e + 2) : (A - 55296 << 10) + (P - 56320) + 65536);
                };
              };
              f.exports = {
                // `String.prototype.codePointAt` method
                // https://tc39.es/ecma262/#sec-string.prototype.codepointat
                codeAt: c(!1),
                // `String.prototype.at` method
                // https://github.com/mathiasbynens/String.prototype.at
                charAt: c(!0)
              };
            }
          ),
          /***/
          34858: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(26882), n = t(25096), o = t(83943), h = i.RangeError;
              f.exports = function(l) {
                var c = n(o(this)), s = "", v = r(l);
                if (v < 0 || v == 1 / 0)
                  throw h("Wrong number of repetitions");
                for (; v > 0; (v >>>= 1) && (c += c))
                  v & 1 && (s += c);
                return s;
              };
            }
          ),
          /***/
          68899: (
            /***/
            function(f, d, t) {
              var i = t(7081).PROPER, r = t(47044), n = t(43187), o = "âÂá ";
              f.exports = function(h) {
                return r(function() {
                  return !!n[h]() || o[h]() !== o || i && n[h].name !== h;
                });
              };
            }
          ),
          /***/
          29841: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(83943), n = t(25096), o = t(43187), h = i("".replace), u = "[" + o + "]", l = RegExp("^" + u + u + "*"), c = RegExp(u + u + "*$"), s = function(v) {
                return function(y) {
                  var x = n(r(y));
                  return v & 1 && (x = h(x, l, "")), v & 2 && (x = h(x, c, "")), x;
                };
              };
              f.exports = {
                // `String.prototype.{ trimLeft, trimStart }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimstart
                start: s(1),
                // `String.prototype.{ trimRight, trimEnd }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimend
                end: s(2),
                // `String.prototype.trim` method
                // https://tc39.es/ecma262/#sec-string.prototype.trim
                trim: s(3)
              };
            }
          ),
          /***/
          6616: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(58448), n = t(25567), o = t(94578), h = t(20340), u = t(47044), l = t(520), c = t(73163), s = t(12072), v = t(17716), y = t(95053), x = i.setImmediate, e = i.clearImmediate, b = i.process, A = i.Dispatch, P = i.Function, D = i.MessageChannel, E = i.String, T = 0, C = {}, F = "onreadystatechange", m, I, O, M;
              try {
                m = i.location;
              } catch (nt) {
              }
              var N = function(nt) {
                if (h(C, nt)) {
                  var xt = C[nt];
                  delete C[nt], xt();
                }
              }, G = function(nt) {
                return function() {
                  N(nt);
                };
              }, ot = function(nt) {
                N(nt.data);
              }, K = function(nt) {
                i.postMessage(E(nt), m.protocol + "//" + m.host);
              };
              (!x || !e) && (x = function(xt) {
                var bt = c(arguments, 1);
                return C[++T] = function() {
                  r(o(xt) ? xt : P(xt), void 0, bt);
                }, I(T), T;
              }, e = function(xt) {
                delete C[xt];
              }, y ? I = function(nt) {
                b.nextTick(G(nt));
              } : A && A.now ? I = function(nt) {
                A.now(G(nt));
              } : D && !v ? (O = new D(), M = O.port2, O.port1.onmessage = ot, I = n(M.postMessage, M)) : i.addEventListener && o(i.postMessage) && !i.importScripts && m && m.protocol !== "file:" && !u(K) ? (I = K, i.addEventListener("message", ot, !1)) : F in s("script") ? I = function(nt) {
                l.appendChild(s("script"))[F] = function() {
                  l.removeChild(this), N(nt);
                };
              } : I = function(nt) {
                setTimeout(G(nt), 0);
              }), f.exports = {
                set: x,
                clear: e
              };
            }
          ),
          /***/
          16679: (
            /***/
            function(f, d, t) {
              var i = t(38347);
              f.exports = i(1 .valueOf);
            }
          ),
          /***/
          74841: (
            /***/
            function(f, d, t) {
              var i = t(26882), r = Math.max, n = Math.min;
              f.exports = function(o, h) {
                var u = i(o);
                return u < 0 ? r(u + h, 0) : n(u, h);
              };
            }
          ),
          /***/
          71265: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(26882), n = t(23417), o = i.RangeError;
              f.exports = function(h) {
                if (h === void 0)
                  return 0;
                var u = r(h), l = n(u);
                if (u !== l)
                  throw o("Wrong length or index");
                return l;
              };
            }
          ),
          /***/
          98086: (
            /***/
            function(f, d, t) {
              var i = t(7514), r = t(83943);
              f.exports = function(n) {
                return i(r(n));
              };
            }
          ),
          /***/
          26882: (
            /***/
            function(f) {
              var d = Math.ceil, t = Math.floor;
              f.exports = function(i) {
                var r = +i;
                return r !== r || r === 0 ? 0 : (r > 0 ? t : d)(r);
              };
            }
          ),
          /***/
          23417: (
            /***/
            function(f, d, t) {
              var i = t(26882), r = Math.min;
              f.exports = function(n) {
                return n > 0 ? r(i(n), 9007199254740991) : 0;
              };
            }
          ),
          /***/
          43162: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(83943), n = i.Object;
              f.exports = function(o) {
                return n(r(o));
              };
            }
          ),
          /***/
          80670: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(64913), n = i.RangeError;
              f.exports = function(o, h) {
                var u = r(o);
                if (u % h)
                  throw n("Wrong offset");
                return u;
              };
            }
          ),
          /***/
          64913: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(26882), n = i.RangeError;
              f.exports = function(o) {
                var h = r(o);
                if (h < 0)
                  throw n("The argument can't be less than 0");
                return h;
              };
            }
          ),
          /***/
          2644: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(2834), n = t(24517), o = t(46290), h = t(51839), u = t(39629), l = t(38688), c = i.TypeError, s = l("toPrimitive");
              f.exports = function(v, y) {
                if (!n(v) || o(v))
                  return v;
                var x = h(v, s), e;
                if (x) {
                  if (y === void 0 && (y = "default"), e = r(x, v, y), !n(e) || o(e))
                    return e;
                  throw c("Can't convert object to primitive value");
                }
                return y === void 0 && (y = "number"), u(v, y);
              };
            }
          ),
          /***/
          63918: (
            /***/
            function(f, d, t) {
              var i = t(2644), r = t(46290);
              f.exports = function(n) {
                var o = i(n, "string");
                return r(o) ? o : o + "";
              };
            }
          ),
          /***/
          24663: (
            /***/
            function(f, d, t) {
              var i = t(38688), r = i("toStringTag"), n = {};
              n[r] = "z", f.exports = String(n) === "[object z]";
            }
          ),
          /***/
          25096: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(52564), n = i.String;
              f.exports = function(o) {
                if (r(o) === "Symbol")
                  throw TypeError("Cannot convert a Symbol value to a string");
                return n(o);
              };
            }
          ),
          /***/
          68664: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = i.String;
              f.exports = function(n) {
                try {
                  return r(n);
                } catch (o) {
                  return "Object";
                }
              };
            }
          ),
          /***/
          98828: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(2834), o = t(15567), h = t(28834), u = t(59754), l = t(83124), c = t(2868), s = t(97841), v = t(48914), y = t(17506), x = t(23417), e = t(71265), b = t(80670), A = t(63918), P = t(20340), D = t(52564), E = t(24517), T = t(46290), C = t(10819), F = t(70176), m = t(3840), I = t(6611).f, O = t(83590), M = t(91102).forEach, N = t(51334), G = t(95892), ot = t(72062), K = t(70172), nt = t(51868), xt = K.get, bt = K.set, St = G.f, Dt = ot.f, Lt = Math.round, jt = r.RangeError, J = l.ArrayBuffer, yt = J.prototype, ut = l.DataView, st = u.NATIVE_ARRAY_BUFFER_VIEWS, wt = u.TYPED_ARRAY_CONSTRUCTOR, V = u.TYPED_ARRAY_TAG, Ft = u.TypedArray, U = u.TypedArrayPrototype, S = u.aTypedArrayConstructor, k = u.isTypedArray, H = "BYTES_PER_ELEMENT", it = "Wrong length", et = function(It, re) {
                S(It);
                for (var be = 0, me = re.length, le = new It(me); me > be; )
                  le[be] = re[be++];
                return le;
              }, tt = function(It, re) {
                St(It, re, { get: function() {
                  return xt(this)[re];
                } });
              }, Ct = function(It) {
                var re;
                return F(yt, It) || (re = D(It)) == "ArrayBuffer" || re == "SharedArrayBuffer";
              }, Rt = function(It, re) {
                return k(It) && !T(re) && re in It && y(+re) && re >= 0;
              }, Kt = function(re, be) {
                return be = A(be), Rt(re, be) ? s(2, re[be]) : Dt(re, be);
              }, Gt = function(re, be, me) {
                return be = A(be), Rt(re, be) && E(me) && P(me, "value") && !P(me, "get") && !P(me, "set") && !me.configurable && (!P(me, "writable") || me.writable) && (!P(me, "enumerable") || me.enumerable) ? (re[be] = me.value, re) : St(re, be, me);
              };
              o ? (st || (ot.f = Kt, G.f = Gt, tt(U, "buffer"), tt(U, "byteOffset"), tt(U, "byteLength"), tt(U, "length")), i({ target: "Object", stat: !0, forced: !st }, {
                getOwnPropertyDescriptor: Kt,
                defineProperty: Gt
              }), f.exports = function(It, re, be) {
                var me = It.match(/\d+$/)[0] / 8, le = It + (be ? "Clamped" : "") + "Array", Se = "get" + It, Wt = "set" + It, $t = r[le], ue = $t, he = ue && ue.prototype, Ee = {}, Re = function(vt, W) {
                  var Q = xt(vt);
                  return Q.view[Se](W * me + Q.byteOffset, !0);
                }, Ie = function(vt, W, Q) {
                  var gt = xt(vt);
                  be && (Q = (Q = Lt(Q)) < 0 ? 0 : Q > 255 ? 255 : Q & 255), gt.view[Wt](W * me + gt.byteOffset, Q, !0);
                }, Ot = function(vt, W) {
                  St(vt, W, {
                    get: function() {
                      return Re(this, W);
                    },
                    set: function(Q) {
                      return Ie(this, W, Q);
                    },
                    enumerable: !0
                  });
                };
                st ? h && (ue = re(function(vt, W, Q, gt) {
                  return c(vt, he), nt(function() {
                    return E(W) ? Ct(W) ? gt !== void 0 ? new $t(W, b(Q, me), gt) : Q !== void 0 ? new $t(W, b(Q, me)) : new $t(W) : k(W) ? et(ue, W) : n(O, ue, W) : new $t(e(W));
                  }(), vt, ue);
                }), m && m(ue, Ft), M(I($t), function(vt) {
                  vt in ue || v(ue, vt, $t[vt]);
                }), ue.prototype = he) : (ue = re(function(vt, W, Q, gt) {
                  c(vt, he);
                  var Pt = 0, ht = 0, Ht, we, rt;
                  if (!E(W))
                    rt = e(W), we = rt * me, Ht = new J(we);
                  else if (Ct(W)) {
                    Ht = W, ht = b(Q, me);
                    var _t = W.byteLength;
                    if (gt === void 0) {
                      if (_t % me || (we = _t - ht, we < 0))
                        throw jt(it);
                    } else if (we = x(gt) * me, we + ht > _t)
                      throw jt(it);
                    rt = we / me;
                  } else
                    return k(W) ? et(ue, W) : n(O, ue, W);
                  for (bt(vt, {
                    buffer: Ht,
                    byteOffset: ht,
                    byteLength: we,
                    length: rt,
                    view: new ut(Ht)
                  }); Pt < rt; )
                    Ot(vt, Pt++);
                }), m && m(ue, Ft), he = ue.prototype = C(U)), he.constructor !== ue && v(he, "constructor", ue), v(he, wt, ue), V && v(he, V, le), Ee[le] = ue, i({
                  global: !0,
                  forced: ue != $t,
                  sham: !st
                }, Ee), H in ue || v(ue, H, me), H in he || v(he, H, me), N(le);
              }) : f.exports = function() {
              };
            }
          ),
          /***/
          28834: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(47044), n = t(46769), o = t(59754).NATIVE_ARRAY_BUFFER_VIEWS, h = i.ArrayBuffer, u = i.Int8Array;
              f.exports = !o || !r(function() {
                u(1);
              }) || !r(function() {
                new u(-1);
              }) || !n(function(l) {
                new u(), new u(null), new u(1.5), new u(l);
              }, !0) || r(function() {
                return new u(new h(2), 1, void 0).length !== 1;
              });
            }
          ),
          /***/
          59610: (
            /***/
            function(f, d, t) {
              var i = t(34269), r = t(34815);
              f.exports = function(n, o) {
                return i(r(n), o);
              };
            }
          ),
          /***/
          83590: (
            /***/
            function(f, d, t) {
              var i = t(25567), r = t(2834), n = t(69075), o = t(43162), h = t(45495), u = t(15892), l = t(13872), c = t(89564), s = t(59754).aTypedArrayConstructor;
              f.exports = function(y) {
                var x = n(this), e = o(y), b = arguments.length, A = b > 1 ? arguments[1] : void 0, P = A !== void 0, D = l(e), E, T, C, F, m, I;
                if (D && !c(D))
                  for (m = u(e, D), I = m.next, e = []; !(F = r(I, m)).done; )
                    e.push(F.value);
                for (P && b > 2 && (A = i(A, arguments[2])), T = h(e), C = new (s(x))(T), E = 0; T > E; E++)
                  C[E] = P ? A(e[E], E) : e[E];
                return C;
              };
            }
          ),
          /***/
          34815: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(27754), n = i.TYPED_ARRAY_CONSTRUCTOR, o = i.aTypedArrayConstructor;
              f.exports = function(h) {
                return o(r(h, h[n]));
              };
            }
          ),
          /***/
          46859: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = 0, n = Math.random(), o = i(1 .toString);
              f.exports = function(h) {
                return "Symbol(" + (h === void 0 ? "" : h) + ")_" + o(++r + n, 36);
              };
            }
          ),
          /***/
          9567: (
            /***/
            function(f, d, t) {
              var i = t(46887);
              f.exports = i && !Symbol.sham && typeof Symbol.iterator == "symbol";
            }
          ),
          /***/
          75960: (
            /***/
            function(f, d, t) {
              var i = t(38688);
              d.f = i;
            }
          ),
          /***/
          38688: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(464), n = t(20340), o = t(46859), h = t(46887), u = t(9567), l = r("wks"), c = i.Symbol, s = c && c.for, v = u ? c : c && c.withoutSetter || o;
              f.exports = function(y) {
                if (!n(l, y) || !(h || typeof l[y] == "string")) {
                  var x = "Symbol." + y;
                  h && n(c, y) ? l[y] = c[y] : u && s ? l[y] = s(x) : l[y] = v(x);
                }
                return l[y];
              };
            }
          ),
          /***/
          43187: (
            /***/
            function(f) {
              f.exports = `	
\v\f\r Â áââââââââââââ¯âã\u2028\u2029\uFEFF`;
            }
          ),
          /***/
          94910: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(70176), o = t(69548), h = t(3840), u = t(2675), l = t(10819), c = t(48914), s = t(97841), v = t(34074), y = t(87811), x = t(80383), e = t(86392), b = t(45144), A = r.Error, P = [].push, D = function(C, F) {
                var m = n(E, this) ? this : l(E), I = arguments.length > 2 ? arguments[2] : void 0;
                h && (m = h(new A(void 0), o(m))), c(m, "message", e(F, "")), b && c(m, "stack", v(m.stack, 1)), y(m, I);
                var O = [];
                return x(C, P, { that: O }), c(m, "errors", O), m;
              };
              h ? h(D, A) : u(D, A);
              var E = D.prototype = l(A.prototype, {
                constructor: s(1, D),
                message: s(1, ""),
                name: s(1, "AggregateError")
              });
              i({ global: !0 }, {
                AggregateError: D
              });
            }
          ),
          /***/
          39081: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(47044), o = t(59113), h = t(24517), u = t(43162), l = t(45495), c = t(38639), s = t(45744), v = t(56280), y = t(38688), x = t(70091), e = y("isConcatSpreadable"), b = 9007199254740991, A = "Maximum allowed index exceeded", P = r.TypeError, D = x >= 51 || !n(function() {
                var F = [];
                return F[e] = !1, F.concat()[0] !== F;
              }), E = v("concat"), T = function(F) {
                if (!h(F))
                  return !1;
                var m = F[e];
                return m !== void 0 ? !!m : o(F);
              }, C = !D || !E;
              i({ target: "Array", proto: !0, forced: C }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                concat: function(m) {
                  var I = u(this), O = s(I, 0), M = 0, N, G, ot, K, nt;
                  for (N = -1, ot = arguments.length; N < ot; N++)
                    if (nt = N === -1 ? I : arguments[N], T(nt)) {
                      if (K = l(nt), M + K > b)
                        throw P(A);
                      for (G = 0; G < K; G++, M++)
                        G in nt && c(O, M, nt[G]);
                    } else {
                      if (M >= b)
                        throw P(A);
                      c(O, M++, nt);
                    }
                  return O.length = M, O;
                }
              });
            }
          ),
          /***/
          68626: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(92642), n = t(71156);
              i({ target: "Array", proto: !0 }, {
                copyWithin: r
              }), n("copyWithin");
            }
          ),
          /***/
          41584: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(72864), n = t(71156);
              i({ target: "Array", proto: !0 }, {
                fill: r
              }), n("fill");
            }
          ),
          /***/
          49063: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(91102).filter, n = t(56280), o = n("filter");
              i({ target: "Array", proto: !0, forced: !o }, {
                filter: function(u) {
                  return r(this, u, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          97514: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(91102).find, n = t(71156), o = "find", h = !0;
              o in [] && Array(1)[o](function() {
                h = !1;
              }), i({ target: "Array", proto: !0, forced: h }, {
                find: function(l) {
                  return r(this, l, arguments.length > 1 ? arguments[1] : void 0);
                }
              }), n(o);
            }
          ),
          /***/
          11765: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(95717), n = t(46769), o = !n(function(h) {
                Array.from(h);
              });
              i({ target: "Array", stat: !0, forced: o }, {
                from: r
              });
            }
          ),
          /***/
          58028: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(12636).includes, n = t(71156);
              i({ target: "Array", proto: !0 }, {
                includes: function(h) {
                  return r(this, h, arguments.length > 1 ? arguments[1] : void 0);
                }
              }), n("includes");
            }
          ),
          /***/
          81755: (
            /***/
            function(f, d, t) {
              var i = t(98086), r = t(71156), n = t(15366), o = t(70172), h = t(97001), u = "Array Iterator", l = o.set, c = o.getterFor(u);
              f.exports = h(Array, "Array", function(s, v) {
                l(this, {
                  type: u,
                  target: i(s),
                  // target
                  index: 0,
                  // next index
                  kind: v
                  // kind
                });
              }, function() {
                var s = c(this), v = s.target, y = s.kind, x = s.index++;
                return !v || x >= v.length ? (s.target = void 0, { value: void 0, done: !0 }) : y == "keys" ? { value: x, done: !1 } : y == "values" ? { value: v[x], done: !1 } : { value: [x, v[x]], done: !1 };
              }, "values"), n.Arguments = n.Array, r("keys"), r("values"), r("entries");
            }
          ),
          /***/
          94845: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(38347), n = t(7514), o = t(98086), h = t(81007), u = r([].join), l = n != Object, c = h("join", ",");
              i({ target: "Array", proto: !0, forced: l || !c }, {
                join: function(v) {
                  return u(o(this), v === void 0 ? "," : v);
                }
              });
            }
          ),
          /***/
          80055: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(91102).map, n = t(56280), o = n("map");
              i({ target: "Array", proto: !0, forced: !o }, {
                map: function(u) {
                  return r(this, u, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          20731: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(59113), o = t(20884), h = t(24517), u = t(74841), l = t(45495), c = t(98086), s = t(38639), v = t(38688), y = t(56280), x = t(73163), e = y("slice"), b = v("species"), A = r.Array, P = Math.max;
              i({ target: "Array", proto: !0, forced: !e }, {
                slice: function(E, T) {
                  var C = c(this), F = l(C), m = u(E, F), I = u(T === void 0 ? F : T, F), O, M, N;
                  if (n(C) && (O = C.constructor, o(O) && (O === A || n(O.prototype)) ? O = void 0 : h(O) && (O = O[b], O === null && (O = void 0)), O === A || O === void 0))
                    return x(C, m, I);
                  for (M = new (O === void 0 ? A : O)(P(I - m, 0)), N = 0; m < I; m++, N++)
                    m in C && s(M, N, C[m]);
                  return M.length = N, M;
                }
              });
            }
          ),
          /***/
          45337: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(38347), n = t(32631), o = t(43162), h = t(45495), u = t(25096), l = t(47044), c = t(43977), s = t(81007), v = t(3809), y = t(21983), x = t(70091), e = t(41731), b = [], A = r(b.sort), P = r(b.push), D = l(function() {
                b.sort(void 0);
              }), E = l(function() {
                b.sort(null);
              }), T = s("sort"), C = !l(function() {
                if (x)
                  return x < 70;
                if (!(v && v > 3)) {
                  if (y)
                    return !0;
                  if (e)
                    return e < 603;
                  var I = "", O, M, N, G;
                  for (O = 65; O < 76; O++) {
                    switch (M = String.fromCharCode(O), O) {
                      case 66:
                      case 69:
                      case 70:
                      case 72:
                        N = 3;
                        break;
                      case 68:
                      case 71:
                        N = 4;
                        break;
                      default:
                        N = 2;
                    }
                    for (G = 0; G < 47; G++)
                      b.push({ k: M + G, v: N });
                  }
                  for (b.sort(function(ot, K) {
                    return K.v - ot.v;
                  }), G = 0; G < b.length; G++)
                    M = b[G].k.charAt(0), I.charAt(I.length - 1) !== M && (I += M);
                  return I !== "DGBEFHACIJK";
                }
              }), F = D || !E || !T || !C, m = function(I) {
                return function(O, M) {
                  return M === void 0 ? -1 : O === void 0 ? 1 : I !== void 0 ? +I(O, M) || 0 : u(O) > u(M) ? 1 : -1;
                };
              };
              i({ target: "Array", proto: !0, forced: F }, {
                sort: function(O) {
                  O !== void 0 && n(O);
                  var M = o(this);
                  if (C)
                    return O === void 0 ? A(M) : A(M, O);
                  var N = [], G = h(M), ot, K;
                  for (K = 0; K < G; K++)
                    K in M && P(N, M[K]);
                  for (c(N, m(O)), ot = N.length, K = 0; K < ot; )
                    M[K] = N[K++];
                  for (; K < G; )
                    delete M[K++];
                  return M;
                }
              });
            }
          ),
          /***/
          23913: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(74841), o = t(26882), h = t(45495), u = t(43162), l = t(45744), c = t(38639), s = t(56280), v = s("splice"), y = r.TypeError, x = Math.max, e = Math.min, b = 9007199254740991, A = "Maximum allowed length exceeded";
              i({ target: "Array", proto: !0, forced: !v }, {
                splice: function(D, E) {
                  var T = u(this), C = h(T), F = n(D, C), m = arguments.length, I, O, M, N, G, ot;
                  if (m === 0 ? I = O = 0 : m === 1 ? (I = 0, O = C - F) : (I = m - 2, O = e(x(o(E), 0), C - F)), C + I - O > b)
                    throw y(A);
                  for (M = l(T, O), N = 0; N < O; N++)
                    G = F + N, G in T && c(M, N, T[G]);
                  if (M.length = O, I < O) {
                    for (N = F; N < C - O; N++)
                      G = N + O, ot = N + I, G in T ? T[ot] = T[G] : delete T[ot];
                    for (N = C; N > C - O + I; N--)
                      delete T[N - 1];
                  } else if (I > O)
                    for (N = C - O; N > F; N--)
                      G = N + O - 1, ot = N + I - 1, G in T ? T[ot] = T[G] : delete T[ot];
                  for (N = 0; N < I; N++)
                    T[N + F] = arguments[N + 2];
                  return T.length = C - O + I, M;
                }
              });
            }
          ),
          /***/
          7585: (
            /***/
            function(f, d, t) {
              var i = t(20340), r = t(13711), n = t(53087), o = t(38688), h = o("toPrimitive"), u = Date.prototype;
              i(u, h) || r(u, h, n);
            }
          ),
          /***/
          24863: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(7081).EXISTS, n = t(38347), o = t(95892).f, h = Function.prototype, u = n(h.toString), l = /^\s*function ([^ (]*)/, c = n(l.exec), s = "name";
              i && !r && o(h, s, {
                configurable: !0,
                get: function() {
                  try {
                    return c(l, u(this))[1];
                  } catch (v) {
                    return "";
                  }
                }
              });
            }
          ),
          /***/
          64384: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010);
              i({ global: !0 }, {
                globalThis: r
              });
            }
          ),
          /***/
          43448: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(15216);
              r(i.JSON, "JSON", !0);
            }
          ),
          /***/
          18828: (
            /***/
            function(f, d, t) {
              var i = t(36673), r = t(9649);
              i("Map", function(n) {
                return function() {
                  return n(this, arguments.length ? arguments[0] : void 0);
                };
              }, r);
            }
          ),
          /***/
          63956: (
            /***/
            function(f, d, t) {
              var i = t(15216);
              i(Math, "Math", !0);
            }
          ),
          /***/
          7283: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(32010), n = t(38347), o = t(39599), h = t(13711), u = t(20340), l = t(51868), c = t(70176), s = t(46290), v = t(2644), y = t(47044), x = t(6611).f, e = t(72062).f, b = t(95892).f, A = t(16679), P = t(29841).trim, D = "Number", E = r[D], T = E.prototype, C = r.TypeError, F = n("".slice), m = n("".charCodeAt), I = function(K) {
                var nt = v(K, "number");
                return typeof nt == "bigint" ? nt : O(nt);
              }, O = function(K) {
                var nt = v(K, "number"), xt, bt, St, Dt, Lt, jt, J, yt;
                if (s(nt))
                  throw C("Cannot convert a Symbol value to a number");
                if (typeof nt == "string" && nt.length > 2) {
                  if (nt = P(nt), xt = m(nt, 0), xt === 43 || xt === 45) {
                    if (bt = m(nt, 2), bt === 88 || bt === 120)
                      return NaN;
                  } else if (xt === 48) {
                    switch (m(nt, 1)) {
                      case 66:
                      case 98:
                        St = 2, Dt = 49;
                        break;
                      case 79:
                      case 111:
                        St = 8, Dt = 55;
                        break;
                      default:
                        return +nt;
                    }
                    for (Lt = F(nt, 2), jt = Lt.length, J = 0; J < jt; J++)
                      if (yt = m(Lt, J), yt < 48 || yt > Dt)
                        return NaN;
                    return parseInt(Lt, St);
                  }
                }
                return +nt;
              };
              if (o(D, !E(" 0o1") || !E("0b1") || E("+0x1"))) {
                for (var M = function(nt) {
                  var xt = arguments.length < 1 ? 0 : E(I(nt)), bt = this;
                  return c(T, bt) && y(function() {
                    A(bt);
                  }) ? l(Object(xt), bt, M) : xt;
                }, N = i ? x(E) : (
                  // ES3:
                  "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(",")
                ), G = 0, ot; N.length > G; G++)
                  u(E, ot = N[G]) && !u(M, ot) && b(M, ot, e(E, ot));
                M.prototype = T, T.constructor = M, h(r, D, M);
              }
            }
          ),
          /***/
          58549: (
            /***/
            function(f, d, t) {
              var i = t(56475);
              i({ target: "Number", stat: !0 }, {
                EPSILON: Math.pow(2, -52)
              });
            }
          ),
          /***/
          70095: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(59805);
              i({ target: "Number", stat: !0 }, { isFinite: r });
            }
          ),
          /***/
          2876: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(17506);
              i({ target: "Number", stat: !0 }, {
                isInteger: r
              });
            }
          ),
          /***/
          10849: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(38347), o = t(26882), h = t(16679), u = t(34858), l = t(47044), c = r.RangeError, s = r.String, v = Math.floor, y = n(u), x = n("".slice), e = n(1 .toFixed), b = function(C, F, m) {
                return F === 0 ? m : F % 2 === 1 ? b(C, F - 1, m * C) : b(C * C, F / 2, m);
              }, A = function(C) {
                for (var F = 0, m = C; m >= 4096; )
                  F += 12, m /= 4096;
                for (; m >= 2; )
                  F += 1, m /= 2;
                return F;
              }, P = function(C, F, m) {
                for (var I = -1, O = m; ++I < 6; )
                  O += F * C[I], C[I] = O % 1e7, O = v(O / 1e7);
              }, D = function(C, F) {
                for (var m = 6, I = 0; --m >= 0; )
                  I += C[m], C[m] = v(I / F), I = I % F * 1e7;
              }, E = function(C) {
                for (var F = 6, m = ""; --F >= 0; )
                  if (m !== "" || F === 0 || C[F] !== 0) {
                    var I = s(C[F]);
                    m = m === "" ? I : m + y("0", 7 - I.length) + I;
                  }
                return m;
              }, T = l(function() {
                return e(8e-5, 3) !== "0.000" || e(0.9, 0) !== "1" || e(1.255, 2) !== "1.25" || e(1000000000000000100, 0) !== "1000000000000000128";
              }) || !l(function() {
                e({});
              });
              i({ target: "Number", proto: !0, forced: T }, {
                toFixed: function(F) {
                  var m = h(this), I = o(F), O = [0, 0, 0, 0, 0, 0], M = "", N = "0", G, ot, K, nt;
                  if (I < 0 || I > 20)
                    throw c("Incorrect fraction digits");
                  if (m != m)
                    return "NaN";
                  if (m <= -1e21 || m >= 1e21)
                    return s(m);
                  if (m < 0 && (M = "-", m = -m), m > 1e-21)
                    if (G = A(m * b(2, 69, 1)) - 69, ot = G < 0 ? m * b(2, -G, 1) : m / b(2, G, 1), ot *= 4503599627370496, G = 52 - G, G > 0) {
                      for (P(O, 0, ot), K = I; K >= 7; )
                        P(O, 1e7, 0), K -= 7;
                      for (P(O, b(10, K, 1), 0), K = G - 1; K >= 23; )
                        D(O, 8388608), K -= 23;
                      D(O, 1 << K), P(O, 1, 1), D(O, 2), N = E(O);
                    } else
                      P(O, 0, ot), P(O, 1 << -G, 0), N = E(O) + y("0", I);
                  return I > 0 ? (nt = N.length, N = M + (nt <= I ? "0." + y("0", I - nt) + N : x(N, 0, nt - I) + "." + x(N, nt - I))) : N = M + N, N;
                }
              });
            }
          ),
          /***/
          18756: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(87146);
              i({ target: "Object", stat: !0, forced: Object.assign !== r }, {
                assign: r
              });
            }
          ),
          /***/
          75174: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(55481), n = t(47044), o = t(24517), h = t(62148).onFreeze, u = Object.freeze, l = n(function() {
                u(1);
              });
              i({ target: "Object", stat: !0, forced: l, sham: !r }, {
                freeze: function(s) {
                  return u && o(s) ? u(h(s)) : s;
                }
              });
            }
          ),
          /***/
          57444: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(47044), n = t(98086), o = t(72062).f, h = t(15567), u = r(function() {
                o(1);
              }), l = !h || u;
              i({ target: "Object", stat: !0, forced: l, sham: !h }, {
                getOwnPropertyDescriptor: function(s, v) {
                  return o(n(s), v);
                }
              });
            }
          ),
          /***/
          28331: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(15567), n = t(21594), o = t(98086), h = t(72062), u = t(38639);
              i({ target: "Object", stat: !0, sham: !r }, {
                getOwnPropertyDescriptors: function(c) {
                  for (var s = o(c), v = h.f, y = n(s), x = {}, e = 0, b, A; y.length > e; )
                    A = v(s, b = y[e++]), A !== void 0 && u(x, b, A);
                  return x;
                }
              });
            }
          ),
          /***/
          71950: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(47044), n = t(43162), o = t(69548), h = t(68494), u = r(function() {
                o(1);
              });
              i({ target: "Object", stat: !0, forced: u, sham: !h }, {
                getPrototypeOf: function(c) {
                  return o(n(c));
                }
              });
            }
          ),
          /***/
          37309: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(43162), n = t(84675), o = t(47044), h = o(function() {
                n(1);
              });
              i({ target: "Object", stat: !0, forced: h }, {
                keys: function(l) {
                  return n(r(l));
                }
              });
            }
          ),
          /***/
          14032: (
            /***/
            function(f, d, t) {
              var i = t(24663), r = t(13711), n = t(52598);
              i || r(Object.prototype, "toString", n, { unsafe: !0 });
            }
          ),
          /***/
          59883: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(80754).values;
              i({ target: "Object", stat: !0 }, {
                values: function(o) {
                  return r(o);
                }
              });
            }
          ),
          /***/
          77074: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(2834), n = t(32631), o = t(56614), h = t(61900), u = t(80383);
              i({ target: "Promise", stat: !0 }, {
                allSettled: function(c) {
                  var s = this, v = o.f(s), y = v.resolve, x = v.reject, e = h(function() {
                    var b = n(s.resolve), A = [], P = 0, D = 1;
                    u(c, function(E) {
                      var T = P++, C = !1;
                      D++, r(b, s, E).then(function(F) {
                        C || (C = !0, A[T] = { status: "fulfilled", value: F }, --D || y(A));
                      }, function(F) {
                        C || (C = !0, A[T] = { status: "rejected", reason: F }, --D || y(A));
                      });
                    }), --D || y(A);
                  });
                  return e.error && x(e.value), v.promise;
                }
              });
            }
          ),
          /***/
          44455: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32631), n = t(38486), o = t(2834), h = t(56614), u = t(61900), l = t(80383), c = "No one promise resolved";
              i({ target: "Promise", stat: !0 }, {
                any: function(v) {
                  var y = this, x = n("AggregateError"), e = h.f(y), b = e.resolve, A = e.reject, P = u(function() {
                    var D = r(y.resolve), E = [], T = 0, C = 1, F = !1;
                    l(v, function(m) {
                      var I = T++, O = !1;
                      C++, o(D, y, m).then(function(M) {
                        O || F || (F = !0, b(M));
                      }, function(M) {
                        O || F || (O = !0, E[I] = M, --C || A(new x(E, c)));
                      });
                    }), --C || A(new x(E, c));
                  });
                  return P.error && A(P.value), e.promise;
                }
              });
            }
          ),
          /***/
          80986: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(63432), n = t(5155), o = t(47044), h = t(38486), u = t(94578), l = t(27754), c = t(28617), s = t(13711), v = !!n && o(function() {
                n.prototype.finally.call({ then: function() {
                } }, function() {
                });
              });
              if (i({ target: "Promise", proto: !0, real: !0, forced: v }, {
                finally: function(x) {
                  var e = l(this, h("Promise")), b = u(x);
                  return this.then(
                    b ? function(A) {
                      return c(e, x()).then(function() {
                        return A;
                      });
                    } : x,
                    b ? function(A) {
                      return c(e, x()).then(function() {
                        throw A;
                      });
                    } : x
                  );
                }
              }), !r && u(n)) {
                var y = h("Promise").prototype.finally;
                n.prototype.finally !== y && s(n.prototype, "finally", y, { unsafe: !0 });
              }
            }
          ),
          /***/
          68067: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(63432), n = t(32010), o = t(38486), h = t(2834), u = t(5155), l = t(13711), c = t(15341), s = t(3840), v = t(15216), y = t(51334), x = t(32631), e = t(94578), b = t(24517), A = t(2868), P = t(10447), D = t(80383), E = t(46769), T = t(27754), C = t(6616).set, F = t(59804), m = t(28617), I = t(61144), O = t(56614), M = t(61900), N = t(70172), G = t(39599), ot = t(38688), K = t(3157), nt = t(95053), xt = t(70091), bt = ot("species"), St = "Promise", Dt = N.get, Lt = N.set, jt = N.getterFor(St), J = u && u.prototype, yt = u, ut = J, st = n.TypeError, wt = n.document, V = n.process, Ft = O.f, U = Ft, S = !!(wt && wt.createEvent && n.dispatchEvent), k = e(n.PromiseRejectionEvent), H = "unhandledrejection", it = "rejectionhandled", et = 0, tt = 1, Ct = 2, Rt = 1, Kt = 2, Gt = !1, It, re, be, me, le = G(St, function() {
                var W = P(yt), Q = W !== String(yt);
                if (!Q && xt === 66 || r && !ut.finally)
                  return !0;
                if (xt >= 51 && /native code/.test(W))
                  return !1;
                var gt = new yt(function(Ht) {
                  Ht(1);
                }), Pt = function(Ht) {
                  Ht(function() {
                  }, function() {
                  });
                }, ht = gt.constructor = {};
                return ht[bt] = Pt, Gt = gt.then(function() {
                }) instanceof Pt, Gt ? !Q && K && !k : !0;
              }), Se = le || !E(function(W) {
                yt.all(W).catch(function() {
                });
              }), Wt = function(W) {
                var Q;
                return b(W) && e(Q = W.then) ? Q : !1;
              }, $t = function(W, Q) {
                if (!W.notified) {
                  W.notified = !0;
                  var gt = W.reactions;
                  F(function() {
                    for (var Pt = W.value, ht = W.state == tt, Ht = 0; gt.length > Ht; ) {
                      var we = gt[Ht++], rt = ht ? we.ok : we.fail, _t = we.resolve, ae = we.reject, Et = we.domain, Zt, fe, Ue;
                      try {
                        rt ? (ht || (W.rejection === Kt && Re(W), W.rejection = Rt), rt === !0 ? Zt = Pt : (Et && Et.enter(), Zt = rt(Pt), Et && (Et.exit(), Ue = !0)), Zt === we.promise ? ae(st("Promise-chain cycle")) : (fe = Wt(Zt)) ? h(fe, Zt, _t, ae) : _t(Zt)) : ae(Pt);
                      } catch (Be) {
                        Et && !Ue && Et.exit(), ae(Be);
                      }
                    }
                    W.reactions = [], W.notified = !1, Q && !W.rejection && he(W);
                  });
                }
              }, ue = function(W, Q, gt) {
                var Pt, ht;
                S ? (Pt = wt.createEvent("Event"), Pt.promise = Q, Pt.reason = gt, Pt.initEvent(W, !1, !0), n.dispatchEvent(Pt)) : Pt = { promise: Q, reason: gt }, !k && (ht = n["on" + W]) ? ht(Pt) : W === H && I("Unhandled promise rejection", gt);
              }, he = function(W) {
                h(C, n, function() {
                  var Q = W.facade, gt = W.value, Pt = Ee(W), ht;
                  if (Pt && (ht = M(function() {
                    nt ? V.emit("unhandledRejection", gt, Q) : ue(H, Q, gt);
                  }), W.rejection = nt || Ee(W) ? Kt : Rt, ht.error))
                    throw ht.value;
                });
              }, Ee = function(W) {
                return W.rejection !== Rt && !W.parent;
              }, Re = function(W) {
                h(C, n, function() {
                  var Q = W.facade;
                  nt ? V.emit("rejectionHandled", Q) : ue(it, Q, W.value);
                });
              }, Ie = function(W, Q, gt) {
                return function(Pt) {
                  W(Q, Pt, gt);
                };
              }, Ot = function(W, Q, gt) {
                W.done || (W.done = !0, gt && (W = gt), W.value = Q, W.state = Ct, $t(W, !0));
              }, vt = function(W, Q, gt) {
                if (!W.done) {
                  W.done = !0, gt && (W = gt);
                  try {
                    if (W.facade === Q)
                      throw st("Promise can't be resolved itself");
                    var Pt = Wt(Q);
                    Pt ? F(function() {
                      var ht = { done: !1 };
                      try {
                        h(
                          Pt,
                          Q,
                          Ie(vt, ht, W),
                          Ie(Ot, ht, W)
                        );
                      } catch (Ht) {
                        Ot(ht, Ht, W);
                      }
                    }) : (W.value = Q, W.state = tt, $t(W, !1));
                  } catch (ht) {
                    Ot({ done: !1 }, ht, W);
                  }
                }
              };
              if (le && (yt = function(Q) {
                A(this, ut), x(Q), h(It, this);
                var gt = Dt(this);
                try {
                  Q(Ie(vt, gt), Ie(Ot, gt));
                } catch (Pt) {
                  Ot(gt, Pt);
                }
              }, ut = yt.prototype, It = function(Q) {
                Lt(this, {
                  type: St,
                  done: !1,
                  notified: !1,
                  parent: !1,
                  reactions: [],
                  rejection: !1,
                  state: et,
                  value: void 0
                });
              }, It.prototype = c(ut, {
                // `Promise.prototype.then` method
                // https://tc39.es/ecma262/#sec-promise.prototype.then
                then: function(Q, gt) {
                  var Pt = jt(this), ht = Pt.reactions, Ht = Ft(T(this, yt));
                  return Ht.ok = e(Q) ? Q : !0, Ht.fail = e(gt) && gt, Ht.domain = nt ? V.domain : void 0, Pt.parent = !0, ht[ht.length] = Ht, Pt.state != et && $t(Pt, !1), Ht.promise;
                },
                // `Promise.prototype.catch` method
                // https://tc39.es/ecma262/#sec-promise.prototype.catch
                catch: function(W) {
                  return this.then(void 0, W);
                }
              }), re = function() {
                var W = new It(), Q = Dt(W);
                this.promise = W, this.resolve = Ie(vt, Q), this.reject = Ie(Ot, Q);
              }, O.f = Ft = function(W) {
                return W === yt || W === be ? new re(W) : U(W);
              }, !r && e(u) && J !== Object.prototype)) {
                me = J.then, Gt || (l(J, "then", function(Q, gt) {
                  var Pt = this;
                  return new yt(function(ht, Ht) {
                    h(me, Pt, ht, Ht);
                  }).then(Q, gt);
                }, { unsafe: !0 }), l(J, "catch", ut.catch, { unsafe: !0 }));
                try {
                  delete J.constructor;
                } catch (W) {
                }
                s && s(J, ut);
              }
              i({ global: !0, wrap: !0, forced: le }, {
                Promise: yt
              }), v(yt, St, !1, !0), y(St), be = o(St), i({ target: St, stat: !0, forced: le }, {
                // `Promise.reject` method
                // https://tc39.es/ecma262/#sec-promise.reject
                reject: function(Q) {
                  var gt = Ft(this);
                  return h(gt.reject, void 0, Q), gt.promise;
                }
              }), i({ target: St, stat: !0, forced: r || le }, {
                // `Promise.resolve` method
                // https://tc39.es/ecma262/#sec-promise.resolve
                resolve: function(Q) {
                  return m(r && this === be ? yt : this, Q);
                }
              }), i({ target: St, stat: !0, forced: Se }, {
                // `Promise.all` method
                // https://tc39.es/ecma262/#sec-promise.all
                all: function(Q) {
                  var gt = this, Pt = Ft(gt), ht = Pt.resolve, Ht = Pt.reject, we = M(function() {
                    var rt = x(gt.resolve), _t = [], ae = 0, Et = 1;
                    D(Q, function(Zt) {
                      var fe = ae++, Ue = !1;
                      Et++, h(rt, gt, Zt).then(function(Be) {
                        Ue || (Ue = !0, _t[fe] = Be, --Et || ht(_t));
                      }, Ht);
                    }), --Et || ht(_t);
                  });
                  return we.error && Ht(we.value), Pt.promise;
                },
                // `Promise.race` method
                // https://tc39.es/ecma262/#sec-promise.race
                race: function(Q) {
                  var gt = this, Pt = Ft(gt), ht = Pt.reject, Ht = M(function() {
                    var we = x(gt.resolve);
                    D(Q, function(rt) {
                      h(we, gt, rt).then(Pt.resolve, ht);
                    });
                  });
                  return Ht.error && ht(Ht.value), Pt.promise;
                }
              });
            }
          ),
          /***/
          61726: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(49820);
              i({ target: "RegExp", proto: !0, forced: /./.exec !== r }, {
                exec: r
              });
            }
          ),
          /***/
          74516: (
            /***/
            function(f, d, t) {
              var i = t(15567), r = t(95892), n = t(21182), o = t(47044), h = RegExp.prototype, u = i && o(function() {
                return Object.getOwnPropertyDescriptor(h, "flags").get.call({ dotAll: !0, sticky: !0 }) !== "sy";
              });
              u && r.f(h, "flags", {
                configurable: !0,
                get: n
              });
            }
          ),
          /***/
          57114: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(7081).PROPER, n = t(13711), o = t(34984), h = t(70176), u = t(25096), l = t(47044), c = t(21182), s = "toString", v = RegExp.prototype, y = v[s], x = i(c), e = l(function() {
                return y.call({ source: "a", flags: "b" }) != "/a/b";
              }), b = r && y.name != s;
              (e || b) && n(RegExp.prototype, s, function() {
                var P = o(this), D = u(P.source), E = P.flags, T = u(E === void 0 && h(v, P) && !("flags" in v) ? x(P) : E);
                return "/" + D + "/" + T;
              }, { unsafe: !0 });
            }
          ),
          /***/
          76014: (
            /***/
            function(f, d, t) {
              var i = t(36673), r = t(9649);
              i("Set", function(n) {
                return function() {
                  return n(this, arguments.length ? arguments[0] : void 0);
                };
              }, r);
            }
          ),
          /***/
          28356: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(91159), n = t(7452);
              i({ target: "String", proto: !0, forced: n("bold") }, {
                bold: function() {
                  return r(this, "b", "", "");
                }
              });
            }
          ),
          /***/
          26663: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(69510).codeAt;
              i({ target: "String", proto: !0 }, {
                codePointAt: function(o) {
                  return r(this, o);
                }
              });
            }
          ),
          /***/
          65578: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(38347), o = t(74841), h = r.RangeError, u = String.fromCharCode, l = String.fromCodePoint, c = n([].join), s = !!l && l.length != 1;
              i({ target: "String", stat: !0, forced: s }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                fromCodePoint: function(y) {
                  for (var x = [], e = arguments.length, b = 0, A; e > b; ) {
                    if (A = +arguments[b++], o(A, 1114111) !== A)
                      throw h(A + " is not a valid code point");
                    x[b] = A < 65536 ? u(A) : u(((A -= 65536) >> 10) + 55296, A % 1024 + 56320);
                  }
                  return c(x, "");
                }
              });
            }
          ),
          /***/
          47458: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(38347), n = t(93666), o = t(83943), h = t(25096), u = t(91151), l = r("".indexOf);
              i({ target: "String", proto: !0, forced: !u("includes") }, {
                includes: function(s) {
                  return !!~l(
                    h(o(this)),
                    h(n(s)),
                    arguments.length > 1 ? arguments[1] : void 0
                  );
                }
              });
            }
          ),
          /***/
          62046: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(91159), n = t(7452);
              i({ target: "String", proto: !0, forced: n("italics") }, {
                italics: function() {
                  return r(this, "i", "", "");
                }
              });
            }
          ),
          /***/
          58281: (
            /***/
            function(f, d, t) {
              var i = t(69510).charAt, r = t(25096), n = t(70172), o = t(97001), h = "String Iterator", u = n.set, l = n.getterFor(h);
              o(String, "String", function(c) {
                u(this, {
                  type: h,
                  string: r(c),
                  index: 0
                });
              }, function() {
                var s = l(this), v = s.string, y = s.index, x;
                return y >= v.length ? { value: void 0, done: !0 } : (x = i(v, y), s.index += x.length, { value: x, done: !1 });
              });
            }
          ),
          /***/
          47259: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(91159), n = t(7452);
              i({ target: "String", proto: !0, forced: n("link") }, {
                link: function(h) {
                  return r(this, "a", "href", h);
                }
              });
            }
          ),
          /***/
          71768: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(2834), o = t(38347), h = t(13945), u = t(83943), l = t(23417), c = t(25096), s = t(34984), v = t(93975), y = t(70176), x = t(28831), e = t(21182), b = t(51839), A = t(13711), P = t(47044), D = t(38688), E = t(27754), T = t(36352), C = t(66723), F = t(70172), m = t(63432), I = D("matchAll"), O = "RegExp String", M = O + " Iterator", N = F.set, G = F.getterFor(M), ot = RegExp.prototype, K = r.TypeError, nt = o(e), xt = o("".indexOf), bt = o("".matchAll), St = !!bt && !P(function() {
                bt("a", /./);
              }), Dt = h(function(J, yt, ut, st) {
                N(this, {
                  type: M,
                  regexp: J,
                  string: yt,
                  global: ut,
                  unicode: st,
                  done: !1
                });
              }, O, function() {
                var J = G(this);
                if (J.done)
                  return { value: void 0, done: !0 };
                var yt = J.regexp, ut = J.string, st = C(yt, ut);
                return st === null ? { value: void 0, done: J.done = !0 } : J.global ? (c(st[0]) === "" && (yt.lastIndex = T(ut, l(yt.lastIndex), J.unicode)), { value: st, done: !1 }) : (J.done = !0, { value: st, done: !1 });
              }), Lt = function(jt) {
                var J = s(this), yt = c(jt), ut, st, wt, V, Ft, U;
                return ut = E(J, RegExp), st = J.flags, st === void 0 && y(ot, J) && !("flags" in ot) && (st = nt(J)), wt = st === void 0 ? "" : c(st), V = new ut(ut === RegExp ? J.source : J, wt), Ft = !!~xt(wt, "g"), U = !!~xt(wt, "u"), V.lastIndex = l(J.lastIndex), new Dt(V, yt, Ft, U);
              };
              i({ target: "String", proto: !0, forced: St }, {
                matchAll: function(J) {
                  var yt = u(this), ut, st, wt, V;
                  if (J != null) {
                    if (x(J) && (ut = c(u(
                      "flags" in ot ? J.flags : nt(J)
                    )), !~xt(ut, "g")))
                      throw K("`.matchAll` does not allow non-global regexes");
                    if (St)
                      return bt(yt, J);
                    if (wt = b(J, I), wt === void 0 && m && v(J) == "RegExp" && (wt = Lt), wt)
                      return n(wt, J, yt);
                  } else if (St)
                    return bt(yt, J);
                  return st = c(yt), V = new RegExp(J, "g"), m ? n(Lt, V, st) : V[I](st);
                }
              }), m || I in ot || A(ot, I, Lt);
            }
          ),
          /***/
          6422: (
            /***/
            function(f, d, t) {
              var i = t(2834), r = t(11813), n = t(34984), o = t(23417), h = t(25096), u = t(83943), l = t(51839), c = t(36352), s = t(66723);
              r("match", function(v, y, x) {
                return [
                  // `String.prototype.match` method
                  // https://tc39.es/ecma262/#sec-string.prototype.match
                  function(b) {
                    var A = u(this), P = b == null ? void 0 : l(b, v);
                    return P ? i(P, b, A) : new RegExp(b)[v](h(A));
                  },
                  // `RegExp.prototype[@@match]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
                  function(e) {
                    var b = n(this), A = h(e), P = x(y, b, A);
                    if (P.done)
                      return P.value;
                    if (!b.global)
                      return s(b, A);
                    var D = b.unicode;
                    b.lastIndex = 0;
                    for (var E = [], T = 0, C; (C = s(b, A)) !== null; ) {
                      var F = h(C[0]);
                      E[T] = F, F === "" && (b.lastIndex = c(A, o(b.lastIndex), D)), T++;
                    }
                    return T === 0 ? null : E;
                  }
                ];
              });
            }
          ),
          /***/
          28264: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(34858);
              i({ target: "String", proto: !0 }, {
                repeat: r
              });
            }
          ),
          /***/
          1593: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(2834), o = t(38347), h = t(83943), u = t(94578), l = t(28831), c = t(25096), s = t(51839), v = t(21182), y = t(29519), x = t(38688), e = t(63432), b = x("replace"), A = RegExp.prototype, P = r.TypeError, D = o(v), E = o("".indexOf), T = o("".replace), C = o("".slice), F = Math.max, m = function(I, O, M) {
                return M > I.length ? -1 : O === "" ? M : E(I, O, M);
              };
              i({ target: "String", proto: !0 }, {
                replaceAll: function(O, M) {
                  var N = h(this), G, ot, K, nt, xt, bt, St, Dt, Lt, jt = 0, J = 0, yt = "";
                  if (O != null) {
                    if (G = l(O), G && (ot = c(h(
                      "flags" in A ? O.flags : D(O)
                    )), !~E(ot, "g")))
                      throw P("`.replaceAll` does not allow non-global regexes");
                    if (K = s(O, b), K)
                      return n(K, O, N, M);
                    if (e && G)
                      return T(c(N), O, M);
                  }
                  for (nt = c(N), xt = c(O), bt = u(M), bt || (M = c(M)), St = xt.length, Dt = F(1, St), jt = m(nt, xt, 0); jt !== -1; )
                    Lt = bt ? c(M(xt, jt, nt)) : y(xt, nt, jt, [], void 0, M), yt += C(nt, J, jt) + Lt, J = jt + St, jt = m(nt, xt, jt + Dt);
                  return J < nt.length && (yt += C(nt, J)), yt;
                }
              });
            }
          ),
          /***/
          46467: (
            /***/
            function(f, d, t) {
              var i = t(58448), r = t(2834), n = t(38347), o = t(11813), h = t(47044), u = t(34984), l = t(94578), c = t(26882), s = t(23417), v = t(25096), y = t(83943), x = t(36352), e = t(51839), b = t(29519), A = t(66723), P = t(38688), D = P("replace"), E = Math.max, T = Math.min, C = n([].concat), F = n([].push), m = n("".indexOf), I = n("".slice), O = function(ot) {
                return ot === void 0 ? ot : String(ot);
              }, M = function() {
                return "a".replace(/./, "$0") === "$0";
              }(), N = function() {
                return /./[D] ? /./[D]("a", "$0") === "" : !1;
              }(), G = !h(function() {
                var ot = /./;
                return ot.exec = function() {
                  var K = [];
                  return K.groups = { a: "7" }, K;
                }, "".replace(ot, "$<a>") !== "7";
              });
              o("replace", function(ot, K, nt) {
                var xt = N ? "$" : "$0";
                return [
                  // `String.prototype.replace` method
                  // https://tc39.es/ecma262/#sec-string.prototype.replace
                  function(St, Dt) {
                    var Lt = y(this), jt = St == null ? void 0 : e(St, D);
                    return jt ? r(jt, St, Lt, Dt) : r(K, v(Lt), St, Dt);
                  },
                  // `RegExp.prototype[@@replace]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
                  function(bt, St) {
                    var Dt = u(this), Lt = v(bt);
                    if (typeof St == "string" && m(St, xt) === -1 && m(St, "$<") === -1) {
                      var jt = nt(K, Dt, Lt, St);
                      if (jt.done)
                        return jt.value;
                    }
                    var J = l(St);
                    J || (St = v(St));
                    var yt = Dt.global;
                    if (yt) {
                      var ut = Dt.unicode;
                      Dt.lastIndex = 0;
                    }
                    for (var st = []; ; ) {
                      var wt = A(Dt, Lt);
                      if (wt === null || (F(st, wt), !yt))
                        break;
                      var V = v(wt[0]);
                      V === "" && (Dt.lastIndex = x(Lt, s(Dt.lastIndex), ut));
                    }
                    for (var Ft = "", U = 0, S = 0; S < st.length; S++) {
                      wt = st[S];
                      for (var k = v(wt[0]), H = E(T(c(wt.index), Lt.length), 0), it = [], et = 1; et < wt.length; et++)
                        F(it, O(wt[et]));
                      var tt = wt.groups;
                      if (J) {
                        var Ct = C([k], it, H, Lt);
                        tt !== void 0 && F(Ct, tt);
                        var Rt = v(i(St, void 0, Ct));
                      } else
                        Rt = b(k, Lt, H, it, tt, St);
                      H >= U && (Ft += I(Lt, U, H) + Rt, U = H + k.length);
                    }
                    return Ft + I(Lt, U);
                  }
                ];
              }, !G || !M || N);
            }
          ),
          /***/
          7851: (
            /***/
            function(f, d, t) {
              var i = t(58448), r = t(2834), n = t(38347), o = t(11813), h = t(28831), u = t(34984), l = t(83943), c = t(27754), s = t(36352), v = t(23417), y = t(25096), x = t(51839), e = t(73163), b = t(66723), A = t(49820), P = t(74846), D = t(47044), E = P.UNSUPPORTED_Y, T = 4294967295, C = Math.min, F = [].push, m = n(/./.exec), I = n(F), O = n("".slice), M = !D(function() {
                var N = /(?:)/, G = N.exec;
                N.exec = function() {
                  return G.apply(this, arguments);
                };
                var ot = "ab".split(N);
                return ot.length !== 2 || ot[0] !== "a" || ot[1] !== "b";
              });
              o("split", function(N, G, ot) {
                var K;
                return "abbc".split(/(b)*/)[1] == "c" || // eslint-disable-next-line regexp/no-empty-group -- required for testing
                "test".split(/(?:)/, -1).length != 4 || "ab".split(/(?:ab)*/).length != 2 || ".".split(/(.?)(.?)/).length != 4 || // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
                ".".split(/()()/).length > 1 || "".split(/.?/).length ? K = function(nt, xt) {
                  var bt = y(l(this)), St = xt === void 0 ? T : xt >>> 0;
                  if (St === 0)
                    return [];
                  if (nt === void 0)
                    return [bt];
                  if (!h(nt))
                    return r(G, bt, nt, St);
                  for (var Dt = [], Lt = (nt.ignoreCase ? "i" : "") + (nt.multiline ? "m" : "") + (nt.unicode ? "u" : "") + (nt.sticky ? "y" : ""), jt = 0, J = new RegExp(nt.source, Lt + "g"), yt, ut, st; (yt = r(A, J, bt)) && (ut = J.lastIndex, !(ut > jt && (I(Dt, O(bt, jt, yt.index)), yt.length > 1 && yt.index < bt.length && i(F, Dt, e(yt, 1)), st = yt[0].length, jt = ut, Dt.length >= St))); )
                    J.lastIndex === yt.index && J.lastIndex++;
                  return jt === bt.length ? (st || !m(J, "")) && I(Dt, "") : I(Dt, O(bt, jt)), Dt.length > St ? e(Dt, 0, St) : Dt;
                } : "0".split(void 0, 0).length ? K = function(nt, xt) {
                  return nt === void 0 && xt === 0 ? [] : r(G, this, nt, xt);
                } : K = G, [
                  // `String.prototype.split` method
                  // https://tc39.es/ecma262/#sec-string.prototype.split
                  function(xt, bt) {
                    var St = l(this), Dt = xt == null ? void 0 : x(xt, N);
                    return Dt ? r(Dt, xt, St, bt) : r(K, y(St), xt, bt);
                  },
                  // `RegExp.prototype[@@split]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
                  //
                  // NOTE: This cannot be properly polyfilled in engines that don't support
                  // the 'y' flag.
                  function(nt, xt) {
                    var bt = u(this), St = y(nt), Dt = ot(K, bt, St, xt, K !== G);
                    if (Dt.done)
                      return Dt.value;
                    var Lt = c(bt, RegExp), jt = bt.unicode, J = (bt.ignoreCase ? "i" : "") + (bt.multiline ? "m" : "") + (bt.unicode ? "u" : "") + (E ? "g" : "y"), yt = new Lt(E ? "^(?:" + bt.source + ")" : bt, J), ut = xt === void 0 ? T : xt >>> 0;
                    if (ut === 0)
                      return [];
                    if (St.length === 0)
                      return b(yt, St) === null ? [St] : [];
                    for (var st = 0, wt = 0, V = []; wt < St.length; ) {
                      yt.lastIndex = E ? 0 : wt;
                      var Ft = b(yt, E ? O(St, wt) : St), U;
                      if (Ft === null || (U = C(v(yt.lastIndex + (E ? wt : 0)), St.length)) === st)
                        wt = s(St, wt, jt);
                      else {
                        if (I(V, O(St, st, wt)), V.length === ut)
                          return V;
                        for (var S = 1; S <= Ft.length - 1; S++)
                          if (I(V, Ft[S]), V.length === ut)
                            return V;
                        wt = st = U;
                      }
                    }
                    return I(V, O(St, st)), V;
                  }
                ];
              }, !M, E);
            }
          ),
          /***/
          18425: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(91159), n = t(7452);
              i({ target: "String", proto: !0, forced: n("strike") }, {
                strike: function() {
                  return r(this, "strike", "", "");
                }
              });
            }
          ),
          /***/
          72095: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(29841).trim, n = t(68899);
              i({ target: "String", proto: !0, forced: n("trim") }, {
                trim: function() {
                  return r(this);
                }
              });
            }
          ),
          /***/
          35877: (
            /***/
            function(f, d, t) {
              var i = t(46042);
              i("asyncIterator");
            }
          ),
          /***/
          73844: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(15567), n = t(32010), o = t(38347), h = t(20340), u = t(94578), l = t(70176), c = t(25096), s = t(95892).f, v = t(2675), y = n.Symbol, x = y && y.prototype;
              if (r && u(y) && (!("description" in x) || // Safari 12 bug
              y().description !== void 0)) {
                var e = {}, b = function() {
                  var m = arguments.length < 1 || arguments[0] === void 0 ? void 0 : c(arguments[0]), I = l(x, this) ? new y(m) : m === void 0 ? y() : y(m);
                  return m === "" && (e[I] = !0), I;
                };
                v(b, y), b.prototype = x, x.constructor = b;
                var A = String(y("test")) == "Symbol(test)", P = o(x.toString), D = o(x.valueOf), E = /^Symbol\((.*)\)[^)]+$/, T = o("".replace), C = o("".slice);
                s(x, "description", {
                  configurable: !0,
                  get: function() {
                    var m = D(this), I = P(m);
                    if (h(e, m))
                      return "";
                    var O = A ? C(I, 7, -1) : T(I, E, "$1");
                    return O === "" ? void 0 : O;
                  }
                }), i({ global: !0, forced: !0 }, {
                  Symbol: b
                });
              }
            }
          ),
          /***/
          69330: (
            /***/
            function(f, d, t) {
              var i = t(46042);
              i("iterator");
            }
          ),
          /***/
          65292: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(32010), n = t(38486), o = t(58448), h = t(2834), u = t(38347), l = t(63432), c = t(15567), s = t(46887), v = t(47044), y = t(20340), x = t(59113), e = t(94578), b = t(24517), A = t(70176), P = t(46290), D = t(34984), E = t(43162), T = t(98086), C = t(63918), F = t(25096), m = t(97841), I = t(10819), O = t(84675), M = t(6611), N = t(8807), G = t(61146), ot = t(72062), K = t(95892), nt = t(55574), xt = t(73163), bt = t(13711), St = t(464), Dt = t(82194), Lt = t(90682), jt = t(46859), J = t(38688), yt = t(75960), ut = t(46042), st = t(15216), wt = t(70172), V = t(91102).forEach, Ft = Dt("hidden"), U = "Symbol", S = "prototype", k = J("toPrimitive"), H = wt.set, it = wt.getterFor(U), et = Object[S], tt = r.Symbol, Ct = tt && tt[S], Rt = r.TypeError, Kt = r.QObject, Gt = n("JSON", "stringify"), It = ot.f, re = K.f, be = N.f, me = nt.f, le = u([].push), Se = St("symbols"), Wt = St("op-symbols"), $t = St("string-to-symbol-registry"), ue = St("symbol-to-string-registry"), he = St("wks"), Ee = !Kt || !Kt[S] || !Kt[S].findChild, Re = c && v(function() {
                return I(re({}, "a", {
                  get: function() {
                    return re(this, "a", { value: 7 }).a;
                  }
                })).a != 7;
              }) ? function(rt, _t, ae) {
                var Et = It(et, _t);
                Et && delete et[_t], re(rt, _t, ae), Et && rt !== et && re(et, _t, Et);
              } : re, Ie = function(rt, _t) {
                var ae = Se[rt] = I(Ct);
                return H(ae, {
                  type: U,
                  tag: rt,
                  description: _t
                }), c || (ae.description = _t), ae;
              }, Ot = function(_t, ae, Et) {
                _t === et && Ot(Wt, ae, Et), D(_t);
                var Zt = C(ae);
                return D(Et), y(Se, Zt) ? (Et.enumerable ? (y(_t, Ft) && _t[Ft][Zt] && (_t[Ft][Zt] = !1), Et = I(Et, { enumerable: m(0, !1) })) : (y(_t, Ft) || re(_t, Ft, m(1, {})), _t[Ft][Zt] = !0), Re(_t, Zt, Et)) : re(_t, Zt, Et);
              }, vt = function(_t, ae) {
                D(_t);
                var Et = T(ae), Zt = O(Et).concat(ht(Et));
                return V(Zt, function(fe) {
                  (!c || h(Q, Et, fe)) && Ot(_t, fe, Et[fe]);
                }), _t;
              }, W = function(_t, ae) {
                return ae === void 0 ? I(_t) : vt(I(_t), ae);
              }, Q = function(_t) {
                var ae = C(_t), Et = h(me, this, ae);
                return this === et && y(Se, ae) && !y(Wt, ae) ? !1 : Et || !y(this, ae) || !y(Se, ae) || y(this, Ft) && this[Ft][ae] ? Et : !0;
              }, gt = function(_t, ae) {
                var Et = T(_t), Zt = C(ae);
                if (!(Et === et && y(Se, Zt) && !y(Wt, Zt))) {
                  var fe = It(Et, Zt);
                  return fe && y(Se, Zt) && !(y(Et, Ft) && Et[Ft][Zt]) && (fe.enumerable = !0), fe;
                }
              }, Pt = function(_t) {
                var ae = be(T(_t)), Et = [];
                return V(ae, function(Zt) {
                  !y(Se, Zt) && !y(Lt, Zt) && le(Et, Zt);
                }), Et;
              }, ht = function(_t) {
                var ae = _t === et, Et = be(ae ? Wt : T(_t)), Zt = [];
                return V(Et, function(fe) {
                  y(Se, fe) && (!ae || y(et, fe)) && le(Zt, Se[fe]);
                }), Zt;
              };
              if (s || (tt = function() {
                if (A(Ct, this))
                  throw Rt("Symbol is not a constructor");
                var _t = !arguments.length || arguments[0] === void 0 ? void 0 : F(arguments[0]), ae = jt(_t), Et = function(Zt) {
                  this === et && h(Et, Wt, Zt), y(this, Ft) && y(this[Ft], ae) && (this[Ft][ae] = !1), Re(this, ae, m(1, Zt));
                };
                return c && Ee && Re(et, ae, { configurable: !0, set: Et }), Ie(ae, _t);
              }, Ct = tt[S], bt(Ct, "toString", function() {
                return it(this).tag;
              }), bt(tt, "withoutSetter", function(rt) {
                return Ie(jt(rt), rt);
              }), nt.f = Q, K.f = Ot, ot.f = gt, M.f = N.f = Pt, G.f = ht, yt.f = function(rt) {
                return Ie(J(rt), rt);
              }, c && (re(Ct, "description", {
                configurable: !0,
                get: function() {
                  return it(this).description;
                }
              }), l || bt(et, "propertyIsEnumerable", Q, { unsafe: !0 }))), i({ global: !0, wrap: !0, forced: !s, sham: !s }, {
                Symbol: tt
              }), V(O(he), function(rt) {
                ut(rt);
              }), i({ target: U, stat: !0, forced: !s }, {
                // `Symbol.for` method
                // https://tc39.es/ecma262/#sec-symbol.for
                for: function(rt) {
                  var _t = F(rt);
                  if (y($t, _t))
                    return $t[_t];
                  var ae = tt(_t);
                  return $t[_t] = ae, ue[ae] = _t, ae;
                },
                // `Symbol.keyFor` method
                // https://tc39.es/ecma262/#sec-symbol.keyfor
                keyFor: function(_t) {
                  if (!P(_t))
                    throw Rt(_t + " is not a symbol");
                  if (y(ue, _t))
                    return ue[_t];
                },
                useSetter: function() {
                  Ee = !0;
                },
                useSimple: function() {
                  Ee = !1;
                }
              }), i({ target: "Object", stat: !0, forced: !s, sham: !c }, {
                // `Object.create` method
                // https://tc39.es/ecma262/#sec-object.create
                create: W,
                // `Object.defineProperty` method
                // https://tc39.es/ecma262/#sec-object.defineproperty
                defineProperty: Ot,
                // `Object.defineProperties` method
                // https://tc39.es/ecma262/#sec-object.defineproperties
                defineProperties: vt,
                // `Object.getOwnPropertyDescriptor` method
                // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
                getOwnPropertyDescriptor: gt
              }), i({ target: "Object", stat: !0, forced: !s }, {
                // `Object.getOwnPropertyNames` method
                // https://tc39.es/ecma262/#sec-object.getownpropertynames
                getOwnPropertyNames: Pt,
                // `Object.getOwnPropertySymbols` method
                // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
                getOwnPropertySymbols: ht
              }), i({ target: "Object", stat: !0, forced: v(function() {
                G.f(1);
              }) }, {
                getOwnPropertySymbols: function(_t) {
                  return G.f(E(_t));
                }
              }), Gt) {
                var Ht = !s || v(function() {
                  var rt = tt();
                  return Gt([rt]) != "[null]" || Gt({ a: rt }) != "{}" || Gt(Object(rt)) != "{}";
                });
                i({ target: "JSON", stat: !0, forced: Ht }, {
                  // eslint-disable-next-line no-unused-vars -- required for `.length`
                  stringify: function(_t, ae, Et) {
                    var Zt = xt(arguments), fe = ae;
                    if (!(!b(ae) && _t === void 0 || P(_t)))
                      return x(ae) || (ae = function(Ue, Be) {
                        if (e(fe) && (Be = h(fe, this, Ue, Be)), !P(Be))
                          return Be;
                      }), Zt[1] = ae, o(Gt, null, Zt);
                  }
                });
              }
              if (!Ct[k]) {
                var we = Ct.valueOf;
                bt(Ct, k, function(rt) {
                  return h(we, this);
                });
              }
              st(tt, U), Lt[Ft] = !0;
            }
          ),
          /***/
          5597: (
            /***/
            function(f, d, t) {
              var i = t(46042);
              i("toPrimitive");
            }
          ),
          /***/
          38178: (
            /***/
            function(f, d, t) {
              var i = t(46042);
              i("toStringTag");
            }
          ),
          /***/
          73663: (
            /***/
            function(f, d, t) {
              var i = t(38347), r = t(59754), n = t(92642), o = i(n), h = r.aTypedArray, u = r.exportTypedArrayMethod;
              u("copyWithin", function(c, s) {
                return o(h(this), c, s, arguments.length > 2 ? arguments[2] : void 0);
              });
            }
          ),
          /***/
          29883: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(91102).every, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("every", function(u) {
                return r(n(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          35471: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(2834), n = t(72864), o = i.aTypedArray, h = i.exportTypedArrayMethod;
              h("fill", function(l) {
                var c = arguments.length;
                return r(
                  n,
                  o(this),
                  l,
                  c > 1 ? arguments[1] : void 0,
                  c > 2 ? arguments[2] : void 0
                );
              });
            }
          ),
          /***/
          21012: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(91102).filter, n = t(59610), o = i.aTypedArray, h = i.exportTypedArrayMethod;
              h("filter", function(l) {
                var c = r(o(this), l, arguments.length > 1 ? arguments[1] : void 0);
                return n(this, c);
              });
            }
          ),
          /***/
          97464: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(91102).findIndex, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("findIndex", function(u) {
                return r(n(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          88997: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(91102).find, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("find", function(u) {
                return r(n(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          3131: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Float32", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              });
            }
          ),
          /***/
          90868: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Float64", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              });
            }
          ),
          /***/
          2857: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(91102).forEach, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("forEach", function(u) {
                r(n(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          83326: (
            /***/
            function(f, d, t) {
              var i = t(28834), r = t(59754).exportTypedArrayStaticMethod, n = t(83590);
              r("from", n, i);
            }
          ),
          /***/
          94715: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(12636).includes, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("includes", function(u) {
                return r(n(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          13624: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(12636).indexOf, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("indexOf", function(u) {
                return r(n(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          75626: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Int16", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              });
            }
          ),
          /***/
          95756: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Int32", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              });
            }
          ),
          /***/
          65553: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Int8", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              });
            }
          ),
          /***/
          91132: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(38347), n = t(7081).PROPER, o = t(59754), h = t(81755), u = t(38688), l = u("iterator"), c = i.Uint8Array, s = r(h.values), v = r(h.keys), y = r(h.entries), x = o.aTypedArray, e = o.exportTypedArrayMethod, b = c && c.prototype[l], A = !!b && b.name === "values", P = function() {
                return s(x(this));
              };
              e("entries", function() {
                return y(x(this));
              }), e("keys", function() {
                return v(x(this));
              }), e("values", P, n && !A), e(l, P, n && !A);
            }
          ),
          /***/
          62514: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(38347), n = i.aTypedArray, o = i.exportTypedArrayMethod, h = r([].join);
              o("join", function(l) {
                return h(n(this), l);
              });
            }
          ),
          /***/
          24597: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(58448), n = t(84320), o = i.aTypedArray, h = i.exportTypedArrayMethod;
              h("lastIndexOf", function(l) {
                var c = arguments.length;
                return r(n, o(this), c > 1 ? [l, arguments[1]] : [l]);
              });
            }
          ),
          /***/
          88042: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(91102).map, n = t(34815), o = i.aTypedArray, h = i.exportTypedArrayMethod;
              h("map", function(l) {
                return r(o(this), l, arguments.length > 1 ? arguments[1] : void 0, function(c, s) {
                  return new (n(c))(s);
                });
              });
            }
          ),
          /***/
          92451: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(32843).right, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("reduceRight", function(u) {
                var l = arguments.length;
                return r(n(this), u, l, l > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          4660: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(32843).left, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("reduce", function(u) {
                var l = arguments.length;
                return r(n(this), u, l, l > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          44206: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = i.aTypedArray, n = i.exportTypedArrayMethod, o = Math.floor;
              n("reverse", function() {
                for (var u = this, l = r(u).length, c = o(l / 2), s = 0, v; s < c; )
                  v = u[s], u[s++] = u[--l], u[l] = v;
                return u;
              });
            }
          ),
          /***/
          66288: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(59754), n = t(45495), o = t(80670), h = t(43162), u = t(47044), l = i.RangeError, c = r.aTypedArray, s = r.exportTypedArrayMethod, v = u(function() {
                new Int8Array(1).set({});
              });
              s("set", function(x) {
                c(this);
                var e = o(arguments.length > 1 ? arguments[1] : void 0, 1), b = this.length, A = h(x), P = n(A), D = 0;
                if (P + e > b)
                  throw l("Wrong length");
                for (; D < P; )
                  this[e + D] = A[D++];
              }, v);
            }
          ),
          /***/
          13250: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(34815), n = t(47044), o = t(73163), h = i.aTypedArray, u = i.exportTypedArrayMethod, l = n(function() {
                new Int8Array(1).slice();
              });
              u("slice", function(s, v) {
                for (var y = o(h(this), s, v), x = r(this), e = 0, b = y.length, A = new x(b); b > e; )
                  A[e] = y[e++];
                return A;
              }, l);
            }
          ),
          /***/
          3858: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(91102).some, n = i.aTypedArray, o = i.exportTypedArrayMethod;
              o("some", function(u) {
                return r(n(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          84538: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(38347), n = t(47044), o = t(32631), h = t(43977), u = t(59754), l = t(3809), c = t(21983), s = t(70091), v = t(41731), y = i.Array, x = u.aTypedArray, e = u.exportTypedArrayMethod, b = i.Uint16Array, A = b && r(b.prototype.sort), P = !!A && !(n(function() {
                A(new b(2), null);
              }) && n(function() {
                A(new b(2), {});
              })), D = !!A && !n(function() {
                if (s)
                  return s < 74;
                if (l)
                  return l < 67;
                if (c)
                  return !0;
                if (v)
                  return v < 602;
                var T = new b(516), C = y(516), F, m;
                for (F = 0; F < 516; F++)
                  m = F % 4, T[F] = 515 - F, C[F] = F - 2 * m + 3;
                for (A(T, function(I, O) {
                  return (I / 4 | 0) - (O / 4 | 0);
                }), F = 0; F < 516; F++)
                  if (T[F] !== C[F])
                    return !0;
              }), E = function(T) {
                return function(C, F) {
                  return T !== void 0 ? +T(C, F) || 0 : F !== F ? -1 : C !== C ? 1 : C === 0 && F === 0 ? 1 / C > 0 && 1 / F < 0 ? 1 : -1 : C > F;
                };
              };
              e("sort", function(C) {
                return C !== void 0 && o(C), D ? A(this, C) : h(x(this), E(C));
              }, !D || P);
            }
          ),
          /***/
          64793: (
            /***/
            function(f, d, t) {
              var i = t(59754), r = t(23417), n = t(74841), o = t(34815), h = i.aTypedArray, u = i.exportTypedArrayMethod;
              u("subarray", function(c, s) {
                var v = h(this), y = v.length, x = n(c, y), e = o(v);
                return new e(
                  v.buffer,
                  v.byteOffset + x * v.BYTES_PER_ELEMENT,
                  r((s === void 0 ? y : n(s, y)) - x)
                );
              });
            }
          ),
          /***/
          74202: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(58448), n = t(59754), o = t(47044), h = t(73163), u = i.Int8Array, l = n.aTypedArray, c = n.exportTypedArrayMethod, s = [].toLocaleString, v = !!u && o(function() {
                s.call(new u(1));
              }), y = o(function() {
                return [1, 2].toLocaleString() != new u([1, 2]).toLocaleString();
              }) || !o(function() {
                u.prototype.toLocaleString.call([1, 2]);
              });
              c("toLocaleString", function() {
                return r(
                  s,
                  v ? h(l(this)) : l(this),
                  h(arguments)
                );
              }, y);
            }
          ),
          /***/
          52529: (
            /***/
            function(f, d, t) {
              var i = t(59754).exportTypedArrayMethod, r = t(47044), n = t(32010), o = t(38347), h = n.Uint8Array, u = h && h.prototype || {}, l = [].toString, c = o([].join);
              r(function() {
                l.call({});
              }) && (l = function() {
                return c(this);
              });
              var s = u.toString != l;
              i("toString", l, s);
            }
          ),
          /***/
          47969: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Uint16", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              });
            }
          ),
          /***/
          59735: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Uint32", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              });
            }
          ),
          /***/
          56912: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Uint8", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              });
            }
          ),
          /***/
          58099: (
            /***/
            function(f, d, t) {
              var i = t(98828);
              i("Uint8", function(r) {
                return function(o, h, u) {
                  return r(this, o, h, u);
                };
              }, !0);
            }
          ),
          /***/
          84151: (
            /***/
            function(f, d, t) {
              t(94910);
            }
          ),
          /***/
          49109: (
            /***/
            function(f, d, t) {
              t(64384);
            }
          ),
          /***/
          98443: (
            /***/
            function(f, d, t) {
              t(77074);
            }
          ),
          /***/
          67858: (
            /***/
            function(f, d, t) {
              t(44455);
            }
          ),
          /***/
          49261: (
            /***/
            function(f, d, t) {
              var i = t(56475), r = t(56614), n = t(61900);
              i({ target: "Promise", stat: !0 }, {
                try: function(o) {
                  var h = r.f(this), u = n(o);
                  return (u.error ? h.reject : h.resolve)(u.value), h.promise;
                }
              });
            }
          ),
          /***/
          1083: (
            /***/
            function(f, d, t) {
              t(71768);
            }
          ),
          /***/
          64654: (
            /***/
            function(f, d, t) {
              t(1593);
            }
          ),
          /***/
          42437: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(23327), n = t(67797), o = t(82938), h = t(48914), u = function(c) {
                if (c && c.forEach !== o)
                  try {
                    h(c, "forEach", o);
                  } catch (s) {
                    c.forEach = o;
                  }
              };
              for (var l in r)
                r[l] && u(i[l] && i[l].prototype);
              u(n);
            }
          ),
          /***/
          94712: (
            /***/
            function(f, d, t) {
              var i = t(32010), r = t(23327), n = t(67797), o = t(81755), h = t(48914), u = t(38688), l = u("iterator"), c = u("toStringTag"), s = o.values, v = function(x, e) {
                if (x) {
                  if (x[l] !== s)
                    try {
                      h(x, l, s);
                    } catch (A) {
                      x[l] = s;
                    }
                  if (x[c] || h(x, c, e), r[e]) {
                    for (var b in o)
                      if (x[b] !== o[b])
                        try {
                          h(x, b, o[b]);
                        } catch (A) {
                          x[b] = o[b];
                        }
                  }
                }
              };
              for (var y in r)
                v(i[y] && i[y].prototype, y);
              v(n, "DOMTokenList");
            }
          ),
          /***/
          90780: (
            /***/
            function(f, d, t) {
              var i = t(42075);
              t(94712), f.exports = i;
            }
          ),
          /***/
          45728: (
            /***/
            function(f, d, t) {
              var i = t(35643), r = t(67906), n = t(98527), o = t(71689), h = t(64607), u = t(71230), l = Date.prototype.getTime;
              function c(x, e, b) {
                var A = b || {};
                return (A.strict ? n(x, e) : x === e) ? !0 : !x || !e || typeof x != "object" && typeof e != "object" ? A.strict ? n(x, e) : x == e : y(x, e, A);
              }
              function s(x) {
                return x == null;
              }
              function v(x) {
                return !(!x || typeof x != "object" || typeof x.length != "number" || typeof x.copy != "function" || typeof x.slice != "function" || x.length > 0 && typeof x[0] != "number");
              }
              function y(x, e, b) {
                var A, P;
                if (typeof x != typeof e || s(x) || s(e) || x.prototype !== e.prototype || r(x) !== r(e))
                  return !1;
                var D = o(x), E = o(e);
                if (D !== E)
                  return !1;
                if (D || E)
                  return x.source === e.source && h(x) === h(e);
                if (u(x) && u(e))
                  return l.call(x) === l.call(e);
                var T = v(x), C = v(e);
                if (T !== C)
                  return !1;
                if (T || C) {
                  if (x.length !== e.length)
                    return !1;
                  for (A = 0; A < x.length; A++)
                    if (x[A] !== e[A])
                      return !1;
                  return !0;
                }
                if (typeof x != typeof e)
                  return !1;
                try {
                  var F = i(x), m = i(e);
                } catch (I) {
                  return !1;
                }
                if (F.length !== m.length)
                  return !1;
                for (F.sort(), m.sort(), A = F.length - 1; A >= 0; A--)
                  if (F[A] != m[A])
                    return !1;
                for (A = F.length - 1; A >= 0; A--)
                  if (P = F[A], !c(x[P], e[P], b))
                    return !1;
                return !0;
              }
              f.exports = c;
            }
          ),
          /***/
          89295: (
            /***/
            function(f, d, t) {
              var i = t(56649), r = t(57770), n = t(96785), o = t(68109);
              f.exports = function(u, l, c) {
                if (!u || typeof u != "object" && typeof u != "function")
                  throw new n("`obj` must be an object or a function`");
                if (typeof l != "string" && typeof l != "symbol")
                  throw new n("`property` must be a string or a symbol`");
                if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
                  throw new n("`nonEnumerable`, if provided, must be a boolean or null");
                if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
                  throw new n("`nonWritable`, if provided, must be a boolean or null");
                if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
                  throw new n("`nonConfigurable`, if provided, must be a boolean or null");
                if (arguments.length > 6 && typeof arguments[6] != "boolean")
                  throw new n("`loose`, if provided, must be a boolean");
                var s = arguments.length > 3 ? arguments[3] : null, v = arguments.length > 4 ? arguments[4] : null, y = arguments.length > 5 ? arguments[5] : null, x = arguments.length > 6 ? arguments[6] : !1, e = !!o && o(u, l);
                if (i)
                  i(u, l, {
                    configurable: y === null && e ? e.configurable : !y,
                    enumerable: s === null && e ? e.enumerable : !s,
                    value: c,
                    writable: v === null && e ? e.writable : !v
                  });
                else if (x || !s && !v && !y)
                  u[l] = c;
                else
                  throw new r("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
              };
            }
          ),
          /***/
          77802: (
            /***/
            function(f, d, t) {
              var i = t(35643), r = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", n = Object.prototype.toString, o = Array.prototype.concat, h = t(89295), u = function(v) {
                return typeof v == "function" && n.call(v) === "[object Function]";
              }, l = t(18890)(), c = function(v, y, x, e) {
                if (y in v) {
                  if (e === !0) {
                    if (v[y] === x)
                      return;
                  } else if (!u(e) || !e())
                    return;
                }
                l ? h(v, y, x, !0) : h(v, y, x);
              }, s = function(v, y) {
                var x = arguments.length > 2 ? arguments[2] : {}, e = i(y);
                r && (e = o.call(e, Object.getOwnPropertySymbols(y)));
                for (var b = 0; b < e.length; b += 1)
                  c(v, e[b], y[e[b]], x[e[b]]);
              };
              s.supportsDescriptors = !!l, f.exports = s;
            }
          ),
          /***/
          89302: (
            /***/
            function(f, d, t) {
              var i = t(36688), r = t(68109), n;
              try {
                n = /** @type {{ __proto__?: typeof Array.prototype }} */
                [].__proto__ === Array.prototype;
              } catch (l) {
                if (!l || typeof l != "object" || !("code" in l) || l.code !== "ERR_PROTO_ACCESS")
                  throw l;
              }
              var o = !!n && r && r(
                Object.prototype,
                /** @type {keyof typeof Object.prototype} */
                "__proto__"
              ), h = Object, u = h.getPrototypeOf;
              f.exports = o && typeof o.get == "function" ? i([o.get]) : typeof u == "function" ? (
                /** @type {import('./get')} */
                function(c) {
                  return u(c == null ? c : h(c));
                }
              ) : !1;
            }
          ),
          /***/
          56649: (
            /***/
            function(f) {
              var d = Object.defineProperty || !1;
              if (d)
                try {
                  d({}, "a", { value: 1 });
                } catch (t) {
                  d = !1;
                }
              f.exports = d;
            }
          ),
          /***/
          29055: (
            /***/
            function(f) {
              f.exports = EvalError;
            }
          ),
          /***/
          15293: (
            /***/
            function(f) {
              f.exports = Error;
            }
          ),
          /***/
          18888: (
            /***/
            function(f) {
              f.exports = RangeError;
            }
          ),
          /***/
          47900: (
            /***/
            function(f) {
              f.exports = ReferenceError;
            }
          ),
          /***/
          57770: (
            /***/
            function(f) {
              f.exports = SyntaxError;
            }
          ),
          /***/
          96785: (
            /***/
            function(f) {
              f.exports = TypeError;
            }
          ),
          /***/
          54055: (
            /***/
            function(f) {
              f.exports = URIError;
            }
          ),
          /***/
          75846: (
            /***/
            function(f) {
              f.exports = Object;
            }
          ),
          /***/
          64785: (
            /***/
            function(f) {
              var d = typeof Reflect == "object" ? Reflect : null, t = d && typeof d.apply == "function" ? d.apply : function(C, F, m) {
                return Function.prototype.apply.call(C, F, m);
              }, i;
              d && typeof d.ownKeys == "function" ? i = d.ownKeys : Object.getOwnPropertySymbols ? i = function(C) {
                return Object.getOwnPropertyNames(C).concat(Object.getOwnPropertySymbols(C));
              } : i = function(C) {
                return Object.getOwnPropertyNames(C);
              };
              function r(T) {
                console && console.warn && console.warn(T);
              }
              var n = Number.isNaN || function(C) {
                return C !== C;
              };
              function o() {
                o.init.call(this);
              }
              f.exports = o, f.exports.once = P, o.EventEmitter = o, o.prototype._events = void 0, o.prototype._eventsCount = 0, o.prototype._maxListeners = void 0;
              var h = 10;
              function u(T) {
                if (typeof T != "function")
                  throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof T);
              }
              Object.defineProperty(o, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                  return h;
                },
                set: function(T) {
                  if (typeof T != "number" || T < 0 || n(T))
                    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + T + ".");
                  h = T;
                }
              }), o.init = function() {
                (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
              }, o.prototype.setMaxListeners = function(C) {
                if (typeof C != "number" || C < 0 || n(C))
                  throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + C + ".");
                return this._maxListeners = C, this;
              };
              function l(T) {
                return T._maxListeners === void 0 ? o.defaultMaxListeners : T._maxListeners;
              }
              o.prototype.getMaxListeners = function() {
                return l(this);
              }, o.prototype.emit = function(C) {
                for (var F = [], m = 1; m < arguments.length; m++)
                  F.push(arguments[m]);
                var I = C === "error", O = this._events;
                if (O !== void 0)
                  I = I && O.error === void 0;
                else if (!I)
                  return !1;
                if (I) {
                  var M;
                  if (F.length > 0 && (M = F[0]), M instanceof Error)
                    throw M;
                  var N = new Error("Unhandled error." + (M ? " (" + M.message + ")" : ""));
                  throw N.context = M, N;
                }
                var G = O[C];
                if (G === void 0)
                  return !1;
                if (typeof G == "function")
                  t(G, this, F);
                else
                  for (var ot = G.length, K = e(G, ot), m = 0; m < ot; ++m)
                    t(K[m], this, F);
                return !0;
              };
              function c(T, C, F, m) {
                var I, O, M;
                if (u(F), O = T._events, O === void 0 ? (O = T._events = /* @__PURE__ */ Object.create(null), T._eventsCount = 0) : (O.newListener !== void 0 && (T.emit(
                  "newListener",
                  C,
                  F.listener ? F.listener : F
                ), O = T._events), M = O[C]), M === void 0)
                  M = O[C] = F, ++T._eventsCount;
                else if (typeof M == "function" ? M = O[C] = m ? [F, M] : [M, F] : m ? M.unshift(F) : M.push(F), I = l(T), I > 0 && M.length > I && !M.warned) {
                  M.warned = !0;
                  var N = new Error("Possible EventEmitter memory leak detected. " + M.length + " " + String(C) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                  N.name = "MaxListenersExceededWarning", N.emitter = T, N.type = C, N.count = M.length, r(N);
                }
                return T;
              }
              o.prototype.addListener = function(C, F) {
                return c(this, C, F, !1);
              }, o.prototype.on = o.prototype.addListener, o.prototype.prependListener = function(C, F) {
                return c(this, C, F, !0);
              };
              function s() {
                if (!this.fired)
                  return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
              }
              function v(T, C, F) {
                var m = { fired: !1, wrapFn: void 0, target: T, type: C, listener: F }, I = s.bind(m);
                return I.listener = F, m.wrapFn = I, I;
              }
              o.prototype.once = function(C, F) {
                return u(F), this.on(C, v(this, C, F)), this;
              }, o.prototype.prependOnceListener = function(C, F) {
                return u(F), this.prependListener(C, v(this, C, F)), this;
              }, o.prototype.removeListener = function(C, F) {
                var m, I, O, M, N;
                if (u(F), I = this._events, I === void 0)
                  return this;
                if (m = I[C], m === void 0)
                  return this;
                if (m === F || m.listener === F)
                  --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete I[C], I.removeListener && this.emit("removeListener", C, m.listener || F));
                else if (typeof m != "function") {
                  for (O = -1, M = m.length - 1; M >= 0; M--)
                    if (m[M] === F || m[M].listener === F) {
                      N = m[M].listener, O = M;
                      break;
                    }
                  if (O < 0)
                    return this;
                  O === 0 ? m.shift() : b(m, O), m.length === 1 && (I[C] = m[0]), I.removeListener !== void 0 && this.emit("removeListener", C, N || F);
                }
                return this;
              }, o.prototype.off = o.prototype.removeListener, o.prototype.removeAllListeners = function(C) {
                var F, m, I;
                if (m = this._events, m === void 0)
                  return this;
                if (m.removeListener === void 0)
                  return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : m[C] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete m[C]), this;
                if (arguments.length === 0) {
                  var O = Object.keys(m), M;
                  for (I = 0; I < O.length; ++I)
                    M = O[I], M !== "removeListener" && this.removeAllListeners(M);
                  return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
                }
                if (F = m[C], typeof F == "function")
                  this.removeListener(C, F);
                else if (F !== void 0)
                  for (I = F.length - 1; I >= 0; I--)
                    this.removeListener(C, F[I]);
                return this;
              };
              function y(T, C, F) {
                var m = T._events;
                if (m === void 0)
                  return [];
                var I = m[C];
                return I === void 0 ? [] : typeof I == "function" ? F ? [I.listener || I] : [I] : F ? A(I) : e(I, I.length);
              }
              o.prototype.listeners = function(C) {
                return y(this, C, !0);
              }, o.prototype.rawListeners = function(C) {
                return y(this, C, !1);
              }, o.listenerCount = function(T, C) {
                return typeof T.listenerCount == "function" ? T.listenerCount(C) : x.call(T, C);
              }, o.prototype.listenerCount = x;
              function x(T) {
                var C = this._events;
                if (C !== void 0) {
                  var F = C[T];
                  if (typeof F == "function")
                    return 1;
                  if (F !== void 0)
                    return F.length;
                }
                return 0;
              }
              o.prototype.eventNames = function() {
                return this._eventsCount > 0 ? i(this._events) : [];
              };
              function e(T, C) {
                for (var F = new Array(C), m = 0; m < C; ++m)
                  F[m] = T[m];
                return F;
              }
              function b(T, C) {
                for (; C + 1 < T.length; C++)
                  T[C] = T[C + 1];
                T.pop();
              }
              function A(T) {
                for (var C = new Array(T.length), F = 0; F < C.length; ++F)
                  C[F] = T[F].listener || T[F];
                return C;
              }
              function P(T, C) {
                return new Promise(function(F, m) {
                  function I(M) {
                    T.removeListener(C, O), m(M);
                  }
                  function O() {
                    typeof T.removeListener == "function" && T.removeListener("error", I), F([].slice.call(arguments));
                  }
                  E(T, C, O, { once: !0 }), C !== "error" && D(T, I, { once: !0 });
                });
              }
              function D(T, C, F) {
                typeof T.on == "function" && E(T, "error", C, F);
              }
              function E(T, C, F, m) {
                if (typeof T.on == "function")
                  m.once ? T.once(C, F) : T.on(C, F);
                else if (typeof T.addEventListener == "function")
                  T.addEventListener(C, function I(O) {
                    m.once && T.removeEventListener(C, I), F(O);
                  });
                else
                  throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof T);
              }
            }
          ),
          /***/
          72022: (
            /***/
            function(f, d, t) {
              f.exports = function() {
                if (typeof globalThis == "object")
                  return globalThis;
                var i;
                try {
                  i = this || new Function("return this")();
                } catch (r) {
                  if (typeof window == "object")
                    return window;
                  if (typeof self == "object")
                    return self;
                  if (typeof t.g != "undefined")
                    return t.g;
                }
                return i;
              }();
            }
          ),
          /***/
          68404: (
            /***/
            function(f, d, t) {
              var i = t(3746), r = Object.prototype.toString, n = Object.prototype.hasOwnProperty, o = function(s, v, y) {
                for (var x = 0, e = s.length; x < e; x++)
                  n.call(s, x) && (y == null ? v(s[x], x, s) : v.call(y, s[x], x, s));
              }, h = function(s, v, y) {
                for (var x = 0, e = s.length; x < e; x++)
                  y == null ? v(s.charAt(x), x, s) : v.call(y, s.charAt(x), x, s);
              }, u = function(s, v, y) {
                for (var x in s)
                  n.call(s, x) && (y == null ? v(s[x], x, s) : v.call(y, s[x], x, s));
              }, l = function(s, v, y) {
                if (!i(v))
                  throw new TypeError("iterator must be a function");
                var x;
                arguments.length >= 3 && (x = y), r.call(s) === "[object Array]" ? o(s, v, x) : typeof s == "string" ? h(s, v, x) : u(s, v, x);
              };
              f.exports = l;
            }
          ),
          /***/
          12719: (
            /***/
            function(f) {
              var d = "Function.prototype.bind called on incompatible ", t = Object.prototype.toString, i = Math.max, r = "[object Function]", n = function(l, c) {
                for (var s = [], v = 0; v < l.length; v += 1)
                  s[v] = l[v];
                for (var y = 0; y < c.length; y += 1)
                  s[y + l.length] = c[y];
                return s;
              }, o = function(l, c) {
                for (var s = [], v = c || 0, y = 0; v < l.length; v += 1, y += 1)
                  s[y] = l[v];
                return s;
              }, h = function(u, l) {
                for (var c = "", s = 0; s < u.length; s += 1)
                  c += u[s], s + 1 < u.length && (c += l);
                return c;
              };
              f.exports = function(l) {
                var c = this;
                if (typeof c != "function" || t.apply(c) !== r)
                  throw new TypeError(d + c);
                for (var s = o(arguments, 1), v, y = function() {
                  if (this instanceof v) {
                    var P = c.apply(
                      this,
                      n(s, arguments)
                    );
                    return Object(P) === P ? P : this;
                  }
                  return c.apply(
                    l,
                    n(s, arguments)
                  );
                }, x = i(0, c.length - s.length), e = [], b = 0; b < x; b++)
                  e[b] = "$" + b;
                if (v = Function("binder", "return function (" + h(e, ",") + "){ return binder.apply(this,arguments); }")(y), c.prototype) {
                  var A = function() {
                  };
                  A.prototype = c.prototype, v.prototype = new A(), A.prototype = null;
                }
                return v;
              };
            }
          ),
          /***/
          5049: (
            /***/
            function(f, d, t) {
              var i = t(12719);
              f.exports = Function.prototype.bind || i;
            }
          ),
          /***/
          61084: (
            /***/
            function(f) {
              var d = function() {
                return typeof function() {
                }.name == "string";
              }, t = Object.getOwnPropertyDescriptor;
              if (t)
                try {
                  t([], "length");
                } catch (r) {
                  t = null;
                }
              d.functionsHaveConfigurableNames = function() {
                if (!d() || !t)
                  return !1;
                var n = t(function() {
                }, "name");
                return !!n && !!n.configurable;
              };
              var i = Function.prototype.bind;
              d.boundFunctionsHaveNames = function() {
                return d() && typeof i == "function" && function() {
                }.bind().name !== "";
              }, f.exports = d;
            }
          ),
          /***/
          28651: (
            /***/
            function(f, d, t) {
              var i, r = t(75846), n = t(15293), o = t(29055), h = t(18888), u = t(47900), l = t(57770), c = t(96785), s = t(54055), v = t(50716), y = t(77450), x = t(3774), e = t(47552), b = t(75874), A = Function, P = function(Ft) {
                try {
                  return A('"use strict"; return (' + Ft + ").constructor;")();
                } catch (U) {
                }
              }, D = t(68109), E = t(56649), T = function() {
                throw new c();
              }, C = D ? function() {
                try {
                  return arguments.callee, T;
                } catch (Ft) {
                  try {
                    return D(arguments, "callee").get;
                  } catch (U) {
                    return T;
                  }
                }
              }() : T, F = t(73257)(), m = t(89302), I = typeof Reflect == "function" && Reflect.getPrototypeOf || r.getPrototypeOf || m, O = t(73036), M = t(10078), N = {}, G = typeof Uint8Array == "undefined" || !I ? i : I(Uint8Array), ot = {
                __proto__: null,
                "%AggregateError%": typeof AggregateError == "undefined" ? i : AggregateError,
                "%Array%": Array,
                "%ArrayBuffer%": typeof ArrayBuffer == "undefined" ? i : ArrayBuffer,
                "%ArrayIteratorPrototype%": F && I ? I([][Symbol.iterator]()) : i,
                "%AsyncFromSyncIteratorPrototype%": i,
                "%AsyncFunction%": N,
                "%AsyncGenerator%": N,
                "%AsyncGeneratorFunction%": N,
                "%AsyncIteratorPrototype%": N,
                "%Atomics%": typeof Atomics == "undefined" ? i : Atomics,
                "%BigInt%": typeof BigInt == "undefined" ? i : BigInt,
                "%BigInt64Array%": typeof BigInt64Array == "undefined" ? i : BigInt64Array,
                "%BigUint64Array%": typeof BigUint64Array == "undefined" ? i : BigUint64Array,
                "%Boolean%": Boolean,
                "%DataView%": typeof DataView == "undefined" ? i : DataView,
                "%Date%": Date,
                "%decodeURI%": decodeURI,
                "%decodeURIComponent%": decodeURIComponent,
                "%encodeURI%": encodeURI,
                "%encodeURIComponent%": encodeURIComponent,
                "%Error%": n,
                "%eval%": eval,
                // eslint-disable-line no-eval
                "%EvalError%": o,
                "%Float32Array%": typeof Float32Array == "undefined" ? i : Float32Array,
                "%Float64Array%": typeof Float64Array == "undefined" ? i : Float64Array,
                "%FinalizationRegistry%": typeof FinalizationRegistry == "undefined" ? i : FinalizationRegistry,
                "%Function%": A,
                "%GeneratorFunction%": N,
                "%Int8Array%": typeof Int8Array == "undefined" ? i : Int8Array,
                "%Int16Array%": typeof Int16Array == "undefined" ? i : Int16Array,
                "%Int32Array%": typeof Int32Array == "undefined" ? i : Int32Array,
                "%isFinite%": isFinite,
                "%isNaN%": isNaN,
                "%IteratorPrototype%": F && I ? I(I([][Symbol.iterator]())) : i,
                "%JSON%": typeof JSON == "object" ? JSON : i,
                "%Map%": typeof Map == "undefined" ? i : Map,
                "%MapIteratorPrototype%": typeof Map == "undefined" || !F || !I ? i : I((/* @__PURE__ */ new Map())[Symbol.iterator]()),
                "%Math%": Math,
                "%Number%": Number,
                "%Object%": r,
                "%Object.getOwnPropertyDescriptor%": D,
                "%parseFloat%": parseFloat,
                "%parseInt%": parseInt,
                "%Promise%": typeof Promise == "undefined" ? i : Promise,
                "%Proxy%": typeof Proxy == "undefined" ? i : Proxy,
                "%RangeError%": h,
                "%ReferenceError%": u,
                "%Reflect%": typeof Reflect == "undefined" ? i : Reflect,
                "%RegExp%": RegExp,
                "%Set%": typeof Set == "undefined" ? i : Set,
                "%SetIteratorPrototype%": typeof Set == "undefined" || !F || !I ? i : I((/* @__PURE__ */ new Set())[Symbol.iterator]()),
                "%SharedArrayBuffer%": typeof SharedArrayBuffer == "undefined" ? i : SharedArrayBuffer,
                "%String%": String,
                "%StringIteratorPrototype%": F && I ? I(""[Symbol.iterator]()) : i,
                "%Symbol%": F ? Symbol : i,
                "%SyntaxError%": l,
                "%ThrowTypeError%": C,
                "%TypedArray%": G,
                "%TypeError%": c,
                "%Uint8Array%": typeof Uint8Array == "undefined" ? i : Uint8Array,
                "%Uint8ClampedArray%": typeof Uint8ClampedArray == "undefined" ? i : Uint8ClampedArray,
                "%Uint16Array%": typeof Uint16Array == "undefined" ? i : Uint16Array,
                "%Uint32Array%": typeof Uint32Array == "undefined" ? i : Uint32Array,
                "%URIError%": s,
                "%WeakMap%": typeof WeakMap == "undefined" ? i : WeakMap,
                "%WeakRef%": typeof WeakRef == "undefined" ? i : WeakRef,
                "%WeakSet%": typeof WeakSet == "undefined" ? i : WeakSet,
                "%Function.prototype.call%": M,
                "%Function.prototype.apply%": O,
                "%Object.defineProperty%": E,
                "%Math.abs%": v,
                "%Math.floor%": y,
                "%Math.max%": x,
                "%Math.min%": e,
                "%Math.pow%": b
              };
              if (I)
                try {
                  null.error;
                } catch (Ft) {
                  var K = I(I(Ft));
                  ot["%Error.prototype%"] = K;
                }
              var nt = function Ft(U) {
                var S;
                if (U === "%AsyncFunction%")
                  S = P("async function () {}");
                else if (U === "%GeneratorFunction%")
                  S = P("function* () {}");
                else if (U === "%AsyncGeneratorFunction%")
                  S = P("async function* () {}");
                else if (U === "%AsyncGenerator%") {
                  var k = Ft("%AsyncGeneratorFunction%");
                  k && (S = k.prototype);
                } else if (U === "%AsyncIteratorPrototype%") {
                  var H = Ft("%AsyncGenerator%");
                  H && I && (S = I(H.prototype));
                }
                return ot[U] = S, S;
              }, xt = {
                __proto__: null,
                "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
                "%ArrayPrototype%": ["Array", "prototype"],
                "%ArrayProto_entries%": ["Array", "prototype", "entries"],
                "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
                "%ArrayProto_keys%": ["Array", "prototype", "keys"],
                "%ArrayProto_values%": ["Array", "prototype", "values"],
                "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
                "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
                "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
                "%BooleanPrototype%": ["Boolean", "prototype"],
                "%DataViewPrototype%": ["DataView", "prototype"],
                "%DatePrototype%": ["Date", "prototype"],
                "%ErrorPrototype%": ["Error", "prototype"],
                "%EvalErrorPrototype%": ["EvalError", "prototype"],
                "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
                "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
                "%FunctionPrototype%": ["Function", "prototype"],
                "%Generator%": ["GeneratorFunction", "prototype"],
                "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
                "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
                "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
                "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
                "%JSONParse%": ["JSON", "parse"],
                "%JSONStringify%": ["JSON", "stringify"],
                "%MapPrototype%": ["Map", "prototype"],
                "%NumberPrototype%": ["Number", "prototype"],
                "%ObjectPrototype%": ["Object", "prototype"],
                "%ObjProto_toString%": ["Object", "prototype", "toString"],
                "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
                "%PromisePrototype%": ["Promise", "prototype"],
                "%PromiseProto_then%": ["Promise", "prototype", "then"],
                "%Promise_all%": ["Promise", "all"],
                "%Promise_reject%": ["Promise", "reject"],
                "%Promise_resolve%": ["Promise", "resolve"],
                "%RangeErrorPrototype%": ["RangeError", "prototype"],
                "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
                "%RegExpPrototype%": ["RegExp", "prototype"],
                "%SetPrototype%": ["Set", "prototype"],
                "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
                "%StringPrototype%": ["String", "prototype"],
                "%SymbolPrototype%": ["Symbol", "prototype"],
                "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
                "%TypedArrayPrototype%": ["TypedArray", "prototype"],
                "%TypeErrorPrototype%": ["TypeError", "prototype"],
                "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
                "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
                "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
                "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
                "%URIErrorPrototype%": ["URIError", "prototype"],
                "%WeakMapPrototype%": ["WeakMap", "prototype"],
                "%WeakSetPrototype%": ["WeakSet", "prototype"]
              }, bt = t(5049), St = t(55215), Dt = bt.call(M, Array.prototype.concat), Lt = bt.call(O, Array.prototype.splice), jt = bt.call(M, String.prototype.replace), J = bt.call(M, String.prototype.slice), yt = bt.call(M, RegExp.prototype.exec), ut = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, st = /\\(\\)?/g, wt = function(U) {
                var S = J(U, 0, 1), k = J(U, -1);
                if (S === "%" && k !== "%")
                  throw new l("invalid intrinsic syntax, expected closing `%`");
                if (k === "%" && S !== "%")
                  throw new l("invalid intrinsic syntax, expected opening `%`");
                var H = [];
                return jt(U, ut, function(it, et, tt, Ct) {
                  H[H.length] = tt ? jt(Ct, st, "$1") : et || it;
                }), H;
              }, V = function(U, S) {
                var k = U, H;
                if (St(xt, k) && (H = xt[k], k = "%" + H[0] + "%"), St(ot, k)) {
                  var it = ot[k];
                  if (it === N && (it = nt(k)), typeof it == "undefined" && !S)
                    throw new c("intrinsic " + U + " exists, but is not available. Please file an issue!");
                  return {
                    alias: H,
                    name: k,
                    value: it
                  };
                }
                throw new l("intrinsic " + U + " does not exist!");
              };
              f.exports = function(U, S) {
                if (typeof U != "string" || U.length === 0)
                  throw new c("intrinsic name must be a non-empty string");
                if (arguments.length > 1 && typeof S != "boolean")
                  throw new c('"allowMissing" argument must be a boolean');
                if (yt(/^%?[^%]*%?$/, U) === null)
                  throw new l("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
                var k = wt(U), H = k.length > 0 ? k[0] : "", it = V("%" + H + "%", S), et = it.name, tt = it.value, Ct = !1, Rt = it.alias;
                Rt && (H = Rt[0], Lt(k, Dt([0, 1], Rt)));
                for (var Kt = 1, Gt = !0; Kt < k.length; Kt += 1) {
                  var It = k[Kt], re = J(It, 0, 1), be = J(It, -1);
                  if ((re === '"' || re === "'" || re === "`" || be === '"' || be === "'" || be === "`") && re !== be)
                    throw new l("property names with quotes must have matching quotes");
                  if ((It === "constructor" || !Gt) && (Ct = !0), H += "." + It, et = "%" + H + "%", St(ot, et))
                    tt = ot[et];
                  else if (tt != null) {
                    if (!(It in tt)) {
                      if (!S)
                        throw new c("base intrinsic for " + U + " exists, but the property is not available.");
                      return;
                    }
                    if (D && Kt + 1 >= k.length) {
                      var me = D(tt, It);
                      Gt = !!me, Gt && "get" in me && !("originalValue" in me.get) ? tt = me.get : tt = tt[It];
                    } else
                      Gt = St(tt, It), tt = tt[It];
                    Gt && !Ct && (ot[et] = tt);
                  }
                }
                return tt;
              };
            }
          ),
          /***/
          85567: (
            /***/
            function(f) {
              f.exports = Object.getOwnPropertyDescriptor;
            }
          ),
          /***/
          68109: (
            /***/
            function(f, d, t) {
              var i = t(85567);
              if (i)
                try {
                  i([], "length");
                } catch (r) {
                  i = null;
                }
              f.exports = i;
            }
          ),
          /***/
          18890: (
            /***/
            function(f, d, t) {
              var i = t(56649), r = function() {
                return !!i;
              };
              r.hasArrayLengthDefineBug = function() {
                if (!i)
                  return null;
                try {
                  return i([], "length", { value: 1 }).length !== 1;
                } catch (o) {
                  return !0;
                }
              }, f.exports = r;
            }
          ),
          /***/
          73257: (
            /***/
            function(f, d, t) {
              var i = typeof Symbol != "undefined" && Symbol, r = t(12843);
              f.exports = function() {
                return typeof i != "function" || typeof Symbol != "function" || typeof i("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : r();
              };
            }
          ),
          /***/
          12843: (
            /***/
            function(f) {
              f.exports = function() {
                if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
                  return !1;
                if (typeof Symbol.iterator == "symbol")
                  return !0;
                var t = {}, i = Symbol("test"), r = Object(i);
                if (typeof i == "string" || Object.prototype.toString.call(i) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]")
                  return !1;
                var n = 42;
                t[i] = n;
                for (var o in t)
                  return !1;
                if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0)
                  return !1;
                var h = Object.getOwnPropertySymbols(t);
                if (h.length !== 1 || h[0] !== i || !Object.prototype.propertyIsEnumerable.call(t, i))
                  return !1;
                if (typeof Object.getOwnPropertyDescriptor == "function") {
                  var u = (
                    /** @type {PropertyDescriptor} */
                    Object.getOwnPropertyDescriptor(t, i)
                  );
                  if (u.value !== n || u.enumerable !== !0)
                    return !1;
                }
                return !0;
              };
            }
          ),
          /***/
          26626: (
            /***/
            function(f, d, t) {
              var i = t(12843);
              f.exports = function() {
                return i() && !!Symbol.toStringTag;
              };
            }
          ),
          /***/
          55215: (
            /***/
            function(f, d, t) {
              var i = Function.prototype.call, r = Object.prototype.hasOwnProperty, n = t(5049);
              f.exports = n.call(i, r);
            }
          ),
          /***/
          35143: (
            /***/
            function(f, d, t) {
              var i = t(93143).Buffer;
              d._dbcs = s;
              for (var r = -1, n = -2, o = -10, h = -1e3, u = new Array(256), l = -1, c = 0; c < 256; c++)
                u[c] = r;
              function s(e, b) {
                if (this.encodingName = e.encodingName, !e)
                  throw new Error("DBCS codec is called without the data.");
                if (!e.table)
                  throw new Error("Encoding '" + this.encodingName + "' has no data.");
                var A = e.table();
                this.decodeTables = [], this.decodeTables[0] = u.slice(0), this.decodeTableSeq = [];
                for (var P = 0; P < A.length; P++)
                  this._addDecodeChunk(A[P]);
                if (typeof e.gb18030 == "function") {
                  this.gb18030 = e.gb18030();
                  var D = this.decodeTables.length;
                  this.decodeTables.push(u.slice(0));
                  var E = this.decodeTables.length;
                  this.decodeTables.push(u.slice(0));
                  for (var T = this.decodeTables[0], P = 129; P <= 254; P++)
                    for (var C = this.decodeTables[h - T[P]], F = 48; F <= 57; F++) {
                      if (C[F] === r)
                        C[F] = h - D;
                      else if (C[F] > h)
                        throw new Error("gb18030 decode tables conflict at byte 2");
                      for (var m = this.decodeTables[h - C[F]], I = 129; I <= 254; I++) {
                        if (m[I] === r)
                          m[I] = h - E;
                        else {
                          if (m[I] === h - E)
                            continue;
                          if (m[I] > h)
                            throw new Error("gb18030 decode tables conflict at byte 3");
                        }
                        for (var O = this.decodeTables[h - m[I]], M = 48; M <= 57; M++)
                          O[M] === r && (O[M] = n);
                      }
                    }
                }
                this.defaultCharUnicode = b.defaultCharUnicode, this.encodeTable = [], this.encodeTableSeq = [];
                var N = {};
                if (e.encodeSkipVals)
                  for (var P = 0; P < e.encodeSkipVals.length; P++) {
                    var G = e.encodeSkipVals[P];
                    if (typeof G == "number")
                      N[G] = !0;
                    else
                      for (var F = G.from; F <= G.to; F++)
                        N[F] = !0;
                  }
                if (this._fillEncodeTable(0, 0, N), e.encodeAdd)
                  for (var ot in e.encodeAdd)
                    Object.prototype.hasOwnProperty.call(e.encodeAdd, ot) && this._setEncodeChar(ot.charCodeAt(0), e.encodeAdd[ot]);
                this.defCharSB = this.encodeTable[0][b.defaultCharSingleByte.charCodeAt(0)], this.defCharSB === r && (this.defCharSB = this.encodeTable[0]["?"]), this.defCharSB === r && (this.defCharSB = "?".charCodeAt(0));
              }
              s.prototype.encoder = v, s.prototype.decoder = y, s.prototype._getDecodeTrieNode = function(e) {
                for (var b = []; e > 0; e >>>= 8)
                  b.push(e & 255);
                b.length == 0 && b.push(0);
                for (var A = this.decodeTables[0], P = b.length - 1; P > 0; P--) {
                  var D = A[b[P]];
                  if (D == r)
                    A[b[P]] = h - this.decodeTables.length, this.decodeTables.push(A = u.slice(0));
                  else if (D <= h)
                    A = this.decodeTables[h - D];
                  else
                    throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + e.toString(16));
                }
                return A;
              }, s.prototype._addDecodeChunk = function(e) {
                var b = parseInt(e[0], 16), A = this._getDecodeTrieNode(b);
                b = b & 255;
                for (var P = 1; P < e.length; P++) {
                  var D = e[P];
                  if (typeof D == "string")
                    for (var E = 0; E < D.length; ) {
                      var T = D.charCodeAt(E++);
                      if (55296 <= T && T < 56320) {
                        var C = D.charCodeAt(E++);
                        if (56320 <= C && C < 57344)
                          A[b++] = 65536 + (T - 55296) * 1024 + (C - 56320);
                        else
                          throw new Error("Incorrect surrogate pair in " + this.encodingName + " at chunk " + e[0]);
                      } else if (4080 < T && T <= 4095) {
                        for (var F = 4095 - T + 2, m = [], I = 0; I < F; I++)
                          m.push(D.charCodeAt(E++));
                        A[b++] = o - this.decodeTableSeq.length, this.decodeTableSeq.push(m);
                      } else
                        A[b++] = T;
                    }
                  else if (typeof D == "number")
                    for (var O = A[b - 1] + 1, E = 0; E < D; E++)
                      A[b++] = O++;
                  else
                    throw new Error("Incorrect type '" + typeof D + "' given in " + this.encodingName + " at chunk " + e[0]);
                }
                if (b > 255)
                  throw new Error("Incorrect chunk in " + this.encodingName + " at addr " + e[0] + ": too long" + b);
              }, s.prototype._getEncodeBucket = function(e) {
                var b = e >> 8;
                return this.encodeTable[b] === void 0 && (this.encodeTable[b] = u.slice(0)), this.encodeTable[b];
              }, s.prototype._setEncodeChar = function(e, b) {
                var A = this._getEncodeBucket(e), P = e & 255;
                A[P] <= o ? this.encodeTableSeq[o - A[P]][l] = b : A[P] == r && (A[P] = b);
              }, s.prototype._setEncodeSequence = function(e, b) {
                var A = e[0], P = this._getEncodeBucket(A), D = A & 255, E;
                P[D] <= o ? E = this.encodeTableSeq[o - P[D]] : (E = {}, P[D] !== r && (E[l] = P[D]), P[D] = o - this.encodeTableSeq.length, this.encodeTableSeq.push(E));
                for (var T = 1; T < e.length - 1; T++) {
                  var C = E[A];
                  typeof C == "object" ? E = C : (E = E[A] = {}, C !== void 0 && (E[l] = C));
                }
                A = e[e.length - 1], E[A] = b;
              }, s.prototype._fillEncodeTable = function(e, b, A) {
                for (var P = this.decodeTables[e], D = !1, E = {}, T = 0; T < 256; T++) {
                  var C = P[T], F = b + T;
                  if (!A[F])
                    if (C >= 0)
                      this._setEncodeChar(C, F), D = !0;
                    else if (C <= h) {
                      var m = h - C;
                      if (!E[m]) {
                        var I = F << 8 >>> 0;
                        this._fillEncodeTable(m, I, A) ? D = !0 : E[m] = !0;
                      }
                    } else
                      C <= o && (this._setEncodeSequence(this.decodeTableSeq[o - C], F), D = !0);
                }
                return D;
              };
              function v(e, b) {
                this.leadSurrogate = -1, this.seqObj = void 0, this.encodeTable = b.encodeTable, this.encodeTableSeq = b.encodeTableSeq, this.defaultCharSingleByte = b.defCharSB, this.gb18030 = b.gb18030;
              }
              v.prototype.write = function(e) {
                for (var b = i.alloc(e.length * (this.gb18030 ? 4 : 3)), A = this.leadSurrogate, P = this.seqObj, D = -1, E = 0, T = 0; ; ) {
                  if (D === -1) {
                    if (E == e.length)
                      break;
                    var C = e.charCodeAt(E++);
                  } else {
                    var C = D;
                    D = -1;
                  }
                  if (55296 <= C && C < 57344)
                    if (C < 56320)
                      if (A === -1) {
                        A = C;
                        continue;
                      } else
                        A = C, C = r;
                    else
                      A !== -1 ? (C = 65536 + (A - 55296) * 1024 + (C - 56320), A = -1) : C = r;
                  else
                    A !== -1 && (D = C, C = r, A = -1);
                  var F = r;
                  if (P !== void 0 && C != r) {
                    var m = P[C];
                    if (typeof m == "object") {
                      P = m;
                      continue;
                    } else
                      typeof m == "number" ? F = m : m == null && (m = P[l], m !== void 0 && (F = m, D = C));
                    P = void 0;
                  } else if (C >= 0) {
                    var I = this.encodeTable[C >> 8];
                    if (I !== void 0 && (F = I[C & 255]), F <= o) {
                      P = this.encodeTableSeq[o - F];
                      continue;
                    }
                    if (F == r && this.gb18030) {
                      var O = x(this.gb18030.uChars, C);
                      if (O != -1) {
                        var F = this.gb18030.gbChars[O] + (C - this.gb18030.uChars[O]);
                        b[T++] = 129 + Math.floor(F / 12600), F = F % 12600, b[T++] = 48 + Math.floor(F / 1260), F = F % 1260, b[T++] = 129 + Math.floor(F / 10), F = F % 10, b[T++] = 48 + F;
                        continue;
                      }
                    }
                  }
                  F === r && (F = this.defaultCharSingleByte), F < 256 ? b[T++] = F : F < 65536 ? (b[T++] = F >> 8, b[T++] = F & 255) : F < 16777216 ? (b[T++] = F >> 16, b[T++] = F >> 8 & 255, b[T++] = F & 255) : (b[T++] = F >>> 24, b[T++] = F >>> 16 & 255, b[T++] = F >>> 8 & 255, b[T++] = F & 255);
                }
                return this.seqObj = P, this.leadSurrogate = A, b.slice(0, T);
              }, v.prototype.end = function() {
                if (!(this.leadSurrogate === -1 && this.seqObj === void 0)) {
                  var e = i.alloc(10), b = 0;
                  if (this.seqObj) {
                    var A = this.seqObj[l];
                    A !== void 0 && (A < 256 ? e[b++] = A : (e[b++] = A >> 8, e[b++] = A & 255)), this.seqObj = void 0;
                  }
                  return this.leadSurrogate !== -1 && (e[b++] = this.defaultCharSingleByte, this.leadSurrogate = -1), e.slice(0, b);
                }
              }, v.prototype.findIdx = x;
              function y(e, b) {
                this.nodeIdx = 0, this.prevBytes = [], this.decodeTables = b.decodeTables, this.decodeTableSeq = b.decodeTableSeq, this.defaultCharUnicode = b.defaultCharUnicode, this.gb18030 = b.gb18030;
              }
              y.prototype.write = function(e) {
                for (var b = i.alloc(e.length * 2), A = this.nodeIdx, P = this.prevBytes, D = this.prevBytes.length, E = -this.prevBytes.length, T, C = 0, F = 0; C < e.length; C++) {
                  var m = C >= 0 ? e[C] : P[C + D], T = this.decodeTables[A][m];
                  if (!(T >= 0))
                    if (T === r)
                      T = this.defaultCharUnicode.charCodeAt(0), C = E;
                    else if (T === n) {
                      if (C >= 3)
                        var I = (e[C - 3] - 129) * 12600 + (e[C - 2] - 48) * 1260 + (e[C - 1] - 129) * 10 + (m - 48);
                      else
                        var I = (P[C - 3 + D] - 129) * 12600 + ((C - 2 >= 0 ? e[C - 2] : P[C - 2 + D]) - 48) * 1260 + ((C - 1 >= 0 ? e[C - 1] : P[C - 1 + D]) - 129) * 10 + (m - 48);
                      var O = x(this.gb18030.gbChars, I);
                      T = this.gb18030.uChars[O] + I - this.gb18030.gbChars[O];
                    } else if (T <= h) {
                      A = h - T;
                      continue;
                    } else if (T <= o) {
                      for (var M = this.decodeTableSeq[o - T], N = 0; N < M.length - 1; N++)
                        T = M[N], b[F++] = T & 255, b[F++] = T >> 8;
                      T = M[M.length - 1];
                    } else
                      throw new Error("iconv-lite internal error: invalid decoding table value " + T + " at " + A + "/" + m);
                  if (T >= 65536) {
                    T -= 65536;
                    var G = 55296 | T >> 10;
                    b[F++] = G & 255, b[F++] = G >> 8, T = 56320 | T & 1023;
                  }
                  b[F++] = T & 255, b[F++] = T >> 8, A = 0, E = C + 1;
                }
                return this.nodeIdx = A, this.prevBytes = E >= 0 ? Array.prototype.slice.call(e, E) : P.slice(E + D).concat(Array.prototype.slice.call(e)), b.slice(0, F).toString("ucs2");
              }, y.prototype.end = function() {
                for (var e = ""; this.prevBytes.length > 0; ) {
                  e += this.defaultCharUnicode;
                  var b = this.prevBytes.slice(1);
                  this.prevBytes = [], this.nodeIdx = 0, b.length > 0 && (e += this.write(b));
                }
                return this.prevBytes = [], this.nodeIdx = 0, e;
              };
              function x(e, b) {
                if (e[0] > b)
                  return -1;
                for (var A = 0, P = e.length; A < P - 1; ) {
                  var D = A + (P - A + 1 >> 1);
                  e[D] <= b ? A = D : P = D;
                }
                return A;
              }
            }
          ),
          /***/
          90481: (
            /***/
            function(f, d, t) {
              f.exports = {
                // == Japanese/ShiftJIS ====================================================
                // All japanese encodings are based on JIS X set of standards:
                // JIS X 0201 - Single-byte encoding of ASCII + Â¥ + Kana chars at 0xA1-0xDF.
                // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
                //              Has several variations in 1978, 1983, 1990 and 1997.
                // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
                // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
                //              2 planes, first is superset of 0208, second - revised 0212.
                //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)
                // Byte encodings are:
                //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
                //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
                //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
                //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
                //               0x00-0x7F       - lower part of 0201
                //               0x8E, 0xA1-0xDF - upper part of 0201
                //               (0xA1-0xFE)x2   - 0208 plane (94x94).
                //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
                //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
                //               Used as-is in ISO2022 family.
                //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
                //                0201-1976 Roman, 0208-1978, 0208-1983.
                //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
                //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
                //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
                //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
                //
                // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
                //
                // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html
                shiftjis: {
                  type: "_dbcs",
                  table: function() {
                    return t(40679);
                  },
                  encodeAdd: { "Â¥": 92, "â¾": 126 },
                  encodeSkipVals: [{ from: 60736, to: 63808 }]
                },
                csshiftjis: "shiftjis",
                mskanji: "shiftjis",
                sjis: "shiftjis",
                windows31j: "shiftjis",
                ms31j: "shiftjis",
                xsjis: "shiftjis",
                windows932: "shiftjis",
                ms932: "shiftjis",
                932: "shiftjis",
                cp932: "shiftjis",
                eucjp: {
                  type: "_dbcs",
                  table: function() {
                    return t(56406);
                  },
                  encodeAdd: { "Â¥": 92, "â¾": 126 }
                },
                // TODO: KDDI extension to Shift_JIS
                // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
                // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.
                // == Chinese/GBK ==========================================================
                // http://en.wikipedia.org/wiki/GBK
                // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder
                // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
                gb2312: "cp936",
                gb231280: "cp936",
                gb23121980: "cp936",
                csgb2312: "cp936",
                csiso58gb231280: "cp936",
                euccn: "cp936",
                // Microsoft's CP936 is a subset and approximation of GBK.
                windows936: "cp936",
                ms936: "cp936",
                936: "cp936",
                cp936: {
                  type: "_dbcs",
                  table: function() {
                    return t(74488);
                  }
                },
                // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
                gbk: {
                  type: "_dbcs",
                  table: function() {
                    return t(74488).concat(t(55914));
                  }
                },
                xgbk: "gbk",
                isoir58: "gbk",
                // GB18030 is an algorithmic extension of GBK.
                // Main source: https://www.w3.org/TR/encoding/#gbk-encoder
                // http://icu-project.org/docs/papers/gb18030.html
                // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
                // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
                gb18030: {
                  type: "_dbcs",
                  table: function() {
                    return t(74488).concat(t(55914));
                  },
                  gb18030: function() {
                    return t(99129);
                  },
                  encodeSkipVals: [128],
                  encodeAdd: { "â¬": 41699 }
                },
                chinese: "gb18030",
                // == Korean ===============================================================
                // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
                windows949: "cp949",
                ms949: "cp949",
                949: "cp949",
                cp949: {
                  type: "_dbcs",
                  table: function() {
                    return t(21166);
                  }
                },
                cseuckr: "cp949",
                csksc56011987: "cp949",
                euckr: "cp949",
                isoir149: "cp949",
                korean: "cp949",
                ksc56011987: "cp949",
                ksc56011989: "cp949",
                ksc5601: "cp949",
                // == Big5/Taiwan/Hong Kong ================================================
                // There are lots of tables for Big5 and cp950. Please see the following links for history:
                // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
                // Variations, in roughly number of defined chars:
                //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
                //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
                //  * Big5-2003 (Taiwan standard) almost superset of cp950.
                //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
                //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
                //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
                //    Plus, it has 4 combining sequences.
                //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
                //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
                //    Implementations are not consistent within browsers; sometimes labeled as just big5.
                //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
                //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
                //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
                //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
                //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
                // 
                // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
                // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.
                windows950: "cp950",
                ms950: "cp950",
                950: "cp950",
                cp950: {
                  type: "_dbcs",
                  table: function() {
                    return t(72324);
                  }
                },
                // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
                big5: "big5hkscs",
                big5hkscs: {
                  type: "_dbcs",
                  table: function() {
                    return t(72324).concat(t(43267));
                  },
                  encodeSkipVals: [
                    // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of
                    // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.
                    // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.
                    36457,
                    36463,
                    36478,
                    36523,
                    36532,
                    36557,
                    36560,
                    36695,
                    36713,
                    36718,
                    36811,
                    36862,
                    36973,
                    36986,
                    37060,
                    37084,
                    37105,
                    37311,
                    37551,
                    37552,
                    37553,
                    37554,
                    37585,
                    37959,
                    38090,
                    38361,
                    38652,
                    39285,
                    39798,
                    39800,
                    39803,
                    39878,
                    39902,
                    39916,
                    39926,
                    40002,
                    40019,
                    40034,
                    40040,
                    40043,
                    40055,
                    40124,
                    40125,
                    40144,
                    40279,
                    40282,
                    40388,
                    40431,
                    40443,
                    40617,
                    40687,
                    40701,
                    40800,
                    40907,
                    41079,
                    41180,
                    41183,
                    36812,
                    37576,
                    38468,
                    38637,
                    // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345
                    41636,
                    41637,
                    41639,
                    41638,
                    41676,
                    41678
                  ]
                },
                cnbig5: "big5hkscs",
                csbig5: "big5hkscs",
                xxbig5: "big5hkscs"
              };
            }
          ),
          /***/
          26326: (
            /***/
            function(f, d, t) {
              for (var i = [
                t(16793),
                t(24162),
                t(17100),
                t(11326),
                t(99948),
                t(99900),
                t(81492),
                t(35143),
                t(90481)
              ], r = 0; r < i.length; r++) {
                var n = i[r];
                for (var o in n)
                  Object.prototype.hasOwnProperty.call(n, o) && (d[o] = n[o]);
              }
            }
          ),
          /***/
          16793: (
            /***/
            function(f, d, t) {
              var i = t(93143).Buffer;
              f.exports = {
                // Encodings
                utf8: { type: "_internal", bomAware: !0 },
                cesu8: { type: "_internal", bomAware: !0 },
                unicode11utf8: "utf8",
                ucs2: { type: "_internal", bomAware: !0 },
                utf16le: "ucs2",
                binary: { type: "_internal" },
                base64: { type: "_internal" },
                hex: { type: "_internal" },
                // Codec.
                _internal: r
              };
              function r(s, v) {
                this.enc = s.encodingName, this.bomAware = s.bomAware, this.enc === "base64" ? this.encoder = u : this.enc === "cesu8" && (this.enc = "utf8", this.encoder = l, i.from("eda0bdedb2a9", "hex").toString() !== "ð©" && (this.decoder = c, this.defaultCharUnicode = v.defaultCharUnicode));
              }
              r.prototype.encoder = h, r.prototype.decoder = o;
              var n = t(43143).I;
              n.prototype.end || (n.prototype.end = function() {
              });
              function o(s, v) {
                this.decoder = new n(v.enc);
              }
              o.prototype.write = function(s) {
                return i.isBuffer(s) || (s = i.from(s)), this.decoder.write(s);
              }, o.prototype.end = function() {
                return this.decoder.end();
              };
              function h(s, v) {
                this.enc = v.enc;
              }
              h.prototype.write = function(s) {
                return i.from(s, this.enc);
              }, h.prototype.end = function() {
              };
              function u(s, v) {
                this.prevStr = "";
              }
              u.prototype.write = function(s) {
                s = this.prevStr + s;
                var v = s.length - s.length % 4;
                return this.prevStr = s.slice(v), s = s.slice(0, v), i.from(s, "base64");
              }, u.prototype.end = function() {
                return i.from(this.prevStr, "base64");
              };
              function l(s, v) {
              }
              l.prototype.write = function(s) {
                for (var v = i.alloc(s.length * 3), y = 0, x = 0; x < s.length; x++) {
                  var e = s.charCodeAt(x);
                  e < 128 ? v[y++] = e : e < 2048 ? (v[y++] = 192 + (e >>> 6), v[y++] = 128 + (e & 63)) : (v[y++] = 224 + (e >>> 12), v[y++] = 128 + (e >>> 6 & 63), v[y++] = 128 + (e & 63));
                }
                return v.slice(0, y);
              }, l.prototype.end = function() {
              };
              function c(s, v) {
                this.acc = 0, this.contBytes = 0, this.accBytes = 0, this.defaultCharUnicode = v.defaultCharUnicode;
              }
              c.prototype.write = function(s) {
                for (var v = this.acc, y = this.contBytes, x = this.accBytes, e = "", b = 0; b < s.length; b++) {
                  var A = s[b];
                  (A & 192) !== 128 ? (y > 0 && (e += this.defaultCharUnicode, y = 0), A < 128 ? e += String.fromCharCode(A) : A < 224 ? (v = A & 31, y = 1, x = 1) : A < 240 ? (v = A & 15, y = 2, x = 1) : e += this.defaultCharUnicode) : y > 0 ? (v = v << 6 | A & 63, y--, x++, y === 0 && (x === 2 && v < 128 && v > 0 ? e += this.defaultCharUnicode : x === 3 && v < 2048 ? e += this.defaultCharUnicode : e += String.fromCharCode(v))) : e += this.defaultCharUnicode;
                }
                return this.acc = v, this.contBytes = y, this.accBytes = x, e;
              }, c.prototype.end = function() {
                var s = 0;
                return this.contBytes > 0 && (s += this.defaultCharUnicode), s;
              };
            }
          ),
          /***/
          99948: (
            /***/
            function(f, d, t) {
              var i = t(93143).Buffer;
              d._sbcs = r;
              function r(h, u) {
                if (!h)
                  throw new Error("SBCS codec is called without the data.");
                if (!h.chars || h.chars.length !== 128 && h.chars.length !== 256)
                  throw new Error("Encoding '" + h.type + "' has incorrect 'chars' (must be of len 128 or 256)");
                if (h.chars.length === 128) {
                  for (var l = "", c = 0; c < 128; c++)
                    l += String.fromCharCode(c);
                  h.chars = l + h.chars;
                }
                this.decodeBuf = i.from(h.chars, "ucs2");
                for (var s = i.alloc(65536, u.defaultCharSingleByte.charCodeAt(0)), c = 0; c < h.chars.length; c++)
                  s[h.chars.charCodeAt(c)] = c;
                this.encodeBuf = s;
              }
              r.prototype.encoder = n, r.prototype.decoder = o;
              function n(h, u) {
                this.encodeBuf = u.encodeBuf;
              }
              n.prototype.write = function(h) {
                for (var u = i.alloc(h.length), l = 0; l < h.length; l++)
                  u[l] = this.encodeBuf[h.charCodeAt(l)];
                return u;
              }, n.prototype.end = function() {
              };
              function o(h, u) {
                this.decodeBuf = u.decodeBuf;
              }
              o.prototype.write = function(h) {
                for (var u = this.decodeBuf, l = i.alloc(h.length * 2), c = 0, s = 0, v = 0; v < h.length; v++)
                  c = h[v] * 2, s = v * 2, l[s] = u[c], l[s + 1] = u[c + 1];
                return l.toString("ucs2");
              }, o.prototype.end = function() {
              };
            }
          ),
          /***/
          81492: (
            /***/
            function(f) {
              f.exports = {
                437: "cp437",
                737: "cp737",
                775: "cp775",
                850: "cp850",
                852: "cp852",
                855: "cp855",
                856: "cp856",
                857: "cp857",
                858: "cp858",
                860: "cp860",
                861: "cp861",
                862: "cp862",
                863: "cp863",
                864: "cp864",
                865: "cp865",
                866: "cp866",
                869: "cp869",
                874: "windows874",
                922: "cp922",
                1046: "cp1046",
                1124: "cp1124",
                1125: "cp1125",
                1129: "cp1129",
                1133: "cp1133",
                1161: "cp1161",
                1162: "cp1162",
                1163: "cp1163",
                1250: "windows1250",
                1251: "windows1251",
                1252: "windows1252",
                1253: "windows1253",
                1254: "windows1254",
                1255: "windows1255",
                1256: "windows1256",
                1257: "windows1257",
                1258: "windows1258",
                28591: "iso88591",
                28592: "iso88592",
                28593: "iso88593",
                28594: "iso88594",
                28595: "iso88595",
                28596: "iso88596",
                28597: "iso88597",
                28598: "iso88598",
                28599: "iso88599",
                28600: "iso885910",
                28601: "iso885911",
                28603: "iso885913",
                28604: "iso885914",
                28605: "iso885915",
                28606: "iso885916",
                windows874: {
                  type: "_sbcs",
                  chars: "â¬ï¿½ï¿½ï¿½ï¿½â¦ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                win874: "windows874",
                cp874: "windows874",
                windows1250: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âï¿½ââ¦â â¡ï¿½â°Å â¹ÅÅ¤Å½Å¹ï¿½âââââ¢ââï¿½â¢Å¡âºÅÅ¥Å¾ÅºÂ ËËÅÂ¤ÄÂ¦Â§Â¨Â©ÅÂ«Â¬Â­Â®Å»Â°Â±ËÅÂ´ÂµÂ¶Â·Â¸ÄÅÂ»Ä½ËÄ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"
                },
                win1250: "windows1250",
                cp1250: "windows1250",
                windows1251: {
                  type: "_sbcs",
                  chars: "ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÐÐÐÑâââââ¢ââï¿½â¢ÑâºÑÑÑÑÂ ÐÑÐÂ¤ÒÂ¦Â§ÐÂ©ÐÂ«Â¬Â­Â®ÐÂ°Â±ÐÑÒÂµÂ¶Â·ÑâÑÂ»ÑÐÑÑÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                win1251: "windows1251",
                cp1251: "windows1251",
                windows1252: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½Å½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½Å¾Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                win1252: "windows1252",
                cp1252: "windows1252",
                windows1253: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡ï¿½â°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â ÎÎÂ£Â¤Â¥Â¦Â§Â¨Â©ï¿½Â«Â¬Â­Â®âÂ°Â±Â²Â³ÎÂµÂ¶Â·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"
                },
                win1253: "windows1253",
                cp1253: "windows1253",
                windows1254: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"
                },
                win1254: "windows1254",
                cp1254: "windows1254",
                windows1255: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â Â¡Â¢Â£âªÂ¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾Â¿Ö°Ö±Ö²Ö³Ö´ÖµÖ¶Ö·Ö¸Ö¹ÖºÖ»Ö¼Ö½Ö¾Ö¿×××××°×±×²×³×´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"
                },
                win1255: "windows1255",
                cp1255: "windows1255",
                windows1256: {
                  type: "_sbcs",
                  chars: "â¬Ù¾âÆââ¦â â¡Ëâ°Ù¹â¹ÅÚÚÚÚ¯âââââ¢ââÚ©â¢ÚâºÅââÚºÂ ØÂ¢Â£Â¤Â¥Â¦Â§Â¨Â©Ú¾Â«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ØÂ»Â¼Â½Â¾ØÛØ¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶ÃØ·Ø¸Ø¹ØºÙÙÙÙÃ ÙÃ¢ÙÙÙÙÃ§Ã¨Ã©ÃªÃ«ÙÙÃ®Ã¯ÙÙÙÙÃ´ÙÙÃ·ÙÃ¹ÙÃ»Ã¼ââÛ"
                },
                win1256: "windows1256",
                cp1256: "windows1256",
                windows1257: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âï¿½ââ¦â â¡ï¿½â°ï¿½â¹ï¿½Â¨ËÂ¸ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½Â¯Ëï¿½Â ï¿½Â¢Â£Â¤ï¿½Â¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³Â´ÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾Ë"
                },
                win1257: "windows1257",
                cp1257: "windows1257",
                windows1258: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                win1258: "windows1258",
                cp1258: "windows1258",
                iso88591: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                cp28591: "iso88591",
                iso88592: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄËÅÂ¤Ä½ÅÂ§Â¨Å ÅÅ¤Å¹Â­Å½Å»Â°ÄËÅÂ´Ä¾ÅËÂ¸Å¡ÅÅ¥ÅºËÅ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"
                },
                cp28592: "iso88592",
                iso88593: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Ä¦ËÂ£Â¤ï¿½Ä¤Â§Â¨Ä°ÅÄÄ´Â­ï¿½Å»Â°Ä§Â²Â³Â´ÂµÄ¥Â·Â¸Ä±ÅÄÄµÂ½ï¿½Å¼ÃÃÃï¿½ÃÄÄÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ ÃÃÄÃÃÃÃÅ¬ÅÃÃ Ã¡Ã¢ï¿½Ã¤ÄÄÃ§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ï¿½Ã±Ã²Ã³Ã´Ä¡Ã¶Ã·ÄÃ¹ÃºÃ»Ã¼Å­ÅË"
                },
                cp28593: "iso88593",
                iso88594: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄ¸ÅÂ¤Ä¨Ä»Â§Â¨Å ÄÄ¢Å¦Â­Å½Â¯Â°ÄËÅÂ´Ä©Ä¼ËÂ¸Å¡ÄÄ£Å§ÅÅ¾ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÄªÄÅÅÄ¶ÃÃÃÃÃÅ²ÃÃÃÅ¨ÅªÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ä«ÄÅÅÄ·Ã´ÃµÃ¶Ã·Ã¸Å³ÃºÃ»Ã¼Å©Å«Ë"
                },
                cp28594: "iso88594",
                iso88595: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÐÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÂ§ÑÑ"
                },
                cp28595: "iso88595",
                iso88596: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ï¿½ï¿½Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ØÂ­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Øï¿½ï¿½ï¿½Øï¿½Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·Ø¸Ø¹Øºï¿½ï¿½ï¿½ï¿½ï¿½ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"
                },
                cp28596: "iso88596",
                iso88597: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ââÂ£â¬â¯Â¦Â§Â¨Â©ÍºÂ«Â¬Â­ï¿½âÂ°Â±Â²Â³ÎÎÎÂ·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"
                },
                cp28597: "iso88597",
                iso88598: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½â××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"
                },
                cp28598: "iso88598",
                iso88599: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"
                },
                cp28599: "iso88599",
                iso885910: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÄ¢ÄªÄ¨Ä¶Â§Ä»ÄÅ Å¦Å½Â­ÅªÅÂ°ÄÄÄ£Ä«Ä©Ä·Â·Ä¼ÄÅ¡Å§Å¾âÅ«ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÃÃÅÅÃÃÃÃÅ¨ÃÅ²ÃÃÃÃÃÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ã¯Ã°ÅÅÃ³Ã´ÃµÃ¶Å©Ã¸Å³ÃºÃ»Ã¼Ã½Ã¾Ä¸"
                },
                cp28600: "iso885910",
                iso885911: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                cp28601: "iso885911",
                iso885913: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ âÂ¢Â£Â¤âÂ¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³âÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾â"
                },
                cp28603: "iso885913",
                iso885914: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ á¸á¸Â£ÄÄá¸Â§áºÂ©áºá¸á»²Â­Â®Å¸á¸á¸Ä Ä¡á¹á¹Â¶á¹áºá¹áºá¹ á»³áºáºá¹¡ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ´ÃÃÃÃÃÃá¹ªÃÃÃÃÃÃÅ¶ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÅµÃ±Ã²Ã³Ã´ÃµÃ¶á¹«Ã¸Ã¹ÃºÃ»Ã¼Ã½Å·Ã¿"
                },
                cp28604: "iso885914",
                iso885915: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Å Â§Å¡Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å½ÂµÂ¶Â·Å¾Â¹ÂºÂ»ÅÅÅ¸Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                cp28605: "iso885915",
                iso885916: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÅâ¬âÅ Â§Å¡Â©ÈÂ«Å¹Â­ÅºÅ»Â°Â±ÄÅÅ½âÂ¶Â·Å¾ÄÈÂ»ÅÅÅ¸Å¼ÃÃÃÄÃÄÃÃÃÃÃÃÃÃÃÃÄÅÃÃÃÅÃÅÅ°ÃÃÃÃÄÈÃÃ Ã¡Ã¢ÄÃ¤ÄÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÅÃ²Ã³Ã´ÅÃ¶ÅÅ±Ã¹ÃºÃ»Ã¼ÄÈÃ¿"
                },
                cp28606: "iso885916",
                cp437: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm437: "cp437",
                csibm437: "cp437",
                cp737: {
                  type: "_sbcs",
                  chars: "ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏâââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÏÎ¬Î­Î®ÏÎ¯ÏÏÏÏÎÎÎÎÎÎÎÂ±â¥â¤ÎªÎ«Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm737: "cp737",
                csibm737: "cp737",
                cp775: {
                  type: "_sbcs",
                  chars: "ÄÃ¼Ã©ÄÃ¤Ä£Ã¥ÄÅÄÅÅÄ«Å¹ÃÃÃÃ¦ÃÅÃ¶Ä¢Â¢ÅÅÃÃÃ¸Â£ÃÃÂ¤ÄÄªÃ³Å»Å¼ÅºâÂ¦Â©Â®Â¬Â½Â¼ÅÂ«Â»âââââ¤ÄÄÄÄâ£âââÄ®Å âââ´â¬âââ¼Å²Åªâââ©â¦â ââ¬Å½ÄÄÄÄÄ¯Å¡Å³Å«Å¾âââââââÃÃÅÅÃµÃÂµÅÄ¶Ä·Ä»Ä¼ÅÄÅâÂ­Â±âÂ¾Â¶Â§Ã·âÂ°âÂ·Â¹Â³Â²â Â "
                },
                ibm775: "cp775",
                csibm775: "cp775",
                cp850: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃÄ±ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm850: "cp850",
                csibm850: "cp850",
                cp852: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Å¯ÄÃ§ÅÃ«ÅÅÃ®Å¹ÃÄÃÄ¹ÄºÃ´Ã¶Ä½Ä¾ÅÅÃÃÅ¤Å¥ÅÃÄÃ¡Ã­Ã³ÃºÄÄÅ½Å¾ÄÄÂ¬ÅºÄÅÂ«Â»âââââ¤ÃÃÄÅâ£âââÅ»Å¼âââ´â¬âââ¼ÄÄâââ©â¦â ââ¬Â¤ÄÄÄÃÄÅÃÃÄââââÅ¢Å®âÃÃÃÅÅÅÅ Å¡ÅÃÅÅ°Ã½ÃÅ£Â´Â­ËËËËÂ§Ã·Â¸Â°Â¨ËÅ±ÅÅâ Â "
                },
                ibm852: "cp852",
                csibm852: "cp852",
                cp855: {
                  type: "_sbcs",
                  chars: "ÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐ®ÑÐªÐ°ÐÐ±ÐÑÐ¦Ð´ÐÐµÐÑÐ¤Ð³ÐÂ«Â»âââââ¤ÑÐ¥Ð¸Ðâ£âââÐ¹Ðâââ´â¬âââ¼ÐºÐâââ©â¦â ââ¬Â¤Ð»ÐÐ¼ÐÐ½ÐÐ¾ÐÐ¿ââââÐÑâÐ¯ÑÐ ÑÐ¡ÑÐ¢ÑÐ£Ð¶ÐÐ²ÐÑÐ¬âÂ­ÑÐ«Ð·ÐÑÐ¨ÑÐ­ÑÐ©ÑÐ§Â§â Â "
                },
                ibm855: "cp855",
                csibm855: "cp855",
                cp856: {
                  type: "_sbcs",
                  chars: "××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½Â£ï¿½Ãï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â®Â¬Â½Â¼ï¿½Â«Â»âââââ¤ï¿½ï¿½ï¿½Â©â£âââÂ¢Â¥âââ´â¬âââ¼ï¿½ï¿½âââ©â¦â ââ¬Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ââââÂ¦ï¿½âï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm856: "cp856",
                csibm856: "cp856",
                cp857: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ä±ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ä°ÃÃÃ¸Â£ÃÅÅÃ¡Ã­Ã³ÃºÃ±ÃÄÄÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤ÂºÂªÃÃÃï¿½ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµï¿½ÃÃÃÃÃ¬Ã¿Â¯Â´Â­Â±ï¿½Â¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm857: "cp857",
                csibm857: "cp857",
                cp858: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃâ¬ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm858: "cp858",
                csibm858: "cp858",
                cp860: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã£Ã ÃÃ§ÃªÃÃ¨ÃÃÃ¬ÃÃÃÃÃÃ´ÃµÃ²ÃÃ¹ÃÃÃÂ¢Â£Ãâ§ÃÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿ÃÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm860: "cp860",
                csibm860: "cp860",
                cp861: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨ÃÃ°ÃÃÃÃÃ¦ÃÃ´Ã¶Ã¾Ã»ÃÃ½ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃÃÃÃÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm861: "cp861",
                csibm861: "cp861",
                cp862: {
                  type: "_sbcs",
                  chars: "××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm862: "cp862",
                csibm862: "cp862",
                cp863: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢ÃÃ Â¶Ã§ÃªÃ«Ã¨Ã¯Ã®âÃÂ§ÃÃÃÃ´ÃÃÃ»Ã¹Â¤ÃÃÂ¢Â£ÃÃÆÂ¦Â´Ã³ÃºÂ¨Â¸Â³Â¯ÃâÂ¬Â½Â¼Â¾Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm863: "cp863",
                csibm863: "cp863",
                cp864: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#$Ùª&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~Â°Â·ââââââ¼â¤â¬ââ´ââââÎ²âÏÂ±Â½Â¼âÂ«Â»ï»·ï»¸ï¿½ï¿½ï»»ï»¼ï¿½Â Â­ïºÂ£Â¤ïºï¿½ï¿½ïºïºïºïºØïºïº¡ïº¥Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ï»Øïº±ïºµïº¹ØÂ¢ïºïºïºïºï»ïºïºïºïºïºïºïºïº£ïº§ïº©ïº«ïº­ïº¯ïº³ïº·ïº»ïº¿ï»ï»ï»ï»Â¦Â¬Ã·Ãï»Ùï»ï»ï»ï»ï»£ï»§ï»«ï»­ï»¯ï»³ïº½ï»ï»ï»ï»¡ï¹½Ùï»¥ï»©ï»¬ï»°ï»²ï»ï»ï»µï»¶ï»ï»ï»±â ï¿½`
                },
                ibm864: "cp864",
                csibm864: "cp864",
                cp865: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â¤âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm865: "cp865",
                csibm865: "cp865",
                cp866: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·ââÂ¤â Â "
                },
                ibm866: "cp866",
                csibm866: "cp866",
                cp869: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îï¿½Â·Â¬Â¦ââÎâÎÎÎªÎï¿½ï¿½ÎÎ«Â©ÎÂ²Â³Î¬Â£Î­Î®Î¯ÏÎÏÏÎÎÎÎÎÎÎÂ½ÎÎÂ«Â»âââââ¤ÎÎÎÎâ£âââÎÎâââ´â¬âââ¼Î Î¡âââ©â¦â ââ¬Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³ââââÎ´ÎµâÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÎÂ­Â±ÏÏÏÂ§ÏÎÂ°Â¨ÏÏÎ°Ïâ Â "
                },
                ibm869: "cp869",
                csibm869: "cp869",
                cp922: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®â¾Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ ÃÃÃÃÃÃÃÃÃÃÃÃÃÅ½ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Å¡Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Å¾Ã¿"
                },
                ibm922: "cp922",
                csibm922: "cp922",
                cp1046: {
                  type: "_sbcs",
                  chars: "ïºÃÃ·ï£¶ï£µï£´ï£·ï¹±Ââ ââââââï¹¹ï¹»ï¹½ï¹¿ï¹·ïºï»°ï»³ï»²ï»ï»ï»ï»¶ï»¸ï»ºï»¼Â ï£ºï£¹ï£¸Â¤ï£»ïºïºïºïºïºïº£ØÂ­ïº§ïº³Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ïº·Øïº»ïº¿ï»Øï»Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·ï»Ø¹Øºï»ïºïºïºï»ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï»ï»ï»ï£¼ï»µï»·ï»¹ï»»ï»£ï»§ï»¬ï»©ï¿½"
                },
                ibm1046: "cp1046",
                csibm1046: "cp1046",
                cp1124: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÒÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÒÑÑÑÑÑÑÑÑÑÂ§ÑÑ"
                },
                ibm1124: "cp1124",
                csibm1124: "cp1124",
                cp1125: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÒÒÐÑÐÑÐÑÂ·ââÂ¤â Â "
                },
                ibm1125: "cp1125",
                csibm1125: "cp1125",
                cp1129: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                ibm1129: "cp1129",
                csibm1129: "cp1129",
                cp1133: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ àºàºàºàºàºàºªàºàºàºàºàºàºàºàºàºàºàºàºàºàº¡àº¢àº£àº¥àº§àº«àº­àº®ï¿½ï¿½ï¿½àº¯àº°àº²àº³àº´àºµàº¶àº·àº¸àº¹àº¼àº±àº»àº½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»à»à»ï¿½à»à»â­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»ï¿½ï¿½Â¢Â¬Â¦ï¿½"
                },
                ibm1133: "cp1133",
                csibm1133: "cp1133",
                cp1161: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¹à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºà¹à¹à¹â¬à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â¢Â¬Â¦Â "
                },
                ibm1161: "cp1161",
                csibm1161: "cp1161",
                cp1162: {
                  type: "_sbcs",
                  chars: "â¬ÂÂÂÂâ¦ÂÂÂÂÂÂÂÂÂÂÂâââââ¢ââÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                ibm1162: "cp1162",
                csibm1162: "cp1162",
                cp1163: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                ibm1163: "cp1163",
                csibm1163: "cp1163",
                maccroatian: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Å â¢Â´Â¨â Å½ÃâÂ±â¤â¥âÂµâââÅ¡â«ÂªÂºâ¦Å¾Ã¸Â¿Â¡Â¬âÆâÄÂ«Äâ¦Â ÃÃÃÅÅÄâââââÃ·âï¿½Â©âÂ¤â¹âºÃÂ»âÂ·âââ°ÃÄÃÄÃÃÃÃÃÃÃÄÃÃÃÃÄ±ËËÂ¯ÏÃËÂ¸ÃÃ¦Ë"
                },
                maccyrillic: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°Â¢Â£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµâÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"
                },
                macgreek: {
                  type: "_sbcs",
                  chars: "ÃÂ¹Â²ÃÂ³ÃÃÎÃ Ã¢Ã¤ÎÂ¨Ã§Ã©Ã¨ÃªÃ«Â£â¢Ã®Ã¯â¢Â½â°Ã´Ã¶Â¦Â­Ã¹Ã»Ã¼â ÎÎÎÎÎÎ ÃÂ®Â©Î£ÎªÂ§â Â°ÎÎÂ±â¤â¥Â¥ÎÎÎÎÎÎÎÎ¦Î«Î¨Î©Î¬ÎÂ¬ÎÎ¡âÎ¤Â«Â»â¦Â Î¥Î§ÎÎÅââââââÃ·ÎÎÎÎÎ­Î®Î¯ÏÎÏÎ±Î²ÏÎ´ÎµÏÎ³Î·Î¹Î¾ÎºÎ»Î¼Î½Î¿ÏÏÏÏÏÎ¸ÏÏÏÏÎ¶ÏÏÎÎ°ï¿½"
                },
                maciceland: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼ÃÂ°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤ÃÃ°ÃÃ¾Ã½Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macroman: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macromania: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÄÅâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦ÄÅÂ¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºÅ¢Å£â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macthai: {
                  type: "_sbcs",
                  chars: "Â«Â»â¦ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¢ï¿½â¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸º\uFEFFâââà¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹â¢à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â®Â©ï¿½ï¿½ï¿½ï¿½"
                },
                macturkish: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ÄÄÄ°Ä±ÅÅâ¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃï¿½ËËÂ¯ËËËÂ¸ËËË"
                },
                macukraine: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°ÒÂ£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµÒÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"
                },
                koi8r: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑââââââââââââââ â¡Ðâ¢â£â¤â¥â¦â§â¨â©âªâ«â¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8u: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒââââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒâ¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8ru: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒÑâââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒÐÂ©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8t: {
                  type: "_sbcs",
                  chars: "ÒÒâÒââ¦â â¡ï¿½â°Ò³â¹Ò²Ò·Ò¶ï¿½Òâââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½ï¿½Ó¯Ó®ÑÂ¤Ó£Â¦Â§ï¿½ï¿½ï¿½Â«Â¬Â­Â®ï¿½Â°Â±Â²Ðï¿½Ó¢Â¶Â·ï¿½âï¿½Â»ï¿½ï¿½ï¿½Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                armscii8: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ÖÖ)(Â»Â«â.Õ,-Öâ¦ÕÕÕÔ±Õ¡Ô²Õ¢Ô³Õ£Ô´Õ¤ÔµÕ¥Ô¶Õ¦Ô·Õ§Ô¸Õ¨Ô¹Õ©ÔºÕªÔ»Õ«Ô¼Õ¬Ô½Õ­Ô¾Õ®Ô¿Õ¯ÕÕ°ÕÕ±ÕÕ²ÕÕ³ÕÕ´ÕÕµÕÕ¶ÕÕ·ÕÕ¸ÕÕ¹ÕÕºÕÕ»ÕÕ¼ÕÕ½ÕÕ¾ÕÕ¿ÕÖÕÖÕÖÕÖÕÖÕÖÕÖÕï¿½"
                },
                rk1048: {
                  type: "_sbcs",
                  chars: "ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÒÒºÐÑâââââ¢ââï¿½â¢ÑâºÑÒÒ»ÑÂ Ò°Ò±ÓÂ¤Ó¨Â¦Â§ÐÂ©ÒÂ«Â¬Â­Â®Ò®Â°Â±ÐÑÓ©ÂµÂ¶Â·ÑâÒÂ»ÓÒ¢Ò£Ò¯ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                tcvn: {
                  type: "_sbcs",
                  chars: `\0Ãá»¤á»ªá»¬á»®\x07\b	
\v\f\rá»¨á»°á»²á»¶á»¸Ãá»´\x1B !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~Ãáº¢ÃÃáº áº¶áº¬Ãáººáº¼Ãáº¸á»Ãá»Ä¨Ãá»Ãá»ÃÃá»á»á»á»á» á»á»¢Ãá»¦Å¨Â ÄÃÃÃÆ Æ¯ÄÄÃ¢ÃªÃ´Æ¡Æ°Äáº°ÌÌÌÌÌ£Ã áº£Ã£Ã¡áº¡áº²áº±áº³áºµáº¯áº´áº®áº¦áº¨áºªáº¤á»áº·áº§áº©áº«áº¥áº­Ã¨á»áº»áº½Ã©áº¹á»á»á»áº¿á»Ã¬á»á»áº¾á»Ä©Ã­á»Ã²á»á»ÃµÃ³á»á»á»á»á»á»á»á»á»¡á»á»£Ã¹á»á»§Å©Ãºá»¥á»«á»­á»¯á»©á»±á»³á»·á»¹Ã½á»µá»`
                },
                georgianacademy: {
                  type: "_sbcs",
                  chars: "ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ááááááááááááááááá á¡á¢á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á¯á°á±á²á³á´áµá¶Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                georgianps: {
                  type: "_sbcs",
                  chars: "ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿áááááááá±ááááááá²áááá á¡á¢á³á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á´á¯á°áµÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                pt154: {
                  type: "_sbcs",
                  chars: "ÒÒÓ®Òââ¦Ò¶Ò®Ò²Ò¯Ò Ó¢Ò¢ÒÒºÒ¸Òâââââ¢ââÒ³Ò·Ò¡Ó£Ò£ÒÒ»Ò¹Â ÐÑÐÓ¨ÒÒ°Â§ÐÂ©ÓÂ«Â¬Ó¯Â®ÒÂ°Ò±ÐÑÒÓ©Â¶Â·ÑâÓÂ»ÑÒªÒ«ÒÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                viscii: {
                  type: "_sbcs",
                  chars: `\0áº²áº´áºª\x07\b	
\v\f\rá»¶á»¸\x1Bá»´ !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~áº áº®áº°áº¶áº¤áº¦áº¨áº¬áº¼áº¸áº¾á»á»á»á»á»á»á»á»á»á»¢á»á»á»á»á»á»á»á»¦Å¨á»¤á»²Ãáº¯áº±áº·áº¥áº§áº©áº­áº½áº¹áº¿á»á»á»á»á»á»á»á»á» Æ á»á»á»á»á»°á»¨á»ªá»¬Æ¡á»Æ¯ÃÃÃÃáº¢Äáº³áºµÃÃÃáººÃÃÄ¨á»³Äá»©ÃÃÃáº¡á»·á»«á»­ÃÃá»¹á»µÃá»¡Æ°Ã Ã¡Ã¢Ã£áº£Äá»¯áº«Ã¨Ã©Ãªáº»Ã¬Ã­Ä©á»Äá»±Ã²Ã³Ã´Ãµá»á»á»¥Ã¹ÃºÅ©á»§Ã½á»£á»®`
                },
                iso646cn: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#Â¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½`
                },
                iso646jp: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[Â¥]^_\`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½`
                },
                hproman8: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÃÃÃÃÃÃÃÂ´ËËÂ¨ËÃÃâ¤Â¯ÃÃ½Â°ÃÃ§ÃÃ±Â¡Â¿Â¤Â£Â¥Â§ÆÂ¢Ã¢ÃªÃ´Ã»Ã¡Ã©Ã³ÃºÃ Ã¨Ã²Ã¹Ã¤Ã«Ã¶Ã¼ÃÃ®ÃÃÃ¥Ã­Ã¸Ã¦ÃÃ¬ÃÃÃÃ¯ÃÃÃÃÃ£ÃÃ°ÃÃÃÃÃÃµÅ Å¡ÃÅ¸Ã¿ÃÃ¾Â·ÂµÂ¶Â¾âÂ¼Â½ÂªÂºÂ«â Â»Â±ï¿½"
                },
                macintosh: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                ascii: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"
                },
                tis620: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                }
              };
            }
          ),
          /***/
          99900: (
            /***/
            function(f) {
              f.exports = {
                // Not supported by iconv, not sure why.
                10029: "maccenteuro",
                maccenteuro: {
                  type: "_sbcs",
                  chars: "ÃÄÄÃÄÃÃÃ¡ÄÄÃ¤ÄÄÄÃ©Å¹ÅºÄÃ­ÄÄÄÄÃ³ÄÃ´Ã¶ÃµÃºÄÄÃ¼â Â°ÄÂ£Â§â¢Â¶ÃÂ®Â©â¢ÄÂ¨â Ä£Ä®Ä¯Äªâ¤â¥Ä«Ä¶ââÅÄ»Ä¼Ä½Ä¾Ä¹ÄºÅÅÅÂ¬âÅÅâÂ«Â»â¦Â ÅÅÃÅÅââââââÃ·âÅÅÅÅâ¹âºÅÅÅÅ ââÅ¡ÅÅÃÅ¤Å¥ÃÅ½Å¾ÅªÃÃÅ«Å®ÃÅ¯Å°Å±Å²Å³ÃÃ½Ä·Å»ÅÅ¼Ä¢Ë"
                },
                808: "cp808",
                ibm808: "cp808",
                cp808: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·âââ¬â Â "
                },
                mik: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑââ´â¬âââ¼â£ââââ©â¦â ââ¬ââââââ¤âÂ§âââââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                cp720: {
                  type: "_sbcs",
                  chars: "ÂÂÃ©Ã¢ÂÃ ÂÃ§ÃªÃ«Ã¨Ã¯Ã®ÂÂÂÂÙÙÃ´Â¤ÙÃ»Ã¹Ø¡Ø¢Ø£Ø¤Â£Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµÂ«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââØ¶Ø·Ø¸Ø¹ØºÙÂµÙÙÙÙÙÙÙÙÙâ¡ÙÙÙÙÙÙâÂ°âÂ·ââ¿Â²â Â "
                },
                // Aliases of generated encodings.
                ascii8bit: "ascii",
                usascii: "ascii",
                ansix34: "ascii",
                ansix341968: "ascii",
                ansix341986: "ascii",
                csascii: "ascii",
                cp367: "ascii",
                ibm367: "ascii",
                isoir6: "ascii",
                iso646us: "ascii",
                iso646irv: "ascii",
                us: "ascii",
                latin1: "iso88591",
                latin2: "iso88592",
                latin3: "iso88593",
                latin4: "iso88594",
                latin5: "iso88599",
                latin6: "iso885910",
                latin7: "iso885913",
                latin8: "iso885914",
                latin9: "iso885915",
                latin10: "iso885916",
                csisolatin1: "iso88591",
                csisolatin2: "iso88592",
                csisolatin3: "iso88593",
                csisolatin4: "iso88594",
                csisolatincyrillic: "iso88595",
                csisolatinarabic: "iso88596",
                csisolatingreek: "iso88597",
                csisolatinhebrew: "iso88598",
                csisolatin5: "iso88599",
                csisolatin6: "iso885910",
                l1: "iso88591",
                l2: "iso88592",
                l3: "iso88593",
                l4: "iso88594",
                l5: "iso88599",
                l6: "iso885910",
                l7: "iso885913",
                l8: "iso885914",
                l9: "iso885915",
                l10: "iso885916",
                isoir14: "iso646jp",
                isoir57: "iso646cn",
                isoir100: "iso88591",
                isoir101: "iso88592",
                isoir109: "iso88593",
                isoir110: "iso88594",
                isoir144: "iso88595",
                isoir127: "iso88596",
                isoir126: "iso88597",
                isoir138: "iso88598",
                isoir148: "iso88599",
                isoir157: "iso885910",
                isoir166: "tis620",
                isoir179: "iso885913",
                isoir199: "iso885914",
                isoir203: "iso885915",
                isoir226: "iso885916",
                cp819: "iso88591",
                ibm819: "iso88591",
                cyrillic: "iso88595",
                arabic: "iso88596",
                arabic8: "iso88596",
                ecma114: "iso88596",
                asmo708: "iso88596",
                greek: "iso88597",
                greek8: "iso88597",
                ecma118: "iso88597",
                elot928: "iso88597",
                hebrew: "iso88598",
                hebrew8: "iso88598",
                turkish: "iso88599",
                turkish8: "iso88599",
                thai: "iso885911",
                thai8: "iso885911",
                celtic: "iso885914",
                celtic8: "iso885914",
                isoceltic: "iso885914",
                tis6200: "tis620",
                tis62025291: "tis620",
                tis62025330: "tis620",
                1e4: "macroman",
                10006: "macgreek",
                10007: "maccyrillic",
                10079: "maciceland",
                10081: "macturkish",
                cspc8codepage437: "cp437",
                cspc775baltic: "cp775",
                cspc850multilingual: "cp850",
                cspcp852: "cp852",
                cspc862latinhebrew: "cp862",
                cpgr: "cp869",
                msee: "cp1250",
                mscyrl: "cp1251",
                msansi: "cp1252",
                msgreek: "cp1253",
                msturk: "cp1254",
                mshebr: "cp1255",
                msarab: "cp1256",
                winbaltrim: "cp1257",
                cp20866: "koi8r",
                20866: "koi8r",
                ibm878: "koi8r",
                cskoi8r: "koi8r",
                cp21866: "koi8u",
                21866: "koi8u",
                ibm1168: "koi8u",
                strk10482002: "rk1048",
                tcvn5712: "tcvn",
                tcvn57121: "tcvn",
                gb198880: "iso646cn",
                cn: "iso646cn",
                csiso14jisc6220ro: "iso646jp",
                jisc62201969ro: "iso646jp",
                jp: "iso646jp",
                cshproman8: "hproman8",
                r8: "hproman8",
                roman8: "hproman8",
                xroman8: "hproman8",
                ibm1051: "hproman8",
                mac: "macintosh",
                csmacintosh: "macintosh"
              };
            }
          ),
          /***/
          17100: (
            /***/
            function(f, d, t) {
              var i = t(93143).Buffer;
              d.utf16be = r;
              function r() {
              }
              r.prototype.encoder = n, r.prototype.decoder = o, r.prototype.bomAware = !0;
              function n() {
              }
              n.prototype.write = function(s) {
                for (var v = i.from(s, "ucs2"), y = 0; y < v.length; y += 2) {
                  var x = v[y];
                  v[y] = v[y + 1], v[y + 1] = x;
                }
                return v;
              }, n.prototype.end = function() {
              };
              function o() {
                this.overflowByte = -1;
              }
              o.prototype.write = function(s) {
                if (s.length == 0)
                  return "";
                var v = i.alloc(s.length + 1), y = 0, x = 0;
                for (this.overflowByte !== -1 && (v[0] = s[0], v[1] = this.overflowByte, y = 1, x = 2); y < s.length - 1; y += 2, x += 2)
                  v[x] = s[y + 1], v[x + 1] = s[y];
                return this.overflowByte = y == s.length - 1 ? s[s.length - 1] : -1, v.slice(0, x).toString("ucs2");
              }, o.prototype.end = function() {
                this.overflowByte = -1;
              }, d.utf16 = h;
              function h(s, v) {
                this.iconv = v;
              }
              h.prototype.encoder = u, h.prototype.decoder = l;
              function u(s, v) {
                s = s || {}, s.addBOM === void 0 && (s.addBOM = !0), this.encoder = v.iconv.getEncoder("utf-16le", s);
              }
              u.prototype.write = function(s) {
                return this.encoder.write(s);
              }, u.prototype.end = function() {
                return this.encoder.end();
              };
              function l(s, v) {
                this.decoder = null, this.initialBufs = [], this.initialBufsLen = 0, this.options = s || {}, this.iconv = v.iconv;
              }
              l.prototype.write = function(s) {
                if (!this.decoder) {
                  if (this.initialBufs.push(s), this.initialBufsLen += s.length, this.initialBufsLen < 16)
                    return "";
                  var v = c(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(v, this.options);
                  for (var y = "", x = 0; x < this.initialBufs.length; x++)
                    y += this.decoder.write(this.initialBufs[x]);
                  return this.initialBufs.length = this.initialBufsLen = 0, y;
                }
                return this.decoder.write(s);
              }, l.prototype.end = function() {
                if (!this.decoder) {
                  var s = c(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(s, this.options);
                  for (var v = "", y = 0; y < this.initialBufs.length; y++)
                    v += this.decoder.write(this.initialBufs[y]);
                  var x = this.decoder.end();
                  return x && (v += x), this.initialBufs.length = this.initialBufsLen = 0, v;
                }
                return this.decoder.end();
              };
              function c(s, v) {
                var y = [], x = 0, e = 0, b = 0;
                t:
                  for (var A = 0; A < s.length; A++)
                    for (var P = s[A], D = 0; D < P.length; D++)
                      if (y.push(P[D]), y.length === 2) {
                        if (x === 0) {
                          if (y[0] === 255 && y[1] === 254)
                            return "utf-16le";
                          if (y[0] === 254 && y[1] === 255)
                            return "utf-16be";
                        }
                        if (y[0] === 0 && y[1] !== 0 && b++, y[0] !== 0 && y[1] === 0 && e++, y.length = 0, x++, x >= 100)
                          break t;
                      }
                return b > e ? "utf-16be" : b < e ? "utf-16le" : v || "utf-16le";
              }
            }
          ),
          /***/
          24162: (
            /***/
            function(f, d, t) {
              var i = t(93143).Buffer;
              d._utf32 = r;
              function r(v, y) {
                this.iconv = y, this.bomAware = !0, this.isLE = v.isLE;
              }
              d.utf32le = { type: "_utf32", isLE: !0 }, d.utf32be = { type: "_utf32", isLE: !1 }, d.ucs4le = "utf32le", d.ucs4be = "utf32be", r.prototype.encoder = n, r.prototype.decoder = o;
              function n(v, y) {
                this.isLE = y.isLE, this.highSurrogate = 0;
              }
              n.prototype.write = function(v) {
                for (var y = i.from(v, "ucs2"), x = i.alloc(y.length * 2), e = this.isLE ? x.writeUInt32LE : x.writeUInt32BE, b = 0, A = 0; A < y.length; A += 2) {
                  var P = y.readUInt16LE(A), D = 55296 <= P && P < 56320, E = 56320 <= P && P < 57344;
                  if (this.highSurrogate)
                    if (D || !E)
                      e.call(x, this.highSurrogate, b), b += 4;
                    else {
                      var T = (this.highSurrogate - 55296 << 10 | P - 56320) + 65536;
                      e.call(x, T, b), b += 4, this.highSurrogate = 0;
                      continue;
                    }
                  D ? this.highSurrogate = P : (e.call(x, P, b), b += 4, this.highSurrogate = 0);
                }
                return b < x.length && (x = x.slice(0, b)), x;
              }, n.prototype.end = function() {
                if (this.highSurrogate) {
                  var v = i.alloc(4);
                  return this.isLE ? v.writeUInt32LE(this.highSurrogate, 0) : v.writeUInt32BE(this.highSurrogate, 0), this.highSurrogate = 0, v;
                }
              };
              function o(v, y) {
                this.isLE = y.isLE, this.badChar = y.iconv.defaultCharUnicode.charCodeAt(0), this.overflow = [];
              }
              o.prototype.write = function(v) {
                if (v.length === 0)
                  return "";
                var y = 0, x = 0, e = i.alloc(v.length + 4), b = 0, A = this.isLE, P = this.overflow, D = this.badChar;
                if (P.length > 0) {
                  for (; y < v.length && P.length < 4; y++)
                    P.push(v[y]);
                  P.length === 4 && (A ? x = P[y] | P[y + 1] << 8 | P[y + 2] << 16 | P[y + 3] << 24 : x = P[y + 3] | P[y + 2] << 8 | P[y + 1] << 16 | P[y] << 24, P.length = 0, b = h(e, b, x, D));
                }
                for (; y < v.length - 3; y += 4)
                  A ? x = v[y] | v[y + 1] << 8 | v[y + 2] << 16 | v[y + 3] << 24 : x = v[y + 3] | v[y + 2] << 8 | v[y + 1] << 16 | v[y] << 24, b = h(e, b, x, D);
                for (; y < v.length; y++)
                  P.push(v[y]);
                return e.slice(0, b).toString("ucs2");
              };
              function h(v, y, x, e) {
                if ((x < 0 || x > 1114111) && (x = e), x >= 65536) {
                  x -= 65536;
                  var b = 55296 | x >> 10;
                  v[y++] = b & 255, v[y++] = b >> 8;
                  var x = 56320 | x & 1023;
                }
                return v[y++] = x & 255, v[y++] = x >> 8, y;
              }
              o.prototype.end = function() {
                this.overflow.length = 0;
              }, d.utf32 = u, d.ucs4 = "utf32";
              function u(v, y) {
                this.iconv = y;
              }
              u.prototype.encoder = l, u.prototype.decoder = c;
              function l(v, y) {
                v = v || {}, v.addBOM === void 0 && (v.addBOM = !0), this.encoder = y.iconv.getEncoder(v.defaultEncoding || "utf-32le", v);
              }
              l.prototype.write = function(v) {
                return this.encoder.write(v);
              }, l.prototype.end = function() {
                return this.encoder.end();
              };
              function c(v, y) {
                this.decoder = null, this.initialBufs = [], this.initialBufsLen = 0, this.options = v || {}, this.iconv = y.iconv;
              }
              c.prototype.write = function(v) {
                if (!this.decoder) {
                  if (this.initialBufs.push(v), this.initialBufsLen += v.length, this.initialBufsLen < 32)
                    return "";
                  var y = s(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(y, this.options);
                  for (var x = "", e = 0; e < this.initialBufs.length; e++)
                    x += this.decoder.write(this.initialBufs[e]);
                  return this.initialBufs.length = this.initialBufsLen = 0, x;
                }
                return this.decoder.write(v);
              }, c.prototype.end = function() {
                if (!this.decoder) {
                  var v = s(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(v, this.options);
                  for (var y = "", x = 0; x < this.initialBufs.length; x++)
                    y += this.decoder.write(this.initialBufs[x]);
                  var e = this.decoder.end();
                  return e && (y += e), this.initialBufs.length = this.initialBufsLen = 0, y;
                }
                return this.decoder.end();
              };
              function s(v, y) {
                var x = [], e = 0, b = 0, A = 0, P = 0, D = 0;
                t:
                  for (var E = 0; E < v.length; E++)
                    for (var T = v[E], C = 0; C < T.length; C++)
                      if (x.push(T[C]), x.length === 4) {
                        if (e === 0) {
                          if (x[0] === 255 && x[1] === 254 && x[2] === 0 && x[3] === 0)
                            return "utf-32le";
                          if (x[0] === 0 && x[1] === 0 && x[2] === 254 && x[3] === 255)
                            return "utf-32be";
                        }
                        if ((x[0] !== 0 || x[1] > 16) && A++, (x[3] !== 0 || x[2] > 16) && b++, x[0] === 0 && x[1] === 0 && (x[2] !== 0 || x[3] !== 0) && D++, (x[0] !== 0 || x[1] !== 0) && x[2] === 0 && x[3] === 0 && P++, x.length = 0, e++, e >= 100)
                          break t;
                      }
                return D - A > P - b ? "utf-32be" : D - A < P - b ? "utf-32le" : y || "utf-32le";
              }
            }
          ),
          /***/
          11326: (
            /***/
            function(f, d, t) {
              var i = t(93143).Buffer;
              d.utf7 = r, d.unicode11utf7 = "utf7";
              function r(P, D) {
                this.iconv = D;
              }
              r.prototype.encoder = o, r.prototype.decoder = h, r.prototype.bomAware = !0;
              var n = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;
              function o(P, D) {
                this.iconv = D.iconv;
              }
              o.prototype.write = function(P) {
                return i.from(P.replace(n, function(D) {
                  return "+" + (D === "+" ? "" : this.iconv.encode(D, "utf16-be").toString("base64").replace(/=+$/, "")) + "-";
                }.bind(this)));
              }, o.prototype.end = function() {
              };
              function h(P, D) {
                this.iconv = D.iconv, this.inBase64 = !1, this.base64Accum = "";
              }
              for (var u = /[A-Za-z0-9\/+]/, l = [], c = 0; c < 256; c++)
                l[c] = u.test(String.fromCharCode(c));
              var s = "+".charCodeAt(0), v = "-".charCodeAt(0), y = "&".charCodeAt(0);
              h.prototype.write = function(P) {
                for (var D = "", E = 0, T = this.inBase64, C = this.base64Accum, F = 0; F < P.length; F++)
                  if (!T)
                    P[F] == s && (D += this.iconv.decode(P.slice(E, F), "ascii"), E = F + 1, T = !0);
                  else if (!l[P[F]]) {
                    if (F == E && P[F] == v)
                      D += "+";
                    else {
                      var m = C + this.iconv.decode(P.slice(E, F), "ascii");
                      D += this.iconv.decode(i.from(m, "base64"), "utf16-be");
                    }
                    P[F] != v && F--, E = F + 1, T = !1, C = "";
                  }
                if (!T)
                  D += this.iconv.decode(P.slice(E), "ascii");
                else {
                  var m = C + this.iconv.decode(P.slice(E), "ascii"), I = m.length - m.length % 8;
                  C = m.slice(I), m = m.slice(0, I), D += this.iconv.decode(i.from(m, "base64"), "utf16-be");
                }
                return this.inBase64 = T, this.base64Accum = C, D;
              }, h.prototype.end = function() {
                var P = "";
                return this.inBase64 && this.base64Accum.length > 0 && (P = this.iconv.decode(i.from(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", P;
              }, d.utf7imap = x;
              function x(P, D) {
                this.iconv = D;
              }
              x.prototype.encoder = e, x.prototype.decoder = b, x.prototype.bomAware = !0;
              function e(P, D) {
                this.iconv = D.iconv, this.inBase64 = !1, this.base64Accum = i.alloc(6), this.base64AccumIdx = 0;
              }
              e.prototype.write = function(P) {
                for (var D = this.inBase64, E = this.base64Accum, T = this.base64AccumIdx, C = i.alloc(P.length * 5 + 10), F = 0, m = 0; m < P.length; m++) {
                  var I = P.charCodeAt(m);
                  32 <= I && I <= 126 ? (D && (T > 0 && (F += C.write(E.slice(0, T).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), F), T = 0), C[F++] = v, D = !1), D || (C[F++] = I, I === y && (C[F++] = v))) : (D || (C[F++] = y, D = !0), D && (E[T++] = I >> 8, E[T++] = I & 255, T == E.length && (F += C.write(E.toString("base64").replace(/\//g, ","), F), T = 0)));
                }
                return this.inBase64 = D, this.base64AccumIdx = T, C.slice(0, F);
              }, e.prototype.end = function() {
                var P = i.alloc(10), D = 0;
                return this.inBase64 && (this.base64AccumIdx > 0 && (D += P.write(this.base64Accum.slice(0, this.base64AccumIdx).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), D), this.base64AccumIdx = 0), P[D++] = v, this.inBase64 = !1), P.slice(0, D);
              };
              function b(P, D) {
                this.iconv = D.iconv, this.inBase64 = !1, this.base64Accum = "";
              }
              var A = l.slice();
              A[",".charCodeAt(0)] = !0, b.prototype.write = function(P) {
                for (var D = "", E = 0, T = this.inBase64, C = this.base64Accum, F = 0; F < P.length; F++)
                  if (!T)
                    P[F] == y && (D += this.iconv.decode(P.slice(E, F), "ascii"), E = F + 1, T = !0);
                  else if (!A[P[F]]) {
                    if (F == E && P[F] == v)
                      D += "&";
                    else {
                      var m = C + this.iconv.decode(P.slice(E, F), "ascii").replace(/,/g, "/");
                      D += this.iconv.decode(i.from(m, "base64"), "utf16-be");
                    }
                    P[F] != v && F--, E = F + 1, T = !1, C = "";
                  }
                if (!T)
                  D += this.iconv.decode(P.slice(E), "ascii");
                else {
                  var m = C + this.iconv.decode(P.slice(E), "ascii").replace(/,/g, "/"), I = m.length - m.length % 8;
                  C = m.slice(I), m = m.slice(0, I), D += this.iconv.decode(i.from(m, "base64"), "utf16-be");
                }
                return this.inBase64 = T, this.base64Accum = C, D;
              }, b.prototype.end = function() {
                var P = "";
                return this.inBase64 && this.base64Accum.length > 0 && (P = this.iconv.decode(i.from(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", P;
              };
            }
          ),
          /***/
          52331: (
            /***/
            function(f, d) {
              var t = "\uFEFF";
              d.PrependBOM = i;
              function i(n, o) {
                this.encoder = n, this.addBOM = !0;
              }
              i.prototype.write = function(n) {
                return this.addBOM && (n = t + n, this.addBOM = !1), this.encoder.write(n);
              }, i.prototype.end = function() {
                return this.encoder.end();
              }, d.StripBOM = r;
              function r(n, o) {
                this.decoder = n, this.pass = !1, this.options = o || {};
              }
              r.prototype.write = function(n) {
                var o = this.decoder.write(n);
                return this.pass || !o || (o[0] === t && (o = o.slice(1), typeof this.options.stripBOM == "function" && this.options.stripBOM()), this.pass = !0), o;
              }, r.prototype.end = function() {
                return this.decoder.end();
              };
            }
          ),
          /***/
          54171: (
            /***/
            function(f, d, t) {
              var i = t(93143).Buffer, r = t(52331), n = f.exports;
              n.encodings = null, n.defaultCharUnicode = "ï¿½", n.defaultCharSingleByte = "?", n.encode = function(u, l, c) {
                u = "" + (u || "");
                var s = n.getEncoder(l, c), v = s.write(u), y = s.end();
                return y && y.length > 0 ? i.concat([v, y]) : v;
              }, n.decode = function(u, l, c) {
                typeof u == "string" && (n.skipDecodeWarning || (console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"), n.skipDecodeWarning = !0), u = i.from("" + (u || ""), "binary"));
                var s = n.getDecoder(l, c), v = s.write(u), y = s.end();
                return y ? v + y : v;
              }, n.encodingExists = function(u) {
                try {
                  return n.getCodec(u), !0;
                } catch (l) {
                  return !1;
                }
              }, n.toEncoding = n.encode, n.fromEncoding = n.decode, n._codecDataCache = {}, n.getCodec = function(u) {
                n.encodings || (n.encodings = t(26326));
                for (var l = n._canonicalizeEncoding(u), c = {}; ; ) {
                  var s = n._codecDataCache[l];
                  if (s)
                    return s;
                  var v = n.encodings[l];
                  switch (typeof v) {
                    case "string":
                      l = v;
                      break;
                    case "object":
                      for (var y in v)
                        c[y] = v[y];
                      c.encodingName || (c.encodingName = l), l = v.type;
                      break;
                    case "function":
                      return c.encodingName || (c.encodingName = l), s = new v(c, n), n._codecDataCache[c.encodingName] = s, s;
                    default:
                      throw new Error("Encoding not recognized: '" + u + "' (searched as: '" + l + "')");
                  }
                }
              }, n._canonicalizeEncoding = function(h) {
                return ("" + h).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g, "");
              }, n.getEncoder = function(u, l) {
                var c = n.getCodec(u), s = new c.encoder(l, c);
                return c.bomAware && l && l.addBOM && (s = new r.PrependBOM(s, l)), s;
              }, n.getDecoder = function(u, l) {
                var c = n.getCodec(u), s = new c.decoder(l, c);
                return c.bomAware && !(l && l.stripBOM === !1) && (s = new r.StripBOM(s, l)), s;
              }, n.enableStreamingAPI = function(u) {
                if (!n.supportsStreams) {
                  var l = t(34506)(u);
                  n.IconvLiteEncoderStream = l.IconvLiteEncoderStream, n.IconvLiteDecoderStream = l.IconvLiteDecoderStream, n.encodeStream = function(s, v) {
                    return new n.IconvLiteEncoderStream(n.getEncoder(s, v), v);
                  }, n.decodeStream = function(s, v) {
                    return new n.IconvLiteDecoderStream(n.getDecoder(s, v), v);
                  }, n.supportsStreams = !0;
                }
              };
              var o;
              try {
                o = t(16403);
              } catch (h) {
              }
              o && o.Transform ? n.enableStreamingAPI(o) : n.encodeStream = n.decodeStream = function() {
                throw new Error("iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.");
              };
            }
          ),
          /***/
          34506: (
            /***/
            function(f, d, t) {
              var i = t(93143).Buffer;
              f.exports = function(r) {
                var n = r.Transform;
                function o(u, l) {
                  this.conv = u, l = l || {}, l.decodeStrings = !1, n.call(this, l);
                }
                o.prototype = Object.create(n.prototype, {
                  constructor: { value: o }
                }), o.prototype._transform = function(u, l, c) {
                  if (typeof u != "string")
                    return c(new Error("Iconv encoding stream needs strings as its input."));
                  try {
                    var s = this.conv.write(u);
                    s && s.length && this.push(s), c();
                  } catch (v) {
                    c(v);
                  }
                }, o.prototype._flush = function(u) {
                  try {
                    var l = this.conv.end();
                    l && l.length && this.push(l), u();
                  } catch (c) {
                    u(c);
                  }
                }, o.prototype.collect = function(u) {
                  var l = [];
                  return this.on("error", u), this.on("data", function(c) {
                    l.push(c);
                  }), this.on("end", function() {
                    u(null, i.concat(l));
                  }), this;
                };
                function h(u, l) {
                  this.conv = u, l = l || {}, l.encoding = this.encoding = "utf8", n.call(this, l);
                }
                return h.prototype = Object.create(n.prototype, {
                  constructor: { value: h }
                }), h.prototype._transform = function(u, l, c) {
                  if (!i.isBuffer(u) && !(u instanceof Uint8Array))
                    return c(new Error("Iconv decoding stream needs buffers as its input."));
                  try {
                    var s = this.conv.write(u);
                    s && s.length && this.push(s, this.encoding), c();
                  } catch (v) {
                    c(v);
                  }
                }, h.prototype._flush = function(u) {
                  try {
                    var l = this.conv.end();
                    l && l.length && this.push(l, this.encoding), u();
                  } catch (c) {
                    u(c);
                  }
                }, h.prototype.collect = function(u) {
                  var l = "";
                  return this.on("error", u), this.on("data", function(c) {
                    l += c;
                  }), this.on("end", function() {
                    u(null, l);
                  }), this;
                }, {
                  IconvLiteEncoderStream: o,
                  IconvLiteDecoderStream: h
                };
              };
            }
          ),
          /***/
          89029: (
            /***/
            function(f, d) {
              /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
              d.read = function(t, i, r, n, o) {
                var h, u, l = o * 8 - n - 1, c = (1 << l) - 1, s = c >> 1, v = -7, y = r ? o - 1 : 0, x = r ? -1 : 1, e = t[i + y];
                for (y += x, h = e & (1 << -v) - 1, e >>= -v, v += l; v > 0; h = h * 256 + t[i + y], y += x, v -= 8)
                  ;
                for (u = h & (1 << -v) - 1, h >>= -v, v += n; v > 0; u = u * 256 + t[i + y], y += x, v -= 8)
                  ;
                if (h === 0)
                  h = 1 - s;
                else {
                  if (h === c)
                    return u ? NaN : (e ? -1 : 1) * (1 / 0);
                  u = u + Math.pow(2, n), h = h - s;
                }
                return (e ? -1 : 1) * u * Math.pow(2, h - n);
              }, d.write = function(t, i, r, n, o, h) {
                var u, l, c, s = h * 8 - o - 1, v = (1 << s) - 1, y = v >> 1, x = o === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, e = n ? 0 : h - 1, b = n ? 1 : -1, A = i < 0 || i === 0 && 1 / i < 0 ? 1 : 0;
                for (i = Math.abs(i), isNaN(i) || i === 1 / 0 ? (l = isNaN(i) ? 1 : 0, u = v) : (u = Math.floor(Math.log(i) / Math.LN2), i * (c = Math.pow(2, -u)) < 1 && (u--, c *= 2), u + y >= 1 ? i += x / c : i += x * Math.pow(2, 1 - y), i * c >= 2 && (u++, c /= 2), u + y >= v ? (l = 0, u = v) : u + y >= 1 ? (l = (i * c - 1) * Math.pow(2, o), u = u + y) : (l = i * Math.pow(2, y - 1) * Math.pow(2, o), u = 0)); o >= 8; t[r + e] = l & 255, e += b, l /= 256, o -= 8)
                  ;
                for (u = u << o | l, s += o; s > 0; t[r + e] = u & 255, e += b, u /= 256, s -= 8)
                  ;
                t[r + e - b] |= A * 128;
              };
            }
          ),
          /***/
          89784: (
            /***/
            function(f) {
              typeof Object.create == "function" ? f.exports = function(t, i) {
                i && (t.super_ = i, t.prototype = Object.create(i.prototype, {
                  constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                  }
                }));
              } : f.exports = function(t, i) {
                if (i) {
                  t.super_ = i;
                  var r = function() {
                  };
                  r.prototype = i.prototype, t.prototype = new r(), t.prototype.constructor = t;
                }
              };
            }
          ),
          /***/
          67906: (
            /***/
            function(f, d, t) {
              var i = t(26626)(), r = t(22774), n = r("Object.prototype.toString"), o = function(c) {
                return i && c && typeof c == "object" && Symbol.toStringTag in c ? !1 : n(c) === "[object Arguments]";
              }, h = function(c) {
                return o(c) ? !0 : c !== null && typeof c == "object" && "length" in c && typeof c.length == "number" && c.length >= 0 && n(c) !== "[object Array]" && "callee" in c && n(c.callee) === "[object Function]";
              }, u = function() {
                return o(arguments);
              }();
              o.isLegacyArguments = h, f.exports = u ? o : h;
            }
          ),
          /***/
          3746: (
            /***/
            function(f) {
              var d = Function.prototype.toString, t = typeof Reflect == "object" && Reflect !== null && Reflect.apply, i, r;
              if (typeof t == "function" && typeof Object.defineProperty == "function")
                try {
                  i = Object.defineProperty({}, "length", {
                    get: function() {
                      throw r;
                    }
                  }), r = {}, t(function() {
                    throw 42;
                  }, null, i);
                } catch (D) {
                  D !== r && (t = null);
                }
              else
                t = null;
              var n = /^\s*class\b/, o = function(E) {
                try {
                  var T = d.call(E);
                  return n.test(T);
                } catch (C) {
                  return !1;
                }
              }, h = function(E) {
                try {
                  return o(E) ? !1 : (d.call(E), !0);
                } catch (T) {
                  return !1;
                }
              }, u = Object.prototype.toString, l = "[object Object]", c = "[object Function]", s = "[object GeneratorFunction]", v = "[object HTMLAllCollection]", y = "[object HTML document.all class]", x = "[object HTMLCollection]", e = typeof Symbol == "function" && !!Symbol.toStringTag, b = !(0 in [,]), A = function() {
                return !1;
              };
              if (typeof document == "object") {
                var P = document.all;
                u.call(P) === u.call(document.all) && (A = function(E) {
                  if ((b || !E) && (typeof E == "undefined" || typeof E == "object"))
                    try {
                      var T = u.call(E);
                      return (T === v || T === y || T === x || T === l) && E("") == null;
                    } catch (C) {
                    }
                  return !1;
                });
              }
              f.exports = t ? function(E) {
                if (A(E))
                  return !0;
                if (!E || typeof E != "function" && typeof E != "object")
                  return !1;
                try {
                  t(E, null, i);
                } catch (T) {
                  if (T !== r)
                    return !1;
                }
                return !o(E) && h(E);
              } : function(E) {
                if (A(E))
                  return !0;
                if (!E || typeof E != "function" && typeof E != "object")
                  return !1;
                if (e)
                  return h(E);
                if (o(E))
                  return !1;
                var T = u.call(E);
                return T !== c && T !== s && !/^\[object HTML/.test(T) ? !1 : h(E);
              };
            }
          ),
          /***/
          71230: (
            /***/
            function(f, d, t) {
              var i = t(22774), r = i("Date.prototype.getDay"), n = function(c) {
                try {
                  return r(c), !0;
                } catch (s) {
                  return !1;
                }
              }, o = i("Object.prototype.toString"), h = "[object Date]", u = t(26626)();
              f.exports = function(c) {
                return typeof c != "object" || c === null ? !1 : u ? n(c) : o(c) === h;
              };
            }
          ),
          /***/
          44610: (
            /***/
            function(f, d, t) {
              var i = Object.prototype.toString, r = Function.prototype.toString, n = /^\s*(?:function)?\*/, o = t(26626)(), h = Object.getPrototypeOf, u = function() {
                if (!o)
                  return !1;
                try {
                  return Function("return function*() {}")();
                } catch (c) {
                }
              }, l;
              f.exports = function(s) {
                if (typeof s != "function")
                  return !1;
                if (n.test(r.call(s)))
                  return !0;
                if (!o) {
                  var v = i.call(s);
                  return v === "[object GeneratorFunction]";
                }
                if (!h)
                  return !1;
                if (typeof l == "undefined") {
                  var y = u();
                  l = y ? h(y) : !1;
                }
                return h(s) === l;
              };
            }
          ),
          /***/
          82621: (
            /***/
            function(f) {
              f.exports = function(t) {
                return t !== t;
              };
            }
          ),
          /***/
          7051: (
            /***/
            function(f, d, t) {
              var i = t(26601), r = t(77802), n = t(82621), o = t(61320), h = t(35074), u = i(o(), Number);
              r(u, {
                getPolyfill: o,
                implementation: n,
                shim: h
              }), f.exports = u;
            }
          ),
          /***/
          61320: (
            /***/
            function(f, d, t) {
              var i = t(82621);
              f.exports = function() {
                return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : i;
              };
            }
          ),
          /***/
          35074: (
            /***/
            function(f, d, t) {
              var i = t(77802), r = t(61320);
              f.exports = function() {
                var o = r();
                return i(Number, { isNaN: o }, {
                  isNaN: function() {
                    return Number.isNaN !== o;
                  }
                }), o;
              };
            }
          ),
          /***/
          71689: (
            /***/
            function(f, d, t) {
              var i = t(22774), r = t(26626)(), n = t(55215), o = t(68109), h;
              if (r) {
                var u = i("RegExp.prototype.exec"), l = {}, c = function() {
                  throw l;
                }, s = {
                  toString: c,
                  valueOf: c
                };
                typeof Symbol.toPrimitive == "symbol" && (s[Symbol.toPrimitive] = c), h = function(e) {
                  if (!e || typeof e != "object")
                    return !1;
                  var b = (
                    /** @type {NonNullable<typeof gOPD>} */
                    o(
                      /** @type {{ lastIndex?: unknown }} */
                      e,
                      "lastIndex"
                    )
                  ), A = b && n(b, "value");
                  if (!A)
                    return !1;
                  try {
                    u(
                      e,
                      /** @type {string} */
                      /** @type {unknown} */
                      s
                    );
                  } catch (P) {
                    return P === l;
                  }
                };
              } else {
                var v = i("Object.prototype.toString"), y = "[object RegExp]";
                h = function(e) {
                  return !e || typeof e != "object" && typeof e != "function" ? !1 : v(e) === y;
                };
              }
              f.exports = h;
            }
          ),
          /***/
          46094: (
            /***/
            function(f, d, t) {
              var i = t(43381);
              f.exports = function(n) {
                return !!i(n);
              };
            }
          ),
          /***/
          38834: (
            /***/
            function(f, d, t) {
              var i = t(48181), r = n(i);
              function n(I) {
                return I && I.__esModule ? I : { default: I };
              }
              var o = t(9240), h = [0, 1, 1, 2, 4, 8, 1, 1, 2, 4, 8, 4, 8], u = 2, l = 65496, c = 18761, s = 19789, v = 2, y = 65504, x = 65519, e = void 0, b = function(O) {
                try {
                  var M = O.readUInt16BE(0);
                  return M === l;
                } catch (N) {
                  throw new Error("Unsupport file format.");
                }
              }, A = function(O) {
                try {
                  var M = O.readUInt16BE(0);
                  return M === c || M === s;
                } catch (N) {
                  throw new Error("Unsupport file format.");
                }
              }, P = function(O) {
                try {
                  var M = O.readUInt16BE(0), N = M >= y && M <= x;
                  return N ? M - y : !1;
                } catch (G) {
                  throw new Error("Invalid APP Tag.");
                }
              }, D = function(O, M, N, G) {
                var ot = N ? O.readUInt16BE(0) : O.readUInt16LE(0);
                if (ot === 0)
                  return {};
                var K = 2, nt = O.slice(K), xt = 12, bt = {}, St = 0;
                for (St; St < ot; St += 1) {
                  var Dt = St * xt, Lt = nt.slice(Dt, Dt + xt), jt = 0, J = 2, yt = jt + J, ut = 2, st = yt + ut, wt = 4, V = st + wt, Ft = 4, U = Lt.slice(jt, yt), S = N ? U.toString("hex") : U.reverse().toString("hex"), k = M[S], H = Lt.readUInt16BE(yt), it = Lt.readUInt16LE(yt), et = N ? H : it, tt = h[et], Ct = Lt.readUInt32BE(st), Rt = Lt.readUInt32LE(st), Kt = N ? Ct : Rt, Gt = Kt * tt, It = Lt.slice(V, V + Ft);
                  if (Gt > 4) {
                    var re = (N ? It.readUInt32BE(0) : It.readUInt32LE(0)) - G;
                    It = O.slice(re, re + Gt);
                  }
                  var be = void 0;
                  if (k) {
                    switch (et) {
                      case 1:
                        be = It.readUInt8(0);
                        break;
                      case 2:
                        be = It.toString("ascii").replace(/\0+$/, "");
                        break;
                      case 3:
                        be = N ? It.readUInt16BE(0) : It.readUInt16LE(0);
                        break;
                      case 4:
                        be = N ? It.readUInt32BE(0) : It.readUInt32LE(0);
                        break;
                      case 5:
                        be = [];
                        for (var me = 0; me < It.length; me += 8) {
                          var le = It.readUInt32BE(me) / It.readUInt32BE(me + 4), Se = It.readUInt32LE(me) / It.readUInt32LE(me + 4);
                          be.push(N ? le : Se);
                        }
                        break;
                      case 7:
                        switch (k) {
                          case "ExifVersion":
                            be = It.toString();
                            break;
                          case "FlashPixVersion":
                            be = It.toString();
                            break;
                          case "SceneType":
                            be = It.readUInt8(0);
                            break;
                          default:
                            be = "0x" + It.toString("hex", 0, 15);
                            break;
                        }
                        break;
                      case 10: {
                        var Wt = It.readInt32BE(0) / It.readInt32BE(4), $t = It.readInt32LE(0) / It.readInt32LE(4);
                        be = N ? Wt : $t;
                        break;
                      }
                      default:
                        be = "0x" + It.toString("hex");
                        break;
                    }
                    bt[k] = be;
                  }
                }
                return bt;
              }, E = function(O) {
                var M = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, N = O;
                if (M) {
                  N = O.slice(v);
                  var G = N.readUInt16BE(0);
                  N = N.slice(0, G);
                  var ot = 2;
                  N = N.slice(ot);
                  var K = 5;
                  N = N.slice(K);
                  var nt = 1;
                  N = N.slice(nt);
                }
                var xt = 2, bt = N.toString("ascii", 0, xt) === "MM", St = 2, Dt = xt + St, Lt = N.readUInt32BE(Dt), jt = N.readUInt32LE(Dt), J = bt ? Lt : jt;
                if (N = N.slice(J), N.length > 0 && (e = D(N, o.ifd, bt, J), e.ExifIFDPointer && (N = N.slice(e.ExifIFDPointer - J), e.SubExif = D(N, o.ifd, bt, e.ExifIFDPointer)), e.GPSInfoIFDPointer)) {
                  var yt = e.GPSInfoIFDPointer;
                  N = N.slice(e.ExifIFDPointer ? yt - e.ExifIFDPointer : yt - J), e.GPSInfo = D(N, o.gps, bt, yt);
                }
              }, T = function I(O) {
                var M = P(O);
                if (M !== !1) {
                  var N = O.readUInt16BE(v);
                  switch (M) {
                    case 1:
                      E(O);
                      break;
                    default:
                      I(O.slice(v + N));
                      break;
                  }
                }
              }, C = function(O) {
                if (!O)
                  throw new Error("buffer not found");
                return e = void 0, b(O) ? (O = O.slice(u), e = {}, T(O)) : A(O) && (e = {}, E(O, !1)), e;
              }, F = function(O) {
                if (!O)
                  throw new Error("File not found");
                var M = r.default.readFileSync(O);
                return C(M);
              }, m = function(O, M) {
                e = void 0, new Promise(function(N, G) {
                  O || G(new Error("âFile not found.")), r.default.readFile(O, function(ot, K) {
                    if (ot)
                      G(ot);
                    else
                      try {
                        if (b(K)) {
                          var nt = K.slice(u);
                          e = {}, T(nt), N(e);
                        } else
                          A(K) ? (e = {}, E(K, !1), N(e)) : G(new Error("ð±Unsupport file type."));
                      } catch (xt) {
                        G(xt);
                      }
                  });
                }, function(N) {
                  M(N, void 0);
                }).then(function(N) {
                  M(void 0, N);
                }).catch(function(N) {
                  M(N, void 0);
                });
              };
              d.fromBuffer = C, d.parse = m, d.parseSync = F;
            }
          ),
          /***/
          50716: (
            /***/
            function(f) {
              f.exports = Math.abs;
            }
          ),
          /***/
          77450: (
            /***/
            function(f) {
              f.exports = Math.floor;
            }
          ),
          /***/
          3774: (
            /***/
            function(f) {
              f.exports = Math.max;
            }
          ),
          /***/
          47552: (
            /***/
            function(f) {
              f.exports = Math.min;
            }
          ),
          /***/
          75874: (
            /***/
            function(f) {
              f.exports = Math.pow;
            }
          ),
          /***/
          63249: (
            /***/
            function(f) {
              var d = function(t) {
                return t !== t;
              };
              f.exports = function(i, r) {
                return i === 0 && r === 0 ? 1 / i === 1 / r : !!(i === r || d(i) && d(r));
              };
            }
          ),
          /***/
          98527: (
            /***/
            function(f, d, t) {
              var i = t(77802), r = t(26601), n = t(63249), o = t(89636), h = t(3534), u = r(o(), Object);
              i(u, {
                getPolyfill: o,
                implementation: n,
                shim: h
              }), f.exports = u;
            }
          ),
          /***/
          89636: (
            /***/
            function(f, d, t) {
              var i = t(63249);
              f.exports = function() {
                return typeof Object.is == "function" ? Object.is : i;
              };
            }
          ),
          /***/
          3534: (
            /***/
            function(f, d, t) {
              var i = t(89636), r = t(77802);
              f.exports = function() {
                var o = i();
                return r(Object, { is: o }, {
                  is: function() {
                    return Object.is !== o;
                  }
                }), o;
              };
            }
          ),
          /***/
          48461: (
            /***/
            function(f, d, t) {
              var i;
              if (!Object.keys) {
                var r = Object.prototype.hasOwnProperty, n = Object.prototype.toString, o = t(76515), h = Object.prototype.propertyIsEnumerable, u = !h.call({ toString: null }, "toString"), l = h.call(function() {
                }, "prototype"), c = [
                  "toString",
                  "toLocaleString",
                  "valueOf",
                  "hasOwnProperty",
                  "isPrototypeOf",
                  "propertyIsEnumerable",
                  "constructor"
                ], s = function(e) {
                  var b = e.constructor;
                  return b && b.prototype === e;
                }, v = {
                  $applicationCache: !0,
                  $console: !0,
                  $external: !0,
                  $frame: !0,
                  $frameElement: !0,
                  $frames: !0,
                  $innerHeight: !0,
                  $innerWidth: !0,
                  $onmozfullscreenchange: !0,
                  $onmozfullscreenerror: !0,
                  $outerHeight: !0,
                  $outerWidth: !0,
                  $pageXOffset: !0,
                  $pageYOffset: !0,
                  $parent: !0,
                  $scrollLeft: !0,
                  $scrollTop: !0,
                  $scrollX: !0,
                  $scrollY: !0,
                  $self: !0,
                  $webkitIndexedDB: !0,
                  $webkitStorageInfo: !0,
                  $window: !0
                }, y = function() {
                  if (typeof window == "undefined")
                    return !1;
                  for (var e in window)
                    try {
                      if (!v["$" + e] && r.call(window, e) && window[e] !== null && typeof window[e] == "object")
                        try {
                          s(window[e]);
                        } catch (b) {
                          return !0;
                        }
                    } catch (b) {
                      return !0;
                    }
                  return !1;
                }(), x = function(e) {
                  if (typeof window == "undefined" || !y)
                    return s(e);
                  try {
                    return s(e);
                  } catch (b) {
                    return !1;
                  }
                };
                i = function(b) {
                  var A = b !== null && typeof b == "object", P = n.call(b) === "[object Function]", D = o(b), E = A && n.call(b) === "[object String]", T = [];
                  if (!A && !P && !D)
                    throw new TypeError("Object.keys called on a non-object");
                  var C = l && P;
                  if (E && b.length > 0 && !r.call(b, 0))
                    for (var F = 0; F < b.length; ++F)
                      T.push(String(F));
                  if (D && b.length > 0)
                    for (var m = 0; m < b.length; ++m)
                      T.push(String(m));
                  else
                    for (var I in b)
                      !(C && I === "prototype") && r.call(b, I) && T.push(String(I));
                  if (u)
                    for (var O = x(b), M = 0; M < c.length; ++M)
                      !(O && c[M] === "constructor") && r.call(b, c[M]) && T.push(c[M]);
                  return T;
                };
              }
              f.exports = i;
            }
          ),
          /***/
          35643: (
            /***/
            function(f, d, t) {
              var i = Array.prototype.slice, r = t(76515), n = Object.keys, o = n ? function(l) {
                return n(l);
              } : t(48461), h = Object.keys;
              o.shim = function() {
                if (Object.keys) {
                  var l = function() {
                    var c = Object.keys(arguments);
                    return c && c.length === arguments.length;
                  }(1, 2);
                  l || (Object.keys = function(s) {
                    return r(s) ? h(i.call(s)) : h(s);
                  });
                } else
                  Object.keys = o;
                return Object.keys || o;
              }, f.exports = o;
            }
          ),
          /***/
          76515: (
            /***/
            function(f) {
              var d = Object.prototype.toString;
              f.exports = function(i) {
                var r = d.call(i), n = r === "[object Arguments]";
                return n || (n = r !== "[object Array]" && i !== null && typeof i == "object" && typeof i.length == "number" && i.length >= 0 && d.call(i.callee) === "[object Function]"), n;
              };
            }
          ),
          /***/
          36521: (
            /***/
            function(f, d, t) {
              var i = t(35643), r = t(12843)(), n = t(22774), o = t(75846), h = n("Array.prototype.push"), u = n("Object.prototype.propertyIsEnumerable"), l = r ? o.getOwnPropertySymbols : null;
              f.exports = function(s, v) {
                if (s == null)
                  throw new TypeError("target must be an object");
                var y = o(s);
                if (arguments.length === 1)
                  return y;
                for (var x = 1; x < arguments.length; ++x) {
                  var e = o(arguments[x]), b = i(e), A = r && (o.getOwnPropertySymbols || l);
                  if (A)
                    for (var P = A(e), D = 0; D < P.length; ++D) {
                      var E = P[D];
                      u(e, E) && h(b, E);
                    }
                  for (var T = 0; T < b.length; ++T) {
                    var C = b[T];
                    if (u(e, C)) {
                      var F = e[C];
                      y[C] = F;
                    }
                  }
                }
                return y;
              };
            }
          ),
          /***/
          37596: (
            /***/
            function(f, d, t) {
              var i = t(36521), r = function() {
                if (!Object.assign)
                  return !1;
                for (var o = "abcdefghijklmnopqrst", h = o.split(""), u = {}, l = 0; l < h.length; ++l)
                  u[h[l]] = h[l];
                var c = Object.assign({}, u), s = "";
                for (var v in c)
                  s += v;
                return o !== s;
              }, n = function() {
                if (!Object.assign || !Object.preventExtensions)
                  return !1;
                var o = Object.preventExtensions({ 1: 2 });
                try {
                  Object.assign(o, "xy");
                } catch (h) {
                  return o[1] === "y";
                }
                return !1;
              };
              f.exports = function() {
                return !Object.assign || r() || n() ? i : Object.assign;
              };
            }
          ),
          /***/
          72519: (
            /***/
            function(f, d) {
              var t = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Int32Array != "undefined";
              function i(o, h) {
                return Object.prototype.hasOwnProperty.call(o, h);
              }
              d.assign = function(o) {
                for (var h = Array.prototype.slice.call(arguments, 1); h.length; ) {
                  var u = h.shift();
                  if (u) {
                    if (typeof u != "object")
                      throw new TypeError(u + "must be non-object");
                    for (var l in u)
                      i(u, l) && (o[l] = u[l]);
                  }
                }
                return o;
              }, d.shrinkBuf = function(o, h) {
                return o.length === h ? o : o.subarray ? o.subarray(0, h) : (o.length = h, o);
              };
              var r = {
                arraySet: function(o, h, u, l, c) {
                  if (h.subarray && o.subarray) {
                    o.set(h.subarray(u, u + l), c);
                    return;
                  }
                  for (var s = 0; s < l; s++)
                    o[c + s] = h[u + s];
                },
                // Join array of chunks to single array.
                flattenChunks: function(o) {
                  var h, u, l, c, s, v;
                  for (l = 0, h = 0, u = o.length; h < u; h++)
                    l += o[h].length;
                  for (v = new Uint8Array(l), c = 0, h = 0, u = o.length; h < u; h++)
                    s = o[h], v.set(s, c), c += s.length;
                  return v;
                }
              }, n = {
                arraySet: function(o, h, u, l, c) {
                  for (var s = 0; s < l; s++)
                    o[c + s] = h[u + s];
                },
                // Join array of chunks to single array.
                flattenChunks: function(o) {
                  return [].concat.apply([], o);
                }
              };
              d.setTyped = function(o) {
                o ? (d.Buf8 = Uint8Array, d.Buf16 = Uint16Array, d.Buf32 = Int32Array, d.assign(d, r)) : (d.Buf8 = Array, d.Buf16 = Array, d.Buf32 = Array, d.assign(d, n));
              }, d.setTyped(t);
            }
          ),
          /***/
          46911: (
            /***/
            function(f) {
              function d(t, i, r, n) {
                for (var o = t & 65535 | 0, h = t >>> 16 & 65535 | 0, u = 0; r !== 0; ) {
                  u = r > 2e3 ? 2e3 : r, r -= u;
                  do
                    o = o + i[n++] | 0, h = h + o | 0;
                  while (--u);
                  o %= 65521, h %= 65521;
                }
                return o | h << 16 | 0;
              }
              f.exports = d;
            }
          ),
          /***/
          81607: (
            /***/
            function(f) {
              f.exports = {
                /* Allowed flush values; see deflate() and inflate() below for details */
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                /* Return codes for the compression/decompression functions. Negative values
                * are errors, positive values are used for special but normal events.
                */
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                //Z_MEM_ERROR:     -4,
                Z_BUF_ERROR: -5,
                //Z_VERSION_ERROR: -6,
                /* compression levels */
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                /* Possible values of the data_type field (though see inflate()) */
                Z_BINARY: 0,
                Z_TEXT: 1,
                //Z_ASCII:                1, // = Z_TEXT (deprecated)
                Z_UNKNOWN: 2,
                /* The deflate compression method */
                Z_DEFLATED: 8
                //Z_NULL:                 null // Use -1 or null inline, depending on var type
              };
            }
          ),
          /***/
          99049: (
            /***/
            function(f) {
              function d() {
                for (var r, n = [], o = 0; o < 256; o++) {
                  r = o;
                  for (var h = 0; h < 8; h++)
                    r = r & 1 ? 3988292384 ^ r >>> 1 : r >>> 1;
                  n[o] = r;
                }
                return n;
              }
              var t = d();
              function i(r, n, o, h) {
                var u = t, l = h + o;
                r ^= -1;
                for (var c = h; c < l; c++)
                  r = r >>> 8 ^ u[(r ^ n[c]) & 255];
                return r ^ -1;
              }
              f.exports = i;
            }
          ),
          /***/
          22925: (
            /***/
            function(f, d, t) {
              var i = t(72519), r = t(22367), n = t(46911), o = t(99049), h = t(56228), u = 0, l = 1, c = 3, s = 4, v = 5, y = 0, x = 1, e = -2, b = -3, A = -5, P = -1, D = 1, E = 2, T = 3, C = 4, F = 0, m = 2, I = 8, O = 9, M = 15, N = 8, G = 29, ot = 256, K = ot + 1 + G, nt = 30, xt = 19, bt = 2 * K + 1, St = 15, Dt = 3, Lt = 258, jt = Lt + Dt + 1, J = 32, yt = 42, ut = 69, st = 73, wt = 91, V = 103, Ft = 113, U = 666, S = 1, k = 2, H = 3, it = 4, et = 3;
              function tt(rt, _t) {
                return rt.msg = h[_t], _t;
              }
              function Ct(rt) {
                return (rt << 1) - (rt > 4 ? 9 : 0);
              }
              function Rt(rt) {
                for (var _t = rt.length; --_t >= 0; )
                  rt[_t] = 0;
              }
              function Kt(rt) {
                var _t = rt.state, ae = _t.pending;
                ae > rt.avail_out && (ae = rt.avail_out), ae !== 0 && (i.arraySet(rt.output, _t.pending_buf, _t.pending_out, ae, rt.next_out), rt.next_out += ae, _t.pending_out += ae, rt.total_out += ae, rt.avail_out -= ae, _t.pending -= ae, _t.pending === 0 && (_t.pending_out = 0));
              }
              function Gt(rt, _t) {
                r._tr_flush_block(rt, rt.block_start >= 0 ? rt.block_start : -1, rt.strstart - rt.block_start, _t), rt.block_start = rt.strstart, Kt(rt.strm);
              }
              function It(rt, _t) {
                rt.pending_buf[rt.pending++] = _t;
              }
              function re(rt, _t) {
                rt.pending_buf[rt.pending++] = _t >>> 8 & 255, rt.pending_buf[rt.pending++] = _t & 255;
              }
              function be(rt, _t, ae, Et) {
                var Zt = rt.avail_in;
                return Zt > Et && (Zt = Et), Zt === 0 ? 0 : (rt.avail_in -= Zt, i.arraySet(_t, rt.input, rt.next_in, Zt, ae), rt.state.wrap === 1 ? rt.adler = n(rt.adler, _t, Zt, ae) : rt.state.wrap === 2 && (rt.adler = o(rt.adler, _t, Zt, ae)), rt.next_in += Zt, rt.total_in += Zt, Zt);
              }
              function me(rt, _t) {
                var ae = rt.max_chain_length, Et = rt.strstart, Zt, fe, Ue = rt.prev_length, Be = rt.nice_match, ke = rt.strstart > rt.w_size - jt ? rt.strstart - (rt.w_size - jt) : 0, He = rt.window, nn = rt.w_mask, er = rt.prev, Te = rt.strstart + Lt, Oe = He[Et + Ue - 1], Xe = He[Et + Ue];
                rt.prev_length >= rt.good_match && (ae >>= 2), Be > rt.lookahead && (Be = rt.lookahead);
                do
                  if (Zt = _t, !(He[Zt + Ue] !== Xe || He[Zt + Ue - 1] !== Oe || He[Zt] !== He[Et] || He[++Zt] !== He[Et + 1])) {
                    Et += 2, Zt++;
                    do
                      ;
                    while (He[++Et] === He[++Zt] && He[++Et] === He[++Zt] && He[++Et] === He[++Zt] && He[++Et] === He[++Zt] && He[++Et] === He[++Zt] && He[++Et] === He[++Zt] && He[++Et] === He[++Zt] && He[++Et] === He[++Zt] && Et < Te);
                    if (fe = Lt - (Te - Et), Et = Te - Lt, fe > Ue) {
                      if (rt.match_start = _t, Ue = fe, fe >= Be)
                        break;
                      Oe = He[Et + Ue - 1], Xe = He[Et + Ue];
                    }
                  }
                while ((_t = er[_t & nn]) > ke && --ae !== 0);
                return Ue <= rt.lookahead ? Ue : rt.lookahead;
              }
              function le(rt) {
                var _t = rt.w_size, ae, Et, Zt, fe, Ue;
                do {
                  if (fe = rt.window_size - rt.lookahead - rt.strstart, rt.strstart >= _t + (_t - jt)) {
                    i.arraySet(rt.window, rt.window, _t, _t, 0), rt.match_start -= _t, rt.strstart -= _t, rt.block_start -= _t, Et = rt.hash_size, ae = Et;
                    do
                      Zt = rt.head[--ae], rt.head[ae] = Zt >= _t ? Zt - _t : 0;
                    while (--Et);
                    Et = _t, ae = Et;
                    do
                      Zt = rt.prev[--ae], rt.prev[ae] = Zt >= _t ? Zt - _t : 0;
                    while (--Et);
                    fe += _t;
                  }
                  if (rt.strm.avail_in === 0)
                    break;
                  if (Et = be(rt.strm, rt.window, rt.strstart + rt.lookahead, fe), rt.lookahead += Et, rt.lookahead + rt.insert >= Dt)
                    for (Ue = rt.strstart - rt.insert, rt.ins_h = rt.window[Ue], rt.ins_h = (rt.ins_h << rt.hash_shift ^ rt.window[Ue + 1]) & rt.hash_mask; rt.insert && (rt.ins_h = (rt.ins_h << rt.hash_shift ^ rt.window[Ue + Dt - 1]) & rt.hash_mask, rt.prev[Ue & rt.w_mask] = rt.head[rt.ins_h], rt.head[rt.ins_h] = Ue, Ue++, rt.insert--, !(rt.lookahead + rt.insert < Dt)); )
                      ;
                } while (rt.lookahead < jt && rt.strm.avail_in !== 0);
              }
              function Se(rt, _t) {
                var ae = 65535;
                for (ae > rt.pending_buf_size - 5 && (ae = rt.pending_buf_size - 5); ; ) {
                  if (rt.lookahead <= 1) {
                    if (le(rt), rt.lookahead === 0 && _t === u)
                      return S;
                    if (rt.lookahead === 0)
                      break;
                  }
                  rt.strstart += rt.lookahead, rt.lookahead = 0;
                  var Et = rt.block_start + ae;
                  if ((rt.strstart === 0 || rt.strstart >= Et) && (rt.lookahead = rt.strstart - Et, rt.strstart = Et, Gt(rt, !1), rt.strm.avail_out === 0) || rt.strstart - rt.block_start >= rt.w_size - jt && (Gt(rt, !1), rt.strm.avail_out === 0))
                    return S;
                }
                return rt.insert = 0, _t === s ? (Gt(rt, !0), rt.strm.avail_out === 0 ? H : it) : (rt.strstart > rt.block_start && (Gt(rt, !1), rt.strm.avail_out === 0), S);
              }
              function Wt(rt, _t) {
                for (var ae, Et; ; ) {
                  if (rt.lookahead < jt) {
                    if (le(rt), rt.lookahead < jt && _t === u)
                      return S;
                    if (rt.lookahead === 0)
                      break;
                  }
                  if (ae = 0, rt.lookahead >= Dt && (rt.ins_h = (rt.ins_h << rt.hash_shift ^ rt.window[rt.strstart + Dt - 1]) & rt.hash_mask, ae = rt.prev[rt.strstart & rt.w_mask] = rt.head[rt.ins_h], rt.head[rt.ins_h] = rt.strstart), ae !== 0 && rt.strstart - ae <= rt.w_size - jt && (rt.match_length = me(rt, ae)), rt.match_length >= Dt)
                    if (Et = r._tr_tally(rt, rt.strstart - rt.match_start, rt.match_length - Dt), rt.lookahead -= rt.match_length, rt.match_length <= rt.max_lazy_match && rt.lookahead >= Dt) {
                      rt.match_length--;
                      do
                        rt.strstart++, rt.ins_h = (rt.ins_h << rt.hash_shift ^ rt.window[rt.strstart + Dt - 1]) & rt.hash_mask, ae = rt.prev[rt.strstart & rt.w_mask] = rt.head[rt.ins_h], rt.head[rt.ins_h] = rt.strstart;
                      while (--rt.match_length !== 0);
                      rt.strstart++;
                    } else
                      rt.strstart += rt.match_length, rt.match_length = 0, rt.ins_h = rt.window[rt.strstart], rt.ins_h = (rt.ins_h << rt.hash_shift ^ rt.window[rt.strstart + 1]) & rt.hash_mask;
                  else
                    Et = r._tr_tally(rt, 0, rt.window[rt.strstart]), rt.lookahead--, rt.strstart++;
                  if (Et && (Gt(rt, !1), rt.strm.avail_out === 0))
                    return S;
                }
                return rt.insert = rt.strstart < Dt - 1 ? rt.strstart : Dt - 1, _t === s ? (Gt(rt, !0), rt.strm.avail_out === 0 ? H : it) : rt.last_lit && (Gt(rt, !1), rt.strm.avail_out === 0) ? S : k;
              }
              function $t(rt, _t) {
                for (var ae, Et, Zt; ; ) {
                  if (rt.lookahead < jt) {
                    if (le(rt), rt.lookahead < jt && _t === u)
                      return S;
                    if (rt.lookahead === 0)
                      break;
                  }
                  if (ae = 0, rt.lookahead >= Dt && (rt.ins_h = (rt.ins_h << rt.hash_shift ^ rt.window[rt.strstart + Dt - 1]) & rt.hash_mask, ae = rt.prev[rt.strstart & rt.w_mask] = rt.head[rt.ins_h], rt.head[rt.ins_h] = rt.strstart), rt.prev_length = rt.match_length, rt.prev_match = rt.match_start, rt.match_length = Dt - 1, ae !== 0 && rt.prev_length < rt.max_lazy_match && rt.strstart - ae <= rt.w_size - jt && (rt.match_length = me(rt, ae), rt.match_length <= 5 && (rt.strategy === D || rt.match_length === Dt && rt.strstart - rt.match_start > 4096) && (rt.match_length = Dt - 1)), rt.prev_length >= Dt && rt.match_length <= rt.prev_length) {
                    Zt = rt.strstart + rt.lookahead - Dt, Et = r._tr_tally(rt, rt.strstart - 1 - rt.prev_match, rt.prev_length - Dt), rt.lookahead -= rt.prev_length - 1, rt.prev_length -= 2;
                    do
                      ++rt.strstart <= Zt && (rt.ins_h = (rt.ins_h << rt.hash_shift ^ rt.window[rt.strstart + Dt - 1]) & rt.hash_mask, ae = rt.prev[rt.strstart & rt.w_mask] = rt.head[rt.ins_h], rt.head[rt.ins_h] = rt.strstart);
                    while (--rt.prev_length !== 0);
                    if (rt.match_available = 0, rt.match_length = Dt - 1, rt.strstart++, Et && (Gt(rt, !1), rt.strm.avail_out === 0))
                      return S;
                  } else if (rt.match_available) {
                    if (Et = r._tr_tally(rt, 0, rt.window[rt.strstart - 1]), Et && Gt(rt, !1), rt.strstart++, rt.lookahead--, rt.strm.avail_out === 0)
                      return S;
                  } else
                    rt.match_available = 1, rt.strstart++, rt.lookahead--;
                }
                return rt.match_available && (Et = r._tr_tally(rt, 0, rt.window[rt.strstart - 1]), rt.match_available = 0), rt.insert = rt.strstart < Dt - 1 ? rt.strstart : Dt - 1, _t === s ? (Gt(rt, !0), rt.strm.avail_out === 0 ? H : it) : rt.last_lit && (Gt(rt, !1), rt.strm.avail_out === 0) ? S : k;
              }
              function ue(rt, _t) {
                for (var ae, Et, Zt, fe, Ue = rt.window; ; ) {
                  if (rt.lookahead <= Lt) {
                    if (le(rt), rt.lookahead <= Lt && _t === u)
                      return S;
                    if (rt.lookahead === 0)
                      break;
                  }
                  if (rt.match_length = 0, rt.lookahead >= Dt && rt.strstart > 0 && (Zt = rt.strstart - 1, Et = Ue[Zt], Et === Ue[++Zt] && Et === Ue[++Zt] && Et === Ue[++Zt])) {
                    fe = rt.strstart + Lt;
                    do
                      ;
                    while (Et === Ue[++Zt] && Et === Ue[++Zt] && Et === Ue[++Zt] && Et === Ue[++Zt] && Et === Ue[++Zt] && Et === Ue[++Zt] && Et === Ue[++Zt] && Et === Ue[++Zt] && Zt < fe);
                    rt.match_length = Lt - (fe - Zt), rt.match_length > rt.lookahead && (rt.match_length = rt.lookahead);
                  }
                  if (rt.match_length >= Dt ? (ae = r._tr_tally(rt, 1, rt.match_length - Dt), rt.lookahead -= rt.match_length, rt.strstart += rt.match_length, rt.match_length = 0) : (ae = r._tr_tally(rt, 0, rt.window[rt.strstart]), rt.lookahead--, rt.strstart++), ae && (Gt(rt, !1), rt.strm.avail_out === 0))
                    return S;
                }
                return rt.insert = 0, _t === s ? (Gt(rt, !0), rt.strm.avail_out === 0 ? H : it) : rt.last_lit && (Gt(rt, !1), rt.strm.avail_out === 0) ? S : k;
              }
              function he(rt, _t) {
                for (var ae; ; ) {
                  if (rt.lookahead === 0 && (le(rt), rt.lookahead === 0)) {
                    if (_t === u)
                      return S;
                    break;
                  }
                  if (rt.match_length = 0, ae = r._tr_tally(rt, 0, rt.window[rt.strstart]), rt.lookahead--, rt.strstart++, ae && (Gt(rt, !1), rt.strm.avail_out === 0))
                    return S;
                }
                return rt.insert = 0, _t === s ? (Gt(rt, !0), rt.strm.avail_out === 0 ? H : it) : rt.last_lit && (Gt(rt, !1), rt.strm.avail_out === 0) ? S : k;
              }
              function Ee(rt, _t, ae, Et, Zt) {
                this.good_length = rt, this.max_lazy = _t, this.nice_length = ae, this.max_chain = Et, this.func = Zt;
              }
              var Re;
              Re = [
                /*      good lazy nice chain */
                new Ee(0, 0, 0, 0, Se),
                /* 0 store only */
                new Ee(4, 4, 8, 4, Wt),
                /* 1 max speed, no lazy matches */
                new Ee(4, 5, 16, 8, Wt),
                /* 2 */
                new Ee(4, 6, 32, 32, Wt),
                /* 3 */
                new Ee(4, 4, 16, 16, $t),
                /* 4 lazy matches */
                new Ee(8, 16, 32, 32, $t),
                /* 5 */
                new Ee(8, 16, 128, 128, $t),
                /* 6 */
                new Ee(8, 32, 128, 256, $t),
                /* 7 */
                new Ee(32, 128, 258, 1024, $t),
                /* 8 */
                new Ee(32, 258, 258, 4096, $t)
                /* 9 max compression */
              ];
              function Ie(rt) {
                rt.window_size = 2 * rt.w_size, Rt(rt.head), rt.max_lazy_match = Re[rt.level].max_lazy, rt.good_match = Re[rt.level].good_length, rt.nice_match = Re[rt.level].nice_length, rt.max_chain_length = Re[rt.level].max_chain, rt.strstart = 0, rt.block_start = 0, rt.lookahead = 0, rt.insert = 0, rt.match_length = rt.prev_length = Dt - 1, rt.match_available = 0, rt.ins_h = 0;
              }
              function Ot() {
                this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = I, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new i.Buf16(bt * 2), this.dyn_dtree = new i.Buf16((2 * nt + 1) * 2), this.bl_tree = new i.Buf16((2 * xt + 1) * 2), Rt(this.dyn_ltree), Rt(this.dyn_dtree), Rt(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new i.Buf16(St + 1), this.heap = new i.Buf16(2 * K + 1), Rt(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new i.Buf16(2 * K + 1), Rt(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
              }
              function vt(rt) {
                var _t;
                return !rt || !rt.state ? tt(rt, e) : (rt.total_in = rt.total_out = 0, rt.data_type = m, _t = rt.state, _t.pending = 0, _t.pending_out = 0, _t.wrap < 0 && (_t.wrap = -_t.wrap), _t.status = _t.wrap ? yt : Ft, rt.adler = _t.wrap === 2 ? 0 : 1, _t.last_flush = u, r._tr_init(_t), y);
              }
              function W(rt) {
                var _t = vt(rt);
                return _t === y && Ie(rt.state), _t;
              }
              function Q(rt, _t) {
                return !rt || !rt.state || rt.state.wrap !== 2 ? e : (rt.state.gzhead = _t, y);
              }
              function gt(rt, _t, ae, Et, Zt, fe) {
                if (!rt)
                  return e;
                var Ue = 1;
                if (_t === P && (_t = 6), Et < 0 ? (Ue = 0, Et = -Et) : Et > 15 && (Ue = 2, Et -= 16), Zt < 1 || Zt > O || ae !== I || Et < 8 || Et > 15 || _t < 0 || _t > 9 || fe < 0 || fe > C)
                  return tt(rt, e);
                Et === 8 && (Et = 9);
                var Be = new Ot();
                return rt.state = Be, Be.strm = rt, Be.wrap = Ue, Be.gzhead = null, Be.w_bits = Et, Be.w_size = 1 << Be.w_bits, Be.w_mask = Be.w_size - 1, Be.hash_bits = Zt + 7, Be.hash_size = 1 << Be.hash_bits, Be.hash_mask = Be.hash_size - 1, Be.hash_shift = ~~((Be.hash_bits + Dt - 1) / Dt), Be.window = new i.Buf8(Be.w_size * 2), Be.head = new i.Buf16(Be.hash_size), Be.prev = new i.Buf16(Be.w_size), Be.lit_bufsize = 1 << Zt + 6, Be.pending_buf_size = Be.lit_bufsize * 4, Be.pending_buf = new i.Buf8(Be.pending_buf_size), Be.d_buf = 1 * Be.lit_bufsize, Be.l_buf = 3 * Be.lit_bufsize, Be.level = _t, Be.strategy = fe, Be.method = ae, W(rt);
              }
              function Pt(rt, _t) {
                return gt(rt, _t, I, M, N, F);
              }
              function ht(rt, _t) {
                var ae, Et, Zt, fe;
                if (!rt || !rt.state || _t > v || _t < 0)
                  return rt ? tt(rt, e) : e;
                if (Et = rt.state, !rt.output || !rt.input && rt.avail_in !== 0 || Et.status === U && _t !== s)
                  return tt(rt, rt.avail_out === 0 ? A : e);
                if (Et.strm = rt, ae = Et.last_flush, Et.last_flush = _t, Et.status === yt)
                  if (Et.wrap === 2)
                    rt.adler = 0, It(Et, 31), It(Et, 139), It(Et, 8), Et.gzhead ? (It(
                      Et,
                      (Et.gzhead.text ? 1 : 0) + (Et.gzhead.hcrc ? 2 : 0) + (Et.gzhead.extra ? 4 : 0) + (Et.gzhead.name ? 8 : 0) + (Et.gzhead.comment ? 16 : 0)
                    ), It(Et, Et.gzhead.time & 255), It(Et, Et.gzhead.time >> 8 & 255), It(Et, Et.gzhead.time >> 16 & 255), It(Et, Et.gzhead.time >> 24 & 255), It(Et, Et.level === 9 ? 2 : Et.strategy >= E || Et.level < 2 ? 4 : 0), It(Et, Et.gzhead.os & 255), Et.gzhead.extra && Et.gzhead.extra.length && (It(Et, Et.gzhead.extra.length & 255), It(Et, Et.gzhead.extra.length >> 8 & 255)), Et.gzhead.hcrc && (rt.adler = o(rt.adler, Et.pending_buf, Et.pending, 0)), Et.gzindex = 0, Et.status = ut) : (It(Et, 0), It(Et, 0), It(Et, 0), It(Et, 0), It(Et, 0), It(Et, Et.level === 9 ? 2 : Et.strategy >= E || Et.level < 2 ? 4 : 0), It(Et, et), Et.status = Ft);
                  else {
                    var Ue = I + (Et.w_bits - 8 << 4) << 8, Be = -1;
                    Et.strategy >= E || Et.level < 2 ? Be = 0 : Et.level < 6 ? Be = 1 : Et.level === 6 ? Be = 2 : Be = 3, Ue |= Be << 6, Et.strstart !== 0 && (Ue |= J), Ue += 31 - Ue % 31, Et.status = Ft, re(Et, Ue), Et.strstart !== 0 && (re(Et, rt.adler >>> 16), re(Et, rt.adler & 65535)), rt.adler = 1;
                  }
                if (Et.status === ut)
                  if (Et.gzhead.extra) {
                    for (Zt = Et.pending; Et.gzindex < (Et.gzhead.extra.length & 65535) && !(Et.pending === Et.pending_buf_size && (Et.gzhead.hcrc && Et.pending > Zt && (rt.adler = o(rt.adler, Et.pending_buf, Et.pending - Zt, Zt)), Kt(rt), Zt = Et.pending, Et.pending === Et.pending_buf_size)); )
                      It(Et, Et.gzhead.extra[Et.gzindex] & 255), Et.gzindex++;
                    Et.gzhead.hcrc && Et.pending > Zt && (rt.adler = o(rt.adler, Et.pending_buf, Et.pending - Zt, Zt)), Et.gzindex === Et.gzhead.extra.length && (Et.gzindex = 0, Et.status = st);
                  } else
                    Et.status = st;
                if (Et.status === st)
                  if (Et.gzhead.name) {
                    Zt = Et.pending;
                    do {
                      if (Et.pending === Et.pending_buf_size && (Et.gzhead.hcrc && Et.pending > Zt && (rt.adler = o(rt.adler, Et.pending_buf, Et.pending - Zt, Zt)), Kt(rt), Zt = Et.pending, Et.pending === Et.pending_buf_size)) {
                        fe = 1;
                        break;
                      }
                      Et.gzindex < Et.gzhead.name.length ? fe = Et.gzhead.name.charCodeAt(Et.gzindex++) & 255 : fe = 0, It(Et, fe);
                    } while (fe !== 0);
                    Et.gzhead.hcrc && Et.pending > Zt && (rt.adler = o(rt.adler, Et.pending_buf, Et.pending - Zt, Zt)), fe === 0 && (Et.gzindex = 0, Et.status = wt);
                  } else
                    Et.status = wt;
                if (Et.status === wt)
                  if (Et.gzhead.comment) {
                    Zt = Et.pending;
                    do {
                      if (Et.pending === Et.pending_buf_size && (Et.gzhead.hcrc && Et.pending > Zt && (rt.adler = o(rt.adler, Et.pending_buf, Et.pending - Zt, Zt)), Kt(rt), Zt = Et.pending, Et.pending === Et.pending_buf_size)) {
                        fe = 1;
                        break;
                      }
                      Et.gzindex < Et.gzhead.comment.length ? fe = Et.gzhead.comment.charCodeAt(Et.gzindex++) & 255 : fe = 0, It(Et, fe);
                    } while (fe !== 0);
                    Et.gzhead.hcrc && Et.pending > Zt && (rt.adler = o(rt.adler, Et.pending_buf, Et.pending - Zt, Zt)), fe === 0 && (Et.status = V);
                  } else
                    Et.status = V;
                if (Et.status === V && (Et.gzhead.hcrc ? (Et.pending + 2 > Et.pending_buf_size && Kt(rt), Et.pending + 2 <= Et.pending_buf_size && (It(Et, rt.adler & 255), It(Et, rt.adler >> 8 & 255), rt.adler = 0, Et.status = Ft)) : Et.status = Ft), Et.pending !== 0) {
                  if (Kt(rt), rt.avail_out === 0)
                    return Et.last_flush = -1, y;
                } else if (rt.avail_in === 0 && Ct(_t) <= Ct(ae) && _t !== s)
                  return tt(rt, A);
                if (Et.status === U && rt.avail_in !== 0)
                  return tt(rt, A);
                if (rt.avail_in !== 0 || Et.lookahead !== 0 || _t !== u && Et.status !== U) {
                  var ke = Et.strategy === E ? he(Et, _t) : Et.strategy === T ? ue(Et, _t) : Re[Et.level].func(Et, _t);
                  if ((ke === H || ke === it) && (Et.status = U), ke === S || ke === H)
                    return rt.avail_out === 0 && (Et.last_flush = -1), y;
                  if (ke === k && (_t === l ? r._tr_align(Et) : _t !== v && (r._tr_stored_block(Et, 0, 0, !1), _t === c && (Rt(Et.head), Et.lookahead === 0 && (Et.strstart = 0, Et.block_start = 0, Et.insert = 0))), Kt(rt), rt.avail_out === 0))
                    return Et.last_flush = -1, y;
                }
                return _t !== s ? y : Et.wrap <= 0 ? x : (Et.wrap === 2 ? (It(Et, rt.adler & 255), It(Et, rt.adler >> 8 & 255), It(Et, rt.adler >> 16 & 255), It(Et, rt.adler >> 24 & 255), It(Et, rt.total_in & 255), It(Et, rt.total_in >> 8 & 255), It(Et, rt.total_in >> 16 & 255), It(Et, rt.total_in >> 24 & 255)) : (re(Et, rt.adler >>> 16), re(Et, rt.adler & 65535)), Kt(rt), Et.wrap > 0 && (Et.wrap = -Et.wrap), Et.pending !== 0 ? y : x);
              }
              function Ht(rt) {
                var _t;
                return !rt || !rt.state ? e : (_t = rt.state.status, _t !== yt && _t !== ut && _t !== st && _t !== wt && _t !== V && _t !== Ft && _t !== U ? tt(rt, e) : (rt.state = null, _t === Ft ? tt(rt, b) : y));
              }
              function we(rt, _t) {
                var ae = _t.length, Et, Zt, fe, Ue, Be, ke, He, nn;
                if (!rt || !rt.state || (Et = rt.state, Ue = Et.wrap, Ue === 2 || Ue === 1 && Et.status !== yt || Et.lookahead))
                  return e;
                for (Ue === 1 && (rt.adler = n(rt.adler, _t, ae, 0)), Et.wrap = 0, ae >= Et.w_size && (Ue === 0 && (Rt(Et.head), Et.strstart = 0, Et.block_start = 0, Et.insert = 0), nn = new i.Buf8(Et.w_size), i.arraySet(nn, _t, ae - Et.w_size, Et.w_size, 0), _t = nn, ae = Et.w_size), Be = rt.avail_in, ke = rt.next_in, He = rt.input, rt.avail_in = ae, rt.next_in = 0, rt.input = _t, le(Et); Et.lookahead >= Dt; ) {
                  Zt = Et.strstart, fe = Et.lookahead - (Dt - 1);
                  do
                    Et.ins_h = (Et.ins_h << Et.hash_shift ^ Et.window[Zt + Dt - 1]) & Et.hash_mask, Et.prev[Zt & Et.w_mask] = Et.head[Et.ins_h], Et.head[Et.ins_h] = Zt, Zt++;
                  while (--fe);
                  Et.strstart = Zt, Et.lookahead = Dt - 1, le(Et);
                }
                return Et.strstart += Et.lookahead, Et.block_start = Et.strstart, Et.insert = Et.lookahead, Et.lookahead = 0, Et.match_length = Et.prev_length = Dt - 1, Et.match_available = 0, rt.next_in = ke, rt.input = He, rt.avail_in = Be, Et.wrap = Ue, y;
              }
              d.deflateInit = Pt, d.deflateInit2 = gt, d.deflateReset = W, d.deflateResetKeep = vt, d.deflateSetHeader = Q, d.deflate = ht, d.deflateEnd = Ht, d.deflateSetDictionary = we, d.deflateInfo = "pako deflate (from Nodeca project)";
            }
          ),
          /***/
          96395: (
            /***/
            function(f) {
              var d = 30, t = 12;
              f.exports = function(r, n) {
                var o, h, u, l, c, s, v, y, x, e, b, A, P, D, E, T, C, F, m, I, O, M, N, G, ot;
                o = r.state, h = r.next_in, G = r.input, u = h + (r.avail_in - 5), l = r.next_out, ot = r.output, c = l - (n - r.avail_out), s = l + (r.avail_out - 257), v = o.dmax, y = o.wsize, x = o.whave, e = o.wnext, b = o.window, A = o.hold, P = o.bits, D = o.lencode, E = o.distcode, T = (1 << o.lenbits) - 1, C = (1 << o.distbits) - 1;
                t:
                  do {
                    P < 15 && (A += G[h++] << P, P += 8, A += G[h++] << P, P += 8), F = D[A & T];
                    e:
                      for (; ; ) {
                        if (m = F >>> 24, A >>>= m, P -= m, m = F >>> 16 & 255, m === 0)
                          ot[l++] = F & 65535;
                        else if (m & 16) {
                          I = F & 65535, m &= 15, m && (P < m && (A += G[h++] << P, P += 8), I += A & (1 << m) - 1, A >>>= m, P -= m), P < 15 && (A += G[h++] << P, P += 8, A += G[h++] << P, P += 8), F = E[A & C];
                          r:
                            for (; ; ) {
                              if (m = F >>> 24, A >>>= m, P -= m, m = F >>> 16 & 255, m & 16) {
                                if (O = F & 65535, m &= 15, P < m && (A += G[h++] << P, P += 8, P < m && (A += G[h++] << P, P += 8)), O += A & (1 << m) - 1, O > v) {
                                  r.msg = "invalid distance too far back", o.mode = d;
                                  break t;
                                }
                                if (A >>>= m, P -= m, m = l - c, O > m) {
                                  if (m = O - m, m > x && o.sane) {
                                    r.msg = "invalid distance too far back", o.mode = d;
                                    break t;
                                  }
                                  if (M = 0, N = b, e === 0) {
                                    if (M += y - m, m < I) {
                                      I -= m;
                                      do
                                        ot[l++] = b[M++];
                                      while (--m);
                                      M = l - O, N = ot;
                                    }
                                  } else if (e < m) {
                                    if (M += y + e - m, m -= e, m < I) {
                                      I -= m;
                                      do
                                        ot[l++] = b[M++];
                                      while (--m);
                                      if (M = 0, e < I) {
                                        m = e, I -= m;
                                        do
                                          ot[l++] = b[M++];
                                        while (--m);
                                        M = l - O, N = ot;
                                      }
                                    }
                                  } else if (M += e - m, m < I) {
                                    I -= m;
                                    do
                                      ot[l++] = b[M++];
                                    while (--m);
                                    M = l - O, N = ot;
                                  }
                                  for (; I > 2; )
                                    ot[l++] = N[M++], ot[l++] = N[M++], ot[l++] = N[M++], I -= 3;
                                  I && (ot[l++] = N[M++], I > 1 && (ot[l++] = N[M++]));
                                } else {
                                  M = l - O;
                                  do
                                    ot[l++] = ot[M++], ot[l++] = ot[M++], ot[l++] = ot[M++], I -= 3;
                                  while (I > 2);
                                  I && (ot[l++] = ot[M++], I > 1 && (ot[l++] = ot[M++]));
                                }
                              } else if (m & 64) {
                                r.msg = "invalid distance code", o.mode = d;
                                break t;
                              } else {
                                F = E[(F & 65535) + (A & (1 << m) - 1)];
                                continue r;
                              }
                              break;
                            }
                        } else if (m & 64)
                          if (m & 32) {
                            o.mode = t;
                            break t;
                          } else {
                            r.msg = "invalid literal/length code", o.mode = d;
                            break t;
                          }
                        else {
                          F = D[(F & 65535) + (A & (1 << m) - 1)];
                          continue e;
                        }
                        break;
                      }
                  } while (h < u && l < s);
                I = P >> 3, h -= I, P -= I << 3, A &= (1 << P) - 1, r.next_in = h, r.next_out = l, r.avail_in = h < u ? 5 + (u - h) : 5 - (h - u), r.avail_out = l < s ? 257 + (s - l) : 257 - (l - s), o.hold = A, o.bits = P;
              };
            }
          ),
          /***/
          2269: (
            /***/
            function(f, d, t) {
              var i = t(72519), r = t(46911), n = t(99049), o = t(96395), h = t(92920), u = 0, l = 1, c = 2, s = 4, v = 5, y = 6, x = 0, e = 1, b = 2, A = -2, P = -3, D = -4, E = -5, T = 8, C = 1, F = 2, m = 3, I = 4, O = 5, M = 6, N = 7, G = 8, ot = 9, K = 10, nt = 11, xt = 12, bt = 13, St = 14, Dt = 15, Lt = 16, jt = 17, J = 18, yt = 19, ut = 20, st = 21, wt = 22, V = 23, Ft = 24, U = 25, S = 26, k = 27, H = 28, it = 29, et = 30, tt = 31, Ct = 32, Rt = 852, Kt = 592, Gt = 15, It = Gt;
              function re(gt) {
                return (gt >>> 24 & 255) + (gt >>> 8 & 65280) + ((gt & 65280) << 8) + ((gt & 255) << 24);
              }
              function be() {
                this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new i.Buf16(320), this.work = new i.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
              }
              function me(gt) {
                var Pt;
                return !gt || !gt.state ? A : (Pt = gt.state, gt.total_in = gt.total_out = Pt.total = 0, gt.msg = "", Pt.wrap && (gt.adler = Pt.wrap & 1), Pt.mode = C, Pt.last = 0, Pt.havedict = 0, Pt.dmax = 32768, Pt.head = null, Pt.hold = 0, Pt.bits = 0, Pt.lencode = Pt.lendyn = new i.Buf32(Rt), Pt.distcode = Pt.distdyn = new i.Buf32(Kt), Pt.sane = 1, Pt.back = -1, x);
              }
              function le(gt) {
                var Pt;
                return !gt || !gt.state ? A : (Pt = gt.state, Pt.wsize = 0, Pt.whave = 0, Pt.wnext = 0, me(gt));
              }
              function Se(gt, Pt) {
                var ht, Ht;
                return !gt || !gt.state || (Ht = gt.state, Pt < 0 ? (ht = 0, Pt = -Pt) : (ht = (Pt >> 4) + 1, Pt < 48 && (Pt &= 15)), Pt && (Pt < 8 || Pt > 15)) ? A : (Ht.window !== null && Ht.wbits !== Pt && (Ht.window = null), Ht.wrap = ht, Ht.wbits = Pt, le(gt));
              }
              function Wt(gt, Pt) {
                var ht, Ht;
                return gt ? (Ht = new be(), gt.state = Ht, Ht.window = null, ht = Se(gt, Pt), ht !== x && (gt.state = null), ht) : A;
              }
              function $t(gt) {
                return Wt(gt, It);
              }
              var ue = !0, he, Ee;
              function Re(gt) {
                if (ue) {
                  var Pt;
                  for (he = new i.Buf32(512), Ee = new i.Buf32(32), Pt = 0; Pt < 144; )
                    gt.lens[Pt++] = 8;
                  for (; Pt < 256; )
                    gt.lens[Pt++] = 9;
                  for (; Pt < 280; )
                    gt.lens[Pt++] = 7;
                  for (; Pt < 288; )
                    gt.lens[Pt++] = 8;
                  for (h(l, gt.lens, 0, 288, he, 0, gt.work, { bits: 9 }), Pt = 0; Pt < 32; )
                    gt.lens[Pt++] = 5;
                  h(c, gt.lens, 0, 32, Ee, 0, gt.work, { bits: 5 }), ue = !1;
                }
                gt.lencode = he, gt.lenbits = 9, gt.distcode = Ee, gt.distbits = 5;
              }
              function Ie(gt, Pt, ht, Ht) {
                var we, rt = gt.state;
                return rt.window === null && (rt.wsize = 1 << rt.wbits, rt.wnext = 0, rt.whave = 0, rt.window = new i.Buf8(rt.wsize)), Ht >= rt.wsize ? (i.arraySet(rt.window, Pt, ht - rt.wsize, rt.wsize, 0), rt.wnext = 0, rt.whave = rt.wsize) : (we = rt.wsize - rt.wnext, we > Ht && (we = Ht), i.arraySet(rt.window, Pt, ht - Ht, we, rt.wnext), Ht -= we, Ht ? (i.arraySet(rt.window, Pt, ht - Ht, Ht, 0), rt.wnext = Ht, rt.whave = rt.wsize) : (rt.wnext += we, rt.wnext === rt.wsize && (rt.wnext = 0), rt.whave < rt.wsize && (rt.whave += we))), 0;
              }
              function Ot(gt, Pt) {
                var ht, Ht, we, rt, _t, ae, Et, Zt, fe, Ue, Be, ke, He, nn, er = 0, Te, Oe, Xe, tr, cn, wn, nr, an, Wr = new i.Buf8(4), $r, Xr, Jn = (
                  /* permutation of code lengths */
                  [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
                );
                if (!gt || !gt.state || !gt.output || !gt.input && gt.avail_in !== 0)
                  return A;
                ht = gt.state, ht.mode === xt && (ht.mode = bt), _t = gt.next_out, we = gt.output, Et = gt.avail_out, rt = gt.next_in, Ht = gt.input, ae = gt.avail_in, Zt = ht.hold, fe = ht.bits, Ue = ae, Be = Et, an = x;
                t:
                  for (; ; )
                    switch (ht.mode) {
                      case C:
                        if (ht.wrap === 0) {
                          ht.mode = bt;
                          break;
                        }
                        for (; fe < 16; ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        if (ht.wrap & 2 && Zt === 35615) {
                          ht.check = 0, Wr[0] = Zt & 255, Wr[1] = Zt >>> 8 & 255, ht.check = n(ht.check, Wr, 2, 0), Zt = 0, fe = 0, ht.mode = F;
                          break;
                        }
                        if (ht.flags = 0, ht.head && (ht.head.done = !1), !(ht.wrap & 1) || /* check if zlib header allowed */
                        (((Zt & 255) << 8) + (Zt >> 8)) % 31) {
                          gt.msg = "incorrect header check", ht.mode = et;
                          break;
                        }
                        if ((Zt & 15) !== T) {
                          gt.msg = "unknown compression method", ht.mode = et;
                          break;
                        }
                        if (Zt >>>= 4, fe -= 4, nr = (Zt & 15) + 8, ht.wbits === 0)
                          ht.wbits = nr;
                        else if (nr > ht.wbits) {
                          gt.msg = "invalid window size", ht.mode = et;
                          break;
                        }
                        ht.dmax = 1 << nr, gt.adler = ht.check = 1, ht.mode = Zt & 512 ? K : xt, Zt = 0, fe = 0;
                        break;
                      case F:
                        for (; fe < 16; ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        if (ht.flags = Zt, (ht.flags & 255) !== T) {
                          gt.msg = "unknown compression method", ht.mode = et;
                          break;
                        }
                        if (ht.flags & 57344) {
                          gt.msg = "unknown header flags set", ht.mode = et;
                          break;
                        }
                        ht.head && (ht.head.text = Zt >> 8 & 1), ht.flags & 512 && (Wr[0] = Zt & 255, Wr[1] = Zt >>> 8 & 255, ht.check = n(ht.check, Wr, 2, 0)), Zt = 0, fe = 0, ht.mode = m;
                      case m:
                        for (; fe < 32; ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        ht.head && (ht.head.time = Zt), ht.flags & 512 && (Wr[0] = Zt & 255, Wr[1] = Zt >>> 8 & 255, Wr[2] = Zt >>> 16 & 255, Wr[3] = Zt >>> 24 & 255, ht.check = n(ht.check, Wr, 4, 0)), Zt = 0, fe = 0, ht.mode = I;
                      case I:
                        for (; fe < 16; ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        ht.head && (ht.head.xflags = Zt & 255, ht.head.os = Zt >> 8), ht.flags & 512 && (Wr[0] = Zt & 255, Wr[1] = Zt >>> 8 & 255, ht.check = n(ht.check, Wr, 2, 0)), Zt = 0, fe = 0, ht.mode = O;
                      case O:
                        if (ht.flags & 1024) {
                          for (; fe < 16; ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          ht.length = Zt, ht.head && (ht.head.extra_len = Zt), ht.flags & 512 && (Wr[0] = Zt & 255, Wr[1] = Zt >>> 8 & 255, ht.check = n(ht.check, Wr, 2, 0)), Zt = 0, fe = 0;
                        } else
                          ht.head && (ht.head.extra = null);
                        ht.mode = M;
                      case M:
                        if (ht.flags & 1024 && (ke = ht.length, ke > ae && (ke = ae), ke && (ht.head && (nr = ht.head.extra_len - ht.length, ht.head.extra || (ht.head.extra = new Array(ht.head.extra_len)), i.arraySet(
                          ht.head.extra,
                          Ht,
                          rt,
                          // extra field is limited to 65536 bytes
                          // - no need for additional size check
                          ke,
                          /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                          nr
                        )), ht.flags & 512 && (ht.check = n(ht.check, Ht, ke, rt)), ae -= ke, rt += ke, ht.length -= ke), ht.length))
                          break t;
                        ht.length = 0, ht.mode = N;
                      case N:
                        if (ht.flags & 2048) {
                          if (ae === 0)
                            break t;
                          ke = 0;
                          do
                            nr = Ht[rt + ke++], ht.head && nr && ht.length < 65536 && (ht.head.name += String.fromCharCode(nr));
                          while (nr && ke < ae);
                          if (ht.flags & 512 && (ht.check = n(ht.check, Ht, ke, rt)), ae -= ke, rt += ke, nr)
                            break t;
                        } else
                          ht.head && (ht.head.name = null);
                        ht.length = 0, ht.mode = G;
                      case G:
                        if (ht.flags & 4096) {
                          if (ae === 0)
                            break t;
                          ke = 0;
                          do
                            nr = Ht[rt + ke++], ht.head && nr && ht.length < 65536 && (ht.head.comment += String.fromCharCode(nr));
                          while (nr && ke < ae);
                          if (ht.flags & 512 && (ht.check = n(ht.check, Ht, ke, rt)), ae -= ke, rt += ke, nr)
                            break t;
                        } else
                          ht.head && (ht.head.comment = null);
                        ht.mode = ot;
                      case ot:
                        if (ht.flags & 512) {
                          for (; fe < 16; ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          if (Zt !== (ht.check & 65535)) {
                            gt.msg = "header crc mismatch", ht.mode = et;
                            break;
                          }
                          Zt = 0, fe = 0;
                        }
                        ht.head && (ht.head.hcrc = ht.flags >> 9 & 1, ht.head.done = !0), gt.adler = ht.check = 0, ht.mode = xt;
                        break;
                      case K:
                        for (; fe < 32; ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        gt.adler = ht.check = re(Zt), Zt = 0, fe = 0, ht.mode = nt;
                      case nt:
                        if (ht.havedict === 0)
                          return gt.next_out = _t, gt.avail_out = Et, gt.next_in = rt, gt.avail_in = ae, ht.hold = Zt, ht.bits = fe, b;
                        gt.adler = ht.check = 1, ht.mode = xt;
                      case xt:
                        if (Pt === v || Pt === y)
                          break t;
                      case bt:
                        if (ht.last) {
                          Zt >>>= fe & 7, fe -= fe & 7, ht.mode = k;
                          break;
                        }
                        for (; fe < 3; ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        switch (ht.last = Zt & 1, Zt >>>= 1, fe -= 1, Zt & 3) {
                          case 0:
                            ht.mode = St;
                            break;
                          case 1:
                            if (Re(ht), ht.mode = ut, Pt === y) {
                              Zt >>>= 2, fe -= 2;
                              break t;
                            }
                            break;
                          case 2:
                            ht.mode = jt;
                            break;
                          case 3:
                            gt.msg = "invalid block type", ht.mode = et;
                        }
                        Zt >>>= 2, fe -= 2;
                        break;
                      case St:
                        for (Zt >>>= fe & 7, fe -= fe & 7; fe < 32; ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        if ((Zt & 65535) !== (Zt >>> 16 ^ 65535)) {
                          gt.msg = "invalid stored block lengths", ht.mode = et;
                          break;
                        }
                        if (ht.length = Zt & 65535, Zt = 0, fe = 0, ht.mode = Dt, Pt === y)
                          break t;
                      case Dt:
                        ht.mode = Lt;
                      case Lt:
                        if (ke = ht.length, ke) {
                          if (ke > ae && (ke = ae), ke > Et && (ke = Et), ke === 0)
                            break t;
                          i.arraySet(we, Ht, rt, ke, _t), ae -= ke, rt += ke, Et -= ke, _t += ke, ht.length -= ke;
                          break;
                        }
                        ht.mode = xt;
                        break;
                      case jt:
                        for (; fe < 14; ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        if (ht.nlen = (Zt & 31) + 257, Zt >>>= 5, fe -= 5, ht.ndist = (Zt & 31) + 1, Zt >>>= 5, fe -= 5, ht.ncode = (Zt & 15) + 4, Zt >>>= 4, fe -= 4, ht.nlen > 286 || ht.ndist > 30) {
                          gt.msg = "too many length or distance symbols", ht.mode = et;
                          break;
                        }
                        ht.have = 0, ht.mode = J;
                      case J:
                        for (; ht.have < ht.ncode; ) {
                          for (; fe < 3; ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          ht.lens[Jn[ht.have++]] = Zt & 7, Zt >>>= 3, fe -= 3;
                        }
                        for (; ht.have < 19; )
                          ht.lens[Jn[ht.have++]] = 0;
                        if (ht.lencode = ht.lendyn, ht.lenbits = 7, $r = { bits: ht.lenbits }, an = h(u, ht.lens, 0, 19, ht.lencode, 0, ht.work, $r), ht.lenbits = $r.bits, an) {
                          gt.msg = "invalid code lengths set", ht.mode = et;
                          break;
                        }
                        ht.have = 0, ht.mode = yt;
                      case yt:
                        for (; ht.have < ht.nlen + ht.ndist; ) {
                          for (; er = ht.lencode[Zt & (1 << ht.lenbits) - 1], Te = er >>> 24, Oe = er >>> 16 & 255, Xe = er & 65535, !(Te <= fe); ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          if (Xe < 16)
                            Zt >>>= Te, fe -= Te, ht.lens[ht.have++] = Xe;
                          else {
                            if (Xe === 16) {
                              for (Xr = Te + 2; fe < Xr; ) {
                                if (ae === 0)
                                  break t;
                                ae--, Zt += Ht[rt++] << fe, fe += 8;
                              }
                              if (Zt >>>= Te, fe -= Te, ht.have === 0) {
                                gt.msg = "invalid bit length repeat", ht.mode = et;
                                break;
                              }
                              nr = ht.lens[ht.have - 1], ke = 3 + (Zt & 3), Zt >>>= 2, fe -= 2;
                            } else if (Xe === 17) {
                              for (Xr = Te + 3; fe < Xr; ) {
                                if (ae === 0)
                                  break t;
                                ae--, Zt += Ht[rt++] << fe, fe += 8;
                              }
                              Zt >>>= Te, fe -= Te, nr = 0, ke = 3 + (Zt & 7), Zt >>>= 3, fe -= 3;
                            } else {
                              for (Xr = Te + 7; fe < Xr; ) {
                                if (ae === 0)
                                  break t;
                                ae--, Zt += Ht[rt++] << fe, fe += 8;
                              }
                              Zt >>>= Te, fe -= Te, nr = 0, ke = 11 + (Zt & 127), Zt >>>= 7, fe -= 7;
                            }
                            if (ht.have + ke > ht.nlen + ht.ndist) {
                              gt.msg = "invalid bit length repeat", ht.mode = et;
                              break;
                            }
                            for (; ke--; )
                              ht.lens[ht.have++] = nr;
                          }
                        }
                        if (ht.mode === et)
                          break;
                        if (ht.lens[256] === 0) {
                          gt.msg = "invalid code -- missing end-of-block", ht.mode = et;
                          break;
                        }
                        if (ht.lenbits = 9, $r = { bits: ht.lenbits }, an = h(l, ht.lens, 0, ht.nlen, ht.lencode, 0, ht.work, $r), ht.lenbits = $r.bits, an) {
                          gt.msg = "invalid literal/lengths set", ht.mode = et;
                          break;
                        }
                        if (ht.distbits = 6, ht.distcode = ht.distdyn, $r = { bits: ht.distbits }, an = h(c, ht.lens, ht.nlen, ht.ndist, ht.distcode, 0, ht.work, $r), ht.distbits = $r.bits, an) {
                          gt.msg = "invalid distances set", ht.mode = et;
                          break;
                        }
                        if (ht.mode = ut, Pt === y)
                          break t;
                      case ut:
                        ht.mode = st;
                      case st:
                        if (ae >= 6 && Et >= 258) {
                          gt.next_out = _t, gt.avail_out = Et, gt.next_in = rt, gt.avail_in = ae, ht.hold = Zt, ht.bits = fe, o(gt, Be), _t = gt.next_out, we = gt.output, Et = gt.avail_out, rt = gt.next_in, Ht = gt.input, ae = gt.avail_in, Zt = ht.hold, fe = ht.bits, ht.mode === xt && (ht.back = -1);
                          break;
                        }
                        for (ht.back = 0; er = ht.lencode[Zt & (1 << ht.lenbits) - 1], Te = er >>> 24, Oe = er >>> 16 & 255, Xe = er & 65535, !(Te <= fe); ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        if (Oe && !(Oe & 240)) {
                          for (tr = Te, cn = Oe, wn = Xe; er = ht.lencode[wn + ((Zt & (1 << tr + cn) - 1) >> tr)], Te = er >>> 24, Oe = er >>> 16 & 255, Xe = er & 65535, !(tr + Te <= fe); ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          Zt >>>= tr, fe -= tr, ht.back += tr;
                        }
                        if (Zt >>>= Te, fe -= Te, ht.back += Te, ht.length = Xe, Oe === 0) {
                          ht.mode = S;
                          break;
                        }
                        if (Oe & 32) {
                          ht.back = -1, ht.mode = xt;
                          break;
                        }
                        if (Oe & 64) {
                          gt.msg = "invalid literal/length code", ht.mode = et;
                          break;
                        }
                        ht.extra = Oe & 15, ht.mode = wt;
                      case wt:
                        if (ht.extra) {
                          for (Xr = ht.extra; fe < Xr; ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          ht.length += Zt & (1 << ht.extra) - 1, Zt >>>= ht.extra, fe -= ht.extra, ht.back += ht.extra;
                        }
                        ht.was = ht.length, ht.mode = V;
                      case V:
                        for (; er = ht.distcode[Zt & (1 << ht.distbits) - 1], Te = er >>> 24, Oe = er >>> 16 & 255, Xe = er & 65535, !(Te <= fe); ) {
                          if (ae === 0)
                            break t;
                          ae--, Zt += Ht[rt++] << fe, fe += 8;
                        }
                        if (!(Oe & 240)) {
                          for (tr = Te, cn = Oe, wn = Xe; er = ht.distcode[wn + ((Zt & (1 << tr + cn) - 1) >> tr)], Te = er >>> 24, Oe = er >>> 16 & 255, Xe = er & 65535, !(tr + Te <= fe); ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          Zt >>>= tr, fe -= tr, ht.back += tr;
                        }
                        if (Zt >>>= Te, fe -= Te, ht.back += Te, Oe & 64) {
                          gt.msg = "invalid distance code", ht.mode = et;
                          break;
                        }
                        ht.offset = Xe, ht.extra = Oe & 15, ht.mode = Ft;
                      case Ft:
                        if (ht.extra) {
                          for (Xr = ht.extra; fe < Xr; ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          ht.offset += Zt & (1 << ht.extra) - 1, Zt >>>= ht.extra, fe -= ht.extra, ht.back += ht.extra;
                        }
                        if (ht.offset > ht.dmax) {
                          gt.msg = "invalid distance too far back", ht.mode = et;
                          break;
                        }
                        ht.mode = U;
                      case U:
                        if (Et === 0)
                          break t;
                        if (ke = Be - Et, ht.offset > ke) {
                          if (ke = ht.offset - ke, ke > ht.whave && ht.sane) {
                            gt.msg = "invalid distance too far back", ht.mode = et;
                            break;
                          }
                          ke > ht.wnext ? (ke -= ht.wnext, He = ht.wsize - ke) : He = ht.wnext - ke, ke > ht.length && (ke = ht.length), nn = ht.window;
                        } else
                          nn = we, He = _t - ht.offset, ke = ht.length;
                        ke > Et && (ke = Et), Et -= ke, ht.length -= ke;
                        do
                          we[_t++] = nn[He++];
                        while (--ke);
                        ht.length === 0 && (ht.mode = st);
                        break;
                      case S:
                        if (Et === 0)
                          break t;
                        we[_t++] = ht.length, Et--, ht.mode = st;
                        break;
                      case k:
                        if (ht.wrap) {
                          for (; fe < 32; ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt |= Ht[rt++] << fe, fe += 8;
                          }
                          if (Be -= Et, gt.total_out += Be, ht.total += Be, Be && (gt.adler = ht.check = /*UPDATE(state.check, put - _out, _out);*/
                          ht.flags ? n(ht.check, we, Be, _t - Be) : r(ht.check, we, Be, _t - Be)), Be = Et, (ht.flags ? Zt : re(Zt)) !== ht.check) {
                            gt.msg = "incorrect data check", ht.mode = et;
                            break;
                          }
                          Zt = 0, fe = 0;
                        }
                        ht.mode = H;
                      case H:
                        if (ht.wrap && ht.flags) {
                          for (; fe < 32; ) {
                            if (ae === 0)
                              break t;
                            ae--, Zt += Ht[rt++] << fe, fe += 8;
                          }
                          if (Zt !== (ht.total & 4294967295)) {
                            gt.msg = "incorrect length check", ht.mode = et;
                            break;
                          }
                          Zt = 0, fe = 0;
                        }
                        ht.mode = it;
                      case it:
                        an = e;
                        break t;
                      case et:
                        an = P;
                        break t;
                      case tt:
                        return D;
                      case Ct:
                      default:
                        return A;
                    }
                return gt.next_out = _t, gt.avail_out = Et, gt.next_in = rt, gt.avail_in = ae, ht.hold = Zt, ht.bits = fe, (ht.wsize || Be !== gt.avail_out && ht.mode < et && (ht.mode < k || Pt !== s)) && Ie(gt, gt.output, gt.next_out, Be - gt.avail_out), Ue -= gt.avail_in, Be -= gt.avail_out, gt.total_in += Ue, gt.total_out += Be, ht.total += Be, ht.wrap && Be && (gt.adler = ht.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
                ht.flags ? n(ht.check, we, Be, gt.next_out - Be) : r(ht.check, we, Be, gt.next_out - Be)), gt.data_type = ht.bits + (ht.last ? 64 : 0) + (ht.mode === xt ? 128 : 0) + (ht.mode === ut || ht.mode === Dt ? 256 : 0), (Ue === 0 && Be === 0 || Pt === s) && an === x && (an = E), an;
              }
              function vt(gt) {
                if (!gt || !gt.state)
                  return A;
                var Pt = gt.state;
                return Pt.window && (Pt.window = null), gt.state = null, x;
              }
              function W(gt, Pt) {
                var ht;
                return !gt || !gt.state || (ht = gt.state, !(ht.wrap & 2)) ? A : (ht.head = Pt, Pt.done = !1, x);
              }
              function Q(gt, Pt) {
                var ht = Pt.length, Ht, we, rt;
                return !gt || !gt.state || (Ht = gt.state, Ht.wrap !== 0 && Ht.mode !== nt) ? A : Ht.mode === nt && (we = 1, we = r(we, Pt, ht, 0), we !== Ht.check) ? P : (rt = Ie(gt, Pt, ht, ht), rt ? (Ht.mode = tt, D) : (Ht.havedict = 1, x));
              }
              d.inflateReset = le, d.inflateReset2 = Se, d.inflateResetKeep = me, d.inflateInit = $t, d.inflateInit2 = Wt, d.inflate = Ot, d.inflateEnd = vt, d.inflateGetHeader = W, d.inflateSetDictionary = Q, d.inflateInfo = "pako inflate (from Nodeca project)";
            }
          ),
          /***/
          92920: (
            /***/
            function(f, d, t) {
              var i = t(72519), r = 15, n = 852, o = 592, h = 0, u = 1, l = 2, c = [
                /* Length codes 257..285 base */
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                13,
                15,
                17,
                19,
                23,
                27,
                31,
                35,
                43,
                51,
                59,
                67,
                83,
                99,
                115,
                131,
                163,
                195,
                227,
                258,
                0,
                0
              ], s = [
                /* Length codes 257..285 extra */
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                16,
                72,
                78
              ], v = [
                /* Distance codes 0..29 base */
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577,
                0,
                0
              ], y = [
                /* Distance codes 0..29 extra */
                16,
                16,
                16,
                16,
                17,
                17,
                18,
                18,
                19,
                19,
                20,
                20,
                21,
                21,
                22,
                22,
                23,
                23,
                24,
                24,
                25,
                25,
                26,
                26,
                27,
                27,
                28,
                28,
                29,
                29,
                64,
                64
              ];
              f.exports = function(e, b, A, P, D, E, T, C) {
                var F = C.bits, m = 0, I = 0, O = 0, M = 0, N = 0, G = 0, ot = 0, K = 0, nt = 0, xt = 0, bt, St, Dt, Lt, jt, J = null, yt = 0, ut, st = new i.Buf16(r + 1), wt = new i.Buf16(r + 1), V = null, Ft = 0, U, S, k;
                for (m = 0; m <= r; m++)
                  st[m] = 0;
                for (I = 0; I < P; I++)
                  st[b[A + I]]++;
                for (N = F, M = r; M >= 1 && st[M] === 0; M--)
                  ;
                if (N > M && (N = M), M === 0)
                  return D[E++] = 20971520, D[E++] = 20971520, C.bits = 1, 0;
                for (O = 1; O < M && st[O] === 0; O++)
                  ;
                for (N < O && (N = O), K = 1, m = 1; m <= r; m++)
                  if (K <<= 1, K -= st[m], K < 0)
                    return -1;
                if (K > 0 && (e === h || M !== 1))
                  return -1;
                for (wt[1] = 0, m = 1; m < r; m++)
                  wt[m + 1] = wt[m] + st[m];
                for (I = 0; I < P; I++)
                  b[A + I] !== 0 && (T[wt[b[A + I]]++] = I);
                if (e === h ? (J = V = T, ut = 19) : e === u ? (J = c, yt -= 257, V = s, Ft -= 257, ut = 256) : (J = v, V = y, ut = -1), xt = 0, I = 0, m = O, jt = E, G = N, ot = 0, Dt = -1, nt = 1 << N, Lt = nt - 1, e === u && nt > n || e === l && nt > o)
                  return 1;
                for (; ; ) {
                  U = m - ot, T[I] < ut ? (S = 0, k = T[I]) : T[I] > ut ? (S = V[Ft + T[I]], k = J[yt + T[I]]) : (S = 96, k = 0), bt = 1 << m - ot, St = 1 << G, O = St;
                  do
                    St -= bt, D[jt + (xt >> ot) + St] = U << 24 | S << 16 | k | 0;
                  while (St !== 0);
                  for (bt = 1 << m - 1; xt & bt; )
                    bt >>= 1;
                  if (bt !== 0 ? (xt &= bt - 1, xt += bt) : xt = 0, I++, --st[m] === 0) {
                    if (m === M)
                      break;
                    m = b[A + T[I]];
                  }
                  if (m > N && (xt & Lt) !== Dt) {
                    for (ot === 0 && (ot = N), jt += O, G = m - ot, K = 1 << G; G + ot < M && (K -= st[G + ot], !(K <= 0)); )
                      G++, K <<= 1;
                    if (nt += 1 << G, e === u && nt > n || e === l && nt > o)
                      return 1;
                    Dt = xt & Lt, D[Dt] = N << 24 | G << 16 | jt - E | 0;
                  }
                }
                return xt !== 0 && (D[jt + xt] = m - ot << 24 | 4194304 | 0), C.bits = N, 0;
              };
            }
          ),
          /***/
          56228: (
            /***/
            function(f) {
              f.exports = {
                2: "need dictionary",
                /* Z_NEED_DICT       2  */
                1: "stream end",
                /* Z_STREAM_END      1  */
                0: "",
                /* Z_OK              0  */
                "-1": "file error",
                /* Z_ERRNO         (-1) */
                "-2": "stream error",
                /* Z_STREAM_ERROR  (-2) */
                "-3": "data error",
                /* Z_DATA_ERROR    (-3) */
                "-4": "insufficient memory",
                /* Z_MEM_ERROR     (-4) */
                "-5": "buffer error",
                /* Z_BUF_ERROR     (-5) */
                "-6": "incompatible version"
                /* Z_VERSION_ERROR (-6) */
              };
            }
          ),
          /***/
          22367: (
            /***/
            function(f, d, t) {
              var i = t(72519), r = 4, n = 0, o = 1, h = 2;
              function u(Ot) {
                for (var vt = Ot.length; --vt >= 0; )
                  Ot[vt] = 0;
              }
              var l = 0, c = 1, s = 2, v = 3, y = 258, x = 29, e = 256, b = e + 1 + x, A = 30, P = 19, D = 2 * b + 1, E = 15, T = 16, C = 7, F = 256, m = 16, I = 17, O = 18, M = (
                /* extra bits for each length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
              ), N = (
                /* extra bits for each distance code */
                [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
              ), G = (
                /* extra bits for each bit length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
              ), ot = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], K = 512, nt = new Array((b + 2) * 2);
              u(nt);
              var xt = new Array(A * 2);
              u(xt);
              var bt = new Array(K);
              u(bt);
              var St = new Array(y - v + 1);
              u(St);
              var Dt = new Array(x);
              u(Dt);
              var Lt = new Array(A);
              u(Lt);
              function jt(Ot, vt, W, Q, gt) {
                this.static_tree = Ot, this.extra_bits = vt, this.extra_base = W, this.elems = Q, this.max_length = gt, this.has_stree = Ot && Ot.length;
              }
              var J, yt, ut;
              function st(Ot, vt) {
                this.dyn_tree = Ot, this.max_code = 0, this.stat_desc = vt;
              }
              function wt(Ot) {
                return Ot < 256 ? bt[Ot] : bt[256 + (Ot >>> 7)];
              }
              function V(Ot, vt) {
                Ot.pending_buf[Ot.pending++] = vt & 255, Ot.pending_buf[Ot.pending++] = vt >>> 8 & 255;
              }
              function Ft(Ot, vt, W) {
                Ot.bi_valid > T - W ? (Ot.bi_buf |= vt << Ot.bi_valid & 65535, V(Ot, Ot.bi_buf), Ot.bi_buf = vt >> T - Ot.bi_valid, Ot.bi_valid += W - T) : (Ot.bi_buf |= vt << Ot.bi_valid & 65535, Ot.bi_valid += W);
              }
              function U(Ot, vt, W) {
                Ft(
                  Ot,
                  W[vt * 2],
                  W[vt * 2 + 1]
                  /*.Len*/
                );
              }
              function S(Ot, vt) {
                var W = 0;
                do
                  W |= Ot & 1, Ot >>>= 1, W <<= 1;
                while (--vt > 0);
                return W >>> 1;
              }
              function k(Ot) {
                Ot.bi_valid === 16 ? (V(Ot, Ot.bi_buf), Ot.bi_buf = 0, Ot.bi_valid = 0) : Ot.bi_valid >= 8 && (Ot.pending_buf[Ot.pending++] = Ot.bi_buf & 255, Ot.bi_buf >>= 8, Ot.bi_valid -= 8);
              }
              function H(Ot, vt) {
                var W = vt.dyn_tree, Q = vt.max_code, gt = vt.stat_desc.static_tree, Pt = vt.stat_desc.has_stree, ht = vt.stat_desc.extra_bits, Ht = vt.stat_desc.extra_base, we = vt.stat_desc.max_length, rt, _t, ae, Et, Zt, fe, Ue = 0;
                for (Et = 0; Et <= E; Et++)
                  Ot.bl_count[Et] = 0;
                for (W[Ot.heap[Ot.heap_max] * 2 + 1] = 0, rt = Ot.heap_max + 1; rt < D; rt++)
                  _t = Ot.heap[rt], Et = W[W[_t * 2 + 1] * 2 + 1] + 1, Et > we && (Et = we, Ue++), W[_t * 2 + 1] = Et, !(_t > Q) && (Ot.bl_count[Et]++, Zt = 0, _t >= Ht && (Zt = ht[_t - Ht]), fe = W[_t * 2], Ot.opt_len += fe * (Et + Zt), Pt && (Ot.static_len += fe * (gt[_t * 2 + 1] + Zt)));
                if (Ue !== 0) {
                  do {
                    for (Et = we - 1; Ot.bl_count[Et] === 0; )
                      Et--;
                    Ot.bl_count[Et]--, Ot.bl_count[Et + 1] += 2, Ot.bl_count[we]--, Ue -= 2;
                  } while (Ue > 0);
                  for (Et = we; Et !== 0; Et--)
                    for (_t = Ot.bl_count[Et]; _t !== 0; )
                      ae = Ot.heap[--rt], !(ae > Q) && (W[ae * 2 + 1] !== Et && (Ot.opt_len += (Et - W[ae * 2 + 1]) * W[ae * 2], W[ae * 2 + 1] = Et), _t--);
                }
              }
              function it(Ot, vt, W) {
                var Q = new Array(E + 1), gt = 0, Pt, ht;
                for (Pt = 1; Pt <= E; Pt++)
                  Q[Pt] = gt = gt + W[Pt - 1] << 1;
                for (ht = 0; ht <= vt; ht++) {
                  var Ht = Ot[ht * 2 + 1];
                  Ht !== 0 && (Ot[ht * 2] = S(Q[Ht]++, Ht));
                }
              }
              function et() {
                var Ot, vt, W, Q, gt, Pt = new Array(E + 1);
                for (W = 0, Q = 0; Q < x - 1; Q++)
                  for (Dt[Q] = W, Ot = 0; Ot < 1 << M[Q]; Ot++)
                    St[W++] = Q;
                for (St[W - 1] = Q, gt = 0, Q = 0; Q < 16; Q++)
                  for (Lt[Q] = gt, Ot = 0; Ot < 1 << N[Q]; Ot++)
                    bt[gt++] = Q;
                for (gt >>= 7; Q < A; Q++)
                  for (Lt[Q] = gt << 7, Ot = 0; Ot < 1 << N[Q] - 7; Ot++)
                    bt[256 + gt++] = Q;
                for (vt = 0; vt <= E; vt++)
                  Pt[vt] = 0;
                for (Ot = 0; Ot <= 143; )
                  nt[Ot * 2 + 1] = 8, Ot++, Pt[8]++;
                for (; Ot <= 255; )
                  nt[Ot * 2 + 1] = 9, Ot++, Pt[9]++;
                for (; Ot <= 279; )
                  nt[Ot * 2 + 1] = 7, Ot++, Pt[7]++;
                for (; Ot <= 287; )
                  nt[Ot * 2 + 1] = 8, Ot++, Pt[8]++;
                for (it(nt, b + 1, Pt), Ot = 0; Ot < A; Ot++)
                  xt[Ot * 2 + 1] = 5, xt[Ot * 2] = S(Ot, 5);
                J = new jt(nt, M, e + 1, b, E), yt = new jt(xt, N, 0, A, E), ut = new jt(new Array(0), G, 0, P, C);
              }
              function tt(Ot) {
                var vt;
                for (vt = 0; vt < b; vt++)
                  Ot.dyn_ltree[vt * 2] = 0;
                for (vt = 0; vt < A; vt++)
                  Ot.dyn_dtree[vt * 2] = 0;
                for (vt = 0; vt < P; vt++)
                  Ot.bl_tree[vt * 2] = 0;
                Ot.dyn_ltree[F * 2] = 1, Ot.opt_len = Ot.static_len = 0, Ot.last_lit = Ot.matches = 0;
              }
              function Ct(Ot) {
                Ot.bi_valid > 8 ? V(Ot, Ot.bi_buf) : Ot.bi_valid > 0 && (Ot.pending_buf[Ot.pending++] = Ot.bi_buf), Ot.bi_buf = 0, Ot.bi_valid = 0;
              }
              function Rt(Ot, vt, W, Q) {
                Ct(Ot), Q && (V(Ot, W), V(Ot, ~W)), i.arraySet(Ot.pending_buf, Ot.window, vt, W, Ot.pending), Ot.pending += W;
              }
              function Kt(Ot, vt, W, Q) {
                var gt = vt * 2, Pt = W * 2;
                return Ot[gt] < Ot[Pt] || Ot[gt] === Ot[Pt] && Q[vt] <= Q[W];
              }
              function Gt(Ot, vt, W) {
                for (var Q = Ot.heap[W], gt = W << 1; gt <= Ot.heap_len && (gt < Ot.heap_len && Kt(vt, Ot.heap[gt + 1], Ot.heap[gt], Ot.depth) && gt++, !Kt(vt, Q, Ot.heap[gt], Ot.depth)); )
                  Ot.heap[W] = Ot.heap[gt], W = gt, gt <<= 1;
                Ot.heap[W] = Q;
              }
              function It(Ot, vt, W) {
                var Q, gt, Pt = 0, ht, Ht;
                if (Ot.last_lit !== 0)
                  do
                    Q = Ot.pending_buf[Ot.d_buf + Pt * 2] << 8 | Ot.pending_buf[Ot.d_buf + Pt * 2 + 1], gt = Ot.pending_buf[Ot.l_buf + Pt], Pt++, Q === 0 ? U(Ot, gt, vt) : (ht = St[gt], U(Ot, ht + e + 1, vt), Ht = M[ht], Ht !== 0 && (gt -= Dt[ht], Ft(Ot, gt, Ht)), Q--, ht = wt(Q), U(Ot, ht, W), Ht = N[ht], Ht !== 0 && (Q -= Lt[ht], Ft(Ot, Q, Ht)));
                  while (Pt < Ot.last_lit);
                U(Ot, F, vt);
              }
              function re(Ot, vt) {
                var W = vt.dyn_tree, Q = vt.stat_desc.static_tree, gt = vt.stat_desc.has_stree, Pt = vt.stat_desc.elems, ht, Ht, we = -1, rt;
                for (Ot.heap_len = 0, Ot.heap_max = D, ht = 0; ht < Pt; ht++)
                  W[ht * 2] !== 0 ? (Ot.heap[++Ot.heap_len] = we = ht, Ot.depth[ht] = 0) : W[ht * 2 + 1] = 0;
                for (; Ot.heap_len < 2; )
                  rt = Ot.heap[++Ot.heap_len] = we < 2 ? ++we : 0, W[rt * 2] = 1, Ot.depth[rt] = 0, Ot.opt_len--, gt && (Ot.static_len -= Q[rt * 2 + 1]);
                for (vt.max_code = we, ht = Ot.heap_len >> 1; ht >= 1; ht--)
                  Gt(Ot, W, ht);
                rt = Pt;
                do
                  ht = Ot.heap[
                    1
                    /*SMALLEST*/
                  ], Ot.heap[
                    1
                    /*SMALLEST*/
                  ] = Ot.heap[Ot.heap_len--], Gt(
                    Ot,
                    W,
                    1
                    /*SMALLEST*/
                  ), Ht = Ot.heap[
                    1
                    /*SMALLEST*/
                  ], Ot.heap[--Ot.heap_max] = ht, Ot.heap[--Ot.heap_max] = Ht, W[rt * 2] = W[ht * 2] + W[Ht * 2], Ot.depth[rt] = (Ot.depth[ht] >= Ot.depth[Ht] ? Ot.depth[ht] : Ot.depth[Ht]) + 1, W[ht * 2 + 1] = W[Ht * 2 + 1] = rt, Ot.heap[
                    1
                    /*SMALLEST*/
                  ] = rt++, Gt(
                    Ot,
                    W,
                    1
                    /*SMALLEST*/
                  );
                while (Ot.heap_len >= 2);
                Ot.heap[--Ot.heap_max] = Ot.heap[
                  1
                  /*SMALLEST*/
                ], H(Ot, vt), it(W, we, Ot.bl_count);
              }
              function be(Ot, vt, W) {
                var Q, gt = -1, Pt, ht = vt[0 * 2 + 1], Ht = 0, we = 7, rt = 4;
                for (ht === 0 && (we = 138, rt = 3), vt[(W + 1) * 2 + 1] = 65535, Q = 0; Q <= W; Q++)
                  Pt = ht, ht = vt[(Q + 1) * 2 + 1], !(++Ht < we && Pt === ht) && (Ht < rt ? Ot.bl_tree[Pt * 2] += Ht : Pt !== 0 ? (Pt !== gt && Ot.bl_tree[Pt * 2]++, Ot.bl_tree[m * 2]++) : Ht <= 10 ? Ot.bl_tree[I * 2]++ : Ot.bl_tree[O * 2]++, Ht = 0, gt = Pt, ht === 0 ? (we = 138, rt = 3) : Pt === ht ? (we = 6, rt = 3) : (we = 7, rt = 4));
              }
              function me(Ot, vt, W) {
                var Q, gt = -1, Pt, ht = vt[0 * 2 + 1], Ht = 0, we = 7, rt = 4;
                for (ht === 0 && (we = 138, rt = 3), Q = 0; Q <= W; Q++)
                  if (Pt = ht, ht = vt[(Q + 1) * 2 + 1], !(++Ht < we && Pt === ht)) {
                    if (Ht < rt)
                      do
                        U(Ot, Pt, Ot.bl_tree);
                      while (--Ht !== 0);
                    else
                      Pt !== 0 ? (Pt !== gt && (U(Ot, Pt, Ot.bl_tree), Ht--), U(Ot, m, Ot.bl_tree), Ft(Ot, Ht - 3, 2)) : Ht <= 10 ? (U(Ot, I, Ot.bl_tree), Ft(Ot, Ht - 3, 3)) : (U(Ot, O, Ot.bl_tree), Ft(Ot, Ht - 11, 7));
                    Ht = 0, gt = Pt, ht === 0 ? (we = 138, rt = 3) : Pt === ht ? (we = 6, rt = 3) : (we = 7, rt = 4);
                  }
              }
              function le(Ot) {
                var vt;
                for (be(Ot, Ot.dyn_ltree, Ot.l_desc.max_code), be(Ot, Ot.dyn_dtree, Ot.d_desc.max_code), re(Ot, Ot.bl_desc), vt = P - 1; vt >= 3 && Ot.bl_tree[ot[vt] * 2 + 1] === 0; vt--)
                  ;
                return Ot.opt_len += 3 * (vt + 1) + 5 + 5 + 4, vt;
              }
              function Se(Ot, vt, W, Q) {
                var gt;
                for (Ft(Ot, vt - 257, 5), Ft(Ot, W - 1, 5), Ft(Ot, Q - 4, 4), gt = 0; gt < Q; gt++)
                  Ft(Ot, Ot.bl_tree[ot[gt] * 2 + 1], 3);
                me(Ot, Ot.dyn_ltree, vt - 1), me(Ot, Ot.dyn_dtree, W - 1);
              }
              function Wt(Ot) {
                var vt = 4093624447, W;
                for (W = 0; W <= 31; W++, vt >>>= 1)
                  if (vt & 1 && Ot.dyn_ltree[W * 2] !== 0)
                    return n;
                if (Ot.dyn_ltree[18] !== 0 || Ot.dyn_ltree[20] !== 0 || Ot.dyn_ltree[26] !== 0)
                  return o;
                for (W = 32; W < e; W++)
                  if (Ot.dyn_ltree[W * 2] !== 0)
                    return o;
                return n;
              }
              var $t = !1;
              function ue(Ot) {
                $t || (et(), $t = !0), Ot.l_desc = new st(Ot.dyn_ltree, J), Ot.d_desc = new st(Ot.dyn_dtree, yt), Ot.bl_desc = new st(Ot.bl_tree, ut), Ot.bi_buf = 0, Ot.bi_valid = 0, tt(Ot);
              }
              function he(Ot, vt, W, Q) {
                Ft(Ot, (l << 1) + (Q ? 1 : 0), 3), Rt(Ot, vt, W, !0);
              }
              function Ee(Ot) {
                Ft(Ot, c << 1, 3), U(Ot, F, nt), k(Ot);
              }
              function Re(Ot, vt, W, Q) {
                var gt, Pt, ht = 0;
                Ot.level > 0 ? (Ot.strm.data_type === h && (Ot.strm.data_type = Wt(Ot)), re(Ot, Ot.l_desc), re(Ot, Ot.d_desc), ht = le(Ot), gt = Ot.opt_len + 3 + 7 >>> 3, Pt = Ot.static_len + 3 + 7 >>> 3, Pt <= gt && (gt = Pt)) : gt = Pt = W + 5, W + 4 <= gt && vt !== -1 ? he(Ot, vt, W, Q) : Ot.strategy === r || Pt === gt ? (Ft(Ot, (c << 1) + (Q ? 1 : 0), 3), It(Ot, nt, xt)) : (Ft(Ot, (s << 1) + (Q ? 1 : 0), 3), Se(Ot, Ot.l_desc.max_code + 1, Ot.d_desc.max_code + 1, ht + 1), It(Ot, Ot.dyn_ltree, Ot.dyn_dtree)), tt(Ot), Q && Ct(Ot);
              }
              function Ie(Ot, vt, W) {
                return Ot.pending_buf[Ot.d_buf + Ot.last_lit * 2] = vt >>> 8 & 255, Ot.pending_buf[Ot.d_buf + Ot.last_lit * 2 + 1] = vt & 255, Ot.pending_buf[Ot.l_buf + Ot.last_lit] = W & 255, Ot.last_lit++, vt === 0 ? Ot.dyn_ltree[W * 2]++ : (Ot.matches++, vt--, Ot.dyn_ltree[(St[W] + e + 1) * 2]++, Ot.dyn_dtree[wt(vt) * 2]++), Ot.last_lit === Ot.lit_bufsize - 1;
              }
              d._tr_init = ue, d._tr_stored_block = he, d._tr_flush_block = Re, d._tr_tally = Ie, d._tr_align = Ee;
            }
          ),
          /***/
          37468: (
            /***/
            function(f) {
              function d() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
              }
              f.exports = d;
            }
          ),
          /***/
          10884: (
            /***/
            function(f) {
              f.exports = [
                "Float32Array",
                "Float64Array",
                "Int8Array",
                "Int16Array",
                "Int32Array",
                "Uint8Array",
                "Uint8ClampedArray",
                "Uint16Array",
                "Uint32Array",
                "BigInt64Array",
                "BigUint64Array"
              ];
            }
          ),
          /***/
          9964: (
            /***/
            function(f) {
              var d = f.exports = {}, t, i;
              function r() {
                throw new Error("setTimeout has not been defined");
              }
              function n() {
                throw new Error("clearTimeout has not been defined");
              }
              (function() {
                try {
                  typeof setTimeout == "function" ? t = setTimeout : t = r;
                } catch (b) {
                  t = r;
                }
                try {
                  typeof clearTimeout == "function" ? i = clearTimeout : i = n;
                } catch (b) {
                  i = n;
                }
              })();
              function o(b) {
                if (t === setTimeout)
                  return setTimeout(b, 0);
                if ((t === r || !t) && setTimeout)
                  return t = setTimeout, setTimeout(b, 0);
                try {
                  return t(b, 0);
                } catch (A) {
                  try {
                    return t.call(null, b, 0);
                  } catch (P) {
                    return t.call(this, b, 0);
                  }
                }
              }
              function h(b) {
                if (i === clearTimeout)
                  return clearTimeout(b);
                if ((i === n || !i) && clearTimeout)
                  return i = clearTimeout, clearTimeout(b);
                try {
                  return i(b);
                } catch (A) {
                  try {
                    return i.call(null, b);
                  } catch (P) {
                    return i.call(this, b);
                  }
                }
              }
              var u = [], l = !1, c, s = -1;
              function v() {
                !l || !c || (l = !1, c.length ? u = c.concat(u) : s = -1, u.length && y());
              }
              function y() {
                if (!l) {
                  var b = o(v);
                  l = !0;
                  for (var A = u.length; A; ) {
                    for (c = u, u = []; ++s < A; )
                      c && c[s].run();
                    s = -1, A = u.length;
                  }
                  c = null, l = !1, h(b);
                }
              }
              d.nextTick = function(b) {
                var A = new Array(arguments.length - 1);
                if (arguments.length > 1)
                  for (var P = 1; P < arguments.length; P++)
                    A[P - 1] = arguments[P];
                u.push(new x(b, A)), u.length === 1 && !l && o(y);
              };
              function x(b, A) {
                this.fun = b, this.array = A;
              }
              x.prototype.run = function() {
                this.fun.apply(null, this.array);
              }, d.title = "browser", d.browser = !0, d.env = {}, d.argv = [], d.version = "", d.versions = {};
              function e() {
              }
              d.on = e, d.addListener = e, d.once = e, d.off = e, d.removeListener = e, d.removeAllListeners = e, d.emit = e, d.prependListener = e, d.prependOnceListener = e, d.listeners = function(b) {
                return [];
              }, d.binding = function(b) {
                throw new Error("process.binding is not supported");
              }, d.cwd = function() {
                return "/";
              }, d.chdir = function(b) {
                throw new Error("process.chdir is not supported");
              }, d.umask = function() {
                return 0;
              };
            }
          ),
          /***/
          83089: (
            /***/
            function(f, d, t) {
              var i = t(95304), r = t(96785), n = Object;
              f.exports = i(function() {
                if (this == null || this !== n(this))
                  throw new r("RegExp.prototype.flags getter called on non-object");
                var h = "";
                return this.hasIndices && (h += "d"), this.global && (h += "g"), this.ignoreCase && (h += "i"), this.multiline && (h += "m"), this.dotAll && (h += "s"), this.unicode && (h += "u"), this.unicodeSets && (h += "v"), this.sticky && (h += "y"), h;
              }, "get flags", !0);
            }
          ),
          /***/
          64607: (
            /***/
            function(f, d, t) {
              var i = t(77802), r = t(26601), n = t(83089), o = t(7844), h = t(51374), u = r(o());
              i(u, {
                getPolyfill: o,
                implementation: n,
                shim: h
              }), f.exports = u;
            }
          ),
          /***/
          7844: (
            /***/
            function(f, d, t) {
              var i = t(83089), r = t(77802).supportsDescriptors, n = Object.getOwnPropertyDescriptor;
              f.exports = function() {
                if (r && /a/mig.flags === "gim") {
                  var h = n(RegExp.prototype, "flags");
                  if (h && typeof h.get == "function" && "dotAll" in RegExp.prototype && "hasIndices" in RegExp.prototype) {
                    var u = "", l = {};
                    if (Object.defineProperty(l, "hasIndices", {
                      get: function() {
                        u += "d";
                      }
                    }), Object.defineProperty(l, "sticky", {
                      get: function() {
                        u += "y";
                      }
                    }), h.get.call(l), u === "dy")
                      return h.get;
                  }
                }
                return i;
              };
            }
          ),
          /***/
          51374: (
            /***/
            function(f, d, t) {
              var i = t(77802).supportsDescriptors, r = t(7844), n = Object.getOwnPropertyDescriptor, o = Object.defineProperty, h = TypeError, u = Object.getPrototypeOf, l = /a/;
              f.exports = function() {
                if (!i || !u)
                  throw new h("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");
                var s = r(), v = u(l), y = n(v, "flags");
                return (!y || y.get !== s) && o(v, "flags", {
                  configurable: !0,
                  enumerable: !1,
                  get: s
                }), s;
              };
            }
          ),
          /***/
          61733: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer;
              (function(r) {
                r.parser = function(U, S) {
                  return new o(U, S);
                }, r.SAXParser = o, r.SAXStream = y, r.createStream = v, r.MAX_BUFFER_LENGTH = 65536;
                var n = [
                  "comment",
                  "sgmlDecl",
                  "textNode",
                  "tagName",
                  "doctype",
                  "procInstName",
                  "procInstBody",
                  "entity",
                  "attribName",
                  "attribValue",
                  "cdata",
                  "script"
                ];
                r.EVENTS = [
                  "text",
                  "processinginstruction",
                  "sgmldeclaration",
                  "doctype",
                  "comment",
                  "opentagstart",
                  "attribute",
                  "opentag",
                  "closetag",
                  "opencdata",
                  "cdata",
                  "closecdata",
                  "error",
                  "end",
                  "ready",
                  "script",
                  "opennamespace",
                  "closenamespace"
                ];
                function o(U, S) {
                  if (!(this instanceof o))
                    return new o(U, S);
                  var k = this;
                  u(k), k.q = k.c = "", k.bufferCheckPosition = r.MAX_BUFFER_LENGTH, k.opt = S || {}, k.opt.lowercase = k.opt.lowercase || k.opt.lowercasetags, k.looseCase = k.opt.lowercase ? "toLowerCase" : "toUpperCase", k.tags = [], k.closed = k.closedRoot = k.sawRoot = !1, k.tag = k.error = null, k.strict = !!U, k.noscript = !!(U || k.opt.noscript), k.state = N.BEGIN, k.strictEntities = k.opt.strictEntities, k.ENTITIES = k.strictEntities ? Object.create(r.XML_ENTITIES) : Object.create(r.ENTITIES), k.attribList = [], k.opt.xmlns && (k.ns = Object.create(P)), k.opt.unquotedAttributeValues === void 0 && (k.opt.unquotedAttributeValues = !U), k.trackPosition = k.opt.position !== !1, k.trackPosition && (k.position = k.line = k.column = 0), ot(k, "onready");
                }
                Object.create || (Object.create = function(U) {
                  function S() {
                  }
                  S.prototype = U;
                  var k = new S();
                  return k;
                }), Object.keys || (Object.keys = function(U) {
                  var S = [];
                  for (var k in U)
                    U.hasOwnProperty(k) && S.push(k);
                  return S;
                });
                function h(U) {
                  for (var S = Math.max(r.MAX_BUFFER_LENGTH, 10), k = 0, H = 0, it = n.length; H < it; H++) {
                    var et = U[n[H]].length;
                    if (et > S)
                      switch (n[H]) {
                        case "textNode":
                          nt(U);
                          break;
                        case "cdata":
                          K(U, "oncdata", U.cdata), U.cdata = "";
                          break;
                        case "script":
                          K(U, "onscript", U.script), U.script = "";
                          break;
                        default:
                          bt(U, "Max buffer length exceeded: " + n[H]);
                      }
                    k = Math.max(k, et);
                  }
                  var tt = r.MAX_BUFFER_LENGTH - k;
                  U.bufferCheckPosition = tt + U.position;
                }
                function u(U) {
                  for (var S = 0, k = n.length; S < k; S++)
                    U[n[S]] = "";
                }
                function l(U) {
                  nt(U), U.cdata !== "" && (K(U, "oncdata", U.cdata), U.cdata = ""), U.script !== "" && (K(U, "onscript", U.script), U.script = "");
                }
                o.prototype = {
                  end: function() {
                    St(this);
                  },
                  write: Ft,
                  resume: function() {
                    return this.error = null, this;
                  },
                  close: function() {
                    return this.write(null);
                  },
                  flush: function() {
                    l(this);
                  }
                };
                var c;
                try {
                  c = t(9760).Stream;
                } catch (U) {
                  c = function() {
                  };
                }
                c || (c = function() {
                });
                var s = r.EVENTS.filter(function(U) {
                  return U !== "error" && U !== "end";
                });
                function v(U, S) {
                  return new y(U, S);
                }
                function y(U, S) {
                  if (!(this instanceof y))
                    return new y(U, S);
                  c.apply(this), this._parser = new o(U, S), this.writable = !0, this.readable = !0;
                  var k = this;
                  this._parser.onend = function() {
                    k.emit("end");
                  }, this._parser.onerror = function(H) {
                    k.emit("error", H), k._parser.error = null;
                  }, this._decoder = null, s.forEach(function(H) {
                    Object.defineProperty(k, "on" + H, {
                      get: function() {
                        return k._parser["on" + H];
                      },
                      set: function(it) {
                        if (!it)
                          return k.removeAllListeners(H), k._parser["on" + H] = it, it;
                        k.on(H, it);
                      },
                      enumerable: !0,
                      configurable: !1
                    });
                  });
                }
                y.prototype = Object.create(c.prototype, {
                  constructor: {
                    value: y
                  }
                }), y.prototype.write = function(U) {
                  if (typeof i == "function" && typeof i.isBuffer == "function" && i.isBuffer(U)) {
                    if (!this._decoder) {
                      var S = t(43143).I;
                      this._decoder = new S("utf8");
                    }
                    U = this._decoder.write(U);
                  }
                  return this._parser.write(U.toString()), this.emit("data", U), !0;
                }, y.prototype.end = function(U) {
                  return U && U.length && this.write(U), this._parser.end(), !0;
                }, y.prototype.on = function(U, S) {
                  var k = this;
                  return !k._parser["on" + U] && s.indexOf(U) !== -1 && (k._parser["on" + U] = function() {
                    var H = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);
                    H.splice(0, 0, U), k.emit.apply(k, H);
                  }), c.prototype.on.call(k, U, S);
                };
                var x = "[CDATA[", e = "DOCTYPE", b = "http://www.w3.org/XML/1998/namespace", A = "http://www.w3.org/2000/xmlns/", P = { xml: b, xmlns: A }, D = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, E = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/, T = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, C = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;
                function F(U) {
                  return U === " " || U === `
` || U === "\r" || U === "	";
                }
                function m(U) {
                  return U === '"' || U === "'";
                }
                function I(U) {
                  return U === ">" || F(U);
                }
                function O(U, S) {
                  return U.test(S);
                }
                function M(U, S) {
                  return !O(U, S);
                }
                var N = 0;
                r.STATE = {
                  BEGIN: N++,
                  // leading byte order mark or whitespace
                  BEGIN_WHITESPACE: N++,
                  // leading whitespace
                  TEXT: N++,
                  // general stuff
                  TEXT_ENTITY: N++,
                  // &amp and such.
                  OPEN_WAKA: N++,
                  // <
                  SGML_DECL: N++,
                  // <!BLARG
                  SGML_DECL_QUOTED: N++,
                  // <!BLARG foo "bar
                  DOCTYPE: N++,
                  // <!DOCTYPE
                  DOCTYPE_QUOTED: N++,
                  // <!DOCTYPE "//blah
                  DOCTYPE_DTD: N++,
                  // <!DOCTYPE "//blah" [ ...
                  DOCTYPE_DTD_QUOTED: N++,
                  // <!DOCTYPE "//blah" [ "foo
                  COMMENT_STARTING: N++,
                  // <!-
                  COMMENT: N++,
                  // <!--
                  COMMENT_ENDING: N++,
                  // <!-- blah -
                  COMMENT_ENDED: N++,
                  // <!-- blah --
                  CDATA: N++,
                  // <![CDATA[ something
                  CDATA_ENDING: N++,
                  // ]
                  CDATA_ENDING_2: N++,
                  // ]]
                  PROC_INST: N++,
                  // <?hi
                  PROC_INST_BODY: N++,
                  // <?hi there
                  PROC_INST_ENDING: N++,
                  // <?hi "there" ?
                  OPEN_TAG: N++,
                  // <strong
                  OPEN_TAG_SLASH: N++,
                  // <strong /
                  ATTRIB: N++,
                  // <a
                  ATTRIB_NAME: N++,
                  // <a foo
                  ATTRIB_NAME_SAW_WHITE: N++,
                  // <a foo _
                  ATTRIB_VALUE: N++,
                  // <a foo=
                  ATTRIB_VALUE_QUOTED: N++,
                  // <a foo="bar
                  ATTRIB_VALUE_CLOSED: N++,
                  // <a foo="bar"
                  ATTRIB_VALUE_UNQUOTED: N++,
                  // <a foo=bar
                  ATTRIB_VALUE_ENTITY_Q: N++,
                  // <foo bar="&quot;"
                  ATTRIB_VALUE_ENTITY_U: N++,
                  // <foo bar=&quot
                  CLOSE_TAG: N++,
                  // </a
                  CLOSE_TAG_SAW_WHITE: N++,
                  // </a   >
                  SCRIPT: N++,
                  // <script> ...
                  SCRIPT_ENDING: N++
                  // <script> ... <
                }, r.XML_ENTITIES = {
                  amp: "&",
                  gt: ">",
                  lt: "<",
                  quot: '"',
                  apos: "'"
                }, r.ENTITIES = {
                  amp: "&",
                  gt: ">",
                  lt: "<",
                  quot: '"',
                  apos: "'",
                  AElig: 198,
                  Aacute: 193,
                  Acirc: 194,
                  Agrave: 192,
                  Aring: 197,
                  Atilde: 195,
                  Auml: 196,
                  Ccedil: 199,
                  ETH: 208,
                  Eacute: 201,
                  Ecirc: 202,
                  Egrave: 200,
                  Euml: 203,
                  Iacute: 205,
                  Icirc: 206,
                  Igrave: 204,
                  Iuml: 207,
                  Ntilde: 209,
                  Oacute: 211,
                  Ocirc: 212,
                  Ograve: 210,
                  Oslash: 216,
                  Otilde: 213,
                  Ouml: 214,
                  THORN: 222,
                  Uacute: 218,
                  Ucirc: 219,
                  Ugrave: 217,
                  Uuml: 220,
                  Yacute: 221,
                  aacute: 225,
                  acirc: 226,
                  aelig: 230,
                  agrave: 224,
                  aring: 229,
                  atilde: 227,
                  auml: 228,
                  ccedil: 231,
                  eacute: 233,
                  ecirc: 234,
                  egrave: 232,
                  eth: 240,
                  euml: 235,
                  iacute: 237,
                  icirc: 238,
                  igrave: 236,
                  iuml: 239,
                  ntilde: 241,
                  oacute: 243,
                  ocirc: 244,
                  ograve: 242,
                  oslash: 248,
                  otilde: 245,
                  ouml: 246,
                  szlig: 223,
                  thorn: 254,
                  uacute: 250,
                  ucirc: 251,
                  ugrave: 249,
                  uuml: 252,
                  yacute: 253,
                  yuml: 255,
                  copy: 169,
                  reg: 174,
                  nbsp: 160,
                  iexcl: 161,
                  cent: 162,
                  pound: 163,
                  curren: 164,
                  yen: 165,
                  brvbar: 166,
                  sect: 167,
                  uml: 168,
                  ordf: 170,
                  laquo: 171,
                  not: 172,
                  shy: 173,
                  macr: 175,
                  deg: 176,
                  plusmn: 177,
                  sup1: 185,
                  sup2: 178,
                  sup3: 179,
                  acute: 180,
                  micro: 181,
                  para: 182,
                  middot: 183,
                  cedil: 184,
                  ordm: 186,
                  raquo: 187,
                  frac14: 188,
                  frac12: 189,
                  frac34: 190,
                  iquest: 191,
                  times: 215,
                  divide: 247,
                  OElig: 338,
                  oelig: 339,
                  Scaron: 352,
                  scaron: 353,
                  Yuml: 376,
                  fnof: 402,
                  circ: 710,
                  tilde: 732,
                  Alpha: 913,
                  Beta: 914,
                  Gamma: 915,
                  Delta: 916,
                  Epsilon: 917,
                  Zeta: 918,
                  Eta: 919,
                  Theta: 920,
                  Iota: 921,
                  Kappa: 922,
                  Lambda: 923,
                  Mu: 924,
                  Nu: 925,
                  Xi: 926,
                  Omicron: 927,
                  Pi: 928,
                  Rho: 929,
                  Sigma: 931,
                  Tau: 932,
                  Upsilon: 933,
                  Phi: 934,
                  Chi: 935,
                  Psi: 936,
                  Omega: 937,
                  alpha: 945,
                  beta: 946,
                  gamma: 947,
                  delta: 948,
                  epsilon: 949,
                  zeta: 950,
                  eta: 951,
                  theta: 952,
                  iota: 953,
                  kappa: 954,
                  lambda: 955,
                  mu: 956,
                  nu: 957,
                  xi: 958,
                  omicron: 959,
                  pi: 960,
                  rho: 961,
                  sigmaf: 962,
                  sigma: 963,
                  tau: 964,
                  upsilon: 965,
                  phi: 966,
                  chi: 967,
                  psi: 968,
                  omega: 969,
                  thetasym: 977,
                  upsih: 978,
                  piv: 982,
                  ensp: 8194,
                  emsp: 8195,
                  thinsp: 8201,
                  zwnj: 8204,
                  zwj: 8205,
                  lrm: 8206,
                  rlm: 8207,
                  ndash: 8211,
                  mdash: 8212,
                  lsquo: 8216,
                  rsquo: 8217,
                  sbquo: 8218,
                  ldquo: 8220,
                  rdquo: 8221,
                  bdquo: 8222,
                  dagger: 8224,
                  Dagger: 8225,
                  bull: 8226,
                  hellip: 8230,
                  permil: 8240,
                  prime: 8242,
                  Prime: 8243,
                  lsaquo: 8249,
                  rsaquo: 8250,
                  oline: 8254,
                  frasl: 8260,
                  euro: 8364,
                  image: 8465,
                  weierp: 8472,
                  real: 8476,
                  trade: 8482,
                  alefsym: 8501,
                  larr: 8592,
                  uarr: 8593,
                  rarr: 8594,
                  darr: 8595,
                  harr: 8596,
                  crarr: 8629,
                  lArr: 8656,
                  uArr: 8657,
                  rArr: 8658,
                  dArr: 8659,
                  hArr: 8660,
                  forall: 8704,
                  part: 8706,
                  exist: 8707,
                  empty: 8709,
                  nabla: 8711,
                  isin: 8712,
                  notin: 8713,
                  ni: 8715,
                  prod: 8719,
                  sum: 8721,
                  minus: 8722,
                  lowast: 8727,
                  radic: 8730,
                  prop: 8733,
                  infin: 8734,
                  ang: 8736,
                  and: 8743,
                  or: 8744,
                  cap: 8745,
                  cup: 8746,
                  int: 8747,
                  there4: 8756,
                  sim: 8764,
                  cong: 8773,
                  asymp: 8776,
                  ne: 8800,
                  equiv: 8801,
                  le: 8804,
                  ge: 8805,
                  sub: 8834,
                  sup: 8835,
                  nsub: 8836,
                  sube: 8838,
                  supe: 8839,
                  oplus: 8853,
                  otimes: 8855,
                  perp: 8869,
                  sdot: 8901,
                  lceil: 8968,
                  rceil: 8969,
                  lfloor: 8970,
                  rfloor: 8971,
                  lang: 9001,
                  rang: 9002,
                  loz: 9674,
                  spades: 9824,
                  clubs: 9827,
                  hearts: 9829,
                  diams: 9830
                }, Object.keys(r.ENTITIES).forEach(function(U) {
                  var S = r.ENTITIES[U], k = typeof S == "number" ? String.fromCharCode(S) : S;
                  r.ENTITIES[U] = k;
                });
                for (var G in r.STATE)
                  r.STATE[r.STATE[G]] = G;
                N = r.STATE;
                function ot(U, S, k) {
                  U[S] && U[S](k);
                }
                function K(U, S, k) {
                  U.textNode && nt(U), ot(U, S, k);
                }
                function nt(U) {
                  U.textNode = xt(U.opt, U.textNode), U.textNode && ot(U, "ontext", U.textNode), U.textNode = "";
                }
                function xt(U, S) {
                  return U.trim && (S = S.trim()), U.normalize && (S = S.replace(/\s+/g, " ")), S;
                }
                function bt(U, S) {
                  return nt(U), U.trackPosition && (S += `
Line: ` + U.line + `
Column: ` + U.column + `
Char: ` + U.c), S = new Error(S), U.error = S, ot(U, "onerror", S), U;
                }
                function St(U) {
                  return U.sawRoot && !U.closedRoot && Dt(U, "Unclosed root tag"), U.state !== N.BEGIN && U.state !== N.BEGIN_WHITESPACE && U.state !== N.TEXT && bt(U, "Unexpected end"), nt(U), U.c = "", U.closed = !0, ot(U, "onend"), o.call(U, U.strict, U.opt), U;
                }
                function Dt(U, S) {
                  if (typeof U != "object" || !(U instanceof o))
                    throw new Error("bad call to strictFail");
                  U.strict && bt(U, S);
                }
                function Lt(U) {
                  U.strict || (U.tagName = U.tagName[U.looseCase]());
                  var S = U.tags[U.tags.length - 1] || U, k = U.tag = { name: U.tagName, attributes: {} };
                  U.opt.xmlns && (k.ns = S.ns), U.attribList.length = 0, K(U, "onopentagstart", k);
                }
                function jt(U, S) {
                  var k = U.indexOf(":"), H = k < 0 ? ["", U] : U.split(":"), it = H[0], et = H[1];
                  return S && U === "xmlns" && (it = "xmlns", et = ""), { prefix: it, local: et };
                }
                function J(U) {
                  if (U.strict || (U.attribName = U.attribName[U.looseCase]()), U.attribList.indexOf(U.attribName) !== -1 || U.tag.attributes.hasOwnProperty(U.attribName)) {
                    U.attribName = U.attribValue = "";
                    return;
                  }
                  if (U.opt.xmlns) {
                    var S = jt(U.attribName, !0), k = S.prefix, H = S.local;
                    if (k === "xmlns")
                      if (H === "xml" && U.attribValue !== b)
                        Dt(
                          U,
                          "xml: prefix must be bound to " + b + `
Actual: ` + U.attribValue
                        );
                      else if (H === "xmlns" && U.attribValue !== A)
                        Dt(
                          U,
                          "xmlns: prefix must be bound to " + A + `
Actual: ` + U.attribValue
                        );
                      else {
                        var it = U.tag, et = U.tags[U.tags.length - 1] || U;
                        it.ns === et.ns && (it.ns = Object.create(et.ns)), it.ns[H] = U.attribValue;
                      }
                    U.attribList.push([U.attribName, U.attribValue]);
                  } else
                    U.tag.attributes[U.attribName] = U.attribValue, K(U, "onattribute", {
                      name: U.attribName,
                      value: U.attribValue
                    });
                  U.attribName = U.attribValue = "";
                }
                function yt(U, S) {
                  if (U.opt.xmlns) {
                    var k = U.tag, H = jt(U.tagName);
                    k.prefix = H.prefix, k.local = H.local, k.uri = k.ns[H.prefix] || "", k.prefix && !k.uri && (Dt(U, "Unbound namespace prefix: " + JSON.stringify(U.tagName)), k.uri = H.prefix);
                    var it = U.tags[U.tags.length - 1] || U;
                    k.ns && it.ns !== k.ns && Object.keys(k.ns).forEach(function(le) {
                      K(U, "onopennamespace", {
                        prefix: le,
                        uri: k.ns[le]
                      });
                    });
                    for (var et = 0, tt = U.attribList.length; et < tt; et++) {
                      var Ct = U.attribList[et], Rt = Ct[0], Kt = Ct[1], Gt = jt(Rt, !0), It = Gt.prefix, re = Gt.local, be = It === "" ? "" : k.ns[It] || "", me = {
                        name: Rt,
                        value: Kt,
                        prefix: It,
                        local: re,
                        uri: be
                      };
                      It && It !== "xmlns" && !be && (Dt(U, "Unbound namespace prefix: " + JSON.stringify(It)), me.uri = It), U.tag.attributes[Rt] = me, K(U, "onattribute", me);
                    }
                    U.attribList.length = 0;
                  }
                  U.tag.isSelfClosing = !!S, U.sawRoot = !0, U.tags.push(U.tag), K(U, "onopentag", U.tag), S || (!U.noscript && U.tagName.toLowerCase() === "script" ? U.state = N.SCRIPT : U.state = N.TEXT, U.tag = null, U.tagName = ""), U.attribName = U.attribValue = "", U.attribList.length = 0;
                }
                function ut(U) {
                  if (!U.tagName) {
                    Dt(U, "Weird empty close tag."), U.textNode += "</>", U.state = N.TEXT;
                    return;
                  }
                  if (U.script) {
                    if (U.tagName !== "script") {
                      U.script += "</" + U.tagName + ">", U.tagName = "", U.state = N.SCRIPT;
                      return;
                    }
                    K(U, "onscript", U.script), U.script = "";
                  }
                  var S = U.tags.length, k = U.tagName;
                  U.strict || (k = k[U.looseCase]());
                  for (var H = k; S--; ) {
                    var it = U.tags[S];
                    if (it.name !== H)
                      Dt(U, "Unexpected close tag");
                    else
                      break;
                  }
                  if (S < 0) {
                    Dt(U, "Unmatched closing tag: " + U.tagName), U.textNode += "</" + U.tagName + ">", U.state = N.TEXT;
                    return;
                  }
                  U.tagName = k;
                  for (var et = U.tags.length; et-- > S; ) {
                    var tt = U.tag = U.tags.pop();
                    U.tagName = U.tag.name, K(U, "onclosetag", U.tagName);
                    var Ct = {};
                    for (var Rt in tt.ns)
                      Ct[Rt] = tt.ns[Rt];
                    var Kt = U.tags[U.tags.length - 1] || U;
                    U.opt.xmlns && tt.ns !== Kt.ns && Object.keys(tt.ns).forEach(function(Gt) {
                      var It = tt.ns[Gt];
                      K(U, "onclosenamespace", { prefix: Gt, uri: It });
                    });
                  }
                  S === 0 && (U.closedRoot = !0), U.tagName = U.attribValue = U.attribName = "", U.attribList.length = 0, U.state = N.TEXT;
                }
                function st(U) {
                  var S = U.entity, k = S.toLowerCase(), H, it = "";
                  return U.ENTITIES[S] ? U.ENTITIES[S] : U.ENTITIES[k] ? U.ENTITIES[k] : (S = k, S.charAt(0) === "#" && (S.charAt(1) === "x" ? (S = S.slice(2), H = parseInt(S, 16), it = H.toString(16)) : (S = S.slice(1), H = parseInt(S, 10), it = H.toString(10))), S = S.replace(/^0+/, ""), isNaN(H) || it.toLowerCase() !== S ? (Dt(U, "Invalid character entity"), "&" + U.entity + ";") : String.fromCodePoint(H));
                }
                function wt(U, S) {
                  S === "<" ? (U.state = N.OPEN_WAKA, U.startTagPosition = U.position) : F(S) || (Dt(U, "Non-whitespace before first tag."), U.textNode = S, U.state = N.TEXT);
                }
                function V(U, S) {
                  var k = "";
                  return S < U.length && (k = U.charAt(S)), k;
                }
                function Ft(U) {
                  var S = this;
                  if (this.error)
                    throw this.error;
                  if (S.closed)
                    return bt(
                      S,
                      "Cannot write after close. Assign an onready handler."
                    );
                  if (U === null)
                    return St(S);
                  typeof U == "object" && (U = U.toString());
                  for (var k = 0, H = ""; H = V(U, k++), S.c = H, !!H; )
                    switch (S.trackPosition && (S.position++, H === `
` ? (S.line++, S.column = 0) : S.column++), S.state) {
                      case N.BEGIN:
                        if (S.state = N.BEGIN_WHITESPACE, H === "\uFEFF")
                          continue;
                        wt(S, H);
                        continue;
                      case N.BEGIN_WHITESPACE:
                        wt(S, H);
                        continue;
                      case N.TEXT:
                        if (S.sawRoot && !S.closedRoot) {
                          for (var it = k - 1; H && H !== "<" && H !== "&"; )
                            H = V(U, k++), H && S.trackPosition && (S.position++, H === `
` ? (S.line++, S.column = 0) : S.column++);
                          S.textNode += U.substring(it, k - 1);
                        }
                        H === "<" && !(S.sawRoot && S.closedRoot && !S.strict) ? (S.state = N.OPEN_WAKA, S.startTagPosition = S.position) : (!F(H) && (!S.sawRoot || S.closedRoot) && Dt(S, "Text data outside of root node."), H === "&" ? S.state = N.TEXT_ENTITY : S.textNode += H);
                        continue;
                      case N.SCRIPT:
                        H === "<" ? S.state = N.SCRIPT_ENDING : S.script += H;
                        continue;
                      case N.SCRIPT_ENDING:
                        H === "/" ? S.state = N.CLOSE_TAG : (S.script += "<" + H, S.state = N.SCRIPT);
                        continue;
                      case N.OPEN_WAKA:
                        if (H === "!")
                          S.state = N.SGML_DECL, S.sgmlDecl = "";
                        else if (!F(H))
                          if (O(D, H))
                            S.state = N.OPEN_TAG, S.tagName = H;
                          else if (H === "/")
                            S.state = N.CLOSE_TAG, S.tagName = "";
                          else if (H === "?")
                            S.state = N.PROC_INST, S.procInstName = S.procInstBody = "";
                          else {
                            if (Dt(S, "Unencoded <"), S.startTagPosition + 1 < S.position) {
                              var et = S.position - S.startTagPosition;
                              H = new Array(et).join(" ") + H;
                            }
                            S.textNode += "<" + H, S.state = N.TEXT;
                          }
                        continue;
                      case N.SGML_DECL:
                        if (S.sgmlDecl + H === "--") {
                          S.state = N.COMMENT, S.comment = "", S.sgmlDecl = "";
                          continue;
                        }
                        S.doctype && S.doctype !== !0 && S.sgmlDecl ? (S.state = N.DOCTYPE_DTD, S.doctype += "<!" + S.sgmlDecl + H, S.sgmlDecl = "") : (S.sgmlDecl + H).toUpperCase() === x ? (K(S, "onopencdata"), S.state = N.CDATA, S.sgmlDecl = "", S.cdata = "") : (S.sgmlDecl + H).toUpperCase() === e ? (S.state = N.DOCTYPE, (S.doctype || S.sawRoot) && Dt(
                          S,
                          "Inappropriately located doctype declaration"
                        ), S.doctype = "", S.sgmlDecl = "") : H === ">" ? (K(S, "onsgmldeclaration", S.sgmlDecl), S.sgmlDecl = "", S.state = N.TEXT) : (m(H) && (S.state = N.SGML_DECL_QUOTED), S.sgmlDecl += H);
                        continue;
                      case N.SGML_DECL_QUOTED:
                        H === S.q && (S.state = N.SGML_DECL, S.q = ""), S.sgmlDecl += H;
                        continue;
                      case N.DOCTYPE:
                        H === ">" ? (S.state = N.TEXT, K(S, "ondoctype", S.doctype), S.doctype = !0) : (S.doctype += H, H === "[" ? S.state = N.DOCTYPE_DTD : m(H) && (S.state = N.DOCTYPE_QUOTED, S.q = H));
                        continue;
                      case N.DOCTYPE_QUOTED:
                        S.doctype += H, H === S.q && (S.q = "", S.state = N.DOCTYPE);
                        continue;
                      case N.DOCTYPE_DTD:
                        H === "]" ? (S.doctype += H, S.state = N.DOCTYPE) : H === "<" ? (S.state = N.OPEN_WAKA, S.startTagPosition = S.position) : m(H) ? (S.doctype += H, S.state = N.DOCTYPE_DTD_QUOTED, S.q = H) : S.doctype += H;
                        continue;
                      case N.DOCTYPE_DTD_QUOTED:
                        S.doctype += H, H === S.q && (S.state = N.DOCTYPE_DTD, S.q = "");
                        continue;
                      case N.COMMENT:
                        H === "-" ? S.state = N.COMMENT_ENDING : S.comment += H;
                        continue;
                      case N.COMMENT_ENDING:
                        H === "-" ? (S.state = N.COMMENT_ENDED, S.comment = xt(S.opt, S.comment), S.comment && K(S, "oncomment", S.comment), S.comment = "") : (S.comment += "-" + H, S.state = N.COMMENT);
                        continue;
                      case N.COMMENT_ENDED:
                        H !== ">" ? (Dt(S, "Malformed comment"), S.comment += "--" + H, S.state = N.COMMENT) : S.doctype && S.doctype !== !0 ? S.state = N.DOCTYPE_DTD : S.state = N.TEXT;
                        continue;
                      case N.CDATA:
                        H === "]" ? S.state = N.CDATA_ENDING : S.cdata += H;
                        continue;
                      case N.CDATA_ENDING:
                        H === "]" ? S.state = N.CDATA_ENDING_2 : (S.cdata += "]" + H, S.state = N.CDATA);
                        continue;
                      case N.CDATA_ENDING_2:
                        H === ">" ? (S.cdata && K(S, "oncdata", S.cdata), K(S, "onclosecdata"), S.cdata = "", S.state = N.TEXT) : H === "]" ? S.cdata += "]" : (S.cdata += "]]" + H, S.state = N.CDATA);
                        continue;
                      case N.PROC_INST:
                        H === "?" ? S.state = N.PROC_INST_ENDING : F(H) ? S.state = N.PROC_INST_BODY : S.procInstName += H;
                        continue;
                      case N.PROC_INST_BODY:
                        if (!S.procInstBody && F(H))
                          continue;
                        H === "?" ? S.state = N.PROC_INST_ENDING : S.procInstBody += H;
                        continue;
                      case N.PROC_INST_ENDING:
                        H === ">" ? (K(S, "onprocessinginstruction", {
                          name: S.procInstName,
                          body: S.procInstBody
                        }), S.procInstName = S.procInstBody = "", S.state = N.TEXT) : (S.procInstBody += "?" + H, S.state = N.PROC_INST_BODY);
                        continue;
                      case N.OPEN_TAG:
                        O(E, H) ? S.tagName += H : (Lt(S), H === ">" ? yt(S) : H === "/" ? S.state = N.OPEN_TAG_SLASH : (F(H) || Dt(S, "Invalid character in tag name"), S.state = N.ATTRIB));
                        continue;
                      case N.OPEN_TAG_SLASH:
                        H === ">" ? (yt(S, !0), ut(S)) : (Dt(S, "Forward-slash in opening tag not followed by >"), S.state = N.ATTRIB);
                        continue;
                      case N.ATTRIB:
                        if (F(H))
                          continue;
                        H === ">" ? yt(S) : H === "/" ? S.state = N.OPEN_TAG_SLASH : O(D, H) ? (S.attribName = H, S.attribValue = "", S.state = N.ATTRIB_NAME) : Dt(S, "Invalid attribute name");
                        continue;
                      case N.ATTRIB_NAME:
                        H === "=" ? S.state = N.ATTRIB_VALUE : H === ">" ? (Dt(S, "Attribute without value"), S.attribValue = S.attribName, J(S), yt(S)) : F(H) ? S.state = N.ATTRIB_NAME_SAW_WHITE : O(E, H) ? S.attribName += H : Dt(S, "Invalid attribute name");
                        continue;
                      case N.ATTRIB_NAME_SAW_WHITE:
                        if (H === "=")
                          S.state = N.ATTRIB_VALUE;
                        else {
                          if (F(H))
                            continue;
                          Dt(S, "Attribute without value"), S.tag.attributes[S.attribName] = "", S.attribValue = "", K(S, "onattribute", {
                            name: S.attribName,
                            value: ""
                          }), S.attribName = "", H === ">" ? yt(S) : O(D, H) ? (S.attribName = H, S.state = N.ATTRIB_NAME) : (Dt(S, "Invalid attribute name"), S.state = N.ATTRIB);
                        }
                        continue;
                      case N.ATTRIB_VALUE:
                        if (F(H))
                          continue;
                        m(H) ? (S.q = H, S.state = N.ATTRIB_VALUE_QUOTED) : (S.opt.unquotedAttributeValues || bt(S, "Unquoted attribute value"), S.state = N.ATTRIB_VALUE_UNQUOTED, S.attribValue = H);
                        continue;
                      case N.ATTRIB_VALUE_QUOTED:
                        if (H !== S.q) {
                          H === "&" ? S.state = N.ATTRIB_VALUE_ENTITY_Q : S.attribValue += H;
                          continue;
                        }
                        J(S), S.q = "", S.state = N.ATTRIB_VALUE_CLOSED;
                        continue;
                      case N.ATTRIB_VALUE_CLOSED:
                        F(H) ? S.state = N.ATTRIB : H === ">" ? yt(S) : H === "/" ? S.state = N.OPEN_TAG_SLASH : O(D, H) ? (Dt(S, "No whitespace between attributes"), S.attribName = H, S.attribValue = "", S.state = N.ATTRIB_NAME) : Dt(S, "Invalid attribute name");
                        continue;
                      case N.ATTRIB_VALUE_UNQUOTED:
                        if (!I(H)) {
                          H === "&" ? S.state = N.ATTRIB_VALUE_ENTITY_U : S.attribValue += H;
                          continue;
                        }
                        J(S), H === ">" ? yt(S) : S.state = N.ATTRIB;
                        continue;
                      case N.CLOSE_TAG:
                        if (S.tagName)
                          H === ">" ? ut(S) : O(E, H) ? S.tagName += H : S.script ? (S.script += "</" + S.tagName, S.tagName = "", S.state = N.SCRIPT) : (F(H) || Dt(S, "Invalid tagname in closing tag"), S.state = N.CLOSE_TAG_SAW_WHITE);
                        else {
                          if (F(H))
                            continue;
                          M(D, H) ? S.script ? (S.script += "</" + H, S.state = N.SCRIPT) : Dt(S, "Invalid tagname in closing tag.") : S.tagName = H;
                        }
                        continue;
                      case N.CLOSE_TAG_SAW_WHITE:
                        if (F(H))
                          continue;
                        H === ">" ? ut(S) : Dt(S, "Invalid characters in closing tag");
                        continue;
                      case N.TEXT_ENTITY:
                      case N.ATTRIB_VALUE_ENTITY_Q:
                      case N.ATTRIB_VALUE_ENTITY_U:
                        var tt, Ct;
                        switch (S.state) {
                          case N.TEXT_ENTITY:
                            tt = N.TEXT, Ct = "textNode";
                            break;
                          case N.ATTRIB_VALUE_ENTITY_Q:
                            tt = N.ATTRIB_VALUE_QUOTED, Ct = "attribValue";
                            break;
                          case N.ATTRIB_VALUE_ENTITY_U:
                            tt = N.ATTRIB_VALUE_UNQUOTED, Ct = "attribValue";
                            break;
                        }
                        if (H === ";") {
                          var Rt = st(S);
                          S.opt.unparsedEntities && !Object.values(r.XML_ENTITIES).includes(Rt) ? (S.entity = "", S.state = tt, S.write(Rt)) : (S[Ct] += Rt, S.entity = "", S.state = tt);
                        } else
                          O(S.entity.length ? C : T, H) ? S.entity += H : (Dt(S, "Invalid character in entity name"), S[Ct] += "&" + S.entity + H, S.entity = "", S.state = tt);
                        continue;
                      default:
                        throw new Error(S, "Unknown state: " + S.state);
                    }
                  return S.position >= S.bufferCheckPosition && h(S), S;
                }
                /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */
                String.fromCodePoint || function() {
                  var U = String.fromCharCode, S = Math.floor, k = function() {
                    var H = 16384, it = [], et, tt, Ct = -1, Rt = arguments.length;
                    if (!Rt)
                      return "";
                    for (var Kt = ""; ++Ct < Rt; ) {
                      var Gt = Number(arguments[Ct]);
                      if (!isFinite(Gt) || // `NaN`, `+Infinity`, or `-Infinity`
                      Gt < 0 || // not a valid Unicode code point
                      Gt > 1114111 || // not a valid Unicode code point
                      S(Gt) !== Gt)
                        throw RangeError("Invalid code point: " + Gt);
                      Gt <= 65535 ? it.push(Gt) : (Gt -= 65536, et = (Gt >> 10) + 55296, tt = Gt % 1024 + 56320, it.push(et, tt)), (Ct + 1 === Rt || it.length > H) && (Kt += U.apply(null, it), it.length = 0);
                    }
                    return Kt;
                  };
                  Object.defineProperty ? Object.defineProperty(String, "fromCodePoint", {
                    value: k,
                    configurable: !0,
                    writable: !0
                  }) : String.fromCodePoint = k;
                }();
              })(d);
            }
          ),
          /***/
          86255: (
            /***/
            function(f, d, t) {
              var i = t(28651), r = t(89295), n = t(18890)(), o = t(68109), h = t(96785), u = i("%Math.floor%");
              f.exports = function(c, s) {
                if (typeof c != "function")
                  throw new h("`fn` is not a function");
                if (typeof s != "number" || s < 0 || s > 4294967295 || u(s) !== s)
                  throw new h("`length` must be a positive 32-bit integer");
                var v = arguments.length > 2 && !!arguments[2], y = !0, x = !0;
                if ("length" in c && o) {
                  var e = o(c, "length");
                  e && !e.configurable && (y = !1), e && !e.writable && (x = !1);
                }
                return (y || x || !v) && (n ? r(
                  /** @type {Parameters<define>[0]} */
                  c,
                  "length",
                  s,
                  !0,
                  !0
                ) : r(
                  /** @type {Parameters<define>[0]} */
                  c,
                  "length",
                  s
                )), c;
              };
            }
          ),
          /***/
          95304: (
            /***/
            function(f, d, t) {
              var i = t(89295), r = t(18890)(), n = t(61084).functionsHaveConfigurableNames(), o = t(96785);
              f.exports = function(u, l) {
                if (typeof u != "function")
                  throw new o("`fn` is not a function");
                var c = arguments.length > 2 && !!arguments[2];
                return (!c || n) && (r ? i(
                  /** @type {Parameters<define>[0]} */
                  u,
                  "name",
                  l,
                  !0,
                  !0
                ) : i(
                  /** @type {Parameters<define>[0]} */
                  u,
                  "name",
                  l
                )), u;
              };
            }
          ),
          /***/
          9760: (
            /***/
            function(f, d, t) {
              f.exports = n;
              var i = t(64785).EventEmitter, r = t(89784);
              r(n, i), n.Readable = t(88261), n.Writable = t(29781), n.Duplex = t(14903), n.Transform = t(48569), n.PassThrough = t(17723), n.finished = t(12167), n.pipeline = t(43765), n.Stream = n;
              function n() {
                i.call(this);
              }
              n.prototype.pipe = function(o, h) {
                var u = this;
                function l(b) {
                  o.writable && o.write(b) === !1 && u.pause && u.pause();
                }
                u.on("data", l);
                function c() {
                  u.readable && u.resume && u.resume();
                }
                o.on("drain", c), !o._isStdio && (!h || h.end !== !1) && (u.on("end", v), u.on("close", y));
                var s = !1;
                function v() {
                  s || (s = !0, o.end());
                }
                function y() {
                  s || (s = !0, typeof o.destroy == "function" && o.destroy());
                }
                function x(b) {
                  if (e(), i.listenerCount(this, "error") === 0)
                    throw b;
                }
                u.on("error", x), o.on("error", x);
                function e() {
                  u.removeListener("data", l), o.removeListener("drain", c), u.removeListener("end", v), u.removeListener("close", y), u.removeListener("error", x), o.removeListener("error", x), u.removeListener("end", e), u.removeListener("close", e), o.removeListener("close", e);
                }
                return u.on("end", e), u.on("close", e), o.on("close", e), o.emit("pipe", u), o;
              };
            }
          ),
          /***/
          83797: (
            /***/
            function(f) {
              function d(u, l) {
                u.prototype = Object.create(l.prototype), u.prototype.constructor = u, u.__proto__ = l;
              }
              var t = {};
              function i(u, l, c) {
                c || (c = Error);
                function s(y, x, e) {
                  return typeof l == "string" ? l : l(y, x, e);
                }
                var v = /* @__PURE__ */ function(y) {
                  d(x, y);
                  function x(e, b, A) {
                    return y.call(this, s(e, b, A)) || this;
                  }
                  return x;
                }(c);
                v.prototype.name = c.name, v.prototype.code = u, t[u] = v;
              }
              function r(u, l) {
                if (Array.isArray(u)) {
                  var c = u.length;
                  return u = u.map(function(s) {
                    return String(s);
                  }), c > 2 ? "one of ".concat(l, " ").concat(u.slice(0, c - 1).join(", "), ", or ") + u[c - 1] : c === 2 ? "one of ".concat(l, " ").concat(u[0], " or ").concat(u[1]) : "of ".concat(l, " ").concat(u[0]);
                } else
                  return "of ".concat(l, " ").concat(String(u));
              }
              function n(u, l, c) {
                return u.substr(!c || c < 0 ? 0 : +c, l.length) === l;
              }
              function o(u, l, c) {
                return (c === void 0 || c > u.length) && (c = u.length), u.substring(c - l.length, c) === l;
              }
              function h(u, l, c) {
                return typeof c != "number" && (c = 0), c + l.length > u.length ? !1 : u.indexOf(l, c) !== -1;
              }
              i("ERR_INVALID_OPT_VALUE", function(u, l) {
                return 'The value "' + l + '" is invalid for option "' + u + '"';
              }, TypeError), i("ERR_INVALID_ARG_TYPE", function(u, l, c) {
                var s;
                typeof l == "string" && n(l, "not ") ? (s = "must not be", l = l.replace(/^not /, "")) : s = "must be";
                var v;
                if (o(u, " argument"))
                  v = "The ".concat(u, " ").concat(s, " ").concat(r(l, "type"));
                else {
                  var y = h(u, ".") ? "property" : "argument";
                  v = 'The "'.concat(u, '" ').concat(y, " ").concat(s, " ").concat(r(l, "type"));
                }
                return v += ". Received type ".concat(typeof c), v;
              }, TypeError), i("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), i("ERR_METHOD_NOT_IMPLEMENTED", function(u) {
                return "The " + u + " method is not implemented";
              }), i("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), i("ERR_STREAM_DESTROYED", function(u) {
                return "Cannot call " + u + " after a stream was destroyed";
              }), i("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), i("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), i("ERR_STREAM_WRITE_AFTER_END", "write after end"), i("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), i("ERR_UNKNOWN_ENCODING", function(u) {
                return "Unknown encoding: " + u;
              }, TypeError), i("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), f.exports.F = t;
            }
          ),
          /***/
          14903: (
            /***/
            function(f, d, t) {
              var i = t(9964), r = Object.keys || function(y) {
                var x = [];
                for (var e in y)
                  x.push(e);
                return x;
              };
              f.exports = c;
              var n = t(88261), o = t(29781);
              t(89784)(c, n);
              for (var h = r(o.prototype), u = 0; u < h.length; u++) {
                var l = h[u];
                c.prototype[l] || (c.prototype[l] = o.prototype[l]);
              }
              function c(y) {
                if (!(this instanceof c))
                  return new c(y);
                n.call(this, y), o.call(this, y), this.allowHalfOpen = !0, y && (y.readable === !1 && (this.readable = !1), y.writable === !1 && (this.writable = !1), y.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", s)));
              }
              Object.defineProperty(c.prototype, "writableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.highWaterMark;
                }
              }), Object.defineProperty(c.prototype, "writableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState && this._writableState.getBuffer();
                }
              }), Object.defineProperty(c.prototype, "writableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.length;
                }
              });
              function s() {
                this._writableState.ended || i.nextTick(v, this);
              }
              function v(y) {
                y.end();
              }
              Object.defineProperty(c.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
                },
                set: function(x) {
                  this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = x, this._writableState.destroyed = x);
                }
              });
            }
          ),
          /***/
          17723: (
            /***/
            function(f, d, t) {
              f.exports = r;
              var i = t(48569);
              t(89784)(r, i);
              function r(n) {
                if (!(this instanceof r))
                  return new r(n);
                i.call(this, n);
              }
              r.prototype._transform = function(n, o, h) {
                h(null, n);
              };
            }
          ),
          /***/
          88261: (
            /***/
            function(f, d, t) {
              var i = t(9964);
              f.exports = G;
              var r;
              G.ReadableState = N, t(64785).EventEmitter;
              var n = function(tt, Ct) {
                return tt.listeners(Ct).length;
              }, o = t(99018), h = t(14598).Buffer, u = (typeof t.g != "undefined" ? t.g : typeof window != "undefined" ? window : typeof self != "undefined" ? self : {}).Uint8Array || function() {
              };
              function l(et) {
                return h.from(et);
              }
              function c(et) {
                return h.isBuffer(et) || et instanceof u;
              }
              var s = t(77199), v;
              s && s.debuglog ? v = s.debuglog("stream") : v = function() {
              };
              var y = t(24433), x = t(37385), e = t(68130), b = e.getHighWaterMark, A = t(83797).F, P = A.ERR_INVALID_ARG_TYPE, D = A.ERR_STREAM_PUSH_AFTER_EOF, E = A.ERR_METHOD_NOT_IMPLEMENTED, T = A.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, C, F, m;
              t(89784)(G, o);
              var I = x.errorOrDestroy, O = ["error", "close", "destroy", "pause", "resume"];
              function M(et, tt, Ct) {
                if (typeof et.prependListener == "function")
                  return et.prependListener(tt, Ct);
                !et._events || !et._events[tt] ? et.on(tt, Ct) : Array.isArray(et._events[tt]) ? et._events[tt].unshift(Ct) : et._events[tt] = [Ct, et._events[tt]];
              }
              function N(et, tt, Ct) {
                r = r || t(14903), et = et || {}, typeof Ct != "boolean" && (Ct = tt instanceof r), this.objectMode = !!et.objectMode, Ct && (this.objectMode = this.objectMode || !!et.readableObjectMode), this.highWaterMark = b(this, et, "readableHighWaterMark", Ct), this.buffer = new y(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = et.emitClose !== !1, this.autoDestroy = !!et.autoDestroy, this.destroyed = !1, this.defaultEncoding = et.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, et.encoding && (C || (C = t(43143).I), this.decoder = new C(et.encoding), this.encoding = et.encoding);
              }
              function G(et) {
                if (r = r || t(14903), !(this instanceof G))
                  return new G(et);
                var tt = this instanceof r;
                this._readableState = new N(et, this, tt), this.readable = !0, et && (typeof et.read == "function" && (this._read = et.read), typeof et.destroy == "function" && (this._destroy = et.destroy)), o.call(this);
              }
              Object.defineProperty(G.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState === void 0 ? !1 : this._readableState.destroyed;
                },
                set: function(tt) {
                  this._readableState && (this._readableState.destroyed = tt);
                }
              }), G.prototype.destroy = x.destroy, G.prototype._undestroy = x.undestroy, G.prototype._destroy = function(et, tt) {
                tt(et);
              }, G.prototype.push = function(et, tt) {
                var Ct = this._readableState, Rt;
                return Ct.objectMode ? Rt = !0 : typeof et == "string" && (tt = tt || Ct.defaultEncoding, tt !== Ct.encoding && (et = h.from(et, tt), tt = ""), Rt = !0), ot(this, et, tt, !1, Rt);
              }, G.prototype.unshift = function(et) {
                return ot(this, et, null, !0, !1);
              };
              function ot(et, tt, Ct, Rt, Kt) {
                v("readableAddChunk", tt);
                var Gt = et._readableState;
                if (tt === null)
                  Gt.reading = !1, Dt(et, Gt);
                else {
                  var It;
                  if (Kt || (It = nt(Gt, tt)), It)
                    I(et, It);
                  else if (Gt.objectMode || tt && tt.length > 0)
                    if (typeof tt != "string" && !Gt.objectMode && Object.getPrototypeOf(tt) !== h.prototype && (tt = l(tt)), Rt)
                      Gt.endEmitted ? I(et, new T()) : K(et, Gt, tt, !0);
                    else if (Gt.ended)
                      I(et, new D());
                    else {
                      if (Gt.destroyed)
                        return !1;
                      Gt.reading = !1, Gt.decoder && !Ct ? (tt = Gt.decoder.write(tt), Gt.objectMode || tt.length !== 0 ? K(et, Gt, tt, !1) : J(et, Gt)) : K(et, Gt, tt, !1);
                    }
                  else
                    Rt || (Gt.reading = !1, J(et, Gt));
                }
                return !Gt.ended && (Gt.length < Gt.highWaterMark || Gt.length === 0);
              }
              function K(et, tt, Ct, Rt) {
                tt.flowing && tt.length === 0 && !tt.sync ? (tt.awaitDrain = 0, et.emit("data", Ct)) : (tt.length += tt.objectMode ? 1 : Ct.length, Rt ? tt.buffer.unshift(Ct) : tt.buffer.push(Ct), tt.needReadable && Lt(et)), J(et, tt);
              }
              function nt(et, tt) {
                var Ct;
                return !c(tt) && typeof tt != "string" && tt !== void 0 && !et.objectMode && (Ct = new P("chunk", ["string", "Buffer", "Uint8Array"], tt)), Ct;
              }
              G.prototype.isPaused = function() {
                return this._readableState.flowing === !1;
              }, G.prototype.setEncoding = function(et) {
                C || (C = t(43143).I);
                var tt = new C(et);
                this._readableState.decoder = tt, this._readableState.encoding = this._readableState.decoder.encoding;
                for (var Ct = this._readableState.buffer.head, Rt = ""; Ct !== null; )
                  Rt += tt.write(Ct.data), Ct = Ct.next;
                return this._readableState.buffer.clear(), Rt !== "" && this._readableState.buffer.push(Rt), this._readableState.length = Rt.length, this;
              };
              var xt = 1073741824;
              function bt(et) {
                return et >= xt ? et = xt : (et--, et |= et >>> 1, et |= et >>> 2, et |= et >>> 4, et |= et >>> 8, et |= et >>> 16, et++), et;
              }
              function St(et, tt) {
                return et <= 0 || tt.length === 0 && tt.ended ? 0 : tt.objectMode ? 1 : et !== et ? tt.flowing && tt.length ? tt.buffer.head.data.length : tt.length : (et > tt.highWaterMark && (tt.highWaterMark = bt(et)), et <= tt.length ? et : tt.ended ? tt.length : (tt.needReadable = !0, 0));
              }
              G.prototype.read = function(et) {
                v("read", et), et = parseInt(et, 10);
                var tt = this._readableState, Ct = et;
                if (et !== 0 && (tt.emittedReadable = !1), et === 0 && tt.needReadable && ((tt.highWaterMark !== 0 ? tt.length >= tt.highWaterMark : tt.length > 0) || tt.ended))
                  return v("read: emitReadable", tt.length, tt.ended), tt.length === 0 && tt.ended ? k(this) : Lt(this), null;
                if (et = St(et, tt), et === 0 && tt.ended)
                  return tt.length === 0 && k(this), null;
                var Rt = tt.needReadable;
                v("need readable", Rt), (tt.length === 0 || tt.length - et < tt.highWaterMark) && (Rt = !0, v("length less than watermark", Rt)), tt.ended || tt.reading ? (Rt = !1, v("reading or ended", Rt)) : Rt && (v("do read"), tt.reading = !0, tt.sync = !0, tt.length === 0 && (tt.needReadable = !0), this._read(tt.highWaterMark), tt.sync = !1, tt.reading || (et = St(Ct, tt)));
                var Kt;
                return et > 0 ? Kt = S(et, tt) : Kt = null, Kt === null ? (tt.needReadable = tt.length <= tt.highWaterMark, et = 0) : (tt.length -= et, tt.awaitDrain = 0), tt.length === 0 && (tt.ended || (tt.needReadable = !0), Ct !== et && tt.ended && k(this)), Kt !== null && this.emit("data", Kt), Kt;
              };
              function Dt(et, tt) {
                if (v("onEofChunk"), !tt.ended) {
                  if (tt.decoder) {
                    var Ct = tt.decoder.end();
                    Ct && Ct.length && (tt.buffer.push(Ct), tt.length += tt.objectMode ? 1 : Ct.length);
                  }
                  tt.ended = !0, tt.sync ? Lt(et) : (tt.needReadable = !1, tt.emittedReadable || (tt.emittedReadable = !0, jt(et)));
                }
              }
              function Lt(et) {
                var tt = et._readableState;
                v("emitReadable", tt.needReadable, tt.emittedReadable), tt.needReadable = !1, tt.emittedReadable || (v("emitReadable", tt.flowing), tt.emittedReadable = !0, i.nextTick(jt, et));
              }
              function jt(et) {
                var tt = et._readableState;
                v("emitReadable_", tt.destroyed, tt.length, tt.ended), !tt.destroyed && (tt.length || tt.ended) && (et.emit("readable"), tt.emittedReadable = !1), tt.needReadable = !tt.flowing && !tt.ended && tt.length <= tt.highWaterMark, U(et);
              }
              function J(et, tt) {
                tt.readingMore || (tt.readingMore = !0, i.nextTick(yt, et, tt));
              }
              function yt(et, tt) {
                for (; !tt.reading && !tt.ended && (tt.length < tt.highWaterMark || tt.flowing && tt.length === 0); ) {
                  var Ct = tt.length;
                  if (v("maybeReadMore read 0"), et.read(0), Ct === tt.length)
                    break;
                }
                tt.readingMore = !1;
              }
              G.prototype._read = function(et) {
                I(this, new E("_read()"));
              }, G.prototype.pipe = function(et, tt) {
                var Ct = this, Rt = this._readableState;
                switch (Rt.pipesCount) {
                  case 0:
                    Rt.pipes = et;
                    break;
                  case 1:
                    Rt.pipes = [Rt.pipes, et];
                    break;
                  default:
                    Rt.pipes.push(et);
                    break;
                }
                Rt.pipesCount += 1, v("pipe count=%d opts=%j", Rt.pipesCount, tt);
                var Kt = (!tt || tt.end !== !1) && et !== i.stdout && et !== i.stderr, Gt = Kt ? re : he;
                Rt.endEmitted ? i.nextTick(Gt) : Ct.once("end", Gt), et.on("unpipe", It);
                function It(Ee, Re) {
                  v("onunpipe"), Ee === Ct && Re && Re.hasUnpiped === !1 && (Re.hasUnpiped = !0, le());
                }
                function re() {
                  v("onend"), et.end();
                }
                var be = ut(Ct);
                et.on("drain", be);
                var me = !1;
                function le() {
                  v("cleanup"), et.removeListener("close", $t), et.removeListener("finish", ue), et.removeListener("drain", be), et.removeListener("error", Wt), et.removeListener("unpipe", It), Ct.removeListener("end", re), Ct.removeListener("end", he), Ct.removeListener("data", Se), me = !0, Rt.awaitDrain && (!et._writableState || et._writableState.needDrain) && be();
                }
                Ct.on("data", Se);
                function Se(Ee) {
                  v("ondata");
                  var Re = et.write(Ee);
                  v("dest.write", Re), Re === !1 && ((Rt.pipesCount === 1 && Rt.pipes === et || Rt.pipesCount > 1 && it(Rt.pipes, et) !== -1) && !me && (v("false write response, pause", Rt.awaitDrain), Rt.awaitDrain++), Ct.pause());
                }
                function Wt(Ee) {
                  v("onerror", Ee), he(), et.removeListener("error", Wt), n(et, "error") === 0 && I(et, Ee);
                }
                M(et, "error", Wt);
                function $t() {
                  et.removeListener("finish", ue), he();
                }
                et.once("close", $t);
                function ue() {
                  v("onfinish"), et.removeListener("close", $t), he();
                }
                et.once("finish", ue);
                function he() {
                  v("unpipe"), Ct.unpipe(et);
                }
                return et.emit("pipe", Ct), Rt.flowing || (v("pipe resume"), Ct.resume()), et;
              };
              function ut(et) {
                return function() {
                  var Ct = et._readableState;
                  v("pipeOnDrain", Ct.awaitDrain), Ct.awaitDrain && Ct.awaitDrain--, Ct.awaitDrain === 0 && n(et, "data") && (Ct.flowing = !0, U(et));
                };
              }
              G.prototype.unpipe = function(et) {
                var tt = this._readableState, Ct = {
                  hasUnpiped: !1
                };
                if (tt.pipesCount === 0)
                  return this;
                if (tt.pipesCount === 1)
                  return et && et !== tt.pipes ? this : (et || (et = tt.pipes), tt.pipes = null, tt.pipesCount = 0, tt.flowing = !1, et && et.emit("unpipe", this, Ct), this);
                if (!et) {
                  var Rt = tt.pipes, Kt = tt.pipesCount;
                  tt.pipes = null, tt.pipesCount = 0, tt.flowing = !1;
                  for (var Gt = 0; Gt < Kt; Gt++)
                    Rt[Gt].emit("unpipe", this, {
                      hasUnpiped: !1
                    });
                  return this;
                }
                var It = it(tt.pipes, et);
                return It === -1 ? this : (tt.pipes.splice(It, 1), tt.pipesCount -= 1, tt.pipesCount === 1 && (tt.pipes = tt.pipes[0]), et.emit("unpipe", this, Ct), this);
              }, G.prototype.on = function(et, tt) {
                var Ct = o.prototype.on.call(this, et, tt), Rt = this._readableState;
                return et === "data" ? (Rt.readableListening = this.listenerCount("readable") > 0, Rt.flowing !== !1 && this.resume()) : et === "readable" && !Rt.endEmitted && !Rt.readableListening && (Rt.readableListening = Rt.needReadable = !0, Rt.flowing = !1, Rt.emittedReadable = !1, v("on readable", Rt.length, Rt.reading), Rt.length ? Lt(this) : Rt.reading || i.nextTick(wt, this)), Ct;
              }, G.prototype.addListener = G.prototype.on, G.prototype.removeListener = function(et, tt) {
                var Ct = o.prototype.removeListener.call(this, et, tt);
                return et === "readable" && i.nextTick(st, this), Ct;
              }, G.prototype.removeAllListeners = function(et) {
                var tt = o.prototype.removeAllListeners.apply(this, arguments);
                return (et === "readable" || et === void 0) && i.nextTick(st, this), tt;
              };
              function st(et) {
                var tt = et._readableState;
                tt.readableListening = et.listenerCount("readable") > 0, tt.resumeScheduled && !tt.paused ? tt.flowing = !0 : et.listenerCount("data") > 0 && et.resume();
              }
              function wt(et) {
                v("readable nexttick read 0"), et.read(0);
              }
              G.prototype.resume = function() {
                var et = this._readableState;
                return et.flowing || (v("resume"), et.flowing = !et.readableListening, V(this, et)), et.paused = !1, this;
              };
              function V(et, tt) {
                tt.resumeScheduled || (tt.resumeScheduled = !0, i.nextTick(Ft, et, tt));
              }
              function Ft(et, tt) {
                v("resume", tt.reading), tt.reading || et.read(0), tt.resumeScheduled = !1, et.emit("resume"), U(et), tt.flowing && !tt.reading && et.read(0);
              }
              G.prototype.pause = function() {
                return v("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (v("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
              };
              function U(et) {
                var tt = et._readableState;
                for (v("flow", tt.flowing); tt.flowing && et.read() !== null; )
                  ;
              }
              G.prototype.wrap = function(et) {
                var tt = this, Ct = this._readableState, Rt = !1;
                et.on("end", function() {
                  if (v("wrapped end"), Ct.decoder && !Ct.ended) {
                    var It = Ct.decoder.end();
                    It && It.length && tt.push(It);
                  }
                  tt.push(null);
                }), et.on("data", function(It) {
                  if (v("wrapped data"), Ct.decoder && (It = Ct.decoder.write(It)), !(Ct.objectMode && It == null) && !(!Ct.objectMode && (!It || !It.length))) {
                    var re = tt.push(It);
                    re || (Rt = !0, et.pause());
                  }
                });
                for (var Kt in et)
                  this[Kt] === void 0 && typeof et[Kt] == "function" && (this[Kt] = function(re) {
                    return function() {
                      return et[re].apply(et, arguments);
                    };
                  }(Kt));
                for (var Gt = 0; Gt < O.length; Gt++)
                  et.on(O[Gt], this.emit.bind(this, O[Gt]));
                return this._read = function(It) {
                  v("wrapped _read", It), Rt && (Rt = !1, et.resume());
                }, this;
              }, typeof Symbol == "function" && (G.prototype[Symbol.asyncIterator] = function() {
                return F === void 0 && (F = t(79676)), F(this);
              }), Object.defineProperty(G.prototype, "readableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.highWaterMark;
                }
              }), Object.defineProperty(G.prototype, "readableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState && this._readableState.buffer;
                }
              }), Object.defineProperty(G.prototype, "readableFlowing", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.flowing;
                },
                set: function(tt) {
                  this._readableState && (this._readableState.flowing = tt);
                }
              }), G._fromList = S, Object.defineProperty(G.prototype, "readableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.length;
                }
              });
              function S(et, tt) {
                if (tt.length === 0)
                  return null;
                var Ct;
                return tt.objectMode ? Ct = tt.buffer.shift() : !et || et >= tt.length ? (tt.decoder ? Ct = tt.buffer.join("") : tt.buffer.length === 1 ? Ct = tt.buffer.first() : Ct = tt.buffer.concat(tt.length), tt.buffer.clear()) : Ct = tt.buffer.consume(et, tt.decoder), Ct;
              }
              function k(et) {
                var tt = et._readableState;
                v("endReadable", tt.endEmitted), tt.endEmitted || (tt.ended = !0, i.nextTick(H, tt, et));
              }
              function H(et, tt) {
                if (v("endReadableNT", et.endEmitted, et.length), !et.endEmitted && et.length === 0 && (et.endEmitted = !0, tt.readable = !1, tt.emit("end"), et.autoDestroy)) {
                  var Ct = tt._writableState;
                  (!Ct || Ct.autoDestroy && Ct.finished) && tt.destroy();
                }
              }
              typeof Symbol == "function" && (G.from = function(et, tt) {
                return m === void 0 && (m = t(60378)), m(G, et, tt);
              });
              function it(et, tt) {
                for (var Ct = 0, Rt = et.length; Ct < Rt; Ct++)
                  if (et[Ct] === tt)
                    return Ct;
                return -1;
              }
            }
          ),
          /***/
          48569: (
            /***/
            function(f, d, t) {
              f.exports = c;
              var i = t(83797).F, r = i.ERR_METHOD_NOT_IMPLEMENTED, n = i.ERR_MULTIPLE_CALLBACK, o = i.ERR_TRANSFORM_ALREADY_TRANSFORMING, h = i.ERR_TRANSFORM_WITH_LENGTH_0, u = t(14903);
              t(89784)(c, u);
              function l(y, x) {
                var e = this._transformState;
                e.transforming = !1;
                var b = e.writecb;
                if (b === null)
                  return this.emit("error", new n());
                e.writechunk = null, e.writecb = null, x != null && this.push(x), b(y);
                var A = this._readableState;
                A.reading = !1, (A.needReadable || A.length < A.highWaterMark) && this._read(A.highWaterMark);
              }
              function c(y) {
                if (!(this instanceof c))
                  return new c(y);
                u.call(this, y), this._transformState = {
                  afterTransform: l.bind(this),
                  needTransform: !1,
                  transforming: !1,
                  writecb: null,
                  writechunk: null,
                  writeencoding: null
                }, this._readableState.needReadable = !0, this._readableState.sync = !1, y && (typeof y.transform == "function" && (this._transform = y.transform), typeof y.flush == "function" && (this._flush = y.flush)), this.on("prefinish", s);
              }
              function s() {
                var y = this;
                typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(x, e) {
                  v(y, x, e);
                }) : v(this, null, null);
              }
              c.prototype.push = function(y, x) {
                return this._transformState.needTransform = !1, u.prototype.push.call(this, y, x);
              }, c.prototype._transform = function(y, x, e) {
                e(new r("_transform()"));
              }, c.prototype._write = function(y, x, e) {
                var b = this._transformState;
                if (b.writecb = e, b.writechunk = y, b.writeencoding = x, !b.transforming) {
                  var A = this._readableState;
                  (b.needTransform || A.needReadable || A.length < A.highWaterMark) && this._read(A.highWaterMark);
                }
              }, c.prototype._read = function(y) {
                var x = this._transformState;
                x.writechunk !== null && !x.transforming ? (x.transforming = !0, this._transform(x.writechunk, x.writeencoding, x.afterTransform)) : x.needTransform = !0;
              }, c.prototype._destroy = function(y, x) {
                u.prototype._destroy.call(this, y, function(e) {
                  x(e);
                });
              };
              function v(y, x, e) {
                if (x)
                  return y.emit("error", x);
                if (e != null && y.push(e), y._writableState.length)
                  throw new h();
                if (y._transformState.transforming)
                  throw new o();
                return y.push(null);
              }
            }
          ),
          /***/
          29781: (
            /***/
            function(f, d, t) {
              var i = t(9964);
              f.exports = N;
              function r(U) {
                var S = this;
                this.next = null, this.entry = null, this.finish = function() {
                  Ft(S, U);
                };
              }
              var n;
              N.WritableState = O;
              var o = {
                deprecate: t(16465)
              }, h = t(99018), u = t(14598).Buffer, l = (typeof t.g != "undefined" ? t.g : typeof window != "undefined" ? window : typeof self != "undefined" ? self : {}).Uint8Array || function() {
              };
              function c(U) {
                return u.from(U);
              }
              function s(U) {
                return u.isBuffer(U) || U instanceof l;
              }
              var v = t(37385), y = t(68130), x = y.getHighWaterMark, e = t(83797).F, b = e.ERR_INVALID_ARG_TYPE, A = e.ERR_METHOD_NOT_IMPLEMENTED, P = e.ERR_MULTIPLE_CALLBACK, D = e.ERR_STREAM_CANNOT_PIPE, E = e.ERR_STREAM_DESTROYED, T = e.ERR_STREAM_NULL_VALUES, C = e.ERR_STREAM_WRITE_AFTER_END, F = e.ERR_UNKNOWN_ENCODING, m = v.errorOrDestroy;
              t(89784)(N, h);
              function I() {
              }
              function O(U, S, k) {
                n = n || t(14903), U = U || {}, typeof k != "boolean" && (k = S instanceof n), this.objectMode = !!U.objectMode, k && (this.objectMode = this.objectMode || !!U.writableObjectMode), this.highWaterMark = x(this, U, "writableHighWaterMark", k), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                var H = U.decodeStrings === !1;
                this.decodeStrings = !H, this.defaultEncoding = U.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(it) {
                  Dt(S, it);
                }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = U.emitClose !== !1, this.autoDestroy = !!U.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new r(this);
              }
              O.prototype.getBuffer = function() {
                for (var S = this.bufferedRequest, k = []; S; )
                  k.push(S), S = S.next;
                return k;
              }, function() {
                try {
                  Object.defineProperty(O.prototype, "buffer", {
                    get: o.deprecate(function() {
                      return this.getBuffer();
                    }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                  });
                } catch (U) {
                }
              }();
              var M;
              typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (M = Function.prototype[Symbol.hasInstance], Object.defineProperty(N, Symbol.hasInstance, {
                value: function(S) {
                  return M.call(this, S) ? !0 : this !== N ? !1 : S && S._writableState instanceof O;
                }
              })) : M = function(S) {
                return S instanceof this;
              };
              function N(U) {
                n = n || t(14903);
                var S = this instanceof n;
                if (!S && !M.call(N, this))
                  return new N(U);
                this._writableState = new O(U, this, S), this.writable = !0, U && (typeof U.write == "function" && (this._write = U.write), typeof U.writev == "function" && (this._writev = U.writev), typeof U.destroy == "function" && (this._destroy = U.destroy), typeof U.final == "function" && (this._final = U.final)), h.call(this);
              }
              N.prototype.pipe = function() {
                m(this, new D());
              };
              function G(U, S) {
                var k = new C();
                m(U, k), i.nextTick(S, k);
              }
              function ot(U, S, k, H) {
                var it;
                return k === null ? it = new T() : typeof k != "string" && !S.objectMode && (it = new b("chunk", ["string", "Buffer"], k)), it ? (m(U, it), i.nextTick(H, it), !1) : !0;
              }
              N.prototype.write = function(U, S, k) {
                var H = this._writableState, it = !1, et = !H.objectMode && s(U);
                return et && !u.isBuffer(U) && (U = c(U)), typeof S == "function" && (k = S, S = null), et ? S = "buffer" : S || (S = H.defaultEncoding), typeof k != "function" && (k = I), H.ending ? G(this, k) : (et || ot(this, H, U, k)) && (H.pendingcb++, it = nt(this, H, et, U, S, k)), it;
              }, N.prototype.cork = function() {
                this._writableState.corked++;
              }, N.prototype.uncork = function() {
                var U = this._writableState;
                U.corked && (U.corked--, !U.writing && !U.corked && !U.bufferProcessing && U.bufferedRequest && J(this, U));
              }, N.prototype.setDefaultEncoding = function(S) {
                if (typeof S == "string" && (S = S.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((S + "").toLowerCase()) > -1))
                  throw new F(S);
                return this._writableState.defaultEncoding = S, this;
              }, Object.defineProperty(N.prototype, "writableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState && this._writableState.getBuffer();
                }
              });
              function K(U, S, k) {
                return !U.objectMode && U.decodeStrings !== !1 && typeof S == "string" && (S = u.from(S, k)), S;
              }
              Object.defineProperty(N.prototype, "writableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.highWaterMark;
                }
              });
              function nt(U, S, k, H, it, et) {
                if (!k) {
                  var tt = K(S, H, it);
                  H !== tt && (k = !0, it = "buffer", H = tt);
                }
                var Ct = S.objectMode ? 1 : H.length;
                S.length += Ct;
                var Rt = S.length < S.highWaterMark;
                if (Rt || (S.needDrain = !0), S.writing || S.corked) {
                  var Kt = S.lastBufferedRequest;
                  S.lastBufferedRequest = {
                    chunk: H,
                    encoding: it,
                    isBuf: k,
                    callback: et,
                    next: null
                  }, Kt ? Kt.next = S.lastBufferedRequest : S.bufferedRequest = S.lastBufferedRequest, S.bufferedRequestCount += 1;
                } else
                  xt(U, S, !1, Ct, H, it, et);
                return Rt;
              }
              function xt(U, S, k, H, it, et, tt) {
                S.writelen = H, S.writecb = tt, S.writing = !0, S.sync = !0, S.destroyed ? S.onwrite(new E("write")) : k ? U._writev(it, S.onwrite) : U._write(it, et, S.onwrite), S.sync = !1;
              }
              function bt(U, S, k, H, it) {
                --S.pendingcb, k ? (i.nextTick(it, H), i.nextTick(wt, U, S), U._writableState.errorEmitted = !0, m(U, H)) : (it(H), U._writableState.errorEmitted = !0, m(U, H), wt(U, S));
              }
              function St(U) {
                U.writing = !1, U.writecb = null, U.length -= U.writelen, U.writelen = 0;
              }
              function Dt(U, S) {
                var k = U._writableState, H = k.sync, it = k.writecb;
                if (typeof it != "function")
                  throw new P();
                if (St(k), S)
                  bt(U, k, H, S, it);
                else {
                  var et = yt(k) || U.destroyed;
                  !et && !k.corked && !k.bufferProcessing && k.bufferedRequest && J(U, k), H ? i.nextTick(Lt, U, k, et, it) : Lt(U, k, et, it);
                }
              }
              function Lt(U, S, k, H) {
                k || jt(U, S), S.pendingcb--, H(), wt(U, S);
              }
              function jt(U, S) {
                S.length === 0 && S.needDrain && (S.needDrain = !1, U.emit("drain"));
              }
              function J(U, S) {
                S.bufferProcessing = !0;
                var k = S.bufferedRequest;
                if (U._writev && k && k.next) {
                  var H = S.bufferedRequestCount, it = new Array(H), et = S.corkedRequestsFree;
                  et.entry = k;
                  for (var tt = 0, Ct = !0; k; )
                    it[tt] = k, k.isBuf || (Ct = !1), k = k.next, tt += 1;
                  it.allBuffers = Ct, xt(U, S, !0, S.length, it, "", et.finish), S.pendingcb++, S.lastBufferedRequest = null, et.next ? (S.corkedRequestsFree = et.next, et.next = null) : S.corkedRequestsFree = new r(S), S.bufferedRequestCount = 0;
                } else {
                  for (; k; ) {
                    var Rt = k.chunk, Kt = k.encoding, Gt = k.callback, It = S.objectMode ? 1 : Rt.length;
                    if (xt(U, S, !1, It, Rt, Kt, Gt), k = k.next, S.bufferedRequestCount--, S.writing)
                      break;
                  }
                  k === null && (S.lastBufferedRequest = null);
                }
                S.bufferedRequest = k, S.bufferProcessing = !1;
              }
              N.prototype._write = function(U, S, k) {
                k(new A("_write()"));
              }, N.prototype._writev = null, N.prototype.end = function(U, S, k) {
                var H = this._writableState;
                return typeof U == "function" ? (k = U, U = null, S = null) : typeof S == "function" && (k = S, S = null), U != null && this.write(U, S), H.corked && (H.corked = 1, this.uncork()), H.ending || V(this, H, k), this;
              }, Object.defineProperty(N.prototype, "writableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.length;
                }
              });
              function yt(U) {
                return U.ending && U.length === 0 && U.bufferedRequest === null && !U.finished && !U.writing;
              }
              function ut(U, S) {
                U._final(function(k) {
                  S.pendingcb--, k && m(U, k), S.prefinished = !0, U.emit("prefinish"), wt(U, S);
                });
              }
              function st(U, S) {
                !S.prefinished && !S.finalCalled && (typeof U._final == "function" && !S.destroyed ? (S.pendingcb++, S.finalCalled = !0, i.nextTick(ut, U, S)) : (S.prefinished = !0, U.emit("prefinish")));
              }
              function wt(U, S) {
                var k = yt(S);
                if (k && (st(U, S), S.pendingcb === 0 && (S.finished = !0, U.emit("finish"), S.autoDestroy))) {
                  var H = U._readableState;
                  (!H || H.autoDestroy && H.endEmitted) && U.destroy();
                }
                return k;
              }
              function V(U, S, k) {
                S.ending = !0, wt(U, S), k && (S.finished ? i.nextTick(k) : U.once("finish", k)), S.ended = !0, U.writable = !1;
              }
              function Ft(U, S, k) {
                var H = U.entry;
                for (U.entry = null; H; ) {
                  var it = H.callback;
                  S.pendingcb--, it(k), H = H.next;
                }
                S.corkedRequestsFree.next = U;
              }
              Object.defineProperty(N.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState === void 0 ? !1 : this._writableState.destroyed;
                },
                set: function(S) {
                  this._writableState && (this._writableState.destroyed = S);
                }
              }), N.prototype.destroy = v.destroy, N.prototype._undestroy = v.undestroy, N.prototype._destroy = function(U, S) {
                S(U);
              };
            }
          ),
          /***/
          79676: (
            /***/
            function(f, d, t) {
              var i = t(9964), r;
              function n(F, m, I) {
                return m = o(m), m in F ? Object.defineProperty(F, m, { value: I, enumerable: !0, configurable: !0, writable: !0 }) : F[m] = I, F;
              }
              function o(F) {
                var m = h(F, "string");
                return typeof m == "symbol" ? m : String(m);
              }
              function h(F, m) {
                if (typeof F != "object" || F === null)
                  return F;
                var I = F[Symbol.toPrimitive];
                if (I !== void 0) {
                  var O = I.call(F, m || "default");
                  if (typeof O != "object")
                    return O;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (m === "string" ? String : Number)(F);
              }
              var u = t(12167), l = Symbol("lastResolve"), c = Symbol("lastReject"), s = Symbol("error"), v = Symbol("ended"), y = Symbol("lastPromise"), x = Symbol("handlePromise"), e = Symbol("stream");
              function b(F, m) {
                return {
                  value: F,
                  done: m
                };
              }
              function A(F) {
                var m = F[l];
                if (m !== null) {
                  var I = F[e].read();
                  I !== null && (F[y] = null, F[l] = null, F[c] = null, m(b(I, !1)));
                }
              }
              function P(F) {
                i.nextTick(A, F);
              }
              function D(F, m) {
                return function(I, O) {
                  F.then(function() {
                    if (m[v]) {
                      I(b(void 0, !0));
                      return;
                    }
                    m[x](I, O);
                  }, O);
                };
              }
              var E = Object.getPrototypeOf(function() {
              }), T = Object.setPrototypeOf((r = {
                get stream() {
                  return this[e];
                },
                next: function() {
                  var m = this, I = this[s];
                  if (I !== null)
                    return Promise.reject(I);
                  if (this[v])
                    return Promise.resolve(b(void 0, !0));
                  if (this[e].destroyed)
                    return new Promise(function(G, ot) {
                      i.nextTick(function() {
                        m[s] ? ot(m[s]) : G(b(void 0, !0));
                      });
                    });
                  var O = this[y], M;
                  if (O)
                    M = new Promise(D(O, this));
                  else {
                    var N = this[e].read();
                    if (N !== null)
                      return Promise.resolve(b(N, !1));
                    M = new Promise(this[x]);
                  }
                  return this[y] = M, M;
                }
              }, n(r, Symbol.asyncIterator, function() {
                return this;
              }), n(r, "return", function() {
                var m = this;
                return new Promise(function(I, O) {
                  m[e].destroy(null, function(M) {
                    if (M) {
                      O(M);
                      return;
                    }
                    I(b(void 0, !0));
                  });
                });
              }), r), E), C = function(m) {
                var I, O = Object.create(T, (I = {}, n(I, e, {
                  value: m,
                  writable: !0
                }), n(I, l, {
                  value: null,
                  writable: !0
                }), n(I, c, {
                  value: null,
                  writable: !0
                }), n(I, s, {
                  value: null,
                  writable: !0
                }), n(I, v, {
                  value: m._readableState.endEmitted,
                  writable: !0
                }), n(I, x, {
                  value: function(N, G) {
                    var ot = O[e].read();
                    ot ? (O[y] = null, O[l] = null, O[c] = null, N(b(ot, !1))) : (O[l] = N, O[c] = G);
                  },
                  writable: !0
                }), I));
                return O[y] = null, u(m, function(M) {
                  if (M && M.code !== "ERR_STREAM_PREMATURE_CLOSE") {
                    var N = O[c];
                    N !== null && (O[y] = null, O[l] = null, O[c] = null, N(M)), O[s] = M;
                    return;
                  }
                  var G = O[l];
                  G !== null && (O[y] = null, O[l] = null, O[c] = null, G(b(void 0, !0))), O[v] = !0;
                }), m.on("readable", P.bind(null, O)), O;
              };
              f.exports = C;
            }
          ),
          /***/
          37385: (
            /***/
            function(f, d, t) {
              var i = t(9964);
              function r(c, s) {
                var v = this, y = this._readableState && this._readableState.destroyed, x = this._writableState && this._writableState.destroyed;
                return y || x ? (s ? s(c) : c && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, i.nextTick(u, this, c)) : i.nextTick(u, this, c)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(c || null, function(e) {
                  !s && e ? v._writableState ? v._writableState.errorEmitted ? i.nextTick(o, v) : (v._writableState.errorEmitted = !0, i.nextTick(n, v, e)) : i.nextTick(n, v, e) : s ? (i.nextTick(o, v), s(e)) : i.nextTick(o, v);
                }), this);
              }
              function n(c, s) {
                u(c, s), o(c);
              }
              function o(c) {
                c._writableState && !c._writableState.emitClose || c._readableState && !c._readableState.emitClose || c.emit("close");
              }
              function h() {
                this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
              }
              function u(c, s) {
                c.emit("error", s);
              }
              function l(c, s) {
                var v = c._readableState, y = c._writableState;
                v && v.autoDestroy || y && y.autoDestroy ? c.destroy(s) : c.emit("error", s);
              }
              f.exports = {
                destroy: r,
                undestroy: h,
                errorOrDestroy: l
              };
            }
          ),
          /***/
          12167: (
            /***/
            function(f, d, t) {
              var i = t(83797).F.ERR_STREAM_PREMATURE_CLOSE;
              function r(u) {
                var l = !1;
                return function() {
                  if (!l) {
                    l = !0;
                    for (var c = arguments.length, s = new Array(c), v = 0; v < c; v++)
                      s[v] = arguments[v];
                    u.apply(this, s);
                  }
                };
              }
              function n() {
              }
              function o(u) {
                return u.setHeader && typeof u.abort == "function";
              }
              function h(u, l, c) {
                if (typeof l == "function")
                  return h(u, null, l);
                l || (l = {}), c = r(c || n);
                var s = l.readable || l.readable !== !1 && u.readable, v = l.writable || l.writable !== !1 && u.writable, y = function() {
                  u.writable || e();
                }, x = u._writableState && u._writableState.finished, e = function() {
                  v = !1, x = !0, s || c.call(u);
                }, b = u._readableState && u._readableState.endEmitted, A = function() {
                  s = !1, b = !0, v || c.call(u);
                }, P = function(C) {
                  c.call(u, C);
                }, D = function() {
                  var C;
                  if (s && !b)
                    return (!u._readableState || !u._readableState.ended) && (C = new i()), c.call(u, C);
                  if (v && !x)
                    return (!u._writableState || !u._writableState.ended) && (C = new i()), c.call(u, C);
                }, E = function() {
                  u.req.on("finish", e);
                };
                return o(u) ? (u.on("complete", e), u.on("abort", D), u.req ? E() : u.on("request", E)) : v && !u._writableState && (u.on("end", y), u.on("close", y)), u.on("end", A), u.on("finish", e), l.error !== !1 && u.on("error", P), u.on("close", D), function() {
                  u.removeListener("complete", e), u.removeListener("abort", D), u.removeListener("request", E), u.req && u.req.removeListener("finish", e), u.removeListener("end", y), u.removeListener("close", y), u.removeListener("finish", e), u.removeListener("end", A), u.removeListener("error", P), u.removeListener("close", D);
                };
              }
              f.exports = h;
            }
          ),
          /***/
          60378: (
            /***/
            function(f) {
              f.exports = function() {
                throw new Error("Readable.from is not available in the browser");
              };
            }
          ),
          /***/
          43765: (
            /***/
            function(f, d, t) {
              var i;
              function r(e) {
                var b = !1;
                return function() {
                  b || (b = !0, e.apply(void 0, arguments));
                };
              }
              var n = t(83797).F, o = n.ERR_MISSING_ARGS, h = n.ERR_STREAM_DESTROYED;
              function u(e) {
                if (e)
                  throw e;
              }
              function l(e) {
                return e.setHeader && typeof e.abort == "function";
              }
              function c(e, b, A, P) {
                P = r(P);
                var D = !1;
                e.on("close", function() {
                  D = !0;
                }), i === void 0 && (i = t(12167)), i(e, {
                  readable: b,
                  writable: A
                }, function(T) {
                  if (T)
                    return P(T);
                  D = !0, P();
                });
                var E = !1;
                return function(T) {
                  if (!D && !E) {
                    if (E = !0, l(e))
                      return e.abort();
                    if (typeof e.destroy == "function")
                      return e.destroy();
                    P(T || new h("pipe"));
                  }
                };
              }
              function s(e) {
                e();
              }
              function v(e, b) {
                return e.pipe(b);
              }
              function y(e) {
                return !e.length || typeof e[e.length - 1] != "function" ? u : e.pop();
              }
              function x() {
                for (var e = arguments.length, b = new Array(e), A = 0; A < e; A++)
                  b[A] = arguments[A];
                var P = y(b);
                if (Array.isArray(b[0]) && (b = b[0]), b.length < 2)
                  throw new o("streams");
                var D, E = b.map(function(T, C) {
                  var F = C < b.length - 1, m = C > 0;
                  return c(T, F, m, function(I) {
                    D || (D = I), I && E.forEach(s), !F && (E.forEach(s), P(D));
                  });
                });
                return b.reduce(v);
              }
              f.exports = x;
            }
          ),
          /***/
          68130: (
            /***/
            function(f, d, t) {
              var i = t(83797).F.ERR_INVALID_OPT_VALUE;
              function r(o, h, u) {
                return o.highWaterMark != null ? o.highWaterMark : h ? o[u] : null;
              }
              function n(o, h, u, l) {
                var c = r(h, l, u);
                if (c != null) {
                  if (!(isFinite(c) && Math.floor(c) === c) || c < 0) {
                    var s = l ? u : "highWaterMark";
                    throw new i(s, c);
                  }
                  return Math.floor(c);
                }
                return o.objectMode ? 16 : 16384;
              }
              f.exports = {
                getHighWaterMark: n
              };
            }
          ),
          /***/
          99018: (
            /***/
            function(f, d, t) {
              f.exports = t(64785).EventEmitter;
            }
          ),
          /***/
          43143: (
            /***/
            function(f, d, t) {
              var i = t(11432).Buffer, r = i.isEncoding || function(E) {
                switch (E = "" + E, E && E.toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                  case "raw":
                    return !0;
                  default:
                    return !1;
                }
              };
              function n(E) {
                if (!E)
                  return "utf8";
                for (var T; ; )
                  switch (E) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return E;
                    default:
                      if (T)
                        return;
                      E = ("" + E).toLowerCase(), T = !0;
                  }
              }
              function o(E) {
                var T = n(E);
                if (typeof T != "string" && (i.isEncoding === r || !r(E)))
                  throw new Error("Unknown encoding: " + E);
                return T || E;
              }
              d.I = h;
              function h(E) {
                this.encoding = o(E);
                var T;
                switch (this.encoding) {
                  case "utf16le":
                    this.text = x, this.end = e, T = 4;
                    break;
                  case "utf8":
                    this.fillLast = s, T = 4;
                    break;
                  case "base64":
                    this.text = b, this.end = A, T = 3;
                    break;
                  default:
                    this.write = P, this.end = D;
                    return;
                }
                this.lastNeed = 0, this.lastTotal = 0, this.lastChar = i.allocUnsafe(T);
              }
              h.prototype.write = function(E) {
                if (E.length === 0)
                  return "";
                var T, C;
                if (this.lastNeed) {
                  if (T = this.fillLast(E), T === void 0)
                    return "";
                  C = this.lastNeed, this.lastNeed = 0;
                } else
                  C = 0;
                return C < E.length ? T ? T + this.text(E, C) : this.text(E, C) : T || "";
              }, h.prototype.end = y, h.prototype.text = v, h.prototype.fillLast = function(E) {
                if (this.lastNeed <= E.length)
                  return E.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                E.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, E.length), this.lastNeed -= E.length;
              };
              function u(E) {
                return E <= 127 ? 0 : E >> 5 === 6 ? 2 : E >> 4 === 14 ? 3 : E >> 3 === 30 ? 4 : E >> 6 === 2 ? -1 : -2;
              }
              function l(E, T, C) {
                var F = T.length - 1;
                if (F < C)
                  return 0;
                var m = u(T[F]);
                return m >= 0 ? (m > 0 && (E.lastNeed = m - 1), m) : --F < C || m === -2 ? 0 : (m = u(T[F]), m >= 0 ? (m > 0 && (E.lastNeed = m - 2), m) : --F < C || m === -2 ? 0 : (m = u(T[F]), m >= 0 ? (m > 0 && (m === 2 ? m = 0 : E.lastNeed = m - 3), m) : 0));
              }
              function c(E, T, C) {
                if ((T[0] & 192) !== 128)
                  return E.lastNeed = 0, "ï¿½";
                if (E.lastNeed > 1 && T.length > 1) {
                  if ((T[1] & 192) !== 128)
                    return E.lastNeed = 1, "ï¿½";
                  if (E.lastNeed > 2 && T.length > 2 && (T[2] & 192) !== 128)
                    return E.lastNeed = 2, "ï¿½";
                }
              }
              function s(E) {
                var T = this.lastTotal - this.lastNeed, C = c(this, E);
                if (C !== void 0)
                  return C;
                if (this.lastNeed <= E.length)
                  return E.copy(this.lastChar, T, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                E.copy(this.lastChar, T, 0, E.length), this.lastNeed -= E.length;
              }
              function v(E, T) {
                var C = l(this, E, T);
                if (!this.lastNeed)
                  return E.toString("utf8", T);
                this.lastTotal = C;
                var F = E.length - (C - this.lastNeed);
                return E.copy(this.lastChar, 0, F), E.toString("utf8", T, F);
              }
              function y(E) {
                var T = E && E.length ? this.write(E) : "";
                return this.lastNeed ? T + "ï¿½" : T;
              }
              function x(E, T) {
                if ((E.length - T) % 2 === 0) {
                  var C = E.toString("utf16le", T);
                  if (C) {
                    var F = C.charCodeAt(C.length - 1);
                    if (F >= 55296 && F <= 56319)
                      return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = E[E.length - 2], this.lastChar[1] = E[E.length - 1], C.slice(0, -1);
                  }
                  return C;
                }
                return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = E[E.length - 1], E.toString("utf16le", T, E.length - 1);
              }
              function e(E) {
                var T = E && E.length ? this.write(E) : "";
                if (this.lastNeed) {
                  var C = this.lastTotal - this.lastNeed;
                  return T + this.lastChar.toString("utf16le", 0, C);
                }
                return T;
              }
              function b(E, T) {
                var C = (E.length - T) % 3;
                return C === 0 ? E.toString("base64", T) : (this.lastNeed = 3 - C, this.lastTotal = 3, C === 1 ? this.lastChar[0] = E[E.length - 1] : (this.lastChar[0] = E[E.length - 2], this.lastChar[1] = E[E.length - 1]), E.toString("base64", T, E.length - C));
              }
              function A(E) {
                var T = E && E.length ? this.write(E) : "";
                return this.lastNeed ? T + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : T;
              }
              function P(E) {
                return E.toString(this.encoding);
              }
              function D(E) {
                return E && E.length ? this.write(E) : "";
              }
            }
          ),
          /***/
          3483: (
            /***/
            function(f) {
              var d = 0, t = -3;
              function i() {
                this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
              }
              function r(I, O) {
                this.source = I, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = O, this.destLen = 0, this.ltree = new i(), this.dtree = new i();
              }
              var n = new i(), o = new i(), h = new Uint8Array(30), u = new Uint16Array(30), l = new Uint8Array(30), c = new Uint16Array(30), s = new Uint8Array([
                16,
                17,
                18,
                0,
                8,
                7,
                9,
                6,
                10,
                5,
                11,
                4,
                12,
                3,
                13,
                2,
                14,
                1,
                15
              ]), v = new i(), y = new Uint8Array(288 + 32);
              function x(I, O, M, N) {
                var G, ot;
                for (G = 0; G < M; ++G)
                  I[G] = 0;
                for (G = 0; G < 30 - M; ++G)
                  I[G + M] = G / M | 0;
                for (ot = N, G = 0; G < 30; ++G)
                  O[G] = ot, ot += 1 << I[G];
              }
              function e(I, O) {
                var M;
                for (M = 0; M < 7; ++M)
                  I.table[M] = 0;
                for (I.table[7] = 24, I.table[8] = 152, I.table[9] = 112, M = 0; M < 24; ++M)
                  I.trans[M] = 256 + M;
                for (M = 0; M < 144; ++M)
                  I.trans[24 + M] = M;
                for (M = 0; M < 8; ++M)
                  I.trans[168 + M] = 280 + M;
                for (M = 0; M < 112; ++M)
                  I.trans[176 + M] = 144 + M;
                for (M = 0; M < 5; ++M)
                  O.table[M] = 0;
                for (O.table[5] = 32, M = 0; M < 32; ++M)
                  O.trans[M] = M;
              }
              var b = new Uint16Array(16);
              function A(I, O, M, N) {
                var G, ot;
                for (G = 0; G < 16; ++G)
                  I.table[G] = 0;
                for (G = 0; G < N; ++G)
                  I.table[O[M + G]]++;
                for (I.table[0] = 0, ot = 0, G = 0; G < 16; ++G)
                  b[G] = ot, ot += I.table[G];
                for (G = 0; G < N; ++G)
                  O[M + G] && (I.trans[b[O[M + G]]++] = G);
              }
              function P(I) {
                I.bitcount-- || (I.tag = I.source[I.sourceIndex++], I.bitcount = 7);
                var O = I.tag & 1;
                return I.tag >>>= 1, O;
              }
              function D(I, O, M) {
                if (!O)
                  return M;
                for (; I.bitcount < 24; )
                  I.tag |= I.source[I.sourceIndex++] << I.bitcount, I.bitcount += 8;
                var N = I.tag & 65535 >>> 16 - O;
                return I.tag >>>= O, I.bitcount -= O, N + M;
              }
              function E(I, O) {
                for (; I.bitcount < 24; )
                  I.tag |= I.source[I.sourceIndex++] << I.bitcount, I.bitcount += 8;
                var M = 0, N = 0, G = 0, ot = I.tag;
                do
                  N = 2 * N + (ot & 1), ot >>>= 1, ++G, M += O.table[G], N -= O.table[G];
                while (N >= 0);
                return I.tag = ot, I.bitcount -= G, O.trans[M + N];
              }
              function T(I, O, M) {
                var N, G, ot, K, nt, xt;
                for (N = D(I, 5, 257), G = D(I, 5, 1), ot = D(I, 4, 4), K = 0; K < 19; ++K)
                  y[K] = 0;
                for (K = 0; K < ot; ++K) {
                  var bt = D(I, 3, 0);
                  y[s[K]] = bt;
                }
                for (A(v, y, 0, 19), nt = 0; nt < N + G; ) {
                  var St = E(I, v);
                  switch (St) {
                    case 16:
                      var Dt = y[nt - 1];
                      for (xt = D(I, 2, 3); xt; --xt)
                        y[nt++] = Dt;
                      break;
                    case 17:
                      for (xt = D(I, 3, 3); xt; --xt)
                        y[nt++] = 0;
                      break;
                    case 18:
                      for (xt = D(I, 7, 11); xt; --xt)
                        y[nt++] = 0;
                      break;
                    default:
                      y[nt++] = St;
                      break;
                  }
                }
                A(O, y, 0, N), A(M, y, N, G);
              }
              function C(I, O, M) {
                for (; ; ) {
                  var N = E(I, O);
                  if (N === 256)
                    return d;
                  if (N < 256)
                    I.dest[I.destLen++] = N;
                  else {
                    var G, ot, K, nt;
                    for (N -= 257, G = D(I, h[N], u[N]), ot = E(I, M), K = I.destLen - D(I, l[ot], c[ot]), nt = K; nt < K + G; ++nt)
                      I.dest[I.destLen++] = I.dest[nt];
                  }
                }
              }
              function F(I) {
                for (var O, M, N; I.bitcount > 8; )
                  I.sourceIndex--, I.bitcount -= 8;
                if (O = I.source[I.sourceIndex + 1], O = 256 * O + I.source[I.sourceIndex], M = I.source[I.sourceIndex + 3], M = 256 * M + I.source[I.sourceIndex + 2], O !== (~M & 65535))
                  return t;
                for (I.sourceIndex += 4, N = O; N; --N)
                  I.dest[I.destLen++] = I.source[I.sourceIndex++];
                return I.bitcount = 0, d;
              }
              function m(I, O) {
                var M = new r(I, O), N, G, ot;
                do {
                  switch (N = P(M), G = D(M, 2, 0), G) {
                    case 0:
                      ot = F(M);
                      break;
                    case 1:
                      ot = C(M, n, o);
                      break;
                    case 2:
                      T(M, M.ltree, M.dtree), ot = C(M, M.ltree, M.dtree);
                      break;
                    default:
                      ot = t;
                  }
                  if (ot !== d)
                    throw new Error("Data error");
                } while (!N);
                return M.destLen < M.dest.length ? typeof M.dest.slice == "function" ? M.dest.slice(0, M.destLen) : M.dest.subarray(0, M.destLen) : M.dest;
              }
              e(n, o), x(h, u, 4, 3), x(l, c, 2, 1), h[28] = 0, u[28] = 258, f.exports = m;
            }
          ),
          /***/
          16465: (
            /***/
            function(f, d, t) {
              f.exports = i;
              function i(n, o) {
                if (r("noDeprecation"))
                  return n;
                var h = !1;
                function u() {
                  if (!h) {
                    if (r("throwDeprecation"))
                      throw new Error(o);
                    r("traceDeprecation") ? console.trace(o) : console.warn(o), h = !0;
                  }
                  return n.apply(this, arguments);
                }
                return u;
              }
              function r(n) {
                try {
                  if (!t.g.localStorage)
                    return !1;
                } catch (h) {
                  return !1;
                }
                var o = t.g.localStorage[n];
                return o == null ? !1 : String(o).toLowerCase() === "true";
              }
            }
          ),
          /***/
          41201: (
            /***/
            function(f) {
              f.exports = function(t) {
                return t && typeof t == "object" && typeof t.copy == "function" && typeof t.fill == "function" && typeof t.readUInt8 == "function";
              };
            }
          ),
          /***/
          29490: (
            /***/
            function(f, d, t) {
              var i = t(67906), r = t(44610), n = t(43381), o = t(46094);
              function h(It) {
                return It.call.bind(It);
              }
              var u = typeof BigInt != "undefined", l = typeof Symbol != "undefined", c = h(Object.prototype.toString), s = h(Number.prototype.valueOf), v = h(String.prototype.valueOf), y = h(Boolean.prototype.valueOf);
              if (u)
                var x = h(BigInt.prototype.valueOf);
              if (l)
                var e = h(Symbol.prototype.valueOf);
              function b(It, re) {
                if (typeof It != "object")
                  return !1;
                try {
                  return re(It), !0;
                } catch (be) {
                  return !1;
                }
              }
              d.isArgumentsObject = i, d.isGeneratorFunction = r, d.isTypedArray = o;
              function A(It) {
                return typeof Promise != "undefined" && It instanceof Promise || It !== null && typeof It == "object" && typeof It.then == "function" && typeof It.catch == "function";
              }
              d.isPromise = A;
              function P(It) {
                return typeof ArrayBuffer != "undefined" && ArrayBuffer.isView ? ArrayBuffer.isView(It) : o(It) || ut(It);
              }
              d.isArrayBufferView = P;
              function D(It) {
                return n(It) === "Uint8Array";
              }
              d.isUint8Array = D;
              function E(It) {
                return n(It) === "Uint8ClampedArray";
              }
              d.isUint8ClampedArray = E;
              function T(It) {
                return n(It) === "Uint16Array";
              }
              d.isUint16Array = T;
              function C(It) {
                return n(It) === "Uint32Array";
              }
              d.isUint32Array = C;
              function F(It) {
                return n(It) === "Int8Array";
              }
              d.isInt8Array = F;
              function m(It) {
                return n(It) === "Int16Array";
              }
              d.isInt16Array = m;
              function I(It) {
                return n(It) === "Int32Array";
              }
              d.isInt32Array = I;
              function O(It) {
                return n(It) === "Float32Array";
              }
              d.isFloat32Array = O;
              function M(It) {
                return n(It) === "Float64Array";
              }
              d.isFloat64Array = M;
              function N(It) {
                return n(It) === "BigInt64Array";
              }
              d.isBigInt64Array = N;
              function G(It) {
                return n(It) === "BigUint64Array";
              }
              d.isBigUint64Array = G;
              function ot(It) {
                return c(It) === "[object Map]";
              }
              ot.working = typeof Map != "undefined" && ot(/* @__PURE__ */ new Map());
              function K(It) {
                return typeof Map == "undefined" ? !1 : ot.working ? ot(It) : It instanceof Map;
              }
              d.isMap = K;
              function nt(It) {
                return c(It) === "[object Set]";
              }
              nt.working = typeof Set != "undefined" && nt(/* @__PURE__ */ new Set());
              function xt(It) {
                return typeof Set == "undefined" ? !1 : nt.working ? nt(It) : It instanceof Set;
              }
              d.isSet = xt;
              function bt(It) {
                return c(It) === "[object WeakMap]";
              }
              bt.working = typeof WeakMap != "undefined" && bt(/* @__PURE__ */ new WeakMap());
              function St(It) {
                return typeof WeakMap == "undefined" ? !1 : bt.working ? bt(It) : It instanceof WeakMap;
              }
              d.isWeakMap = St;
              function Dt(It) {
                return c(It) === "[object WeakSet]";
              }
              Dt.working = typeof WeakSet != "undefined" && Dt(/* @__PURE__ */ new WeakSet());
              function Lt(It) {
                return Dt(It);
              }
              d.isWeakSet = Lt;
              function jt(It) {
                return c(It) === "[object ArrayBuffer]";
              }
              jt.working = typeof ArrayBuffer != "undefined" && jt(new ArrayBuffer());
              function J(It) {
                return typeof ArrayBuffer == "undefined" ? !1 : jt.working ? jt(It) : It instanceof ArrayBuffer;
              }
              d.isArrayBuffer = J;
              function yt(It) {
                return c(It) === "[object DataView]";
              }
              yt.working = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined" && yt(new DataView(new ArrayBuffer(1), 0, 1));
              function ut(It) {
                return typeof DataView == "undefined" ? !1 : yt.working ? yt(It) : It instanceof DataView;
              }
              d.isDataView = ut;
              var st = typeof SharedArrayBuffer != "undefined" ? SharedArrayBuffer : void 0;
              function wt(It) {
                return c(It) === "[object SharedArrayBuffer]";
              }
              function V(It) {
                return typeof st == "undefined" ? !1 : (typeof wt.working == "undefined" && (wt.working = wt(new st())), wt.working ? wt(It) : It instanceof st);
              }
              d.isSharedArrayBuffer = V;
              function Ft(It) {
                return c(It) === "[object AsyncFunction]";
              }
              d.isAsyncFunction = Ft;
              function U(It) {
                return c(It) === "[object Map Iterator]";
              }
              d.isMapIterator = U;
              function S(It) {
                return c(It) === "[object Set Iterator]";
              }
              d.isSetIterator = S;
              function k(It) {
                return c(It) === "[object Generator]";
              }
              d.isGeneratorObject = k;
              function H(It) {
                return c(It) === "[object WebAssembly.Module]";
              }
              d.isWebAssemblyCompiledModule = H;
              function it(It) {
                return b(It, s);
              }
              d.isNumberObject = it;
              function et(It) {
                return b(It, v);
              }
              d.isStringObject = et;
              function tt(It) {
                return b(It, y);
              }
              d.isBooleanObject = tt;
              function Ct(It) {
                return u && b(It, x);
              }
              d.isBigIntObject = Ct;
              function Rt(It) {
                return l && b(It, e);
              }
              d.isSymbolObject = Rt;
              function Kt(It) {
                return it(It) || et(It) || tt(It) || Ct(It) || Rt(It);
              }
              d.isBoxedPrimitive = Kt;
              function Gt(It) {
                return typeof Uint8Array != "undefined" && (J(It) || V(It));
              }
              d.isAnyArrayBuffer = Gt, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(It) {
                Object.defineProperty(d, It, {
                  enumerable: !1,
                  value: function() {
                    throw new Error(It + " is not supported in userland");
                  }
                });
              });
            }
          ),
          /***/
          7187: (
            /***/
            function(f, d, t) {
              var i = t(9964), r = Object.getOwnPropertyDescriptors || function(st) {
                for (var wt = Object.keys(st), V = {}, Ft = 0; Ft < wt.length; Ft++)
                  V[wt[Ft]] = Object.getOwnPropertyDescriptor(st, wt[Ft]);
                return V;
              }, n = /%[sdj%]/g;
              d.format = function(ut) {
                if (!m(ut)) {
                  for (var st = [], wt = 0; wt < arguments.length; wt++)
                    st.push(l(arguments[wt]));
                  return st.join(" ");
                }
                for (var wt = 1, V = arguments, Ft = V.length, U = String(ut).replace(n, function(k) {
                  if (k === "%%")
                    return "%";
                  if (wt >= Ft)
                    return k;
                  switch (k) {
                    case "%s":
                      return String(V[wt++]);
                    case "%d":
                      return Number(V[wt++]);
                    case "%j":
                      try {
                        return JSON.stringify(V[wt++]);
                      } catch (H) {
                        return "[Circular]";
                      }
                    default:
                      return k;
                  }
                }), S = V[wt]; wt < Ft; S = V[++wt])
                  T(S) || !N(S) ? U += " " + S : U += " " + l(S);
                return U;
              }, d.deprecate = function(ut, st) {
                if (typeof i != "undefined" && i.noDeprecation === !0)
                  return ut;
                if (typeof i == "undefined")
                  return function() {
                    return d.deprecate(ut, st).apply(this, arguments);
                  };
                var wt = !1;
                function V() {
                  if (!wt) {
                    if (i.throwDeprecation)
                      throw new Error(st);
                    i.traceDeprecation ? console.trace(st) : console.error(st), wt = !0;
                  }
                  return ut.apply(this, arguments);
                }
                return V;
              };
              var o = {}, h = /^$/;
              if (i.env.NODE_DEBUG) {
                var u = i.env.NODE_DEBUG;
                u = u.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), h = new RegExp("^" + u + "$", "i");
              }
              d.debuglog = function(ut) {
                if (ut = ut.toUpperCase(), !o[ut])
                  if (h.test(ut)) {
                    var st = i.pid;
                    o[ut] = function() {
                      var wt = d.format.apply(d, arguments);
                      console.error("%s %d: %s", ut, st, wt);
                    };
                  } else
                    o[ut] = function() {
                    };
                return o[ut];
              };
              function l(ut, st) {
                var wt = {
                  seen: [],
                  stylize: s
                };
                return arguments.length >= 3 && (wt.depth = arguments[2]), arguments.length >= 4 && (wt.colors = arguments[3]), E(st) ? wt.showHidden = st : st && d._extend(wt, st), O(wt.showHidden) && (wt.showHidden = !1), O(wt.depth) && (wt.depth = 2), O(wt.colors) && (wt.colors = !1), O(wt.customInspect) && (wt.customInspect = !0), wt.colors && (wt.stylize = c), y(wt, ut, wt.depth);
              }
              d.inspect = l, l.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
              }, l.styles = {
                special: "cyan",
                number: "yellow",
                boolean: "yellow",
                undefined: "grey",
                null: "bold",
                string: "green",
                date: "magenta",
                // "name": intentionally not styling
                regexp: "red"
              };
              function c(ut, st) {
                var wt = l.styles[st];
                return wt ? "\x1B[" + l.colors[wt][0] + "m" + ut + "\x1B[" + l.colors[wt][1] + "m" : ut;
              }
              function s(ut, st) {
                return ut;
              }
              function v(ut) {
                var st = {};
                return ut.forEach(function(wt, V) {
                  st[wt] = !0;
                }), st;
              }
              function y(ut, st, wt) {
                if (ut.customInspect && st && K(st.inspect) && // Filter out the util module, it's inspect function is special
                st.inspect !== d.inspect && // Also filter out any prototype objects using the circular check.
                !(st.constructor && st.constructor.prototype === st)) {
                  var V = st.inspect(wt, ut);
                  return m(V) || (V = y(ut, V, wt)), V;
                }
                var Ft = x(ut, st);
                if (Ft)
                  return Ft;
                var U = Object.keys(st), S = v(U);
                if (ut.showHidden && (U = Object.getOwnPropertyNames(st)), ot(st) && (U.indexOf("message") >= 0 || U.indexOf("description") >= 0))
                  return e(st);
                if (U.length === 0) {
                  if (K(st)) {
                    var k = st.name ? ": " + st.name : "";
                    return ut.stylize("[Function" + k + "]", "special");
                  }
                  if (M(st))
                    return ut.stylize(RegExp.prototype.toString.call(st), "regexp");
                  if (G(st))
                    return ut.stylize(Date.prototype.toString.call(st), "date");
                  if (ot(st))
                    return e(st);
                }
                var H = "", it = !1, et = ["{", "}"];
                if (D(st) && (it = !0, et = ["[", "]"]), K(st)) {
                  var tt = st.name ? ": " + st.name : "";
                  H = " [Function" + tt + "]";
                }
                if (M(st) && (H = " " + RegExp.prototype.toString.call(st)), G(st) && (H = " " + Date.prototype.toUTCString.call(st)), ot(st) && (H = " " + e(st)), U.length === 0 && (!it || st.length == 0))
                  return et[0] + H + et[1];
                if (wt < 0)
                  return M(st) ? ut.stylize(RegExp.prototype.toString.call(st), "regexp") : ut.stylize("[Object]", "special");
                ut.seen.push(st);
                var Ct;
                return it ? Ct = b(ut, st, wt, S, U) : Ct = U.map(function(Rt) {
                  return A(ut, st, wt, S, Rt, it);
                }), ut.seen.pop(), P(Ct, H, et);
              }
              function x(ut, st) {
                if (O(st))
                  return ut.stylize("undefined", "undefined");
                if (m(st)) {
                  var wt = "'" + JSON.stringify(st).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                  return ut.stylize(wt, "string");
                }
                if (F(st))
                  return ut.stylize("" + st, "number");
                if (E(st))
                  return ut.stylize("" + st, "boolean");
                if (T(st))
                  return ut.stylize("null", "null");
              }
              function e(ut) {
                return "[" + Error.prototype.toString.call(ut) + "]";
              }
              function b(ut, st, wt, V, Ft) {
                for (var U = [], S = 0, k = st.length; S < k; ++S)
                  Lt(st, String(S)) ? U.push(A(
                    ut,
                    st,
                    wt,
                    V,
                    String(S),
                    !0
                  )) : U.push("");
                return Ft.forEach(function(H) {
                  H.match(/^\d+$/) || U.push(A(
                    ut,
                    st,
                    wt,
                    V,
                    H,
                    !0
                  ));
                }), U;
              }
              function A(ut, st, wt, V, Ft, U) {
                var S, k, H;
                if (H = Object.getOwnPropertyDescriptor(st, Ft) || { value: st[Ft] }, H.get ? H.set ? k = ut.stylize("[Getter/Setter]", "special") : k = ut.stylize("[Getter]", "special") : H.set && (k = ut.stylize("[Setter]", "special")), Lt(V, Ft) || (S = "[" + Ft + "]"), k || (ut.seen.indexOf(H.value) < 0 ? (T(wt) ? k = y(ut, H.value, null) : k = y(ut, H.value, wt - 1), k.indexOf(`
`) > -1 && (U ? k = k.split(`
`).map(function(it) {
                  return "  " + it;
                }).join(`
`).slice(2) : k = `
` + k.split(`
`).map(function(it) {
                  return "   " + it;
                }).join(`
`))) : k = ut.stylize("[Circular]", "special")), O(S)) {
                  if (U && Ft.match(/^\d+$/))
                    return k;
                  S = JSON.stringify("" + Ft), S.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (S = S.slice(1, -1), S = ut.stylize(S, "name")) : (S = S.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), S = ut.stylize(S, "string"));
                }
                return S + ": " + k;
              }
              function P(ut, st, wt) {
                var V = ut.reduce(function(Ft, U) {
                  return U.indexOf(`
`) >= 0, Ft + U.replace(/\u001b\[\d\d?m/g, "").length + 1;
                }, 0);
                return V > 60 ? wt[0] + (st === "" ? "" : st + `
 `) + " " + ut.join(`,
  `) + " " + wt[1] : wt[0] + st + " " + ut.join(", ") + " " + wt[1];
              }
              d.types = t(29490);
              function D(ut) {
                return Array.isArray(ut);
              }
              d.isArray = D;
              function E(ut) {
                return typeof ut == "boolean";
              }
              d.isBoolean = E;
              function T(ut) {
                return ut === null;
              }
              d.isNull = T;
              function C(ut) {
                return ut == null;
              }
              d.isNullOrUndefined = C;
              function F(ut) {
                return typeof ut == "number";
              }
              d.isNumber = F;
              function m(ut) {
                return typeof ut == "string";
              }
              d.isString = m;
              function I(ut) {
                return typeof ut == "symbol";
              }
              d.isSymbol = I;
              function O(ut) {
                return ut === void 0;
              }
              d.isUndefined = O;
              function M(ut) {
                return N(ut) && xt(ut) === "[object RegExp]";
              }
              d.isRegExp = M, d.types.isRegExp = M;
              function N(ut) {
                return typeof ut == "object" && ut !== null;
              }
              d.isObject = N;
              function G(ut) {
                return N(ut) && xt(ut) === "[object Date]";
              }
              d.isDate = G, d.types.isDate = G;
              function ot(ut) {
                return N(ut) && (xt(ut) === "[object Error]" || ut instanceof Error);
              }
              d.isError = ot, d.types.isNativeError = ot;
              function K(ut) {
                return typeof ut == "function";
              }
              d.isFunction = K;
              function nt(ut) {
                return ut === null || typeof ut == "boolean" || typeof ut == "number" || typeof ut == "string" || typeof ut == "symbol" || // ES6 symbol
                typeof ut == "undefined";
              }
              d.isPrimitive = nt, d.isBuffer = t(41201);
              function xt(ut) {
                return Object.prototype.toString.call(ut);
              }
              function bt(ut) {
                return ut < 10 ? "0" + ut.toString(10) : ut.toString(10);
              }
              var St = [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec"
              ];
              function Dt() {
                var ut = /* @__PURE__ */ new Date(), st = [
                  bt(ut.getHours()),
                  bt(ut.getMinutes()),
                  bt(ut.getSeconds())
                ].join(":");
                return [ut.getDate(), St[ut.getMonth()], st].join(" ");
              }
              d.log = function() {
                console.log("%s - %s", Dt(), d.format.apply(d, arguments));
              }, d.inherits = t(89784), d._extend = function(ut, st) {
                if (!st || !N(st))
                  return ut;
                for (var wt = Object.keys(st), V = wt.length; V--; )
                  ut[wt[V]] = st[wt[V]];
                return ut;
              };
              function Lt(ut, st) {
                return Object.prototype.hasOwnProperty.call(ut, st);
              }
              var jt = typeof Symbol != "undefined" ? Symbol("util.promisify.custom") : void 0;
              d.promisify = function(st) {
                if (typeof st != "function")
                  throw new TypeError('The "original" argument must be of type Function');
                if (jt && st[jt]) {
                  var wt = st[jt];
                  if (typeof wt != "function")
                    throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                  return Object.defineProperty(wt, jt, {
                    value: wt,
                    enumerable: !1,
                    writable: !1,
                    configurable: !0
                  }), wt;
                }
                function wt() {
                  for (var V, Ft, U = new Promise(function(H, it) {
                    V = H, Ft = it;
                  }), S = [], k = 0; k < arguments.length; k++)
                    S.push(arguments[k]);
                  S.push(function(H, it) {
                    H ? Ft(H) : V(it);
                  });
                  try {
                    st.apply(this, S);
                  } catch (H) {
                    Ft(H);
                  }
                  return U;
                }
                return Object.setPrototypeOf(wt, Object.getPrototypeOf(st)), jt && Object.defineProperty(wt, jt, {
                  value: wt,
                  enumerable: !1,
                  writable: !1,
                  configurable: !0
                }), Object.defineProperties(
                  wt,
                  r(st)
                );
              }, d.promisify.custom = jt;
              function J(ut, st) {
                if (!ut) {
                  var wt = new Error("Promise was rejected with a falsy value");
                  wt.reason = ut, ut = wt;
                }
                return st(ut);
              }
              function yt(ut) {
                if (typeof ut != "function")
                  throw new TypeError('The "original" argument must be of type Function');
                function st() {
                  for (var wt = [], V = 0; V < arguments.length; V++)
                    wt.push(arguments[V]);
                  var Ft = wt.pop();
                  if (typeof Ft != "function")
                    throw new TypeError("The last argument must be of type Function");
                  var U = this, S = function() {
                    return Ft.apply(U, arguments);
                  };
                  ut.apply(this, wt).then(
                    function(k) {
                      i.nextTick(S.bind(null, null, k));
                    },
                    function(k) {
                      i.nextTick(J.bind(null, k, S));
                    }
                  );
                }
                return Object.setPrototypeOf(st, Object.getPrototypeOf(ut)), Object.defineProperties(
                  st,
                  r(ut)
                ), st;
              }
              d.callbackify = yt;
            }
          ),
          /***/
          43381: (
            /***/
            function(f, d, t) {
              var i = t(68404), r = t(10821), n = t(26601), o = t(22774), h = t(68109), u = o("Object.prototype.toString"), l = t(26626)(), c = typeof globalThis == "undefined" ? t.g : globalThis, s = r(), v = o("String.prototype.slice"), y = Object.getPrototypeOf, x = o("Array.prototype.indexOf", !0) || function(D, E) {
                for (var T = 0; T < D.length; T += 1)
                  if (D[T] === E)
                    return T;
                return -1;
              }, e = { __proto__: null };
              l && h && y ? i(s, function(P) {
                var D = new c[P]();
                if (Symbol.toStringTag in D) {
                  var E = y(D), T = h(E, Symbol.toStringTag);
                  if (!T) {
                    var C = y(E);
                    T = h(C, Symbol.toStringTag);
                  }
                  e["$" + P] = n(T.get);
                }
              }) : i(s, function(P) {
                var D = new c[P](), E = D.slice || D.set;
                E && (e["$" + P] = n(E));
              });
              var b = function(D) {
                var E = !1;
                return i(
                  // eslint-disable-next-line no-extra-parens
                  /** @type {Record<`\$${TypedArrayName}`, Getter>} */
                  /** @type {any} */
                  e,
                  /** @type {(getter: Getter, name: `\$${import('.').TypedArrayName}`) => void} */
                  function(T, C) {
                    if (!E)
                      try {
                        "$" + T(D) === C && (E = v(C, 1));
                      } catch (F) {
                      }
                  }
                ), E;
              }, A = function(D) {
                var E = !1;
                return i(
                  // eslint-disable-next-line no-extra-parens
                  /** @type {Record<`\$${TypedArrayName}`, Getter>} */
                  /** @type {any} */
                  e,
                  /** @type {(getter: typeof cache, name: `\$${import('.').TypedArrayName}`) => void} */
                  function(T, C) {
                    if (!E)
                      try {
                        T(D), E = v(C, 1);
                      } catch (F) {
                      }
                  }
                ), E;
              };
              f.exports = function(D) {
                if (!D || typeof D != "object")
                  return !1;
                if (!l) {
                  var E = v(u(D), 8, -1);
                  return x(s, E) > -1 ? E : E !== "Object" ? !1 : A(D);
                }
                return h ? b(D) : null;
              };
            }
          ),
          /***/
          52242: (
            /***/
            function(f, d, t) {
              f.exports = t(45349);
            }
          ),
          /***/
          45349: (
            /***/
            function(f, d, t) {
              (function() {
                var i;
                if (f.exports && !t.g.xmldocAssumeBrowser)
                  i = t(61733);
                else if (i = this.sax, !i)
                  throw new Error(
                    "Expected sax to be defined. Make sure you're including sax.js before this file."
                  );
                function r(T, C) {
                  if (!C) {
                    var F = l[l.length - 1];
                    F.parser && (C = F.parser);
                  }
                  this.name = T.name, this.attr = T.attributes, this.val = "", this.children = [], this.firstChild = null, this.lastChild = null, this.line = C ? C.line : null, this.column = C ? C.column : null, this.position = C ? C.position : null, this.startTagPosition = C ? C.startTagPosition : null;
                }
                r.prototype._addChild = function(T) {
                  this.children.push(T), this.firstChild || (this.firstChild = T), this.lastChild = T;
                }, r.prototype._opentag = function(T) {
                  var C = new r(T);
                  this._addChild(C), l.unshift(C);
                }, r.prototype._closetag = function() {
                  l.shift();
                }, r.prototype._text = function(T) {
                  typeof this.children != "undefined" && (this.val += T, this._addChild(new n(T)));
                }, r.prototype._cdata = function(T) {
                  this.val += T, this._addChild(new o(T));
                }, r.prototype._comment = function(T) {
                  typeof this.children != "undefined" && this._addChild(new h(T));
                }, r.prototype._error = function(T) {
                  throw T;
                }, r.prototype.eachChild = function(T, C) {
                  for (var F = 0, m = this.children.length; F < m; F++)
                    if (this.children[F].type === "element" && T.call(C, this.children[F], F, this.children) === !1)
                      return;
                }, r.prototype.childNamed = function(T) {
                  for (var C = 0, F = this.children.length; C < F; C++) {
                    var m = this.children[C];
                    if (m.name === T)
                      return m;
                  }
                }, r.prototype.childrenNamed = function(T) {
                  for (var C = [], F = 0, m = this.children.length; F < m; F++)
                    this.children[F].name === T && C.push(this.children[F]);
                  return C;
                }, r.prototype.childWithAttribute = function(T, C) {
                  for (var F = 0, m = this.children.length; F < m; F++) {
                    var I = this.children[F];
                    if (I.type === "element" && (C && I.attr[T] === C || !C && I.attr[T]))
                      return I;
                  }
                }, r.prototype.descendantsNamed = function(T) {
                  for (var C = [], F = 0, m = this.children.length; F < m; F++) {
                    var I = this.children[F];
                    I.type === "element" && (I.name === T && C.push(I), C = C.concat(I.descendantsNamed(T)));
                  }
                  return C;
                }, r.prototype.descendantWithPath = function(T) {
                  for (var C = this, F = T.split("."), m = 0, I = F.length; m < I; m++)
                    if (C && C.type === "element")
                      C = C.childNamed(F[m]);
                    else
                      return;
                  return C;
                }, r.prototype.valueWithPath = function(T) {
                  var C = T.split("@"), F = this.descendantWithPath(C[0]);
                  if (F)
                    return C.length > 1 ? F.attr[C[1]] : F.val;
                }, r.prototype.toString = function(T) {
                  return this.toStringWithIndent("", T);
                }, r.prototype.toStringWithIndent = function(T, C) {
                  var F = T + "<" + this.name, m = C && C.compressed ? "" : `
`;
                  C && C.preserveWhitespace;
                  for (var I in this.attr)
                    Object.prototype.hasOwnProperty.call(this.attr, I) && (F += " " + I + '="' + D(this.attr[I]) + '"');
                  if (this.children.length === 1 && this.children[0].type !== "element")
                    F += ">" + this.children[0].toString(C) + "</" + this.name + ">";
                  else if (this.children.length) {
                    F += ">" + m;
                    for (var O = T + (C && C.compressed ? "" : "  "), M = 0, N = this.children.length; M < N; M++)
                      F += this.children[M].toStringWithIndent(O, C) + m;
                    F += T + "</" + this.name + ">";
                  } else if (C && C.html) {
                    var G = [
                      "area",
                      "base",
                      "br",
                      "col",
                      "embed",
                      "frame",
                      "hr",
                      "img",
                      "input",
                      "keygen",
                      "link",
                      "menuitem",
                      "meta",
                      "param",
                      "source",
                      "track",
                      "wbr"
                    ];
                    G.indexOf(this.name) !== -1 ? F += "/>" : F += "></" + this.name + ">";
                  } else
                    F += "/>";
                  return F;
                };
                function n(T) {
                  this.text = T;
                }
                n.prototype.toString = function(T) {
                  return E(D(this.text), T);
                }, n.prototype.toStringWithIndent = function(T, C) {
                  return T + this.toString(C);
                };
                function o(T) {
                  this.cdata = T;
                }
                o.prototype.toString = function(T) {
                  return "<![CDATA[" + E(this.cdata, T) + "]]>";
                }, o.prototype.toStringWithIndent = function(T, C) {
                  return T + this.toString(C);
                };
                function h(T) {
                  this.comment = T;
                }
                h.prototype.toString = function(T) {
                  return "<!--" + E(D(this.comment), T) + "-->";
                }, h.prototype.toStringWithIndent = function(T, C) {
                  return T + this.toString(C);
                }, r.prototype.type = "element", n.prototype.type = "text", o.prototype.type = "cdata", h.prototype.type = "comment";
                function u(T) {
                  if (T && (T = T.toString().trim()), !T)
                    throw new Error("No XML to parse!");
                  this.doctype = "", this.parser = i.parser(!0), c(this.parser), l = [this];
                  try {
                    this.parser.write(T);
                  } finally {
                    delete this.parser;
                  }
                }
                P(u.prototype, r.prototype), u.prototype._opentag = function(T) {
                  typeof this.children == "undefined" ? r.call(this, T) : r.prototype._opentag.apply(this, arguments);
                }, u.prototype._doctype = function(T) {
                  this.doctype += T;
                };
                var l = null;
                function c(T) {
                  T.onopentag = s, T.onclosetag = v, T.ontext = y, T.oncdata = x, T.oncomment = e, T.ondoctype = b, T.onerror = A;
                }
                function s() {
                  l[0] && l[0]._opentag.apply(l[0], arguments);
                }
                function v() {
                  l[0] && l[0]._closetag.apply(l[0], arguments);
                }
                function y() {
                  l[0] && l[0]._text.apply(l[0], arguments);
                }
                function x() {
                  l[0] && l[0]._cdata.apply(l[0], arguments);
                }
                function e() {
                  l[0] && l[0]._comment.apply(l[0], arguments);
                }
                function b() {
                  l[0] && l[0]._doctype.apply(l[0], arguments);
                }
                function A() {
                  l[0] && l[0]._error.apply(l[0], arguments);
                }
                function P(T, C) {
                  for (var F in C)
                    C.hasOwnProperty(F) && (T[F] = C[F]);
                }
                function D(T) {
                  return T.toString().replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&apos;").replace(/"/g, "&quot;");
                }
                function E(T, C) {
                  var F = T;
                  return C && C.trimmed && T.length > 25 && (F = F.substring(0, 25).trim() + "â¦"), C && C.preserveWhitespace || (F = F.trim()), F;
                }
                f.exports && !t.g.xmldocAssumeBrowser ? (f.exports.XmlDocument = u, f.exports.XmlElement = r, f.exports.XmlTextNode = n, f.exports.XmlCDataNode = o, f.exports.XmlCommentNode = h) : (this.XmlDocument = u, this.XmlElement = r, this.XmlTextNode = n, this.XmlCDataNode = o, this.XmlCommentNode = h);
              })();
            }
          ),
          /***/
          7785: (
            /***/
            function(f, d, t) {
              typeof window != "undefined" && !window.Promise && t(98168), t(83043);
              var i = function(n, o) {
                return new Promise(function(h, u) {
                  var l = new XMLHttpRequest();
                  l.open("GET", n, !0);
                  for (var c in o)
                    l.setRequestHeader(c, o[c]);
                  l.responseType = "arraybuffer", l.onreadystatechange = function() {
                    if (l.readyState === 4) {
                      var s = l.status >= 200 && l.status < 300;
                      s || setTimeout(function() {
                        u(new TypeError('Failed to fetch (url: "' + n + '")'));
                      }, 0);
                    }
                  }, l.onload = function() {
                    var s = l.status >= 200 && l.status < 300;
                    s && h(l.response);
                  }, l.onerror = function() {
                    setTimeout(function() {
                      u(new TypeError('Network request failed (url: "' + n + '")'));
                    }, 0);
                  }, l.ontimeout = function() {
                    setTimeout(function() {
                      u(new TypeError('Network request failed (url: "' + n + '")'));
                    }, 0);
                  }, l.send();
                });
              };
              function r(n) {
                this.fs = n, this.resolving = {};
              }
              r.prototype.resolve = function(n, o) {
                if (!this.resolving[n]) {
                  var h = this;
                  this.resolving[n] = new Promise(function(u, l) {
                    n.toLowerCase().indexOf("https://") === 0 || n.toLowerCase().indexOf("http://") === 0 ? h.fs.existsSync(n) ? u() : i(n, o).then(function(c) {
                      h.fs.writeFileSync(n, c), u();
                    }, function(c) {
                      l(c);
                    }) : u();
                  });
                }
                return this.resolving[n];
              }, r.prototype.resolved = function() {
                var n = this;
                return new Promise(function(o, h) {
                  Promise.all(Object.values(n.resolving)).then(function() {
                    o();
                  }, function(u) {
                    h(u);
                  });
                });
              }, f.exports = r;
            }
          ),
          /***/
          45314: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer, r = t(91867).isFunction, n = t(91867).isUndefined, o = t(91867).pack, h = t(3502), u = h.saveAs, l = {
                Roboto: {
                  normal: "Roboto-Regular.ttf",
                  bold: "Roboto-Medium.ttf",
                  italics: "Roboto-Italic.ttf",
                  bolditalics: "Roboto-MediumItalic.ttf"
                }
              }, c, s, v;
              function y(e, b, A, P) {
                this.docDefinition = e, this.tableLayouts = b || null, this.fonts = A || l, this.vfs = P;
              }
              function x() {
                try {
                  var e = new Uint8Array(1), b = { foo: function() {
                    return 42;
                  } };
                  return Object.setPrototypeOf(b, Uint8Array.prototype), Object.setPrototypeOf(e, b), e.foo() === 42;
                } catch (A) {
                  return !1;
                }
              }
              y.prototype._createDoc = function(e, b) {
                var A = function(M) {
                  return typeof M == "object" ? { url: M.url, headers: M.headers } : { url: M, headers: {} };
                };
                e = e || {}, this.tableLayouts && (e.tableLayouts = this.tableLayouts);
                var P = t(81566), D = new P(this.fonts);
                if (t(48181).bindFS(this.vfs), !r(b)) {
                  var E = D.createPdfKitDocument(this.docDefinition, e);
                  return E;
                }
                var T = t(7785), C = new T(t(48181));
                for (var F in this.fonts)
                  if (this.fonts.hasOwnProperty(F)) {
                    if (this.fonts[F].normal)
                      if (Array.isArray(this.fonts[F].normal)) {
                        var m = A(this.fonts[F].normal[0]);
                        C.resolve(m.url, m.headers), this.fonts[F].normal[0] = m.url;
                      } else {
                        var m = A(this.fonts[F].normal);
                        C.resolve(m.url, m.headers), this.fonts[F].normal = m.url;
                      }
                    if (this.fonts[F].bold)
                      if (Array.isArray(this.fonts[F].bold)) {
                        var m = A(this.fonts[F].bold[0]);
                        C.resolve(m.url, m.headers), this.fonts[F].bold[0] = m.url;
                      } else {
                        var m = A(this.fonts[F].bold);
                        C.resolve(m.url, m.headers), this.fonts[F].bold = m.url;
                      }
                    if (this.fonts[F].italics)
                      if (Array.isArray(this.fonts[F].italics)) {
                        var m = A(this.fonts[F].italics[0]);
                        C.resolve(m.url, m.headers), this.fonts[F].italics[0] = m.url;
                      } else {
                        var m = A(this.fonts[F].italics);
                        C.resolve(m.url, m.headers), this.fonts[F].italics = m.url;
                      }
                    if (this.fonts[F].bolditalics)
                      if (Array.isArray(this.fonts[F].bolditalics)) {
                        var m = A(this.fonts[F].bolditalics[0]);
                        C.resolve(m.url, m.headers), this.fonts[F].bolditalics[0] = m.url;
                      } else {
                        var m = A(this.fonts[F].bolditalics);
                        C.resolve(m.url, m.headers), this.fonts[F].bolditalics = m.url;
                      }
                  }
                if (this.docDefinition.images) {
                  for (var I in this.docDefinition.images)
                    if (this.docDefinition.images.hasOwnProperty(I)) {
                      var m = A(this.docDefinition.images[I]);
                      C.resolve(m.url, m.headers), this.docDefinition.images[I] = m.url;
                    }
                }
                var O = this;
                C.resolved().then(function() {
                  var M = D.createPdfKitDocument(O.docDefinition, e);
                  b(M);
                }, function(M) {
                  throw M;
                });
              }, y.prototype._flushDoc = function(e, b) {
                var A = [], P;
                e.on("readable", function() {
                  for (var D; (D = e.read(9007199254740991)) !== null; )
                    A.push(D);
                }), e.on("end", function() {
                  P = i.concat(A), b(P, e._pdfMakePages);
                }), e.end();
              }, y.prototype._getPages = function(e, b) {
                if (!b)
                  throw "_getPages is an async method and needs a callback argument";
                var A = this;
                this._createDoc(e, function(P) {
                  A._flushDoc(P, function(D, E) {
                    b(E);
                  });
                });
              }, y.prototype._bufferToBlob = function(e) {
                var b;
                try {
                  b = new Blob([e], { type: "application/pdf" });
                } catch (P) {
                  if (P.name === "InvalidStateError") {
                    var A = new Uint8Array(e);
                    b = new Blob([A.buffer], { type: "application/pdf" });
                  }
                }
                if (!b)
                  throw "Could not generate blob";
                return b;
              }, y.prototype._openWindow = function() {
                var e = window.open("", "_blank");
                if (e === null)
                  throw "Open PDF in new window blocked by browser";
                return e;
              }, y.prototype._openPdf = function(e, b) {
                b || (b = this._openWindow());
                try {
                  this.getBlob(function(A) {
                    var P = window.URL || window.webkitURL, D = P.createObjectURL(A);
                    b.location.href = D;
                  }, e);
                } catch (A) {
                  throw b.close(), A;
                }
              }, y.prototype.open = function(e, b) {
                e = e || {}, e.autoPrint = !1, b = b || null, this._openPdf(e, b);
              }, y.prototype.print = function(e, b) {
                e = e || {}, e.autoPrint = !0, b = b || null, this._openPdf(e, b);
              }, y.prototype.download = function(e, b, A) {
                r(e) && (n(b) || (A = b), b = e, e = null), e = e || "file.pdf", this.getBlob(function(P) {
                  u(P, e), r(b) && b();
                }, A);
              }, y.prototype.getBase64 = function(e, b) {
                if (!e)
                  throw "getBase64 is an async method and needs a callback argument";
                this.getBuffer(function(A) {
                  e(A.toString("base64"));
                }, b);
              }, y.prototype.getDataUrl = function(e, b) {
                if (!e)
                  throw "getDataUrl is an async method and needs a callback argument";
                this.getBuffer(function(A) {
                  e("data:application/pdf;base64," + A.toString("base64"));
                }, b);
              }, y.prototype.getBlob = function(e, b) {
                if (!e)
                  throw "getBlob is an async method and needs a callback argument";
                var A = this;
                this.getBuffer(function(P) {
                  var D = A._bufferToBlob(P);
                  e(D);
                }, b);
              }, y.prototype.getBuffer = function(e, b) {
                if (!e)
                  throw "getBuffer is an async method and needs a callback argument";
                var A = this;
                this._createDoc(b, function(P) {
                  A._flushDoc(P, function(D) {
                    e(D);
                  });
                });
              }, y.prototype.getStream = function(e, b) {
                if (!r(b)) {
                  var A = this._createDoc(e);
                  return A;
                }
                this._createDoc(e, function(P) {
                  b(P);
                });
              }, f.exports = {
                createPdf: function(e, b, A, P) {
                  if (!x())
                    throw "Your browser does not provide the level of support needed";
                  return new y(
                    e,
                    b || v || t.g.pdfMake.tableLayouts,
                    A || s || t.g.pdfMake.fonts,
                    P || c || t.g.pdfMake.vfs
                  );
                },
                addVirtualFileSystem: function(e) {
                  c = e;
                },
                addFonts: function(e) {
                  s = o(s, e);
                },
                setFonts: function(e) {
                  s = e;
                },
                clearFonts: function() {
                  s = void 0;
                },
                addTableLayouts: function(e) {
                  v = o(v, e);
                },
                setTableLayouts: function(e) {
                  v = e;
                },
                clearTableLayouts: function() {
                  v = void 0;
                }
              };
            }
          ),
          /***/
          48181: (
            /***/
            function(f, d, t) {
              var i = "/", r = t(14598).Buffer;
              function n() {
                this.fileSystem = {}, this.dataSystem = {};
              }
              n.prototype.existsSync = function(h) {
                return h = o(h), typeof this.fileSystem[h] != "undefined" || typeof this.dataSystem[h] != "undefined";
              }, n.prototype.readFileSync = function(h, u) {
                h = o(h);
                var l = this.dataSystem[h];
                if (typeof l == "string" && u === "utf8")
                  return l;
                if (l)
                  return new r(l, typeof l == "string" ? "base64" : void 0);
                var c = this.fileSystem[h];
                if (c)
                  return c;
                throw "File '" + h + "' not found in virtual file system";
              }, n.prototype.writeFileSync = function(h, u) {
                this.fileSystem[o(h)] = u;
              }, n.prototype.bindFS = function(h) {
                this.dataSystem = h || {};
              };
              function o(h) {
                return h.indexOf(i) === 0 && (h = h.substring(i.length)), h.indexOf("/") === 0 && (h = h.substring(1)), h;
              }
              f.exports = new n();
            }
          ),
          /***/
          77530: (
            /***/
            function(f, d, t) {
              var i = t(91867).isString;
              function r(u, l, c = 0, s) {
                var v = [], y = 0, x = 0, e = [], b = 0, A = 0, P = [], D = l;
                u.forEach(function(I) {
                  n(I) ? (v.push(I), y += I._minWidth, x += I._maxWidth) : o(I) ? (e.push(I), b = Math.max(b, I._minWidth), A = Math.max(A, I._maxWidth)) : P.push(I);
                }), P.forEach(function(I, O) {
                  if (i(I.width) && /\d+%/.test(I.width)) {
                    var M = 0;
                    if (s) {
                      var N = s._layout.paddingLeft(O, s), G = s._layout.paddingRight(O, s), ot = s._layout.vLineWidth(O, s), K = s._layout.vLineWidth(O + 1, s);
                      O === 0 ? M = N + G + ot + K / 2 : O === P.length - 1 ? M = N + G + ot / 2 + K : M = N + G + ot / 2 + K / 2;
                    }
                    var nt = D + c;
                    I.width = parseFloat(I.width) * nt / 100 - M;
                  }
                  I.width < I._minWidth && I.elasticWidth ? I._calcWidth = I._minWidth : I._calcWidth = I.width, l -= I._calcWidth;
                });
                var E = y + b * e.length, T = x + A * e.length;
                if (E >= l)
                  v.forEach(function(I) {
                    I._calcWidth = I._minWidth;
                  }), e.forEach(function(I) {
                    I._calcWidth = b;
                  });
                else {
                  if (T < l)
                    v.forEach(function(I) {
                      I._calcWidth = I._maxWidth, l -= I._calcWidth;
                    });
                  else {
                    var C = l - E, F = T - E;
                    v.forEach(function(I) {
                      var O = I._maxWidth - I._minWidth;
                      I._calcWidth = I._minWidth + O * C / F, l -= I._calcWidth;
                    });
                  }
                  if (e.length > 0) {
                    var m = l / e.length;
                    e.forEach(function(I) {
                      I._calcWidth = m;
                    });
                  }
                }
              }
              function n(u) {
                return u.width === "auto";
              }
              function o(u) {
                return u.width === null || u.width === void 0 || u.width === "*" || u.width === "star";
              }
              function h(u) {
                for (var l = { min: 0, max: 0 }, c = { min: 0, max: 0 }, s = 0, v = 0, y = u.length; v < y; v++) {
                  var x = u[v];
                  o(x) ? (c.min = Math.max(c.min, x._minWidth), c.max = Math.max(c.max, x._maxWidth), s++) : n(x) ? (l.min += x._minWidth, l.max += x._maxWidth) : (l.min += x.width !== void 0 && x.width || x._minWidth, l.max += x.width !== void 0 && x.width || x._maxWidth);
                }
                return s && (l.min += s * c.min, l.max += s * c.max), l;
              }
              f.exports = {
                buildColumnWidths: r,
                measureMinMax: h,
                isAutoColumn: n,
                isStarColumn: o
              };
            }
          ),
          /***/
          42526: (
            /***/
            function(f, d, t) {
              var i = t(11548), r = t(76442), n = t(77530), o = t(91867).isString, h = t(91867).isNumber, u = t(91867).isObject, l = t(91867).isArray, c = t(91867).fontStringify, s = t(91867).getNodeId, v = t(91867).pack, y = t(72155);
              function x(e, b, A, P, D, E, T) {
                this.textTools = new i(e), this.styleStack = new r(b, A), this.imageMeasure = P, this.svgMeasure = D, this.tableLayouts = E, this.images = T, this.autoImageIndex = 1;
              }
              x.prototype.measureDocument = function(e) {
                return this.measureNode(e);
              }, x.prototype.measureNode = function(e) {
                var b = this;
                return this.styleStack.auto(e, function() {
                  if (e._margin = P(), e.columns)
                    return A(b.measureColumns(e));
                  if (e.stack)
                    return A(b.measureVerticalContainer(e));
                  if (e.ul)
                    return A(b.measureUnorderedList(e));
                  if (e.ol)
                    return A(b.measureOrderedList(e));
                  if (e.table)
                    return A(b.measureTable(e));
                  if (e.text !== void 0)
                    return A(b.measureLeaf(e));
                  if (e.toc)
                    return A(b.measureToc(e));
                  if (e.image)
                    return A(b.measureImage(e));
                  if (e.svg)
                    return A(b.measureSVG(e));
                  if (e.canvas)
                    return A(b.measureCanvas(e));
                  if (e.qr)
                    return A(b.measureQr(e));
                  throw "Unrecognized document structure: " + JSON.stringify(e, c);
                });
                function A(D) {
                  var E = D._margin;
                  return E && (D._minWidth += E[0] + E[2], D._maxWidth += E[0] + E[2]), D;
                }
                function P() {
                  function D(I, O) {
                    return I.marginLeft || I.marginTop || I.marginRight || I.marginBottom ? [
                      I.marginLeft || O[0] || 0,
                      I.marginTop || O[1] || 0,
                      I.marginRight || O[2] || 0,
                      I.marginBottom || O[3] || 0
                    ] : O;
                  }
                  function E(I) {
                    for (var O = {}, M = I.length - 1; M >= 0; M--) {
                      var N = I[M], G = b.styleStack.styleDictionary[N];
                      for (var ot in G)
                        G.hasOwnProperty(ot) && (O[ot] = G[ot]);
                    }
                    return O;
                  }
                  function T(I) {
                    return h(I) ? I = [I, I, I, I] : l(I) && I.length === 2 && (I = [I[0], I[1], I[0], I[1]]), I;
                  }
                  var C = [void 0, void 0, void 0, void 0];
                  if (e.style) {
                    var F = l(e.style) ? e.style : [e.style], m = E(F);
                    m && (C = D(m, C)), m.margin && (C = T(m.margin));
                  }
                  return C = D(e, C), e.margin && (C = T(e.margin)), C[0] === void 0 && C[1] === void 0 && C[2] === void 0 && C[3] === void 0 ? null : C;
                }
              }, x.prototype.convertIfBase64Image = function(e) {
                if (/^data:image\/(jpeg|jpg|png);base64,/.test(e.image)) {
                  var b = "$$pdfmake$$" + this.autoImageIndex++;
                  this.images[b] = e.image, e.image = b;
                }
              }, x.prototype.measureImageWithDimensions = function(e, b) {
                if (e.fit) {
                  var A = b.width / b.height > e.fit[0] / e.fit[1] ? e.fit[0] / b.width : e.fit[1] / b.height;
                  e._width = e._minWidth = e._maxWidth = b.width * A, e._height = b.height * A;
                } else
                  e.cover ? (e._width = e._minWidth = e._maxWidth = e.cover.width, e._height = e._minHeight = e._maxHeight = e.cover.height) : (e._width = e._minWidth = e._maxWidth = e.width || b.width, e._height = e.height || b.height * e._width / b.width, h(e.maxWidth) && e.maxWidth < e._width && (e._width = e._minWidth = e._maxWidth = e.maxWidth, e._height = e._width * b.height / b.width), h(e.maxHeight) && e.maxHeight < e._height && (e._height = e.maxHeight, e._width = e._minWidth = e._maxWidth = e._height * b.width / b.height), h(e.minWidth) && e.minWidth > e._width && (e._width = e._minWidth = e._maxWidth = e.minWidth, e._height = e._width * b.height / b.width), h(e.minHeight) && e.minHeight > e._height && (e._height = e.minHeight, e._width = e._minWidth = e._maxWidth = e._height * b.width / b.height));
                e._alignment = this.styleStack.getProperty("alignment");
              }, x.prototype.measureImage = function(e) {
                this.images && this.convertIfBase64Image(e);
                var b = this.imageMeasure.measureImage(e.image);
                return this.measureImageWithDimensions(e, b), e;
              }, x.prototype.measureSVG = function(e) {
                var b = this.svgMeasure.measureSVG(e.svg);
                return this.measureImageWithDimensions(e, b), e.font = this.styleStack.getProperty("font"), e.svg = this.svgMeasure.writeDimensions(e.svg, {
                  width: e._width,
                  height: e._height
                }), e;
              }, x.prototype.measureLeaf = function(e) {
                e._textRef && e._textRef._textNodeRef.text && (e.text = e._textRef._textNodeRef.text);
                var b = this.styleStack.clone();
                b.push(e);
                var A = this.textTools.buildInlines(e.text, b);
                return e._inlines = A.items, e._minWidth = A.minWidth, e._maxWidth = A.maxWidth, e;
              }, x.prototype.measureToc = function(e) {
                if (e.toc.title && (e.toc.title = this.measureNode(e.toc.title)), e.toc._items.length > 0) {
                  for (var b = [], A = e.toc.textStyle || {}, P = e.toc.numberStyle || A, D = e.toc.textMargin || [0, 0, 0, 0], E = 0, T = e.toc._items.length; E < T; E++) {
                    var C = e.toc._items[E], F = C._textNodeRef.tocStyle || A, m = C._textNodeRef.tocMargin || D, I = C._textNodeRef.tocNumberStyle || P, O = s(C._nodeRef);
                    b.push([
                      { text: C._textNodeRef.text, linkToDestination: O, alignment: "left", style: F, margin: m },
                      { text: "00000", linkToDestination: O, alignment: "right", _tocItemRef: C._nodeRef, style: I, margin: [0, m[1], 0, m[3]] }
                    ]);
                  }
                  e.toc._table = {
                    table: {
                      dontBreakRows: !0,
                      widths: ["*", "auto"],
                      body: b
                    },
                    layout: "noBorders"
                  }, e.toc._table = this.measureNode(e.toc._table);
                }
                return e;
              }, x.prototype.measureVerticalContainer = function(e) {
                var b = e.stack;
                e._minWidth = 0, e._maxWidth = 0;
                for (var A = 0, P = b.length; A < P; A++)
                  b[A] = this.measureNode(b[A]), e._minWidth = Math.max(e._minWidth, b[A]._minWidth), e._maxWidth = Math.max(e._maxWidth, b[A]._maxWidth);
                return e;
              }, x.prototype.gapSizeForList = function() {
                return this.textTools.sizeOfString("9. ", this.styleStack);
              }, x.prototype.buildUnorderedMarker = function(e, b, A) {
                function P(F, m) {
                  var I = F.fontSize / 6;
                  return {
                    canvas: [{
                      x: I,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3,
                      r1: I,
                      r2: I,
                      type: "ellipse",
                      color: m
                    }]
                  };
                }
                function D(F, m) {
                  var I = F.fontSize / 3;
                  return {
                    canvas: [{
                      x: 0,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3 - I / 2,
                      h: I,
                      w: I,
                      type: "rect",
                      color: m
                    }]
                  };
                }
                function E(F, m) {
                  var I = F.fontSize / 6;
                  return {
                    canvas: [{
                      x: I,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3,
                      r1: I,
                      r2: I,
                      type: "ellipse",
                      lineColor: m
                    }]
                  };
                }
                var T, C = e.getProperty("markerColor") || e.getProperty("color") || "black";
                switch (A) {
                  case "circle":
                    T = E(b, C);
                    break;
                  case "square":
                    T = D(b, C);
                    break;
                  case "none":
                    T = {};
                    break;
                  case "disc":
                  default:
                    T = P(b, C);
                    break;
                }
                return T._minWidth = T._maxWidth = b.width, T._minHeight = T._maxHeight = b.height, T;
              }, x.prototype.buildOrderedMarker = function(e, b, A, P) {
                function D(I) {
                  function O(M) {
                    return (M >= 26 ? O((M / 26 >> 0) - 1) : "") + "abcdefghijklmnopqrstuvwxyz"[M % 26 >> 0];
                  }
                  return I < 1 ? I.toString() : O(I - 1);
                }
                function E(I) {
                  if (I < 1 || I > 4999)
                    return I.toString();
                  var O = I, M = { M: 1e3, CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 }, N = "", G;
                  for (G in M)
                    for (; O >= M[G]; )
                      N += G, O -= M[G];
                  return N;
                }
                function T(I) {
                  return I.toString();
                }
                var C;
                switch (A) {
                  case "none":
                    C = null;
                    break;
                  case "upper-alpha":
                    C = D(e).toUpperCase();
                    break;
                  case "lower-alpha":
                    C = D(e);
                    break;
                  case "upper-roman":
                    C = E(e);
                    break;
                  case "lower-roman":
                    C = E(e).toLowerCase();
                    break;
                  case "decimal":
                  default:
                    C = T(e);
                    break;
                }
                if (C === null)
                  return {};
                P && (l(P) ? (P[0] && (C = P[0] + C), P[1] && (C += P[1]), C += " ") : C += P + " ");
                var F = { text: C }, m = b.getProperty("markerColor");
                return m && (F.color = m), { _inlines: this.textTools.buildInlines(F, b).items };
              }, x.prototype.measureUnorderedList = function(e) {
                var b = this.styleStack.clone(), A = e.ul;
                e.type = e.type || "disc", e._gapSize = this.gapSizeForList(), e._minWidth = 0, e._maxWidth = 0;
                for (var P = 0, D = A.length; P < D; P++) {
                  var E = A[P] = this.measureNode(A[P]);
                  !E.ol && !E.ul && (E.listMarker = this.buildUnorderedMarker(b, e._gapSize, E.listType || e.type)), e._minWidth = Math.max(e._minWidth, A[P]._minWidth + e._gapSize.width), e._maxWidth = Math.max(e._maxWidth, A[P]._maxWidth + e._gapSize.width);
                }
                return e;
              }, x.prototype.measureOrderedList = function(e) {
                var b = this.styleStack.clone(), A = e.ol;
                e.type = e.type || "decimal", e.separator = e.separator || ".", e.reversed = e.reversed || !1, h(e.start) || (e.start = e.reversed ? A.length : 1), e._gapSize = this.gapSizeForList(), e._minWidth = 0, e._maxWidth = 0;
                for (var P = e.start, D = 0, E = A.length; D < E; D++) {
                  var T = A[D] = this.measureNode(A[D]);
                  if (!T.ol && !T.ul) {
                    var C = h(T.counter) ? T.counter : P;
                    T.listMarker = this.buildOrderedMarker(C, b, T.listType || e.type, e.separator), T.listMarker._inlines && (e._gapSize.width = Math.max(e._gapSize.width, T.listMarker._inlines[0].width)), e.reversed ? P-- : P++;
                  }
                  e._minWidth = Math.max(e._minWidth, A[D]._minWidth), e._maxWidth = Math.max(e._maxWidth, A[D]._maxWidth);
                }
                e._minWidth += e._gapSize.width, e._maxWidth += e._gapSize.width;
                for (var D = 0, E = A.length; D < E; D++) {
                  var T = A[D];
                  !T.ol && !T.ul && (T.listMarker._minWidth = T.listMarker._maxWidth = e._gapSize.width);
                }
                return e;
              }, x.prototype.measureColumns = function(e) {
                var b = e.columns;
                e._gap = this.styleStack.getProperty("columnGap") || 0;
                for (var A = 0, P = b.length; A < P; A++)
                  b[A] = this.measureNode(b[A]);
                var D = n.measureMinMax(b), E = b.length > 0 ? b.length - 1 : 0;
                return e._minWidth = D.min + e._gap * E, e._maxWidth = D.max + e._gap * E, e;
              }, x.prototype.measureTable = function(e) {
                nt(e), e._layout = O(this.tableLayouts), e._offsets = M(e._layout);
                var b = [], A, P, D, E;
                for (A = 0, D = e.table.body[0].length; A < D; A++) {
                  var T = e.table.widths[A];
                  for (T._minWidth = 0, T._maxWidth = 0, P = 0, E = e.table.body.length; P < E; P++) {
                    var C = e.table.body[P], F = C[A];
                    if (F === void 0)
                      throw console.error("Malformed table row ", C, "in node ", e), "Malformed table row, a cell is undefined.";
                    F === null && (F = ""), F._span || (F = C[A] = this.styleStack.auto(F, I(this, F)), F.colSpan && F.colSpan > 1 ? (ot(C, A, F.colSpan), b.push({ col: A, span: F.colSpan, minWidth: F._minWidth, maxWidth: F._maxWidth })) : (T._minWidth = Math.max(T._minWidth, F._minWidth), T._maxWidth = Math.max(T._maxWidth, F._maxWidth))), F.rowSpan && F.rowSpan > 1 && K(e.table, P, A, F.rowSpan);
                  }
                }
                N();
                var m = n.measureMinMax(e.table.widths);
                return e._minWidth = m.min + e._offsets.total, e._maxWidth = m.max + e._offsets.total, e;
                function I(xt, bt) {
                  return function() {
                    return u(bt) && (bt.fillColor = xt.styleStack.getProperty("fillColor"), bt.fillOpacity = xt.styleStack.getProperty("fillOpacity")), xt.measureNode(bt);
                  };
                }
                function O(xt) {
                  var bt = e.layout;
                  o(bt) && (bt = xt[bt]);
                  var St = {
                    hLineWidth: function(Dt, Lt) {
                      return 1;
                    },
                    vLineWidth: function(Dt, Lt) {
                      return 1;
                    },
                    hLineColor: function(Dt, Lt) {
                      return "black";
                    },
                    vLineColor: function(Dt, Lt) {
                      return "black";
                    },
                    hLineStyle: function(Dt, Lt) {
                      return null;
                    },
                    vLineStyle: function(Dt, Lt) {
                      return null;
                    },
                    paddingLeft: function(Dt, Lt) {
                      return 4;
                    },
                    paddingRight: function(Dt, Lt) {
                      return 4;
                    },
                    paddingTop: function(Dt, Lt) {
                      return 2;
                    },
                    paddingBottom: function(Dt, Lt) {
                      return 2;
                    },
                    fillColor: function(Dt, Lt) {
                      return null;
                    },
                    fillOpacity: function(Dt, Lt) {
                      return 1;
                    },
                    defaultBorder: !0
                  };
                  return v(St, bt);
                }
                function M(xt) {
                  for (var bt = [], St = 0, Dt = 0, Lt = 0, jt = e.table.widths.length; Lt < jt; Lt++) {
                    var J = Dt + xt.vLineWidth(Lt, e) + xt.paddingLeft(Lt, e);
                    bt.push(J), St += J, Dt = xt.paddingRight(Lt, e);
                  }
                  return St += Dt + xt.vLineWidth(e.table.widths.length, e), {
                    total: St,
                    offsets: bt
                  };
                }
                function N() {
                  for (var xt, bt, St = 0, Dt = b.length; St < Dt; St++) {
                    var Lt = b[St], jt = G(Lt.col, Lt.span, e._offsets), J = Lt.minWidth - jt.minWidth, yt = Lt.maxWidth - jt.maxWidth;
                    if (J > 0)
                      for (xt = J / Lt.span, bt = 0; bt < Lt.span; bt++)
                        e.table.widths[Lt.col + bt]._minWidth += xt;
                    if (yt > 0)
                      for (xt = yt / Lt.span, bt = 0; bt < Lt.span; bt++)
                        e.table.widths[Lt.col + bt]._maxWidth += xt;
                  }
                }
                function G(xt, bt, St) {
                  for (var Dt = { minWidth: 0, maxWidth: 0 }, Lt = 0; Lt < bt; Lt++)
                    Dt.minWidth += e.table.widths[xt + Lt]._minWidth + (Lt ? St.offsets[xt + Lt] : 0), Dt.maxWidth += e.table.widths[xt + Lt]._maxWidth + (Lt ? St.offsets[xt + Lt] : 0);
                  return Dt;
                }
                function ot(xt, bt, St) {
                  for (var Dt = 1; Dt < St; Dt++)
                    xt[bt + Dt] = {
                      _span: !0,
                      _minWidth: 0,
                      _maxWidth: 0,
                      rowSpan: xt[bt].rowSpan
                    };
                }
                function K(xt, bt, St, Dt) {
                  for (var Lt = 1; Lt < Dt; Lt++)
                    xt.body[bt + Lt][St] = {
                      _span: !0,
                      _minWidth: 0,
                      _maxWidth: 0,
                      fillColor: xt.body[bt][St].fillColor,
                      fillOpacity: xt.body[bt][St].fillOpacity
                    };
                }
                function nt(xt) {
                  if (xt.table.widths || (xt.table.widths = "auto"), o(xt.table.widths))
                    for (xt.table.widths = [xt.table.widths]; xt.table.widths.length < xt.table.body[0].length; )
                      xt.table.widths.push(xt.table.widths[xt.table.widths.length - 1]);
                  for (var bt = 0, St = xt.table.widths.length; bt < St; bt++) {
                    var Dt = xt.table.widths[bt];
                    (h(Dt) || o(Dt)) && (xt.table.widths[bt] = { width: Dt });
                  }
                }
              }, x.prototype.measureCanvas = function(e) {
                for (var b = 0, A = 0, P = 0, D = e.canvas.length; P < D; P++) {
                  var E = e.canvas[P];
                  switch (E.type) {
                    case "ellipse":
                      b = Math.max(b, E.x + E.r1), A = Math.max(A, E.y + E.r2);
                      break;
                    case "rect":
                      b = Math.max(b, E.x + E.w), A = Math.max(A, E.y + E.h);
                      break;
                    case "line":
                      b = Math.max(b, E.x1, E.x2), A = Math.max(A, E.y1, E.y2);
                      break;
                    case "polyline":
                      for (var T = 0, C = E.points.length; T < C; T++)
                        b = Math.max(b, E.points[T].x), A = Math.max(A, E.points[T].y);
                      break;
                  }
                }
                return e._minWidth = e._maxWidth = b, e._minHeight = e._maxHeight = A, e._alignment = this.styleStack.getProperty("alignment"), e;
              }, x.prototype.measureQr = function(e) {
                return e = y.measure(e), e._alignment = this.styleStack.getProperty("alignment"), e;
              }, f.exports = x;
            }
          ),
          /***/
          98883: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer, r = t(91867).isString, n = t(91867).isNumber, o = t(91867).isBoolean, h = t(91867).isArray, u = t(91867).isUndefined, l = t(91867).fontStringify;
              function c() {
              }
              c.prototype.preprocessDocument = function(s) {
                return this.parentNode = null, this.tocs = [], this.nodeReferences = [], this.preprocessNode(s);
              }, c.prototype.preprocessNode = function(s) {
                if (h(s) ? s = { stack: s } : r(s) ? s = { text: s } : n(s) || o(s) ? s = { text: s.toString() } : s == null ? s = { text: "" } : Object.keys(s).length === 0 ? s = { text: "" } : "text" in s && (s.text === void 0 || s.text === null) && (s.text = ""), s.columns)
                  return this.preprocessColumns(s);
                if (s.stack)
                  return this.preprocessVerticalContainer(s);
                if (s.ul)
                  return this.preprocessList(s);
                if (s.ol)
                  return this.preprocessList(s);
                if (s.table)
                  return this.preprocessTable(s);
                if (s.text !== void 0)
                  return this.preprocessText(s);
                if (s.toc)
                  return this.preprocessToc(s);
                if (s.image)
                  return this.preprocessImage(s);
                if (s.svg)
                  return this.preprocessSVG(s);
                if (s.canvas)
                  return this.preprocessCanvas(s);
                if (s.qr)
                  return this.preprocessQr(s);
                if (s.pageReference || s.textReference)
                  return this.preprocessText(s);
                throw "Unrecognized document structure: " + JSON.stringify(s, l);
              }, c.prototype.preprocessColumns = function(s) {
                for (var v = s.columns, y = 0, x = v.length; y < x; y++)
                  v[y] = this.preprocessNode(v[y]);
                return s;
              }, c.prototype.preprocessVerticalContainer = function(s) {
                for (var v = s.stack, y = 0, x = v.length; y < x; y++)
                  v[y] = this.preprocessNode(v[y]);
                return s;
              }, c.prototype.preprocessList = function(s) {
                for (var v = s.ul || s.ol, y = 0, x = v.length; y < x; y++)
                  v[y] = this.preprocessNode(v[y]);
                return s;
              }, c.prototype.preprocessTable = function(s) {
                var v, y, x, e;
                for (v = 0, x = s.table.body[0].length; v < x; v++)
                  for (y = 0, e = s.table.body.length; y < e; y++) {
                    var b = s.table.body[y], A = b[v];
                    A !== void 0 && (A === null && (A = ""), A._span || (b[v] = this.preprocessNode(A)));
                  }
                return s;
              }, c.prototype.preprocessText = function(s) {
                if (s.tocItem) {
                  h(s.tocItem) || (s.tocItem = [s.tocItem]);
                  for (var v = 0, y = s.tocItem.length; v < y; v++) {
                    r(s.tocItem[v]) || (s.tocItem[v] = "_default_");
                    var x = s.tocItem[v];
                    this.tocs[x] || (this.tocs[x] = { toc: { _items: [], _pseudo: !0 } }), s.id || (s.id = "toc-" + x + "-" + this.tocs[x].toc._items.length);
                    var e = {
                      _nodeRef: this._getNodeForNodeRef(s),
                      _textNodeRef: s
                    };
                    this.tocs[x].toc._items.push(e);
                  }
                }
                if (s.id)
                  if (this.nodeReferences[s.id]) {
                    if (!this.nodeReferences[s.id]._pseudo)
                      throw "Node id '" + s.id + "' already exists";
                    this.nodeReferences[s.id]._nodeRef = this._getNodeForNodeRef(s), this.nodeReferences[s.id]._textNodeRef = s, this.nodeReferences[s.id]._pseudo = !1;
                  } else
                    this.nodeReferences[s.id] = {
                      _nodeRef: this._getNodeForNodeRef(s),
                      _textNodeRef: s
                    };
                if (s.pageReference && (this.nodeReferences[s.pageReference] || (this.nodeReferences[s.pageReference] = {
                  _nodeRef: {},
                  _textNodeRef: {},
                  _pseudo: !0
                }), s.text = "00000", s.linkToDestination = s.pageReference, s._pageRef = this.nodeReferences[s.pageReference]), s.textReference && (this.nodeReferences[s.textReference] || (this.nodeReferences[s.textReference] = { _nodeRef: {}, _pseudo: !0 }), s.text = "", s.linkToDestination = s.textReference, s._textRef = this.nodeReferences[s.textReference]), s.text && s.text.text)
                  s.text = [this.preprocessNode(s.text)];
                else if (h(s.text)) {
                  var b = !1;
                  this.parentNode === null && (this.parentNode = s, b = !0);
                  for (var v = 0, y = s.text.length; v < y; v++)
                    s.text[v] = this.preprocessNode(s.text[v]);
                  b && (this.parentNode = null);
                }
                return s;
              }, c.prototype.preprocessToc = function(s) {
                if (s.toc.id || (s.toc.id = "_default_"), s.toc.title = s.toc.title ? this.preprocessNode(s.toc.title) : null, s.toc._items = [], this.tocs[s.toc.id]) {
                  if (!this.tocs[s.toc.id].toc._pseudo)
                    throw "TOC '" + s.toc.id + "' already exists";
                  s.toc._items = this.tocs[s.toc.id].toc._items;
                }
                return this.tocs[s.toc.id] = s, s;
              }, c.prototype.preprocessImage = function(s) {
                return !u(s.image.type) && !u(s.image.data) && s.image.type === "Buffer" && h(s.image.data) && (s.image = i.from(s.image.data)), s;
              }, c.prototype.preprocessSVG = function(s) {
                return s;
              }, c.prototype.preprocessCanvas = function(s) {
                return s;
              }, c.prototype.preprocessQr = function(s) {
                return s;
              }, c.prototype._getNodeForNodeRef = function(s) {
                return this.parentNode ? this.parentNode : s;
              }, f.exports = c;
            }
          ),
          /***/
          79178: (
            /***/
            function(f, d, t) {
              var i = t(2318), r = t(91867).isString;
              function n(l, c) {
                this.pages = [], this.pageMargins = c, this.x = c.left, this.availableWidth = l.width - c.left - c.right, this.availableHeight = 0, this.page = -1, this.snapshots = [], this.tracker = new i(), this.backgroundLength = [], this.addPage(l);
              }
              n.prototype.beginColumnGroup = function(l, c = {}) {
                this.snapshots.push({
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  page: this.page,
                  bottomByPage: c || {},
                  bottomMost: {
                    x: this.x,
                    y: this.y,
                    availableHeight: this.availableHeight,
                    availableWidth: this.availableWidth,
                    page: this.page
                  },
                  lastColumnWidth: this.lastColumnWidth
                }), this.lastColumnWidth = 0, l && (this.marginXTopParent = l);
              }, n.prototype.updateBottomByPage = function() {
                const l = this.snapshots[this.snapshots.length - 1], c = this.page;
                let s = -Number.MIN_VALUE;
                l.bottomByPage[c] && (s = l.bottomByPage[c]), l.bottomByPage[c] = Math.max(s, this.y);
              }, n.prototype.resetMarginXTopParent = function() {
                this.marginXTopParent = null;
              }, n.prototype.beginColumn = function(l, c, s) {
                var v = this.snapshots[this.snapshots.length - 1];
                this.calculateBottomMost(v, s), this.page = v.page, this.x = this.x + this.lastColumnWidth + (c || 0), this.y = v.y, this.availableWidth = l, this.availableHeight = v.availableHeight, this.lastColumnWidth = l;
              }, n.prototype.calculateBottomMost = function(l, c) {
                c ? this.saveContextInEndingCell(c) : l.bottomMost = u(this, l.bottomMost);
              }, n.prototype.markEnding = function(l, c, s) {
                this.page = l._columnEndingContext.page, this.x = l._columnEndingContext.x + c, this.y = l._columnEndingContext.y - s, this.availableWidth = l._columnEndingContext.availableWidth, this.availableHeight = l._columnEndingContext.availableHeight, this.lastColumnWidth = l._columnEndingContext.lastColumnWidth;
              }, n.prototype.saveContextInEndingCell = function(l) {
                l._columnEndingContext = {
                  page: this.page,
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  lastColumnWidth: this.lastColumnWidth
                };
              }, n.prototype.completeColumnGroup = function(l, c) {
                var s = this.snapshots.pop();
                this.calculateBottomMost(s, c), this.x = s.x;
                var v = s.bottomMost.y;
                return l && (s.page === s.bottomMost.page ? s.y + l > v && (v = s.y + l) : v += l), this.y = v, this.page = s.bottomMost.page, this.availableWidth = s.availableWidth, this.availableHeight = s.bottomMost.availableHeight, l && (this.availableHeight -= v - s.bottomMost.y), this.lastColumnWidth = s.lastColumnWidth, s.bottomByPage;
              }, n.prototype.addMargin = function(l, c) {
                this.x += l, this.availableWidth -= l + (c || 0);
              }, n.prototype.moveDown = function(l) {
                return this.y += l, this.availableHeight -= l, this.availableHeight > 0;
              }, n.prototype.initializePage = function() {
                this.y = this.pageMargins.top, this.availableHeight = this.getCurrentPage().pageSize.height - this.pageMargins.top - this.pageMargins.bottom;
                const { pageCtx: l, isSnapshot: c } = this.pageSnapshot();
                l.availableWidth = this.getCurrentPage().pageSize.width - this.pageMargins.left - this.pageMargins.right, c && this.marginXTopParent && (l.availableWidth -= this.marginXTopParent[0], l.availableWidth -= this.marginXTopParent[1]);
              }, n.prototype.pageSnapshot = function() {
                return this.snapshots[0] ? { pageCtx: this.snapshots[0], isSnapshot: !0 } : { pageCtx: this, isSnapshot: !1 };
              }, n.prototype.moveTo = function(l, c) {
                l != null && (this.x = l, this.availableWidth = this.getCurrentPage().pageSize.width - this.x - this.pageMargins.right), c != null && (this.y = c, this.availableHeight = this.getCurrentPage().pageSize.height - this.y - this.pageMargins.bottom);
              }, n.prototype.moveToRelative = function(l, c) {
                l != null && (this.x = this.x + l), c != null && (this.y = this.y + c);
              }, n.prototype.beginDetachedBlock = function() {
                this.snapshots.push({
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  page: this.page,
                  lastColumnWidth: this.lastColumnWidth
                });
              }, n.prototype.endDetachedBlock = function() {
                var l = this.snapshots.pop();
                this.x = l.x, this.y = l.y, this.availableWidth = l.availableWidth, this.availableHeight = l.availableHeight, this.page = l.page, this.lastColumnWidth = l.lastColumnWidth;
              };
              function o(l, c) {
                return l === void 0 ? c : r(l) && l.toLowerCase() === "landscape" ? "landscape" : "portrait";
              }
              var h = function(l, c) {
                return c = o(c, l.pageSize.orientation), c !== l.pageSize.orientation ? {
                  orientation: c,
                  width: l.pageSize.height,
                  height: l.pageSize.width
                } : {
                  orientation: l.pageSize.orientation,
                  width: l.pageSize.width,
                  height: l.pageSize.height
                };
              };
              n.prototype.moveToNextPage = function(l) {
                var c = this.page + 1, s = this.page, v = this.y;
                if (this.snapshots.length > 0) {
                  var y = this.snapshots[this.snapshots.length - 1];
                  y.bottomMost && y.bottomMost.y && (v = Math.max(this.y, y.bottomMost.y));
                }
                var x = c >= this.pages.length;
                if (x) {
                  var e = this.availableWidth, b = this.getCurrentPage().pageSize.orientation, A = h(this.getCurrentPage(), l);
                  this.addPage(A), b === A.orientation && (this.availableWidth = e);
                } else
                  this.page = c, this.initializePage();
                return {
                  newPageCreated: x,
                  prevPage: s,
                  prevY: v,
                  y: this.y
                };
              }, n.prototype.addPage = function(l) {
                var c = { items: [], pageSize: l };
                return this.pages.push(c), this.backgroundLength.push(0), this.page = this.pages.length - 1, this.initializePage(), this.tracker.emit("pageAdded"), c;
              }, n.prototype.getCurrentPage = function() {
                return this.page < 0 || this.page >= this.pages.length ? null : this.pages[this.page];
              }, n.prototype.getCurrentPosition = function() {
                var l = this.getCurrentPage().pageSize, c = l.height - this.pageMargins.top - this.pageMargins.bottom, s = l.width - this.pageMargins.left - this.pageMargins.right;
                return {
                  pageNumber: this.page + 1,
                  pageOrientation: l.orientation,
                  pageInnerHeight: c,
                  pageInnerWidth: s,
                  left: this.x,
                  top: this.y,
                  verticalRatio: (this.y - this.pageMargins.top) / c,
                  horizontalRatio: (this.x - this.pageMargins.left) / s
                };
              };
              function u(l, c) {
                var s;
                return l.page > c.page ? s = l : c.page > l.page ? s = c : s = l.y > c.y ? l : c, {
                  page: s.page,
                  x: s.x,
                  y: s.y,
                  availableHeight: s.availableHeight,
                  availableWidth: s.availableWidth
                };
              }
              f.exports = n;
            }
          ),
          /***/
          54861: (
            /***/
            function(f, d, t) {
              var i = t(70770), r = t(91867).isNumber, n = t(91867).pack, o = t(91867).offsetVector, h = t(79178);
              function u(s, v) {
                this.context = s, this.contextStack = [], this.tracker = v;
              }
              function l(s, v, y) {
                y == null || y < 0 || y > s.items.length ? s.items.push(v) : s.items.splice(y, 0, v);
              }
              u.prototype.addLine = function(s, v, y) {
                var x = s.getHeight(), e = this.context, b = e.getCurrentPage(), A = this.getCurrentPositionOnPage();
                return e.availableHeight < x || !b ? !1 : (s.x = e.x + (s.x || 0), s.y = e.y + (s.y || 0), this.alignLine(s), l(b, {
                  type: "line",
                  item: s
                }, y), this.tracker.emit("lineAdded", s), v || e.moveDown(x), A);
              }, u.prototype.alignLine = function(s) {
                var v = this.context.availableWidth, y = s.getWidth(), x = s.inlines && s.inlines.length > 0 && s.inlines[0].alignment, e = 0;
                switch (x) {
                  case "right":
                    e = v - y;
                    break;
                  case "center":
                    e = (v - y) / 2;
                    break;
                }
                if (e && (s.x = (s.x || 0) + e), x === "justify" && !s.newLineForced && !s.lastLineInParagraph && s.inlines.length > 1)
                  for (var b = (v - y) / (s.inlines.length - 1), A = 1, P = s.inlines.length; A < P; A++)
                    e = A * b, s.inlines[A].x += e, s.inlines[A].justifyShift = b;
              }, u.prototype.addImage = function(s, v, y) {
                var x = this.context, e = x.getCurrentPage(), b = this.getCurrentPositionOnPage();
                return !e || s.absolutePosition === void 0 && x.availableHeight < s._height && e.items.length > 0 ? !1 : (s._x === void 0 && (s._x = s.x || 0), s.x = x.x + s._x, s.y = x.y, this.alignImage(s), l(e, {
                  type: y || "image",
                  item: s
                }, v), x.moveDown(s._height), b);
              }, u.prototype.addSVG = function(s, v) {
                return this.addImage(s, v, "svg");
              }, u.prototype.addQr = function(s, v) {
                var y = this.context, x = y.getCurrentPage(), e = this.getCurrentPositionOnPage();
                if (!x || s.absolutePosition === void 0 && y.availableHeight < s._height)
                  return !1;
                s._x === void 0 && (s._x = s.x || 0), s.x = y.x + s._x, s.y = y.y, this.alignImage(s);
                for (var b = 0, A = s._canvas.length; b < A; b++) {
                  var P = s._canvas[b];
                  P.x += s.x, P.y += s.y, this.addVector(P, !0, !0, v);
                }
                return y.moveDown(s._height), e;
              }, u.prototype.alignImage = function(s) {
                var v = this.context.availableWidth, y = s._minWidth, x = 0;
                switch (s._alignment) {
                  case "right":
                    x = v - y;
                    break;
                  case "center":
                    x = (v - y) / 2;
                    break;
                }
                x && (s.x = (s.x || 0) + x);
              }, u.prototype.alignCanvas = function(s) {
                var v = this.context.availableWidth, y = s._minWidth, x = 0;
                switch (s._alignment) {
                  case "right":
                    x = v - y;
                    break;
                  case "center":
                    x = (v - y) / 2;
                    break;
                }
                x && s.canvas.forEach(function(e) {
                  o(e, x, 0);
                });
              }, u.prototype.addVector = function(s, v, y, x, e) {
                var b = this.context, A = b.getCurrentPage();
                r(e) && (A = b.pages[e]);
                var P = this.getCurrentPositionOnPage();
                if (A)
                  return o(s, v ? 0 : b.x, y ? 0 : b.y), l(A, {
                    type: "vector",
                    item: s
                  }, x), P;
              }, u.prototype.beginClip = function(s, v) {
                var y = this.context, x = y.getCurrentPage();
                return x.items.push({
                  type: "beginClip",
                  item: { x: y.x, y: y.y, width: s, height: v }
                }), !0;
              }, u.prototype.endClip = function() {
                var s = this.context, v = s.getCurrentPage();
                return v.items.push({
                  type: "endClip"
                }), !0;
              };
              function c(s) {
                var v = new i(s.maxWidth);
                for (var y in s)
                  s.hasOwnProperty(y) && (v[y] = s[y]);
                return v;
              }
              u.prototype.addFragment = function(s, v, y, x) {
                var e = this.context, b = e.getCurrentPage();
                return !v && s.height > e.availableHeight ? !1 : (s.items.forEach(function(A) {
                  switch (A.type) {
                    case "line":
                      var P = c(A.item);
                      P._node && (P._node.positions[0].pageNumber = e.page + 1), P.x = (P.x || 0) + (v ? s.xOffset || 0 : e.x), P.y = (P.y || 0) + (y ? s.yOffset || 0 : e.y), b.items.push({
                        type: "line",
                        item: P
                      });
                      break;
                    case "vector":
                      var D = n(A.item);
                      if (o(D, v ? s.xOffset || 0 : e.x, y ? s.yOffset || 0 : e.y), D._isFillColorFromUnbreakable) {
                        delete D._isFillColorFromUnbreakable;
                        const T = e.backgroundLength[e.page];
                        b.items.splice(T, 0, {
                          type: "vector",
                          item: D
                        });
                      } else
                        b.items.push({
                          type: "vector",
                          item: D
                        });
                      break;
                    case "image":
                    case "svg":
                      var E = n(A.item);
                      E.x = (E.x || 0) + (v ? s.xOffset || 0 : e.x), E.y = (E.y || 0) + (y ? s.yOffset || 0 : e.y), b.items.push({
                        type: A.type,
                        item: E
                      });
                      break;
                  }
                }), x || e.moveDown(s.height), !0);
              }, u.prototype.pushContext = function(s, v) {
                s === void 0 && (v = this.context.getCurrentPage().height - this.context.pageMargins.top - this.context.pageMargins.bottom, s = this.context.availableWidth), r(s) && (s = new h({ width: s, height: v }, { left: 0, right: 0, top: 0, bottom: 0 })), this.contextStack.push(this.context), this.context = s;
              }, u.prototype.popContext = function() {
                this.context = this.contextStack.pop();
              }, u.prototype.getCurrentPositionOnPage = function() {
                return (this.contextStack[0] || this.context).getCurrentPosition();
              }, f.exports = u;
            }
          ),
          /***/
          28284: (
            /***/
            function(f, d, t) {
              var i = t(91867).isArray;
              function r(o, h) {
                var u = "normal";
                return o && h ? u = "bolditalics" : o ? u = "bold" : h && (u = "italics"), u;
              }
              function n(o, h) {
                this.fonts = {}, this.pdfKitDoc = h, this.fontCache = {};
                for (var u in o)
                  if (o.hasOwnProperty(u)) {
                    var l = o[u];
                    this.fonts[u] = {
                      normal: l.normal,
                      bold: l.bold,
                      italics: l.italics,
                      bolditalics: l.bolditalics
                    };
                  }
              }
              n.prototype.getFontType = function(o, h) {
                return r(o, h);
              }, n.prototype.getFontFile = function(o, h, u) {
                var l = this.getFontType(h, u);
                return !this.fonts[o] || !this.fonts[o][l] ? null : this.fonts[o][l];
              }, n.prototype.provideFont = function(o, h, u) {
                var l = this.getFontType(h, u);
                if (this.getFontFile(o, h, u) === null)
                  throw new Error("Font '" + o + "' in style '" + l + "' is not defined in the font section of the document definition.");
                if (this.fontCache[o] = this.fontCache[o] || {}, !this.fontCache[o][l]) {
                  var c = this.fonts[o][l];
                  i(c) || (c = [c]), this.fontCache[o][l] = this.pdfKitDoc.font.apply(this.pdfKitDoc, c)._font;
                }
                return this.fontCache[o][l];
              }, f.exports = n;
            }
          ),
          /***/
          91867: (
            /***/
            function(f) {
              function d(b) {
                return typeof b == "string" || b instanceof String;
              }
              function t(b) {
                return typeof b == "number" || b instanceof Number;
              }
              function i(b) {
                return typeof b == "boolean";
              }
              function r(b) {
                return Array.isArray(b);
              }
              function n(b) {
                return typeof b == "function";
              }
              function o(b) {
                return b !== null && typeof b == "object";
              }
              function h(b) {
                return b === null;
              }
              function u(b) {
                return b === void 0;
              }
              function l(b) {
                return !(!t(b) || !Number.isInteger(b) || b <= 0);
              }
              function c() {
                for (var b = {}, A = 0, P = arguments.length; A < P; A++) {
                  var D = arguments[A];
                  if (D)
                    for (var E in D)
                      D.hasOwnProperty(E) && (b[E] = D[E]);
                }
                return b;
              }
              function s(b, A, P) {
                switch (b.type) {
                  case "ellipse":
                  case "rect":
                    b.x += A, b.y += P;
                    break;
                  case "line":
                    b.x1 += A, b.x2 += A, b.y1 += P, b.y2 += P;
                    break;
                  case "polyline":
                    for (var D = 0, E = b.points.length; D < E; D++)
                      b.points[D].x += A, b.points[D].y += P;
                    break;
                }
              }
              function v(b, A) {
                return b === "font" ? "font" : A;
              }
              function y(b) {
                if (b.id)
                  return b.id;
                if (r(b.text))
                  for (var A = 0, P = b.text.length; A < P; A++) {
                    var D = b.text[A], E = y(D);
                    if (E)
                      return E;
                  }
                return null;
              }
              function x(b) {
                return r(b) && b.length === 2;
              }
              function e(b, A) {
                return [A[b[0]], b[1]];
              }
              f.exports = {
                isString: d,
                isNumber: t,
                isBoolean: i,
                isArray: r,
                isFunction: n,
                isObject: o,
                isNull: h,
                isUndefined: u,
                isPositiveInteger: l,
                pack: c,
                fontStringify: v,
                offsetVector: s,
                getNodeId: y,
                isPattern: x,
                getPattern: e
              };
            }
          ),
          /***/
          93415: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer, r = t(48181);
              function n(o, h) {
                this.pdfKitDoc = o, this.imageDictionary = h || {};
              }
              n.prototype.measureImage = function(o) {
                var h, u = this;
                if (this.pdfKitDoc._imageRegistry[o])
                  h = this.pdfKitDoc._imageRegistry[o];
                else {
                  try {
                    if (h = this.pdfKitDoc.openImage(c(o)), !h)
                      throw "No image";
                  } catch (s) {
                    throw "Invalid image: " + s.toString() + `
Images dictionary should contain dataURL entries (or local file paths in node.js)`;
                  }
                  h.embed(this.pdfKitDoc), this.pdfKitDoc._imageRegistry[o] = h;
                }
                var l = { width: h.width, height: h.height };
                return h.orientation > 4 && (l = { width: h.height, height: h.width }), l;
                function c(s) {
                  var v = u.imageDictionary[s];
                  if (!v)
                    return s;
                  if (typeof v == "object")
                    throw "Not supported image definition: " + JSON.stringify(v);
                  if (r.existsSync(v))
                    return r.readFileSync(v);
                  var y = v.indexOf("base64,");
                  return y < 0 ? u.imageDictionary[s] : i.from(v.substring(y + 7), "base64");
                }
              }, f.exports = n;
            }
          ),
          /***/
          70770: (
            /***/
            function(f) {
              function d(t) {
                this.maxWidth = t, this.leadingCut = 0, this.trailingCut = 0, this.inlineWidths = 0, this.inlines = [];
              }
              d.prototype.getAscenderHeight = function() {
                var t = 0;
                return this.inlines.forEach(function(i) {
                  t = Math.max(t, i.font.ascender / 1e3 * i.fontSize);
                }), t;
              }, d.prototype.hasEnoughSpaceForInline = function(t, i) {
                if (i = i || [], this.inlines.length === 0)
                  return !0;
                if (this.newLineForced)
                  return !1;
                var r = t.width, n = t.trailingCut || 0;
                if (t.noNewLine)
                  for (var o = 0, h = i.length; o < h; o++) {
                    var u = i[o];
                    if (r += u.width, n += u.trailingCut || 0, !u.noNewLine)
                      break;
                  }
                return this.inlineWidths + r - this.leadingCut - n <= this.maxWidth;
              }, d.prototype.addInline = function(t) {
                this.inlines.length === 0 && (this.leadingCut = t.leadingCut || 0), this.trailingCut = t.trailingCut || 0, t.x = this.inlineWidths - this.leadingCut, this.inlines.push(t), this.inlineWidths += t.width, t.lineEnd && (this.newLineForced = !0);
              }, d.prototype.getWidth = function() {
                return this.inlineWidths - this.leadingCut - this.trailingCut;
              }, d.prototype.getAvailableWidth = function() {
                return this.maxWidth - this.getWidth();
              }, d.prototype.getHeight = function() {
                var t = 0;
                return this.inlines.forEach(function(i) {
                  t = Math.max(t, i.height || 0);
                }), t;
              }, f.exports = d;
            }
          ),
          /***/
          11220: (
            /***/
            function(f, d, t) {
              var i = t(91867).isUndefined, r = t(54861);
              function n(h, u) {
                this.transactionLevel = 0, this.repeatables = [], this.tracker = u, this.writer = new r(h, u);
              }
              function o(h, u) {
                var l = u(h);
                return l || (h.moveToNextPage(), l = u(h)), l;
              }
              n.prototype.addLine = function(h, u, l) {
                return o(this, function(c) {
                  return c.writer.addLine(h, u, l);
                });
              }, n.prototype.addImage = function(h, u) {
                return o(this, function(l) {
                  return l.writer.addImage(h, u);
                });
              }, n.prototype.addSVG = function(h, u) {
                return o(this, function(l) {
                  return l.writer.addSVG(h, u);
                });
              }, n.prototype.addQr = function(h, u) {
                return o(this, function(l) {
                  return l.writer.addQr(h, u);
                });
              }, n.prototype.addVector = function(h, u, l, c, s) {
                return this.writer.addVector(h, u, l, c, s);
              }, n.prototype.beginClip = function(h, u) {
                return this.writer.beginClip(h, u);
              }, n.prototype.endClip = function() {
                return this.writer.endClip();
              }, n.prototype.alignCanvas = function(h) {
                this.writer.alignCanvas(h);
              }, n.prototype.addFragment = function(h, u, l, c) {
                this.writer.addFragment(h, u, l, c) || (this.moveToNextPage(), this.writer.addFragment(h, u, l, c));
              }, n.prototype.moveToNextPage = function(h) {
                var u = this.writer.context.moveToNextPage(h);
                this.repeatables.forEach(function(l) {
                  i(l.insertedOnPages[this.writer.context.page]) ? (l.insertedOnPages[this.writer.context.page] = !0, this.writer.addFragment(l, !0)) : this.writer.context.moveDown(l.height);
                }, this), this.writer.tracker.emit("pageChanged", {
                  prevPage: u.prevPage,
                  prevY: u.prevY,
                  y: this.writer.context.y
                });
              }, n.prototype.beginUnbreakableBlock = function(h, u) {
                this.transactionLevel++ === 0 && (this.originalX = this.writer.context.x, this.writer.pushContext(h, u));
              }, n.prototype.commitUnbreakableBlock = function(h, u) {
                if (--this.transactionLevel === 0) {
                  var l = this.writer.context;
                  this.writer.popContext();
                  var c = l.pages.length;
                  if (c > 0) {
                    var s = l.pages[0];
                    if (s.xOffset = h, s.yOffset = u, c > 1)
                      if (h !== void 0 || u !== void 0)
                        s.height = l.getCurrentPage().pageSize.height - l.pageMargins.top - l.pageMargins.bottom;
                      else {
                        s.height = this.writer.context.getCurrentPage().pageSize.height - this.writer.context.pageMargins.top - this.writer.context.pageMargins.bottom;
                        for (var v = 0, y = this.repeatables.length; v < y; v++)
                          s.height -= this.repeatables[v].height;
                      }
                    else
                      s.height = l.y;
                    h !== void 0 || u !== void 0 ? this.writer.addFragment(s, !0, !0, !0) : this.addFragment(s);
                  }
                }
              }, n.prototype.currentBlockToRepeatable = function() {
                var h = this.writer.context, u = { items: [] };
                return h.pages[0].items.forEach(function(l) {
                  u.items.push(l);
                }), u.xOffset = this.originalX, u.height = h.y, u.insertedOnPages = [], u;
              }, n.prototype.pushToRepeatables = function(h) {
                this.repeatables.push(h);
              }, n.prototype.popFromRepeatables = function() {
                this.repeatables.pop();
              }, n.prototype.context = function() {
                return this.writer.context;
              }, f.exports = n;
            }
          ),
          /***/
          85208: (
            /***/
            function(f, d, t) {
              function i(h) {
                return h && typeof h == "object" && "default" in h ? h.default : h;
              }
              var r = i(t(30357));
              function n() {
                return r;
              }
              function o(h) {
                return h = h || {}, new r(h);
              }
              f.exports = {
                getEngineInstance: n,
                createPdfDocument: o
              };
            }
          ),
          /***/
          81566: (
            /***/
            function(f, d, t) {
              var i = t(85208), r = t(28284), n = t(65300), o = t(70098), h = t(93415), u = t(89638), l = t(84786), c = t(11548), s = t(91867).isFunction, v = t(91867).isString, y = t(91867).isNumber, x = t(91867).isBoolean, e = t(91867).isArray, b = t(91867).isUndefined, A = t(91867).isPattern, P = t(91867).getPattern, D = t(5557), E = function(J, yt, ut) {
                for (var st = 0; st < yt.length; st++) {
                  var wt = yt[st].toLowerCase();
                  for (var V in J)
                    if (V.toLowerCase() === wt)
                      return V;
                }
                return ut;
              };
              function T(J) {
                this.fontDescriptors = J;
              }
              T.prototype.createPdfKitDocument = function(J, yt) {
                yt = yt || {}, J.version = J.version || "1.3", J.subset = J.subset || void 0, J.tagged = typeof J.tagged == "boolean" ? J.tagged : !1, J.displayTitle = typeof J.displayTitle == "boolean" ? J.displayTitle : !1, J.compress = x(J.compress) ? J.compress : !0, J.images = J.images || {}, J.pageMargins = J.pageMargins !== void 0 && J.pageMargins !== null ? J.pageMargins : 40;
                var ut = m(J.pageSize, J.pageOrientation), st = {
                  size: [ut.width, ut.height],
                  pdfVersion: J.version,
                  subset: J.subset,
                  tagged: J.tagged,
                  displayTitle: J.displayTitle,
                  compress: J.compress,
                  userPassword: J.userPassword,
                  ownerPassword: J.ownerPassword,
                  permissions: J.permissions,
                  lang: J.language,
                  fontLayoutCache: x(yt.fontLayoutCache) ? yt.fontLayoutCache : !0,
                  bufferPages: yt.bufferPages || !1,
                  autoFirstPage: !1,
                  info: C(J),
                  font: null
                };
                this.pdfKitDoc = i.createPdfDocument(st), this.fontProvider = new r(this.fontDescriptors, this.pdfKitDoc);
                var wt = new n(ut, I(J.pageMargins), new h(this.pdfKitDoc, J.images), new u());
                O(wt), yt.tableLayouts && wt.registerTableLayouts(yt.tableLayouts);
                var V = wt.layoutDocument(J.content, this.fontProvider, J.styles || {}, J.defaultStyle || {
                  fontSize: 12,
                  font: "Roboto"
                }, J.background, J.header, J.footer, J.images, J.watermark, J.pageBreakBefore), Ft = J.maxPagesNumber || -1;
                if (y(Ft) && Ft > -1 && (V = V.slice(0, Ft)), ut.height === 1 / 0) {
                  var U = F(V, J.pageMargins);
                  this.pdfKitDoc.options.size = [ut.width, U];
                }
                var S = jt(J.patterns || {}, this.pdfKitDoc);
                if (G(V, this.fontProvider, this.pdfKitDoc, S, yt.progressCallback), yt.autoPrint) {
                  var k = this.pdfKitDoc.ref({
                    Type: "Action",
                    S: "Named",
                    N: "Print"
                  });
                  this.pdfKitDoc._root.data.OpenAction = k, k.end();
                }
                return this.pdfKitDoc;
              };
              function C(J) {
                function yt(V) {
                  var Ft = [
                    "Title",
                    "Author",
                    "Subject",
                    "Keywords",
                    "Creator",
                    "Producer",
                    "CreationDate",
                    "ModDate",
                    "Trapped"
                  ], U = V.charAt(0).toUpperCase() + V.slice(1);
                  return Ft.indexOf(U) !== -1 ? U : V.replace(/\s+/g, "");
                }
                var ut = {
                  Producer: "pdfmake",
                  Creator: "pdfmake"
                };
                if (J.info)
                  for (var st in J.info) {
                    var wt = J.info[st];
                    wt && (st = yt(st), ut[st] = wt);
                  }
                return ut;
              }
              function F(J, yt) {
                function ut(Ft) {
                  return s(Ft.item.getHeight) ? Ft.item.getHeight() : Ft.item._height ? Ft.item._height : Ft.type === "vector" ? typeof Ft.item.y1 != "undefined" ? Ft.item.y1 > Ft.item.y2 ? Ft.item.y1 : Ft.item.y2 : Ft.item.h : 0;
                }
                function st(Ft) {
                  var U = Ft.item.y || 0, S = ut(Ft);
                  return U + S;
                }
                var wt = I(yt || 40), V = wt.top;
                return J.forEach(function(Ft) {
                  Ft.items.forEach(function(U) {
                    var S = st(U);
                    S > V && (V = S);
                  });
                }), V += wt.bottom, V;
              }
              function m(J, yt) {
                function ut(wt) {
                  return v(wt) ? (wt = wt.toLowerCase(), wt === "portrait" && st.width > st.height || wt === "landscape" && st.width < st.height) : !1;
                }
                J && J.height === "auto" && (J.height = 1 / 0);
                var st = M(J || "A4");
                return ut(yt) && (st = { width: st.height, height: st.width }), st.orientation = st.width > st.height ? "landscape" : "portrait", st;
              }
              function I(J) {
                if (y(J))
                  J = { left: J, right: J, top: J, bottom: J };
                else if (e(J))
                  if (J.length === 2)
                    J = { left: J[0], top: J[1], right: J[0], bottom: J[1] };
                  else if (J.length === 4)
                    J = { left: J[0], top: J[1], right: J[2], bottom: J[3] };
                  else
                    throw "Invalid pageMargins definition";
                return J;
              }
              function O(J) {
                J.registerTableLayouts({
                  noBorders: {
                    hLineWidth: function(yt) {
                      return 0;
                    },
                    vLineWidth: function(yt) {
                      return 0;
                    },
                    paddingLeft: function(yt) {
                      return yt && 4 || 0;
                    },
                    paddingRight: function(yt, ut) {
                      return yt < ut.table.widths.length - 1 ? 4 : 0;
                    }
                  },
                  headerLineOnly: {
                    hLineWidth: function(yt, ut) {
                      return yt === 0 || yt === ut.table.body.length ? 0 : yt === ut.table.headerRows ? 2 : 0;
                    },
                    vLineWidth: function(yt) {
                      return 0;
                    },
                    paddingLeft: function(yt) {
                      return yt === 0 ? 0 : 8;
                    },
                    paddingRight: function(yt, ut) {
                      return yt === ut.table.widths.length - 1 ? 0 : 8;
                    }
                  },
                  lightHorizontalLines: {
                    hLineWidth: function(yt, ut) {
                      return yt === 0 || yt === ut.table.body.length ? 0 : yt === ut.table.headerRows ? 2 : 1;
                    },
                    vLineWidth: function(yt) {
                      return 0;
                    },
                    hLineColor: function(yt) {
                      return yt === 1 ? "black" : "#aaa";
                    },
                    paddingLeft: function(yt) {
                      return yt === 0 ? 0 : 8;
                    },
                    paddingRight: function(yt, ut) {
                      return yt === ut.table.widths.length - 1 ? 0 : 8;
                    }
                  }
                });
              }
              function M(J) {
                if (v(J)) {
                  var yt = o[J.toUpperCase()];
                  if (!yt)
                    throw "Page size " + J + " not recognized";
                  return { width: yt[0], height: yt[1] };
                }
                return J;
              }
              function N(J, yt) {
                var ut = yt.options.size[0] > yt.options.size[1] ? "landscape" : "portrait";
                if (J.pageSize.orientation !== ut) {
                  var st = yt.options.size[0], wt = yt.options.size[1];
                  yt.options.size = [wt, st];
                }
              }
              function G(J, yt, ut, st, wt) {
                ut._pdfMakePages = J, ut.addPage();
                var V = 0;
                wt && J.forEach(function(et) {
                  V += et.items.length;
                });
                var Ft = 0;
                wt = wt || function() {
                };
                for (var U = 0; U < J.length; U++) {
                  U > 0 && (N(J[U], ut), ut.addPage(ut.options));
                  for (var S = J[U], k = 0, H = S.items.length; k < H; k++) {
                    var it = S.items[k];
                    switch (it.type) {
                      case "vector":
                        xt(it.item, st, ut);
                        break;
                      case "line":
                        K(it.item, it.item.x, it.item.y, st, ut);
                        break;
                      case "image":
                        bt(it.item, it.item.x, it.item.y, ut);
                        break;
                      case "svg":
                        St(it.item, it.item.x, it.item.y, ut, yt);
                        break;
                      case "beginClip":
                        Dt(it.item, ut);
                        break;
                      case "endClip":
                        Lt(ut);
                        break;
                    }
                    Ft++, wt(Ft / V);
                  }
                  S.watermark && nt(S, ut);
                }
              }
              function ot(J, yt) {
                var ut = J;
                return yt.sup && (ut -= yt.fontSize * 0.75), yt.sub && (ut += yt.fontSize * 0.35), ut;
              }
              function K(J, yt, ut, st, wt) {
                function V(Kt, Gt) {
                  var It, re, be = new c(null);
                  if (b(Kt.positions))
                    throw "Page reference id not found";
                  var me = Kt.positions[0].pageNumber.toString();
                  switch (Gt.text = me, It = be.widthOfString(Gt.text, Gt.font, Gt.fontSize, Gt.characterSpacing, Gt.fontFeatures), re = Gt.width - It, Gt.width = It, Gt.alignment) {
                    case "right":
                      Gt.x += re;
                      break;
                    case "center":
                      Gt.x += re / 2;
                      break;
                  }
                }
                J._pageNodeRef && V(J._pageNodeRef, J.inlines[0]), yt = yt || 0, ut = ut || 0;
                var Ft = J.getHeight(), U = J.getAscenderHeight(), S = Ft - U;
                l.drawBackground(J, yt, ut, st, wt);
                for (var k = 0, H = J.inlines.length; k < H; k++) {
                  var it = J.inlines[k], et = Ft - it.font.ascender / 1e3 * it.fontSize - S;
                  it._pageNodeRef && V(it._pageNodeRef, it);
                  var tt = {
                    lineBreak: !1,
                    textWidth: it.width,
                    characterSpacing: it.characterSpacing,
                    wordCount: 1,
                    link: it.link
                  };
                  it.linkToDestination && (tt.goTo = it.linkToDestination), J.id && k === 0 && (tt.destination = J.id), it.fontFeatures && (tt.features = it.fontFeatures);
                  var Ct = y(it.opacity) ? it.opacity : 1;
                  wt.opacity(Ct), wt.fill(it.color || "black"), wt._font = it.font, wt.fontSize(it.fontSize);
                  var Rt = ot(ut + et, it);
                  wt.text(it.text, yt + it.x, Rt, tt), it.linkToPage && (wt.ref({ Type: "Action", S: "GoTo", D: [it.linkToPage, 0, 0] }).end(), wt.annotate(yt + it.x, Rt, it.width, it.height, {
                    Subtype: "Link",
                    Dest: [it.linkToPage - 1, "XYZ", null, null, null]
                  }));
                }
                l.drawDecorations(J, yt, ut, wt);
              }
              function nt(J, yt) {
                var ut = J.watermark;
                yt.fill(ut.color), yt.opacity(ut.opacity), yt.save(), yt.rotate(ut.angle, { origin: [yt.page.width / 2, yt.page.height / 2] });
                var st = yt.page.width / 2 - ut._size.size.width / 2, wt = yt.page.height / 2 - ut._size.size.height / 2;
                yt._font = ut.font, yt.fontSize(ut.fontSize), yt.text(ut.text, st, wt, { lineBreak: !1 }), yt.restore();
              }
              function xt(J, yt, ut) {
                ut.lineWidth(J.lineWidth || 1), J.dash ? ut.dash(J.dash.length, { space: J.dash.space || J.dash.length, phase: J.dash.phase || 0 }) : ut.undash(), ut.lineJoin(J.lineJoin || "miter"), ut.lineCap(J.lineCap || "butt");
                var st = null;
                switch (J.type) {
                  case "ellipse":
                    ut.ellipse(J.x, J.y, J.r1, J.r2), J.linearGradient && (st = ut.linearGradient(J.x - J.r1, J.y, J.x + J.r1, J.y));
                    break;
                  case "rect":
                    J.r ? ut.roundedRect(J.x, J.y, J.w, J.h, J.r) : ut.rect(J.x, J.y, J.w, J.h), J.linearGradient && (st = ut.linearGradient(J.x, J.y, J.x + J.w, J.y));
                    break;
                  case "line":
                    ut.moveTo(J.x1, J.y1), ut.lineTo(J.x2, J.y2);
                    break;
                  case "polyline":
                    if (J.points.length === 0)
                      break;
                    ut.moveTo(J.points[0].x, J.points[0].y);
                    for (var wt = 1, V = J.points.length; wt < V; wt++)
                      ut.lineTo(J.points[wt].x, J.points[wt].y);
                    if (J.points.length > 1) {
                      var Ft = J.points[0], U = J.points[J.points.length - 1];
                      (J.closePath || Ft.x === U.x && Ft.y === U.y) && ut.closePath();
                    }
                    break;
                  case "path":
                    ut.path(J.d);
                    break;
                }
                if (J.linearGradient && st) {
                  for (var S = 1 / (J.linearGradient.length - 1), wt = 0; wt < J.linearGradient.length; wt++)
                    st.stop(wt * S, J.linearGradient[wt]);
                  J.color = st;
                }
                A(J.color) && (J.color = P(J.color, yt));
                var k = y(J.fillOpacity) ? J.fillOpacity : 1, H = y(J.strokeOpacity) ? J.strokeOpacity : 1;
                J.color && J.lineColor ? (ut.fillColor(J.color, k), ut.strokeColor(J.lineColor, H), ut.fillAndStroke()) : J.color ? (ut.fillColor(J.color, k), ut.fill()) : (ut.strokeColor(J.lineColor || "black", H), ut.stroke());
              }
              function bt(J, yt, ut, st) {
                var wt = y(J.opacity) ? J.opacity : 1;
                if (st.opacity(wt), J.cover) {
                  var V = J.cover.align || "center", Ft = J.cover.valign || "center", U = J.cover.width ? J.cover.width : J.width, S = J.cover.height ? J.cover.height : J.height;
                  st.save(), st.rect(J.x, J.y, U, S).clip(), st.image(J.image, J.x, J.y, { cover: [U, S], align: V, valign: Ft }), st.restore();
                } else
                  st.image(J.image, J.x, J.y, { width: J._width, height: J._height });
                J.link && st.link(J.x, J.y, J._width, J._height, J.link), J.linkToPage && (st.ref({ Type: "Action", S: "GoTo", D: [J.linkToPage, 0, 0] }).end(), st.annotate(J.x, J.y, J._width, J._height, { Subtype: "Link", Dest: [J.linkToPage - 1, "XYZ", null, null, null] })), J.linkToDestination && st.goTo(J.x, J.y, J._width, J._height, J.linkToDestination);
              }
              function St(J, yt, ut, st, wt) {
                var V = Object.assign({ width: J._width, height: J._height, assumePt: !0 }, J.options);
                V.fontCallback = function(Ft, U, S) {
                  var k = Ft.split(",").map(function(tt) {
                    return tt.trim().replace(/('|")/g, "");
                  }), H = E(wt.fonts, k, J.font || "Roboto"), it = wt.getFontFile(H, U, S);
                  if (it === null) {
                    var et = wt.getFontType(U, S);
                    throw new Error("Font '" + H + "' in style '" + et + "' is not defined in the font section of the document definition.");
                  }
                  return it;
                }, D(st, J.svg, J.x, J.y, V), J.link && st.link(J.x, J.y, J._width, J._height, J.link), J.linkToPage && (st.ref({ Type: "Action", S: "GoTo", D: [J.linkToPage, 0, 0] }).end(), st.annotate(J.x, J.y, J._width, J._height, { Subtype: "Link", Dest: [J.linkToPage - 1, "XYZ", null, null, null] })), J.linkToDestination && st.goTo(J.x, J.y, J._width, J._height, J.linkToDestination);
              }
              function Dt(J, yt) {
                yt.save(), yt.addContent("" + J.x + " " + J.y + " " + J.width + " " + J.height + " re"), yt.clip();
              }
              function Lt(J) {
                J.restore();
              }
              function jt(J, yt) {
                var ut = {};
                return Object.keys(J).forEach(function(st) {
                  var wt = J[st];
                  ut[st] = yt.pattern(wt.boundingBox, wt.xStep, wt.yStep, wt.pattern, wt.colored);
                }), ut;
              }
              f.exports = T;
            }
          ),
          /***/
          72155: (
            /***/
            function(f) {
              for (var d = [
                null,
                [[10, 7, 17, 13], [1, 1, 1, 1], []],
                [[16, 10, 28, 22], [1, 1, 1, 1], [4, 16]],
                [[26, 15, 22, 18], [1, 1, 2, 2], [4, 20]],
                [[18, 20, 16, 26], [2, 1, 4, 2], [4, 24]],
                [[24, 26, 22, 18], [2, 1, 4, 4], [4, 28]],
                [[16, 18, 28, 24], [4, 2, 4, 4], [4, 32]],
                [[18, 20, 26, 18], [4, 2, 5, 6], [4, 20, 36]],
                [[22, 24, 26, 22], [4, 2, 6, 6], [4, 22, 40]],
                [[22, 30, 24, 20], [5, 2, 8, 8], [4, 24, 44]],
                [[26, 18, 28, 24], [5, 4, 8, 8], [4, 26, 48]],
                [[30, 20, 24, 28], [5, 4, 11, 8], [4, 28, 52]],
                [[22, 24, 28, 26], [8, 4, 11, 10], [4, 30, 56]],
                [[22, 26, 22, 24], [9, 4, 16, 12], [4, 32, 60]],
                [[24, 30, 24, 20], [9, 4, 16, 16], [4, 24, 44, 64]],
                [[24, 22, 24, 30], [10, 6, 18, 12], [4, 24, 46, 68]],
                [[28, 24, 30, 24], [10, 6, 16, 17], [4, 24, 48, 72]],
                [[28, 28, 28, 28], [11, 6, 19, 16], [4, 28, 52, 76]],
                [[26, 30, 28, 28], [13, 6, 21, 18], [4, 28, 54, 80]],
                [[26, 28, 26, 26], [14, 7, 25, 21], [4, 28, 56, 84]],
                [[26, 28, 28, 30], [16, 8, 25, 20], [4, 32, 60, 88]],
                [[26, 28, 30, 28], [17, 8, 25, 23], [4, 26, 48, 70, 92]],
                [[28, 28, 24, 30], [17, 9, 34, 23], [4, 24, 48, 72, 96]],
                [[28, 30, 30, 30], [18, 9, 30, 25], [4, 28, 52, 76, 100]],
                [[28, 30, 30, 30], [20, 10, 32, 27], [4, 26, 52, 78, 104]],
                [[28, 26, 30, 30], [21, 12, 35, 29], [4, 30, 56, 82, 108]],
                [[28, 28, 30, 28], [23, 12, 37, 34], [4, 28, 56, 84, 112]],
                [[28, 30, 30, 30], [25, 12, 40, 34], [4, 32, 60, 88, 116]],
                [[28, 30, 30, 30], [26, 13, 42, 35], [4, 24, 48, 72, 96, 120]],
                [[28, 30, 30, 30], [28, 14, 45, 38], [4, 28, 52, 76, 100, 124]],
                [[28, 30, 30, 30], [29, 15, 48, 40], [4, 24, 50, 76, 102, 128]],
                [[28, 30, 30, 30], [31, 16, 51, 43], [4, 28, 54, 80, 106, 132]],
                [[28, 30, 30, 30], [33, 17, 54, 45], [4, 32, 58, 84, 110, 136]],
                [[28, 30, 30, 30], [35, 18, 57, 48], [4, 28, 56, 84, 112, 140]],
                [[28, 30, 30, 30], [37, 19, 60, 51], [4, 32, 60, 88, 116, 144]],
                [[28, 30, 30, 30], [38, 19, 63, 53], [4, 28, 52, 76, 100, 124, 148]],
                [[28, 30, 30, 30], [40, 20, 66, 56], [4, 22, 48, 74, 100, 126, 152]],
                [[28, 30, 30, 30], [43, 21, 70, 59], [4, 26, 52, 78, 104, 130, 156]],
                [[28, 30, 30, 30], [45, 22, 74, 62], [4, 30, 56, 82, 108, 134, 160]],
                [[28, 30, 30, 30], [47, 24, 77, 65], [4, 24, 52, 80, 108, 136, 164]],
                [[28, 30, 30, 30], [49, 25, 81, 68], [4, 28, 56, 84, 112, 140, 168]]
              ], t = 0, i = 1, r = 2, n = 4, o = 8, h = /^\d*$/, u = /^[A-Za-z0-9 $%*+\-./:]*$/, l = /^[A-Z0-9 $%*+\-./:]*$/, c = 1, s = 0, v = 3, y = 2, x = [], e = [-1], b = 0, A = 1; b < 255; ++b)
                x.push(A), e[A] = b, A = A * 2 ^ (A >= 128 ? 285 : 0);
              for (var P = [[]], b = 0; b < 30; ++b) {
                for (var D = P[b], E = [], T = 0; T <= b; ++T) {
                  var C = T < b ? x[D[T]] : 0, F = x[(b + (D[T - 1] || 0)) % 255];
                  E.push(e[C ^ F]);
                }
                P.push(E);
              }
              for (var m = {}, b = 0; b < 45; ++b)
                m["0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:".charAt(b)] = b;
              var I = [
                function(U, S) {
                  return (U + S) % 2 === 0;
                },
                function(U, S) {
                  return U % 2 === 0;
                },
                function(U, S) {
                  return S % 3 === 0;
                },
                function(U, S) {
                  return (U + S) % 3 === 0;
                },
                function(U, S) {
                  return ((U / 2 | 0) + (S / 3 | 0)) % 2 === 0;
                },
                function(U, S) {
                  return U * S % 2 + U * S % 3 === 0;
                },
                function(U, S) {
                  return (U * S % 2 + U * S % 3) % 2 === 0;
                },
                function(U, S) {
                  return ((U + S) % 2 + U * S % 3) % 2 === 0;
                }
              ], O = function(U) {
                return U > 6;
              }, M = function(U) {
                return 4 * U + 17;
              }, N = function(U) {
                var S = d[U], k = 16 * U * U + 128 * U + 64;
                return O(U) && (k -= 36), S[2].length && (k -= 25 * S[2].length * S[2].length - 10 * S[2].length - 55), k;
              }, G = function(U, S) {
                var k = N(U) & -8, H = d[U];
                return k -= 8 * H[0][S] * H[1][S], k;
              }, ot = function(U, S) {
                switch (S) {
                  case i:
                    return U < 10 ? 10 : U < 27 ? 12 : 14;
                  case r:
                    return U < 10 ? 9 : U < 27 ? 11 : 13;
                  case n:
                    return U < 10 ? 8 : 16;
                  case o:
                    return U < 10 ? 8 : U < 27 ? 10 : 12;
                }
              }, K = function(U, S, k) {
                var H = G(U, k) - 4 - ot(U, S);
                switch (S) {
                  case i:
                    return (H / 10 | 0) * 3 + (H % 10 < 4 ? 0 : H % 10 < 7 ? 1 : 2);
                  case r:
                    return (H / 11 | 0) * 2 + (H % 11 < 6 ? 0 : 1);
                  case n:
                    return H / 8 | 0;
                  case o:
                    return H / 13 | 0;
                }
              }, nt = function(U, S) {
                switch (U) {
                  case i:
                    return S.match(h) ? S : null;
                  case r:
                    return S.match(u) ? S.toUpperCase() : null;
                  case n:
                    if (typeof S == "string") {
                      for (var k = [], H = 0; H < S.length; ++H) {
                        var it = S.charCodeAt(H);
                        it < 128 ? k.push(it) : it < 2048 ? k.push(
                          192 | it >> 6,
                          128 | it & 63
                        ) : it < 65536 ? k.push(
                          224 | it >> 12,
                          128 | it >> 6 & 63,
                          128 | it & 63
                        ) : k.push(
                          240 | it >> 18,
                          128 | it >> 12 & 63,
                          128 | it >> 6 & 63,
                          128 | it & 63
                        );
                      }
                      return k;
                    } else
                      return S;
                }
              }, xt = function(U, S, k, H) {
                var it = [], et = 0, tt = 8, Ct = k.length, Rt = function(It, re) {
                  if (re >= tt) {
                    for (it.push(et | It >> (re -= tt)); re >= 8; )
                      it.push(It >> (re -= 8) & 255);
                    et = 0, tt = 8;
                  }
                  re > 0 && (et |= (It & (1 << re) - 1) << (tt -= re));
                }, Kt = ot(U, S);
                switch (Rt(S, 4), Rt(Ct, Kt), S) {
                  case i:
                    for (var Gt = 2; Gt < Ct; Gt += 3)
                      Rt(parseInt(k.substring(Gt - 2, Gt + 1), 10), 10);
                    Rt(parseInt(k.substring(Gt - 2), 10), [0, 4, 7][Ct % 3]);
                    break;
                  case r:
                    for (var Gt = 1; Gt < Ct; Gt += 2)
                      Rt(m[k.charAt(Gt - 1)] * 45 + m[k.charAt(Gt)], 11);
                    Ct % 2 == 1 && Rt(m[k.charAt(Gt - 1)], 6);
                    break;
                  case n:
                    for (var Gt = 0; Gt < Ct; ++Gt)
                      Rt(k[Gt], 8);
                    break;
                }
                for (Rt(t, 4), tt < 8 && it.push(et); it.length + 1 < H; )
                  it.push(236, 17);
                return it.length < H && it.push(236), it;
              }, bt = function(U, S) {
                for (var k = U.slice(0), H = U.length, it = S.length, et = 0; et < it; ++et)
                  k.push(0);
                for (var et = 0; et < H; ) {
                  var tt = e[k[et++]];
                  if (tt >= 0)
                    for (var Ct = 0; Ct < it; ++Ct)
                      k[et + Ct] ^= x[(tt + S[Ct]) % 255];
                }
                return k.slice(H);
              }, St = function(U, S, k) {
                for (var H = [], it = U.length / S | 0, et = 0, tt = S - U.length % S, Ct = 0; Ct < tt; ++Ct)
                  H.push(et), et += it;
                for (var Ct = tt; Ct < S; ++Ct)
                  H.push(et), et += it + 1;
                H.push(et);
                for (var Rt = [], Ct = 0; Ct < S; ++Ct)
                  Rt.push(bt(U.slice(H[Ct], H[Ct + 1]), k));
                for (var Kt = [], Gt = U.length / S | 0, Ct = 0; Ct < Gt; ++Ct)
                  for (var It = 0; It < S; ++It)
                    Kt.push(U[H[It] + Ct]);
                for (var It = tt; It < S; ++It)
                  Kt.push(U[H[It + 1] - 1]);
                for (var Ct = 0; Ct < k.length; ++Ct)
                  for (var It = 0; It < S; ++It)
                    Kt.push(Rt[It][Ct]);
                return Kt;
              }, Dt = function(U, S, k, H) {
                for (var it = U << H, et = S - 1; et >= 0; --et)
                  it >> H + et & 1 && (it ^= k << et);
                return U << H | it;
              }, Lt = function(U) {
                for (var S = d[U], k = M(U), H = [], it = [], et = 0; et < k; ++et)
                  H.push([]), it.push([]);
                var tt = function(me, le, Se, Wt, $t) {
                  for (var ue = 0; ue < Se; ++ue)
                    for (var he = 0; he < Wt; ++he)
                      H[me + ue][le + he] = $t[ue] >> he & 1, it[me + ue][le + he] = 1;
                };
                tt(0, 0, 9, 9, [127, 65, 93, 93, 93, 65, 383, 0, 64]), tt(k - 8, 0, 8, 9, [256, 127, 65, 93, 93, 93, 65, 127]), tt(0, k - 8, 9, 8, [254, 130, 186, 186, 186, 130, 254, 0, 0]);
                for (var et = 9; et < k - 8; ++et)
                  H[6][et] = H[et][6] = ~et & 1, it[6][et] = it[et][6] = 1;
                for (var Ct = S[2], Rt = Ct.length, et = 0; et < Rt; ++et)
                  for (var Kt = et === 0 || et === Rt - 1 ? 1 : 0, Gt = et === 0 ? Rt - 1 : Rt, It = Kt; It < Gt; ++It)
                    tt(Ct[et], Ct[It], 5, 5, [31, 17, 21, 17, 31]);
                if (O(U))
                  for (var re = Dt(U, 6, 7973, 12), be = 0, et = 0; et < 6; ++et)
                    for (var It = 0; It < 3; ++It)
                      H[et][k - 11 + It] = H[k - 11 + It][et] = re >> be++ & 1, it[et][k - 11 + It] = it[k - 11 + It][et] = 1;
                return { matrix: H, reserved: it };
              }, jt = function(U, S, k) {
                for (var H = U.length, it = 0, et = -1, tt = H - 1; tt >= 0; tt -= 2) {
                  tt == 6 && --tt;
                  for (var Ct = et < 0 ? H - 1 : 0, Rt = 0; Rt < H; ++Rt) {
                    for (var Kt = tt; Kt > tt - 2; --Kt)
                      S[Ct][Kt] || (U[Ct][Kt] = k[it >> 3] >> (~it & 7) & 1, ++it);
                    Ct += et;
                  }
                  et = -et;
                }
                return U;
              }, J = function(U, S, k) {
                for (var H = I[k], it = U.length, et = 0; et < it; ++et)
                  for (var tt = 0; tt < it; ++tt)
                    S[et][tt] || (U[et][tt] ^= H(et, tt));
                return U;
              }, yt = function(U, S, k, H) {
                for (var it = U.length, et = Dt(k << 3 | H, 5, 1335, 10) ^ 21522, tt = 0; tt < 15; ++tt) {
                  var Ct = [0, 1, 2, 3, 4, 5, 7, 8, it - 7, it - 6, it - 5, it - 4, it - 3, it - 2, it - 1][tt], Rt = [it - 1, it - 2, it - 3, it - 4, it - 5, it - 6, it - 7, it - 8, 7, 5, 4, 3, 2, 1, 0][tt];
                  U[Ct][8] = U[8][Rt] = et >> tt & 1;
                }
                return U;
              }, ut = function(U) {
                for (var S = 3, k = 3, H = 40, it = 10, et = function(Se) {
                  for (var Wt = 0, $t = 0; $t < Se.length; ++$t)
                    Se[$t] >= 5 && (Wt += S + (Se[$t] - 5));
                  for (var $t = 5; $t < Se.length; $t += 2) {
                    var ue = Se[$t];
                    Se[$t - 1] == ue && Se[$t - 2] == 3 * ue && Se[$t - 3] == ue && Se[$t - 4] == ue && (Se[$t - 5] >= 4 * ue || Se[$t + 1] >= 4 * ue) && (Wt += H);
                  }
                  return Wt;
                }, tt = U.length, Ct = 0, Rt = 0, Kt = 0; Kt < tt; ++Kt) {
                  var Gt = U[Kt], It;
                  It = [0];
                  for (var re = 0; re < tt; ) {
                    var be;
                    for (be = 0; re < tt && Gt[re]; ++be)
                      ++re;
                    for (It.push(be), be = 0; re < tt && !Gt[re]; ++be)
                      ++re;
                    It.push(be);
                  }
                  Ct += et(It), It = [0];
                  for (var re = 0; re < tt; ) {
                    var be;
                    for (be = 0; re < tt && U[re][Kt]; ++be)
                      ++re;
                    for (It.push(be), be = 0; re < tt && !U[re][Kt]; ++be)
                      ++re;
                    It.push(be);
                  }
                  Ct += et(It);
                  var me = U[Kt + 1] || [];
                  Rt += Gt[0];
                  for (var re = 1; re < tt; ++re) {
                    var le = Gt[re];
                    Rt += le, Gt[re - 1] == le && me[re] === le && me[re - 1] === le && (Ct += k);
                  }
                }
                return Ct += it * (Math.abs(Rt / tt / tt - 0.5) / 0.05 | 0), Ct;
              }, st = function(U, S, k, H, it) {
                var et = d[S], tt = xt(S, k, U, G(S, H) >> 3);
                tt = St(tt, et[1][H], P[et[0][H]]);
                var Ct = Lt(S), Rt = Ct.matrix, Kt = Ct.reserved;
                if (jt(Rt, Kt, tt), it < 0) {
                  J(Rt, Kt, 0), yt(Rt, Kt, H, 0);
                  var Gt = 0, It = ut(Rt);
                  for (J(Rt, Kt, 0), it = 1; it < 8; ++it) {
                    J(Rt, Kt, it), yt(Rt, Kt, H, it);
                    var re = ut(Rt);
                    It > re && (It = re, Gt = it), J(Rt, Kt, it);
                  }
                  it = Gt;
                }
                return J(Rt, Kt, it), yt(Rt, Kt, H, it), Rt;
              };
              function wt(U, S) {
                var k = {
                  numeric: i,
                  alphanumeric: r,
                  octet: n
                }, H = {
                  L: c,
                  M: s,
                  Q: v,
                  H: y
                };
                S = S || {};
                var it = S.version || -1, et = H[(S.eccLevel || "L").toUpperCase()], tt = S.mode ? k[S.mode.toLowerCase()] : -1, Ct = "mask" in S ? S.mask : -1;
                if (tt < 0)
                  typeof U == "string" ? U.match(h) ? tt = i : U.match(l) ? tt = r : tt = n : tt = n;
                else if (!(tt == i || tt == r || tt == n))
                  throw "invalid or unsupported mode";
                if (U = nt(tt, U), U === null)
                  throw "invalid data format";
                if (et < 0 || et > 3)
                  throw "invalid ECC level";
                if (it < 0) {
                  for (it = 1; it <= 40 && !(U.length <= K(it, tt, et)); ++it)
                    ;
                  if (it > 40)
                    throw "too large data for the Qr format";
                } else if (it < 1 || it > 40)
                  throw "invalid Qr version! should be between 1 and 40";
                if (Ct != -1 && (Ct < 0 || Ct > 8))
                  throw "invalid mask";
                return st(U, it, tt, et, Ct);
              }
              function V(U, S) {
                var k = [], H = S.background || "#fff", it = S.foreground || "#000", et = S.padding || 0, tt = wt(U, S), Ct = tt.length, Rt = Math.floor(S.fit ? S.fit / Ct : 5), Kt = Ct * Rt + Rt * et * 2, Gt = Rt * et;
                k.push({
                  type: "rect",
                  x: 0,
                  y: 0,
                  w: Kt,
                  h: Kt,
                  lineWidth: 0,
                  color: H
                });
                for (var It = 0; It < Ct; ++It)
                  for (var re = 0; re < Ct; ++re)
                    tt[It][re] && k.push({
                      type: "rect",
                      x: Rt * re + Gt,
                      y: Rt * It + Gt,
                      w: Rt,
                      h: Rt,
                      lineWidth: 0,
                      color: it
                    });
                return {
                  canvas: k,
                  size: Kt
                };
              }
              function Ft(U) {
                var S = V(U.qr, U);
                return U._canvas = S.canvas, U._width = U._height = U._minWidth = U._maxWidth = U._minHeight = U._maxHeight = S.size, U;
              }
              f.exports = {
                measure: Ft
              };
            }
          ),
          /***/
          70098: (
            /***/
            function(f) {
              f.exports = {
                "4A0": [4767.87, 6740.79],
                "2A0": [3370.39, 4767.87],
                A0: [2383.94, 3370.39],
                A1: [1683.78, 2383.94],
                A2: [1190.55, 1683.78],
                A3: [841.89, 1190.55],
                A4: [595.28, 841.89],
                A5: [419.53, 595.28],
                A6: [297.64, 419.53],
                A7: [209.76, 297.64],
                A8: [147.4, 209.76],
                A9: [104.88, 147.4],
                A10: [73.7, 104.88],
                B0: [2834.65, 4008.19],
                B1: [2004.09, 2834.65],
                B2: [1417.32, 2004.09],
                B3: [1000.63, 1417.32],
                B4: [708.66, 1000.63],
                B5: [498.9, 708.66],
                B6: [354.33, 498.9],
                B7: [249.45, 354.33],
                B8: [175.75, 249.45],
                B9: [124.72, 175.75],
                B10: [87.87, 124.72],
                C0: [2599.37, 3676.54],
                C1: [1836.85, 2599.37],
                C2: [1298.27, 1836.85],
                C3: [918.43, 1298.27],
                C4: [649.13, 918.43],
                C5: [459.21, 649.13],
                C6: [323.15, 459.21],
                C7: [229.61, 323.15],
                C8: [161.57, 229.61],
                C9: [113.39, 161.57],
                C10: [79.37, 113.39],
                RA0: [2437.8, 3458.27],
                RA1: [1729.13, 2437.8],
                RA2: [1218.9, 1729.13],
                RA3: [864.57, 1218.9],
                RA4: [609.45, 864.57],
                SRA0: [2551.18, 3628.35],
                SRA1: [1814.17, 2551.18],
                SRA2: [1275.59, 1814.17],
                SRA3: [907.09, 1275.59],
                SRA4: [637.8, 907.09],
                EXECUTIVE: [521.86, 756],
                FOLIO: [612, 936],
                LEGAL: [612, 1008],
                LETTER: [612, 792],
                TABLOID: [792, 1224]
              };
            }
          ),
          /***/
          76442: (
            /***/
            function(f, d, t) {
              var i = t(91867).isString, r = t(91867).isArray, n = t(91867).isUndefined, o = t(91867).isNull;
              function h(u, l) {
                this.defaultStyle = l || {}, this.styleDictionary = u, this.styleOverrides = [];
              }
              h.prototype.clone = function() {
                var u = new h(this.styleDictionary, this.defaultStyle);
                return this.styleOverrides.forEach(function(l) {
                  u.styleOverrides.push(l);
                }), u;
              }, h.prototype.push = function(u) {
                this.styleOverrides.push(u);
              }, h.prototype.pop = function(u) {
                for (u = u || 1; u-- > 0; )
                  this.styleOverrides.pop();
              }, h.prototype.autopush = function(u) {
                if (i(u))
                  return 0;
                var l = [];
                u.style && (r(u.style) ? l = u.style : l = [u.style]);
                for (var c = 0, s = l.length; c < s; c++)
                  this.push(l[c]);
                return this.push(u), l.length + 1;
              }, h.prototype.auto = function(u, l) {
                var c = this.autopush(u), s = l();
                return c > 0 && this.pop(c), s;
              }, h.prototype.getProperty = function(u) {
                if (this.styleOverrides)
                  for (var l = this.styleOverrides.length - 1; l >= 0; l--) {
                    var c = this.styleOverrides[l];
                    if (i(c)) {
                      var s = this.styleDictionary[c];
                      if (s && !n(s[u]) && !o(s[u]))
                        return s[u];
                    } else if (!n(c[u]) && !o(c[u]))
                      return c[u];
                  }
                return this.defaultStyle && this.defaultStyle[u];
              }, f.exports = h;
            }
          ),
          /***/
          89638: (
            /***/
            function(f, d, t) {
              var i = t(52242);
              function r(h) {
                var u = parseFloat(h);
                if (!(typeof u != "number" || isNaN(u)))
                  return u;
              }
              function n(h) {
                var u;
                try {
                  u = new i.XmlDocument(h);
                } catch (l) {
                  throw new Error("SVGMeasure: " + l);
                }
                if (u.name !== "svg")
                  throw new Error("SVGMeasure: expected <svg> document");
                return u;
              }
              function o() {
              }
              o.prototype.measureSVG = function(h) {
                var u = n(h), l = r(u.attr.width), c = r(u.attr.height);
                if ((l == null || c == null) && typeof u.attr.viewBox == "string") {
                  var s = u.attr.viewBox.split(/[,\s]+/);
                  if (s.length !== 4)
                    throw new Error("Unexpected svg viewbox format, should have 4 entries but found: '" + u.attr.viewBox + "'");
                  l == null && (l = r(s[2])), c == null && (c = r(s[3]));
                }
                return {
                  width: l,
                  height: c
                };
              }, o.prototype.writeDimensions = function(h, u) {
                var l = n(h);
                return l.attr.width = "" + u.width, l.attr.height = "" + u.height, l.toString();
              }, f.exports = o;
            }
          ),
          /***/
          89836: (
            /***/
            function(f, d, t) {
              var i = t(77530), r = t(91867).isFunction, n = t(91867).isNumber, o = t(91867).isPositiveInteger;
              function h(u) {
                this.tableNode = u;
              }
              h.prototype.beginTable = function(u) {
                var l, c, s = this;
                l = this.tableNode, this.offsets = l._offsets, this.layout = l._layout, c = u.context().availableWidth - this.offsets.total, i.buildColumnWidths(l.table.widths, c, this.offsets.total, l), this.tableWidth = l._offsets.total + y(), this.rowSpanData = x(), this.cleanUpRepeatables = !1, this.headerRows = 0, this.rowsWithoutPageBreak = 0;
                var v = l.table.headerRows;
                if (o(v)) {
                  if (this.headerRows = v, this.headerRows > l.table.body.length)
                    throw new Error(`Too few rows in the table. Property headerRows requires at least ${this.headerRows}, contains only ${l.table.body.length}`);
                  this.rowsWithoutPageBreak = this.headerRows;
                  const b = l.table.keepWithHeaderRows;
                  o(b) && (this.rowsWithoutPageBreak += b);
                }
                this.dontBreakRows = l.table.dontBreakRows || !1, (this.rowsWithoutPageBreak || this.dontBreakRows) && (u.beginUnbreakableBlock(), this.drawHorizontalLine(0, u), this.rowsWithoutPageBreak && this.dontBreakRows && u.beginUnbreakableBlock()), e(this.tableNode.table.body);
                function y() {
                  var b = 0;
                  return l.table.widths.forEach(function(A) {
                    b += A._calcWidth;
                  }), b;
                }
                function x() {
                  var b = [], A = 0, P = 0;
                  b.push({ left: 0, rowSpan: 0 });
                  for (var D = 0, E = s.tableNode.table.body[0].length; D < E; D++) {
                    var T = s.layout.paddingLeft(D, s.tableNode) + s.layout.paddingRight(D, s.tableNode), C = s.layout.vLineWidth(D, s.tableNode);
                    P = T + C + s.tableNode.table.widths[D]._calcWidth, b[b.length - 1].width = P, A += P, b.push({ left: A, rowSpan: 0, width: 0 });
                  }
                  return b;
                }
                function e(b) {
                  for (var A = 0; A < b.length; A++)
                    for (var P = b[A], D = 0; D < P.length; D++) {
                      var E = P[D];
                      if (E.border) {
                        for (var T = E.rowSpan || 1, C = E.colSpan || 1, F = 0; F < T; F++)
                          E.border[0] !== void 0 && F > 0 && I(A + F, D, 0, E.border[0]), E.border[2] !== void 0 && I(A + F, D + C - 1, 2, E.border[2]);
                        for (var m = 0; m < C; m++)
                          E.border[1] !== void 0 && m > 0 && I(A, D + m, 1, E.border[1]), E.border[3] !== void 0 && I(A + T - 1, D + m, 3, E.border[3]);
                      }
                    }
                  function I(O, M, N, G) {
                    var ot = b[O][M];
                    ot.border = ot.border || {}, ot.border[N] = G;
                  }
                }
              }, h.prototype.onRowBreak = function(u, l) {
                var c = this;
                return function() {
                  var s = c.rowPaddingTop + (c.headerRows ? 0 : c.topLineWidth);
                  l.context().availableHeight -= c.reservedAtBottom, l.context().moveDown(s);
                };
              }, h.prototype.beginRow = function(u, l) {
                this.topLineWidth = this.layout.hLineWidth(u, this.tableNode), this.rowPaddingTop = this.layout.paddingTop(u, this.tableNode), this.bottomLineWidth = this.layout.hLineWidth(u + 1, this.tableNode), this.rowPaddingBottom = this.layout.paddingBottom(u, this.tableNode), this.rowCallback = this.onRowBreak(u, l), l.tracker.startTracking("pageChanged", this.rowCallback), u == 0 && !this.dontBreakRows && !this.rowsWithoutPageBreak && (this._tableTopBorderY = l.context().y, l.context().moveDown(this.topLineWidth)), this.dontBreakRows && u > 0 && l.beginUnbreakableBlock(), this.rowTopY = l.context().y, this.reservedAtBottom = this.bottomLineWidth + this.rowPaddingBottom, l.context().availableHeight -= this.reservedAtBottom, l.context().moveDown(this.rowPaddingTop);
              }, h.prototype.drawHorizontalLine = function(u, l, c, s = !0, v) {
                var y = this.layout.hLineWidth(u, this.tableNode);
                if (y) {
                  var x = this.layout.hLineStyle(u, this.tableNode), e;
                  x && x.dash && (e = x.dash);
                  for (var b = y / 2, A = null, P = this.tableNode.table.body, D, E, T, C = 0, F = this.rowSpanData.length; C < F; C++) {
                    var m = this.rowSpanData[C], I = !m.rowSpan, O = null;
                    if (I && C < F - 1) {
                      var M = !1, N = !1, G = !1;
                      u > 0 && (D = P[u - 1][C], N = D.border ? D.border[3] : this.layout.defaultBorder, N && D.borderColor && (O = D.borderColor[3])), u < P.length && (E = P[u][C], M = E.border ? E.border[1] : this.layout.defaultBorder, M && O == null && E.borderColor && (O = E.borderColor[1])), I = M || N;
                    }
                    if (D && D._rowSpanCurrentOffset && (T = P[u - 1 - D._rowSpanCurrentOffset][C], G = T && T.border ? T.border[3] : this.layout.defaultBorder, G && T && T.borderColor && (O = T.borderColor[3])), O == null && (O = r(this.layout.hLineColor) ? this.layout.hLineColor(u, this.tableNode, C) : this.layout.hLineColor), !A && I && (A = { left: m.left, width: 0 }), I) {
                      var ot = 0;
                      if (T && T.colSpan && G) {
                        for (; T.colSpan > ot; )
                          A.width += this.rowSpanData[C + ot++].width || 0;
                        C += ot - 1;
                      } else if (D && D.colSpan && N) {
                        for (; D.colSpan > ot; )
                          A.width += this.rowSpanData[C + ot++].width || 0;
                        C += ot - 1;
                      } else if (E && E.colSpan && M) {
                        for (; E.colSpan > ot; )
                          A.width += this.rowSpanData[C + ot++].width || 0;
                        C += ot - 1;
                      } else
                        A.width += this.rowSpanData[C].width || 0;
                    }
                    var K = (c || 0) + b;
                    I && A && A.width && (l.addVector({
                      type: "line",
                      x1: A.left,
                      x2: A.left + A.width,
                      y1: K,
                      y2: K,
                      lineWidth: y,
                      dash: e,
                      lineColor: O
                    }, !1, n(c), null, v), A = null, O = null, D = null, E = null, T = null);
                  }
                  s && l.context().moveDown(y);
                }
              }, h.prototype.drawVerticalLine = function(u, l, c, s, v, y, x) {
                var e = this.layout.vLineWidth(s, this.tableNode);
                if (e !== 0) {
                  var b = this.layout.vLineStyle(s, this.tableNode), A;
                  b && b.dash && (A = b.dash);
                  var P = this.tableNode.table.body, D, E, T;
                  if (s > 0 && (D = P[y][x], D && D.borderColor && (D.border ? D.border[2] : this.layout.defaultBorder) && (T = D.borderColor[2])), T == null && s < P.length && (E = P[y][s], E && E.borderColor && (E.border ? E.border[0] : this.layout.defaultBorder) && (T = E.borderColor[0])), T == null && D && D._rowSpanCurrentOffset) {
                    var C = P[y - D._rowSpanCurrentOffset][x];
                    C.borderColor && (C.border ? C.border[2] : this.layout.defaultBorder) && (T = C.borderColor[2]);
                  }
                  if (T == null && E && E._rowSpanCurrentOffset) {
                    var F = P[y - E._rowSpanCurrentOffset][s];
                    F.borderColor && (F.border ? F.border[2] : this.layout.defaultBorder) && (T = F.borderColor[2]);
                  }
                  T == null && (T = r(this.layout.vLineColor) ? this.layout.vLineColor(s, this.tableNode, y) : this.layout.vLineColor), v.addVector({
                    type: "line",
                    x1: u + e / 2,
                    x2: u + e / 2,
                    y1: l,
                    y2: c,
                    lineWidth: e,
                    dash: A,
                    lineColor: T
                  }, !1, !0), D = null, E = null, T = null;
                }
              }, h.prototype.endTable = function(u) {
                this.cleanUpRepeatables && u.popFromRepeatables();
              }, h.prototype.endRow = function(u, l, c) {
                var s, v, y = this;
                l.tracker.stopTracking("pageChanged", this.rowCallback), l.context().moveDown(this.layout.paddingBottom(u, this.tableNode)), l.context().availableHeight += this.reservedAtBottom;
                var x = l.context().page, e = l.context().y, b = k(), A = [], P = c && c.length > 0, D = this.tableNode.table.body;
                if (A.push({
                  y0: this.rowTopY,
                  page: P ? c[0].prevPage : x
                }), P)
                  for (v = 0, s = c.length; v < s; v++) {
                    var E = c[v];
                    A[A.length - 1].y1 = E.prevY, A.push({ y0: E.y, page: E.prevPage + 1 });
                  }
                A[A.length - 1].y1 = e;
                var T = A[0].y1 - A[0].y0 === this.rowPaddingTop;
                if (u === 0 && !T && !this.rowsWithoutPageBreak && !this.dontBreakRows) {
                  var C = null;
                  c && c.length > 0 && (C = c[0].prevPage), this.drawHorizontalLine(0, l, this._tableTopBorderY, !1, C);
                }
                for (var F = T ? 1 : 0, m = A.length; F < m; F++) {
                  var I = F < A.length - 1, O = F > 0 && !this.headerRows, M = O ? 0 : this.topLineWidth, N = A[F].y0, G = A[F].y1;
                  for (I && (G = G + this.rowPaddingBottom), l.context().page != A[F].page && (l.context().page = A[F].page, this.reservedAtBottom = 0), I && this.layout.hLineWhenBroken !== !1 && this.drawHorizontalLine(u + 1, l, G), O && this.layout.hLineWhenBroken !== !1 && this.drawHorizontalLine(u, l, N), v = 0, s = b.length; v < s; v++) {
                    var ot = !1, K = !1, nt = b[v].index;
                    if (nt < D[u].length) {
                      var xt = D[u][nt];
                      ot = xt.border ? xt.border[0] : this.layout.defaultBorder, K = xt.border ? xt.border[2] : this.layout.defaultBorder;
                    }
                    if (nt > 0 && !ot) {
                      var xt = D[u][nt - 1];
                      ot = xt.border ? xt.border[2] : this.layout.defaultBorder;
                    }
                    if (nt + 1 < D[u].length && !K) {
                      var xt = D[u][nt + 1];
                      K = xt.border ? xt.border[0] : this.layout.defaultBorder;
                    }
                    if (ot && this.drawVerticalLine(b[v].x, N - M, G + this.bottomLineWidth, b[v].index, l, u, b[v - 1] ? b[v - 1].index : null), v < s - 1) {
                      var bt = D[u][nt].fillColor, St = D[u][nt].fillOpacity;
                      bt || (bt = r(this.layout.fillColor) ? this.layout.fillColor(u, this.tableNode, nt) : this.layout.fillColor), n(St) || (St = r(this.layout.fillOpacity) ? this.layout.fillOpacity(u, this.tableNode, nt) : this.layout.fillOpacity);
                      var Dt = D[u][nt].overlayPattern, Lt = D[u][nt].overlayOpacity;
                      if (bt || Dt) {
                        var jt = ot ? this.layout.vLineWidth(nt, this.tableNode) : 0, J;
                        (nt === 0 || nt + 1 == D[u].length) && !K ? J = this.layout.vLineWidth(nt + 1, this.tableNode) : K ? J = this.layout.vLineWidth(nt + 1, this.tableNode) / 2 : J = 0;
                        var yt = this.dontBreakRows ? b[v].x + jt : b[v].x + jt / 2, ut = this.dontBreakRows ? N : N - M / 2, st = b[v + 1].x + J, wt = this.dontBreakRows ? G + this.bottomLineWidth : G + this.bottomLineWidth / 2, V = st - yt, Ft = wt - ut;
                        bt && l.addVector({
                          type: "rect",
                          x: yt,
                          y: ut,
                          w: V,
                          h: Ft,
                          lineWidth: 0,
                          color: bt,
                          fillOpacity: St,
                          // mark if we are in an unbreakable block
                          _isFillColorFromUnbreakable: !!l.transactionLevel
                        }, !1, !0, l.context().backgroundLength[l.context().page]), Dt && l.addVector({
                          type: "rect",
                          x: yt,
                          y: ut,
                          w: V,
                          h: Ft,
                          lineWidth: 0,
                          color: Dt,
                          fillOpacity: Lt
                        }, !1, !0);
                      }
                    }
                  }
                }
                l.context().page = x, l.context().y = e;
                var U = this.tableNode.table.body[u];
                for (v = 0, s = U.length; v < s; v++) {
                  if (U[v].rowSpan) {
                    if (this.rowSpanData[v].rowSpan = U[v].rowSpan, U[v].colSpan && U[v].colSpan > 1)
                      for (var S = 1; S < U[v].rowSpan; S++)
                        this.tableNode.table.body[u + S][v]._colSpan = U[v].colSpan;
                    if (U[v].rowSpan && U[v].rowSpan > 1)
                      for (var S = 1; S < U[v].rowSpan; S++)
                        this.tableNode.table.body[u + S][v]._rowSpanCurrentOffset = S;
                  }
                  this.rowSpanData[v].rowSpan > 0 && this.rowSpanData[v].rowSpan--;
                }
                this.drawHorizontalLine(u + 1, l), this.headerRows && u === this.headerRows - 1 && (this.headerRepeatable = l.currentBlockToRepeatable()), this.dontBreakRows && l.tracker.auto(
                  "pageChanged",
                  function() {
                    u > 0 && !y.headerRows && y.layout.hLineWhenBroken !== !1 && y.drawHorizontalLine(u, l);
                  },
                  function() {
                    l.commitUnbreakableBlock();
                  }
                ), this.headerRepeatable && (u === this.rowsWithoutPageBreak - 1 || u === this.tableNode.table.body.length - 1) && (l.commitUnbreakableBlock(), l.pushToRepeatables(this.headerRepeatable), this.cleanUpRepeatables = !0, this.headerRepeatable = null);
                function k() {
                  for (var H = [], it = 0, et = 0, tt = y.tableNode.table.body[u].length; et < tt; et++) {
                    if (!it) {
                      H.push({ x: y.rowSpanData[et].left, index: et });
                      var Ct = y.tableNode.table.body[u][et];
                      it = Ct._colSpan || Ct.colSpan || 0;
                    }
                    it > 0 && it--;
                  }
                  return H.push({ x: y.rowSpanData[y.rowSpanData.length - 1].left, index: y.rowSpanData.length - 1 }), H;
                }
              }, f.exports = h;
            }
          ),
          /***/
          84786: (
            /***/
            function(f, d, t) {
              var i = t(91867).isArray, r = t(91867).isPattern, n = t(91867).getPattern;
              function o(c) {
                for (var s = [], v = null, y = 0, x = c.inlines.length; y < x; y++) {
                  var e = c.inlines[y], b = e.decoration;
                  if (!b) {
                    v = null;
                    continue;
                  }
                  i(b) || (b = [b]);
                  for (var A = e.decorationColor || e.color || "black", P = e.decorationStyle || "solid", D = 0, E = b.length; D < E; D++) {
                    var T = b[D];
                    !v || T !== v.decoration || P !== v.decorationStyle || A !== v.decorationColor ? (v = {
                      line: c,
                      decoration: T,
                      decorationColor: A,
                      decorationStyle: P,
                      inlines: [e]
                    }, s.push(v)) : v.inlines.push(e);
                  }
                }
                return s;
              }
              function h(c, s, v, y) {
                function x() {
                  for (var Dt = 0, Lt = 0, jt = c.inlines.length; Lt < jt; Lt++) {
                    var J = c.inlines[Lt];
                    Dt = J.fontSize > Dt ? Lt : Dt;
                  }
                  return c.inlines[Dt];
                }
                function e() {
                  for (var Dt = 0, Lt = 0, jt = c.inlines.length; Lt < jt; Lt++) {
                    var J = c.inlines[Lt].justifyShift || 0;
                    Dt += c.inlines[Lt].width + J;
                  }
                  return Dt;
                }
                var b = c.inlines[0], A = x(), P = e(), D = c.line.getAscenderHeight(), E = A.font.ascender / 1e3 * A.fontSize, T = A.height, C = T - E, F = 0.5 + Math.floor(Math.max(A.fontSize - 8, 0) / 2) * 0.12;
                switch (c.decoration) {
                  case "underline":
                    v += D + C * 0.45;
                    break;
                  case "overline":
                    v += D - E * 0.85;
                    break;
                  case "lineThrough":
                    v += D - E * 0.25;
                    break;
                  default:
                    throw "Unknown decoration : " + c.decoration;
                }
                if (y.save(), c.decorationStyle === "double") {
                  var m = Math.max(0.5, F * 2);
                  y.fillColor(c.decorationColor).rect(s + b.x, v - F / 2, P, F / 2).fill().rect(s + b.x, v + m - F / 2, P, F / 2).fill();
                } else if (c.decorationStyle === "dashed") {
                  var I = Math.ceil(P / 6.8), O = s + b.x;
                  y.rect(O, v, P, F).clip(), y.fillColor(c.decorationColor);
                  for (var M = 0; M < I; M++)
                    y.rect(O, v - F / 2, 3.96, F).fill(), O += 6.8;
                } else if (c.decorationStyle === "dotted") {
                  var N = Math.ceil(P / (F * 3)), G = s + b.x;
                  y.rect(G, v, P, F).clip(), y.fillColor(c.decorationColor);
                  for (var ot = 0; ot < N; ot++)
                    y.rect(G, v - F / 2, F, F).fill(), G += F * 3;
                } else if (c.decorationStyle === "wavy") {
                  var K = 0.7, nt = 1, xt = Math.ceil(P / (K * 2)) + 1, bt = s + b.x - 1;
                  y.rect(s + b.x, v - nt, P, v + nt).clip(), y.lineWidth(0.24), y.moveTo(bt, v);
                  for (var St = 0; St < xt; St++)
                    y.bezierCurveTo(bt + K, v - nt, bt + K * 2, v - nt, bt + K * 3, v).bezierCurveTo(bt + K * 4, v + nt, bt + K * 5, v + nt, bt + K * 6, v), bt += K * 6;
                  y.stroke(c.decorationColor);
                } else
                  y.fillColor(c.decorationColor).rect(s + b.x, v - F / 2, P, F).fill();
                y.restore();
              }
              function u(c, s, v, y) {
                for (var x = o(c), e = 0, b = x.length; e < b; e++)
                  h(x[e], s, v, y);
              }
              function l(c, s, v, y, x) {
                for (var e = c.getHeight(), b = 0, A = c.inlines.length; b < A; b++) {
                  var P = c.inlines[b];
                  if (P.background) {
                    var D = P.background;
                    r(P.background) && (D = n(P.background, y));
                    var E = P.justifyShift || 0;
                    x.fillColor(D).rect(s + P.x - E, v, P.width + E, e).fill();
                  }
                }
              }
              f.exports = {
                drawBackground: l,
                drawDecorations: u
              };
            }
          ),
          /***/
          11548: (
            /***/
            function(f, d, t) {
              var i = t(91867).isString, r = t(91867).isNumber, n = t(91867).isObject, o = t(91867).isArray, h = t(91867).isUndefined, u = t(5417), l = /^(\s)+/g, c = /(\s)+$/g;
              function s(D) {
                this.fontProvider = D;
              }
              s.prototype.buildInlines = function(D, E) {
                var T = A(this.fontProvider, D, E), C = 0, F = 0, m;
                return T.forEach(function(O) {
                  C = Math.max(C, O.width - O.leadingCut - O.trailingCut), m || (m = { width: 0, leadingCut: O.leadingCut, trailingCut: 0 }), m.width += O.width, m.trailingCut = O.trailingCut, F = Math.max(F, I(m)), O.lineEnd && (m = null);
                }), b({}, E, "noWrap", !1) && (C = F), {
                  items: T,
                  minWidth: C,
                  maxWidth: F
                };
                function I(O) {
                  return Math.max(0, O.width - O.leadingCut - O.trailingCut);
                }
              }, s.prototype.sizeOfString = function(D, E) {
                D = D ? D.toString().replace(/\t/g, "    ") : "";
                var T = b({}, E, "font", "Roboto"), C = b({}, E, "fontSize", 12), F = b({}, E, "fontFeatures", null), m = b({}, E, "bold", !1), I = b({}, E, "italics", !1), O = b({}, E, "lineHeight", 1), M = b({}, E, "characterSpacing", 0), N = this.fontProvider.provideFont(T, m, I);
                return {
                  width: P(D, N, C, M, F),
                  height: N.lineHeight(C) * O,
                  fontSize: C,
                  lineHeight: O,
                  ascender: N.ascender / 1e3 * C,
                  descender: N.descender / 1e3 * C
                };
              }, s.prototype.sizeOfRotatedText = function(D, E, T) {
                var C = E * Math.PI / -180, F = this.sizeOfString(D, T);
                return {
                  width: Math.abs(F.height * Math.sin(C)) + Math.abs(F.width * Math.cos(C)),
                  height: Math.abs(F.width * Math.sin(C)) + Math.abs(F.height * Math.cos(C))
                };
              }, s.prototype.widthOfString = function(D, E, T, C, F) {
                return P(D, E, T, C, F);
              };
              function v(D, E) {
                var T = [];
                if (D = D.replace(/\t/g, "    "), E)
                  return T.push({ text: D }), T;
                for (var C = new u(D), F = 0, m; m = C.nextBreak(); ) {
                  var I = D.slice(F, m.position);
                  m.required || I.match(/\r?\n$|\r$/) ? (I = I.replace(/\r?\n$|\r$/, ""), T.push({ text: I, lineEnd: !0 })) : T.push({ text: I }), F = m.position;
                }
                return T;
              }
              function y(D, E) {
                E = E || {}, D = D || {};
                for (var T in D)
                  T != "text" && D.hasOwnProperty(T) && (E[T] = D[T]);
                return E;
              }
              function x(D, E) {
                function T(Dt) {
                  return Dt.reduce(function(Lt, jt) {
                    var J = o(jt.text) ? T(jt.text) : jt, yt = [].concat(J).some(Array.isArray);
                    return Lt.concat(yt ? T(J) : J);
                  }, []);
                }
                function C(Dt, Lt, jt) {
                  if (h(Lt[Dt]) || Lt[Dt].lineEnd)
                    return null;
                  var J = Lt[Dt].text;
                  if (jt) {
                    var yt = v(e(J), !1);
                    if (h(yt[yt.length - 1]))
                      return null;
                    J = yt[yt.length - 1].text;
                  }
                  return J;
                }
                var F = [];
                o(D) || (D = [D]), D = T(D);
                for (var m = null, I = 0, O = D.length; I < O; I++) {
                  var M = D[I], N = null, G, ot = b(M || {}, E, "noWrap", !1);
                  if (n(M) ? (M._textRef && M._textRef._textNodeRef.text && (M.text = M._textRef._textNodeRef.text), G = v(e(M.text), ot), N = y(M)) : G = v(e(M), ot), m && G.length) {
                    var K = C(0, G, ot), nt = v(e(m + K), !1);
                    nt.length === 1 && (F[F.length - 1].noNewLine = !0);
                  }
                  for (var xt = 0, bt = G.length; xt < bt; xt++) {
                    var St = {
                      text: G[xt].text
                    };
                    G[xt].lineEnd && (St.lineEnd = !0), y(N, St), F.push(St);
                  }
                  m = null, I + 1 < O && (m = C(G.length - 1, G, ot));
                }
                return F;
              }
              function e(D) {
                return D == null ? "" : r(D) ? D.toString() : i(D) ? D : D.toString();
              }
              function b(D, E, T, C) {
                var F;
                return D[T] !== void 0 && D[T] !== null ? D[T] : E ? (E.auto(D, function() {
                  F = E.getProperty(T);
                }), F != null ? F : C) : C;
              }
              function A(D, E, T) {
                var C = x(E, T);
                if (C.length) {
                  var F = b(C[0], T, "leadingIndent", 0);
                  F && (C[0].leadingCut = -F, C[0].leadingIndent = F);
                }
                return C.forEach(function(m) {
                  var I = b(m, T, "font", "Roboto"), O = b(m, T, "fontSize", 12), M = b(m, T, "fontFeatures", null), N = b(m, T, "bold", !1), G = b(m, T, "italics", !1), ot = b(m, T, "color", "black"), K = b(m, T, "decoration", null), nt = b(m, T, "decorationColor", null), xt = b(m, T, "decorationStyle", null), bt = b(m, T, "background", null), St = b(m, T, "lineHeight", 1), Dt = b(m, T, "characterSpacing", 0), Lt = b(m, T, "link", null), jt = b(m, T, "linkToPage", null), J = b(m, T, "linkToDestination", null), yt = b(m, T, "noWrap", null), ut = b(m, T, "preserveLeadingSpaces", !1), st = b(m, T, "preserveTrailingSpaces", !1), wt = b(m, T, "opacity", 1), V = b(m, T, "sup", !1), Ft = b(m, T, "sub", !1);
                  (V || Ft) && m.fontSize === void 0 && (O *= 0.58);
                  var U = D.provideFont(I, N, G);
                  m.width = P(m.text, U, O, Dt, M), m.height = U.lineHeight(O) * St, m.leadingCut || (m.leadingCut = 0);
                  var S;
                  !ut && (S = m.text.match(l)) && (m.leadingCut += P(S[0], U, O, Dt, M));
                  var k;
                  !st && (k = m.text.match(c)) ? m.trailingCut = P(k[0], U, O, Dt, M) : m.trailingCut = 0, m.alignment = b(m, T, "alignment", "left"), m.font = U, m.fontSize = O, m.fontFeatures = M, m.characterSpacing = Dt, m.color = ot, m.decoration = K, m.decorationColor = nt, m.decorationStyle = xt, m.background = bt, m.link = Lt, m.linkToPage = jt, m.linkToDestination = J, m.noWrap = yt, m.opacity = wt, m.sup = V, m.sub = Ft;
                }), C;
              }
              function P(D, E, T, C, F) {
                return E.widthOfString(D, T, F) + (C || 0) * (D.length - 1);
              }
              f.exports = s;
            }
          ),
          /***/
          2318: (
            /***/
            function(f) {
              function d() {
                this.events = {};
              }
              d.prototype.startTracking = function(t, i) {
                var r = this.events[t] || (this.events[t] = []);
                r.indexOf(i) < 0 && r.push(i);
              }, d.prototype.stopTracking = function(t, i) {
                var r = this.events[t];
                if (r) {
                  var n = r.indexOf(i);
                  n >= 0 && r.splice(n, 1);
                }
              }, d.prototype.emit = function(t) {
                var i = Array.prototype.slice.call(arguments, 1), r = this.events[t];
                r && r.forEach(function(n) {
                  n.apply(this, i);
                });
              }, d.prototype.auto = function(t, i, r) {
                this.startTracking(t, i), r(), this.stopTracking(t, i);
              }, f.exports = d;
            }
          ),
          /***/
          3502: (
            /***/
            function(f, d, t) {
              var i, r, n;
              (function(o, h) {
                r = [], i = h, n = typeof i == "function" ? i.apply(d, r) : i, n !== void 0 && (f.exports = n);
              })(this, function() {
                function o(y, x) {
                  return typeof x == "undefined" ? x = { autoBom: !1 } : typeof x != "object" && (console.warn("Deprecated: Expected third argument to be a object"), x = { autoBom: !x }), x.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(y.type) ? new Blob(["\uFEFF", y], { type: y.type }) : y;
                }
                function h(y, x, e) {
                  var b = new XMLHttpRequest();
                  b.open("GET", y), b.responseType = "blob", b.onload = function() {
                    v(b.response, x, e);
                  }, b.onerror = function() {
                    console.error("could not download file");
                  }, b.send();
                }
                function u(y) {
                  var x = new XMLHttpRequest();
                  x.open("HEAD", y, !1);
                  try {
                    x.send();
                  } catch (e) {
                  }
                  return 200 <= x.status && 299 >= x.status;
                }
                function l(y) {
                  try {
                    y.dispatchEvent(new MouseEvent("click"));
                  } catch (e) {
                    var x = document.createEvent("MouseEvents");
                    x.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), y.dispatchEvent(x);
                  }
                }
                var c = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof t.g == "object" && t.g.global === t.g ? t.g : void 0, s = c.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), v = c.saveAs || (typeof window != "object" || window !== c ? function() {
                } : typeof HTMLAnchorElement != "undefined" && "download" in HTMLAnchorElement.prototype && !s ? function(y, x, e) {
                  var b = c.URL || c.webkitURL, A = document.createElement("a");
                  x = x || y.name || "download", A.download = x, A.rel = "noopener", typeof y == "string" ? (A.href = y, A.origin === location.origin ? l(A) : u(A.href) ? h(y, x, e) : l(A, A.target = "_blank")) : (A.href = b.createObjectURL(y), setTimeout(function() {
                    b.revokeObjectURL(A.href);
                  }, 4e4), setTimeout(function() {
                    l(A);
                  }, 0));
                } : "msSaveOrOpenBlob" in navigator ? function(y, x, e) {
                  if (x = x || y.name || "download", typeof y != "string")
                    navigator.msSaveOrOpenBlob(o(y, e), x);
                  else if (u(y))
                    h(y, x, e);
                  else {
                    var b = document.createElement("a");
                    b.href = y, b.target = "_blank", setTimeout(function() {
                      l(b);
                    });
                  }
                } : function(y, x, e, b) {
                  if (b = b || open("", "_blank"), b && (b.document.title = b.document.body.innerText = "downloading..."), typeof y == "string")
                    return h(y, x, e);
                  var A = y.type === "application/octet-stream", P = /constructor/i.test(c.HTMLElement) || c.safari, D = /CriOS\/[\d]+/.test(navigator.userAgent);
                  if ((D || A && P || s) && typeof FileReader != "undefined") {
                    var E = new FileReader();
                    E.onloadend = function() {
                      var F = E.result;
                      F = D ? F : F.replace(/^data:[^;]*;/, "data:attachment/file;"), b ? b.location.href = F : location = F, b = null;
                    }, E.readAsDataURL(y);
                  } else {
                    var T = c.URL || c.webkitURL, C = T.createObjectURL(y);
                    b ? b.location = C : location.href = C, b = null, setTimeout(function() {
                      T.revokeObjectURL(C);
                    }, 4e4);
                  }
                });
                c.saveAs = v.saveAs = v, f.exports = v;
              });
            }
          ),
          /***/
          10740: (
            /***/
            function(f, d, t) {
              var i = t(14598).Buffer;
              t(65292), t(73844), t(69330), t(5597), t(7585), t(39081), t(41584), t(11765), t(81755), t(94845), t(80055), t(20731), t(45337), t(23913), t(8953), t(24863), t(18828), t(7283), t(58549), t(18756), t(75174), t(57444), t(37309), t(14032), t(68067), t(61726), t(74516), t(57114), t(76014), t(65578), t(58281), t(6422), t(28264), t(72095), t(75626), t(47969), t(73663), t(29883), t(35471), t(21012), t(88997), t(97464), t(2857), t(94715), t(13624), t(91132), t(62514), t(24597), t(88042), t(4660), t(92451), t(44206), t(66288), t(13250), t(3858), t(84538), t(64793), t(74202), t(52529), t(42437), t(94712);
              var r;
              function n(lt, X) {
                for (var at = 0; at < X.length; at++) {
                  var R = X[at];
                  R.enumerable = R.enumerable || !1, R.configurable = !0, "value" in R && (R.writable = !0), Object.defineProperty(lt, h(R.key), R);
                }
              }
              function o(lt, X, at) {
                return X && n(lt.prototype, X), at && n(lt, at), Object.defineProperty(lt, "prototype", { writable: !1 }), lt;
              }
              function h(lt) {
                var X = u(lt, "string");
                return typeof X == "symbol" ? X : X + "";
              }
              function u(lt, X) {
                if (typeof lt != "object" || !lt)
                  return lt;
                var at = lt[Symbol.toPrimitive];
                if (at !== void 0) {
                  var R = at.call(lt, X || "default");
                  if (typeof R != "object")
                    return R;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (X === "string" ? String : Number)(lt);
              }
              function l(lt, X) {
                lt.prototype = Object.create(X.prototype), lt.prototype.constructor = lt, c(lt, X);
              }
              function c(lt, X) {
                return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(at, R) {
                  return at.__proto__ = R, at;
                }, c(lt, X);
              }
              function s(lt, X) {
                var at = typeof Symbol != "undefined" && lt[Symbol.iterator] || lt["@@iterator"];
                if (at)
                  return (at = at.call(lt)).next.bind(at);
                if (Array.isArray(lt) || (at = v(lt)) || X && lt && typeof lt.length == "number") {
                  at && (lt = at);
                  var R = 0;
                  return function() {
                    return R >= lt.length ? { done: !0 } : { done: !1, value: lt[R++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function v(lt, X) {
                if (lt) {
                  if (typeof lt == "string")
                    return y(lt, X);
                  var at = {}.toString.call(lt).slice(8, -1);
                  return at === "Object" && lt.constructor && (at = lt.constructor.name), at === "Map" || at === "Set" ? Array.from(lt) : at === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(at) ? y(lt, X) : void 0;
                }
              }
              function y(lt, X) {
                (X == null || X > lt.length) && (X = lt.length);
                for (var at = 0, R = Array(X); at < X; at++)
                  R[at] = lt[at];
                return R;
              }
              function x(lt) {
                return lt && typeof lt == "object" && "default" in lt ? lt.default : lt;
              }
              var e = x(t(62420)), b = t(18128), A = x(t(45728)), P = x(t(24766)), D = x(t(59006)), E = x(t(18645)), T = x(t(41613)), C = x(t(3483)), F = x(t(34460)), m = t(48181), I = {};
              I.logErrors = !1;
              var O = [];
              I.registerFormat = function(lt) {
                O.push(lt);
              }, I.openSync = function(lt, X) {
                var at = m.readFileSync(lt);
                return I.create(at, X);
              }, I.open = function(lt, X, at) {
                typeof X == "function" && (at = X, X = null), m.readFile(lt, function(R, z) {
                  if (R)
                    return at(R);
                  try {
                    var j = I.create(z, X);
                  } catch (ft) {
                    return at(ft);
                  }
                  return at(null, j);
                });
              }, I.create = function(lt, X) {
                for (var at = 0; at < O.length; at++) {
                  var R = O[at];
                  if (R.probe(lt)) {
                    var z = new R(new e.DecodeStream(lt));
                    return X ? z.getFont(X) : z;
                  }
                }
                throw new Error("Unknown font format");
              }, I.defaultLanguage = "en", I.setDefaultLanguage = function(lt) {
                lt === void 0 && (lt = "en"), I.defaultLanguage = lt;
              };
              function M(lt, X, at) {
                return X in lt ? Object.defineProperty(lt, X, {
                  value: at,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : lt[X] = at, lt;
              }
              function N(lt, X, at, R, z) {
                var j = {};
                return Object.keys(R).forEach(function(ft) {
                  j[ft] = R[ft];
                }), j.enumerable = !!j.enumerable, j.configurable = !!j.configurable, ("value" in j || j.initializer) && (j.writable = !0), j = at.slice().reverse().reduce(function(ft, mt) {
                  return mt(lt, X, ft) || ft;
                }, j), z && j.initializer !== void 0 && (j.value = j.initializer ? j.initializer.call(z) : void 0, j.initializer = void 0), j.initializer === void 0 && (Object.defineProperty(lt, X, j), j = null), j;
              }
              function G(lt, X, at) {
                if (at.get) {
                  var R = at.get;
                  at.get = function() {
                    var j = R.call(this);
                    return Object.defineProperty(this, X, {
                      value: j
                    }), j;
                  };
                } else if (typeof at.value == "function") {
                  var z = at.value;
                  return {
                    get: function() {
                      var ft = /* @__PURE__ */ new Map();
                      function mt() {
                        for (var pt = arguments.length, dt = new Array(pt), Nt = 0; Nt < pt; Nt++)
                          dt[Nt] = arguments[Nt];
                        var Yt = dt.length > 0 ? dt[0] : "value";
                        if (ft.has(Yt))
                          return ft.get(Yt);
                        var se = z.apply(this, dt);
                        return ft.set(Yt, se), se;
                      }
                      return Object.defineProperty(this, X, {
                        value: mt
                      }), mt;
                    }
                  };
                }
              }
              var ot = new e.Struct({
                firstCode: e.uint16,
                entryCount: e.uint16,
                idDelta: e.int16,
                idRangeOffset: e.uint16
              }), K = new e.Struct({
                startCharCode: e.uint32,
                endCharCode: e.uint32,
                glyphID: e.uint32
              }), nt = new e.Struct({
                startUnicodeValue: e.uint24,
                additionalCount: e.uint8
              }), xt = new e.Struct({
                unicodeValue: e.uint24,
                glyphID: e.uint16
              }), bt = new e.Array(nt, e.uint32), St = new e.Array(xt, e.uint32), Dt = new e.Struct({
                varSelector: e.uint24,
                defaultUVS: new e.Pointer(e.uint32, bt, {
                  type: "parent"
                }),
                nonDefaultUVS: new e.Pointer(e.uint32, St, {
                  type: "parent"
                })
              }), Lt = new e.VersionedStruct(e.uint16, {
                0: {
                  // Byte encoding
                  length: e.uint16,
                  // Total table length in bytes (set to 262 for format 0)
                  language: e.uint16,
                  // Language code for this encoding subtable, or zero if language-independent
                  codeMap: new e.LazyArray(e.uint8, 256)
                },
                2: {
                  // High-byte mapping (CJK)
                  length: e.uint16,
                  language: e.uint16,
                  subHeaderKeys: new e.Array(e.uint16, 256),
                  subHeaderCount: function(X) {
                    return Math.max.apply(Math, X.subHeaderKeys);
                  },
                  subHeaders: new e.LazyArray(ot, "subHeaderCount"),
                  glyphIndexArray: new e.LazyArray(e.uint16, "subHeaderCount")
                },
                4: {
                  // Segment mapping to delta values
                  length: e.uint16,
                  // Total table length in bytes
                  language: e.uint16,
                  // Language code
                  segCountX2: e.uint16,
                  segCount: function(X) {
                    return X.segCountX2 >> 1;
                  },
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16,
                  endCode: new e.LazyArray(e.uint16, "segCount"),
                  reservedPad: new e.Reserved(e.uint16),
                  // This value should be zero
                  startCode: new e.LazyArray(e.uint16, "segCount"),
                  idDelta: new e.LazyArray(e.int16, "segCount"),
                  idRangeOffset: new e.LazyArray(e.uint16, "segCount"),
                  glyphIndexArray: new e.LazyArray(e.uint16, function(lt) {
                    return (lt.length - lt._currentOffset) / 2;
                  })
                },
                6: {
                  // Trimmed table
                  length: e.uint16,
                  language: e.uint16,
                  firstCode: e.uint16,
                  entryCount: e.uint16,
                  glyphIndices: new e.LazyArray(e.uint16, "entryCount")
                },
                8: {
                  // mixed 16-bit and 32-bit coverage
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint16,
                  is32: new e.LazyArray(e.uint8, 8192),
                  nGroups: e.uint32,
                  groups: new e.LazyArray(K, "nGroups")
                },
                10: {
                  // Trimmed Array
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  firstCode: e.uint32,
                  entryCount: e.uint32,
                  glyphIndices: new e.LazyArray(e.uint16, "numChars")
                },
                12: {
                  // Segmented coverage
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  nGroups: e.uint32,
                  groups: new e.LazyArray(K, "nGroups")
                },
                13: {
                  // Many-to-one range mappings (same as 12 except for group.startGlyphID)
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  nGroups: e.uint32,
                  groups: new e.LazyArray(K, "nGroups")
                },
                14: {
                  // Unicode Variation Sequences
                  length: e.uint32,
                  numRecords: e.uint32,
                  varSelectors: new e.LazyArray(Dt, "numRecords")
                }
              }), jt = new e.Struct({
                platformID: e.uint16,
                // Platform identifier
                encodingID: e.uint16,
                // Platform-specific encoding identifier
                table: new e.Pointer(e.uint32, Lt, {
                  type: "parent",
                  lazy: !0
                })
              }), J = new e.Struct({
                version: e.uint16,
                numSubtables: e.uint16,
                tables: new e.Array(jt, "numSubtables")
              }), yt = new e.Struct({
                version: e.int32,
                // 0x00010000 (version 1.0)
                revision: e.int32,
                // set by font manufacturer
                checkSumAdjustment: e.uint32,
                magicNumber: e.uint32,
                // set to 0x5F0F3CF5
                flags: e.uint16,
                unitsPerEm: e.uint16,
                // range from 64 to 16384
                created: new e.Array(e.int32, 2),
                modified: new e.Array(e.int32, 2),
                xMin: e.int16,
                // for all glyph bounding boxes
                yMin: e.int16,
                // for all glyph bounding boxes
                xMax: e.int16,
                // for all glyph bounding boxes
                yMax: e.int16,
                // for all glyph bounding boxes
                macStyle: new e.Bitfield(e.uint16, ["bold", "italic", "underline", "outline", "shadow", "condensed", "extended"]),
                lowestRecPPEM: e.uint16,
                // smallest readable size in pixels
                fontDirectionHint: e.int16,
                indexToLocFormat: e.int16,
                // 0 for short offsets, 1 for long
                glyphDataFormat: e.int16
                // 0 for current format
              }), ut = new e.Struct({
                version: e.int32,
                ascent: e.int16,
                // Distance from baseline of highest ascender
                descent: e.int16,
                // Distance from baseline of lowest descender
                lineGap: e.int16,
                // Typographic line gap
                advanceWidthMax: e.uint16,
                // Maximum advance width value in 'hmtx' table
                minLeftSideBearing: e.int16,
                // Maximum advance width value in 'hmtx' table
                minRightSideBearing: e.int16,
                // Minimum right sidebearing value
                xMaxExtent: e.int16,
                caretSlopeRise: e.int16,
                // Used to calculate the slope of the cursor (rise/run); 1 for vertical
                caretSlopeRun: e.int16,
                // 0 for vertical
                caretOffset: e.int16,
                // Set to 0 for non-slanted fonts
                reserved: new e.Reserved(e.int16, 4),
                metricDataFormat: e.int16,
                // 0 for current format
                numberOfMetrics: e.uint16
                // Number of advance widths in 'hmtx' table
              }), st = new e.Struct({
                advance: e.uint16,
                bearing: e.int16
              }), wt = new e.Struct({
                metrics: new e.LazyArray(st, function(lt) {
                  return lt.parent.hhea.numberOfMetrics;
                }),
                bearings: new e.LazyArray(e.int16, function(lt) {
                  return lt.parent.maxp.numGlyphs - lt.parent.hhea.numberOfMetrics;
                })
              }), V = new e.Struct({
                version: e.int32,
                numGlyphs: e.uint16,
                // The number of glyphs in the font
                maxPoints: e.uint16,
                // Maximum points in a non-composite glyph
                maxContours: e.uint16,
                // Maximum contours in a non-composite glyph
                maxComponentPoints: e.uint16,
                // Maximum points in a composite glyph
                maxComponentContours: e.uint16,
                // Maximum contours in a composite glyph
                maxZones: e.uint16,
                // 1 if instructions do not use the twilight zone, 2 otherwise
                maxTwilightPoints: e.uint16,
                // Maximum points used in Z0
                maxStorage: e.uint16,
                // Number of Storage Area locations
                maxFunctionDefs: e.uint16,
                // Number of FDEFs
                maxInstructionDefs: e.uint16,
                // Number of IDEFs
                maxStackElements: e.uint16,
                // Maximum stack depth
                maxSizeOfInstructions: e.uint16,
                // Maximum byte count for glyph instructions
                maxComponentElements: e.uint16,
                // Maximum number of components referenced at âtop levelâ for any composite glyph
                maxComponentDepth: e.uint16
                // Maximum levels of recursion; 1 for simple components
              });
              function Ft(lt, X, at) {
                return at === void 0 && (at = 0), lt === 1 && S[at] ? S[at] : U[lt][X];
              }
              var U = [
                // unicode
                ["utf16be", "utf16be", "utf16be", "utf16be", "utf16be", "utf16be"],
                // macintosh
                // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/
                // 0	Roman                 17	Malayalam
                // 1	Japanese	            18	Sinhalese
                // 2	Traditional Chinese	  19	Burmese
                // 3	Korean	              20	Khmer
                // 4	Arabic	              21	Thai
                // 5	Hebrew	              22	Laotian
                // 6	Greek	                23	Georgian
                // 7	Russian	              24	Armenian
                // 8	RSymbol	              25	Simplified Chinese
                // 9	Devanagari	          26	Tibetan
                // 10	Gurmukhi	            27	Mongolian
                // 11	Gujarati	            28	Geez
                // 12	Oriya	                29	Slavic
                // 13	Bengali	              30	Vietnamese
                // 14	Tamil	                31	Sindhi
                // 15	Telugu	              32	(Uninterpreted)
                // 16	Kannada
                ["macroman", "shift-jis", "big5", "euc-kr", "iso-8859-6", "iso-8859-8", "macgreek", "maccyrillic", "symbol", "Devanagari", "Gurmukhi", "Gujarati", "Oriya", "Bengali", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhalese", "Burmese", "Khmer", "macthai", "Laotian", "Georgian", "Armenian", "gb-2312-80", "Tibetan", "Mongolian", "Geez", "maccenteuro", "Vietnamese", "Sindhi"],
                // ISO (deprecated)
                ["ascii"],
                // windows
                // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx
                ["symbol", "utf16be", "shift-jis", "gb18030", "big5", "wansung", "johab", null, null, null, "utf16be"]
              ], S = {
                15: "maciceland",
                17: "macturkish",
                18: "maccroatian",
                24: "maccenteuro",
                25: "maccenteuro",
                26: "maccenteuro",
                27: "maccenteuro",
                28: "maccenteuro",
                30: "maciceland",
                37: "macromania",
                38: "maccenteuro",
                39: "maccenteuro",
                40: "maccenteuro",
                143: "macinuit",
                // Unsupported by iconv-lite
                146: "macgaelic"
                // Unsupported by iconv-lite
              }, k = [
                // unicode
                [],
                {
                  // macintosh
                  0: "en",
                  30: "fo",
                  60: "ks",
                  90: "rw",
                  1: "fr",
                  31: "fa",
                  61: "ku",
                  91: "rn",
                  2: "de",
                  32: "ru",
                  62: "sd",
                  92: "ny",
                  3: "it",
                  33: "zh",
                  63: "bo",
                  93: "mg",
                  4: "nl",
                  34: "nl-BE",
                  64: "ne",
                  94: "eo",
                  5: "sv",
                  35: "ga",
                  65: "sa",
                  128: "cy",
                  6: "es",
                  36: "sq",
                  66: "mr",
                  129: "eu",
                  7: "da",
                  37: "ro",
                  67: "bn",
                  130: "ca",
                  8: "pt",
                  38: "cz",
                  68: "as",
                  131: "la",
                  9: "no",
                  39: "sk",
                  69: "gu",
                  132: "qu",
                  10: "he",
                  40: "si",
                  70: "pa",
                  133: "gn",
                  11: "ja",
                  41: "yi",
                  71: "or",
                  134: "ay",
                  12: "ar",
                  42: "sr",
                  72: "ml",
                  135: "tt",
                  13: "fi",
                  43: "mk",
                  73: "kn",
                  136: "ug",
                  14: "el",
                  44: "bg",
                  74: "ta",
                  137: "dz",
                  15: "is",
                  45: "uk",
                  75: "te",
                  138: "jv",
                  16: "mt",
                  46: "be",
                  76: "si",
                  139: "su",
                  17: "tr",
                  47: "uz",
                  77: "my",
                  140: "gl",
                  18: "hr",
                  48: "kk",
                  78: "km",
                  141: "af",
                  19: "zh-Hant",
                  49: "az-Cyrl",
                  79: "lo",
                  142: "br",
                  20: "ur",
                  50: "az-Arab",
                  80: "vi",
                  143: "iu",
                  21: "hi",
                  51: "hy",
                  81: "id",
                  144: "gd",
                  22: "th",
                  52: "ka",
                  82: "tl",
                  145: "gv",
                  23: "ko",
                  53: "mo",
                  83: "ms",
                  146: "ga",
                  24: "lt",
                  54: "ky",
                  84: "ms-Arab",
                  147: "to",
                  25: "pl",
                  55: "tg",
                  85: "am",
                  148: "el-polyton",
                  26: "hu",
                  56: "tk",
                  86: "ti",
                  149: "kl",
                  27: "es",
                  57: "mn-CN",
                  87: "om",
                  150: "az",
                  28: "lv",
                  58: "mn",
                  88: "so",
                  151: "nn",
                  29: "se",
                  59: "ps",
                  89: "sw"
                },
                // ISO (deprecated)
                [],
                {
                  // windows                                        
                  1078: "af",
                  16393: "en-IN",
                  1159: "rw",
                  1074: "tn",
                  1052: "sq",
                  6153: "en-IE",
                  1089: "sw",
                  1115: "si",
                  1156: "gsw",
                  8201: "en-JM",
                  1111: "kok",
                  1051: "sk",
                  1118: "am",
                  17417: "en-MY",
                  1042: "ko",
                  1060: "sl",
                  5121: "ar-DZ",
                  5129: "en-NZ",
                  1088: "ky",
                  11274: "es-AR",
                  15361: "ar-BH",
                  13321: "en-PH",
                  1108: "lo",
                  16394: "es-BO",
                  3073: "ar",
                  18441: "en-SG",
                  1062: "lv",
                  13322: "es-CL",
                  2049: "ar-IQ",
                  7177: "en-ZA",
                  1063: "lt",
                  9226: "es-CO",
                  11265: "ar-JO",
                  11273: "en-TT",
                  2094: "dsb",
                  5130: "es-CR",
                  13313: "ar-KW",
                  2057: "en-GB",
                  1134: "lb",
                  7178: "es-DO",
                  12289: "ar-LB",
                  1033: "en",
                  1071: "mk",
                  12298: "es-EC",
                  4097: "ar-LY",
                  12297: "en-ZW",
                  2110: "ms-BN",
                  17418: "es-SV",
                  6145: "ary",
                  1061: "et",
                  1086: "ms",
                  4106: "es-GT",
                  8193: "ar-OM",
                  1080: "fo",
                  1100: "ml",
                  18442: "es-HN",
                  16385: "ar-QA",
                  1124: "fil",
                  1082: "mt",
                  2058: "es-MX",
                  1025: "ar-SA",
                  1035: "fi",
                  1153: "mi",
                  19466: "es-NI",
                  10241: "ar-SY",
                  2060: "fr-BE",
                  1146: "arn",
                  6154: "es-PA",
                  7169: "aeb",
                  3084: "fr-CA",
                  1102: "mr",
                  15370: "es-PY",
                  14337: "ar-AE",
                  1036: "fr",
                  1148: "moh",
                  10250: "es-PE",
                  9217: "ar-YE",
                  5132: "fr-LU",
                  1104: "mn",
                  20490: "es-PR",
                  1067: "hy",
                  6156: "fr-MC",
                  2128: "mn-CN",
                  3082: "es",
                  1101: "as",
                  4108: "fr-CH",
                  1121: "ne",
                  1034: "es",
                  2092: "az-Cyrl",
                  1122: "fy",
                  1044: "nb",
                  21514: "es-US",
                  1068: "az",
                  1110: "gl",
                  2068: "nn",
                  14346: "es-UY",
                  1133: "ba",
                  1079: "ka",
                  1154: "oc",
                  8202: "es-VE",
                  1069: "eu",
                  3079: "de-AT",
                  1096: "or",
                  2077: "sv-FI",
                  1059: "be",
                  1031: "de",
                  1123: "ps",
                  1053: "sv",
                  2117: "bn",
                  5127: "de-LI",
                  1045: "pl",
                  1114: "syr",
                  1093: "bn-IN",
                  4103: "de-LU",
                  1046: "pt",
                  1064: "tg",
                  8218: "bs-Cyrl",
                  2055: "de-CH",
                  2070: "pt-PT",
                  2143: "tzm",
                  5146: "bs",
                  1032: "el",
                  1094: "pa",
                  1097: "ta",
                  1150: "br",
                  1135: "kl",
                  1131: "qu-BO",
                  1092: "tt",
                  1026: "bg",
                  1095: "gu",
                  2155: "qu-EC",
                  1098: "te",
                  1027: "ca",
                  1128: "ha",
                  3179: "qu",
                  1054: "th",
                  3076: "zh-HK",
                  1037: "he",
                  1048: "ro",
                  1105: "bo",
                  5124: "zh-MO",
                  1081: "hi",
                  1047: "rm",
                  1055: "tr",
                  2052: "zh",
                  1038: "hu",
                  1049: "ru",
                  1090: "tk",
                  4100: "zh-SG",
                  1039: "is",
                  9275: "smn",
                  1152: "ug",
                  1028: "zh-TW",
                  1136: "ig",
                  4155: "smj-NO",
                  1058: "uk",
                  1155: "co",
                  1057: "id",
                  5179: "smj",
                  1070: "hsb",
                  1050: "hr",
                  1117: "iu",
                  3131: "se-FI",
                  1056: "ur",
                  4122: "hr-BA",
                  2141: "iu-Latn",
                  1083: "se",
                  2115: "uz-Cyrl",
                  1029: "cs",
                  2108: "ga",
                  2107: "se-SE",
                  1091: "uz",
                  1030: "da",
                  1076: "xh",
                  8251: "sms",
                  1066: "vi",
                  1164: "prs",
                  1077: "zu",
                  6203: "sma-NO",
                  1106: "cy",
                  1125: "dv",
                  1040: "it",
                  7227: "sms",
                  1160: "wo",
                  2067: "nl-BE",
                  2064: "it-CH",
                  1103: "sa",
                  1157: "sah",
                  1043: "nl",
                  1041: "ja",
                  7194: "sr-Cyrl-BA",
                  1144: "ii",
                  3081: "en-AU",
                  1099: "kn",
                  3098: "sr",
                  1130: "yo",
                  10249: "en-BZ",
                  1087: "kk",
                  6170: "sr-Latn-BA",
                  4105: "en-CA",
                  1107: "km",
                  2074: "sr-Latn",
                  9225: "en-029",
                  1158: "quc",
                  1132: "nso"
                }
              ], H = new e.Struct({
                platformID: e.uint16,
                encodingID: e.uint16,
                languageID: e.uint16,
                nameID: e.uint16,
                length: e.uint16,
                string: new e.Pointer(e.uint16, new e.String("length", function(lt) {
                  return Ft(lt.platformID, lt.encodingID, lt.languageID);
                }), {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.parent.stringOffset;
                  },
                  allowNull: !1
                })
              }), it = new e.Struct({
                length: e.uint16,
                tag: new e.Pointer(e.uint16, new e.String("length", "utf16be"), {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.stringOffset;
                  }
                })
              }), et = new e.VersionedStruct(e.uint16, {
                0: {
                  count: e.uint16,
                  stringOffset: e.uint16,
                  records: new e.Array(H, "count")
                },
                1: {
                  count: e.uint16,
                  stringOffset: e.uint16,
                  records: new e.Array(H, "count"),
                  langTagCount: e.uint16,
                  langTags: new e.Array(it, "langTagCount")
                }
              }), tt = [
                "copyright",
                "fontFamily",
                "fontSubfamily",
                "uniqueSubfamily",
                "fullName",
                "version",
                "postscriptName",
                // Note: A font may have only one PostScript name and that name must be ASCII.
                "trademark",
                "manufacturer",
                "designer",
                "description",
                "vendorURL",
                "designerURL",
                "license",
                "licenseURL",
                null,
                // reserved
                "preferredFamily",
                "preferredSubfamily",
                "compatibleFull",
                "sampleText",
                "postscriptCIDFontName",
                "wwsFamilyName",
                "wwsSubfamilyName"
              ];
              et.process = function(lt) {
                for (var X = {}, at = s(this.records), R; !(R = at()).done; ) {
                  var z = R.value, j = k[z.platformID][z.languageID];
                  j == null && this.langTags != null && z.languageID >= 32768 && (j = this.langTags[z.languageID - 32768].tag), j == null && (j = z.platformID + "-" + z.languageID);
                  var ft = z.nameID >= 256 ? "fontFeatures" : tt[z.nameID] || z.nameID;
                  X[ft] == null && (X[ft] = {});
                  var mt = X[ft];
                  z.nameID >= 256 && (mt = mt[z.nameID] || (mt[z.nameID] = {})), (typeof z.string == "string" || typeof mt[j] != "string") && (mt[j] = z.string);
                }
                this.records = X;
              }, et.preEncode = function() {
                if (!Array.isArray(this.records)) {
                  this.version = 0;
                  var lt = [];
                  for (var X in this.records) {
                    var at = this.records[X];
                    X !== "fontFeatures" && (lt.push({
                      platformID: 3,
                      encodingID: 1,
                      languageID: 1033,
                      nameID: tt.indexOf(X),
                      length: i.byteLength(at.en, "utf16le"),
                      string: at.en
                    }), X === "postscriptName" && lt.push({
                      platformID: 1,
                      encodingID: 0,
                      languageID: 0,
                      nameID: tt.indexOf(X),
                      length: at.en.length,
                      string: at.en
                    }));
                  }
                  this.records = lt, this.count = lt.length, this.stringOffset = et.size(this, null, !1);
                }
              };
              var Ct = new e.VersionedStruct(e.uint16, {
                header: {
                  xAvgCharWidth: e.int16,
                  // average weighted advance width of lower case letters and space
                  usWeightClass: e.uint16,
                  // visual weight of stroke in glyphs
                  usWidthClass: e.uint16,
                  // relative change from the normal aspect ratio (width to height ratio)
                  fsType: new e.Bitfield(e.uint16, [
                    // Indicates font embedding licensing rights
                    null,
                    "noEmbedding",
                    "viewOnly",
                    "editable",
                    null,
                    null,
                    null,
                    null,
                    "noSubsetting",
                    "bitmapOnly"
                  ]),
                  ySubscriptXSize: e.int16,
                  // recommended horizontal size in pixels for subscripts
                  ySubscriptYSize: e.int16,
                  // recommended vertical size in pixels for subscripts
                  ySubscriptXOffset: e.int16,
                  // recommended horizontal offset for subscripts
                  ySubscriptYOffset: e.int16,
                  // recommended vertical offset form the baseline for subscripts
                  ySuperscriptXSize: e.int16,
                  // recommended horizontal size in pixels for superscripts
                  ySuperscriptYSize: e.int16,
                  // recommended vertical size in pixels for superscripts
                  ySuperscriptXOffset: e.int16,
                  // recommended horizontal offset for superscripts
                  ySuperscriptYOffset: e.int16,
                  // recommended vertical offset from the baseline for superscripts
                  yStrikeoutSize: e.int16,
                  // width of the strikeout stroke
                  yStrikeoutPosition: e.int16,
                  // position of the strikeout stroke relative to the baseline
                  sFamilyClass: e.int16,
                  // classification of font-family design
                  panose: new e.Array(e.uint8, 10),
                  // describe the visual characteristics of a given typeface
                  ulCharRange: new e.Array(e.uint32, 4),
                  vendorID: new e.String(4),
                  // four character identifier for the font vendor
                  fsSelection: new e.Bitfield(e.uint16, [
                    // bit field containing information about the font
                    "italic",
                    "underscore",
                    "negative",
                    "outlined",
                    "strikeout",
                    "bold",
                    "regular",
                    "useTypoMetrics",
                    "wws",
                    "oblique"
                  ]),
                  usFirstCharIndex: e.uint16,
                  // The minimum Unicode index in this font
                  usLastCharIndex: e.uint16
                  // The maximum Unicode index in this font
                },
                // The Apple version of this table ends here, but the Microsoft one continues on...
                0: {},
                1: {
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2)
                },
                2: {
                  // these should be common with version 1 somehow
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2),
                  xHeight: e.int16,
                  capHeight: e.int16,
                  defaultChar: e.uint16,
                  breakChar: e.uint16,
                  maxContent: e.uint16
                },
                5: {
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2),
                  xHeight: e.int16,
                  capHeight: e.int16,
                  defaultChar: e.uint16,
                  breakChar: e.uint16,
                  maxContent: e.uint16,
                  usLowerOpticalPointSize: e.uint16,
                  usUpperOpticalPointSize: e.uint16
                }
              }), Rt = Ct.versions;
              Rt[3] = Rt[4] = Rt[2];
              var Kt = new e.VersionedStruct(e.fixed32, {
                header: {
                  // these fields exist at the top of all versions
                  italicAngle: e.fixed32,
                  // Italic angle in counter-clockwise degrees from the vertical.
                  underlinePosition: e.int16,
                  // Suggested distance of the top of the underline from the baseline
                  underlineThickness: e.int16,
                  // Suggested values for the underline thickness
                  isFixedPitch: e.uint32,
                  // Whether the font is monospaced
                  minMemType42: e.uint32,
                  // Minimum memory usage when a TrueType font is downloaded as a Type 42 font
                  maxMemType42: e.uint32,
                  // Maximum memory usage when a TrueType font is downloaded as a Type 42 font
                  minMemType1: e.uint32,
                  // Minimum memory usage when a TrueType font is downloaded as a Type 1 font
                  maxMemType1: e.uint32
                  // Maximum memory usage when a TrueType font is downloaded as a Type 1 font
                },
                1: {},
                // version 1 has no additional fields
                2: {
                  numberOfGlyphs: e.uint16,
                  glyphNameIndex: new e.Array(e.uint16, "numberOfGlyphs"),
                  names: new e.Array(new e.String(e.uint8))
                },
                2.5: {
                  numberOfGlyphs: e.uint16,
                  offsets: new e.Array(e.uint8, "numberOfGlyphs")
                },
                3: {},
                // version 3 has no additional fields
                4: {
                  map: new e.Array(e.uint32, function(lt) {
                    return lt.parent.maxp.numGlyphs;
                  })
                }
              }), Gt = new e.Struct({
                controlValues: new e.Array(e.int16)
              }), It = new e.Struct({
                instructions: new e.Array(e.uint8)
              }), re = new e.VersionedStruct("head.indexToLocFormat", {
                0: {
                  offsets: new e.Array(e.uint16)
                },
                1: {
                  offsets: new e.Array(e.uint32)
                }
              });
              re.process = function() {
                if (this.version === 0)
                  for (var lt = 0; lt < this.offsets.length; lt++)
                    this.offsets[lt] <<= 1;
              }, re.preEncode = function() {
                if (this.version === 0)
                  for (var lt = 0; lt < this.offsets.length; lt++)
                    this.offsets[lt] >>>= 1;
              };
              var be = new e.Struct({
                controlValueProgram: new e.Array(e.uint8)
              }), me = new e.Array(new e.Buffer()), le = /* @__PURE__ */ function() {
                function lt(at) {
                  this.type = at;
                }
                var X = lt.prototype;
                return X.getCFFVersion = function(R) {
                  for (; R && !R.hdrSize; )
                    R = R.parent;
                  return R ? R.version : -1;
                }, X.decode = function(R, z) {
                  var j = this.getCFFVersion(z), ft = j >= 2 ? R.readUInt32BE() : R.readUInt16BE();
                  if (ft === 0)
                    return [];
                  var mt = R.readUInt8(), pt;
                  if (mt === 1)
                    pt = e.uint8;
                  else if (mt === 2)
                    pt = e.uint16;
                  else if (mt === 3)
                    pt = e.uint24;
                  else if (mt === 4)
                    pt = e.uint32;
                  else
                    throw new Error("Bad offset size in CFFIndex: ".concat(mt, " ").concat(R.pos));
                  for (var dt = [], Nt = R.pos + (ft + 1) * mt - 1, Yt = pt.decode(R), se = 0; se < ft; se++) {
                    var te = pt.decode(R);
                    if (this.type != null) {
                      var ce = R.pos;
                      R.pos = Nt + Yt, z.length = te - Yt, dt.push(this.type.decode(R, z)), R.pos = ce;
                    } else
                      dt.push({
                        offset: Nt + Yt,
                        length: te - Yt
                      });
                    Yt = te;
                  }
                  return R.pos = Nt + Yt, dt;
                }, X.size = function(R, z) {
                  var j = 2;
                  if (R.length === 0)
                    return j;
                  for (var ft = this.type || new e.Buffer(), mt = 1, pt = 0; pt < R.length; pt++) {
                    var dt = R[pt];
                    mt += ft.size(dt, z);
                  }
                  var Nt;
                  if (mt <= 255)
                    Nt = e.uint8;
                  else if (mt <= 65535)
                    Nt = e.uint16;
                  else if (mt <= 16777215)
                    Nt = e.uint24;
                  else if (mt <= 4294967295)
                    Nt = e.uint32;
                  else
                    throw new Error("Bad offset in CFFIndex");
                  return j += 1 + Nt.size() * (R.length + 1), j += mt - 1, j;
                }, X.encode = function(R, z, j) {
                  if (R.writeUInt16BE(z.length), z.length !== 0) {
                    for (var ft = this.type || new e.Buffer(), mt = [], pt = 1, dt = s(z), Nt; !(Nt = dt()).done; ) {
                      var Yt = Nt.value, se = ft.size(Yt, j);
                      mt.push(se), pt += se;
                    }
                    var te;
                    if (pt <= 255)
                      te = e.uint8;
                    else if (pt <= 65535)
                      te = e.uint16;
                    else if (pt <= 16777215)
                      te = e.uint24;
                    else if (pt <= 4294967295)
                      te = e.uint32;
                    else
                      throw new Error("Bad offset in CFFIndex");
                    R.writeUInt8(te.size()), pt = 1, te.encode(R, pt);
                    for (var ce = 0, ve = mt; ce < ve.length; ce++) {
                      var De = ve[ce];
                      pt += De, te.encode(R, pt);
                    }
                    for (var Ge = s(z), rr; !(rr = Ge()).done; ) {
                      var Ke = rr.value;
                      ft.encode(R, Ke, j);
                    }
                  }
                }, lt;
              }(), Se = 15, Wt = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"], $t = {
                ".": 10,
                E: 11,
                "E-": 12,
                "-": 14
              }, ue = /* @__PURE__ */ function() {
                function lt() {
                }
                return lt.decode = function(at, R) {
                  if (32 <= R && R <= 246)
                    return R - 139;
                  if (247 <= R && R <= 250)
                    return (R - 247) * 256 + at.readUInt8() + 108;
                  if (251 <= R && R <= 254)
                    return -(R - 251) * 256 - at.readUInt8() - 108;
                  if (R === 28)
                    return at.readInt16BE();
                  if (R === 29)
                    return at.readInt32BE();
                  if (R === 30) {
                    for (var z = ""; ; ) {
                      var j = at.readUInt8(), ft = j >> 4;
                      if (ft === Se)
                        break;
                      z += Wt[ft];
                      var mt = j & 15;
                      if (mt === Se)
                        break;
                      z += Wt[mt];
                    }
                    return parseFloat(z);
                  }
                  return null;
                }, lt.size = function(at) {
                  if (at.forceLarge && (at = 32768), (at | 0) !== at) {
                    var R = "" + at;
                    return 1 + Math.ceil((R.length + 1) / 2);
                  } else
                    return -107 <= at && at <= 107 ? 1 : 108 <= at && at <= 1131 || -1131 <= at && at <= -108 ? 2 : -32768 <= at && at <= 32767 ? 3 : 5;
                }, lt.encode = function(at, R) {
                  var z = Number(R);
                  if (R.forceLarge)
                    return at.writeUInt8(29), at.writeInt32BE(z);
                  if ((z | 0) !== z) {
                    at.writeUInt8(30);
                    for (var j = "" + z, ft = 0; ft < j.length; ft += 2) {
                      var mt = j[ft], pt = $t[mt] || +mt;
                      if (ft === j.length - 1)
                        var dt = Se;
                      else
                        var Nt = j[ft + 1], dt = $t[Nt] || +Nt;
                      at.writeUInt8(pt << 4 | dt & 15);
                    }
                    if (dt !== Se)
                      return at.writeUInt8(Se << 4);
                  } else
                    return -107 <= z && z <= 107 ? at.writeUInt8(z + 139) : 108 <= z && z <= 1131 ? (z -= 108, at.writeUInt8((z >> 8) + 247), at.writeUInt8(z & 255)) : -1131 <= z && z <= -108 ? (z = -z - 108, at.writeUInt8((z >> 8) + 251), at.writeUInt8(z & 255)) : -32768 <= z && z <= 32767 ? (at.writeUInt8(28), at.writeInt16BE(z)) : (at.writeUInt8(29), at.writeInt32BE(z));
                }, lt;
              }(), he = /* @__PURE__ */ function() {
                function lt(at) {
                  at === void 0 && (at = []), this.ops = at, this.fields = {};
                  for (var R = s(at), z; !(z = R()).done; ) {
                    var j = z.value, ft = Array.isArray(j[0]) ? j[0][0] << 8 | j[0][1] : j[0];
                    this.fields[ft] = j;
                  }
                }
                var X = lt.prototype;
                return X.decodeOperands = function(R, z, j, ft) {
                  var mt = this;
                  if (Array.isArray(R))
                    return ft.map(function(pt, dt) {
                      return mt.decodeOperands(R[dt], z, j, [pt]);
                    });
                  if (R.decode != null)
                    return R.decode(z, j, ft);
                  switch (R) {
                    case "number":
                    case "offset":
                    case "sid":
                      return ft[0];
                    case "boolean":
                      return !!ft[0];
                    default:
                      return ft;
                  }
                }, X.encodeOperands = function(R, z, j, ft) {
                  var mt = this;
                  return Array.isArray(R) ? ft.map(function(pt, dt) {
                    return mt.encodeOperands(R[dt], z, j, pt)[0];
                  }) : R.encode != null ? R.encode(z, ft, j) : typeof ft == "number" ? [ft] : typeof ft == "boolean" ? [+ft] : Array.isArray(ft) ? ft : [ft];
                }, X.decode = function(R, z) {
                  var j = R.pos + z.length, ft = {}, mt = [];
                  Object.defineProperties(ft, {
                    parent: {
                      value: z
                    },
                    _startOffset: {
                      value: R.pos
                    }
                  });
                  for (var pt in this.fields) {
                    var dt = this.fields[pt];
                    ft[dt[1]] = dt[3];
                  }
                  for (; R.pos < j; ) {
                    var Nt = R.readUInt8();
                    if (Nt < 28) {
                      Nt === 12 && (Nt = Nt << 8 | R.readUInt8());
                      var Yt = this.fields[Nt];
                      if (!Yt)
                        throw new Error("Unknown operator ".concat(Nt));
                      var se = this.decodeOperands(Yt[2], R, ft, mt);
                      se != null && (se instanceof b.PropertyDescriptor ? Object.defineProperty(ft, Yt[1], se) : ft[Yt[1]] = se), mt = [];
                    } else
                      mt.push(ue.decode(R, Nt));
                  }
                  return ft;
                }, X.size = function(R, z, j) {
                  j === void 0 && (j = !0);
                  var ft = {
                    parent: z,
                    val: R,
                    pointerSize: 0,
                    startOffset: z.startOffset || 0
                  }, mt = 0;
                  for (var pt in this.fields) {
                    var dt = this.fields[pt], Nt = R[dt[1]];
                    if (!(Nt == null || A(Nt, dt[3]))) {
                      for (var Yt = this.encodeOperands(dt[2], null, ft, Nt), se = s(Yt), te; !(te = se()).done; ) {
                        var ce = te.value;
                        mt += ue.size(ce);
                      }
                      var ve = Array.isArray(dt[0]) ? dt[0] : [dt[0]];
                      mt += ve.length;
                    }
                  }
                  return j && (mt += ft.pointerSize), mt;
                }, X.encode = function(R, z, j) {
                  var ft = {
                    pointers: [],
                    startOffset: R.pos,
                    parent: j,
                    val: z,
                    pointerSize: 0
                  };
                  ft.pointerOffset = R.pos + this.size(z, ft, !1);
                  for (var mt = s(this.ops), pt; !(pt = mt()).done; ) {
                    var dt = pt.value, Nt = z[dt[1]];
                    if (!(Nt == null || A(Nt, dt[3]))) {
                      for (var Yt = this.encodeOperands(dt[2], R, ft, Nt), se = s(Yt), te; !(te = se()).done; ) {
                        var ce = te.value;
                        ue.encode(R, ce);
                      }
                      for (var ve = Array.isArray(dt[0]) ? dt[0] : [dt[0]], De = s(ve), Ge; !(Ge = De()).done; ) {
                        var rr = Ge.value;
                        R.writeUInt8(rr);
                      }
                    }
                  }
                  for (var Ke = 0; Ke < ft.pointers.length; ) {
                    var pr = ft.pointers[Ke++];
                    pr.type.encode(R, pr.val, pr.parent);
                  }
                }, lt;
              }(), Ee = /* @__PURE__ */ function(lt) {
                function X(R, z) {
                  return z === void 0 && (z = {}), z.type == null && (z.type = "global"), lt.call(this, null, R, z) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at.decode = function(z, j, ft) {
                  return this.offsetType = {
                    decode: function() {
                      return ft[0];
                    }
                  }, lt.prototype.decode.call(this, z, j, ft);
                }, at.encode = function(z, j, ft) {
                  if (!z)
                    return this.offsetType = {
                      size: function() {
                        return 0;
                      }
                    }, this.size(j, ft), [new Re(0)];
                  var mt = null;
                  return this.offsetType = {
                    encode: function(dt, Nt) {
                      return mt = Nt;
                    }
                  }, lt.prototype.encode.call(this, z, j, ft), [new Re(mt)];
                }, X;
              }(e.Pointer), Re = /* @__PURE__ */ function() {
                function lt(at) {
                  this.val = at, this.forceLarge = !0;
                }
                var X = lt.prototype;
                return X.valueOf = function() {
                  return this.val;
                }, lt;
              }(), Ie = /* @__PURE__ */ function() {
                function lt() {
                }
                return lt.decode = function(at, R, z) {
                  for (var j = z.pop(); z.length > j; )
                    z.pop();
                }, lt;
              }(), Ot = new he([
                // key       name                    type                                          default
                [6, "BlueValues", "delta", null],
                [7, "OtherBlues", "delta", null],
                [8, "FamilyBlues", "delta", null],
                [9, "FamilyOtherBlues", "delta", null],
                [[12, 9], "BlueScale", "number", 0.039625],
                [[12, 10], "BlueShift", "number", 7],
                [[12, 11], "BlueFuzz", "number", 1],
                [10, "StdHW", "number", null],
                [11, "StdVW", "number", null],
                [[12, 12], "StemSnapH", "delta", null],
                [[12, 13], "StemSnapV", "delta", null],
                [[12, 14], "ForceBold", "boolean", !1],
                [[12, 17], "LanguageGroup", "number", 0],
                [[12, 18], "ExpansionFactor", "number", 0.06],
                [[12, 19], "initialRandomSeed", "number", 0],
                [20, "defaultWidthX", "number", 0],
                [21, "nominalWidthX", "number", 0],
                [22, "vsindex", "number", 0],
                [23, "blend", Ie, null],
                [19, "Subrs", new Ee(new le(), {
                  type: "local"
                }), null]
              ]), vt = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], W = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], Q = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], gt = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron"], Pt = [".notdef", "space", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], ht = [".notdef", "space", "dollaroldstyle", "dollarsuperior", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "hyphensuperior", "colonmonetary", "onefitted", "rupiah", "centoldstyle", "figuredash", "hypheninferior", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior"], Ht = new e.Struct({
                reserved: new e.Reserved(e.uint16),
                reqFeatureIndex: e.uint16,
                featureCount: e.uint16,
                featureIndexes: new e.Array(e.uint16, "featureCount")
              }), we = new e.Struct({
                tag: new e.String(4),
                langSys: new e.Pointer(e.uint16, Ht, {
                  type: "parent"
                })
              }), rt = new e.Struct({
                defaultLangSys: new e.Pointer(e.uint16, Ht),
                count: e.uint16,
                langSysRecords: new e.Array(we, "count")
              }), _t = new e.Struct({
                tag: new e.String(4),
                script: new e.Pointer(e.uint16, rt, {
                  type: "parent"
                })
              }), ae = new e.Array(_t, e.uint16), Et = new e.Struct({
                featureParams: e.uint16,
                // pointer
                lookupCount: e.uint16,
                lookupListIndexes: new e.Array(e.uint16, "lookupCount")
              }), Zt = new e.Struct({
                tag: new e.String(4),
                feature: new e.Pointer(e.uint16, Et, {
                  type: "parent"
                })
              }), fe = new e.Array(Zt, e.uint16), Ue = new e.Struct({
                markAttachmentType: e.uint8,
                flags: new e.Bitfield(e.uint8, ["rightToLeft", "ignoreBaseGlyphs", "ignoreLigatures", "ignoreMarks", "useMarkFilteringSet"])
              });
              function Be(lt) {
                var X = new e.Struct({
                  lookupType: e.uint16,
                  flags: Ue,
                  subTableCount: e.uint16,
                  subTables: new e.Array(new e.Pointer(e.uint16, lt), "subTableCount"),
                  markFilteringSet: new e.Optional(e.uint16, function(at) {
                    return at.flags.flags.useMarkFilteringSet;
                  })
                });
                return new e.LazyArray(new e.Pointer(e.uint16, X), e.uint16);
              }
              var ke = new e.Struct({
                start: e.uint16,
                end: e.uint16,
                startCoverageIndex: e.uint16
              }), He = new e.VersionedStruct(e.uint16, {
                1: {
                  glyphCount: e.uint16,
                  glyphs: new e.Array(e.uint16, "glyphCount")
                },
                2: {
                  rangeCount: e.uint16,
                  rangeRecords: new e.Array(ke, "rangeCount")
                }
              }), nn = new e.Struct({
                start: e.uint16,
                end: e.uint16,
                class: e.uint16
              }), er = new e.VersionedStruct(e.uint16, {
                1: {
                  // Class array
                  startGlyph: e.uint16,
                  glyphCount: e.uint16,
                  classValueArray: new e.Array(e.uint16, "glyphCount")
                },
                2: {
                  // Class ranges
                  classRangeCount: e.uint16,
                  classRangeRecord: new e.Array(nn, "classRangeCount")
                }
              }), Te = new e.Struct({
                a: e.uint16,
                // startSize for hinting Device, outerIndex for VariationIndex
                b: e.uint16,
                // endSize for Device, innerIndex for VariationIndex
                deltaFormat: e.uint16
              }), Oe = new e.Struct({
                sequenceIndex: e.uint16,
                lookupListIndex: e.uint16
              }), Xe = new e.Struct({
                glyphCount: e.uint16,
                lookupCount: e.uint16,
                input: new e.Array(e.uint16, function(lt) {
                  return lt.glyphCount - 1;
                }),
                lookupRecords: new e.Array(Oe, "lookupCount")
              }), tr = new e.Array(new e.Pointer(e.uint16, Xe), e.uint16), cn = new e.Struct({
                glyphCount: e.uint16,
                lookupCount: e.uint16,
                classes: new e.Array(e.uint16, function(lt) {
                  return lt.glyphCount - 1;
                }),
                lookupRecords: new e.Array(Oe, "lookupCount")
              }), wn = new e.Array(new e.Pointer(e.uint16, cn), e.uint16), nr = new e.VersionedStruct(e.uint16, {
                1: {
                  // Simple context
                  coverage: new e.Pointer(e.uint16, He),
                  ruleSetCount: e.uint16,
                  ruleSets: new e.Array(new e.Pointer(e.uint16, tr), "ruleSetCount")
                },
                2: {
                  // Class-based context
                  coverage: new e.Pointer(e.uint16, He),
                  classDef: new e.Pointer(e.uint16, er),
                  classSetCnt: e.uint16,
                  classSet: new e.Array(new e.Pointer(e.uint16, wn), "classSetCnt")
                },
                3: {
                  glyphCount: e.uint16,
                  lookupCount: e.uint16,
                  coverages: new e.Array(new e.Pointer(e.uint16, He), "glyphCount"),
                  lookupRecords: new e.Array(Oe, "lookupCount")
                }
              }), an = new e.Struct({
                backtrackGlyphCount: e.uint16,
                backtrack: new e.Array(e.uint16, "backtrackGlyphCount"),
                inputGlyphCount: e.uint16,
                input: new e.Array(e.uint16, function(lt) {
                  return lt.inputGlyphCount - 1;
                }),
                lookaheadGlyphCount: e.uint16,
                lookahead: new e.Array(e.uint16, "lookaheadGlyphCount"),
                lookupCount: e.uint16,
                lookupRecords: new e.Array(Oe, "lookupCount")
              }), Wr = new e.Array(new e.Pointer(e.uint16, an), e.uint16), $r = new e.VersionedStruct(e.uint16, {
                1: {
                  // Simple context glyph substitution
                  coverage: new e.Pointer(e.uint16, He),
                  chainCount: e.uint16,
                  chainRuleSets: new e.Array(new e.Pointer(e.uint16, Wr), "chainCount")
                },
                2: {
                  // Class-based chaining context
                  coverage: new e.Pointer(e.uint16, He),
                  backtrackClassDef: new e.Pointer(e.uint16, er),
                  inputClassDef: new e.Pointer(e.uint16, er),
                  lookaheadClassDef: new e.Pointer(e.uint16, er),
                  chainCount: e.uint16,
                  chainClassSet: new e.Array(new e.Pointer(e.uint16, Wr), "chainCount")
                },
                3: {
                  // Coverage-based chaining context
                  backtrackGlyphCount: e.uint16,
                  backtrackCoverage: new e.Array(new e.Pointer(e.uint16, He), "backtrackGlyphCount"),
                  inputGlyphCount: e.uint16,
                  inputCoverage: new e.Array(new e.Pointer(e.uint16, He), "inputGlyphCount"),
                  lookaheadGlyphCount: e.uint16,
                  lookaheadCoverage: new e.Array(new e.Pointer(e.uint16, He), "lookaheadGlyphCount"),
                  lookupCount: e.uint16,
                  lookupRecords: new e.Array(Oe, "lookupCount")
                }
              }), Xr = new e.Fixed(16, "BE", 14), Jn = new e.Struct({
                startCoord: Xr,
                peakCoord: Xr,
                endCoord: Xr
              }), fa = new e.Struct({
                axisCount: e.uint16,
                regionCount: e.uint16,
                variationRegions: new e.Array(new e.Array(Jn, "axisCount"), "regionCount")
              }), hn = new e.Struct({
                shortDeltas: new e.Array(e.int16, function(lt) {
                  return lt.parent.shortDeltaCount;
                }),
                regionDeltas: new e.Array(e.int8, function(lt) {
                  return lt.parent.regionIndexCount - lt.parent.shortDeltaCount;
                }),
                deltas: function(X) {
                  return X.shortDeltas.concat(X.regionDeltas);
                }
              }), gr = new e.Struct({
                itemCount: e.uint16,
                shortDeltaCount: e.uint16,
                regionIndexCount: e.uint16,
                regionIndexes: new e.Array(e.uint16, "regionIndexCount"),
                deltaSets: new e.Array(hn, "itemCount")
              }), rn = new e.Struct({
                format: e.uint16,
                variationRegionList: new e.Pointer(e.uint32, fa),
                variationDataCount: e.uint16,
                itemVariationData: new e.Array(new e.Pointer(e.uint32, gr), "variationDataCount")
              }), Qn = new e.VersionedStruct(e.uint16, {
                1: (r = {
                  axisIndex: e.uint16
                }, r.axisIndex = e.uint16, r.filterRangeMinValue = Xr, r.filterRangeMaxValue = Xr, r)
              }), jn = new e.Struct({
                conditionCount: e.uint16,
                conditionTable: new e.Array(new e.Pointer(e.uint32, Qn), "conditionCount")
              }), $n = new e.Struct({
                featureIndex: e.uint16,
                alternateFeatureTable: new e.Pointer(e.uint32, Et, {
                  type: "parent"
                })
              }), da = new e.Struct({
                version: e.fixed32,
                substitutionCount: e.uint16,
                substitutions: new e.Array($n, "substitutionCount")
              }), ga = new e.Struct({
                conditionSet: new e.Pointer(e.uint32, jn, {
                  type: "parent"
                }),
                featureTableSubstitution: new e.Pointer(e.uint32, da, {
                  type: "parent"
                })
              }), qn = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                featureVariationRecordCount: e.uint32,
                featureVariationRecords: new e.Array(ga, "featureVariationRecordCount")
              }), la = /* @__PURE__ */ function() {
                function lt(at, R) {
                  this.predefinedOps = at, this.type = R;
                }
                var X = lt.prototype;
                return X.decode = function(R, z, j) {
                  return this.predefinedOps[j[0]] ? this.predefinedOps[j[0]] : this.type.decode(R, z, j);
                }, X.size = function(R, z) {
                  return this.type.size(R, z);
                }, X.encode = function(R, z, j) {
                  var ft = this.predefinedOps.indexOf(z);
                  return ft !== -1 ? ft : this.type.encode(R, z, j);
                }, lt;
              }(), qt = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.call(this, "UInt8") || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at.decode = function(z) {
                  return e.uint8.decode(z) & 127;
                }, X;
              }(e.Number), Bt = new e.Struct({
                first: e.uint16,
                nLeft: e.uint8
              }), ne = new e.Struct({
                first: e.uint16,
                nLeft: e.uint16
              }), Mt = new e.VersionedStruct(new qt(), {
                0: {
                  nCodes: e.uint8,
                  codes: new e.Array(e.uint8, "nCodes")
                },
                1: {
                  nRanges: e.uint8,
                  ranges: new e.Array(Bt, "nRanges")
                }
                // TODO: supplement?
              }), zt = new la([W, Q], new Ee(Mt, {
                lazy: !0
              })), Ut = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at.decode = function(z, j) {
                  for (var ft = b.resolveLength(this.length, z, j), mt = 0, pt = []; mt < ft; ) {
                    var dt = this.type.decode(z, j);
                    dt.offset = mt, mt += dt.nLeft + 1, pt.push(dt);
                  }
                  return pt;
                }, X;
              }(e.Array), Vt = new e.VersionedStruct(e.uint8, {
                0: {
                  glyphs: new e.Array(e.uint16, function(lt) {
                    return lt.parent.CharStrings.length - 1;
                  })
                },
                1: {
                  ranges: new Ut(Bt, function(lt) {
                    return lt.parent.CharStrings.length - 1;
                  })
                },
                2: {
                  ranges: new Ut(ne, function(lt) {
                    return lt.parent.CharStrings.length - 1;
                  })
                }
              }), ee = new la([gt, Pt, ht], new Ee(Vt, {
                lazy: !0
              })), kt = new e.Struct({
                first: e.uint16,
                fd: e.uint8
              }), oe = new e.Struct({
                first: e.uint32,
                fd: e.uint16
              }), Jt = new e.VersionedStruct(e.uint8, {
                0: {
                  fds: new e.Array(e.uint8, function(lt) {
                    return lt.parent.CharStrings.length;
                  })
                },
                3: {
                  nRanges: e.uint16,
                  ranges: new e.Array(kt, "nRanges"),
                  sentinel: e.uint16
                },
                4: {
                  nRanges: e.uint32,
                  ranges: new e.Array(oe, "nRanges"),
                  sentinel: e.uint32
                }
              }), ye = new Ee(Ot), Pe = /* @__PURE__ */ function() {
                function lt() {
                }
                var X = lt.prototype;
                return X.decode = function(R, z, j) {
                  return z.length = j[0], ye.decode(R, z, [j[1]]);
                }, X.size = function(R, z) {
                  return [Ot.size(R, z, !1), ye.size(R, z)[0]];
                }, X.encode = function(R, z, j) {
                  return [Ot.size(z, j, !1), ye.encode(R, z, j)[0]];
                }, lt;
              }(), Le = new he([
                // key       name                   type(s)                                 default
                [18, "Private", new Pe(), null],
                [[12, 38], "FontName", "sid", null],
                [[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]],
                [[12, 5], "PaintType", "number", 0]
              ]), Ze = new he([
                // key       name                   type(s)                                 default
                [[12, 30], "ROS", ["sid", "sid", "number"], null],
                [0, "version", "sid", null],
                [1, "Notice", "sid", null],
                [[12, 0], "Copyright", "sid", null],
                [2, "FullName", "sid", null],
                [3, "FamilyName", "sid", null],
                [4, "Weight", "sid", null],
                [[12, 1], "isFixedPitch", "boolean", !1],
                [[12, 2], "ItalicAngle", "number", 0],
                [[12, 3], "UnderlinePosition", "number", -100],
                [[12, 4], "UnderlineThickness", "number", 50],
                [[12, 5], "PaintType", "number", 0],
                [[12, 6], "CharstringType", "number", 2],
                [[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]],
                [13, "UniqueID", "number", null],
                [5, "FontBBox", "array", [0, 0, 0, 0]],
                [[12, 8], "StrokeWidth", "number", 0],
                [14, "XUID", "array", null],
                [15, "charset", ee, gt],
                [16, "Encoding", zt, W],
                [17, "CharStrings", new Ee(new le()), null],
                [18, "Private", new Pe(), null],
                [[12, 20], "SyntheticBase", "number", null],
                [[12, 21], "PostScript", "sid", null],
                [[12, 22], "BaseFontName", "sid", null],
                [[12, 23], "BaseFontBlend", "delta", null],
                // CID font specific
                [[12, 31], "CIDFontVersion", "number", 0],
                [[12, 32], "CIDFontRevision", "number", 0],
                [[12, 33], "CIDFontType", "number", 0],
                [[12, 34], "CIDCount", "number", 8720],
                [[12, 35], "UIDBase", "number", null],
                [[12, 37], "FDSelect", new Ee(Jt), null],
                [[12, 36], "FDArray", new Ee(new le(Le)), null],
                [[12, 38], "FontName", "sid", null]
              ]), $e = new e.Struct({
                length: e.uint16,
                itemVariationStore: rn
              }), or = new he([[[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]], [17, "CharStrings", new Ee(new le()), null], [[12, 37], "FDSelect", new Ee(Jt), null], [[12, 36], "FDArray", new Ee(new le(Le)), null], [24, "vstore", new Ee($e), null], [25, "maxstack", "number", 193]]), pe = new e.VersionedStruct(e.fixed16, {
                1: {
                  hdrSize: e.uint8,
                  offSize: e.uint8,
                  nameIndex: new le(new e.String("length")),
                  topDictIndex: new le(Ze),
                  stringIndex: new le(new e.String("length")),
                  globalSubrIndex: new le()
                },
                2: {
                  hdrSize: e.uint8,
                  length: e.uint16,
                  topDict: or,
                  globalSubrIndex: new le()
                }
              }), ze = /* @__PURE__ */ function() {
                function lt(at) {
                  this.stream = at, this.decode();
                }
                lt.decode = function(R) {
                  return new lt(R);
                };
                var X = lt.prototype;
                return X.decode = function() {
                  this.stream.pos;
                  var R = pe.decode(this.stream);
                  for (var z in R) {
                    var j = R[z];
                    this[z] = j;
                  }
                  if (this.version < 2) {
                    if (this.topDictIndex.length !== 1)
                      throw new Error("Only a single font is allowed in CFF");
                    this.topDict = this.topDictIndex[0];
                  }
                  return this.isCIDFont = this.topDict.ROS != null, this;
                }, X.string = function(R) {
                  return this.version >= 2 ? null : R < vt.length ? vt[R] : this.stringIndex[R - vt.length];
                }, X.getCharString = function(R) {
                  return this.stream.pos = this.topDict.CharStrings[R].offset, this.stream.readBuffer(this.topDict.CharStrings[R].length);
                }, X.getGlyphName = function(R) {
                  if (this.version >= 2 || this.isCIDFont)
                    return null;
                  var z = this.topDict.charset;
                  if (Array.isArray(z))
                    return z[R];
                  if (R === 0)
                    return ".notdef";
                  switch (R -= 1, z.version) {
                    case 0:
                      return this.string(z.glyphs[R]);
                    case 1:
                    case 2:
                      for (var j = 0; j < z.ranges.length; j++) {
                        var ft = z.ranges[j];
                        if (ft.offset <= R && R <= ft.offset + ft.nLeft)
                          return this.string(ft.first + (R - ft.offset));
                      }
                      break;
                  }
                  return null;
                }, X.fdForGlyph = function(R) {
                  if (!this.topDict.FDSelect)
                    return null;
                  switch (this.topDict.FDSelect.version) {
                    case 0:
                      return this.topDict.FDSelect.fds[R];
                    case 3:
                    case 4:
                      for (var z = this.topDict.FDSelect.ranges, j = 0, ft = z.length - 1; j <= ft; ) {
                        var mt = j + ft >> 1;
                        if (R < z[mt].first)
                          ft = mt - 1;
                        else if (mt < ft && R >= z[mt + 1].first)
                          j = mt + 1;
                        else
                          return z[mt].fd;
                      }
                    default:
                      throw new Error("Unknown FDSelect version: ".concat(this.topDict.FDSelect.version));
                  }
                }, X.privateDictForGlyph = function(R) {
                  if (this.topDict.FDSelect) {
                    var z = this.fdForGlyph(R);
                    return this.topDict.FDArray[z] ? this.topDict.FDArray[z].Private : null;
                  }
                  return this.version < 2 ? this.topDict.Private : this.topDict.FDArray[0].Private;
                }, o(lt, [{
                  key: "postscriptName",
                  get: function() {
                    return this.version < 2 ? this.nameIndex[0] : null;
                  }
                }, {
                  key: "fullName",
                  get: function() {
                    return this.string(this.topDict.FullName);
                  }
                }, {
                  key: "familyName",
                  get: function() {
                    return this.string(this.topDict.FamilyName);
                  }
                }]);
              }(), qe = new e.Struct({
                glyphIndex: e.uint16,
                vertOriginY: e.int16
              }), Ve = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                defaultVertOriginY: e.int16,
                numVertOriginYMetrics: e.uint16,
                metrics: new e.Array(qe, "numVertOriginYMetrics")
              }), sr = new e.Struct({
                height: e.uint8,
                width: e.uint8,
                horiBearingX: e.int8,
                horiBearingY: e.int8,
                horiAdvance: e.uint8,
                vertBearingX: e.int8,
                vertBearingY: e.int8,
                vertAdvance: e.uint8
              }), Je = new e.Struct({
                height: e.uint8,
                width: e.uint8,
                bearingX: e.int8,
                bearingY: e.int8,
                advance: e.uint8
              }), dr = new e.Struct({
                glyph: e.uint16,
                xOffset: e.int8,
                yOffset: e.int8
              }), lr = function() {
              }, Tr = function() {
              };
              new e.VersionedStruct("version", {
                1: {
                  metrics: Je,
                  data: lr
                },
                2: {
                  metrics: Je,
                  data: Tr
                },
                // format 3 is deprecated
                // format 4 is not supported by Microsoft
                5: {
                  data: Tr
                },
                6: {
                  metrics: sr,
                  data: lr
                },
                7: {
                  metrics: sr,
                  data: Tr
                },
                8: {
                  metrics: Je,
                  pad: new e.Reserved(e.uint8),
                  numComponents: e.uint16,
                  components: new e.Array(dr, "numComponents")
                },
                9: {
                  metrics: sr,
                  pad: new e.Reserved(e.uint8),
                  numComponents: e.uint16,
                  components: new e.Array(dr, "numComponents")
                },
                17: {
                  metrics: Je,
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                },
                18: {
                  metrics: sr,
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                },
                19: {
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                }
              });
              var Hr = new e.Struct({
                ascender: e.int8,
                descender: e.int8,
                widthMax: e.uint8,
                caretSlopeNumerator: e.int8,
                caretSlopeDenominator: e.int8,
                caretOffset: e.int8,
                minOriginSB: e.int8,
                minAdvanceSB: e.int8,
                maxBeforeBL: e.int8,
                minAfterBL: e.int8,
                pad: new e.Reserved(e.int8, 2)
              }), Rr = new e.Struct({
                glyphCode: e.uint16,
                offset: e.uint16
              }), Or = new e.VersionedStruct(e.uint16, {
                header: {
                  imageFormat: e.uint16,
                  imageDataOffset: e.uint32
                },
                1: {
                  offsetArray: new e.Array(e.uint32, function(lt) {
                    return lt.parent.lastGlyphIndex - lt.parent.firstGlyphIndex + 1;
                  })
                },
                2: {
                  imageSize: e.uint32,
                  bigMetrics: sr
                },
                3: {
                  offsetArray: new e.Array(e.uint16, function(lt) {
                    return lt.parent.lastGlyphIndex - lt.parent.firstGlyphIndex + 1;
                  })
                },
                4: {
                  numGlyphs: e.uint32,
                  glyphArray: new e.Array(Rr, function(lt) {
                    return lt.numGlyphs + 1;
                  })
                },
                5: {
                  imageSize: e.uint32,
                  bigMetrics: sr,
                  numGlyphs: e.uint32,
                  glyphCodeArray: new e.Array(e.uint16, "numGlyphs")
                }
              }), Vr = new e.Struct({
                firstGlyphIndex: e.uint16,
                lastGlyphIndex: e.uint16,
                subtable: new e.Pointer(e.uint32, Or)
              }), tn = new e.Struct({
                indexSubTableArray: new e.Pointer(e.uint32, new e.Array(Vr, 1), {
                  type: "parent"
                }),
                indexTablesSize: e.uint32,
                numberOfIndexSubTables: e.uint32,
                colorRef: e.uint32,
                hori: Hr,
                vert: Hr,
                startGlyphIndex: e.uint16,
                endGlyphIndex: e.uint16,
                ppemX: e.uint8,
                ppemY: e.uint8,
                bitDepth: e.uint8,
                flags: new e.Bitfield(e.uint8, ["horizontal", "vertical"])
              }), Pn = new e.Struct({
                version: e.uint32,
                // 0x00020000
                numSizes: e.uint32,
                sizes: new e.Array(tn, "numSizes")
              }), on = new e.Struct({
                ppem: e.uint16,
                resolution: e.uint16,
                imageOffsets: new e.Array(new e.Pointer(e.uint32, "void"), function(lt) {
                  return lt.parent.parent.maxp.numGlyphs + 1;
                })
              }), Tn = new e.Struct({
                version: e.uint16,
                flags: new e.Bitfield(e.uint16, ["renderOutlines"]),
                numImgTables: e.uint32,
                imageTables: new e.Array(new e.Pointer(e.uint32, on), "numImgTables")
              }), Gn = new e.Struct({
                gid: e.uint16,
                // Glyph ID of layer glyph (must be in z-order from bottom to top).
                paletteIndex: e.uint16
                // Index value to use in the appropriate palette. This value must
              }), ln = new e.Struct({
                gid: e.uint16,
                // Glyph ID of reference glyph. This glyph is for reference only
                // and is not rendered for color.
                firstLayerIndex: e.uint16,
                // Index (from beginning of the Layer Records) to the layer record.
                // There will be numLayers consecutive entries for this base glyph.
                numLayers: e.uint16
              }), dn = new e.Struct({
                version: e.uint16,
                numBaseGlyphRecords: e.uint16,
                baseGlyphRecord: new e.Pointer(e.uint32, new e.Array(ln, "numBaseGlyphRecords")),
                layerRecords: new e.Pointer(e.uint32, new e.Array(Gn, "numLayerRecords"), {
                  lazy: !0
                }),
                numLayerRecords: e.uint16
              }), Lr = new e.Struct({
                blue: e.uint8,
                green: e.uint8,
                red: e.uint8,
                alpha: e.uint8
              }), Tt = new e.VersionedStruct(e.uint16, {
                header: {
                  numPaletteEntries: e.uint16,
                  numPalettes: e.uint16,
                  numColorRecords: e.uint16,
                  colorRecords: new e.Pointer(e.uint32, new e.Array(Lr, "numColorRecords")),
                  colorRecordIndices: new e.Array(e.uint16, "numPalettes")
                },
                0: {},
                1: {
                  offsetPaletteTypeArray: new e.Pointer(e.uint32, new e.Array(e.uint32, "numPalettes")),
                  offsetPaletteLabelArray: new e.Pointer(e.uint32, new e.Array(e.uint16, "numPalettes")),
                  offsetPaletteEntryLabelArray: new e.Pointer(e.uint32, new e.Array(e.uint16, "numPaletteEntries"))
                }
              }), Z = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  coordinate: e.int16
                  // X or Y value, in design units
                },
                2: {
                  // Design units plus contour point
                  coordinate: e.int16,
                  // X or Y value, in design units
                  referenceGlyph: e.uint16,
                  // GlyphID of control glyph
                  baseCoordPoint: e.uint16
                  // Index of contour point on the referenceGlyph
                },
                3: {
                  // Design units plus Device table
                  coordinate: e.int16,
                  // X or Y value, in design units
                  deviceTable: new e.Pointer(e.uint16, Te)
                  // Device table for X or Y value
                }
              }), Y = new e.Struct({
                defaultIndex: e.uint16,
                // Index of default baseline for this script-same index in the BaseTagList
                baseCoordCount: e.uint16,
                baseCoords: new e.Array(new e.Pointer(e.uint16, Z), "baseCoordCount")
              }), q = new e.Struct({
                tag: new e.String(4),
                // 4-byte feature identification tag-must match FeatureTag in FeatureList
                minCoord: new e.Pointer(e.uint16, Z, {
                  type: "parent"
                }),
                // May be NULL
                maxCoord: new e.Pointer(e.uint16, Z, {
                  type: "parent"
                })
                // May be NULL
              }), _ = new e.Struct({
                minCoord: new e.Pointer(e.uint16, Z),
                // May be NULL
                maxCoord: new e.Pointer(e.uint16, Z),
                // May be NULL
                featMinMaxCount: e.uint16,
                // May be 0
                featMinMaxRecords: new e.Array(q, "featMinMaxCount")
                // In alphabetical order
              }), ct = new e.Struct({
                tag: new e.String(4),
                // 4-byte language system identification tag
                minMax: new e.Pointer(e.uint16, _, {
                  type: "parent"
                })
              }), At = new e.Struct({
                baseValues: new e.Pointer(e.uint16, Y),
                // May be NULL
                defaultMinMax: new e.Pointer(e.uint16, _),
                // May be NULL
                baseLangSysCount: e.uint16,
                // May be 0
                baseLangSysRecords: new e.Array(ct, "baseLangSysCount")
                // in alphabetical order by BaseLangSysTag
              }), Qt = new e.Struct({
                tag: new e.String(4),
                // 4-byte script identification tag
                script: new e.Pointer(e.uint16, At, {
                  type: "parent"
                })
              }), ie = new e.Array(Qt, e.uint16), ge = new e.Array(new e.String(4), e.uint16), xe = new e.Struct({
                baseTagList: new e.Pointer(e.uint16, ge),
                // May be NULL
                baseScriptList: new e.Pointer(e.uint16, ie)
              }), Ae = new e.VersionedStruct(e.uint32, {
                header: {
                  horizAxis: new e.Pointer(e.uint16, xe),
                  // May be NULL
                  vertAxis: new e.Pointer(e.uint16, xe)
                  // May be NULL
                },
                65536: {},
                65537: {
                  itemVariationStore: new e.Pointer(e.uint32, rn)
                }
              }), Fe = new e.Array(e.uint16, e.uint16), Ne = new e.Struct({
                coverage: new e.Pointer(e.uint16, He),
                glyphCount: e.uint16,
                attachPoints: new e.Array(new e.Pointer(e.uint16, Fe), "glyphCount")
              }), We = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  coordinate: e.int16
                },
                2: {
                  // Contour point
                  caretValuePoint: e.uint16
                },
                3: {
                  // Design units plus Device table
                  coordinate: e.int16,
                  deviceTable: new e.Pointer(e.uint16, Te)
                }
              }), Ye = new e.Array(new e.Pointer(e.uint16, We), e.uint16), vr = new e.Struct({
                coverage: new e.Pointer(e.uint16, He),
                ligGlyphCount: e.uint16,
                ligGlyphs: new e.Array(new e.Pointer(e.uint16, Ye), "ligGlyphCount")
              }), _e = new e.Struct({
                markSetTableFormat: e.uint16,
                markSetCount: e.uint16,
                coverage: new e.Array(new e.Pointer(e.uint32, He), "markSetCount")
              }), hr = new e.VersionedStruct(e.uint32, {
                header: {
                  glyphClassDef: new e.Pointer(e.uint16, er),
                  attachList: new e.Pointer(e.uint16, Ne),
                  ligCaretList: new e.Pointer(e.uint16, vr),
                  markAttachClassDef: new e.Pointer(e.uint16, er)
                },
                65536: {},
                65538: {
                  markGlyphSetsDef: new e.Pointer(e.uint16, _e)
                },
                65539: {
                  markGlyphSetsDef: new e.Pointer(e.uint16, _e),
                  itemVariationStore: new e.Pointer(e.uint32, rn)
                }
              }), Cr = new e.Bitfield(e.uint16, ["xPlacement", "yPlacement", "xAdvance", "yAdvance", "xPlaDevice", "yPlaDevice", "xAdvDevice", "yAdvDevice"]), fr = {
                xPlacement: e.int16,
                yPlacement: e.int16,
                xAdvance: e.int16,
                yAdvance: e.int16,
                xPlaDevice: new e.Pointer(e.uint16, Te, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                yPlaDevice: new e.Pointer(e.uint16, Te, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                xAdvDevice: new e.Pointer(e.uint16, Te, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                yAdvDevice: new e.Pointer(e.uint16, Te, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                })
              }, je = /* @__PURE__ */ function() {
                function lt(at) {
                  at === void 0 && (at = "valueFormat"), this.key = at;
                }
                var X = lt.prototype;
                return X.buildStruct = function(R) {
                  for (var z = R; !z[this.key] && z.parent; )
                    z = z.parent;
                  if (z[this.key]) {
                    var j = {};
                    j.rel = function() {
                      return z._startOffset;
                    };
                    var ft = z[this.key];
                    for (var mt in ft)
                      ft[mt] && (j[mt] = fr[mt]);
                    return new e.Struct(j);
                  }
                }, X.size = function(R, z) {
                  return this.buildStruct(z).size(R, z);
                }, X.decode = function(R, z) {
                  var j = this.buildStruct(z).decode(R, z);
                  return delete j.rel, j;
                }, lt;
              }(), vn = new e.Struct({
                secondGlyph: e.uint16,
                value1: new je("valueFormat1"),
                value2: new je("valueFormat2")
              }), Dr = new e.Array(vn, e.uint16), Br = new e.Struct({
                value1: new je("valueFormat1"),
                value2: new je("valueFormat2")
              }), pn = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  xCoordinate: e.int16,
                  yCoordinate: e.int16
                },
                2: {
                  // Design units plus contour point
                  xCoordinate: e.int16,
                  yCoordinate: e.int16,
                  anchorPoint: e.uint16
                },
                3: {
                  // Design units plus Device tables
                  xCoordinate: e.int16,
                  yCoordinate: e.int16,
                  xDeviceTable: new e.Pointer(e.uint16, Te),
                  yDeviceTable: new e.Pointer(e.uint16, Te)
                }
              }), Fn = new e.Struct({
                entryAnchor: new e.Pointer(e.uint16, pn, {
                  type: "parent"
                }),
                exitAnchor: new e.Pointer(e.uint16, pn, {
                  type: "parent"
                })
              }), gn = new e.Struct({
                class: e.uint16,
                markAnchor: new e.Pointer(e.uint16, pn, {
                  type: "parent"
                })
              }), Vn = new e.Array(gn, e.uint16), Cn = new e.Array(new e.Pointer(e.uint16, pn), function(lt) {
                return lt.parent.classCount;
              }), _n = new e.Array(Cn, e.uint16), Aa = new e.Array(new e.Pointer(e.uint16, pn), function(lt) {
                return lt.parent.parent.classCount;
              }), ma = new e.Array(Aa, e.uint16), Ei = new e.Array(new e.Pointer(e.uint16, ma), e.uint16), va = new e.VersionedStruct("lookupType", {
                1: new e.VersionedStruct(e.uint16, {
                  // Single Adjustment
                  1: {
                    // Single positioning value
                    coverage: new e.Pointer(e.uint16, He),
                    valueFormat: Cr,
                    value: new je()
                  },
                  2: {
                    coverage: new e.Pointer(e.uint16, He),
                    valueFormat: Cr,
                    valueCount: e.uint16,
                    values: new e.LazyArray(new je(), "valueCount")
                  }
                }),
                2: new e.VersionedStruct(e.uint16, {
                  // Pair Adjustment Positioning
                  1: {
                    // Adjustments for glyph pairs
                    coverage: new e.Pointer(e.uint16, He),
                    valueFormat1: Cr,
                    valueFormat2: Cr,
                    pairSetCount: e.uint16,
                    pairSets: new e.LazyArray(new e.Pointer(e.uint16, Dr), "pairSetCount")
                  },
                  2: {
                    // Class pair adjustment
                    coverage: new e.Pointer(e.uint16, He),
                    valueFormat1: Cr,
                    valueFormat2: Cr,
                    classDef1: new e.Pointer(e.uint16, er),
                    classDef2: new e.Pointer(e.uint16, er),
                    class1Count: e.uint16,
                    class2Count: e.uint16,
                    classRecords: new e.LazyArray(new e.LazyArray(Br, "class2Count"), "class1Count")
                  }
                }),
                3: {
                  // Cursive Attachment Positioning
                  format: e.uint16,
                  coverage: new e.Pointer(e.uint16, He),
                  entryExitCount: e.uint16,
                  entryExitRecords: new e.Array(Fn, "entryExitCount")
                },
                4: {
                  // MarkToBase Attachment Positioning
                  format: e.uint16,
                  markCoverage: new e.Pointer(e.uint16, He),
                  baseCoverage: new e.Pointer(e.uint16, He),
                  classCount: e.uint16,
                  markArray: new e.Pointer(e.uint16, Vn),
                  baseArray: new e.Pointer(e.uint16, _n)
                },
                5: {
                  // MarkToLigature Attachment Positioning
                  format: e.uint16,
                  markCoverage: new e.Pointer(e.uint16, He),
                  ligatureCoverage: new e.Pointer(e.uint16, He),
                  classCount: e.uint16,
                  markArray: new e.Pointer(e.uint16, Vn),
                  ligatureArray: new e.Pointer(e.uint16, Ei)
                },
                6: {
                  // MarkToMark Attachment Positioning
                  format: e.uint16,
                  mark1Coverage: new e.Pointer(e.uint16, He),
                  mark2Coverage: new e.Pointer(e.uint16, He),
                  classCount: e.uint16,
                  mark1Array: new e.Pointer(e.uint16, Vn),
                  mark2Array: new e.Pointer(e.uint16, _n)
                },
                7: nr,
                // Contextual positioning
                8: $r,
                // Chaining contextual positioning
                9: {
                  // Extension Positioning
                  posFormat: e.uint16,
                  lookupType: e.uint16,
                  // cannot also be 9
                  extension: new e.Pointer(e.uint32, va)
                }
              });
              va.versions[9].extension.type = va;
              var Ti = new e.VersionedStruct(e.uint32, {
                header: {
                  scriptList: new e.Pointer(e.uint16, ae),
                  featureList: new e.Pointer(e.uint16, fe),
                  lookupList: new e.Pointer(e.uint16, new Be(va))
                },
                65536: {},
                65537: {
                  featureVariations: new e.Pointer(e.uint32, qn)
                }
              }), Va = new e.Array(e.uint16, e.uint16), Fi = Va, Ii = new e.Struct({
                glyph: e.uint16,
                compCount: e.uint16,
                components: new e.Array(e.uint16, function(lt) {
                  return lt.compCount - 1;
                })
              }), ao = new e.Array(new e.Pointer(e.uint16, Ii), e.uint16), Oa = new e.VersionedStruct("lookupType", {
                1: new e.VersionedStruct(e.uint16, {
                  // Single Substitution
                  1: {
                    coverage: new e.Pointer(e.uint16, He),
                    deltaGlyphID: e.int16
                  },
                  2: {
                    coverage: new e.Pointer(e.uint16, He),
                    glyphCount: e.uint16,
                    substitute: new e.LazyArray(e.uint16, "glyphCount")
                  }
                }),
                2: {
                  // Multiple Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, He),
                  count: e.uint16,
                  sequences: new e.LazyArray(new e.Pointer(e.uint16, Va), "count")
                },
                3: {
                  // Alternate Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, He),
                  count: e.uint16,
                  alternateSet: new e.LazyArray(new e.Pointer(e.uint16, Fi), "count")
                },
                4: {
                  // Ligature Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, He),
                  count: e.uint16,
                  ligatureSets: new e.LazyArray(new e.Pointer(e.uint16, ao), "count")
                },
                5: nr,
                // Contextual Substitution
                6: $r,
                // Chaining Contextual Substitution
                7: {
                  // Extension Substitution
                  substFormat: e.uint16,
                  lookupType: e.uint16,
                  // cannot also be 7
                  extension: new e.Pointer(e.uint32, Oa)
                },
                8: {
                  // Reverse Chaining Contextual Single Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, He),
                  backtrackCoverage: new e.Array(new e.Pointer(e.uint16, He), "backtrackGlyphCount"),
                  lookaheadGlyphCount: e.uint16,
                  lookaheadCoverage: new e.Array(new e.Pointer(e.uint16, He), "lookaheadGlyphCount"),
                  glyphCount: e.uint16,
                  substitutes: new e.Array(e.uint16, "glyphCount")
                }
              });
              Oa.versions[7].extension.type = Oa;
              var Sa = new e.VersionedStruct(e.uint32, {
                header: {
                  scriptList: new e.Pointer(e.uint16, ae),
                  featureList: new e.Pointer(e.uint16, fe),
                  lookupList: new e.Pointer(e.uint16, new Be(Oa))
                },
                65536: {},
                65537: {
                  featureVariations: new e.Pointer(e.uint32, qn)
                }
              }), ya = new e.Array(e.uint16, e.uint16), Ca = new e.Struct({
                shrinkageEnableGSUB: new e.Pointer(e.uint16, ya),
                shrinkageDisableGSUB: new e.Pointer(e.uint16, ya),
                shrinkageEnableGPOS: new e.Pointer(e.uint16, ya),
                shrinkageDisableGPOS: new e.Pointer(e.uint16, ya),
                shrinkageJstfMax: new e.Pointer(e.uint16, new Be(va)),
                extensionEnableGSUB: new e.Pointer(e.uint16, ya),
                extensionDisableGSUB: new e.Pointer(e.uint16, ya),
                extensionEnableGPOS: new e.Pointer(e.uint16, ya),
                extensionDisableGPOS: new e.Pointer(e.uint16, ya),
                extensionJstfMax: new e.Pointer(e.uint16, new Be(va))
              }), io = new e.Array(new e.Pointer(e.uint16, Ca), e.uint16), us = new e.Struct({
                tag: new e.String(4),
                jstfLangSys: new e.Pointer(e.uint16, io)
              }), Tl = new e.Struct({
                extenderGlyphs: new e.Pointer(e.uint16, new e.Array(e.uint16, e.uint16)),
                // array of glyphs to extend line length
                defaultLangSys: new e.Pointer(e.uint16, io),
                langSysCount: e.uint16,
                langSysRecords: new e.Array(us, "langSysCount")
              }), Fl = new e.Struct({
                tag: new e.String(4),
                script: new e.Pointer(e.uint16, Tl, {
                  type: "parent"
                })
              }), Il = new e.Struct({
                version: e.uint32,
                // should be 0x00010000
                scriptCount: e.uint16,
                scriptList: new e.Array(Fl, "scriptCount")
              }), Dl = /* @__PURE__ */ function() {
                function lt(at) {
                  this._size = at;
                }
                var X = lt.prototype;
                return X.decode = function(R, z) {
                  switch (this.size(0, z)) {
                    case 1:
                      return R.readUInt8();
                    case 2:
                      return R.readUInt16BE();
                    case 3:
                      return R.readUInt24BE();
                    case 4:
                      return R.readUInt32BE();
                  }
                }, X.size = function(R, z) {
                  return b.resolveLength(this._size, null, z);
                }, lt;
              }(), Pl = new e.Struct({
                entry: new Dl(function(lt) {
                  return ((lt.parent.entryFormat & 48) >> 4) + 1;
                }),
                outerIndex: function(X) {
                  return X.entry >> (X.parent.entryFormat & 15) + 1;
                },
                innerIndex: function(X) {
                  return X.entry & (1 << (X.parent.entryFormat & 15) + 1) - 1;
                }
              }), cs = new e.Struct({
                entryFormat: e.uint16,
                mapCount: e.uint16,
                mapData: new e.Array(Pl, "mapCount")
              }), Ol = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                itemVariationStore: new e.Pointer(e.uint32, rn),
                advanceWidthMapping: new e.Pointer(e.uint32, cs),
                LSBMapping: new e.Pointer(e.uint32, cs),
                RSBMapping: new e.Pointer(e.uint32, cs)
              }), Bl = new e.Struct({
                format: e.uint32,
                length: e.uint32,
                offset: e.uint32
              }), Rl = new e.Struct({
                reserved: new e.Reserved(e.uint16, 2),
                cbSignature: e.uint32,
                // Length (in bytes) of the PKCS#7 packet in pbSignature
                signature: new e.Buffer("cbSignature")
              }), Ll = new e.Struct({
                ulVersion: e.uint32,
                // Version number of the DSIG table (0x00000001)
                usNumSigs: e.uint16,
                // Number of signatures in the table
                usFlag: e.uint16,
                // Permission flags
                signatures: new e.Array(Bl, "usNumSigs"),
                signatureBlocks: new e.Array(Rl, "usNumSigs")
              }), Nl = new e.Struct({
                rangeMaxPPEM: e.uint16,
                // Upper limit of range, in ppem
                rangeGaspBehavior: new e.Bitfield(e.uint16, [
                  // Flags describing desired rasterizer behavior
                  "grayscale",
                  "gridfit",
                  "symmetricSmoothing",
                  "symmetricGridfit"
                  // only in version 1, for ClearType
                ])
              }), Ml = new e.Struct({
                version: e.uint16,
                // set to 0
                numRanges: e.uint16,
                gaspRanges: new e.Array(Nl, "numRanges")
                // Sorted by ppem
              }), kl = new e.Struct({
                pixelSize: e.uint8,
                maximumWidth: e.uint8,
                widths: new e.Array(e.uint8, function(lt) {
                  return lt.parent.parent.maxp.numGlyphs;
                })
              }), Ul = new e.Struct({
                version: e.uint16,
                numRecords: e.int16,
                sizeDeviceRecord: e.int32,
                records: new e.Array(kl, "numRecords")
              }), zl = new e.Struct({
                left: e.uint16,
                right: e.uint16,
                value: e.int16
              }), y0 = new e.Struct({
                firstGlyph: e.uint16,
                nGlyphs: e.uint16,
                offsets: new e.Array(e.uint16, "nGlyphs"),
                max: function(X) {
                  return X.offsets.length && Math.max.apply(Math, X.offsets);
                }
              }), Wl = new e.Struct({
                off: function(X) {
                  return X._startOffset - X.parent.parent._startOffset;
                },
                len: function(X) {
                  return ((X.parent.leftTable.max - X.off) / X.parent.rowWidth + 1) * (X.parent.rowWidth / 2);
                },
                values: new e.LazyArray(e.int16, "len")
              }), x0 = new e.VersionedStruct("format", {
                0: {
                  nPairs: e.uint16,
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16,
                  pairs: new e.Array(zl, "nPairs")
                },
                2: {
                  rowWidth: e.uint16,
                  leftTable: new e.Pointer(e.uint16, y0, {
                    type: "parent"
                  }),
                  rightTable: new e.Pointer(e.uint16, y0, {
                    type: "parent"
                  }),
                  array: new e.Pointer(e.uint16, Wl, {
                    type: "parent"
                  })
                },
                3: {
                  glyphCount: e.uint16,
                  kernValueCount: e.uint8,
                  leftClassCount: e.uint8,
                  rightClassCount: e.uint8,
                  flags: e.uint8,
                  kernValue: new e.Array(e.int16, "kernValueCount"),
                  leftClass: new e.Array(e.uint8, "glyphCount"),
                  rightClass: new e.Array(e.uint8, "glyphCount"),
                  kernIndex: new e.Array(e.uint8, function(lt) {
                    return lt.leftClassCount * lt.rightClassCount;
                  })
                }
              }), b0 = new e.VersionedStruct("version", {
                0: {
                  // Microsoft uses this format
                  subVersion: e.uint16,
                  // Microsoft has an extra sub-table version number
                  length: e.uint16,
                  // Length of the subtable, in bytes
                  format: e.uint8,
                  // Format of subtable
                  coverage: new e.Bitfield(e.uint8, [
                    "horizontal",
                    // 1 if table has horizontal data, 0 if vertical
                    "minimum",
                    // If set to 1, the table has minimum values. If set to 0, the table has kerning values.
                    "crossStream",
                    // If set to 1, kerning is perpendicular to the flow of the text
                    "override"
                    // If set to 1 the value in this table replaces the accumulated value
                  ]),
                  subtable: x0,
                  padding: new e.Reserved(e.uint8, function(lt) {
                    return lt.length - lt._currentOffset;
                  })
                },
                1: {
                  // Apple uses this format
                  length: e.uint32,
                  coverage: new e.Bitfield(e.uint8, [
                    null,
                    null,
                    null,
                    null,
                    null,
                    "variation",
                    // Set if table has variation kerning values
                    "crossStream",
                    // Set if table has cross-stream kerning values
                    "vertical"
                    // Set if table has vertical kerning values
                  ]),
                  format: e.uint8,
                  tupleIndex: e.uint16,
                  subtable: x0,
                  padding: new e.Reserved(e.uint8, function(lt) {
                    return lt.length - lt._currentOffset;
                  })
                }
              }), Hl = new e.VersionedStruct(e.uint16, {
                0: {
                  // Microsoft Version
                  nTables: e.uint16,
                  tables: new e.Array(b0, "nTables")
                },
                1: {
                  // Apple Version
                  reserved: new e.Reserved(e.uint16),
                  // the other half of the version number
                  nTables: e.uint32,
                  tables: new e.Array(b0, "nTables")
                }
              }), jl = new e.Struct({
                version: e.uint16,
                numGlyphs: e.uint16,
                yPels: new e.Array(e.uint8, "numGlyphs")
              }), Gl = new e.Struct({
                version: e.uint16,
                fontNumber: e.uint32,
                pitch: e.uint16,
                xHeight: e.uint16,
                style: e.uint16,
                typeFamily: e.uint16,
                capHeight: e.uint16,
                symbolSet: e.uint16,
                typeface: new e.String(16),
                characterComplement: new e.String(8),
                fileName: new e.String(6),
                strokeWeight: new e.String(1),
                widthType: new e.String(1),
                serifStyle: e.uint8,
                reserved: new e.Reserved(e.uint8)
              }), Vl = new e.Struct({
                bCharSet: e.uint8,
                // Character set
                xRatio: e.uint8,
                // Value to use for x-Ratio
                yStartRatio: e.uint8,
                // Starting y-Ratio value
                yEndRatio: e.uint8
                // Ending y-Ratio value
              }), Xl = new e.Struct({
                yPelHeight: e.uint16,
                // yPelHeight to which values apply
                yMax: e.int16,
                // Maximum value (in pels) for this yPelHeight
                yMin: e.int16
                // Minimum value (in pels) for this yPelHeight
              }), Zl = new e.Struct({
                recs: e.uint16,
                // Number of height records in this group
                startsz: e.uint8,
                // Starting yPelHeight
                endsz: e.uint8,
                // Ending yPelHeight
                entries: new e.Array(Xl, "recs")
                // The VDMX records
              }), Yl = new e.Struct({
                version: e.uint16,
                // Version number (0 or 1)
                numRecs: e.uint16,
                // Number of VDMX groups present
                numRatios: e.uint16,
                // Number of aspect ratio groupings
                ratioRanges: new e.Array(Vl, "numRatios"),
                // Ratio ranges
                offsets: new e.Array(e.uint16, "numRatios"),
                // Offset to the VDMX group for this ratio range
                groups: new e.Array(Zl, "numRecs")
                // The actual VDMX groupings
              }), Kl = new e.Struct({
                version: e.uint16,
                // Version number of the Vertical Header Table
                ascent: e.int16,
                // The vertical typographic ascender for this font
                descent: e.int16,
                // The vertical typographic descender for this font
                lineGap: e.int16,
                // The vertical typographic line gap for this font
                advanceHeightMax: e.int16,
                // The maximum advance height measurement found in the font
                minTopSideBearing: e.int16,
                // The minimum top side bearing measurement found in the font
                minBottomSideBearing: e.int16,
                // The minimum bottom side bearing measurement found in the font
                yMaxExtent: e.int16,
                caretSlopeRise: e.int16,
                // Caret slope (rise/run)
                caretSlopeRun: e.int16,
                caretOffset: e.int16,
                // Set value equal to 0 for nonslanted fonts
                reserved: new e.Reserved(e.int16, 4),
                metricDataFormat: e.int16,
                // Set to 0
                numberOfMetrics: e.uint16
                // Number of advance heights in the Vertical Metrics table
              }), Jl = new e.Struct({
                advance: e.uint16,
                // The advance height of the glyph
                bearing: e.int16
                // The top sidebearing of the glyph
              }), Ql = new e.Struct({
                metrics: new e.LazyArray(Jl, function(lt) {
                  return lt.parent.vhea.numberOfMetrics;
                }),
                bearings: new e.LazyArray(e.int16, function(lt) {
                  return lt.parent.maxp.numGlyphs - lt.parent.vhea.numberOfMetrics;
                })
              }), w0 = new e.Fixed(16, "BE", 14), $l = new e.Struct({
                fromCoord: w0,
                toCoord: w0
              }), ql = new e.Struct({
                pairCount: e.uint16,
                correspondence: new e.Array($l, "pairCount")
              }), _l = new e.Struct({
                version: e.fixed32,
                axisCount: e.uint32,
                segment: new e.Array(ql, "axisCount")
              }), tu = /* @__PURE__ */ function() {
                function lt(at, R, z) {
                  this.type = at, this.stream = R, this.parent = z, this.base = this.stream.pos, this._items = [];
                }
                var X = lt.prototype;
                return X.getItem = function(R) {
                  if (this._items[R] == null) {
                    var z = this.stream.pos;
                    this.stream.pos = this.base + this.type.size(null, this.parent) * R, this._items[R] = this.type.decode(this.stream, this.parent), this.stream.pos = z;
                  }
                  return this._items[R];
                }, X.inspect = function() {
                  return "[UnboundedArray ".concat(this.type.constructor.name, "]");
                }, lt;
              }(), xa = /* @__PURE__ */ function(lt) {
                function X(R) {
                  return lt.call(this, R, 0) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at.decode = function(z, j) {
                  return new tu(this.type, z, j);
                }, X;
              }(e.Array), Ba = function(X) {
                X === void 0 && (X = e.uint16);
                var at = /* @__PURE__ */ function() {
                  function mt(dt) {
                    this.type = dt;
                  }
                  var pt = mt.prototype;
                  return pt.decode = function(Nt, Yt) {
                    return Yt = Yt.parent.parent, this.type.decode(Nt, Yt);
                  }, pt.size = function(Nt, Yt) {
                    return Yt = Yt.parent.parent, this.type.size(Nt, Yt);
                  }, pt.encode = function(Nt, Yt, se) {
                    return se = se.parent.parent, this.type.encode(Nt, Yt, se);
                  }, mt;
                }();
                X = new at(X);
                var R = new e.Struct({
                  unitSize: e.uint16,
                  nUnits: e.uint16,
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16
                }), z = new e.Struct({
                  lastGlyph: e.uint16,
                  firstGlyph: e.uint16,
                  value: X
                }), j = new e.Struct({
                  lastGlyph: e.uint16,
                  firstGlyph: e.uint16,
                  values: new e.Pointer(e.uint16, new e.Array(X, function(mt) {
                    return mt.lastGlyph - mt.firstGlyph + 1;
                  }), {
                    type: "parent"
                  })
                }), ft = new e.Struct({
                  glyph: e.uint16,
                  value: X
                });
                return new e.VersionedStruct(e.uint16, {
                  0: {
                    values: new xa(X)
                    // length == number of glyphs maybe?
                  },
                  2: {
                    binarySearchHeader: R,
                    segments: new e.Array(z, function(mt) {
                      return mt.binarySearchHeader.nUnits;
                    })
                  },
                  4: {
                    binarySearchHeader: R,
                    segments: new e.Array(j, function(mt) {
                      return mt.binarySearchHeader.nUnits;
                    })
                  },
                  6: {
                    binarySearchHeader: R,
                    segments: new e.Array(ft, function(mt) {
                      return mt.binarySearchHeader.nUnits;
                    })
                  },
                  8: {
                    firstGlyph: e.uint16,
                    count: e.uint16,
                    values: new e.Array(X, "count")
                  }
                });
              };
              function oo(lt, X) {
                lt === void 0 && (lt = {}), X === void 0 && (X = e.uint16);
                var at = Object.assign({
                  newState: e.uint16,
                  flags: e.uint16
                }, lt), R = new e.Struct(at), z = new xa(new e.Array(e.uint16, function(ft) {
                  return ft.nClasses;
                })), j = new e.Struct({
                  nClasses: e.uint32,
                  classTable: new e.Pointer(e.uint32, new Ba(X)),
                  stateArray: new e.Pointer(e.uint32, z),
                  entryTable: new e.Pointer(e.uint32, new xa(R))
                });
                return j;
              }
              function eu(lt, X) {
                lt === void 0 && (lt = {}), X === void 0 && (X = e.uint16);
                var at = new e.Struct({
                  version: function() {
                    return 8;
                  },
                  // simulate LookupTable
                  firstGlyph: e.uint16,
                  values: new e.Array(e.uint8, e.uint16)
                }), R = Object.assign({
                  newStateOffset: e.uint16,
                  // convert offset to stateArray index
                  newState: function(pt) {
                    return (pt.newStateOffset - (pt.parent.stateArray.base - pt.parent._startOffset)) / pt.parent.nClasses;
                  },
                  flags: e.uint16
                }, lt), z = new e.Struct(R), j = new xa(new e.Array(e.uint8, function(mt) {
                  return mt.nClasses;
                })), ft = new e.Struct({
                  nClasses: e.uint16,
                  classTable: new e.Pointer(e.uint16, at),
                  stateArray: new e.Pointer(e.uint16, j),
                  entryTable: new e.Pointer(e.uint16, new xa(z))
                });
                return ft;
              }
              var ru = new e.VersionedStruct("format", {
                0: {
                  // Distance-based, no mapping
                  deltas: new e.Array(e.int16, 32)
                },
                1: {
                  // Distance-based, with mapping
                  deltas: new e.Array(e.int16, 32),
                  mappingData: new Ba(e.uint16)
                },
                2: {
                  // Control point-based, no mapping
                  standardGlyph: e.uint16,
                  controlPoints: new e.Array(e.uint16, 32)
                },
                3: {
                  // Control point-based, with mapping
                  standardGlyph: e.uint16,
                  controlPoints: new e.Array(e.uint16, 32),
                  mappingData: new Ba(e.uint16)
                }
              }), nu = new e.Struct({
                version: e.fixed32,
                format: e.uint16,
                defaultBaseline: e.uint16,
                subtable: ru
              }), au = new e.Struct({
                setting: e.uint16,
                nameIndex: e.int16,
                name: function(X) {
                  return X.parent.parent.parent.name.records.fontFeatures[X.nameIndex];
                }
              }), iu = new e.Struct({
                feature: e.uint16,
                nSettings: e.uint16,
                settingTable: new e.Pointer(e.uint32, new e.Array(au, "nSettings"), {
                  type: "parent"
                }),
                featureFlags: new e.Bitfield(e.uint8, [null, null, null, null, null, null, "hasDefault", "exclusive"]),
                defaultSetting: e.uint8,
                nameIndex: e.int16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameIndex];
                }
              }), ou = new e.Struct({
                version: e.fixed32,
                featureNameCount: e.uint16,
                reserved1: new e.Reserved(e.uint16),
                reserved2: new e.Reserved(e.uint32),
                featureNames: new e.Array(iu, "featureNameCount")
              }), su = new e.Struct({
                axisTag: new e.String(4),
                minValue: e.fixed32,
                defaultValue: e.fixed32,
                maxValue: e.fixed32,
                flags: e.uint16,
                nameID: e.uint16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameID];
                }
              }), fu = new e.Struct({
                nameID: e.uint16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameID];
                },
                flags: e.uint16,
                coord: new e.Array(e.fixed32, function(lt) {
                  return lt.parent.axisCount;
                }),
                postscriptNameID: new e.Optional(e.uint16, function(lt) {
                  return lt.parent.instanceSize - lt._currentOffset > 0;
                })
              }), lu = new e.Struct({
                version: e.fixed32,
                offsetToData: e.uint16,
                countSizePairs: e.uint16,
                axisCount: e.uint16,
                axisSize: e.uint16,
                instanceCount: e.uint16,
                instanceSize: e.uint16,
                axis: new e.Array(su, "axisCount"),
                instance: new e.Array(fu, "instanceCount")
              }), uu = new e.Fixed(16, "BE", 14), cu = /* @__PURE__ */ function() {
                function lt() {
                }
                return lt.decode = function(at, R) {
                  return R.flags ? at.readUInt32BE() : at.readUInt16BE() * 2;
                }, lt;
              }(), hu = new e.Struct({
                version: e.uint16,
                reserved: new e.Reserved(e.uint16),
                axisCount: e.uint16,
                globalCoordCount: e.uint16,
                globalCoords: new e.Pointer(e.uint32, new e.Array(new e.Array(uu, "axisCount"), "globalCoordCount")),
                glyphCount: e.uint16,
                flags: e.uint16,
                offsetToData: e.uint32,
                offsets: new e.Array(new e.Pointer(cu, "void", {
                  relativeTo: function(X) {
                    return X.offsetToData;
                  },
                  allowNull: !1
                }), function(lt) {
                  return lt.glyphCount + 1;
                })
              }), du = new e.Struct({
                length: e.uint16,
                coverage: e.uint16,
                subFeatureFlags: e.uint32,
                stateTable: new eu()
              }), vu = new e.Struct({
                justClass: e.uint32,
                beforeGrowLimit: e.fixed32,
                beforeShrinkLimit: e.fixed32,
                afterGrowLimit: e.fixed32,
                afterShrinkLimit: e.fixed32,
                growFlags: e.uint16,
                shrinkFlags: e.uint16
              }), pu = new e.Array(vu, e.uint32), gu = new e.VersionedStruct("actionType", {
                0: {
                  // Decomposition action
                  lowerLimit: e.fixed32,
                  upperLimit: e.fixed32,
                  order: e.uint16,
                  glyphs: new e.Array(e.uint16, e.uint16)
                },
                1: {
                  // Unconditional add glyph action
                  addGlyph: e.uint16
                },
                2: {
                  // Conditional add glyph action
                  substThreshold: e.fixed32,
                  addGlyph: e.uint16,
                  substGlyph: e.uint16
                },
                3: {},
                // Stretch glyph action (no data, not supported by CoreText)
                4: {
                  // Ductile glyph action (not supported by CoreText)
                  variationAxis: e.uint32,
                  minimumLimit: e.fixed32,
                  noStretchValue: e.fixed32,
                  maximumLimit: e.fixed32
                },
                5: {
                  // Repeated add glyph action
                  flags: e.uint16,
                  glyph: e.uint16
                }
              }), mu = new e.Struct({
                actionClass: e.uint16,
                actionType: e.uint16,
                actionLength: e.uint32,
                actionData: gu,
                padding: new e.Reserved(e.uint8, function(lt) {
                  return lt.actionLength - lt._currentOffset;
                })
              }), yu = new e.Array(mu, e.uint32), xu = new e.Struct({
                lookupTable: new Ba(new e.Pointer(e.uint16, yu))
              }), A0 = new e.Struct({
                classTable: new e.Pointer(e.uint16, du, {
                  type: "parent"
                }),
                wdcOffset: e.uint16,
                postCompensationTable: new e.Pointer(e.uint16, xu, {
                  type: "parent"
                }),
                widthDeltaClusters: new Ba(new e.Pointer(e.uint16, pu, {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.wdcOffset;
                  }
                }))
              }), bu = new e.Struct({
                version: e.uint32,
                format: e.uint16,
                horizontal: new e.Pointer(e.uint16, A0),
                vertical: new e.Pointer(e.uint16, A0)
              }), wu = {
                action: e.uint16
              }, Au = {
                markIndex: e.uint16,
                currentIndex: e.uint16
              }, Su = {
                currentInsertIndex: e.uint16,
                markedInsertIndex: e.uint16
              }, Cu = new e.Struct({
                items: new xa(new e.Pointer(e.uint32, new Ba()))
              }), Eu = new e.VersionedStruct("type", {
                0: {
                  // Indic Rearrangement Subtable
                  stateTable: new oo()
                },
                1: {
                  // Contextual Glyph Substitution Subtable
                  stateTable: new oo(Au),
                  substitutionTable: new e.Pointer(e.uint32, Cu)
                },
                2: {
                  // Ligature subtable
                  stateTable: new oo(wu),
                  ligatureActions: new e.Pointer(e.uint32, new xa(e.uint32)),
                  components: new e.Pointer(e.uint32, new xa(e.uint16)),
                  ligatureList: new e.Pointer(e.uint32, new xa(e.uint16))
                },
                4: {
                  // Non-contextual Glyph Substitution Subtable
                  lookupTable: new Ba()
                },
                5: {
                  // Glyph Insertion Subtable
                  stateTable: new oo(Su),
                  insertionActions: new e.Pointer(e.uint32, new xa(e.uint16))
                }
              }), Tu = new e.Struct({
                length: e.uint32,
                coverage: e.uint24,
                type: e.uint8,
                subFeatureFlags: e.uint32,
                table: Eu,
                padding: new e.Reserved(e.uint8, function(lt) {
                  return lt.length - lt._currentOffset;
                })
              }), Fu = new e.Struct({
                featureType: e.uint16,
                featureSetting: e.uint16,
                enableFlags: e.uint32,
                disableFlags: e.uint32
              }), Iu = new e.Struct({
                defaultFlags: e.uint32,
                chainLength: e.uint32,
                nFeatureEntries: e.uint32,
                nSubtables: e.uint32,
                features: new e.Array(Fu, "nFeatureEntries"),
                subtables: new e.Array(Tu, "nSubtables")
              }), Du = new e.Struct({
                version: e.uint16,
                unused: new e.Reserved(e.uint16),
                nChains: e.uint32,
                chains: new e.Array(Iu, "nChains")
              }), Pu = new e.Struct({
                left: e.int16,
                top: e.int16,
                right: e.int16,
                bottom: e.int16
              }), Ou = new e.Struct({
                version: e.fixed32,
                format: e.uint16,
                lookupTable: new Ba(Pu)
              }), ur = {};
              ur.cmap = J, ur.head = yt, ur.hhea = ut, ur.hmtx = wt, ur.maxp = V, ur.name = et, ur["OS/2"] = Ct, ur.post = Kt, ur.fpgm = It, ur.loca = re, ur.prep = be, ur["cvt "] = Gt, ur.glyf = me, ur["CFF "] = ze, ur.CFF2 = ze, ur.VORG = Ve, ur.EBLC = Pn, ur.CBLC = ur.EBLC, ur.sbix = Tn, ur.COLR = dn, ur.CPAL = Tt, ur.BASE = Ae, ur.GDEF = hr, ur.GPOS = Ti, ur.GSUB = Sa, ur.JSTF = Il, ur.HVAR = Ol, ur.DSIG = Ll, ur.gasp = Ml, ur.hdmx = Ul, ur.kern = Hl, ur.LTSH = jl, ur.PCLT = Gl, ur.VDMX = Yl, ur.vhea = Kl, ur.vmtx = Ql, ur.avar = _l, ur.bsln = nu, ur.feat = ou, ur.fvar = lu, ur.gvar = hu, ur.just = bu, ur.morx = Du, ur.opbd = Ou;
              var Bu = new e.Struct({
                tag: new e.String(4),
                checkSum: e.uint32,
                offset: new e.Pointer(e.uint32, "void", {
                  type: "global"
                }),
                length: e.uint32
              }), so = new e.Struct({
                tag: new e.String(4),
                numTables: e.uint16,
                searchRange: e.uint16,
                entrySelector: e.uint16,
                rangeShift: e.uint16,
                tables: new e.Array(Bu, "numTables")
              });
              so.process = function() {
                for (var lt = {}, X = s(this.tables), at; !(at = X()).done; ) {
                  var R = at.value;
                  lt[R.tag] = R;
                }
                this.tables = lt;
              }, so.preEncode = function(lt) {
                var X = [];
                for (var at in this.tables) {
                  var R = this.tables[at];
                  R && X.push({
                    tag: at,
                    checkSum: 0,
                    offset: new e.VoidPointer(ur[at], R),
                    length: ur[at].size(R)
                  });
                }
                this.tag = "true", this.numTables = X.length, this.tables = X;
                var z = Math.floor(Math.log(this.numTables) / Math.LN2), j = Math.pow(2, z);
                this.searchRange = j * 16, this.entrySelector = Math.log(j) / Math.LN2, this.rangeShift = this.numTables * 16 - this.searchRange;
              };
              function fo(lt, X) {
                for (var at = 0, R = lt.length - 1; at <= R; ) {
                  var z = at + R >> 1, j = X(lt[z]);
                  if (j < 0)
                    R = z - 1;
                  else if (j > 0)
                    at = z + 1;
                  else
                    return z;
                }
                return -1;
              }
              function ri(lt, X) {
                for (var at = []; lt < X; )
                  at.push(lt++);
                return at;
              }
              var Ra;
              try {
                var hs = t(54171);
              } catch (lt) {
              }
              var Ru = (Ra = /* @__PURE__ */ function() {
                function lt(at) {
                  if (this.encoding = null, this.cmap = this.findSubtable(at, [
                    // 32-bit subtables
                    [3, 10],
                    [0, 6],
                    [0, 4],
                    // 16-bit subtables
                    [3, 1],
                    [0, 3],
                    [0, 2],
                    [0, 1],
                    [0, 0]
                  ]), !this.cmap && hs)
                    for (var R = s(at.tables), z; !(z = R()).done; ) {
                      var j = z.value, ft = Ft(j.platformID, j.encodingID, j.table.language - 1);
                      hs.encodingExists(ft) && (this.cmap = j.table, this.encoding = ft);
                    }
                  if (!this.cmap)
                    throw new Error("Could not find a supported cmap table");
                  this.uvs = this.findSubtable(at, [[0, 5]]), this.uvs && this.uvs.version !== 14 && (this.uvs = null);
                }
                var X = lt.prototype;
                return X.findSubtable = function(R, z) {
                  for (var j = s(z), ft; !(ft = j()).done; )
                    for (var mt = ft.value, pt = mt[0], dt = mt[1], Nt = s(R.tables), Yt; !(Yt = Nt()).done; ) {
                      var se = Yt.value;
                      if (se.platformID === pt && se.encodingID === dt)
                        return se.table;
                    }
                  return null;
                }, X.lookup = function(R, z) {
                  if (this.encoding) {
                    var j = hs.encode(String.fromCodePoint(R), this.encoding);
                    R = 0;
                    for (var ft = 0; ft < j.length; ft++)
                      R = R << 8 | j[ft];
                  } else if (z) {
                    var mt = this.getVariationSelector(R, z);
                    if (mt)
                      return mt;
                  }
                  var pt = this.cmap;
                  switch (pt.version) {
                    case 0:
                      return pt.codeMap.get(R) || 0;
                    case 4: {
                      for (var dt = 0, Nt = pt.segCount - 1; dt <= Nt; ) {
                        var Yt = dt + Nt >> 1;
                        if (R < pt.startCode.get(Yt))
                          Nt = Yt - 1;
                        else if (R > pt.endCode.get(Yt))
                          dt = Yt + 1;
                        else {
                          var se = pt.idRangeOffset.get(Yt), te = void 0;
                          if (se === 0)
                            te = R + pt.idDelta.get(Yt);
                          else {
                            var ce = se / 2 + (R - pt.startCode.get(Yt)) - (pt.segCount - Yt);
                            te = pt.glyphIndexArray.get(ce) || 0, te !== 0 && (te += pt.idDelta.get(Yt));
                          }
                          return te & 65535;
                        }
                      }
                      return 0;
                    }
                    case 8:
                      throw new Error("TODO: cmap format 8");
                    case 6:
                    case 10:
                      return pt.glyphIndices.get(R - pt.firstCode) || 0;
                    case 12:
                    case 13: {
                      for (var ve = 0, De = pt.nGroups - 1; ve <= De; ) {
                        var Ge = ve + De >> 1, rr = pt.groups.get(Ge);
                        if (R < rr.startCharCode)
                          De = Ge - 1;
                        else if (R > rr.endCharCode)
                          ve = Ge + 1;
                        else
                          return pt.version === 12 ? rr.glyphID + (R - rr.startCharCode) : rr.glyphID;
                      }
                      return 0;
                    }
                    case 14:
                      throw new Error("TODO: cmap format 14");
                    default:
                      throw new Error("Unknown cmap format ".concat(pt.version));
                  }
                }, X.getVariationSelector = function(R, z) {
                  if (!this.uvs)
                    return 0;
                  var j = this.uvs.varSelectors.toArray(), ft = fo(j, function(pt) {
                    return z - pt.varSelector;
                  }), mt = j[ft];
                  return ft !== -1 && mt.defaultUVS && (ft = fo(mt.defaultUVS, function(pt) {
                    return R < pt.startUnicodeValue ? -1 : R > pt.startUnicodeValue + pt.additionalCount ? 1 : 0;
                  })), ft !== -1 && mt.nonDefaultUVS && (ft = fo(mt.nonDefaultUVS, function(pt) {
                    return R - pt.unicodeValue;
                  }), ft !== -1) ? mt.nonDefaultUVS[ft].glyphID : 0;
                }, X.getCharacterSet = function() {
                  var R = this.cmap;
                  switch (R.version) {
                    case 0:
                      return ri(0, R.codeMap.length);
                    case 4: {
                      for (var z = [], j = R.endCode.toArray(), ft = 0; ft < j.length; ft++) {
                        var mt = j[ft] + 1, pt = R.startCode.get(ft);
                        z.push.apply(z, ri(pt, mt));
                      }
                      return z;
                    }
                    case 8:
                      throw new Error("TODO: cmap format 8");
                    case 6:
                    case 10:
                      return ri(R.firstCode, R.firstCode + R.glyphIndices.length);
                    case 12:
                    case 13: {
                      for (var dt = [], Nt = s(R.groups.toArray()), Yt; !(Yt = Nt()).done; ) {
                        var se = Yt.value;
                        dt.push.apply(dt, ri(se.startCharCode, se.endCharCode + 1));
                      }
                      return dt;
                    }
                    case 14:
                      throw new Error("TODO: cmap format 14");
                    default:
                      throw new Error("Unknown cmap format ".concat(R.version));
                  }
                }, X.codePointsForGlyph = function(R) {
                  var z = this.cmap;
                  switch (z.version) {
                    case 0: {
                      for (var j = [], ft = 0; ft < 256; ft++)
                        z.codeMap.get(ft) === R && j.push(ft);
                      return j;
                    }
                    case 4: {
                      for (var mt = [], pt = 0; pt < z.segCount; pt++)
                        for (var dt = z.endCode.get(pt), Nt = z.startCode.get(pt), Yt = z.idRangeOffset.get(pt), se = z.idDelta.get(pt), te = Nt; te <= dt; te++) {
                          var ce = 0;
                          if (Yt === 0)
                            ce = te + se;
                          else {
                            var ve = Yt / 2 + (te - Nt) - (z.segCount - pt);
                            ce = z.glyphIndexArray.get(ve) || 0, ce !== 0 && (ce += se);
                          }
                          ce === R && mt.push(te);
                        }
                      return mt;
                    }
                    case 12: {
                      for (var De = [], Ge = s(z.groups.toArray()), rr; !(rr = Ge()).done; ) {
                        var Ke = rr.value;
                        R >= Ke.glyphID && R <= Ke.glyphID + (Ke.endCharCode - Ke.startCharCode) && De.push(Ke.startCharCode + (R - Ke.glyphID));
                      }
                      return De;
                    }
                    case 13: {
                      for (var pr = [], cr = s(z.groups.toArray()), yr; !(yr = cr()).done; ) {
                        var Ar = yr.value;
                        R === Ar.glyphID && pr.push.apply(pr, ri(Ar.startCharCode, Ar.endCharCode + 1));
                      }
                      return pr;
                    }
                    default:
                      throw new Error("Unknown cmap format ".concat(z.version));
                  }
                }, lt;
              }(), N(Ra.prototype, "getCharacterSet", [G], Object.getOwnPropertyDescriptor(Ra.prototype, "getCharacterSet"), Ra.prototype), N(Ra.prototype, "codePointsForGlyph", [G], Object.getOwnPropertyDescriptor(Ra.prototype, "codePointsForGlyph"), Ra.prototype), Ra), Lu = /* @__PURE__ */ function() {
                function lt(at) {
                  this.kern = at.kern;
                }
                var X = lt.prototype;
                return X.process = function(R, z) {
                  for (var j = 0; j < R.length - 1; j++) {
                    var ft = R[j].id, mt = R[j + 1].id;
                    z[j].xAdvance += this.getKerning(ft, mt);
                  }
                }, X.getKerning = function(R, z) {
                  for (var j = 0, ft = s(this.kern.tables), mt; !(mt = ft()).done; ) {
                    var pt = mt.value;
                    if (!pt.coverage.crossStream) {
                      switch (pt.version) {
                        case 0:
                          if (!pt.coverage.horizontal)
                            continue;
                          break;
                        case 1:
                          if (pt.coverage.vertical || pt.coverage.variation)
                            continue;
                          break;
                        default:
                          throw new Error("Unsupported kerning table version ".concat(pt.version));
                      }
                      var dt = 0, Nt = pt.subtable;
                      switch (pt.format) {
                        case 0:
                          var Yt = fo(Nt.pairs, function(ve) {
                            return R - ve.left || z - ve.right;
                          });
                          Yt >= 0 && (dt = Nt.pairs[Yt].value);
                          break;
                        case 2:
                          var se = 0, te = 0;
                          R >= Nt.leftTable.firstGlyph && R < Nt.leftTable.firstGlyph + Nt.leftTable.nGlyphs ? se = Nt.leftTable.offsets[R - Nt.leftTable.firstGlyph] : se = Nt.array.off, z >= Nt.rightTable.firstGlyph && z < Nt.rightTable.firstGlyph + Nt.rightTable.nGlyphs && (te = Nt.rightTable.offsets[z - Nt.rightTable.firstGlyph]);
                          var ce = (se + te - Nt.array.off) / 2;
                          dt = Nt.array.values.get(ce);
                          break;
                        case 3:
                          if (R >= Nt.glyphCount || z >= Nt.glyphCount)
                            return 0;
                          dt = Nt.kernValue[Nt.kernIndex[Nt.leftClass[R] * Nt.rightClassCount + Nt.rightClass[z]]];
                          break;
                        default:
                          throw new Error("Unsupported kerning sub-table format ".concat(pt.format));
                      }
                      pt.coverage.override ? j = dt : j += dt;
                    }
                  }
                  return j;
                }, lt;
              }(), Nu = /* @__PURE__ */ function() {
                function lt(at) {
                  this.font = at;
                }
                var X = lt.prototype;
                return X.positionGlyphs = function(R, z) {
                  for (var j = 0, ft = 0, mt = 0; mt < R.length; mt++) {
                    var pt = R[mt];
                    pt.isMark ? ft = mt : (j !== ft && this.positionCluster(R, z, j, ft), j = ft = mt);
                  }
                  return j !== ft && this.positionCluster(R, z, j, ft), z;
                }, X.positionCluster = function(R, z, j, ft) {
                  var mt = R[j], pt = mt.cbox.copy();
                  mt.codePoints.length > 1 && (pt.minX += (mt.codePoints.length - 1) * pt.width / mt.codePoints.length);
                  for (var dt = -z[j].xAdvance, Nt = 0, Yt = this.font.unitsPerEm / 16, se = j + 1; se <= ft; se++) {
                    var te = R[se], ce = te.cbox, ve = z[se], De = this.getCombiningClass(te.codePoints[0]);
                    if (De !== "Not_Reordered") {
                      switch (ve.xOffset = ve.yOffset = 0, De) {
                        case "Double_Above":
                        case "Double_Below":
                          ve.xOffset += pt.minX - ce.width / 2 - ce.minX;
                          break;
                        case "Attached_Below_Left":
                        case "Below_Left":
                        case "Above_Left":
                          ve.xOffset += pt.minX - ce.minX;
                          break;
                        case "Attached_Above_Right":
                        case "Below_Right":
                        case "Above_Right":
                          ve.xOffset += pt.maxX - ce.width - ce.minX;
                          break;
                        default:
                          ve.xOffset += pt.minX + (pt.width - ce.width) / 2 - ce.minX;
                      }
                      switch (De) {
                        case "Double_Below":
                        case "Below_Left":
                        case "Below":
                        case "Below_Right":
                        case "Attached_Below_Left":
                        case "Attached_Below":
                          (De === "Attached_Below_Left" || De === "Attached_Below") && (pt.minY += Yt), ve.yOffset = -pt.minY - ce.maxY, pt.minY += ce.height;
                          break;
                        case "Double_Above":
                        case "Above_Left":
                        case "Above":
                        case "Above_Right":
                        case "Attached_Above":
                        case "Attached_Above_Right":
                          (De === "Attached_Above" || De === "Attached_Above_Right") && (pt.maxY += Yt), ve.yOffset = pt.maxY - ce.minY, pt.maxY += ce.height;
                          break;
                      }
                      ve.xAdvance = ve.yAdvance = 0, ve.xOffset += dt, ve.yOffset += Nt;
                    } else
                      dt -= ve.xAdvance, Nt -= ve.yAdvance;
                  }
                }, X.getCombiningClass = function(R) {
                  var z = P.getCombiningClass(R);
                  if ((R & -256) === 3584) {
                    if (z === "Not_Reordered")
                      switch (R) {
                        case 3633:
                        case 3636:
                        case 3637:
                        case 3638:
                        case 3639:
                        case 3655:
                        case 3660:
                        case 3645:
                        case 3662:
                          return "Above_Right";
                        case 3761:
                        case 3764:
                        case 3765:
                        case 3766:
                        case 3767:
                        case 3771:
                        case 3788:
                        case 3789:
                          return "Above";
                        case 3772:
                          return "Below";
                      }
                    else if (R === 3642)
                      return "Below_Right";
                  }
                  switch (z) {
                    case "CCC10":
                    case "CCC11":
                    case "CCC12":
                    case "CCC13":
                    case "CCC14":
                    case "CCC15":
                    case "CCC16":
                    case "CCC17":
                    case "CCC18":
                    case "CCC20":
                    case "CCC22":
                      return "Below";
                    case "CCC23":
                      return "Attached_Above";
                    case "CCC24":
                      return "Above_Right";
                    case "CCC25":
                    case "CCC19":
                      return "Above_Left";
                    case "CCC26":
                      return "Above";
                    case "CCC21":
                      break;
                    case "CCC27":
                    case "CCC28":
                    case "CCC30":
                    case "CCC31":
                    case "CCC33":
                    case "CCC34":
                    case "CCC35":
                    case "CCC36":
                      return "Above";
                    case "CCC29":
                    case "CCC32":
                      return "Below";
                    case "CCC103":
                      return "Below_Right";
                    case "CCC107":
                      return "Above_Right";
                    case "CCC118":
                      return "Below";
                    case "CCC122":
                      return "Above";
                    case "CCC129":
                    case "CCC132":
                      return "Below";
                    case "CCC130":
                      return "Above";
                  }
                  return z;
                }, lt;
              }(), ni = /* @__PURE__ */ function() {
                function lt(at, R, z, j) {
                  at === void 0 && (at = 1 / 0), R === void 0 && (R = 1 / 0), z === void 0 && (z = -1 / 0), j === void 0 && (j = -1 / 0), this.minX = at, this.minY = R, this.maxX = z, this.maxY = j;
                }
                var X = lt.prototype;
                return X.addPoint = function(R, z) {
                  Math.abs(R) !== 1 / 0 && (R < this.minX && (this.minX = R), R > this.maxX && (this.maxX = R)), Math.abs(z) !== 1 / 0 && (z < this.minY && (this.minY = z), z > this.maxY && (this.maxY = z));
                }, X.copy = function() {
                  return new lt(this.minX, this.minY, this.maxX, this.maxY);
                }, o(lt, [{
                  key: "width",
                  get: function() {
                    return this.maxX - this.minX;
                  }
                  /**
                   * The height of the bounding box
                   * @type {number}
                   */
                }, {
                  key: "height",
                  get: function() {
                    return this.maxY - this.minY;
                  }
                }]);
              }(), ai = {
                Caucasian_Albanian: "aghb",
                Arabic: "arab",
                Imperial_Aramaic: "armi",
                Armenian: "armn",
                Avestan: "avst",
                Balinese: "bali",
                Bamum: "bamu",
                Bassa_Vah: "bass",
                Batak: "batk",
                Bengali: ["bng2", "beng"],
                Bopomofo: "bopo",
                Brahmi: "brah",
                Braille: "brai",
                Buginese: "bugi",
                Buhid: "buhd",
                Chakma: "cakm",
                Canadian_Aboriginal: "cans",
                Carian: "cari",
                Cham: "cham",
                Cherokee: "cher",
                Coptic: "copt",
                Cypriot: "cprt",
                Cyrillic: "cyrl",
                Devanagari: ["dev2", "deva"],
                Deseret: "dsrt",
                Duployan: "dupl",
                Egyptian_Hieroglyphs: "egyp",
                Elbasan: "elba",
                Ethiopic: "ethi",
                Georgian: "geor",
                Glagolitic: "glag",
                Gothic: "goth",
                Grantha: "gran",
                Greek: "grek",
                Gujarati: ["gjr2", "gujr"],
                Gurmukhi: ["gur2", "guru"],
                Hangul: "hang",
                Han: "hani",
                Hanunoo: "hano",
                Hebrew: "hebr",
                Hiragana: "hira",
                Pahawh_Hmong: "hmng",
                Katakana_Or_Hiragana: "hrkt",
                Old_Italic: "ital",
                Javanese: "java",
                Kayah_Li: "kali",
                Katakana: "kana",
                Kharoshthi: "khar",
                Khmer: "khmr",
                Khojki: "khoj",
                Kannada: ["knd2", "knda"],
                Kaithi: "kthi",
                Tai_Tham: "lana",
                Lao: "lao ",
                Latin: "latn",
                Lepcha: "lepc",
                Limbu: "limb",
                Linear_A: "lina",
                Linear_B: "linb",
                Lisu: "lisu",
                Lycian: "lyci",
                Lydian: "lydi",
                Mahajani: "mahj",
                Mandaic: "mand",
                Manichaean: "mani",
                Mende_Kikakui: "mend",
                Meroitic_Cursive: "merc",
                Meroitic_Hieroglyphs: "mero",
                Malayalam: ["mlm2", "mlym"],
                Modi: "modi",
                Mongolian: "mong",
                Mro: "mroo",
                Meetei_Mayek: "mtei",
                Myanmar: ["mym2", "mymr"],
                Old_North_Arabian: "narb",
                Nabataean: "nbat",
                Nko: "nko ",
                Ogham: "ogam",
                Ol_Chiki: "olck",
                Old_Turkic: "orkh",
                Oriya: ["ory2", "orya"],
                Osmanya: "osma",
                Palmyrene: "palm",
                Pau_Cin_Hau: "pauc",
                Old_Permic: "perm",
                Phags_Pa: "phag",
                Inscriptional_Pahlavi: "phli",
                Psalter_Pahlavi: "phlp",
                Phoenician: "phnx",
                Miao: "plrd",
                Inscriptional_Parthian: "prti",
                Rejang: "rjng",
                Runic: "runr",
                Samaritan: "samr",
                Old_South_Arabian: "sarb",
                Saurashtra: "saur",
                Shavian: "shaw",
                Sharada: "shrd",
                Siddham: "sidd",
                Khudawadi: "sind",
                Sinhala: "sinh",
                Sora_Sompeng: "sora",
                Sundanese: "sund",
                Syloti_Nagri: "sylo",
                Syriac: "syrc",
                Tagbanwa: "tagb",
                Takri: "takr",
                Tai_Le: "tale",
                New_Tai_Lue: "talu",
                Tamil: ["tml2", "taml"],
                Tai_Viet: "tavt",
                Telugu: ["tel2", "telu"],
                Tifinagh: "tfng",
                Tagalog: "tglg",
                Thaana: "thaa",
                Thai: "thai",
                Tibetan: "tibt",
                Tirhuta: "tirh",
                Ugaritic: "ugar",
                Vai: "vai ",
                Warang_Citi: "wara",
                Old_Persian: "xpeo",
                Cuneiform: "xsux",
                Yi: "yi  ",
                Inherited: "zinh",
                Common: "zyyy",
                Unknown: "zzzz"
              }, ds = {};
              for (var vs in ai) {
                var ps = ai[vs];
                if (Array.isArray(ps))
                  for (var Mu = s(ps), S0; !(S0 = Mu()).done; ) {
                    var ku = S0.value;
                    ds[ku] = vs;
                  }
                else
                  ds[ps] = vs;
              }
              function Uu(lt) {
                return ds[lt];
              }
              function zu(lt) {
                for (var X = lt.length, at = 0; at < X; ) {
                  var R = lt.charCodeAt(at++);
                  if (55296 <= R && R <= 56319 && at < X) {
                    var z = lt.charCodeAt(at);
                    56320 <= z && z <= 57343 && (at++, R = ((R & 1023) << 10) + (z & 1023) + 65536);
                  }
                  var j = P.getScript(R);
                  if (j !== "Common" && j !== "Inherited" && j !== "Unknown")
                    return ai[j];
                }
                return ai.Unknown;
              }
              function Wu(lt) {
                for (var X = 0; X < lt.length; X++) {
                  var at = lt[X], R = P.getScript(at);
                  if (R !== "Common" && R !== "Inherited" && R !== "Unknown")
                    return ai[R];
                }
                return ai.Unknown;
              }
              var Hu = {
                arab: !0,
                // Arabic
                hebr: !0,
                // Hebrew
                syrc: !0,
                // Syriac
                thaa: !0,
                // Thaana
                cprt: !0,
                // Cypriot Syllabary
                khar: !0,
                // Kharosthi
                phnx: !0,
                // Phoenician
                "nko ": !0,
                // N'Ko
                lydi: !0,
                // Lydian
                avst: !0,
                // Avestan
                armi: !0,
                // Imperial Aramaic
                phli: !0,
                // Inscriptional Pahlavi
                prti: !0,
                // Inscriptional Parthian
                sarb: !0,
                // Old South Arabian
                orkh: !0,
                // Old Turkic, Orkhon Runic
                samr: !0,
                // Samaritan
                mand: !0,
                // Mandaic, Mandaean
                merc: !0,
                // Meroitic Cursive
                mero: !0,
                // Meroitic Hieroglyphs
                // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)
                mani: !0,
                // Manichaean
                mend: !0,
                // Mende Kikakui
                nbat: !0,
                // Nabataean
                narb: !0,
                // Old North Arabian
                palm: !0,
                // Palmyrene
                phlp: !0
                // Psalter Pahlavi
              };
              function C0(lt) {
                return Hu[lt] ? "rtl" : "ltr";
              }
              for (var ju = /* @__PURE__ */ function() {
                function lt(X, at, R, z, j) {
                  if (this.glyphs = X, this.positions = null, this.script = R, this.language = z || null, this.direction = j || C0(R), this.features = {}, Array.isArray(at))
                    for (var ft = s(at), mt; !(mt = ft()).done; ) {
                      var pt = mt.value;
                      this.features[pt] = !0;
                    }
                  else
                    typeof at == "object" && (this.features = at);
                }
                return o(lt, [{
                  key: "advanceWidth",
                  get: function() {
                    for (var at = 0, R = s(this.positions), z; !(z = R()).done; ) {
                      var j = z.value;
                      at += j.xAdvance;
                    }
                    return at;
                  }
                  /**
                   * The total advance height of the run.
                   * @type {number}
                   */
                }, {
                  key: "advanceHeight",
                  get: function() {
                    for (var at = 0, R = s(this.positions), z; !(z = R()).done; ) {
                      var j = z.value;
                      at += j.yAdvance;
                    }
                    return at;
                  }
                  /**
                   * The bounding box containing all glyphs in the run.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    for (var at = new ni(), R = 0, z = 0, j = 0; j < this.glyphs.length; j++) {
                      var ft = this.glyphs[j], mt = this.positions[j], pt = ft.bbox;
                      at.addPoint(pt.minX + R + mt.xOffset, pt.minY + z + mt.yOffset), at.addPoint(pt.maxX + R + mt.xOffset, pt.maxY + z + mt.yOffset), R += mt.xAdvance, z += mt.yAdvance;
                    }
                    return at;
                  }
                }]);
              }(), Gu = function(X, at, R, z) {
                X === void 0 && (X = 0), at === void 0 && (at = 0), R === void 0 && (R = 0), z === void 0 && (z = 0), this.xAdvance = X, this.yAdvance = at, this.xOffset = R, this.yOffset = z;
              }, Xa = {
                allTypographicFeatures: {
                  code: 0,
                  exclusive: !1,
                  allTypeFeatures: 0
                },
                ligatures: {
                  code: 1,
                  exclusive: !1,
                  requiredLigatures: 0,
                  commonLigatures: 2,
                  rareLigatures: 4,
                  // logos: 6
                  rebusPictures: 8,
                  diphthongLigatures: 10,
                  squaredLigatures: 12,
                  abbrevSquaredLigatures: 14,
                  symbolLigatures: 16,
                  contextualLigatures: 18,
                  historicalLigatures: 20
                },
                cursiveConnection: {
                  code: 2,
                  exclusive: !0,
                  unconnected: 0,
                  partiallyConnected: 1,
                  cursive: 2
                },
                letterCase: {
                  code: 3,
                  exclusive: !0
                },
                // upperAndLowerCase: 0          # deprecated
                // allCaps: 1                    # deprecated
                // allLowerCase: 2               # deprecated
                // smallCaps: 3                  # deprecated
                // initialCaps: 4                # deprecated
                // initialCapsAndSmallCaps: 5    # deprecated
                verticalSubstitution: {
                  code: 4,
                  exclusive: !1,
                  substituteVerticalForms: 0
                },
                linguisticRearrangement: {
                  code: 5,
                  exclusive: !1,
                  linguisticRearrangement: 0
                },
                numberSpacing: {
                  code: 6,
                  exclusive: !0,
                  monospacedNumbers: 0,
                  proportionalNumbers: 1,
                  thirdWidthNumbers: 2,
                  quarterWidthNumbers: 3
                },
                smartSwash: {
                  code: 8,
                  exclusive: !1,
                  wordInitialSwashes: 0,
                  wordFinalSwashes: 2,
                  // lineInitialSwashes: 4
                  // lineFinalSwashes: 6
                  nonFinalSwashes: 8
                },
                diacritics: {
                  code: 9,
                  exclusive: !0,
                  showDiacritics: 0,
                  hideDiacritics: 1,
                  decomposeDiacritics: 2
                },
                verticalPosition: {
                  code: 10,
                  exclusive: !0,
                  normalPosition: 0,
                  superiors: 1,
                  inferiors: 2,
                  ordinals: 3,
                  scientificInferiors: 4
                },
                fractions: {
                  code: 11,
                  exclusive: !0,
                  noFractions: 0,
                  verticalFractions: 1,
                  diagonalFractions: 2
                },
                overlappingCharacters: {
                  code: 13,
                  exclusive: !1,
                  preventOverlap: 0
                },
                typographicExtras: {
                  code: 14,
                  exclusive: !1,
                  // hyphensToEmDash: 0
                  // hyphenToEnDash: 2
                  slashedZero: 4
                },
                // formInterrobang: 6
                // smartQuotes: 8
                // periodsToEllipsis: 10
                mathematicalExtras: {
                  code: 15,
                  exclusive: !1,
                  // hyphenToMinus: 0
                  // asteristoMultiply: 2
                  // slashToDivide: 4
                  // inequalityLigatures: 6
                  // exponents: 8
                  mathematicalGreek: 10
                },
                ornamentSets: {
                  code: 16,
                  exclusive: !0,
                  noOrnaments: 0,
                  dingbats: 1,
                  piCharacters: 2,
                  fleurons: 3,
                  decorativeBorders: 4,
                  internationalSymbols: 5,
                  mathSymbols: 6
                },
                characterAlternatives: {
                  code: 17,
                  exclusive: !0,
                  noAlternates: 0
                },
                // user defined options
                designComplexity: {
                  code: 18,
                  exclusive: !0,
                  designLevel1: 0,
                  designLevel2: 1,
                  designLevel3: 2,
                  designLevel4: 3,
                  designLevel5: 4
                },
                styleOptions: {
                  code: 19,
                  exclusive: !0,
                  noStyleOptions: 0,
                  displayText: 1,
                  engravedText: 2,
                  illuminatedCaps: 3,
                  titlingCaps: 4,
                  tallCaps: 5
                },
                characterShape: {
                  code: 20,
                  exclusive: !0,
                  traditionalCharacters: 0,
                  simplifiedCharacters: 1,
                  JIS1978Characters: 2,
                  JIS1983Characters: 3,
                  JIS1990Characters: 4,
                  traditionalAltOne: 5,
                  traditionalAltTwo: 6,
                  traditionalAltThree: 7,
                  traditionalAltFour: 8,
                  traditionalAltFive: 9,
                  expertCharacters: 10,
                  JIS2004Characters: 11,
                  hojoCharacters: 12,
                  NLCCharacters: 13,
                  traditionalNamesCharacters: 14
                },
                numberCase: {
                  code: 21,
                  exclusive: !0,
                  lowerCaseNumbers: 0,
                  upperCaseNumbers: 1
                },
                textSpacing: {
                  code: 22,
                  exclusive: !0,
                  proportionalText: 0,
                  monospacedText: 1,
                  halfWidthText: 2,
                  thirdWidthText: 3,
                  quarterWidthText: 4,
                  altProportionalText: 5,
                  altHalfWidthText: 6
                },
                transliteration: {
                  code: 23,
                  exclusive: !0,
                  noTransliteration: 0
                },
                // hanjaToHangul: 1
                // hiraganaToKatakana: 2
                // katakanaToHiragana: 3
                // kanaToRomanization: 4
                // romanizationToHiragana: 5
                // romanizationToKatakana: 6
                // hanjaToHangulAltOne: 7
                // hanjaToHangulAltTwo: 8
                // hanjaToHangulAltThree: 9
                annotation: {
                  code: 24,
                  exclusive: !0,
                  noAnnotation: 0,
                  boxAnnotation: 1,
                  roundedBoxAnnotation: 2,
                  circleAnnotation: 3,
                  invertedCircleAnnotation: 4,
                  parenthesisAnnotation: 5,
                  periodAnnotation: 6,
                  romanNumeralAnnotation: 7,
                  diamondAnnotation: 8,
                  invertedBoxAnnotation: 9,
                  invertedRoundedBoxAnnotation: 10
                },
                kanaSpacing: {
                  code: 25,
                  exclusive: !0,
                  fullWidthKana: 0,
                  proportionalKana: 1
                },
                ideographicSpacing: {
                  code: 26,
                  exclusive: !0,
                  fullWidthIdeographs: 0,
                  proportionalIdeographs: 1,
                  halfWidthIdeographs: 2
                },
                unicodeDecomposition: {
                  code: 27,
                  exclusive: !1,
                  canonicalComposition: 0,
                  compatibilityComposition: 2,
                  transcodingComposition: 4
                },
                rubyKana: {
                  code: 28,
                  exclusive: !1,
                  // noRubyKana: 0     # deprecated - use rubyKanaOff instead
                  // rubyKana: 1     # deprecated - use rubyKanaOn instead
                  rubyKana: 2
                },
                CJKSymbolAlternatives: {
                  code: 29,
                  exclusive: !0,
                  noCJKSymbolAlternatives: 0,
                  CJKSymbolAltOne: 1,
                  CJKSymbolAltTwo: 2,
                  CJKSymbolAltThree: 3,
                  CJKSymbolAltFour: 4,
                  CJKSymbolAltFive: 5
                },
                ideographicAlternatives: {
                  code: 30,
                  exclusive: !0,
                  noIdeographicAlternatives: 0,
                  ideographicAltOne: 1,
                  ideographicAltTwo: 2,
                  ideographicAltThree: 3,
                  ideographicAltFour: 4,
                  ideographicAltFive: 5
                },
                CJKVerticalRomanPlacement: {
                  code: 31,
                  exclusive: !0,
                  CJKVerticalRomanCentered: 0,
                  CJKVerticalRomanHBaseline: 1
                },
                italicCJKRoman: {
                  code: 32,
                  exclusive: !1,
                  // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead
                  // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead
                  CJKItalicRoman: 2
                },
                caseSensitiveLayout: {
                  code: 33,
                  exclusive: !1,
                  caseSensitiveLayout: 0,
                  caseSensitiveSpacing: 2
                },
                alternateKana: {
                  code: 34,
                  exclusive: !1,
                  alternateHorizKana: 0,
                  alternateVertKana: 2
                },
                stylisticAlternatives: {
                  code: 35,
                  exclusive: !1,
                  noStylisticAlternates: 0,
                  stylisticAltOne: 2,
                  stylisticAltTwo: 4,
                  stylisticAltThree: 6,
                  stylisticAltFour: 8,
                  stylisticAltFive: 10,
                  stylisticAltSix: 12,
                  stylisticAltSeven: 14,
                  stylisticAltEight: 16,
                  stylisticAltNine: 18,
                  stylisticAltTen: 20,
                  stylisticAltEleven: 22,
                  stylisticAltTwelve: 24,
                  stylisticAltThirteen: 26,
                  stylisticAltFourteen: 28,
                  stylisticAltFifteen: 30,
                  stylisticAltSixteen: 32,
                  stylisticAltSeventeen: 34,
                  stylisticAltEighteen: 36,
                  stylisticAltNineteen: 38,
                  stylisticAltTwenty: 40
                },
                contextualAlternates: {
                  code: 36,
                  exclusive: !1,
                  contextualAlternates: 0,
                  swashAlternates: 2,
                  contextualSwashAlternates: 4
                },
                lowerCase: {
                  code: 37,
                  exclusive: !0,
                  defaultLowerCase: 0,
                  lowerCaseSmallCaps: 1,
                  lowerCasePetiteCaps: 2
                },
                upperCase: {
                  code: 38,
                  exclusive: !0,
                  defaultUpperCase: 0,
                  upperCaseSmallCaps: 1,
                  upperCasePetiteCaps: 2
                },
                languageTag: {
                  // indices into ltag table
                  code: 39,
                  exclusive: !0
                },
                CJKRomanSpacing: {
                  code: 103,
                  exclusive: !0,
                  halfWidthCJKRoman: 0,
                  proportionalCJKRoman: 1,
                  defaultCJKRoman: 2,
                  fullWidthCJKRoman: 3
                }
              }, Me = function(X, at) {
                return [Xa[X].code, Xa[X][at]];
              }, lo = {
                rlig: Me("ligatures", "requiredLigatures"),
                clig: Me("ligatures", "contextualLigatures"),
                dlig: Me("ligatures", "rareLigatures"),
                hlig: Me("ligatures", "historicalLigatures"),
                liga: Me("ligatures", "commonLigatures"),
                hist: Me("ligatures", "historicalLigatures"),
                // ??
                smcp: Me("lowerCase", "lowerCaseSmallCaps"),
                pcap: Me("lowerCase", "lowerCasePetiteCaps"),
                frac: Me("fractions", "diagonalFractions"),
                dnom: Me("fractions", "diagonalFractions"),
                // ??
                numr: Me("fractions", "diagonalFractions"),
                // ??
                afrc: Me("fractions", "verticalFractions"),
                // aalt
                // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?
                // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?
                // unic, vatu, vhal, vjmo, vpal, vrt2
                // dist -> trak table?
                // kern, vkrn -> kern table
                // lfbd + opbd + rtbd -> opbd table?
                // mark, mkmk -> acnt table?
                // locl -> languageTag + ltag table
                case: Me("caseSensitiveLayout", "caseSensitiveLayout"),
                // also caseSensitiveSpacing
                ccmp: Me("unicodeDecomposition", "canonicalComposition"),
                // compatibilityComposition?
                cpct: Me("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                // guess..., probably not given below
                valt: Me("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                swsh: Me("contextualAlternates", "swashAlternates"),
                cswh: Me("contextualAlternates", "contextualSwashAlternates"),
                curs: Me("cursiveConnection", "cursive"),
                // ??
                c2pc: Me("upperCase", "upperCasePetiteCaps"),
                c2sc: Me("upperCase", "upperCaseSmallCaps"),
                init: Me("smartSwash", "wordInitialSwashes"),
                // ??
                fin2: Me("smartSwash", "wordFinalSwashes"),
                // ??
                medi: Me("smartSwash", "nonFinalSwashes"),
                // ??
                med2: Me("smartSwash", "nonFinalSwashes"),
                // ??
                fin3: Me("smartSwash", "wordFinalSwashes"),
                // ??
                fina: Me("smartSwash", "wordFinalSwashes"),
                // ??
                pkna: Me("kanaSpacing", "proportionalKana"),
                half: Me("textSpacing", "halfWidthText"),
                // also HalfWidthCJKRoman, HalfWidthIdeographs?
                halt: Me("textSpacing", "altHalfWidthText"),
                hkna: Me("alternateKana", "alternateHorizKana"),
                vkna: Me("alternateKana", "alternateVertKana"),
                // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated
                ital: Me("italicCJKRoman", "CJKItalicRoman"),
                lnum: Me("numberCase", "upperCaseNumbers"),
                onum: Me("numberCase", "lowerCaseNumbers"),
                mgrk: Me("mathematicalExtras", "mathematicalGreek"),
                // nalt: not enough info. what type of annotation?
                // ornm: ditto, which ornament style?
                calt: Me("contextualAlternates", "contextualAlternates"),
                // or more?
                vrt2: Me("verticalSubstitution", "substituteVerticalForms"),
                // oh... below?
                vert: Me("verticalSubstitution", "substituteVerticalForms"),
                tnum: Me("numberSpacing", "monospacedNumbers"),
                pnum: Me("numberSpacing", "proportionalNumbers"),
                sups: Me("verticalPosition", "superiors"),
                subs: Me("verticalPosition", "inferiors"),
                ordn: Me("verticalPosition", "ordinals"),
                pwid: Me("textSpacing", "proportionalText"),
                hwid: Me("textSpacing", "halfWidthText"),
                qwid: Me("textSpacing", "quarterWidthText"),
                // also QuarterWidthNumbers?
                twid: Me("textSpacing", "thirdWidthText"),
                // also ThirdWidthNumbers?
                fwid: Me("textSpacing", "proportionalText"),
                //??
                palt: Me("textSpacing", "altProportionalText"),
                trad: Me("characterShape", "traditionalCharacters"),
                smpl: Me("characterShape", "simplifiedCharacters"),
                jp78: Me("characterShape", "JIS1978Characters"),
                jp83: Me("characterShape", "JIS1983Characters"),
                jp90: Me("characterShape", "JIS1990Characters"),
                jp04: Me("characterShape", "JIS2004Characters"),
                expt: Me("characterShape", "expertCharacters"),
                hojo: Me("characterShape", "hojoCharacters"),
                nlck: Me("characterShape", "NLCCharacters"),
                tnam: Me("characterShape", "traditionalNamesCharacters"),
                ruby: Me("rubyKana", "rubyKana"),
                titl: Me("styleOptions", "titlingCaps"),
                zero: Me("typographicExtras", "slashedZero"),
                ss01: Me("stylisticAlternatives", "stylisticAltOne"),
                ss02: Me("stylisticAlternatives", "stylisticAltTwo"),
                ss03: Me("stylisticAlternatives", "stylisticAltThree"),
                ss04: Me("stylisticAlternatives", "stylisticAltFour"),
                ss05: Me("stylisticAlternatives", "stylisticAltFive"),
                ss06: Me("stylisticAlternatives", "stylisticAltSix"),
                ss07: Me("stylisticAlternatives", "stylisticAltSeven"),
                ss08: Me("stylisticAlternatives", "stylisticAltEight"),
                ss09: Me("stylisticAlternatives", "stylisticAltNine"),
                ss10: Me("stylisticAlternatives", "stylisticAltTen"),
                ss11: Me("stylisticAlternatives", "stylisticAltEleven"),
                ss12: Me("stylisticAlternatives", "stylisticAltTwelve"),
                ss13: Me("stylisticAlternatives", "stylisticAltThirteen"),
                ss14: Me("stylisticAlternatives", "stylisticAltFourteen"),
                ss15: Me("stylisticAlternatives", "stylisticAltFifteen"),
                ss16: Me("stylisticAlternatives", "stylisticAltSixteen"),
                ss17: Me("stylisticAlternatives", "stylisticAltSeventeen"),
                ss18: Me("stylisticAlternatives", "stylisticAltEighteen"),
                ss19: Me("stylisticAlternatives", "stylisticAltNineteen"),
                ss20: Me("stylisticAlternatives", "stylisticAltTwenty")
              }, uo = 1; uo <= 99; uo++)
                lo["cv".concat("00".concat(uo).slice(-2))] = [Xa.characterAlternatives.code, uo];
              var Za = {};
              for (var E0 in lo) {
                var co = lo[E0];
                Za[co[0]] == null && (Za[co[0]] = {}), Za[co[0]][co[1]] = E0;
              }
              function Vu(lt) {
                var X = {};
                for (var at in lt) {
                  var R = void 0;
                  (R = lo[at]) && (X[R[0]] == null && (X[R[0]] = {}), X[R[0]][R[1]] = lt[at]);
                }
                return X;
              }
              function T0(lt) {
                var X = lt[0], at = lt[1];
                if (isNaN(X))
                  var R = Xa[X] && Xa[X].code;
                else
                  var R = X;
                if (isNaN(at))
                  var z = Xa[X] && Xa[X][at];
                else
                  var z = at;
                return [R, z];
              }
              function Xu(lt) {
                var X = {};
                if (Array.isArray(lt))
                  for (var at = 0; at < lt.length; at++) {
                    var R = void 0, z = T0(lt[at]);
                    (R = Za[z[0]] && Za[z[0]][z[1]]) && (X[R] = !0);
                  }
                else if (typeof lt == "object")
                  for (var j in lt) {
                    var ft = lt[j];
                    for (var mt in ft) {
                      var pt = void 0, dt = T0([j, mt]);
                      ft[mt] && (pt = Za[dt[0]] && Za[dt[0]][dt[1]]) && (X[pt] = !0);
                    }
                  }
                return Object.keys(X);
              }
              var Di, ho = (Di = /* @__PURE__ */ function() {
                function lt(at) {
                  this.table = at;
                }
                var X = lt.prototype;
                return X.lookup = function(R) {
                  switch (this.table.version) {
                    case 0:
                      return this.table.values.getItem(R);
                    case 2:
                    case 4: {
                      for (var z = 0, j = this.table.binarySearchHeader.nUnits - 1; z <= j; ) {
                        var ft = z + j >> 1, mt = this.table.segments[ft];
                        if (mt.firstGlyph === 65535)
                          return null;
                        if (R < mt.firstGlyph)
                          j = ft - 1;
                        else if (R > mt.lastGlyph)
                          z = ft + 1;
                        else
                          return this.table.version === 2 ? mt.value : mt.values[R - mt.firstGlyph];
                      }
                      return null;
                    }
                    case 6: {
                      for (var pt = 0, dt = this.table.binarySearchHeader.nUnits - 1; pt <= dt; ) {
                        var ft = pt + dt >> 1, mt = this.table.segments[ft];
                        if (mt.glyph === 65535)
                          return null;
                        if (R < mt.glyph)
                          dt = ft - 1;
                        else if (R > mt.glyph)
                          pt = ft + 1;
                        else
                          return mt.value;
                      }
                      return null;
                    }
                    case 8:
                      return this.table.values[R - this.table.firstGlyph];
                    default:
                      throw new Error("Unknown lookup table format: ".concat(this.table.version));
                  }
                }, X.glyphsForValue = function(R) {
                  var z = [];
                  switch (this.table.version) {
                    case 2:
                    case 4: {
                      for (var j = s(this.table.segments), ft; !(ft = j()).done; ) {
                        var mt = ft.value;
                        if (this.table.version === 2 && mt.value === R)
                          z.push.apply(z, ri(mt.firstGlyph, mt.lastGlyph + 1));
                        else
                          for (var pt = 0; pt < mt.values.length; pt++)
                            mt.values[pt] === R && z.push(mt.firstGlyph + pt);
                      }
                      break;
                    }
                    case 6: {
                      for (var dt = s(this.table.segments), Nt; !(Nt = dt()).done; ) {
                        var Yt = Nt.value;
                        Yt.value === R && z.push(Yt.glyph);
                      }
                      break;
                    }
                    case 8: {
                      for (var se = 0; se < this.table.values.length; se++)
                        this.table.values[se] === R && z.push(this.table.firstGlyph + se);
                      break;
                    }
                    default:
                      throw new Error("Unknown lookup table format: ".concat(this.table.version));
                  }
                  return z;
                }, lt;
              }(), N(Di.prototype, "glyphsForValue", [G], Object.getOwnPropertyDescriptor(Di.prototype, "glyphsForValue"), Di.prototype), Di), Zu = 0, F0 = 0, I0 = 1, D0 = 2, Yu = 16384, Ku = /* @__PURE__ */ function() {
                function lt(at) {
                  this.stateTable = at, this.lookupTable = new ho(at.classTable);
                }
                var X = lt.prototype;
                return X.process = function(R, z, j) {
                  for (var ft = Zu, mt = z ? R.length - 1 : 0, pt = z ? -1 : 1; pt === 1 && mt <= R.length || pt === -1 && mt >= -1; ) {
                    var dt = null, Nt = I0, Yt = !0;
                    mt === R.length || mt === -1 ? Nt = F0 : (dt = R[mt], dt.id === 65535 ? Nt = D0 : (Nt = this.lookupTable.lookup(dt.id), Nt == null && (Nt = I0)));
                    var se = this.stateTable.stateArray.getItem(ft), te = se[Nt], ce = this.stateTable.entryTable.getItem(te);
                    Nt !== F0 && Nt !== D0 && (j(dt, ce, mt), Yt = !(ce.flags & Yu)), ft = ce.newState, Yt && (mt += pt);
                  }
                  return R;
                }, X.traverse = function(R, z, j) {
                  if (z === void 0 && (z = 0), j === void 0 && (j = /* @__PURE__ */ new Set()), !j.has(z)) {
                    j.add(z);
                    for (var ft = this.stateTable, mt = ft.nClasses, pt = ft.stateArray, dt = ft.entryTable, Nt = pt.getItem(z), Yt = 4; Yt < mt; Yt++)
                      for (var se = Nt[Yt], te = dt.getItem(se), ce = s(this.lookupTable.glyphsForValue(Yt)), ve; !(ve = ce()).done; ) {
                        var De = ve.value;
                        R.enter && R.enter(De, te), te.newState !== 0 && this.traverse(R, te.newState, j), R.exit && R.exit(De, te);
                      }
                  }
                }, lt;
              }(), Pi, Ju = 32768, Qu = 8192, $u = 15, P0 = 32768, qu = 32768, _u = 8192, tc = 2147483648, ec = 1073741824, rc = 1073741823, O0 = 4194304, nc = 2048, ac = 1024, ic = 992, oc = 31, sc = (Pi = /* @__PURE__ */ function() {
                function lt(at) {
                  this.processIndicRearragement = this.processIndicRearragement.bind(this), this.processContextualSubstitution = this.processContextualSubstitution.bind(this), this.processLigature = this.processLigature.bind(this), this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this), this.processGlyphInsertion = this.processGlyphInsertion.bind(this), this.font = at, this.morx = at.morx, this.inputCache = null;
                }
                var X = lt.prototype;
                return X.process = function(R, z) {
                  z === void 0 && (z = {});
                  for (var j = s(this.morx.chains), ft; !(ft = j()).done; ) {
                    for (var mt = ft.value, pt = mt.defaultFlags, dt = s(mt.features), Nt; !(Nt = dt()).done; ) {
                      var Yt = Nt.value, se = void 0;
                      (se = z[Yt.featureType]) && (se[Yt.featureSetting] ? (pt &= Yt.disableFlags, pt |= Yt.enableFlags) : se[Yt.featureSetting] === !1 && (pt |= ~Yt.disableFlags, pt &= ~Yt.enableFlags));
                    }
                    for (var te = s(mt.subtables), ce; !(ce = te()).done; ) {
                      var ve = ce.value;
                      ve.subFeatureFlags & pt && this.processSubtable(ve, R);
                    }
                  }
                  for (var De = R.length - 1; De >= 0; )
                    R[De].id === 65535 && R.splice(De, 1), De--;
                  return R;
                }, X.processSubtable = function(R, z) {
                  if (this.subtable = R, this.glyphs = z, this.subtable.type === 4) {
                    this.processNoncontextualSubstitutions(this.subtable, this.glyphs);
                    return;
                  }
                  this.ligatureStack = [], this.markedGlyph = null, this.firstGlyph = null, this.lastGlyph = null, this.markedIndex = null;
                  var j = this.getStateMachine(R), ft = this.getProcessor(), mt = !!(this.subtable.coverage & O0);
                  return j.process(this.glyphs, mt, ft);
                }, X.getStateMachine = function(R) {
                  return new Ku(R.table.stateTable);
                }, X.getProcessor = function() {
                  switch (this.subtable.type) {
                    case 0:
                      return this.processIndicRearragement;
                    case 1:
                      return this.processContextualSubstitution;
                    case 2:
                      return this.processLigature;
                    case 4:
                      return this.processNoncontextualSubstitutions;
                    case 5:
                      return this.processGlyphInsertion;
                    default:
                      throw new Error("Invalid morx subtable type: ".concat(this.subtable.type));
                  }
                }, X.processIndicRearragement = function(R, z, j) {
                  z.flags & Ju && (this.firstGlyph = j), z.flags & Qu && (this.lastGlyph = j), fc(this.glyphs, z.flags & $u, this.firstGlyph, this.lastGlyph);
                }, X.processContextualSubstitution = function(R, z, j) {
                  var ft = this.subtable.table.substitutionTable.items;
                  if (z.markIndex !== 65535) {
                    var mt = ft.getItem(z.markIndex), pt = new ho(mt);
                    R = this.glyphs[this.markedGlyph];
                    var dt = pt.lookup(R.id);
                    dt && (this.glyphs[this.markedGlyph] = this.font.getGlyph(dt, R.codePoints));
                  }
                  if (z.currentIndex !== 65535) {
                    var Nt = ft.getItem(z.currentIndex), Yt = new ho(Nt);
                    R = this.glyphs[j];
                    var dt = Yt.lookup(R.id);
                    dt && (this.glyphs[j] = this.font.getGlyph(dt, R.codePoints));
                  }
                  z.flags & P0 && (this.markedGlyph = j);
                }, X.processLigature = function(R, z, j) {
                  if (z.flags & qu && this.ligatureStack.push(j), z.flags & _u) {
                    for (var ft, mt = this.subtable.table.ligatureActions, pt = this.subtable.table.components, dt = this.subtable.table.ligatureList, Nt = z.action, Yt = !1, se = 0, te = [], ce = []; !Yt; ) {
                      var ve, De = this.ligatureStack.pop();
                      (ve = te).unshift.apply(ve, this.glyphs[De].codePoints);
                      var Ge = mt.getItem(Nt++);
                      Yt = !!(Ge & tc);
                      var rr = !!(Ge & ec), Ke = (Ge & rc) << 2 >> 2;
                      Ke += this.glyphs[De].id;
                      var pr = pt.getItem(Ke);
                      if (se += pr, Yt || rr) {
                        var cr = dt.getItem(se);
                        this.glyphs[De] = this.font.getGlyph(cr, te), ce.push(De), se = 0, te = [];
                      } else
                        this.glyphs[De] = this.font.getGlyph(65535);
                    }
                    (ft = this.ligatureStack).push.apply(ft, ce);
                  }
                }, X.processNoncontextualSubstitutions = function(R, z, j) {
                  var ft = new ho(R.table.lookupTable);
                  for (j = 0; j < z.length; j++) {
                    var mt = z[j];
                    if (mt.id !== 65535) {
                      var pt = ft.lookup(mt.id);
                      pt && (z[j] = this.font.getGlyph(pt, mt.codePoints));
                    }
                  }
                }, X._insertGlyphs = function(R, z, j, ft) {
                  for (var mt, pt = []; j--; ) {
                    var dt = this.subtable.table.insertionActions.getItem(z++);
                    pt.push(this.font.getGlyph(dt));
                  }
                  ft || R++, (mt = this.glyphs).splice.apply(mt, [R, 0].concat(pt));
                }, X.processGlyphInsertion = function(R, z, j) {
                  if (z.flags & P0 && (this.markedIndex = j), z.markedInsertIndex !== 65535) {
                    var ft = (z.flags & oc) >>> 5, mt = !!(z.flags & ac);
                    this._insertGlyphs(this.markedIndex, z.markedInsertIndex, ft, mt);
                  }
                  if (z.currentInsertIndex !== 65535) {
                    var pt = (z.flags & ic) >>> 5, dt = !!(z.flags & nc);
                    this._insertGlyphs(j, z.currentInsertIndex, pt, dt);
                  }
                }, X.getSupportedFeatures = function() {
                  for (var R = [], z = s(this.morx.chains), j; !(j = z()).done; )
                    for (var ft = j.value, mt = s(ft.features), pt; !(pt = mt()).done; ) {
                      var dt = pt.value;
                      R.push([dt.featureType, dt.featureSetting]);
                    }
                  return R;
                }, X.generateInputs = function(R) {
                  return this.inputCache || this.generateInputCache(), this.inputCache[R] || [];
                }, X.generateInputCache = function() {
                  this.inputCache = {};
                  for (var R = s(this.morx.chains), z; !(z = R()).done; )
                    for (var j = z.value, ft = j.defaultFlags, mt = s(j.subtables), pt; !(pt = mt()).done; ) {
                      var dt = pt.value;
                      dt.subFeatureFlags & ft && this.generateInputsForSubtable(dt);
                    }
                }, X.generateInputsForSubtable = function(R) {
                  var z = this;
                  if (R.type === 2) {
                    var j = !!(R.coverage & O0);
                    if (j)
                      throw new Error("Reverse subtable, not supported.");
                    this.subtable = R, this.ligatureStack = [];
                    var ft = this.getStateMachine(R), mt = this.getProcessor(), pt = [], dt = [];
                    this.glyphs = [], ft.traverse({
                      enter: function(Yt, se) {
                        var te = z.glyphs;
                        dt.push({
                          glyphs: te.slice(),
                          ligatureStack: z.ligatureStack.slice()
                        });
                        var ce = z.font.getGlyph(Yt);
                        pt.push(ce), te.push(pt[pt.length - 1]), mt(te[te.length - 1], se, te.length - 1);
                        for (var ve = 0, De = 0, Ge = 0; Ge < te.length && ve <= 1; Ge++)
                          te[Ge].id !== 65535 && (ve++, De = te[Ge].id);
                        if (ve === 1) {
                          var rr = pt.map(function(pr) {
                            return pr.id;
                          }), Ke = z.inputCache[De];
                          Ke ? Ke.push(rr) : z.inputCache[De] = [rr];
                        }
                      },
                      exit: function() {
                        var Yt = dt.pop();
                        z.glyphs = Yt.glyphs, z.ligatureStack = Yt.ligatureStack, pt.pop();
                      }
                    });
                  }
                }, lt;
              }(), N(Pi.prototype, "getStateMachine", [G], Object.getOwnPropertyDescriptor(Pi.prototype, "getStateMachine"), Pi.prototype), Pi);
              function Nn(lt, X, at, R, z) {
                R === void 0 && (R = !1), z === void 0 && (z = !1);
                var j = lt.splice(at[0] - (at[1] - 1), at[1]);
                z && j.reverse();
                var ft = lt.splice.apply(lt, [X[0], X[1]].concat(j));
                return R && ft.reverse(), lt.splice.apply(lt, [at[0] - (X[1] - 1), 0].concat(ft)), lt;
              }
              function fc(lt, X, at, R) {
                switch (X) {
                  case 0:
                    return lt;
                  case 1:
                    return Nn(lt, [at, 1], [R, 0]);
                  case 2:
                    return Nn(lt, [at, 0], [R, 1]);
                  case 3:
                    return Nn(lt, [at, 1], [R, 1]);
                  case 4:
                    return Nn(lt, [at, 2], [R, 0]);
                  case 5:
                    return Nn(lt, [at, 2], [R, 0], !0, !1);
                  case 6:
                    return Nn(lt, [at, 0], [R, 2]);
                  case 7:
                    return Nn(lt, [at, 0], [R, 2], !1, !0);
                  case 8:
                    return Nn(lt, [at, 1], [R, 2]);
                  case 9:
                    return Nn(lt, [at, 1], [R, 2], !1, !0);
                  case 10:
                    return Nn(lt, [at, 2], [R, 1]);
                  case 11:
                    return Nn(lt, [at, 2], [R, 1], !0, !1);
                  case 12:
                    return Nn(lt, [at, 2], [R, 2]);
                  case 13:
                    return Nn(lt, [at, 2], [R, 2], !0, !1);
                  case 14:
                    return Nn(lt, [at, 2], [R, 2], !1, !0);
                  case 15:
                    return Nn(lt, [at, 2], [R, 2], !0, !0);
                  default:
                    throw new Error("Unknown verb: ".concat(X));
                }
              }
              var lc = /* @__PURE__ */ function() {
                function lt(at) {
                  this.font = at, this.morxProcessor = new sc(at), this.fallbackPosition = !1;
                }
                var X = lt.prototype;
                return X.substitute = function(R) {
                  R.direction === "rtl" && R.glyphs.reverse(), this.morxProcessor.process(R.glyphs, Vu(R.features));
                }, X.getAvailableFeatures = function(R, z) {
                  return Xu(this.morxProcessor.getSupportedFeatures());
                }, X.stringsForGlyph = function(R) {
                  for (var z = this.morxProcessor.generateInputs(R), j = /* @__PURE__ */ new Set(), ft = s(z), mt; !(mt = ft()).done; ) {
                    var pt = mt.value;
                    this._addStrings(pt, 0, j, "");
                  }
                  return j;
                }, X._addStrings = function(R, z, j, ft) {
                  for (var mt = this.font._cmapProcessor.codePointsForGlyph(R[z]), pt = s(mt), dt; !(dt = pt()).done; ) {
                    var Nt = dt.value, Yt = ft + String.fromCodePoint(Nt);
                    z < R.length - 1 ? this._addStrings(R, z + 1, j, Yt) : j.add(Yt);
                  }
                }, lt;
              }(), uc = /* @__PURE__ */ function() {
                function lt(at, R, z) {
                  this.font = at, this.script = R, this.direction = z, this.stages = [], this.globalFeatures = {}, this.allFeatures = {};
                }
                var X = lt.prototype;
                return X._addFeatures = function(R, z) {
                  for (var j = this.stages.length - 1, ft = this.stages[j], mt = s(R), pt; !(pt = mt()).done; ) {
                    var dt = pt.value;
                    this.allFeatures[dt] == null && (ft.push(dt), this.allFeatures[dt] = j, z && (this.globalFeatures[dt] = !0));
                  }
                }, X.add = function(R, z) {
                  if (z === void 0 && (z = !0), this.stages.length === 0 && this.stages.push([]), typeof R == "string" && (R = [R]), Array.isArray(R))
                    this._addFeatures(R, z);
                  else if (typeof R == "object")
                    this._addFeatures(R.global || [], !0), this._addFeatures(R.local || [], !1);
                  else
                    throw new Error("Unsupported argument to ShapingPlan#add");
                }, X.addStage = function(R, z) {
                  typeof R == "function" ? this.stages.push(R, []) : (this.stages.push([]), this.add(R, z));
                }, X.setFeatureOverrides = function(R) {
                  if (Array.isArray(R))
                    this.add(R);
                  else if (typeof R == "object") {
                    for (var z in R)
                      if (R[z])
                        this.add(z);
                      else if (this.allFeatures[z] != null) {
                        var j = this.stages[this.allFeatures[z]];
                        j.splice(j.indexOf(z), 1), delete this.allFeatures[z], delete this.globalFeatures[z];
                      }
                  }
                }, X.assignGlobalFeatures = function(R) {
                  for (var z = s(R), j; !(j = z()).done; ) {
                    var ft = j.value;
                    for (var mt in this.globalFeatures)
                      ft.features[mt] = !0;
                  }
                }, X.process = function(R, z, j) {
                  for (var ft = s(this.stages), mt; !(mt = ft()).done; ) {
                    var pt = mt.value;
                    typeof pt == "function" ? j || pt(this.font, z, this) : pt.length > 0 && R.applyFeatures(pt, z, j);
                  }
                }, lt;
              }(), cc = ["rvrn"], hc = ["ccmp", "locl", "rlig", "mark", "mkmk"], dc = ["frac", "numr", "dnom"], vc = ["calt", "clig", "liga", "rclt", "curs", "kern"], pc = {
                ltr: ["ltra", "ltrm"],
                rtl: ["rtla", "rtlm"]
              }, La = /* @__PURE__ */ function() {
                function lt() {
                }
                return lt.plan = function(at, R, z) {
                  this.planPreprocessing(at), this.planFeatures(at), this.planPostprocessing(at, z), at.assignGlobalFeatures(R), this.assignFeatures(at, R);
                }, lt.planPreprocessing = function(at) {
                  at.add({
                    global: [].concat(cc, pc[at.direction]),
                    local: dc
                  });
                }, lt.planFeatures = function(at) {
                }, lt.planPostprocessing = function(at, R) {
                  at.add([].concat(hc, vc)), at.setFeatureOverrides(R);
                }, lt.assignFeatures = function(at, R) {
                  for (var z = 0; z < R.length; z++) {
                    var j = R[z];
                    if (j.codePoints[0] === 8260) {
                      for (var ft = z, mt = z + 1; ft > 0 && P.isDigit(R[ft - 1].codePoints[0]); )
                        R[ft - 1].features.numr = !0, R[ft - 1].features.frac = !0, ft--;
                      for (; mt < R.length && P.isDigit(R[mt].codePoints[0]); )
                        R[mt].features.dnom = !0, R[mt].features.frac = !0, mt++;
                      j.features.frac = !0, z = mt - 1;
                    }
                  }
                }, lt;
              }();
              M(La, "zeroMarkWidths", "AFTER_GPOS");
              var gc = new D(i("APABAAAAAAAAOAAAAf0BAv7tmi1MxDAUx7vtvjhAgcDgkEgEAnmXEBIMCYaEcygEiqBQ4FAkCE4ikUgMiiBJSAgSiUQSDMn9L9eSl6bddddug9t7yS/trevre+3r27pcNxZiG+yCfdCVv/9LeQxOwRm4AJegD27ALbgD9+ABPJF+z+BN/h7yDj5k/VOWX6SdmU5+wLWknggxDxaS8u0qiiX4uiz9XamQ3wzDMAzDMAzDMAzDVI/h959V/v7BMAzDMAzDMLlyNTNiMSdewVxbiA44B4/guz1qW58VYlMI0WsJ0W+N6kXw0spvPtdwhtkwnGM6uLaV4Xyzg3v3PM9DPfQ/sOg4xPWjipy31P8LTqbU304c/cLCUmWJLNB2Uz2U1KTeRKNmKHVMfbJC+/0loTZRH/W5cvEvBJPMbREkWt3FD1NcqXZBSpuE2Ad0PBehPtNrPtIEdYP+hiRt/V1jIiE69X4NT/uVZI3PUHE9bm5M7ePGdZWy951v7Nn6j8v1WWKP3mt6ttnsigx6VN7Vc0VomSSGqW2mGNP1muZPl7LfjNUaKNFtDGVf2fvE9O7VlBS5j333c5p/eeoOqcs1R/hIqDWLJ7TTlksirVT1SI7l8k4Yp+g3jafGcrU1RM6l9th80XOpnlN97bDNY4i4s61B0Si/ipa0uHMl6zqEjlFfCZm/TM8KmzQDjmuTAQ==", "base64")), B0 = ["isol", "fina", "fin2", "fin3", "medi", "med2", "init"], gs = {
                Non_Joining: 0,
                Left_Joining: 1,
                Right_Joining: 2,
                Dual_Joining: 3,
                Join_Causing: 3,
                ALAPH: 4,
                "DALATH RISH": 5,
                Transparent: 6
              }, qr = "isol", Na = "fina", ms = "fin2", mc = "fin3", vo = "medi", po = "med2", go = "init", Pr = null, yc = [
                //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH
                // State 0: prev was U,  not willing to join.
                [[Pr, Pr, 0], [Pr, qr, 2], [Pr, qr, 1], [Pr, qr, 2], [Pr, qr, 1], [Pr, qr, 6]],
                // State 1: prev was R or ISOL/ALAPH,  not willing to join.
                [[Pr, Pr, 0], [Pr, qr, 2], [Pr, qr, 1], [Pr, qr, 2], [Pr, ms, 5], [Pr, qr, 6]],
                // State 2: prev was D/L in ISOL form,  willing to join.
                [[Pr, Pr, 0], [Pr, qr, 2], [go, Na, 1], [go, Na, 3], [go, Na, 4], [go, Na, 6]],
                // State 3: prev was D in FINA form,  willing to join.
                [[Pr, Pr, 0], [Pr, qr, 2], [vo, Na, 1], [vo, Na, 3], [vo, Na, 4], [vo, Na, 6]],
                // State 4: prev was FINA ALAPH,  not willing to join.
                [[Pr, Pr, 0], [Pr, qr, 2], [po, qr, 1], [po, qr, 2], [po, ms, 5], [po, qr, 6]],
                // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.
                [[Pr, Pr, 0], [Pr, qr, 2], [qr, qr, 1], [qr, qr, 2], [qr, ms, 5], [qr, qr, 6]],
                // State 6: prev was DALATH/RISH,  not willing to join.
                [[Pr, Pr, 0], [Pr, qr, 2], [Pr, qr, 1], [Pr, qr, 2], [Pr, mc, 5], [Pr, qr, 6]]
              ], Ma = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                return l(X, lt), X.planFeatures = function(R) {
                  R.add(["ccmp", "locl"]);
                  for (var z = 0; z < B0.length; z++) {
                    var j = B0[z];
                    R.addStage(j, !1);
                  }
                  R.addStage("mset");
                }, X.assignFeatures = function(R, z) {
                  lt.assignFeatures.call(this, R, z);
                  for (var j = -1, ft = 0, mt = [], pt = 0; pt < z.length; pt++) {
                    var dt = void 0, Nt = void 0, Yt = z[pt], se = xc(Yt.codePoints[0]);
                    if (se === gs.Transparent) {
                      mt[pt] = Pr;
                      continue;
                    }
                    var te = yc[ft][se];
                    Nt = te[0], dt = te[1], ft = te[2], Nt !== Pr && j !== -1 && (mt[j] = Nt), mt[pt] = dt, j = pt;
                  }
                  for (var ce = 0; ce < z.length; ce++) {
                    var ve = void 0, Yt = z[ce];
                    (ve = mt[ce]) && (Yt.features[ve] = !0);
                  }
                }, X;
              }(La);
              function xc(lt) {
                var X = gc.get(lt);
                if (X)
                  return X - 1;
                var at = P.getCategory(lt);
                return at === "Mn" || at === "Me" || at === "Cf" ? gs.Transparent : gs.Non_Joining;
              }
              var bc = /* @__PURE__ */ function() {
                function lt(at, R) {
                  this.glyphs = at, this.reset(R);
                }
                var X = lt.prototype;
                return X.reset = function(R, z) {
                  R === void 0 && (R = {}), z === void 0 && (z = 0), this.options = R, this.flags = R.flags || {}, this.markAttachmentType = R.markAttachmentType || 0, this.index = z;
                }, X.shouldIgnore = function(R) {
                  return this.flags.ignoreMarks && R.isMark || this.flags.ignoreBaseGlyphs && R.isBase || this.flags.ignoreLigatures && R.isLigature || this.markAttachmentType && R.isMark && R.markAttachmentType !== this.markAttachmentType;
                }, X.move = function(R) {
                  for (this.index += R; 0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]); )
                    this.index += R;
                  return 0 > this.index || this.index >= this.glyphs.length ? null : this.glyphs[this.index];
                }, X.next = function() {
                  return this.move(1);
                }, X.prev = function() {
                  return this.move(-1);
                }, X.peek = function(R) {
                  R === void 0 && (R = 1);
                  var z = this.index, j = this.increment(R);
                  return this.index = z, j;
                }, X.peekIndex = function(R) {
                  R === void 0 && (R = 1);
                  var z = this.index;
                  this.increment(R);
                  var j = this.index;
                  return this.index = z, j;
                }, X.increment = function(R) {
                  R === void 0 && (R = 1);
                  var z = R < 0 ? -1 : 1;
                  for (R = Math.abs(R); R--; )
                    this.move(z);
                  return this.glyphs[this.index];
                }, o(lt, [{
                  key: "cur",
                  get: function() {
                    return this.glyphs[this.index] || null;
                  }
                }]);
              }(), wc = ["DFLT", "dflt", "latn"], mo = /* @__PURE__ */ function() {
                function lt(at, R) {
                  this.font = at, this.table = R, this.script = null, this.scriptTag = null, this.language = null, this.languageTag = null, this.features = {}, this.lookups = {}, this.variationsIndex = at._variationProcessor ? this.findVariationsIndex(at._variationProcessor.normalizedCoords) : -1, this.selectScript(), this.glyphs = [], this.positions = [], this.ligatureID = 1, this.currentFeature = null;
                }
                var X = lt.prototype;
                return X.findScript = function(R) {
                  if (this.table.scriptList == null)
                    return null;
                  Array.isArray(R) || (R = [R]);
                  for (var z = s(R), j; !(j = z()).done; )
                    for (var ft = j.value, mt = s(this.table.scriptList), pt; !(pt = mt()).done; ) {
                      var dt = pt.value;
                      if (dt.tag === ft)
                        return dt;
                    }
                  return null;
                }, X.selectScript = function(R, z, j) {
                  var ft = !1, mt;
                  if (!this.script || R !== this.scriptTag) {
                    if (mt = this.findScript(R), mt || (mt = this.findScript(wc)), !mt)
                      return this.scriptTag;
                    this.scriptTag = mt.tag, this.script = mt.script, this.language = null, this.languageTag = null, ft = !0;
                  }
                  if ((!j || j !== this.direction) && (this.direction = j || C0(R)), z && z.length < 4 && (z += " ".repeat(4 - z.length)), !z || z !== this.languageTag) {
                    this.language = null;
                    for (var pt = s(this.script.langSysRecords), dt; !(dt = pt()).done; ) {
                      var Nt = dt.value;
                      if (Nt.tag === z) {
                        this.language = Nt.langSys, this.languageTag = Nt.tag;
                        break;
                      }
                    }
                    this.language || (this.language = this.script.defaultLangSys, this.languageTag = null), ft = !0;
                  }
                  if (ft && (this.features = {}, this.language))
                    for (var Yt = s(this.language.featureIndexes), se; !(se = Yt()).done; ) {
                      var te = se.value, ce = this.table.featureList[te], ve = this.substituteFeatureForVariations(te);
                      this.features[ce.tag] = ve || ce.feature;
                    }
                  return this.scriptTag;
                }, X.lookupsForFeatures = function(R, z) {
                  R === void 0 && (R = []);
                  for (var j = [], ft = s(R), mt; !(mt = ft()).done; ) {
                    var pt = mt.value, dt = this.features[pt];
                    if (dt)
                      for (var Nt = s(dt.lookupListIndexes), Yt; !(Yt = Nt()).done; ) {
                        var se = Yt.value;
                        z && z.indexOf(se) !== -1 || j.push({
                          feature: pt,
                          index: se,
                          lookup: this.table.lookupList.get(se)
                        });
                      }
                  }
                  return j.sort(function(te, ce) {
                    return te.index - ce.index;
                  }), j;
                }, X.substituteFeatureForVariations = function(R) {
                  if (this.variationsIndex === -1)
                    return null;
                  for (var z = this.table.featureVariations.featureVariationRecords[this.variationsIndex], j = z.featureTableSubstitution.substitutions, ft = s(j), mt; !(mt = ft()).done; ) {
                    var pt = mt.value;
                    if (pt.featureIndex === R)
                      return pt.alternateFeatureTable;
                  }
                  return null;
                }, X.findVariationsIndex = function(R) {
                  var z = this.table.featureVariations;
                  if (!z)
                    return -1;
                  for (var j = z.featureVariationRecords, ft = 0; ft < j.length; ft++) {
                    var mt = j[ft].conditionSet.conditionTable;
                    if (this.variationConditionsMatch(mt, R))
                      return ft;
                  }
                  return -1;
                }, X.variationConditionsMatch = function(R, z) {
                  return R.every(function(j) {
                    var ft = j.axisIndex < z.length ? z[j.axisIndex] : 0;
                    return j.filterRangeMinValue <= ft && ft <= j.filterRangeMaxValue;
                  });
                }, X.applyFeatures = function(R, z, j) {
                  var ft = this.lookupsForFeatures(R);
                  this.applyLookups(ft, z, j);
                }, X.applyLookups = function(R, z, j) {
                  this.glyphs = z, this.positions = j, this.glyphIterator = new bc(z);
                  for (var ft = s(R), mt; !(mt = ft()).done; ) {
                    var pt = mt.value, dt = pt.feature, Nt = pt.lookup;
                    for (this.currentFeature = dt, this.glyphIterator.reset(Nt.flags); this.glyphIterator.index < z.length; ) {
                      if (!(dt in this.glyphIterator.cur.features)) {
                        this.glyphIterator.next();
                        continue;
                      }
                      for (var Yt = s(Nt.subTables), se; !(se = Yt()).done; ) {
                        var te = se.value, ce = this.applyLookup(Nt.lookupType, te);
                        if (ce)
                          break;
                      }
                      this.glyphIterator.next();
                    }
                  }
                }, X.applyLookup = function(R, z) {
                  throw new Error("applyLookup must be implemented by subclasses");
                }, X.applyLookupList = function(R) {
                  for (var z = this.glyphIterator.options, j = this.glyphIterator.index, ft = s(R), mt; !(mt = ft()).done; ) {
                    var pt = mt.value;
                    this.glyphIterator.reset(z, j), this.glyphIterator.increment(pt.sequenceIndex);
                    var dt = this.table.lookupList.get(pt.lookupListIndex);
                    this.glyphIterator.reset(dt.flags, this.glyphIterator.index);
                    for (var Nt = s(dt.subTables), Yt; !(Yt = Nt()).done; ) {
                      var se = Yt.value;
                      if (this.applyLookup(dt.lookupType, se))
                        break;
                    }
                  }
                  return this.glyphIterator.reset(z, j), !0;
                }, X.coverageIndex = function(R, z) {
                  switch (z == null && (z = this.glyphIterator.cur.id), R.version) {
                    case 1:
                      return R.glyphs.indexOf(z);
                    case 2:
                      for (var j = s(R.rangeRecords), ft; !(ft = j()).done; ) {
                        var mt = ft.value;
                        if (mt.start <= z && z <= mt.end)
                          return mt.startCoverageIndex + z - mt.start;
                      }
                      break;
                  }
                  return -1;
                }, X.match = function(R, z, j, ft) {
                  for (var mt = this.glyphIterator.index, pt = this.glyphIterator.increment(R), dt = 0; dt < z.length && pt && j(z[dt], pt); )
                    ft && ft.push(this.glyphIterator.index), dt++, pt = this.glyphIterator.next();
                  return this.glyphIterator.index = mt, dt < z.length ? !1 : ft || !0;
                }, X.sequenceMatches = function(R, z) {
                  return this.match(R, z, function(j, ft) {
                    return j === ft.id;
                  });
                }, X.sequenceMatchIndices = function(R, z) {
                  var j = this;
                  return this.match(R, z, function(ft, mt) {
                    return j.currentFeature in mt.features ? ft === mt.id : !1;
                  }, []);
                }, X.coverageSequenceMatches = function(R, z) {
                  var j = this;
                  return this.match(R, z, function(ft, mt) {
                    return j.coverageIndex(ft, mt.id) >= 0;
                  });
                }, X.getClassID = function(R, z) {
                  switch (z.version) {
                    case 1:
                      var j = R - z.startGlyph;
                      if (j >= 0 && j < z.classValueArray.length)
                        return z.classValueArray[j];
                      break;
                    case 2:
                      for (var ft = s(z.classRangeRecord), mt; !(mt = ft()).done; ) {
                        var pt = mt.value;
                        if (pt.start <= R && R <= pt.end)
                          return pt.class;
                      }
                      break;
                  }
                  return 0;
                }, X.classSequenceMatches = function(R, z, j) {
                  var ft = this;
                  return this.match(R, z, function(mt, pt) {
                    return mt === ft.getClassID(pt.id, j);
                  });
                }, X.applyContext = function(R) {
                  switch (R.version) {
                    case 1:
                      var z = this.coverageIndex(R.coverage);
                      if (z === -1)
                        return !1;
                      for (var j = R.ruleSets[z], ft = s(j), mt; !(mt = ft()).done; ) {
                        var pt = mt.value;
                        if (this.sequenceMatches(1, pt.input))
                          return this.applyLookupList(pt.lookupRecords);
                      }
                      break;
                    case 2:
                      if (this.coverageIndex(R.coverage) === -1 || (z = this.getClassID(this.glyphIterator.cur.id, R.classDef), z === -1))
                        return !1;
                      j = R.classSet[z];
                      for (var dt = s(j), Nt; !(Nt = dt()).done; ) {
                        var Yt = Nt.value;
                        if (this.classSequenceMatches(1, Yt.classes, R.classDef))
                          return this.applyLookupList(Yt.lookupRecords);
                      }
                      break;
                    case 3:
                      if (this.coverageSequenceMatches(0, R.coverages))
                        return this.applyLookupList(R.lookupRecords);
                      break;
                  }
                  return !1;
                }, X.applyChainingContext = function(R) {
                  switch (R.version) {
                    case 1:
                      var z = this.coverageIndex(R.coverage);
                      if (z === -1)
                        return !1;
                      for (var j = R.chainRuleSets[z], ft = s(j), mt; !(mt = ft()).done; ) {
                        var pt = mt.value;
                        if (this.sequenceMatches(-pt.backtrack.length, pt.backtrack) && this.sequenceMatches(1, pt.input) && this.sequenceMatches(1 + pt.input.length, pt.lookahead))
                          return this.applyLookupList(pt.lookupRecords);
                      }
                      break;
                    case 2:
                      if (this.coverageIndex(R.coverage) === -1)
                        return !1;
                      z = this.getClassID(this.glyphIterator.cur.id, R.inputClassDef);
                      var dt = R.chainClassSet[z];
                      if (!dt)
                        return !1;
                      for (var Nt = s(dt), Yt; !(Yt = Nt()).done; ) {
                        var se = Yt.value;
                        if (this.classSequenceMatches(-se.backtrack.length, se.backtrack, R.backtrackClassDef) && this.classSequenceMatches(1, se.input, R.inputClassDef) && this.classSequenceMatches(1 + se.input.length, se.lookahead, R.lookaheadClassDef))
                          return this.applyLookupList(se.lookupRecords);
                      }
                      break;
                    case 3:
                      if (this.coverageSequenceMatches(-R.backtrackGlyphCount, R.backtrackCoverage) && this.coverageSequenceMatches(0, R.inputCoverage) && this.coverageSequenceMatches(R.inputGlyphCount, R.lookaheadCoverage))
                        return this.applyLookupList(R.lookupRecords);
                      break;
                  }
                  return !1;
                }, lt;
              }(), Ea = /* @__PURE__ */ function() {
                function lt(at, R, z, j) {
                  if (z === void 0 && (z = []), this._font = at, this.codePoints = z, this.id = R, this.features = {}, Array.isArray(j))
                    for (var ft = 0; ft < j.length; ft++) {
                      var mt = j[ft];
                      this.features[mt] = !0;
                    }
                  else
                    typeof j == "object" && Object.assign(this.features, j);
                  this.ligatureID = null, this.ligatureComponent = null, this.isLigated = !1, this.cursiveAttachment = null, this.markAttachment = null, this.shaperInfo = null, this.substituted = !1, this.isMultiplied = !1;
                }
                var X = lt.prototype;
                return X.copy = function() {
                  return new lt(this._font, this.id, this.codePoints, this.features);
                }, o(lt, [{
                  key: "id",
                  get: function() {
                    return this._id;
                  },
                  set: function(R) {
                    this._id = R, this.substituted = !0;
                    var z = this._font.GDEF;
                    if (z && z.glyphClassDef) {
                      var j = mo.prototype.getClassID(R, z.glyphClassDef);
                      this.isBase = j === 1, this.isLigature = j === 2, this.isMark = j === 3, this.markAttachmentType = z.markAttachClassDef ? mo.prototype.getClassID(R, z.markAttachClassDef) : 0;
                    } else
                      this.isMark = this.codePoints.length > 0 && this.codePoints.every(P.isMark), this.isBase = !this.isMark, this.isLigature = this.codePoints.length > 1, this.markAttachmentType = 0;
                  }
                }]);
              }(), R0 = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                return l(X, lt), X.planFeatures = function(R) {
                  R.add(["ljmo", "vjmo", "tjmo"], !1);
                }, X.assignFeatures = function(R, z) {
                  for (var j = 0, ft = 0; ft < z.length; ) {
                    var mt = void 0, pt = z[ft], dt = pt.codePoints[0], Nt = So(dt), Yt = zc[j][Nt];
                    switch (mt = Yt[0], j = Yt[1], mt) {
                      case Ta:
                        R.font.hasGlyphForCodePoint(dt) || (ft = k0(z, ft, R.font));
                        break;
                      case xs:
                        ft = Wc(z, ft, R.font);
                        break;
                      case bs:
                        jc(z, ft, R.font);
                        break;
                      case ws:
                        ft = Gc(z, ft, R.font);
                        break;
                    }
                    ft++;
                  }
                }, X;
              }(La);
              M(R0, "zeroMarkWidths", "NONE");
              var ii = 44032, L0 = 55204, Ac = L0 - ii + 1, yo = 4352, xo = 4449, Ya = 4519, Sc = 19, bo = 21, Oi = 28, Cc = yo + Sc - 1, Ec = xo + bo - 1, Tc = Ya + Oi - 1, N0 = 9676, Fc = function(X) {
                return 4352 <= X && X <= 4447 || 43360 <= X && X <= 43388;
              }, Ic = function(X) {
                return 4448 <= X && X <= 4519 || 55216 <= X && X <= 55238;
              }, Dc = function(X) {
                return 4520 <= X && X <= 4607 || 55243 <= X && X <= 55291;
              }, Pc = function(X) {
                return 12334 <= X && X <= 12335;
              }, Oc = function(X) {
                return ii <= X && X <= L0;
              }, Bc = function(X) {
                return X - ii < Ac && (X - ii) % Oi === 0;
              }, Rc = function(X) {
                return yo <= X && X <= Cc;
              }, Lc = function(X) {
                return xo <= X && X <= Ec;
              }, Nc = function(X) {
                return 1 <= X && X <= Tc;
              }, Mc = 0, kc = 1, wo = 2, ys = 3, Ao = 4, M0 = 5, Uc = 6;
              function So(lt) {
                return Fc(lt) ? kc : Ic(lt) ? wo : Dc(lt) ? ys : Bc(lt) ? Ao : Oc(lt) ? M0 : Pc(lt) ? Uc : Mc;
              }
              var Xn = 0, Ta = 1, xs = 2, bs = 4, ws = 5, zc = [
                //       X                 L                 V                T                  LV                LVT               M
                // State 0: start state
                [[Xn, 0], [Xn, 1], [Xn, 0], [Xn, 0], [Ta, 2], [Ta, 3], [ws, 0]],
                // State 1: <L>
                [[Xn, 0], [Xn, 1], [xs, 2], [Xn, 0], [Ta, 2], [Ta, 3], [ws, 0]],
                // State 2: <L,V> or <LV>
                [[Xn, 0], [Xn, 1], [Xn, 0], [xs, 3], [Ta, 2], [Ta, 3], [bs, 0]],
                // State 3: <L,V,T> or <LVT>
                [[Xn, 0], [Xn, 1], [Xn, 0], [Xn, 0], [Ta, 2], [Ta, 3], [bs, 0]]
              ];
              function Bi(lt, X, at) {
                return new Ea(lt, lt.glyphForCodePoint(X).id, [X], at);
              }
              function k0(lt, X, at) {
                var R = lt[X], z = R.codePoints[0], j = z - ii, ft = Ya + j % Oi;
                j = j / Oi | 0;
                var mt = yo + j / bo | 0, pt = xo + j % bo;
                if (!at.hasGlyphForCodePoint(mt) || !at.hasGlyphForCodePoint(pt) || ft !== Ya && !at.hasGlyphForCodePoint(ft))
                  return X;
                var dt = Bi(at, mt, R.features);
                dt.features.ljmo = !0;
                var Nt = Bi(at, pt, R.features);
                Nt.features.vjmo = !0;
                var Yt = [dt, Nt];
                if (ft > Ya) {
                  var se = Bi(at, ft, R.features);
                  se.features.tjmo = !0, Yt.push(se);
                }
                return lt.splice.apply(lt, [X, 1].concat(Yt)), X + Yt.length - 1;
              }
              function Wc(lt, X, at) {
                var R = lt[X], z = lt[X].codePoints[0], j = So(z), ft = lt[X - 1].codePoints[0], mt = So(ft), pt, dt, Nt, Yt;
                if (mt === Ao && j === ys)
                  pt = ft, Yt = R;
                else {
                  j === wo ? (dt = lt[X - 1], Nt = R) : (dt = lt[X - 2], Nt = lt[X - 1], Yt = R);
                  var se = dt.codePoints[0], te = Nt.codePoints[0];
                  Rc(se) && Lc(te) && (pt = ii + ((se - yo) * bo + (te - xo)) * Oi);
                }
                var ce = Yt && Yt.codePoints[0] || Ya;
                if (pt != null && (ce === Ya || Nc(ce))) {
                  var ve = pt + (ce - Ya);
                  if (at.hasGlyphForCodePoint(ve)) {
                    var De = mt === wo ? 3 : 2;
                    return lt.splice(X - De + 1, De, Bi(at, ve, R.features)), X - De + 1;
                  }
                }
                return dt && (dt.features.ljmo = !0), Nt && (Nt.features.vjmo = !0), Yt && (Yt.features.tjmo = !0), mt === Ao ? (k0(lt, X - 1, at), X + 1) : X;
              }
              function Hc(lt) {
                switch (So(lt)) {
                  case Ao:
                  case M0:
                    return 1;
                  case wo:
                    return 2;
                  case ys:
                    return 3;
                }
              }
              function jc(lt, X, at) {
                var R = lt[X], z = lt[X].codePoints[0];
                if (at.glyphForCodePoint(z).advanceWidth !== 0) {
                  var j = lt[X - 1].codePoints[0], ft = Hc(j);
                  return lt.splice(X, 1), lt.splice(X - ft, 0, R);
                }
              }
              function Gc(lt, X, at) {
                var R = lt[X], z = lt[X].codePoints[0];
                if (at.hasGlyphForCodePoint(N0)) {
                  var j = Bi(at, N0, R.features), ft = at.glyphForCodePoint(z).advanceWidth === 0 ? X : X + 1;
                  lt.splice(ft, 0, j), X++;
                }
                return X;
              }
              var Vc = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]], Xc = [!1, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !1, !1, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0], Zc = [[], ["broken_cluster"], ["consonant_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["symbol_cluster"], [], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], ["consonant_syllable"], ["vowel_syllable"], ["standalone_cluster"]], Yc = {
                stateTable: Vc,
                accepting: Xc,
                tags: Zc
              }, Kc = ["O", "IND", "S", "GB", "B", "FM", "CGJ", "VMAbv", "VMPst", "VAbv", "VPst", "CMBlw", "VPre", "VBlw", "H", "VMBlw", "CMAbv", "MBlw", "CS", "R", "SUB", "MPst", "MPre", "FAbv", "FPst", "FBlw", "null", "SMAbv", "SMBlw", "VMPre", "ZWNJ", "ZWJ", "WJ", "M", "VS", "N", "HN", "MAbv"], Jc = {
                2507: [2503, 2494],
                2508: [2503, 2519],
                2888: [2887, 2902],
                2891: [2887, 2878],
                2892: [2887, 2903],
                3018: [3014, 3006],
                3019: [3015, 3006],
                3020: [3014, 3031],
                3144: [3142, 3158],
                3264: [3263, 3285],
                3271: [3270, 3285],
                3272: [3270, 3286],
                3274: [3270, 3266],
                3275: [3270, 3266, 3285],
                3402: [3398, 3390],
                3403: [3399, 3390],
                3404: [3398, 3415],
                3546: [3545, 3530],
                3548: [3545, 3535],
                3549: [3545, 3535, 3530],
                3550: [3545, 3551],
                3635: [3661, 3634],
                3763: [3789, 3762],
                3955: [3953, 3954],
                3957: [3953, 3956],
                3958: [4018, 3968],
                3959: [4018, 3953, 3968],
                3960: [4019, 3968],
                3961: [4019, 3953, 3968],
                3969: [3953, 3968],
                6971: [6970, 6965],
                6973: [6972, 6965],
                6976: [6974, 6965],
                6977: [6975, 6965],
                6979: [6978, 6965],
                69934: [69937, 69927],
                69935: [69938, 69927],
                70475: [70471, 70462],
                70476: [70471, 70487],
                70843: [70841, 70842],
                70844: [70841, 70832],
                70846: [70841, 70845],
                71098: [71096, 71087],
                71099: [71097, 71087]
              }, Qc = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 2, 0, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]], $c = [!1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0], qc = [[], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["virama_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["number_joiner_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["numeral_cluster"]], Co = {
                categories: Kc,
                decompositions: Jc,
                stateTable: Qc,
                accepting: $c,
                tags: qc
              }, Er = {
                X: 1,
                C: 2,
                V: 4,
                N: 8,
                H: 16,
                ZWNJ: 32,
                ZWJ: 64,
                M: 128,
                SM: 256,
                VD: 512,
                A: 1024,
                Placeholder: 2048,
                Dotted_Circle: 4096,
                RS: 8192,
                // Register Shifter, used in Khmer OT spec.
                Coeng: 16384,
                // Khmer-style Virama.
                Repha: 32768,
                // Atomically-encoded logical or visual repha.
                Ra: 65536,
                CM: 1 << 17,
                // Consonant-Medial.
                Symbol: 1 << 18
                // Avagraha, etc that take marks (SM,A,VD).
              }, ar = {
                Start: 1,
                Ra_To_Become_Reph: 2,
                Pre_M: 4,
                Pre_C: 8,
                Base_C: 16,
                After_Main: 32,
                Above_C: 64,
                Before_Sub: 128,
                Below_C: 256,
                After_Sub: 512,
                Before_Post: 1024,
                Post_C: 2048,
                After_Post: 4096,
                Final_C: 8192,
                SMVD: 16384,
                End: 32768
              }, _c = Er.C | Er.Ra | Er.CM | Er.V | Er.Placeholder | Er.Dotted_Circle, U0 = Er.ZWJ | Er.ZWNJ, Ri = Er.H | Er.Coeng, z0 = {
                Default: {
                  hasOldSpec: !1,
                  virama: 0,
                  basePos: "Last",
                  rephPos: ar.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Devanagari: {
                  hasOldSpec: !0,
                  virama: 2381,
                  basePos: "Last",
                  rephPos: ar.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Bengali: {
                  hasOldSpec: !0,
                  virama: 2509,
                  basePos: "Last",
                  rephPos: ar.After_Sub,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Gurmukhi: {
                  hasOldSpec: !0,
                  virama: 2637,
                  basePos: "Last",
                  rephPos: ar.Before_Sub,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Gujarati: {
                  hasOldSpec: !0,
                  virama: 2765,
                  basePos: "Last",
                  rephPos: ar.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Oriya: {
                  hasOldSpec: !0,
                  virama: 2893,
                  basePos: "Last",
                  rephPos: ar.After_Main,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Tamil: {
                  hasOldSpec: !0,
                  virama: 3021,
                  basePos: "Last",
                  rephPos: ar.After_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Telugu: {
                  hasOldSpec: !0,
                  virama: 3149,
                  basePos: "Last",
                  rephPos: ar.After_Post,
                  rephMode: "Explicit",
                  blwfMode: "Post_Only"
                },
                Kannada: {
                  hasOldSpec: !0,
                  virama: 3277,
                  basePos: "Last",
                  rephPos: ar.After_Post,
                  rephMode: "Implicit",
                  blwfMode: "Post_Only"
                },
                Malayalam: {
                  hasOldSpec: !0,
                  virama: 3405,
                  basePos: "Last",
                  rephPos: ar.After_Main,
                  rephMode: "Log_Repha",
                  blwfMode: "Pre_And_Post"
                },
                // Handled by UniversalShaper
                // Sinhala: {
                //   hasOldSpec: false,
                //   virama: 0x0DCA,
                //   basePos: 'Last_Sinhala',
                //   rephPos: POSITIONS.After_Main,
                //   rephMode: 'Explicit',
                //   blwfMode: 'Pre_And_Post'
                // },
                Khmer: {
                  hasOldSpec: !1,
                  virama: 6098,
                  basePos: "First",
                  rephPos: ar.Ra_To_Become_Reph,
                  rephMode: "Vis_Repha",
                  blwfMode: "Pre_And_Post"
                }
              }, th = {
                // Khmer
                6078: [6081, 6078],
                6079: [6081, 6079],
                6080: [6081, 6080],
                6084: [6081, 6084],
                6085: [6081, 6085]
              }, eh = Co.decompositions, W0 = new D(i("AAARAAAAAABg2AAAAWYPmfDtnXuMXFUdx+/uzs7M7szudAtECGJRIMRQbUAithQWkGAKiVhNpFVRRAmIQVCDkDYICGotIA9BTCz8IeUviv7BQ2PBtBIRLBBQIWAUsKg1BKxRAqIgfs/cc+aeOXPej3tnZX7JJ/dxzj3nd36/8753Z5fUsuxgsAwcAU4Gp4BPgM+Cd4P3RjieDs4GXwLrHJ5bDy4DG8A14LvgZrAZbAF3gns0z18ALgY/B78C94NHwBPgabAE/AX8DbwM5sF/QX0yD5vFcU/wVnAgWAoOAyvAceBE8CGwBpwGzgJfAF8BXwXfAFeC68EmsBlsAXeCreA+8CB4DDwF/gh2gd3gFfAGmKxn2QzYC+wHDgRLweFgJTgWrKrnuq/GcQ04jV6fheN54EJwEbgcXAG+Q8O/j+Mt4DZwB9haz8t9Hz3a8iCN/xiOvwRP0evH6fE68AzOH+Ke2eWYhw3PcGnuxvkr4A3QaGRZB7wFLAEHg2XgiEZ/fHKcp/ceBh/A+cngFPCpRm6vM3E8l8a5gN67GMdvgqsbeX2ap9yI601gM7gN3AG20mfuo8cdOP6GpvdUg9oKxz839GV90RDO2/glxN1B790NXsN1rZll7WYRdw+c70uvTwIHNAfTO0RyL5TDmnnbc3lmRQI9UnM0dD5eovfz4FpJ/BNpXNYWV+N6Lfg0hY97JK1vn+Pur9DoQur2F7m436bHDUK8C5t5/8vruo4+97WmXG+GLmzEiBF+PDwEOowYMWLEiBEjRoxYeBw5BDqIPEfXut9yWN+vVNxfrnnmWqR/PdgENoMt4E5wD9gOHgCPgifBs2BXM99b2o3jP8F/wMRUlrXAHNgHvH0q3895J46HguXgWHAGLctmLv9VuL96qnp7jxgxYsSbCbJvuRZ97/tqxT59VVRtixEjRsThBG7OSt5zzoPT0M+cBc4T5noXOs79TqLHeZrHUeCSqeJ96gacXy2kecNU8V6Hh7yXuQlhtw7B/PO1RTkr52Aj8JNFZjYg3gOKuC/g/v6Ls2wNuAY8urg//PcIb+6RZXuDNeCS6SzbBrJWlh0DLiFHco8ed9IjzzvaWfa9sZzTcf6D9mCcnbg3PlNcH4fzS8F2MDaLdQG4dLZIJxbbaZqv4ri8k58f3+mPs66T6/TTzqDeI0aMGDGiHP5dcR8ce/xxYcWi6vOfr725uRzcjnngXVOD61Hync+9uL+Nmyfej/NHpvL56A5Jeuz7uyfo+pqcPz2Vf1NH0ttJ03pekt8SmuY/EPYy9zzbN319ym/9TL6ZIt9MHCXRdxJtoAkWTRdz472n87D9cTwYLJvuz++I6WIePo/zE8AHp4v8WLyP0nufnM6/+zoDx8+DL08P6r9+urheRtO+jD6/cdrsx3mqu8w+xH4PScKIXa5D2jeCm8Et4DbwI/BjcC/4BXgI/Bb8DuwEu8Bu8Ap4A9RaRZptnO8J9gUHgEPAoWA5OLY1qMO90GEV7q+mYWtxPBWcIYnL4p+DsPNbxfVFOP86uAr8DNc34HgTDb8Vx9sVaRFI/LtagzYjnCqpb908EX87eBA8Bh4Hf2jle/9/wvGFVv787rrZZy8h7qtgDOuFOmiBuXYRvg/O9wMHgXeB97SLspk4sq0OI/q9v13+ek+sh3zYSRp9jrYorw9ll1/GRzR+KotYZSHf8laVP2lvpA/8OGdPMk59hqtXZ+L8nHbxvWwqO65ryu+fT3VZz+l4dET7L0R072ljsMyzTpaJqQxsbL8M9WajY789DO85XMp/Dcp3Qztdn+9qf/a97ZWK8PXc3G+TpC/nv8Mncy7ZvICF302P5O+aNiOtLdTXd+D4Q7DVwfcvWvx9zTEJ/o5iG3R8YAjGNFseha5PGuZKz7b7xxXbOrXMcu5eJSo//rXdH/73Enz6L1q/X+fyIu8wZGtNBmkjkzNZNgP2AvuBg2bysKUzduXn/66JtNeN4PCZvO0/x7Ujdn4VnYOvRJzjZ/I+9sQZeftX2Tc1RPcPz/Tf4/si0g+t5Mq+kfZjZL34Mc5ul3PPnE7TOxvHK2qDaZ+L++db2HyYqMo/qVnb/P8uH8/rmnFxR0k6DCu/rjj/RxT7KGUSWgbd+LMQuEgYB1zsk2qtvJD8v5AhdfdttbEunSxbcJD9Zf7chqp1Hlbe7FK1/aPVTfp7FgtC1yGGiSncFK/DhZvi+epZta0WWjlsfDZMyPRdSPrryqSSKnXx1bkq/Ye9TlRpk7Lrjq1UrfdC9X+MtKqwP6+3a/4pJFUZF0pZZpv91MYjMBaRRXbxpho5zQmUY3F+Pt4o7rvQrBXPdm00TaE24uMadaM2meLSI7iu071t3er3b6ZLi8JEde3qw+6zGv+ycF5kaRBh/m1T/7Yl/mMyTuMwadP4xL9ifjJpNwbvDZRJ8G8vnqV/Wf12aa/kyOdl69+BspTsXzGueE6E+JfZnvmXIfNPW+FfXkjb1YmqPNpnLP3b61fHCj/X5tzGANf2y3yqvC7Jv7btV4TVbdammI9l/g0dS5lNxLrk2j9r8xjjxhBQnygg0lgg/bOrfyct+udJi/Yrk0lFnxC7f+5kRbsNmcexfrubt0X/rGvLqrGSnYv3ZPHEe8r7lvMvUfi2LOu/2dg8LrRtQt2yfcv8r5IU70VkIs6nbebUXf0M/o7Znl39Sdoz+X1oEb5N8ffF67qhPfPP6eoUbxf+GRf/6sRnvaSdmw+Bf1VxmbD+2sa//DU7t/Gv2PfKpKdrBP92Ojk+IvqX16ks/2qxbL8EZnc2HqsgYuqPuzZV+I3RbujbDm+T0PmWCVO/5jqftp1zy+wSA6s0JWtp2z5e1oZV+yMsjB3ZXolsv0Ulrv01v3/iKrF94Qtbt9siCnmeb6fjjf59KnLk1xaEbvtvFnFirGvEOqmycQrbm/IMsXd3P28uh4nM3swXRER717OiX8kc7K2qqyn2p3maFGU/aruP5VCv+PraoTYU8yUmmbDwcYo6pusnM486xdoga4dkPCb1pK7Sfc6ebvkd4qeAtQcd/N63bB3lU3dlUnUf38VyvqCqK7JxlNSd7lydrDlm+/uqHiRvl30Nrp/n9zpkZRjoJ3V1diyP05rIYXHYs+w+D5+WMS8b5gZtKcuX0KT5d/WwtB97VnyvY6rjMukI56HI0rFJPwt8PjT/1OXzSbcMeEmdh294qvKK4rNu7j4n3LNZg8TKXwafv025U+XvKjHsT8Q7/7LGaJt9lAh7Asz3uv0XEX6t0duDoWN/93wmh92XpUHmCKb9GALbG+rZP3AfNbQPKKv/jpF/bP0JXfuW1QYk7dhljcyvk5mw+933Hpo1g26PQ2ZP6zVmTJt47P25jncD9vPwGS+q9QS/V6RaY8j8K8LmvUr9HfYCpH5OWL9lZY+Sv6pesHCJHbtrf9k6etZvf0G1L0ja4cAe1UT/s3zdCe3/Q5/n372wMc97/E1Qh0Tbmfwh3m/V9On72tNnrCF1sJkVe1EyXMdBa7+lHMsk44zMF6St9e2djNnbm8ybpHkq+gbbemMaH0UZmD8obKGrk7r+nt+3bE7o83YZp/vqOKdv6PzJNN6mTJsI/51XR7i2ZrGA5B6zFwnjzxmqPjaGfW3tZNrz1eljq29mOOqeCfF/irRt87PNw0uXSVAvrmOMNT569MptsYaV0sic/wbY13e8hPrb9K2ySUJ0j6G/Lu0U4qpTrR23jMp6m5hU+YTaWCeh9aIsm/rqUHV4bFv42kgnZdfH1PUj1D7DVH9d8khRN1zFRl/+/TW//qxL1uH83+mk3H+SvRtS2TDU90nX2TpM6/1xzZpZtoYdK763dqlz0f6uNeFehcs+H/nbGP77MpX06n/ofpzP+tVmTUvRtVuX/cjS67OE5kRBrxyJ+w/dPo7r+9cO1160e3gqu0S2uW7PjN/L6ns/UfMf10Lai87frJ+3KndAfc8yTf1M3T4s6qm4/yh7/2GSkG8UMw//DvRLgbYZSEOxr0LCWvRdjfh9XGzfqN4NivfZd7rsmFp08zmbssrKJEuTfVMZopdpbuwSrhNv3/N2s+0PDG3KNB6RMrFvJHv6B85HXObAoWsd3zm3i+6uZYytv+5+pohbpo6+tpZJFfmGlrcMf4c8b1Pe2OUIsaXJrinCTfaxtZOt+NYnU3hIfQlN20Z/1+dt7JaqLsbIzycNWZmrlNg2Dc2/LJ1T+T6WrrYSml4Ku7ik7yIx2opJD51vU9UfVRmrqL8u/olZj0PyCLV5irxcdKoi/6rKb8qTrHsnhW9jyZH/nSpeWDzxd9769uQ016lgUuf2pAfKPhu2FpfZL2Yb9snLNl/fNIepXaUsj4vNXCXUZ75px8ojNP8UPvAta2g6fb+F1ckZuneshv1vGXXDeyRRrN/bBPS1Jul+l+7zW86R7Wv63WXyDpt/RxraRjvC+TC3O61/Sqj/prag8x372yQivn+XwudrI2X2E2KdtJEov52e0L+uv4FO3p/rvssgsL8F4d/z9PzlWS94m8fqS3361Fi+6qaVYHwi9Yz4iH2fobIj+45cpz/TUaarr/4+z+vaWtVtyAX2d1LG8W9C3f+F1mnf36/k4w3YPrLv+XBVXCJs3cr+n4MKJuLv/fN9GhNdXVP5pJMN9vFi3rpv3/r8Ywg3SYp66zNOsO8QGcxPpnmRS/1mvmJjju3v7absI2xspQrvs1dNbjOj/wP7h1RlZyKGy8occ408UL8En4v6xfC/K3z52XzJd62T8vuZGGsxo/6O46ntmNqqFb/jps2/hHV4rPKH0svT4pstU7t2tZ9u/ZdqbJL1MwP6O86Fyt4jYaIrGz9mjEt8lFL4PtVE6votG2P6fpdf/GZRse7s3bf4BtSl/DIbKMctx++Z+8o6K6z9FPOwKsRmXiaNl7C+6NYRpjlbqG1j72f49qsuY4brd/amb4ZVc8TQ+sSH985LrEe8iPWJnfPrJRbWbb+dwn4x6o+r/aS2S7w3qWt//LnYz2ntE0vH1uDcyKatx1rH+EiMPEN1SZG/iz6+9o01Rob6O7Q+xLZ1jHobK61U+pWVvo2EpuWqzzD6Poa+pvhli0wn8Zq/72Mzm2d90o5VN1x9ZKuzbTgvqWwUIin8FSpl1CXXvFRxU0iozVPYJDRtF3uFphn6XAyJUUdD7SjTJ8v6n9fVbVObkKWp001lc9VRlqdOf5v0ZM+bymdbfp1NfG0bq27Y5JMyfxeJkU6o/inKH8O2Zfgidb6h/g3VJ7QcVbWL0Pxt6rlrPqa4KfQ25a2zl4/E8GdM/4fK/wA=", "base64")), rh = new E(Yc), mn = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                return l(X, lt), X.planFeatures = function(R) {
                  R.addStage(nh), R.addStage(["locl", "ccmp"]), R.addStage(ih), R.addStage("nukt"), R.addStage("akhn"), R.addStage("rphf", !1), R.addStage("rkrf"), R.addStage("pref", !1), R.addStage("blwf", !1), R.addStage("abvf", !1), R.addStage("half", !1), R.addStage("pstf", !1), R.addStage("vatu"), R.addStage("cjct"), R.addStage("cfar", !1), R.addStage(oh), R.addStage({
                    local: ["init"],
                    global: ["pres", "abvs", "blws", "psts", "haln", "dist", "abvm", "blwm", "calt", "clig"]
                  }), R.unicodeScript = Uu(R.script), R.indicConfig = z0[R.unicodeScript] || z0.Default, R.isOldSpec = R.indicConfig.hasOldSpec && R.script[R.script.length - 1] !== "2";
                }, X.assignFeatures = function(R, z) {
                  for (var j = function(pt) {
                    var dt = z[pt].codePoints[0], Nt = th[dt] || eh[dt];
                    if (Nt) {
                      var Yt = Nt.map(function(se) {
                        var te = R.font.glyphForCodePoint(se);
                        return new Ea(R.font, te.id, [se], z[pt].features);
                      });
                      z.splice.apply(z, [pt, 1].concat(Yt));
                    }
                  }, ft = z.length - 1; ft >= 0; ft--)
                    j(ft);
                }, X;
              }(La);
              M(mn, "zeroMarkWidths", "NONE");
              function As(lt) {
                return W0.get(lt.codePoints[0]) >> 8;
              }
              function H0(lt) {
                return 1 << (W0.get(lt.codePoints[0]) & 255);
              }
              var Eo = function(X, at, R, z) {
                this.category = X, this.position = at, this.syllableType = R, this.syllable = z;
              };
              function nh(lt, X) {
                for (var at = 0, R = 0, z = s(rh.match(X.map(As))), j; !(j = z()).done; ) {
                  var ft = j.value, mt = ft[0], pt = ft[1], dt = ft[2];
                  if (mt > R) {
                    ++at;
                    for (var Nt = R; Nt < mt; Nt++)
                      X[Nt].shaperInfo = new Eo(Er.X, ar.End, "non_indic_cluster", at);
                  }
                  ++at;
                  for (var Yt = mt; Yt <= pt; Yt++)
                    X[Yt].shaperInfo = new Eo(1 << As(X[Yt]), H0(X[Yt]), dt[0], at);
                  R = pt + 1;
                }
                if (R < X.length) {
                  ++at;
                  for (var se = R; se < X.length; se++)
                    X[se].shaperInfo = new Eo(Er.X, ar.End, "non_indic_cluster", at);
                }
              }
              function Ka(lt) {
                return lt.shaperInfo.category & _c;
              }
              function ba(lt) {
                return lt.shaperInfo.category & U0;
              }
              function Fa(lt) {
                return lt.shaperInfo.category & Ri;
              }
              function Ia(lt, X) {
                for (var at = s(lt), R; !(R = at()).done; ) {
                  var z, j = R.value;
                  j.features = (z = {}, z[X] = !0, z);
                }
                var ft = lt[0]._font._layoutEngine.engine.GSUBProcessor;
                return ft.applyFeatures([X], lt), lt.length === 1;
              }
              function ah(lt, X, at) {
                var R = [at, X, at];
                return Ia(R.slice(0, 2), "blwf") || Ia(R.slice(1, 3), "blwf") ? ar.Below_C : Ia(R.slice(0, 2), "pstf") || Ia(R.slice(1, 3), "pstf") || Ia(R.slice(0, 2), "pref") || Ia(R.slice(1, 3), "pref") ? ar.Post_C : ar.Base_C;
              }
              function ih(lt, X, at) {
                var R = at.indicConfig, z = lt._layoutEngine.engine.GSUBProcessor.features, j = lt.glyphForCodePoint(9676).id, ft = lt.glyphForCodePoint(R.virama).id;
                if (ft)
                  for (var mt = new Ea(lt, ft, [R.virama]), pt = 0; pt < X.length; pt++)
                    X[pt].shaperInfo.position === ar.Base_C && (X[pt].shaperInfo.position = ah(lt, X[pt].copy(), mt));
                for (var dt = 0, Nt = To(X, 0); dt < X.length; dt = Nt, Nt = To(X, dt)) {
                  var Yt = X[dt].shaperInfo;
                  Yt.category;
                  var se = Yt.syllableType;
                  if (!(se === "symbol_cluster" || se === "non_indic_cluster")) {
                    if (se === "broken_cluster" && j) {
                      var te = new Ea(lt, j, [9676]);
                      te.shaperInfo = new Eo(1 << As(te), H0(te), X[dt].shaperInfo.syllableType, X[dt].shaperInfo.syllable);
                      for (var ce = dt; ce < Nt && X[ce].shaperInfo.category === Er.Repha; )
                        ce++;
                      X.splice(ce++, 0, te), Nt++;
                    }
                    var ve = Nt, De = dt, Ge = !1;
                    if (R.rephPos !== ar.Ra_To_Become_Reph && z.rphf && dt + 3 <= Nt && (R.rephMode === "Implicit" && !ba(X[dt + 2]) || R.rephMode === "Explicit" && X[dt + 2].shaperInfo.category === Er.ZWJ)) {
                      var rr = [X[dt].copy(), X[dt + 1].copy(), X[dt + 2].copy()];
                      if (Ia(rr.slice(0, 2), "rphf") || R.rephMode === "Explicit" && Ia(rr, "rphf")) {
                        for (De += 2; De < Nt && ba(X[De]); )
                          De++;
                        ve = dt, Ge = !0;
                      }
                    } else if (R.rephMode === "Log_Repha" && X[dt].shaperInfo.category === Er.Repha) {
                      for (De++; De < Nt && ba(X[De]); )
                        De++;
                      ve = dt, Ge = !0;
                    }
                    switch (R.basePos) {
                      case "Last": {
                        var Ke = Nt, pr = !1;
                        do {
                          var cr = X[--Ke].shaperInfo;
                          if (Ka(X[Ke])) {
                            if (cr.position !== ar.Below_C && (cr.position !== ar.Post_C || pr)) {
                              ve = Ke;
                              break;
                            }
                            cr.position === ar.Below_C && (pr = !0), ve = Ke;
                          } else if (dt < Ke && cr.category === Er.ZWJ && X[Ke - 1].shaperInfo.category === Er.H)
                            break;
                        } while (Ke > De);
                        break;
                      }
                      case "First": {
                        ve = dt;
                        for (var yr = ve + 1; yr < Nt; yr++)
                          Ka(X[yr]) && (X[yr].shaperInfo.position = ar.Below_C);
                      }
                    }
                    Ge && ve === dt && De - ve <= 2 && (Ge = !1);
                    for (var Ar = dt; Ar < ve; Ar++) {
                      var Zr = X[Ar].shaperInfo;
                      Zr.position = Math.min(ar.Pre_C, Zr.position);
                    }
                    ve < Nt && (X[ve].shaperInfo.position = ar.Base_C);
                    for (var en = ve + 1; en < Nt; en++)
                      if (X[en].shaperInfo.category === Er.M) {
                        for (var Gr = en + 1; Gr < Nt; Gr++)
                          if (Ka(X[Gr])) {
                            X[Gr].shaperInfo.position = ar.Final_C;
                            break;
                          }
                        break;
                      }
                    if (Ge && (X[dt].shaperInfo.position = ar.Ra_To_Become_Reph), at.isOldSpec) {
                      for (var xr = at.unicodeScript !== "Malayalam", Nr = ve + 1; Nr < Nt; Nr++)
                        if (X[Nr].shaperInfo.category === Er.H) {
                          var jr = void 0;
                          for (jr = Nt - 1; jr > Nr && !(Ka(X[jr]) || xr && X[jr].shaperInfo.category === Er.H); jr--)
                            ;
                          if (X[jr].shaperInfo.category !== Er.H && jr > Nr) {
                            var An = X[Nr];
                            X.splice.apply(X, [Nr, 0].concat(X.splice(Nr + 1, jr - Nr))), X[jr] = An;
                          }
                          break;
                        }
                    }
                    for (var wr = ar.Start, Mr = dt; Mr < Nt; Mr++) {
                      var Yr = X[Mr].shaperInfo;
                      if (Yr.category & (U0 | Er.N | Er.RS | Er.CM | Ri & Yr.category)) {
                        if (Yr.position = wr, Yr.category === Er.H && Yr.position === ar.Pre_M) {
                          for (var Sr = Mr; Sr > dt; Sr--)
                            if (X[Sr - 1].shaperInfo.position !== ar.Pre_M) {
                              Yr.position = X[Sr - 1].shaperInfo.position;
                              break;
                            }
                        }
                      } else
                        Yr.position !== ar.SMVD && (wr = Yr.position);
                    }
                    for (var fn = ve, Sn = ve + 1; Sn < Nt; Sn++)
                      if (Ka(X[Sn])) {
                        for (var On = fn + 1; On < Sn; On++)
                          X[On].shaperInfo.position < ar.SMVD && (X[On].shaperInfo.position = X[Sn].shaperInfo.position);
                        fn = Sn;
                      } else
                        X[Sn].shaperInfo.category === Er.M && (fn = Sn);
                    var Mn = X.slice(dt, Nt);
                    Mn.sort(function(pa, Es) {
                      return pa.shaperInfo.position - Es.shaperInfo.position;
                    }), X.splice.apply(X, [dt, Mn.length].concat(Mn));
                    for (var Bn = dt; Bn < Nt; Bn++)
                      if (X[Bn].shaperInfo.position === ar.Base_C) {
                        ve = Bn;
                        break;
                      }
                    for (var Zn = dt; Zn < Nt && X[Zn].shaperInfo.position === ar.Ra_To_Become_Reph; Zn++)
                      X[Zn].features.rphf = !0;
                    for (var Yn = !at.isOldSpec && R.blwfMode === "Pre_And_Post", In = dt; In < ve; In++)
                      X[In].features.half = !0, Yn && (X[In].features.blwf = !0);
                    for (var xn = ve + 1; xn < Nt; xn++)
                      X[xn].features.abvf = !0, X[xn].features.pstf = !0, X[xn].features.blwf = !0;
                    if (at.isOldSpec && at.unicodeScript === "Devanagari")
                      for (var kn = dt; kn + 1 < ve; kn++)
                        X[kn].shaperInfo.category === Er.Ra && X[kn + 1].shaperInfo.category === Er.H && (kn + 1 === ve || X[kn + 2].shaperInfo.category === Er.ZWJ) && (X[kn].features.blwf = !0, X[kn + 1].features.blwf = !0);
                    var kr = 2;
                    if (z.pref && ve + kr < Nt)
                      for (var Ir = ve + 1; Ir + kr - 1 < Nt; Ir++) {
                        var _r = [X[Ir].copy(), X[Ir + 1].copy()];
                        if (Ia(_r, "pref")) {
                          for (var Kr = 0; Kr < kr; Kr++)
                            X[Ir++].features.pref = !0;
                          if (z.cfar)
                            for (; Ir < Nt; Ir++)
                              X[Ir].features.cfar = !0;
                          break;
                        }
                      }
                    for (var Ur = dt + 1; Ur < Nt; Ur++)
                      if (ba(X[Ur])) {
                        var Dn = X[Ur].shaperInfo.category === Er.ZWNJ, oi = Ur;
                        do
                          oi--, Dn && delete X[oi].features.half;
                        while (oi > dt && !Ka(X[oi]));
                      }
                  }
                }
              }
              function oh(lt, X, at) {
                for (var R = at.indicConfig, z = lt._layoutEngine.engine.GSUBProcessor.features, j = 0, ft = To(X, 0); j < X.length; j = ft, ft = To(X, j)) {
                  for (var mt = !!z.pref, pt = j; pt < ft; pt++)
                    if (X[pt].shaperInfo.position >= ar.Base_C) {
                      if (mt && pt + 1 < ft) {
                        for (var dt = pt + 1; dt < ft; dt++)
                          if (X[dt].features.pref) {
                            if (!(X[dt].substituted && X[dt].isLigated && !X[dt].isMultiplied)) {
                              for (pt = dt; pt < ft && Fa(X[pt]); )
                                pt++;
                              X[pt].shaperInfo.position = ar.BASE_C, mt = !1;
                            }
                            break;
                          }
                      }
                      if (at.unicodeScript === "Malayalam")
                        for (var Nt = pt + 1; Nt < ft; Nt++) {
                          for (; Nt < ft && ba(X[Nt]); )
                            Nt++;
                          if (Nt === ft || !Fa(X[Nt]))
                            break;
                          for (Nt++; Nt < ft && ba(X[Nt]); )
                            Nt++;
                          Nt < ft && Ka(X[Nt]) && X[Nt].shaperInfo.position === ar.Below_C && (pt = Nt, X[pt].shaperInfo.position = ar.Base_C);
                        }
                      j < pt && X[pt].shaperInfo.position > ar.Base_C && pt--;
                      break;
                    }
                  if (pt === ft && j < pt && X[pt - 1].shaperInfo.category === Er.ZWJ && pt--, pt < ft)
                    for (; j < pt && X[pt].shaperInfo.category & (Er.N | Ri); )
                      pt--;
                  if (j + 1 < ft && j < pt) {
                    var Yt = pt === ft ? pt - 2 : pt - 1;
                    if (at.unicodeScript !== "Malayalam" && at.unicodeScript !== "Tamil") {
                      for (; Yt > j && !(X[Yt].shaperInfo.category & (Er.M | Ri)); )
                        Yt--;
                      Fa(X[Yt]) && X[Yt].shaperInfo.position !== ar.Pre_M ? Yt + 1 < ft && ba(X[Yt + 1]) && Yt++ : Yt = j;
                    }
                    if (j < Yt && X[Yt].shaperInfo.position !== ar.Pre_M) {
                      for (var se = Yt; se > j; se--)
                        if (X[se - 1].shaperInfo.position === ar.Pre_M) {
                          var te = se - 1;
                          te < pt && pt <= Yt && pt--;
                          var ce = X[te];
                          X.splice.apply(X, [te, 0].concat(X.splice(te + 1, Yt - te))), X[Yt] = ce, Yt--;
                        }
                    }
                  }
                  if (j + 1 < ft && X[j].shaperInfo.position === ar.Ra_To_Become_Reph && X[j].shaperInfo.category === Er.Repha !== (X[j].isLigated && !X[j].isMultiplied)) {
                    var ve = void 0, De = R.rephPos, Ge = !1;
                    if (De !== ar.After_Post) {
                      for (ve = j + 1; ve < pt && !Fa(X[ve]); )
                        ve++;
                      if (ve < pt && Fa(X[ve]) && (ve + 1 < pt && ba(X[ve + 1]) && ve++, Ge = !0), !Ge && De === ar.After_Main) {
                        for (ve = pt; ve + 1 < ft && X[ve + 1].shaperInfo.position <= ar.After_Main; )
                          ve++;
                        Ge = ve < ft;
                      }
                      if (!Ge && De === ar.After_Sub) {
                        for (ve = pt; ve + 1 < ft && !(X[ve + 1].shaperInfo.position & (ar.Post_C | ar.After_Post | ar.SMVD)); )
                          ve++;
                        Ge = ve < ft;
                      }
                    }
                    if (!Ge) {
                      for (ve = j + 1; ve < pt && !Fa(X[ve]); )
                        ve++;
                      ve < pt && Fa(X[ve]) && (ve + 1 < pt && ba(X[ve + 1]) && ve++, Ge = !0);
                    }
                    if (!Ge) {
                      for (ve = ft - 1; ve > j && X[ve].shaperInfo.position === ar.SMVD; )
                        ve--;
                      if (Fa(X[ve]))
                        for (var rr = pt + 1; rr < ve; rr++)
                          X[rr].shaperInfo.category === Er.M && ve--;
                    }
                    var Ke = X[j];
                    X.splice.apply(X, [j, 0].concat(X.splice(j + 1, ve - j))), X[ve] = Ke, j < pt && pt <= ve && pt--;
                  }
                  if (mt && pt + 1 < ft) {
                    for (var pr = pt + 1; pr < ft; pr++)
                      if (X[pr].features.pref) {
                        if (X[pr].isLigated && !X[pr].isMultiplied) {
                          var cr = pt;
                          if (at.unicodeScript !== "Malayalam" && at.unicodeScript !== "Tamil") {
                            for (; cr > j && !(X[cr - 1].shaperInfo.category & (Er.M | Ri)); )
                              cr--;
                            if (cr > j && X[cr - 1].shaperInfo.category === Er.M) {
                              for (var yr = pr, Ar = pt + 1; Ar < yr; Ar++)
                                if (X[Ar].shaperInfo.category === Er.M) {
                                  cr--;
                                  break;
                                }
                            }
                          }
                          cr > j && Fa(X[cr - 1]) && cr < ft && ba(X[cr]) && cr++;
                          var Zr = pr, en = X[Zr];
                          X.splice.apply(X, [cr + 1, 0].concat(X.splice(cr, Zr - cr))), X[cr] = en, cr <= pt && pt < Zr && pt++;
                        }
                        break;
                      }
                  }
                  X[j].shaperInfo.position === ar.Pre_M && (!j || !/Cf|Mn/.test(P.getCategory(X[j - 1].codePoints[0]))) && (X[j].features.init = !0);
                }
              }
              function To(lt, X) {
                if (X >= lt.length)
                  return X;
                for (var at = lt[X].shaperInfo.syllable; ++X < lt.length && lt[X].shaperInfo.syllable === at; )
                  ;
                return X;
              }
              var sh = Co.categories, j0 = Co.decompositions, fh = new D(i("AAACAAAAAAAQugAAAQUO+vHtnHuMX0UVx2d3u/t7bXe7FlqgvB+mpQhFmhikMRAg0ZQmakMU+cPWBzZisEGNjUpoiIYCEgmGUGOEGqOVNPUZUGNA+QNIBU2KREEFFSMBUYRISMXE+B3vnPzOzp553tcWfif5ZO5jnufMzJ2ZO/eumlDqFLAWnAMuBBvBZnC5uXZeBe4WsA1sBzs8/naCXcL1G8GtYDfYA74NvgfuAfcZHmT+fwEeBb8DTwvxPQWeAavACyZvq8z9VYxXwCGglijVBcvACnA8eCM4E6wHG8BF4BLwbvA+8AHwUbAd7AA7wS5wC9gN7gR7wX5wN7gXPAAeBr8Gvwd/Ac+CF8EhoCaV6oBZsBKcAE4FZ0wWeV8P9zxwoTnfCHczuBxsAdvAx8Gnzf1r4X4B3AxuA1+bHJb9m5PzdVGW/Yjv+xXHyfmxFfd9OH8Q/Ar8Bjw1WZT3GfACeAX8N5CfqSmlZsAKsGqqCH8K3DXgbHCuuXYB3HeAd4HLpgrdarbi+EPgY+CT4HPg8ybMTcb9MtyvghtYut/A+b4pf95+ELgfw08Qx/3gADgInjDl0veehPtX8A/wsrn2KtzxDuogWNoJx38k/BzXKeI8Ee5qcBZYD9aZtDbg+AwT19uMX83F7JizCdcvBZdZ97c6/BMfMWmfzfTm88/95aLj+DDSvApcDXZ04uPfaen3TMHPLvi5BezuFPVtD4t/qUcfe3FvP7gb3Ouwo9T+H+gMy/UIjh8DfwBPm7T08d/M8WMBe1Sh3xEjXo+M2s+IESNGjBgxYsSI1wLrOsM1gRsi/P+TzV3/Zc1jvxgR/j8IM9Et1mEGcJeDFeA4cJq5/ia467uF/w1wzwdvB+80998LdwvYZs63w90Bdnbd6Wp/uzz3R4wYMWJEvZzTMm2Xf8SIEfVQd/v+EsaPt3eL90J3wP2WMJ78Trd4t6+P77Hu37cIxp9/ny6YXqrUJeCR6TA74e/nll81MzxejeMtYA94HBwy91bPYow+O/S3A8d7oIM/gRN7CAP29Iqx/B1ThfuwOecM+vA3NmRjf6Gfm3BtH7v+PI7XDpS6EuwDz4O10+0/f9om1F4ehO4OmHp6EO7jxl56nvhsN/15ut+4Z0b657yYkZ7UJ0jhX0bcr3bn+6P87vekN4762QNzvWHZtL+jcH5srzg/uTf0f3pvfj5i+6tYW7rK9+aefO+tuL4BXAQ2gs3gPeBJc//9OL4CXAWuNvc/A64DN4Jbwe0s7jtxvBfsAz8EPwX3gwPgoJAHPQ9/Atf/bO7p/TTP4fglwS/5/zfujfWH5z0cz4Gj+8X5Sf1ib4m+vwbHZ/fdOtP+z+3LOnPp/QL4vxhsApeCy8BWk/a2ftFmYu22Hf4/Ba4B14Hrwc0sP7fh+Cvg6+Au8F1WthA/8pT7UeTxZ/12njkuXT8UyM9i6iur1EEb6f+yPz/eg0b3v4X7x365fMaW42lPu7PTv6vi8i/G+lWF/cvUk7bLl1r+5/rN5tu3j2qvWTd/qV+4h+AqjDGnBsX59GDo94iBXDa6v6Yjl6vu+h8itJcsZq/ZykHhHg/3tMHhUe9s/Yfuny7YNxTvQ8LYdrER2+/c0GBezhrMv3ZNRv7PmYirh7oOv4W1Y72/cwPOzx8U7X8d2295sfE3MPnbBPfSQbHv9nK4HxTqiK/trI7Yy5mLzvuVg/nX+N7V51A3r+gMy/4J434W7l2dYf5PZWGuNX6uh3uzEPetuLY7sZ20zTETY2oxyBhj3DrnfsidYPeXRGLHpxzX6pbFofGRkFBdGhcgW40L4cYtd9JAElO36q4LEzXHX7VMtZ2BEhJjy9dT25fazOtJxhwsBrHzwfu8w12kMYN9fLhIbp2RxlI59rX1dzjpsKl2Fxt3iu6rbofc9q5+KcRrXVzzDn6/Crvk6p/y1GFgGhs9/6maHjBLgv8/18fTxl1q0bPoW8ywsFTGWaazHosrNn/kP2eeqEroZYLZphsZl7L82eephMIqNT8dyT9JjH1Jpg32ubZvTB/SF665ymSnnaqjUHum+1Qn+NyOtz9f2r6y5OQ51b6hYy0D40r2tYXar30+Y/mbVX6JqY+hMC60XZapoh3S/HdOpT3DYu3rs0lKnquyb277JZvyPlqp+f1zVVK2/dJYNpQGf04uYyh1+PTPqfalZ2tO/xwSu+3bOrDzmWvfcTW/fLmibRx6lkvlcOlc8qsE/y5/rnSk67F1iAu1VT6+4jKt5tufn8e2b+n57JKcckhrsKG1Cd6Wu+Y8tf2l5DenPafqQZ/7xstKLeyr+XnInjSelvRgS9n27JPQM5n6Am7jmLG8VK6m7OvyS2L313XYV2r/tth5LWPfNxhyhI+1Up7HVbe/HMgeZE8brtNQ/7tcyX0cn//H2LTO9kpir5VI6yYp9szJW9W2jI1Tqfl5ic2v1GZ5XaG6RDZbyvxMO/DVh1SdUj5y1vraaHs+2/TYNXvtSRoXk4wrf9w6fEctnFt0zL2y+xFsfSrLza2zOTqMiZv8xOpbn8+xsL5ykdj6VsxNKb/Lvxb7nX8u48y1x6yuMW3V9tNxTlouzXslibVxndjC14xda8g2NIbg5x01XAP2lfeIBFSi/zrQEporTXru8fCueiy1CUnqrhspSM9SzbSS64tep9R1ZsZcOxKsUEUfNZeYtr0vjY5DeXW915hT8/PRV8MxlR1HV4DHZZc9R7dzajgWoXikdLtGr0uEfPigsGS/NvYjSHW87XejoXZehZ74XrcqpQ4d5T5f7Gu8f6g7fQmefoqOqk4/VarQv2o4/VDetPDnhjR2dc3BCBp/9NVw7KGfwStVMf6aZNAajj6224j9HCZbpZa/LvH1gU30i/q5WnUdSNEprxv2eIOwx2pcjjLMsmObo008k0J4u69P3d9QdbspW/dy080Nb8PXqcrmj0vsc7tu6qwD1A5oLYr3U3XWSxqj6/a10nCMkudJMyxvrvbK55jUrqU+Xlr/Iai98jY7mVAml5QNHxq31j2m5TrSdmp6z5p+9kpzQntdQbI1Pafr6I9C60gxrALHGtdF6tyhLTtxeBuW+hhqyzPMX931xl6rJ5f6n5h3blpsW7vKbvdBfL1gpYfjDLrvob1drrRT+mcuMf1OrJSdW/P+RfufdUB+pOtdTzhpL5t0jfKr46P3obQfQdPGt1jS+DEkx4MT2PmEg1j72OthqfZNWX+JuZ4at/2sTAmn5cSIMqZIjk0pnD0+aUI6YS9ekdaspWsp8cWEC62dS66UTkq+ypajyvXSlPz4xhQhm/ns6wpXBVI560jHN9aKkdT46spvWT916rONdHNsGSNtl6Hp8oakTVukpF9n3U3Jx0TNefbp3R4jltVfFfpvQkJpNaH/puyco++qbZPz7sE1L3DFGVovc4XPLUPO3ELyrzLiSpmPhaTJfqeJ+t60PiTh9snNW2656upDQ+Wtyg6ueJquB7HSVPspW9a28lDWJouhb6iyv7XjTfVL67j2vjDpvUfMt1Vl4GvctMaeq/vYcFWXIfV5Ku3XaxK951H6dsWFrhcxa3pU/pz3C1xc71tTcaXjGjtJbYIj7UHm7wxSyx+D/d7SfpfJ3wPpfSQp32tS2dt8V2tD7+Bce3rpPa3eC6Dr8Ulq+K+J3HFvbn312Zv2RdStr9g0pP0P/B04XbP3Q8cIT2dlRF6orkrhY/Rv27FqHfL1DP480ffo/V6V7aTHXLKDbTdXOOrnyG1ScvSv6xqve30lPzdpj36M8Pilb+L5vr0xE3dd30nWIfZ45uSSxK4x+CRmTUK6F/LrSsfnj+aOdYyvpXyMK7/OpHWjlDTsa0rJum5K7Ppnj7F9c+0q0qtr7pQji2X9oMwcVrJfmblwU2V2SV3rEk3YuO46XXf8MfrQz077G2zftyDkj/ZqhcZr9nldkOg5ykAt3GunJbR3NGYsUfWafd3ts853C4dLHppOM6WcfM5C+xSbaC/2HMa1H9v1vXdoXm/LKSVpYh5wqmr/X67SfwHtPc9a97p/k8bt0hpbW0j1Svr2m+7Rd98qIQ1pvSF273dKOjHYNmk6fd8/JX3tWIddblBqoU5p7zrZKnd9TppjVq0DSitWqkwz12b2exb7vwjaRvS/TFd/S+8AYvIo+Suri5TwvvZRdV1IQevQ1/8SA+UeH5eto7n/X1Oe86ptaafl8kPjcF7P7W93eD9d5n+oSvn7fFe7I/G9q1IBfylSR71N6fft94ZU18hOXKR+JqUO8f4+5dvLsmWlMQb/Vov+CUDlpTGUndeQlG3fdZWdRPoPgl3mmDlsLnaey/4X3tVuU+o6L3/Pym+qlLV/jk6rlBRd8394hZ6JdnuqIv2ykOh3pfq96Wkq/E8qu2xl88/tOJ4R3tfmpbGi3c5T859bzqr7MbsN03iI5itUNj5eaEKWqIX/KJCQ/iFWNZMmHXs8ovWk53JzFq5vPul6zDjLV36pX7bzvNzB0YlQOZephWtRS5T7eeSq8030R77/HvC1d7tN83Zt9yltrDdwSR0XxsZd5l+MvvvU1/M9jSnj+Nh6FPJbBld/w6XHXH5MZeXrOfS/65g9RTl1JCa8chzX2RZ9/3lXSh4/VqWfEBNq4b82Ytp6m+9Qqxir1jX+rfPdT1vvsWhM6bPbmON6E1LnPCZW7L0qqXswmtqf0MQelZj4myrzYtzvIYmURlvtqapyx+gzRfd0XPfahVSOquMoG+dibBdl46iyfdbV1qvUW9m8+KTudMvkzZe/pqTJ+pWTflX5zw1fVfox6ZTVc8hvHflOSb+OuG1JsZ0kufXAJf8D", "base64")), lh = new E(Co), br = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                return l(X, lt), X.planFeatures = function(R) {
                  R.addStage(ch), R.addStage(["locl", "ccmp", "nukt", "akhn"]), R.addStage(V0), R.addStage(["rphf"], !1), R.addStage(hh), R.addStage(V0), R.addStage(["pref"]), R.addStage(dh), R.addStage(["rkrf", "abvf", "blwf", "half", "pstf", "vatu", "cjct"]), R.addStage(vh), R.addStage(["abvs", "blws", "pres", "psts", "dist", "abvm", "blwm"]);
                }, X.assignFeatures = function(R, z) {
                  for (var j = function(pt) {
                    var dt = z[pt].codePoints[0];
                    if (j0[dt]) {
                      var Nt = j0[dt].map(function(Yt) {
                        var se = R.font.glyphForCodePoint(Yt);
                        return new Ea(R.font, se.id, [Yt], z[pt].features);
                      });
                      z.splice.apply(z, [pt, 1].concat(Nt));
                    }
                  }, ft = z.length - 1; ft >= 0; ft--)
                    j(ft);
                }, X;
              }(La);
              M(br, "zeroMarkWidths", "BEFORE_GPOS");
              function G0(lt) {
                return fh.get(lt.codePoints[0]);
              }
              var uh = function(X, at, R) {
                this.category = X, this.syllableType = at, this.syllable = R;
              };
              function ch(lt, X) {
                for (var at = 0, R = s(lh.match(X.map(G0))), z; !(z = R()).done; ) {
                  var j = z.value, ft = j[0], mt = j[1], pt = j[2];
                  ++at;
                  for (var dt = ft; dt <= mt; dt++)
                    X[dt].shaperInfo = new uh(sh[G0(X[dt])], pt[0], at);
                  for (var Nt = X[ft].shaperInfo.category === "R" ? 1 : Math.min(3, mt - ft), Yt = ft; Yt < ft + Nt; Yt++)
                    X[Yt].features.rphf = !0;
                }
              }
              function V0(lt, X) {
                for (var at = s(X), R; !(R = at()).done; ) {
                  var z = R.value;
                  z.substituted = !1;
                }
              }
              function hh(lt, X) {
                for (var at = s(X), R; !(R = at()).done; ) {
                  var z = R.value;
                  z.substituted && z.features.rphf && (z.shaperInfo.category = "R");
                }
              }
              function dh(lt, X) {
                for (var at = s(X), R; !(R = at()).done; ) {
                  var z = R.value;
                  z.substituted && (z.shaperInfo.category = "VPre");
                }
              }
              function vh(lt, X) {
                for (var at = lt.glyphForCodePoint(9676).id, R = 0, z = X0(X, 0); R < X.length; R = z, z = X0(X, R)) {
                  var j = void 0, ft = void 0, mt = X[R].shaperInfo, pt = mt.syllableType;
                  if (!(pt !== "virama_terminated_cluster" && pt !== "standard_cluster" && pt !== "broken_cluster")) {
                    if (pt === "broken_cluster" && at) {
                      var dt = new Ea(lt, at, [9676]);
                      for (dt.shaperInfo = mt, j = R; j < z && X[j].shaperInfo.category === "R"; j++)
                        ;
                      X.splice(++j, 0, dt), z++;
                    }
                    if (mt.category === "R" && z - R > 1) {
                      for (j = R + 1; j < z; j++)
                        if (mt = X[j].shaperInfo, Z0(mt) || Fo(X[j])) {
                          Fo(X[j]) && j--, X.splice.apply(X, [R, 0].concat(X.splice(R + 1, j - R), [X[j]]));
                          break;
                        }
                    }
                    for (j = R, ft = z; j < z; j++)
                      mt = X[j].shaperInfo, Z0(mt) || Fo(X[j]) ? ft = Fo(X[j]) ? j + 1 : j : (mt.category === "VPre" || mt.category === "VMPre") && ft < j && X.splice.apply(X, [ft, 1, X[j]].concat(X.splice(ft, j - ft)));
                  }
                }
              }
              function X0(lt, X) {
                if (X >= lt.length)
                  return X;
                for (var at = lt[X].shaperInfo.syllable; ++X < lt.length && lt[X].shaperInfo.syllable === at; )
                  ;
                return X;
              }
              function Fo(lt) {
                return lt.shaperInfo.category === "H" && !lt.isLigated;
              }
              function Z0(lt) {
                return lt.category === "B" || lt.category === "GB";
              }
              var ph = {
                arab: Ma,
                // Arabic
                mong: Ma,
                // Mongolian
                syrc: Ma,
                // Syriac
                "nko ": Ma,
                // N'Ko
                phag: Ma,
                // Phags Pa
                mand: Ma,
                // Mandaic
                mani: Ma,
                // Manichaean
                phlp: Ma,
                // Psalter Pahlavi
                hang: R0,
                // Hangul
                bng2: mn,
                // Bengali
                beng: mn,
                // Bengali
                dev2: mn,
                // Devanagari
                deva: mn,
                // Devanagari
                gjr2: mn,
                // Gujarati
                gujr: mn,
                // Gujarati
                guru: mn,
                // Gurmukhi
                gur2: mn,
                // Gurmukhi
                knda: mn,
                // Kannada
                knd2: mn,
                // Kannada
                mlm2: mn,
                // Malayalam
                mlym: mn,
                // Malayalam
                ory2: mn,
                // Oriya
                orya: mn,
                // Oriya
                taml: mn,
                // Tamil
                tml2: mn,
                // Tamil
                telu: mn,
                // Telugu
                tel2: mn,
                // Telugu
                khmr: mn,
                // Khmer
                bali: br,
                // Balinese
                batk: br,
                // Batak
                brah: br,
                // Brahmi
                bugi: br,
                // Buginese
                buhd: br,
                // Buhid
                cakm: br,
                // Chakma
                cham: br,
                // Cham
                dupl: br,
                // Duployan
                egyp: br,
                // Egyptian Hieroglyphs
                gran: br,
                // Grantha
                hano: br,
                // Hanunoo
                java: br,
                // Javanese
                kthi: br,
                // Kaithi
                kali: br,
                // Kayah Li
                khar: br,
                // Kharoshthi
                khoj: br,
                // Khojki
                sind: br,
                // Khudawadi
                lepc: br,
                // Lepcha
                limb: br,
                // Limbu
                mahj: br,
                // Mahajani
                // mand: UniversalShaper, // Mandaic
                // mani: UniversalShaper, // Manichaean
                mtei: br,
                // Meitei Mayek
                modi: br,
                // Modi
                // mong: UniversalShaper, // Mongolian
                // 'nko ': UniversalShaper, // NâKo
                hmng: br,
                // Pahawh Hmong
                // phag: UniversalShaper, // Phags-pa
                // phlp: UniversalShaper, // Psalter Pahlavi
                rjng: br,
                // Rejang
                saur: br,
                // Saurashtra
                shrd: br,
                // Sharada
                sidd: br,
                // Siddham
                sinh: br,
                // Sinhala
                sund: br,
                // Sundanese
                sylo: br,
                // Syloti Nagri
                tglg: br,
                // Tagalog
                tagb: br,
                // Tagbanwa
                tale: br,
                // Tai Le
                lana: br,
                // Tai Tham
                tavt: br,
                // Tai Viet
                takr: br,
                // Takri
                tibt: br,
                // Tibetan
                tfng: br,
                // Tifinagh
                tirh: br,
                // Tirhuta
                latn: La,
                // Latin
                DFLT: La
                // Default
              };
              function gh(lt) {
                Array.isArray(lt) || (lt = [lt]);
                for (var X = s(lt), at; !(at = X()).done; ) {
                  var R = at.value, z = ph[R];
                  if (z)
                    return z;
                }
                return La;
              }
              for (var mh = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at.applyLookup = function(z, j) {
                  var ft = this;
                  switch (z) {
                    case 1: {
                      var mt = this.coverageIndex(j.coverage);
                      if (mt === -1)
                        return !1;
                      var pt = this.glyphIterator.cur;
                      switch (j.version) {
                        case 1:
                          pt.id = pt.id + j.deltaGlyphID & 65535;
                          break;
                        case 2:
                          pt.id = j.substitute.get(mt);
                          break;
                      }
                      return !0;
                    }
                    case 2: {
                      var dt = this.coverageIndex(j.coverage);
                      if (dt !== -1) {
                        var Nt, Yt = j.sequences.get(dt);
                        if (Yt.length === 0)
                          return this.glyphs.splice(this.glyphIterator.index, 1), !0;
                        this.glyphIterator.cur.id = Yt[0], this.glyphIterator.cur.ligatureComponent = 0;
                        var se = this.glyphIterator.cur.features, te = this.glyphIterator.cur, ce = Yt.slice(1).map(function(Yn, In) {
                          var xn = new Ea(ft.font, Yn, void 0, se);
                          return xn.shaperInfo = te.shaperInfo, xn.isLigated = te.isLigated, xn.ligatureComponent = In + 1, xn.substituted = !0, xn.isMultiplied = !0, xn;
                        });
                        return (Nt = this.glyphs).splice.apply(Nt, [this.glyphIterator.index + 1, 0].concat(ce)), !0;
                      }
                      return !1;
                    }
                    case 3: {
                      var ve = this.coverageIndex(j.coverage);
                      if (ve !== -1) {
                        var De = 0;
                        return this.glyphIterator.cur.id = j.alternateSet.get(ve)[De], !0;
                      }
                      return !1;
                    }
                    case 4: {
                      var Ge = this.coverageIndex(j.coverage);
                      if (Ge === -1)
                        return !1;
                      for (var rr = s(j.ligatureSets.get(Ge)), Ke; !(Ke = rr()).done; ) {
                        var pr = Ke.value, cr = this.sequenceMatchIndices(1, pr.components);
                        if (cr) {
                          for (var yr = this.glyphIterator.cur, Ar = yr.codePoints.slice(), Zr = s(cr), en; !(en = Zr()).done; ) {
                            var Gr, xr = en.value;
                            (Gr = Ar).push.apply(Gr, this.glyphs[xr].codePoints);
                          }
                          var Nr = new Ea(this.font, pr.glyph, Ar, yr.features);
                          Nr.shaperInfo = yr.shaperInfo, Nr.isLigated = !0, Nr.substituted = !0;
                          for (var jr = yr.isMark, An = 0; An < cr.length && jr; An++)
                            jr = this.glyphs[cr[An]].isMark;
                          Nr.ligatureID = jr ? null : this.ligatureID++;
                          for (var wr = yr.ligatureID, Mr = yr.codePoints.length, Yr = Mr, Sr = this.glyphIterator.index + 1, fn = s(cr), Sn; !(Sn = fn()).done; ) {
                            var On = Sn.value;
                            if (jr)
                              Sr = On;
                            else
                              for (; Sr < On; ) {
                                var Mn = Yr - Mr + Math.min(this.glyphs[Sr].ligatureComponent || 1, Mr);
                                this.glyphs[Sr].ligatureID = Nr.ligatureID, this.glyphs[Sr].ligatureComponent = Mn, Sr++;
                              }
                            wr = this.glyphs[Sr].ligatureID, Mr = this.glyphs[Sr].codePoints.length, Yr += Mr, Sr++;
                          }
                          if (wr && !jr)
                            for (var Bn = Sr; Bn < this.glyphs.length && this.glyphs[Bn].ligatureID === wr; Bn++) {
                              var Mn = Yr - Mr + Math.min(this.glyphs[Bn].ligatureComponent || 1, Mr);
                              this.glyphs[Bn].ligatureComponent = Mn;
                            }
                          for (var Zn = cr.length - 1; Zn >= 0; Zn--)
                            this.glyphs.splice(cr[Zn], 1);
                          return this.glyphs[this.glyphIterator.index] = Nr, !0;
                        }
                      }
                      return !1;
                    }
                    case 5:
                      return this.applyContext(j);
                    case 6:
                      return this.applyChainingContext(j);
                    case 7:
                      return this.applyLookup(j.lookupType, j.extension);
                    default:
                      throw new Error("GSUB lookupType ".concat(z, " is not supported"));
                  }
                }, X;
              }(mo), yh = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at.applyPositionValue = function(z, j) {
                  var ft = this.positions[this.glyphIterator.peekIndex(z)];
                  j.xAdvance != null && (ft.xAdvance += j.xAdvance), j.yAdvance != null && (ft.yAdvance += j.yAdvance), j.xPlacement != null && (ft.xOffset += j.xPlacement), j.yPlacement != null && (ft.yOffset += j.yPlacement);
                  var mt = this.font._variationProcessor, pt = this.font.GDEF && this.font.GDEF.itemVariationStore;
                  mt && pt && (j.xPlaDevice && (ft.xOffset += mt.getDelta(pt, j.xPlaDevice.a, j.xPlaDevice.b)), j.yPlaDevice && (ft.yOffset += mt.getDelta(pt, j.yPlaDevice.a, j.yPlaDevice.b)), j.xAdvDevice && (ft.xAdvance += mt.getDelta(pt, j.xAdvDevice.a, j.xAdvDevice.b)), j.yAdvDevice && (ft.yAdvance += mt.getDelta(pt, j.yAdvDevice.a, j.yAdvDevice.b)));
                }, at.applyLookup = function(z, j) {
                  switch (z) {
                    case 1: {
                      var ft = this.coverageIndex(j.coverage);
                      if (ft === -1)
                        return !1;
                      switch (j.version) {
                        case 1:
                          this.applyPositionValue(0, j.value);
                          break;
                        case 2:
                          this.applyPositionValue(0, j.values.get(ft));
                          break;
                      }
                      return !0;
                    }
                    case 2: {
                      var mt = this.glyphIterator.peek();
                      if (!mt)
                        return !1;
                      var pt = this.coverageIndex(j.coverage);
                      if (pt === -1)
                        return !1;
                      switch (j.version) {
                        case 1:
                          for (var dt = j.pairSets.get(pt), Nt = s(dt), Yt; !(Yt = Nt()).done; ) {
                            var se = Yt.value;
                            if (se.secondGlyph === mt.id)
                              return this.applyPositionValue(0, se.value1), this.applyPositionValue(1, se.value2), !0;
                          }
                          return !1;
                        case 2:
                          var te = this.getClassID(this.glyphIterator.cur.id, j.classDef1), ce = this.getClassID(mt.id, j.classDef2);
                          if (te === -1 || ce === -1)
                            return !1;
                          var ve = j.classRecords.get(te).get(ce);
                          return this.applyPositionValue(0, ve.value1), this.applyPositionValue(1, ve.value2), !0;
                      }
                    }
                    case 3: {
                      var De = this.glyphIterator.peekIndex(), Ge = this.glyphs[De];
                      if (!Ge)
                        return !1;
                      var rr = j.entryExitRecords[this.coverageIndex(j.coverage)];
                      if (!rr || !rr.exitAnchor)
                        return !1;
                      var Ke = j.entryExitRecords[this.coverageIndex(j.coverage, Ge.id)];
                      if (!Ke || !Ke.entryAnchor)
                        return !1;
                      var pr = this.getAnchor(Ke.entryAnchor), cr = this.getAnchor(rr.exitAnchor), yr = this.positions[this.glyphIterator.index], Ar = this.positions[De];
                      switch (this.direction) {
                        case "ltr":
                          yr.xAdvance = cr.x + yr.xOffset;
                          var Zr = pr.x + Ar.xOffset;
                          Ar.xAdvance -= Zr, Ar.xOffset -= Zr;
                          break;
                        case "rtl":
                          Zr = cr.x + yr.xOffset, yr.xAdvance -= Zr, yr.xOffset -= Zr, Ar.xAdvance = pr.x + Ar.xOffset;
                          break;
                      }
                      return this.glyphIterator.flags.rightToLeft ? (this.glyphIterator.cur.cursiveAttachment = De, yr.yOffset = pr.y - cr.y) : (Ge.cursiveAttachment = this.glyphIterator.index, yr.yOffset = cr.y - pr.y), !0;
                    }
                    case 4: {
                      var en = this.coverageIndex(j.markCoverage);
                      if (en === -1)
                        return !1;
                      for (var Gr = this.glyphIterator.index; --Gr >= 0 && (this.glyphs[Gr].isMark || this.glyphs[Gr].ligatureComponent > 0); )
                        ;
                      if (Gr < 0)
                        return !1;
                      var xr = this.coverageIndex(j.baseCoverage, this.glyphs[Gr].id);
                      if (xr === -1)
                        return !1;
                      var Nr = j.markArray[en], jr = j.baseArray[xr][Nr.class];
                      return this.applyAnchor(Nr, jr, Gr), !0;
                    }
                    case 5: {
                      var An = this.coverageIndex(j.markCoverage);
                      if (An === -1)
                        return !1;
                      for (var wr = this.glyphIterator.index; --wr >= 0 && this.glyphs[wr].isMark; )
                        ;
                      if (wr < 0)
                        return !1;
                      var Mr = this.coverageIndex(j.ligatureCoverage, this.glyphs[wr].id);
                      if (Mr === -1)
                        return !1;
                      var Yr = j.ligatureArray[Mr], Sr = this.glyphIterator.cur, fn = this.glyphs[wr], Sn = fn.ligatureID && fn.ligatureID === Sr.ligatureID && Sr.ligatureComponent > 0 ? Math.min(Sr.ligatureComponent, fn.codePoints.length) - 1 : fn.codePoints.length - 1, On = j.markArray[An], Mn = Yr[Sn][On.class];
                      return this.applyAnchor(On, Mn, wr), !0;
                    }
                    case 6: {
                      var Bn = this.coverageIndex(j.mark1Coverage);
                      if (Bn === -1)
                        return !1;
                      var Zn = this.glyphIterator.peekIndex(-1), Yn = this.glyphs[Zn];
                      if (!Yn || !Yn.isMark)
                        return !1;
                      var In = this.glyphIterator.cur, xn = !1;
                      if (In.ligatureID === Yn.ligatureID ? In.ligatureID ? In.ligatureComponent === Yn.ligatureComponent && (xn = !0) : xn = !0 : (In.ligatureID && !In.ligatureComponent || Yn.ligatureID && !Yn.ligatureComponent) && (xn = !0), !xn)
                        return !1;
                      var kn = this.coverageIndex(j.mark2Coverage, Yn.id);
                      if (kn === -1)
                        return !1;
                      var kr = j.mark1Array[Bn], Ir = j.mark2Array[kn][kr.class];
                      return this.applyAnchor(kr, Ir, Zn), !0;
                    }
                    case 7:
                      return this.applyContext(j);
                    case 8:
                      return this.applyChainingContext(j);
                    case 9:
                      return this.applyLookup(j.lookupType, j.extension);
                    default:
                      throw new Error("Unsupported GPOS table: ".concat(z));
                  }
                }, at.applyAnchor = function(z, j, ft) {
                  var mt = this.getAnchor(j), pt = this.getAnchor(z.markAnchor);
                  this.positions[ft];
                  var dt = this.positions[this.glyphIterator.index];
                  dt.xOffset = mt.x - pt.x, dt.yOffset = mt.y - pt.y, this.glyphIterator.cur.markAttachment = ft;
                }, at.getAnchor = function(z) {
                  var j = z.xCoordinate, ft = z.yCoordinate, mt = this.font._variationProcessor, pt = this.font.GDEF && this.font.GDEF.itemVariationStore;
                  return mt && pt && (z.xDeviceTable && (j += mt.getDelta(pt, z.xDeviceTable.a, z.xDeviceTable.b)), z.yDeviceTable && (ft += mt.getDelta(pt, z.yDeviceTable.a, z.yDeviceTable.b))), {
                    x: j,
                    y: ft
                  };
                }, at.applyFeatures = function(z, j, ft) {
                  lt.prototype.applyFeatures.call(this, z, j, ft);
                  for (var mt = 0; mt < this.glyphs.length; mt++)
                    this.fixCursiveAttachment(mt);
                  this.fixMarkAttachment();
                }, at.fixCursiveAttachment = function(z) {
                  var j = this.glyphs[z];
                  if (j.cursiveAttachment != null) {
                    var ft = j.cursiveAttachment;
                    j.cursiveAttachment = null, this.fixCursiveAttachment(ft), this.positions[z].yOffset += this.positions[ft].yOffset;
                  }
                }, at.fixMarkAttachment = function() {
                  for (var z = 0; z < this.glyphs.length; z++) {
                    var j = this.glyphs[z];
                    if (j.markAttachment != null) {
                      var ft = j.markAttachment;
                      if (this.positions[z].xOffset += this.positions[ft].xOffset, this.positions[z].yOffset += this.positions[ft].yOffset, this.direction === "ltr")
                        for (var mt = ft; mt < z; mt++)
                          this.positions[z].xOffset -= this.positions[mt].xAdvance, this.positions[z].yOffset -= this.positions[mt].yAdvance;
                      else
                        for (var pt = ft + 1; pt < z + 1; pt++)
                          this.positions[z].xOffset += this.positions[pt].xAdvance, this.positions[z].yOffset += this.positions[pt].yAdvance;
                    }
                  }
                }, X;
              }(mo), xh = /* @__PURE__ */ function() {
                function lt(at) {
                  this.font = at, this.glyphInfos = null, this.plan = null, this.GSUBProcessor = null, this.GPOSProcessor = null, this.fallbackPosition = !0, at.GSUB && (this.GSUBProcessor = new mh(at, at.GSUB)), at.GPOS && (this.GPOSProcessor = new yh(at, at.GPOS));
                }
                var X = lt.prototype;
                return X.setup = function(R) {
                  var z = this;
                  this.glyphInfos = R.glyphs.map(function(mt) {
                    return new Ea(z.font, mt.id, [].concat(mt.codePoints));
                  });
                  var j = null;
                  this.GPOSProcessor && (j = this.GPOSProcessor.selectScript(R.script, R.language, R.direction)), this.GSUBProcessor && (j = this.GSUBProcessor.selectScript(R.script, R.language, R.direction)), this.shaper = gh(j), this.plan = new uc(this.font, j, R.direction), this.shaper.plan(this.plan, this.glyphInfos, R.features);
                  for (var ft in this.plan.allFeatures)
                    R.features[ft] = !0;
                }, X.substitute = function(R) {
                  var z = this;
                  this.GSUBProcessor && (this.plan.process(this.GSUBProcessor, this.glyphInfos), R.glyphs = this.glyphInfos.map(function(j) {
                    return z.font.getGlyph(j.id, j.codePoints);
                  }));
                }, X.position = function(R) {
                  return this.shaper.zeroMarkWidths === "BEFORE_GPOS" && this.zeroMarkAdvances(R.positions), this.GPOSProcessor && this.plan.process(this.GPOSProcessor, this.glyphInfos, R.positions), this.shaper.zeroMarkWidths === "AFTER_GPOS" && this.zeroMarkAdvances(R.positions), R.direction === "rtl" && (R.glyphs.reverse(), R.positions.reverse()), this.GPOSProcessor && this.GPOSProcessor.features;
                }, X.zeroMarkAdvances = function(R) {
                  for (var z = 0; z < this.glyphInfos.length; z++)
                    this.glyphInfos[z].isMark && (R[z].xAdvance = 0, R[z].yAdvance = 0);
                }, X.cleanup = function() {
                  this.glyphInfos = null, this.plan = null, this.shaper = null;
                }, X.getAvailableFeatures = function(R, z) {
                  var j = [];
                  return this.GSUBProcessor && (this.GSUBProcessor.selectScript(R, z), j.push.apply(j, Object.keys(this.GSUBProcessor.features))), this.GPOSProcessor && (this.GPOSProcessor.selectScript(R, z), j.push.apply(j, Object.keys(this.GPOSProcessor.features))), j;
                }, lt;
              }(), bh = /* @__PURE__ */ function() {
                function lt(at) {
                  this.font = at, this.unicodeLayoutEngine = null, this.kernProcessor = null, this.font.morx ? this.engine = new lc(this.font) : (this.font.GSUB || this.font.GPOS) && (this.engine = new xh(this.font));
                }
                var X = lt.prototype;
                return X.layout = function(R, z, j, ft, mt) {
                  if (typeof z == "string" && (mt = ft, ft = j, j = z, z = []), typeof R == "string") {
                    j == null && (j = zu(R));
                    var pt = this.font.glyphsForString(R);
                  } else {
                    if (j == null) {
                      for (var dt = [], Nt = s(R), Yt; !(Yt = Nt()).done; ) {
                        var se = Yt.value;
                        dt.push.apply(dt, se.codePoints);
                      }
                      j = Wu(dt);
                    }
                    var pt = R;
                  }
                  var te = new ju(pt, z, j, ft, mt);
                  return pt.length === 0 ? (te.positions = [], te) : (this.engine && this.engine.setup && this.engine.setup(te), this.substitute(te), this.position(te), this.hideDefaultIgnorables(te.glyphs, te.positions), this.engine && this.engine.cleanup && this.engine.cleanup(), te);
                }, X.substitute = function(R) {
                  this.engine && this.engine.substitute && this.engine.substitute(R);
                }, X.position = function(R) {
                  R.positions = R.glyphs.map(function(j) {
                    return new Gu(j.advanceWidth);
                  });
                  var z = null;
                  this.engine && this.engine.position && (z = this.engine.position(R)), !z && (!this.engine || this.engine.fallbackPosition) && (this.unicodeLayoutEngine || (this.unicodeLayoutEngine = new Nu(this.font)), this.unicodeLayoutEngine.positionGlyphs(R.glyphs, R.positions)), (!z || !z.kern) && R.features.kern !== !1 && this.font.kern && (this.kernProcessor || (this.kernProcessor = new Lu(this.font)), this.kernProcessor.process(R.glyphs, R.positions), R.features.kern = !0);
                }, X.hideDefaultIgnorables = function(R, z) {
                  for (var j = this.font.glyphForCodePoint(32), ft = 0; ft < R.length; ft++)
                    this.isDefaultIgnorable(R[ft].codePoints[0]) && (R[ft] = j, z[ft].xAdvance = 0, z[ft].yAdvance = 0);
                }, X.isDefaultIgnorable = function(R) {
                  var z = R >> 16;
                  if (z === 0)
                    switch (R >> 8) {
                      case 0:
                        return R === 173;
                      case 3:
                        return R === 847;
                      case 6:
                        return R === 1564;
                      case 23:
                        return 6068 <= R && R <= 6069;
                      case 24:
                        return 6155 <= R && R <= 6158;
                      case 32:
                        return 8203 <= R && R <= 8207 || 8234 <= R && R <= 8238 || 8288 <= R && R <= 8303;
                      case 254:
                        return 65024 <= R && R <= 65039 || R === 65279;
                      case 255:
                        return 65520 <= R && R <= 65528;
                      default:
                        return !1;
                    }
                  else
                    switch (z) {
                      case 1:
                        return 113824 <= R && R <= 113827 || 119155 <= R && R <= 119162;
                      case 14:
                        return 917504 <= R && R <= 921599;
                      default:
                        return !1;
                    }
                }, X.getAvailableFeatures = function(R, z) {
                  var j = [];
                  return this.engine && j.push.apply(j, this.engine.getAvailableFeatures(R, z)), this.font.kern && j.indexOf("kern") === -1 && j.push("kern"), j;
                }, X.stringsForGlyph = function(R) {
                  for (var z = /* @__PURE__ */ new Set(), j = this.font._cmapProcessor.codePointsForGlyph(R), ft = s(j), mt; !(mt = ft()).done; ) {
                    var pt = mt.value;
                    z.add(String.fromCodePoint(pt));
                  }
                  if (this.engine && this.engine.stringsForGlyph)
                    for (var dt = s(this.engine.stringsForGlyph(R)), Nt; !(Nt = dt()).done; ) {
                      var Yt = Nt.value;
                      z.add(Yt);
                    }
                  return Array.from(z);
                }, lt;
              }(), wh = {
                moveTo: "M",
                lineTo: "L",
                quadraticCurveTo: "Q",
                bezierCurveTo: "C",
                closePath: "Z"
              }, Io = /* @__PURE__ */ function() {
                function lt() {
                  this.commands = [], this._bbox = null, this._cbox = null;
                }
                var X = lt.prototype;
                return X.toFunction = function() {
                  var R = this;
                  return function(z) {
                    R.commands.forEach(function(j) {
                      return z[j.command].apply(z, j.args);
                    });
                  };
                }, X.toSVG = function() {
                  var R = this.commands.map(function(z) {
                    var j = z.args.map(function(ft) {
                      return Math.round(ft * 100) / 100;
                    });
                    return "".concat(wh[z.command]).concat(j.join(" "));
                  });
                  return R.join("");
                }, X.mapPoints = function(R) {
                  for (var z = new lt(), j = s(this.commands), ft; !(ft = j()).done; ) {
                    for (var mt = ft.value, pt = [], dt = 0; dt < mt.args.length; dt += 2) {
                      var Nt = R(mt.args[dt], mt.args[dt + 1]), Yt = Nt[0], se = Nt[1];
                      pt.push(Yt, se);
                    }
                    z[mt.command].apply(z, pt);
                  }
                  return z;
                }, X.transform = function(R, z, j, ft, mt, pt) {
                  return this.mapPoints(function(dt, Nt) {
                    return dt = R * dt + j * Nt + mt, Nt = z * dt + ft * Nt + pt, [dt, Nt];
                  });
                }, X.translate = function(R, z) {
                  return this.transform(1, 0, 0, 1, R, z);
                }, X.rotate = function(R) {
                  var z = Math.cos(R), j = Math.sin(R);
                  return this.transform(z, j, -j, z, 0, 0);
                }, X.scale = function(R, z) {
                  return z === void 0 && (z = R), this.transform(R, 0, 0, z, 0, 0);
                }, o(lt, [{
                  key: "cbox",
                  get: function() {
                    if (!this._cbox) {
                      for (var R = new ni(), z = s(this.commands), j; !(j = z()).done; )
                        for (var ft = j.value, mt = 0; mt < ft.args.length; mt += 2)
                          R.addPoint(ft.args[mt], ft.args[mt + 1]);
                      this._cbox = Object.freeze(R);
                    }
                    return this._cbox;
                  }
                  /**
                   * Gets the exact bounding box of the path by evaluating curve segments.
                   * Slower to compute than the control box, but more accurate.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    if (this._bbox)
                      return this._bbox;
                    for (var R = new ni(), z = 0, j = 0, ft = function(fn) {
                      return Math.pow(1 - fn, 3) * Ar[xr] + 3 * Math.pow(1 - fn, 2) * fn * Zr[xr] + 3 * (1 - fn) * Math.pow(fn, 2) * en[xr] + Math.pow(fn, 3) * Gr[xr];
                    }, mt = s(this.commands), pt; !(pt = mt()).done; ) {
                      var dt = pt.value;
                      switch (dt.command) {
                        case "moveTo":
                        case "lineTo":
                          var Nt = dt.args, Yt = Nt[0], se = Nt[1];
                          R.addPoint(Yt, se), z = Yt, j = se;
                          break;
                        case "quadraticCurveTo":
                        case "bezierCurveTo":
                          if (dt.command === "quadraticCurveTo")
                            var te = dt.args, ce = te[0], ve = te[1], De = te[2], Ge = te[3], rr = z + 2 / 3 * (ce - z), Ke = j + 2 / 3 * (ve - j), pr = De + 2 / 3 * (ce - De), cr = Ge + 2 / 3 * (ve - Ge);
                          else
                            var yr = dt.args, rr = yr[0], Ke = yr[1], pr = yr[2], cr = yr[3], De = yr[4], Ge = yr[5];
                          R.addPoint(De, Ge);
                          for (var Ar = [z, j], Zr = [rr, Ke], en = [pr, cr], Gr = [De, Ge], xr = 0; xr <= 1; xr++) {
                            var Nr = 6 * Ar[xr] - 12 * Zr[xr] + 6 * en[xr], jr = -3 * Ar[xr] + 9 * Zr[xr] - 9 * en[xr] + 3 * Gr[xr];
                            if (dt = 3 * Zr[xr] - 3 * Ar[xr], jr === 0) {
                              if (Nr === 0)
                                continue;
                              var An = -dt / Nr;
                              0 < An && An < 1 && (xr === 0 ? R.addPoint(ft(An), R.maxY) : xr === 1 && R.addPoint(R.maxX, ft(An)));
                              continue;
                            }
                            var wr = Math.pow(Nr, 2) - 4 * dt * jr;
                            if (!(wr < 0)) {
                              var Mr = (-Nr + Math.sqrt(wr)) / (2 * jr);
                              0 < Mr && Mr < 1 && (xr === 0 ? R.addPoint(ft(Mr), R.maxY) : xr === 1 && R.addPoint(R.maxX, ft(Mr)));
                              var Yr = (-Nr - Math.sqrt(wr)) / (2 * jr);
                              0 < Yr && Yr < 1 && (xr === 0 ? R.addPoint(ft(Yr), R.maxY) : xr === 1 && R.addPoint(R.maxX, ft(Yr)));
                            }
                          }
                          z = De, j = Ge;
                          break;
                      }
                    }
                    return this._bbox = Object.freeze(R);
                  }
                }]);
              }(), Ah = function(X) {
                Io.prototype[X] = function() {
                  this._bbox = this._cbox = null;
                  for (var at = arguments.length, R = new Array(at), z = 0; z < at; z++)
                    R[z] = arguments[z];
                  return this.commands.push({
                    command: X,
                    args: R
                  }), this;
                };
              }, Ss = 0, Y0 = ["moveTo", "lineTo", "quadraticCurveTo", "bezierCurveTo", "closePath"]; Ss < Y0.length; Ss++) {
                var Sh = Y0[Ss];
                Ah(Sh);
              }
              var Li = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"], yn, Do = (yn = /* @__PURE__ */ function() {
                function lt(at, R, z) {
                  this.id = at, this.codePoints = R, this._font = z, this.isMark = this.codePoints.length > 0 && this.codePoints.every(P.isMark), this.isLigature = this.codePoints.length > 1;
                }
                var X = lt.prototype;
                return X._getPath = function() {
                  return new Io();
                }, X._getCBox = function() {
                  return this.path.cbox;
                }, X._getBBox = function() {
                  return this.path.bbox;
                }, X._getTableMetrics = function(R) {
                  if (this.id < R.metrics.length)
                    return R.metrics.get(this.id);
                  var z = R.metrics.get(R.metrics.length - 1), j = {
                    advance: z ? z.advance : 0,
                    bearing: R.bearings.get(this.id - R.metrics.length) || 0
                  };
                  return j;
                }, X._getMetrics = function(R) {
                  if (this._metrics)
                    return this._metrics;
                  var z = this._getTableMetrics(this._font.hmtx), j = z.advance, ft = z.bearing;
                  if (this._font.vmtx)
                    var mt = this._getTableMetrics(this._font.vmtx), pt = mt.advance, dt = mt.bearing;
                  else {
                    var Nt;
                    if ((typeof R == "undefined" || R === null) && (R = this.cbox), (Nt = this._font["OS/2"]) && Nt.version > 0)
                      var pt = Math.abs(Nt.typoAscender - Nt.typoDescender), dt = Nt.typoAscender - R.maxY;
                    else
                      var Yt = this._font.hhea, pt = Math.abs(Yt.ascent - Yt.descent), dt = Yt.ascent - R.maxY;
                  }
                  return this._font._variationProcessor && this._font.HVAR && (j += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR)), this._metrics = {
                    advanceWidth: j,
                    advanceHeight: pt,
                    leftBearing: ft,
                    topBearing: dt
                  };
                }, X.getScaledPath = function(R) {
                  var z = 1 / this._font.unitsPerEm * R;
                  return this.path.scale(z);
                }, X._getName = function() {
                  var R = this._font.post;
                  if (!R)
                    return null;
                  switch (R.version) {
                    case 1:
                      return Li[this.id];
                    case 2:
                      var z = R.glyphNameIndex[this.id];
                      return z < Li.length ? Li[z] : R.names[z - Li.length];
                    case 2.5:
                      return Li[this.id + R.offsets[this.id]];
                    case 4:
                      return String.fromCharCode(R.map[this.id]);
                  }
                }, X.render = function(R, z) {
                  R.save();
                  var j = 1 / this._font.head.unitsPerEm * z;
                  R.scale(j, j);
                  var ft = this.path.toFunction();
                  ft(R), R.fill(), R.restore();
                }, o(lt, [{
                  key: "cbox",
                  get: function() {
                    return this._getCBox();
                  }
                  /**
                   * The glyphâs bounding box, i.e. the rectangle that encloses the
                   * glyph outline as tightly as possible.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    return this._getBBox();
                  }
                  /**
                   * A vector Path object representing the glyph outline.
                   * @type {Path}
                   */
                }, {
                  key: "path",
                  get: function() {
                    return this._getPath();
                  }
                }, {
                  key: "advanceWidth",
                  get: function() {
                    return this._getMetrics().advanceWidth;
                  }
                  /**
                   * The glyph's advance height.
                   * @type {number}
                   */
                }, {
                  key: "advanceHeight",
                  get: function() {
                    return this._getMetrics().advanceHeight;
                  }
                }, {
                  key: "ligatureCaretPositions",
                  get: function() {
                  }
                }, {
                  key: "name",
                  get: function() {
                    return this._getName();
                  }
                }]);
              }(), N(yn.prototype, "cbox", [G], Object.getOwnPropertyDescriptor(yn.prototype, "cbox"), yn.prototype), N(yn.prototype, "bbox", [G], Object.getOwnPropertyDescriptor(yn.prototype, "bbox"), yn.prototype), N(yn.prototype, "path", [G], Object.getOwnPropertyDescriptor(yn.prototype, "path"), yn.prototype), N(yn.prototype, "advanceWidth", [G], Object.getOwnPropertyDescriptor(yn.prototype, "advanceWidth"), yn.prototype), N(yn.prototype, "advanceHeight", [G], Object.getOwnPropertyDescriptor(yn.prototype, "advanceHeight"), yn.prototype), N(yn.prototype, "name", [G], Object.getOwnPropertyDescriptor(yn.prototype, "name"), yn.prototype), yn), K0 = new e.Struct({
                numberOfContours: e.int16,
                // if negative, this is a composite glyph
                xMin: e.int16,
                yMin: e.int16,
                xMax: e.int16,
                yMax: e.int16
              }), Ch = 1, Eh = 2, Th = 4, Fh = 8, Ih = 16, Dh = 32, Ph = 1, Oh = 8, J0 = 32, Bh = 64, Rh = 128, Lh = 256, Da = /* @__PURE__ */ function() {
                function lt(at, R, z, j) {
                  z === void 0 && (z = 0), j === void 0 && (j = 0), this.onCurve = at, this.endContour = R, this.x = z, this.y = j;
                }
                var X = lt.prototype;
                return X.copy = function() {
                  return new lt(this.onCurve, this.endContour, this.x, this.y);
                }, lt;
              }(), Nh = function(X, at, R) {
                this.glyphID = X, this.dx = at, this.dy = R, this.pos = 0, this.scaleX = this.scaleY = 1, this.scale01 = this.scale10 = 0;
              }, Po = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at._getCBox = function(z) {
                  if (this._font._variationProcessor && !z)
                    return this.path.cbox;
                  var j = this._font._getTableStream("glyf");
                  j.pos += this._font.loca.offsets[this.id];
                  var ft = K0.decode(j), mt = new ni(ft.xMin, ft.yMin, ft.xMax, ft.yMax);
                  return Object.freeze(mt);
                }, at._parseGlyphCoord = function(z, j, ft, mt) {
                  if (ft) {
                    var pt = z.readUInt8();
                    mt || (pt = -pt), pt += j;
                  } else if (mt)
                    var pt = j;
                  else
                    var pt = j + z.readInt16BE();
                  return pt;
                }, at._decode = function() {
                  var z = this._font.loca.offsets[this.id], j = this._font.loca.offsets[this.id + 1];
                  if (z === j)
                    return null;
                  var ft = this._font._getTableStream("glyf");
                  ft.pos += z;
                  var mt = ft.pos, pt = K0.decode(ft);
                  return pt.numberOfContours > 0 ? this._decodeSimple(pt, ft) : pt.numberOfContours < 0 && this._decodeComposite(pt, ft, mt), pt;
                }, at._decodeSimple = function(z, j) {
                  z.points = [];
                  var ft = new e.Array(e.uint16, z.numberOfContours).decode(j);
                  z.instructions = new e.Array(e.uint8, e.uint16).decode(j);
                  for (var mt = [], pt = ft[ft.length - 1] + 1; mt.length < pt; ) {
                    var dt = j.readUInt8();
                    if (mt.push(dt), dt & Fh)
                      for (var Nt = j.readUInt8(), Yt = 0; Yt < Nt; Yt++)
                        mt.push(dt);
                  }
                  for (var se = 0; se < mt.length; se++) {
                    var dt = mt[se], te = new Da(!!(dt & Ch), ft.indexOf(se) >= 0, 0, 0);
                    z.points.push(te);
                  }
                  for (var ce = 0, se = 0; se < mt.length; se++) {
                    var dt = mt[se];
                    z.points[se].x = ce = this._parseGlyphCoord(j, ce, dt & Eh, dt & Ih);
                  }
                  for (var ve = 0, se = 0; se < mt.length; se++) {
                    var dt = mt[se];
                    z.points[se].y = ve = this._parseGlyphCoord(j, ve, dt & Th, dt & Dh);
                  }
                  if (this._font._variationProcessor) {
                    var De = z.points.slice();
                    De.push.apply(De, this._getPhantomPoints(z)), this._font._variationProcessor.transformPoints(this.id, De), z.phantomPoints = De.slice(-4);
                  }
                }, at._decodeComposite = function(z, j, ft) {
                  ft === void 0 && (ft = 0), z.components = [];
                  for (var mt = !1, pt = J0; pt & J0; ) {
                    pt = j.readUInt16BE();
                    var dt = j.pos - ft, Nt = j.readUInt16BE();
                    if (mt || (mt = (pt & Lh) !== 0), pt & Ph)
                      var Yt = j.readInt16BE(), se = j.readInt16BE();
                    else
                      var Yt = j.readInt8(), se = j.readInt8();
                    var te = new Nh(Nt, Yt, se);
                    te.pos = dt, pt & Oh ? te.scaleX = te.scaleY = (j.readUInt8() << 24 | j.readUInt8() << 16) / 1073741824 : pt & Bh ? (te.scaleX = (j.readUInt8() << 24 | j.readUInt8() << 16) / 1073741824, te.scaleY = (j.readUInt8() << 24 | j.readUInt8() << 16) / 1073741824) : pt & Rh && (te.scaleX = (j.readUInt8() << 24 | j.readUInt8() << 16) / 1073741824, te.scale01 = (j.readUInt8() << 24 | j.readUInt8() << 16) / 1073741824, te.scale10 = (j.readUInt8() << 24 | j.readUInt8() << 16) / 1073741824, te.scaleY = (j.readUInt8() << 24 | j.readUInt8() << 16) / 1073741824), z.components.push(te);
                  }
                  if (this._font._variationProcessor) {
                    for (var ce = [], ve = 0; ve < z.components.length; ve++) {
                      var te = z.components[ve];
                      ce.push(new Da(!0, !0, te.dx, te.dy));
                    }
                    ce.push.apply(ce, this._getPhantomPoints(z)), this._font._variationProcessor.transformPoints(this.id, ce), z.phantomPoints = ce.splice(-4, 4);
                    for (var De = 0; De < ce.length; De++) {
                      var Ge = ce[De];
                      z.components[De].dx = Ge.x, z.components[De].dy = Ge.y;
                    }
                  }
                  return mt;
                }, at._getPhantomPoints = function(z) {
                  var j = this._getCBox(!0);
                  this._metrics == null && (this._metrics = Do.prototype._getMetrics.call(this, j));
                  var ft = this._metrics, mt = ft.advanceWidth, pt = ft.advanceHeight, dt = ft.leftBearing, Nt = ft.topBearing;
                  return [new Da(!1, !0, z.xMin - dt, 0), new Da(!1, !0, z.xMin - dt + mt, 0), new Da(!1, !0, 0, z.yMax + Nt), new Da(!1, !0, 0, z.yMax + Nt + pt)];
                }, at._getContours = function() {
                  var z = this._decode();
                  if (!z)
                    return [];
                  var j = [];
                  if (z.numberOfContours < 0)
                    for (var ft = s(z.components), mt; !(mt = ft()).done; )
                      for (var pt = mt.value, dt = this._font.getGlyph(pt.glyphID)._getContours(), Nt = 0; Nt < dt.length; Nt++)
                        for (var Yt = dt[Nt], se = 0; se < Yt.length; se++) {
                          var te = Yt[se], ce = te.x * pt.scaleX + te.y * pt.scale01 + pt.dx, ve = te.y * pt.scaleY + te.x * pt.scale10 + pt.dy;
                          j.push(new Da(te.onCurve, te.endContour, ce, ve));
                        }
                  else
                    j = z.points || [];
                  z.phantomPoints && !this._font.directory.tables.HVAR && (this._metrics.advanceWidth = z.phantomPoints[1].x - z.phantomPoints[0].x, this._metrics.advanceHeight = z.phantomPoints[3].y - z.phantomPoints[2].y, this._metrics.leftBearing = z.xMin - z.phantomPoints[0].x, this._metrics.topBearing = z.phantomPoints[2].y - z.yMax);
                  for (var De = [], Ge = [], rr = 0; rr < j.length; rr++) {
                    var Ke = j[rr];
                    Ge.push(Ke), Ke.endContour && (De.push(Ge), Ge = []);
                  }
                  return De;
                }, at._getMetrics = function() {
                  if (this._metrics)
                    return this._metrics;
                  var z = this._getCBox(!0);
                  return lt.prototype._getMetrics.call(this, z), this._font._variationProcessor && !this._font.HVAR && this.path, this._metrics;
                }, at._getPath = function() {
                  for (var z = this._getContours(), j = new Io(), ft = 0; ft < z.length; ft++) {
                    var mt = z[ft], pt = mt[0], dt = mt[mt.length - 1], Nt = 0;
                    if (pt.onCurve) {
                      var Yt = null;
                      Nt = 1;
                    } else {
                      dt.onCurve ? pt = dt : pt = new Da(!1, !1, (pt.x + dt.x) / 2, (pt.y + dt.y) / 2);
                      var Yt = pt;
                    }
                    j.moveTo(pt.x, pt.y);
                    for (var se = Nt; se < mt.length; se++) {
                      var te = mt[se], ce = se === 0 ? pt : mt[se - 1];
                      if (ce.onCurve && te.onCurve)
                        j.lineTo(te.x, te.y);
                      else if (ce.onCurve && !te.onCurve)
                        var Yt = te;
                      else if (!ce.onCurve && !te.onCurve) {
                        var ve = (ce.x + te.x) / 2, De = (ce.y + te.y) / 2;
                        j.quadraticCurveTo(ce.x, ce.y, ve, De);
                        var Yt = te;
                      } else if (!ce.onCurve && te.onCurve) {
                        j.quadraticCurveTo(Yt.x, Yt.y, te.x, te.y);
                        var Yt = null;
                      } else
                        throw new Error("Unknown TTF path state");
                    }
                    Yt && j.quadraticCurveTo(Yt.x, Yt.y, pt.x, pt.y), j.closePath();
                  }
                  return j;
                }, X;
              }(Do), Mh = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at._getName = function() {
                  return this._font.CFF2 ? lt.prototype._getName.call(this) : this._font["CFF "].getGlyphName(this.id);
                }, at.bias = function(z) {
                  return z.length < 1240 ? 107 : z.length < 33900 ? 1131 : 32768;
                }, at._getPath = function() {
                  var z = this._font.CFF2 || this._font["CFF "], j = z.stream, ft = z.topDict.CharStrings[this.id], mt = ft.offset + ft.length;
                  j.pos = ft.offset;
                  var pt = new Io(), dt = [], Nt = [], Yt = null, se = 0, te = 0, ce = 0, ve, De, Ge = !1;
                  this._usedGsubrs = ve = {}, this._usedSubrs = De = {};
                  var rr = z.globalSubrIndex || [], Ke = this.bias(rr), pr = z.privateDictForGlyph(this.id) || {}, cr = pr.Subrs || [], yr = this.bias(cr), Ar = z.topDict.vstore && z.topDict.vstore.itemVariationStore, Zr = pr.vsindex, en = this._font._variationProcessor;
                  function Gr() {
                    Yt == null && (Yt = dt.shift() + pr.nominalWidthX);
                  }
                  function xr() {
                    return dt.length % 2 !== 0 && Gr(), se += dt.length >> 1, dt.length = 0;
                  }
                  function Nr(An, wr) {
                    Ge && pt.closePath(), pt.moveTo(An, wr), Ge = !0;
                  }
                  var jr = function() {
                    for (; j.pos < mt; ) {
                      var wr = j.readUInt8();
                      if (wr < 32)
                        switch (wr) {
                          case 1:
                          case 3:
                          case 18:
                          case 23:
                            xr();
                            break;
                          case 4:
                            dt.length > 1 && Gr(), ce += dt.shift(), Nr(te, ce);
                            break;
                          case 5:
                            for (; dt.length >= 2; )
                              te += dt.shift(), ce += dt.shift(), pt.lineTo(te, ce);
                            break;
                          case 6:
                          case 7:
                            for (var Mr = wr === 6; dt.length >= 1; )
                              Mr ? te += dt.shift() : ce += dt.shift(), pt.lineTo(te, ce), Mr = !Mr;
                            break;
                          case 8:
                            for (; dt.length > 0; ) {
                              var kr = te + dt.shift(), Ir = ce + dt.shift(), _r = kr + dt.shift(), Kr = Ir + dt.shift();
                              te = _r + dt.shift(), ce = Kr + dt.shift(), pt.bezierCurveTo(kr, Ir, _r, Kr, te, ce);
                            }
                            break;
                          case 10:
                            var Yr = dt.pop() + yr, Sr = cr[Yr];
                            if (Sr) {
                              De[Yr] = !0;
                              var fn = j.pos, Sn = mt;
                              j.pos = Sr.offset, mt = Sr.offset + Sr.length, jr(), j.pos = fn, mt = Sn;
                            }
                            break;
                          case 11:
                            if (z.version >= 2)
                              break;
                            return;
                          case 14:
                            if (z.version >= 2)
                              break;
                            dt.length > 0 && Gr(), Ge && (pt.closePath(), Ge = !1);
                            break;
                          case 15: {
                            if (z.version < 2)
                              throw new Error("vsindex operator not supported in CFF v1");
                            Zr = dt.pop();
                            break;
                          }
                          case 16: {
                            if (z.version < 2)
                              throw new Error("blend operator not supported in CFF v1");
                            if (!en)
                              throw new Error("blend operator in non-variation font");
                            for (var On = en.getBlendVector(Ar, Zr), Mn = dt.pop(), Bn = Mn * On.length, Zn = dt.length - Bn, Yn = Zn - Mn, In = 0; In < Mn; In++) {
                              for (var xn = dt[Yn + In], kn = 0; kn < On.length; kn++)
                                xn += On[kn] * dt[Zn++];
                              dt[Yn + In] = xn;
                            }
                            for (; Bn--; )
                              dt.pop();
                            break;
                          }
                          case 19:
                          case 20:
                            xr(), j.pos += se + 7 >> 3;
                            break;
                          case 21:
                            dt.length > 2 && Gr(), te += dt.shift(), ce += dt.shift(), Nr(te, ce);
                            break;
                          case 22:
                            dt.length > 1 && Gr(), te += dt.shift(), Nr(te, ce);
                            break;
                          case 24:
                            for (; dt.length >= 8; ) {
                              var kr = te + dt.shift(), Ir = ce + dt.shift(), _r = kr + dt.shift(), Kr = Ir + dt.shift();
                              te = _r + dt.shift(), ce = Kr + dt.shift(), pt.bezierCurveTo(kr, Ir, _r, Kr, te, ce);
                            }
                            te += dt.shift(), ce += dt.shift(), pt.lineTo(te, ce);
                            break;
                          case 25:
                            for (; dt.length >= 8; )
                              te += dt.shift(), ce += dt.shift(), pt.lineTo(te, ce);
                            var kr = te + dt.shift(), Ir = ce + dt.shift(), _r = kr + dt.shift(), Kr = Ir + dt.shift();
                            te = _r + dt.shift(), ce = Kr + dt.shift(), pt.bezierCurveTo(kr, Ir, _r, Kr, te, ce);
                            break;
                          case 26:
                            for (dt.length % 2 && (te += dt.shift()); dt.length >= 4; )
                              kr = te, Ir = ce + dt.shift(), _r = kr + dt.shift(), Kr = Ir + dt.shift(), te = _r, ce = Kr + dt.shift(), pt.bezierCurveTo(kr, Ir, _r, Kr, te, ce);
                            break;
                          case 27:
                            for (dt.length % 2 && (ce += dt.shift()); dt.length >= 4; )
                              kr = te + dt.shift(), Ir = ce, _r = kr + dt.shift(), Kr = Ir + dt.shift(), te = _r + dt.shift(), ce = Kr, pt.bezierCurveTo(kr, Ir, _r, Kr, te, ce);
                            break;
                          case 28:
                            dt.push(j.readInt16BE());
                            break;
                          case 29:
                            if (Yr = dt.pop() + Ke, Sr = rr[Yr], Sr) {
                              ve[Yr] = !0;
                              var fn = j.pos, Sn = mt;
                              j.pos = Sr.offset, mt = Sr.offset + Sr.length, jr(), j.pos = fn, mt = Sn;
                            }
                            break;
                          case 30:
                          case 31:
                            for (Mr = wr === 31; dt.length >= 4; )
                              Mr ? (kr = te + dt.shift(), Ir = ce, _r = kr + dt.shift(), Kr = Ir + dt.shift(), ce = Kr + dt.shift(), te = _r + (dt.length === 1 ? dt.shift() : 0)) : (kr = te, Ir = ce + dt.shift(), _r = kr + dt.shift(), Kr = Ir + dt.shift(), te = _r + dt.shift(), ce = Kr + (dt.length === 1 ? dt.shift() : 0)), pt.bezierCurveTo(kr, Ir, _r, Kr, te, ce), Mr = !Mr;
                            break;
                          case 12:
                            switch (wr = j.readUInt8(), wr) {
                              case 3:
                                var Ur = dt.pop(), Dn = dt.pop();
                                dt.push(Ur && Dn ? 1 : 0);
                                break;
                              case 4:
                                Ur = dt.pop(), Dn = dt.pop(), dt.push(Ur || Dn ? 1 : 0);
                                break;
                              case 5:
                                Ur = dt.pop(), dt.push(Ur ? 0 : 1);
                                break;
                              case 9:
                                Ur = dt.pop(), dt.push(Math.abs(Ur));
                                break;
                              case 10:
                                Ur = dt.pop(), Dn = dt.pop(), dt.push(Ur + Dn);
                                break;
                              case 11:
                                Ur = dt.pop(), Dn = dt.pop(), dt.push(Ur - Dn);
                                break;
                              case 12:
                                Ur = dt.pop(), Dn = dt.pop(), dt.push(Ur / Dn);
                                break;
                              case 14:
                                Ur = dt.pop(), dt.push(-Ur);
                                break;
                              case 15:
                                Ur = dt.pop(), Dn = dt.pop(), dt.push(Ur === Dn ? 1 : 0);
                                break;
                              case 18:
                                dt.pop();
                                break;
                              case 20:
                                var oi = dt.pop(), pa = dt.pop();
                                Nt[pa] = oi;
                                break;
                              case 21:
                                pa = dt.pop(), dt.push(Nt[pa] || 0);
                                break;
                              case 22:
                                var Es = dt.pop(), Sd = dt.pop(), Cd = dt.pop(), Ed = dt.pop();
                                dt.push(Cd <= Ed ? Es : Sd);
                                break;
                              case 23:
                                dt.push(Math.random());
                                break;
                              case 24:
                                Ur = dt.pop(), Dn = dt.pop(), dt.push(Ur * Dn);
                                break;
                              case 26:
                                Ur = dt.pop(), dt.push(Math.sqrt(Ur));
                                break;
                              case 27:
                                Ur = dt.pop(), dt.push(Ur, Ur);
                                break;
                              case 28:
                                Ur = dt.pop(), Dn = dt.pop(), dt.push(Dn, Ur);
                                break;
                              case 29:
                                pa = dt.pop(), pa < 0 ? pa = 0 : pa > dt.length - 1 && (pa = dt.length - 1), dt.push(dt[pa]);
                                break;
                              case 30:
                                var Oo = dt.pop(), Ni = dt.pop();
                                if (Ni >= 0)
                                  for (; Ni > 0; ) {
                                    for (var Ts = dt[Oo - 1], Bo = Oo - 2; Bo >= 0; Bo--)
                                      dt[Bo + 1] = dt[Bo];
                                    dt[0] = Ts, Ni--;
                                  }
                                else
                                  for (; Ni < 0; ) {
                                    for (var Ts = dt[0], Ro = 0; Ro <= Oo; Ro++)
                                      dt[Ro] = dt[Ro + 1];
                                    dt[Oo - 1] = Ts, Ni++;
                                  }
                                break;
                              case 34:
                                kr = te + dt.shift(), Ir = ce, _r = kr + dt.shift(), Kr = Ir + dt.shift();
                                var Mi = _r + dt.shift(), ki = Kr, Ui = Mi + dt.shift(), zi = ki, Wi = Ui + dt.shift(), Hi = zi, ji = Wi + dt.shift(), Gi = Hi;
                                te = ji, ce = Gi, pt.bezierCurveTo(kr, Ir, _r, Kr, Mi, ki), pt.bezierCurveTo(Ui, zi, Wi, Hi, ji, Gi);
                                break;
                              case 35:
                                for (var ka = [], uf = 0; uf <= 5; uf++)
                                  te += dt.shift(), ce += dt.shift(), ka.push(te, ce);
                                pt.bezierCurveTo.apply(pt, ka.slice(0, 6)), pt.bezierCurveTo.apply(pt, ka.slice(6)), dt.shift();
                                break;
                              case 36:
                                kr = te + dt.shift(), Ir = ce + dt.shift(), _r = kr + dt.shift(), Kr = Ir + dt.shift(), Mi = _r + dt.shift(), ki = Kr, Ui = Mi + dt.shift(), zi = ki, Wi = Ui + dt.shift(), Hi = zi + dt.shift(), ji = Wi + dt.shift(), Gi = Hi, te = ji, ce = Gi, pt.bezierCurveTo(kr, Ir, _r, Kr, Mi, ki), pt.bezierCurveTo(Ui, zi, Wi, Hi, ji, Gi);
                                break;
                              case 37:
                                var cf = te, hf = ce;
                                ka = [];
                                for (var df = 0; df <= 4; df++)
                                  te += dt.shift(), ce += dt.shift(), ka.push(te, ce);
                                Math.abs(te - cf) > Math.abs(ce - hf) ? (te += dt.shift(), ce = hf) : (te = cf, ce += dt.shift()), ka.push(te, ce), pt.bezierCurveTo.apply(pt, ka.slice(0, 6)), pt.bezierCurveTo.apply(pt, ka.slice(6));
                                break;
                              default:
                                throw new Error("Unknown op: 12 ".concat(wr));
                            }
                            break;
                          default:
                            throw new Error("Unknown op: ".concat(wr));
                        }
                      else if (wr < 247)
                        dt.push(wr - 139);
                      else if (wr < 251) {
                        var Fs = j.readUInt8();
                        dt.push((wr - 247) * 256 + Fs + 108);
                      } else if (wr < 255) {
                        var Fs = j.readUInt8();
                        dt.push(-(wr - 251) * 256 - Fs - 108);
                      } else
                        dt.push(j.readInt32BE() / 65536);
                    }
                  };
                  return jr(), Ge && pt.closePath(), pt;
                }, X;
              }(Do), kh = new e.Struct({
                originX: e.uint16,
                originY: e.uint16,
                type: new e.String(4),
                data: new e.Buffer(function(lt) {
                  return lt.parent.buflen - lt._currentOffset;
                })
              }), Uh = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at.getImageForSize = function(z) {
                  for (var j = 0; j < this._font.sbix.imageTables.length; j++) {
                    var ft = this._font.sbix.imageTables[j];
                    if (ft.ppem >= z)
                      break;
                  }
                  var mt = ft.imageOffsets, pt = mt[this.id], dt = mt[this.id + 1];
                  return pt === dt ? null : (this._font.stream.pos = pt, kh.decode(this._font.stream, {
                    buflen: dt - pt
                  }));
                }, at.render = function(z, j) {
                  var ft = this.getImageForSize(j);
                  if (ft != null) {
                    var mt = j / this._font.unitsPerEm;
                    z.image(ft.data, {
                      height: j,
                      x: ft.originX,
                      y: (this.bbox.minY - ft.originY) * mt
                    });
                  }
                  this._font.sbix.flags.renderOutlines && lt.prototype.render.call(this, z, j);
                }, X;
              }(Po), Q0 = function(X, at) {
                this.glyph = X, this.color = at;
              }, zh = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at._getBBox = function() {
                  for (var z = new ni(), j = 0; j < this.layers.length; j++) {
                    var ft = this.layers[j], mt = ft.glyph.bbox;
                    z.addPoint(mt.minX, mt.minY), z.addPoint(mt.maxX, mt.maxY);
                  }
                  return z;
                }, at.render = function(z, j) {
                  for (var ft = s(this.layers), mt; !(mt = ft()).done; ) {
                    var pt = mt.value, dt = pt.glyph, Nt = pt.color;
                    z.fillColor([Nt.red, Nt.green, Nt.blue], Nt.alpha / 255 * 100), dt.render(z, j);
                  }
                }, o(X, [{
                  key: "layers",
                  get: function() {
                    for (var z = this._font.CPAL, j = this._font.COLR, ft = 0, mt = j.baseGlyphRecord.length - 1; ft <= mt; ) {
                      var pt = ft + mt >> 1, dt = j.baseGlyphRecord[pt];
                      if (this.id < dt.gid)
                        mt = pt - 1;
                      else if (this.id > dt.gid)
                        ft = pt + 1;
                      else {
                        var Nt = dt;
                        break;
                      }
                    }
                    if (Nt == null) {
                      var Yt = this._font._getBaseGlyph(this.id), se = {
                        red: 0,
                        green: 0,
                        blue: 0,
                        alpha: 255
                      };
                      return [new Q0(Yt, se)];
                    }
                    for (var te = [], ce = Nt.firstLayerIndex; ce < Nt.firstLayerIndex + Nt.numLayers; ce++) {
                      var dt = j.layerRecords[ce], se = z.colorRecords[dt.paletteIndex], Yt = this._font._getBaseGlyph(dt.gid);
                      te.push(new Q0(Yt, se));
                    }
                    return te;
                  }
                }]);
              }(Do), Wh = 32768, Hh = 4095, jh = 32768, $0 = 16384, Gh = 8192, q0 = 4095, _0 = 128, tf = 127, Vh = 128, Xh = 64, Zh = 63, Yh = /* @__PURE__ */ function() {
                function lt(at, R) {
                  this.font = at, this.normalizedCoords = this.normalizeCoords(R), this.blendVectors = /* @__PURE__ */ new Map();
                }
                var X = lt.prototype;
                return X.normalizeCoords = function(R) {
                  for (var z = [], j = 0; j < this.font.fvar.axis.length; j++) {
                    var ft = this.font.fvar.axis[j];
                    R[j] < ft.defaultValue ? z.push((R[j] - ft.defaultValue + Number.EPSILON) / (ft.defaultValue - ft.minValue + Number.EPSILON)) : z.push((R[j] - ft.defaultValue + Number.EPSILON) / (ft.maxValue - ft.defaultValue + Number.EPSILON));
                  }
                  if (this.font.avar)
                    for (var j = 0; j < this.font.avar.segment.length; j++)
                      for (var mt = this.font.avar.segment[j], pt = 0; pt < mt.correspondence.length; pt++) {
                        var dt = mt.correspondence[pt];
                        if (pt >= 1 && z[j] < dt.fromCoord) {
                          var Nt = mt.correspondence[pt - 1];
                          z[j] = ((z[j] - Nt.fromCoord) * (dt.toCoord - Nt.toCoord) + Number.EPSILON) / (dt.fromCoord - Nt.fromCoord + Number.EPSILON) + Nt.toCoord;
                          break;
                        }
                      }
                  return z;
                }, X.transformPoints = function(R, z) {
                  if (!(!this.font.fvar || !this.font.gvar)) {
                    var j = this.font.gvar;
                    if (!(R >= j.glyphCount)) {
                      var ft = j.offsets[R];
                      if (ft !== j.offsets[R + 1]) {
                        var mt = this.font.stream;
                        if (mt.pos = ft, !(mt.pos >= mt.length)) {
                          var pt = mt.readUInt16BE(), dt = ft + mt.readUInt16BE();
                          if (pt & Wh) {
                            var Nt = mt.pos;
                            mt.pos = dt;
                            var Yt = this.decodePoints();
                            dt = mt.pos, mt.pos = Nt;
                          }
                          var se = z.map(function(On) {
                            return On.copy();
                          });
                          pt &= Hh;
                          for (var te = 0; te < pt; te++) {
                            var ce = mt.readUInt16BE(), ve = mt.readUInt16BE();
                            if (ve & jh)
                              for (var De = [], Ge = 0; Ge < j.axisCount; Ge++)
                                De.push(mt.readInt16BE() / 16384);
                            else {
                              if ((ve & q0) >= j.globalCoordCount)
                                throw new Error("Invalid gvar table");
                              var De = j.globalCoords[ve & q0];
                            }
                            if (ve & $0) {
                              for (var rr = [], Ke = 0; Ke < j.axisCount; Ke++)
                                rr.push(mt.readInt16BE() / 16384);
                              for (var pr = [], cr = 0; cr < j.axisCount; cr++)
                                pr.push(mt.readInt16BE() / 16384);
                            }
                            var yr = this.tupleFactor(ve, De, rr, pr);
                            if (yr === 0) {
                              dt += ce;
                              continue;
                            }
                            var Nt = mt.pos;
                            if (mt.pos = dt, ve & Gh)
                              var Ar = this.decodePoints();
                            else
                              var Ar = Yt;
                            var Zr = Ar.length === 0 ? z.length : Ar.length, en = this.decodeDeltas(Zr), Gr = this.decodeDeltas(Zr);
                            if (Ar.length === 0)
                              for (var xr = 0; xr < z.length; xr++) {
                                var Nr = z[xr];
                                Nr.x += Math.round(en[xr] * yr), Nr.y += Math.round(Gr[xr] * yr);
                              }
                            else {
                              for (var jr = se.map(function(Mn) {
                                return Mn.copy();
                              }), An = z.map(function() {
                                return !1;
                              }), wr = 0; wr < Ar.length; wr++) {
                                var Mr = Ar[wr];
                                if (Mr < z.length) {
                                  var Yr = jr[Mr];
                                  An[Mr] = !0, Yr.x += Math.round(en[wr] * yr), Yr.y += Math.round(Gr[wr] * yr);
                                }
                              }
                              this.interpolateMissingDeltas(jr, se, An);
                              for (var Sr = 0; Sr < z.length; Sr++) {
                                var fn = jr[Sr].x - se[Sr].x, Sn = jr[Sr].y - se[Sr].y;
                                z[Sr].x += fn, z[Sr].y += Sn;
                              }
                            }
                            dt += ce, mt.pos = Nt;
                          }
                        }
                      }
                    }
                  }
                }, X.decodePoints = function() {
                  var R = this.font.stream, z = R.readUInt8();
                  z & _0 && (z = (z & tf) << 8 | R.readUInt8());
                  for (var j = new Uint16Array(z), ft = 0, mt = 0; ft < z; )
                    for (var pt = R.readUInt8(), dt = (pt & tf) + 1, Nt = pt & _0 ? R.readUInt16 : R.readUInt8, Yt = 0; Yt < dt && ft < z; Yt++)
                      mt += Nt.call(R), j[ft++] = mt;
                  return j;
                }, X.decodeDeltas = function(R) {
                  for (var z = this.font.stream, j = 0, ft = new Int16Array(R); j < R; ) {
                    var mt = z.readUInt8(), pt = (mt & Zh) + 1;
                    if (mt & Vh)
                      j += pt;
                    else
                      for (var dt = mt & Xh ? z.readInt16BE : z.readInt8, Nt = 0; Nt < pt && j < R; Nt++)
                        ft[j++] = dt.call(z);
                  }
                  return ft;
                }, X.tupleFactor = function(R, z, j, ft) {
                  for (var mt = this.normalizedCoords, pt = this.font.gvar, dt = 1, Nt = 0; Nt < pt.axisCount; Nt++)
                    if (z[Nt] !== 0) {
                      if (mt[Nt] === 0)
                        return 0;
                      if (R & $0) {
                        if (mt[Nt] < j[Nt] || mt[Nt] > ft[Nt])
                          return 0;
                        mt[Nt] < z[Nt] ? dt = dt * (mt[Nt] - j[Nt] + Number.EPSILON) / (z[Nt] - j[Nt] + Number.EPSILON) : dt = dt * (ft[Nt] - mt[Nt] + Number.EPSILON) / (ft[Nt] - z[Nt] + Number.EPSILON);
                      } else {
                        if (mt[Nt] < Math.min(0, z[Nt]) || mt[Nt] > Math.max(0, z[Nt]))
                          return 0;
                        dt = (dt * mt[Nt] + Number.EPSILON) / (z[Nt] + Number.EPSILON);
                      }
                    }
                  return dt;
                }, X.interpolateMissingDeltas = function(R, z, j) {
                  if (R.length !== 0)
                    for (var ft = 0; ft < R.length; ) {
                      for (var mt = ft, pt = ft, dt = R[pt]; !dt.endContour; )
                        dt = R[++pt];
                      for (; ft <= pt && !j[ft]; )
                        ft++;
                      if (!(ft > pt)) {
                        var Nt = ft, Yt = ft;
                        for (ft++; ft <= pt; )
                          j[ft] && (this.deltaInterpolate(Yt + 1, ft - 1, Yt, ft, z, R), Yt = ft), ft++;
                        Yt === Nt ? this.deltaShift(mt, pt, Yt, z, R) : (this.deltaInterpolate(Yt + 1, pt, Yt, Nt, z, R), Nt > 0 && this.deltaInterpolate(mt, Nt - 1, Yt, Nt, z, R)), ft = pt + 1;
                      }
                    }
                }, X.deltaInterpolate = function(R, z, j, ft, mt, pt) {
                  if (!(R > z))
                    for (var dt = ["x", "y"], Nt = 0; Nt < dt.length; Nt++) {
                      var Yt = dt[Nt];
                      if (mt[j][Yt] > mt[ft][Yt]) {
                        var se = j;
                        j = ft, ft = se;
                      }
                      var te = mt[j][Yt], ce = mt[ft][Yt], ve = pt[j][Yt], De = pt[ft][Yt];
                      if (te !== ce || ve === De)
                        for (var Ge = te === ce ? 0 : (De - ve) / (ce - te), rr = R; rr <= z; rr++) {
                          var Ke = mt[rr][Yt];
                          Ke <= te ? Ke += ve - te : Ke >= ce ? Ke += De - ce : Ke = ve + (Ke - te) * Ge, pt[rr][Yt] = Ke;
                        }
                    }
                }, X.deltaShift = function(R, z, j, ft, mt) {
                  var pt = mt[j].x - ft[j].x, dt = mt[j].y - ft[j].y;
                  if (!(pt === 0 && dt === 0))
                    for (var Nt = R; Nt <= z; Nt++)
                      Nt !== j && (mt[Nt].x += pt, mt[Nt].y += dt);
                }, X.getAdvanceAdjustment = function(R, z) {
                  var j, ft;
                  if (z.advanceWidthMapping) {
                    var mt = R;
                    mt >= z.advanceWidthMapping.mapCount && (mt = z.advanceWidthMapping.mapCount - 1), z.advanceWidthMapping.entryFormat;
                    var pt = z.advanceWidthMapping.mapData[mt];
                    j = pt.outerIndex, ft = pt.innerIndex;
                  } else
                    j = 0, ft = R;
                  return this.getDelta(z.itemVariationStore, j, ft);
                }, X.getDelta = function(R, z, j) {
                  if (z >= R.itemVariationData.length)
                    return 0;
                  var ft = R.itemVariationData[z];
                  if (j >= ft.deltaSets.length)
                    return 0;
                  for (var mt = ft.deltaSets[j], pt = this.getBlendVector(R, z), dt = 0, Nt = 0; Nt < ft.regionIndexCount; Nt++)
                    dt += mt.deltas[Nt] * pt[Nt];
                  return dt;
                }, X.getBlendVector = function(R, z) {
                  var j = R.itemVariationData[z];
                  if (this.blendVectors.has(j))
                    return this.blendVectors.get(j);
                  for (var ft = this.normalizedCoords, mt = [], pt = 0; pt < j.regionIndexCount; pt++) {
                    for (var dt = 1, Nt = j.regionIndexes[pt], Yt = R.variationRegionList.variationRegions[Nt], se = 0; se < Yt.length; se++) {
                      var te = Yt[se], ce = void 0;
                      te.startCoord > te.peakCoord || te.peakCoord > te.endCoord || te.startCoord < 0 && te.endCoord > 0 && te.peakCoord !== 0 || te.peakCoord === 0 ? ce = 1 : ft[se] < te.startCoord || ft[se] > te.endCoord ? ce = 0 : ft[se] === te.peakCoord ? ce = 1 : ft[se] < te.peakCoord ? ce = (ft[se] - te.startCoord + Number.EPSILON) / (te.peakCoord - te.startCoord + Number.EPSILON) : ce = (te.endCoord - ft[se] + Number.EPSILON) / (te.endCoord - te.peakCoord + Number.EPSILON), dt *= ce;
                    }
                    mt[pt] = dt;
                  }
                  return this.blendVectors.set(j, mt), mt;
                }, lt;
              }(), Kh = Promise.resolve(), ef = /* @__PURE__ */ function() {
                function lt(at) {
                  this.font = at, this.glyphs = [], this.mapping = {}, this.includeGlyph(0);
                }
                var X = lt.prototype;
                return X.includeGlyph = function(R) {
                  return typeof R == "object" && (R = R.id), this.mapping[R] == null && (this.glyphs.push(R), this.mapping[R] = this.glyphs.length - 1), this.mapping[R];
                }, X.encodeStream = function() {
                  var R = this, z = new e.EncodeStream();
                  return Kh.then(function() {
                    return R.encode(z), z.end();
                  }), z;
                }, lt;
              }(), Jh = 1, Qh = 2, $h = 4, qh = 8, _h = 16, td = 32, rf = /* @__PURE__ */ function() {
                function lt() {
                }
                return lt.size = function(at) {
                  return at >= 0 && at <= 255 ? 1 : 2;
                }, lt.encode = function(at, R) {
                  R >= 0 && R <= 255 ? at.writeUInt8(R) : at.writeInt16BE(R);
                }, lt;
              }(), nf = new e.Struct({
                numberOfContours: e.int16,
                // if negative, this is a composite glyph
                xMin: e.int16,
                yMin: e.int16,
                xMax: e.int16,
                yMax: e.int16,
                endPtsOfContours: new e.Array(e.uint16, "numberOfContours"),
                instructions: new e.Array(e.uint8, e.uint16),
                flags: new e.Array(e.uint8, 0),
                xPoints: new e.Array(rf, 0),
                yPoints: new e.Array(rf, 0)
              }), ed = /* @__PURE__ */ function() {
                function lt() {
                }
                var X = lt.prototype;
                return X.encodeSimple = function(R, z) {
                  z === void 0 && (z = []);
                  for (var j = [], ft = [], mt = [], pt = [], dt = 0, Nt = 0, Yt = 0, se = 0, te = 0, ce = 0; ce < R.commands.length; ce++) {
                    for (var ve = R.commands[ce], De = 0; De < ve.args.length; De += 2) {
                      var Ge = ve.args[De], rr = ve.args[De + 1], Ke = 0;
                      if (ve.command === "quadraticCurveTo" && De === 2) {
                        var pr = R.commands[ce + 1];
                        if (pr && pr.command === "quadraticCurveTo") {
                          var cr = (Nt + pr.args[0]) / 2, yr = (Yt + pr.args[1]) / 2;
                          if (Ge === cr && rr === yr)
                            continue;
                        }
                      }
                      ve.command === "quadraticCurveTo" && De === 0 || (Ke |= Jh), Ke = this._encodePoint(Ge, Nt, ft, Ke, Qh, _h), Ke = this._encodePoint(rr, Yt, mt, Ke, $h, td), Ke === se && dt < 255 ? (pt[pt.length - 1] |= qh, dt++) : (dt > 0 && (pt.push(dt), dt = 0), pt.push(Ke), se = Ke), Nt = Ge, Yt = rr, te++;
                    }
                    ve.command === "closePath" && j.push(te - 1);
                  }
                  R.commands.length > 1 && R.commands[R.commands.length - 1].command !== "closePath" && j.push(te - 1);
                  var Ar = R.bbox, Zr = {
                    numberOfContours: j.length,
                    xMin: Ar.minX,
                    yMin: Ar.minY,
                    xMax: Ar.maxX,
                    yMax: Ar.maxY,
                    endPtsOfContours: j,
                    instructions: z,
                    flags: pt,
                    xPoints: ft,
                    yPoints: mt
                  }, en = nf.size(Zr), Gr = 4 - en % 4, xr = new e.EncodeStream(en + Gr);
                  return nf.encode(xr, Zr), Gr !== 0 && xr.fill(0, Gr), xr.buffer;
                }, X._encodePoint = function(R, z, j, ft, mt, pt) {
                  var dt = R - z;
                  return R === z ? ft |= pt : (-255 <= dt && dt <= 255 && (ft |= mt, dt < 0 ? dt = -dt : ft |= pt), j.push(dt)), ft;
                }, lt;
              }(), rd = /* @__PURE__ */ function(lt) {
                function X(R) {
                  var z;
                  return z = lt.call(this, R) || this, z.glyphEncoder = new ed(), z;
                }
                l(X, lt);
                var at = X.prototype;
                return at._addGlyph = function(z) {
                  var j = this.font.getGlyph(z), ft = j._decode(), mt = this.font.loca.offsets[z], pt = this.font.loca.offsets[z + 1], dt = this.font._getTableStream("glyf");
                  dt.pos += mt;
                  var Nt = dt.readBuffer(pt - mt);
                  if (ft && ft.numberOfContours < 0) {
                    Nt = i.from(Nt);
                    for (var Yt = s(ft.components), se; !(se = Yt()).done; ) {
                      var te = se.value;
                      z = this.includeGlyph(te.glyphID), Nt.writeUInt16BE(z, te.pos);
                    }
                  } else
                    ft && this.font._variationProcessor && (Nt = this.glyphEncoder.encodeSimple(j.path, ft.instructions));
                  return this.glyf.push(Nt), this.loca.offsets.push(this.offset), this.hmtx.metrics.push({
                    advance: j.advanceWidth,
                    bearing: j._getMetrics().leftBearing
                  }), this.offset += Nt.length, this.glyf.length - 1;
                }, at.encode = function(z) {
                  this.glyf = [], this.offset = 0, this.loca = {
                    offsets: [],
                    version: this.font.loca.version
                  }, this.hmtx = {
                    metrics: [],
                    bearings: []
                  };
                  for (var j = 0; j < this.glyphs.length; )
                    this._addGlyph(this.glyphs[j++]);
                  var ft = T(this.font.maxp);
                  ft.numGlyphs = this.glyf.length, this.loca.offsets.push(this.offset);
                  var mt = T(this.font.head);
                  mt.indexToLocFormat = this.loca.version;
                  var pt = T(this.font.hhea);
                  pt.numberOfMetrics = this.hmtx.metrics.length, so.encode(z, {
                    tables: {
                      head: mt,
                      hhea: pt,
                      loca: this.loca,
                      maxp: ft,
                      "cvt ": this.font["cvt "],
                      prep: this.font.prep,
                      glyf: this.glyf,
                      hmtx: this.hmtx,
                      fpgm: this.font.fpgm
                      // name: clone @font.name
                      // 'OS/2': clone @font['OS/2']
                      // post: clone @font.post
                      // cmap: cmap
                    }
                  });
                }, X;
              }(ef), nd = /* @__PURE__ */ function(lt) {
                function X(R) {
                  var z;
                  if (z = lt.call(this, R) || this, z.cff = z.font["CFF "], !z.cff)
                    throw new Error("Not a CFF Font");
                  return z;
                }
                l(X, lt);
                var at = X.prototype;
                return at.subsetCharstrings = function() {
                  this.charstrings = [];
                  for (var z = {}, j = s(this.glyphs), ft; !(ft = j()).done; ) {
                    var mt = ft.value;
                    this.charstrings.push(this.cff.getCharString(mt));
                    var pt = this.font.getGlyph(mt);
                    pt.path;
                    for (var dt in pt._usedGsubrs)
                      z[dt] = !0;
                  }
                  this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, z);
                }, at.subsetSubrs = function(z, j) {
                  for (var ft = [], mt = 0; mt < z.length; mt++) {
                    var pt = z[mt];
                    j[mt] ? (this.cff.stream.pos = pt.offset, ft.push(this.cff.stream.readBuffer(pt.length))) : ft.push(i.from([11]));
                  }
                  return ft;
                }, at.subsetFontdict = function(z) {
                  z.FDArray = [], z.FDSelect = {
                    version: 0,
                    fds: []
                  };
                  for (var j = {}, ft = [], mt = {}, pt = s(this.glyphs), dt; !(dt = pt()).done; ) {
                    var Nt = dt.value, Yt = this.cff.fdForGlyph(Nt);
                    if (Yt != null) {
                      j[Yt] || (z.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[Yt])), ft.push({}), mt[Yt] = z.FDArray.length - 1), j[Yt] = !0, z.FDSelect.fds.push(mt[Yt]);
                      var se = this.font.getGlyph(Nt);
                      se.path;
                      for (var te in se._usedSubrs)
                        ft[mt[Yt]][te] = !0;
                    }
                  }
                  for (var ce = 0; ce < z.FDArray.length; ce++) {
                    var ve = z.FDArray[ce];
                    delete ve.FontName, ve.Private && ve.Private.Subrs && (ve.Private = Object.assign({}, ve.Private), ve.Private.Subrs = this.subsetSubrs(ve.Private.Subrs, ft[ce]));
                  }
                }, at.createCIDFontdict = function(z) {
                  for (var j = {}, ft = s(this.glyphs), mt; !(mt = ft()).done; ) {
                    var pt = mt.value, dt = this.font.getGlyph(pt);
                    dt.path;
                    for (var Nt in dt._usedSubrs)
                      j[Nt] = !0;
                  }
                  var Yt = Object.assign({}, this.cff.topDict.Private);
                  return this.cff.topDict.Private && this.cff.topDict.Private.Subrs && (Yt.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, j)), z.FDArray = [{
                    Private: Yt
                  }], z.FDSelect = {
                    version: 3,
                    nRanges: 1,
                    ranges: [{
                      first: 0,
                      fd: 0
                    }],
                    sentinel: this.charstrings.length
                  };
                }, at.addString = function(z) {
                  return z ? (this.strings || (this.strings = []), this.strings.push(z), vt.length + this.strings.length - 1) : null;
                }, at.encode = function(z) {
                  this.subsetCharstrings();
                  var j = {
                    version: this.charstrings.length > 255 ? 2 : 1,
                    ranges: [{
                      first: 1,
                      nLeft: this.charstrings.length - 2
                    }]
                  }, ft = Object.assign({}, this.cff.topDict);
                  ft.Private = null, ft.charset = j, ft.Encoding = null, ft.CharStrings = this.charstrings;
                  for (var mt = 0, pt = ["version", "Notice", "Copyright", "FullName", "FamilyName", "Weight", "PostScript", "BaseFontName", "FontName"]; mt < pt.length; mt++) {
                    var dt = pt[mt];
                    ft[dt] = this.addString(this.cff.string(ft[dt]));
                  }
                  ft.ROS = [this.addString("Adobe"), this.addString("Identity"), 0], ft.CIDCount = this.charstrings.length, this.cff.isCIDFont ? this.subsetFontdict(ft) : this.createCIDFontdict(ft);
                  var Nt = {
                    version: 1,
                    hdrSize: this.cff.hdrSize,
                    offSize: 4,
                    header: this.cff.header,
                    nameIndex: [this.cff.postscriptName],
                    topDictIndex: [ft],
                    stringIndex: this.strings,
                    globalSubrIndex: this.gsubrs
                  };
                  pe.encode(z, Nt);
                }, X;
              }(ef), sn, Ja = (sn = /* @__PURE__ */ function() {
                function lt(at, R) {
                  R === void 0 && (R = null), this.defaultLanguage = null, this.stream = at, this.variationCoords = R, this._directoryPos = this.stream.pos, this._tables = {}, this._glyphs = {}, this._decodeDirectory();
                  for (var z in this.directory.tables) {
                    var j = this.directory.tables[z];
                    ur[z] && j.length > 0 && Object.defineProperty(this, z, {
                      get: this._getTable.bind(this, j)
                    });
                  }
                }
                lt.probe = function(R) {
                  var z = R.toString("ascii", 0, 4);
                  return z === "true" || z === "OTTO" || z === String.fromCharCode(0, 1, 0, 0);
                };
                var X = lt.prototype;
                return X.setDefaultLanguage = function(R) {
                  R === void 0 && (R = null), this.defaultLanguage = R;
                }, X._getTable = function(R) {
                  if (!(R.tag in this._tables))
                    try {
                      this._tables[R.tag] = this._decodeTable(R);
                    } catch (z) {
                      I.logErrors && (console.error("Error decoding table ".concat(R.tag)), console.error(z.stack));
                    }
                  return this._tables[R.tag];
                }, X._getTableStream = function(R) {
                  var z = this.directory.tables[R];
                  return z ? (this.stream.pos = z.offset, this.stream) : null;
                }, X._decodeDirectory = function() {
                  return this.directory = so.decode(this.stream, {
                    _startOffset: 0
                  });
                }, X._decodeTable = function(R) {
                  var z = this.stream.pos, j = this._getTableStream(R.tag), ft = ur[R.tag].decode(j, this, R.length);
                  return this.stream.pos = z, ft;
                }, X.getName = function(R, z) {
                  z === void 0 && (z = this.defaultLanguage || I.defaultLanguage);
                  var j = this.name && this.name.records[R];
                  return j && (j[z] || j[this.defaultLanguage] || j[I.defaultLanguage] || j.en || j[Object.keys(j)[0]]) || null;
                }, X.hasGlyphForCodePoint = function(R) {
                  return !!this._cmapProcessor.lookup(R);
                }, X.glyphForCodePoint = function(R) {
                  return this.getGlyph(this._cmapProcessor.lookup(R), [R]);
                }, X.glyphsForString = function(R) {
                  for (var z = [], j = R.length, ft = 0, mt = -1, pt = -1; ft <= j; ) {
                    var dt = 0, Nt = 0;
                    if (ft < j) {
                      if (dt = R.charCodeAt(ft++), 55296 <= dt && dt <= 56319 && ft < j) {
                        var Yt = R.charCodeAt(ft);
                        56320 <= Yt && Yt <= 57343 && (ft++, dt = ((dt & 1023) << 10) + (Yt & 1023) + 65536);
                      }
                      Nt = 65024 <= dt && dt <= 65039 || 917760 <= dt && dt <= 917999 ? 1 : 0;
                    } else
                      ft++;
                    pt === 0 && Nt === 1 ? z.push(this.getGlyph(this._cmapProcessor.lookup(mt, dt), [mt, dt])) : pt === 0 && Nt === 0 && z.push(this.glyphForCodePoint(mt)), mt = dt, pt = Nt;
                  }
                  return z;
                }, X.layout = function(R, z, j, ft, mt) {
                  return this._layoutEngine.layout(R, z, j, ft, mt);
                }, X.stringsForGlyph = function(R) {
                  return this._layoutEngine.stringsForGlyph(R);
                }, X.getAvailableFeatures = function(R, z) {
                  return this._layoutEngine.getAvailableFeatures(R, z);
                }, X._getBaseGlyph = function(R, z) {
                  return z === void 0 && (z = []), this._glyphs[R] || (this.directory.tables.glyf ? this._glyphs[R] = new Po(R, z, this) : (this.directory.tables["CFF "] || this.directory.tables.CFF2) && (this._glyphs[R] = new Mh(R, z, this))), this._glyphs[R] || null;
                }, X.getGlyph = function(R, z) {
                  return z === void 0 && (z = []), this._glyphs[R] || (this.directory.tables.sbix ? this._glyphs[R] = new Uh(R, z, this) : this.directory.tables.COLR && this.directory.tables.CPAL ? this._glyphs[R] = new zh(R, z, this) : this._getBaseGlyph(R, z)), this._glyphs[R] || null;
                }, X.createSubset = function() {
                  return this.directory.tables["CFF "] ? new nd(this) : new rd(this);
                }, X.getVariation = function(R) {
                  if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2)))
                    throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");
                  if (typeof R == "string" && (R = this.namedVariations[R]), typeof R != "object")
                    throw new Error("Variation settings must be either a variation name or settings object.");
                  var z = this.fvar.axis.map(function(mt, pt) {
                    var dt = mt.axisTag.trim();
                    return dt in R ? Math.max(mt.minValue, Math.min(mt.maxValue, R[dt])) : mt.defaultValue;
                  }), j = new e.DecodeStream(this.stream.buffer);
                  j.pos = this._directoryPos;
                  var ft = new lt(j, z);
                  return ft._tables = this._tables, ft;
                }, X.getFont = function(R) {
                  return this.getVariation(R);
                }, o(lt, [{
                  key: "postscriptName",
                  get: function() {
                    return this.getName("postscriptName");
                  }
                  /**
                   * The font's full name, e.g. "Helvetica Bold"
                   * @type {string}
                   */
                }, {
                  key: "fullName",
                  get: function() {
                    return this.getName("fullName");
                  }
                  /**
                   * The font's family name, e.g. "Helvetica"
                   * @type {string}
                   */
                }, {
                  key: "familyName",
                  get: function() {
                    return this.getName("fontFamily");
                  }
                  /**
                   * The font's sub-family, e.g. "Bold".
                   * @type {string}
                   */
                }, {
                  key: "subfamilyName",
                  get: function() {
                    return this.getName("fontSubfamily");
                  }
                  /**
                   * The font's copyright information
                   * @type {string}
                   */
                }, {
                  key: "copyright",
                  get: function() {
                    return this.getName("copyright");
                  }
                  /**
                   * The font's version number
                   * @type {string}
                   */
                }, {
                  key: "version",
                  get: function() {
                    return this.getName("version");
                  }
                  /**
                   * The fontâs [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))
                   * @type {number}
                   */
                }, {
                  key: "ascent",
                  get: function() {
                    return this.hhea.ascent;
                  }
                  /**
                   * The fontâs [descender](https://en.wikipedia.org/wiki/Descender)
                   * @type {number}
                   */
                }, {
                  key: "descent",
                  get: function() {
                    return this.hhea.descent;
                  }
                  /**
                   * The amount of space that should be included between lines
                   * @type {number}
                   */
                }, {
                  key: "lineGap",
                  get: function() {
                    return this.hhea.lineGap;
                  }
                  /**
                   * The offset from the normal underline position that should be used
                   * @type {number}
                   */
                }, {
                  key: "underlinePosition",
                  get: function() {
                    return this.post.underlinePosition;
                  }
                  /**
                   * The weight of the underline that should be used
                   * @type {number}
                   */
                }, {
                  key: "underlineThickness",
                  get: function() {
                    return this.post.underlineThickness;
                  }
                  /**
                   * If this is an italic font, the angle the cursor should be drawn at to match the font design
                   * @type {number}
                   */
                }, {
                  key: "italicAngle",
                  get: function() {
                    return this.post.italicAngle;
                  }
                  /**
                   * The height of capital letters above the baseline.
                   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.
                   * @type {number}
                   */
                }, {
                  key: "capHeight",
                  get: function() {
                    var R = this["OS/2"];
                    return R ? R.capHeight : this.ascent;
                  }
                  /**
                   * The height of lower case letters in the font.
                   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.
                   * @type {number}
                   */
                }, {
                  key: "xHeight",
                  get: function() {
                    var R = this["OS/2"];
                    return R ? R.xHeight : 0;
                  }
                  /**
                   * The number of glyphs in the font.
                   * @type {number}
                   */
                }, {
                  key: "numGlyphs",
                  get: function() {
                    return this.maxp.numGlyphs;
                  }
                  /**
                   * The size of the fontâs internal coordinate grid
                   * @type {number}
                   */
                }, {
                  key: "unitsPerEm",
                  get: function() {
                    return this.head.unitsPerEm;
                  }
                  /**
                   * The fontâs bounding box, i.e. the box that encloses all glyphs in the font.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    return Object.freeze(new ni(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));
                  }
                }, {
                  key: "_cmapProcessor",
                  get: function() {
                    return new Ru(this.cmap);
                  }
                  /**
                   * An array of all of the unicode code points supported by the font.
                   * @type {number[]}
                   */
                }, {
                  key: "characterSet",
                  get: function() {
                    return this._cmapProcessor.getCharacterSet();
                  }
                }, {
                  key: "_layoutEngine",
                  get: function() {
                    return new bh(this);
                  }
                }, {
                  key: "availableFeatures",
                  get: function() {
                    return this._layoutEngine.getAvailableFeatures();
                  }
                }, {
                  key: "variationAxes",
                  get: function() {
                    var R = {};
                    if (!this.fvar)
                      return R;
                    for (var z = s(this.fvar.axis), j; !(j = z()).done; ) {
                      var ft = j.value;
                      R[ft.axisTag.trim()] = {
                        name: ft.name.en,
                        min: ft.minValue,
                        default: ft.defaultValue,
                        max: ft.maxValue
                      };
                    }
                    return R;
                  }
                  /**
                   * Returns an object describing the named variation instances
                   * that the font designer has specified. Keys are variation names
                   * and values are the variation settings for this instance.
                   *
                   * @type {object}
                   */
                }, {
                  key: "namedVariations",
                  get: function() {
                    var R = {};
                    if (!this.fvar)
                      return R;
                    for (var z = s(this.fvar.instance), j; !(j = z()).done; ) {
                      for (var ft = j.value, mt = {}, pt = 0; pt < this.fvar.axis.length; pt++) {
                        var dt = this.fvar.axis[pt];
                        mt[dt.axisTag.trim()] = ft.coord[pt];
                      }
                      R[ft.name.en] = mt;
                    }
                    return R;
                  }
                }, {
                  key: "_variationProcessor",
                  get: function() {
                    if (!this.fvar)
                      return null;
                    var R = this.variationCoords;
                    return !R && !this.CFF2 ? null : (R || (R = this.fvar.axis.map(function(z) {
                      return z.defaultValue;
                    })), new Yh(this, R));
                  }
                }]);
              }(), N(sn.prototype, "bbox", [G], Object.getOwnPropertyDescriptor(sn.prototype, "bbox"), sn.prototype), N(sn.prototype, "_cmapProcessor", [G], Object.getOwnPropertyDescriptor(sn.prototype, "_cmapProcessor"), sn.prototype), N(sn.prototype, "characterSet", [G], Object.getOwnPropertyDescriptor(sn.prototype, "characterSet"), sn.prototype), N(sn.prototype, "_layoutEngine", [G], Object.getOwnPropertyDescriptor(sn.prototype, "_layoutEngine"), sn.prototype), N(sn.prototype, "variationAxes", [G], Object.getOwnPropertyDescriptor(sn.prototype, "variationAxes"), sn.prototype), N(sn.prototype, "namedVariations", [G], Object.getOwnPropertyDescriptor(sn.prototype, "namedVariations"), sn.prototype), N(sn.prototype, "_variationProcessor", [G], Object.getOwnPropertyDescriptor(sn.prototype, "_variationProcessor"), sn.prototype), sn), ad = new e.Struct({
                tag: new e.String(4),
                offset: new e.Pointer(e.uint32, "void", {
                  type: "global"
                }),
                compLength: e.uint32,
                length: e.uint32,
                origChecksum: e.uint32
              }), af = new e.Struct({
                tag: new e.String(4),
                // should be 'wOFF'
                flavor: e.uint32,
                length: e.uint32,
                numTables: e.uint16,
                reserved: new e.Reserved(e.uint16),
                totalSfntSize: e.uint32,
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                metaOffset: e.uint32,
                metaLength: e.uint32,
                metaOrigLength: e.uint32,
                privOffset: e.uint32,
                privLength: e.uint32,
                tables: new e.Array(ad, "numTables")
              });
              af.process = function() {
                for (var lt = {}, X = s(this.tables), at; !(at = X()).done; ) {
                  var R = at.value;
                  lt[R.tag] = R;
                }
                this.tables = lt;
              };
              var id = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt), X.probe = function(z) {
                  return z.toString("ascii", 0, 4) === "wOFF";
                };
                var at = X.prototype;
                return at._decodeDirectory = function() {
                  this.directory = af.decode(this.stream, {
                    _startOffset: 0
                  });
                }, at._getTableStream = function(z) {
                  var j = this.directory.tables[z];
                  if (j)
                    if (this.stream.pos = j.offset, j.compLength < j.length) {
                      this.stream.pos += 2;
                      var ft = i.alloc(j.length), mt = C(this.stream.readBuffer(j.compLength - 2), ft);
                      return new e.DecodeStream(mt);
                    } else
                      return this.stream;
                  return null;
                }, X;
              }(Ja), od = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt);
                var at = X.prototype;
                return at._decode = function() {
                  return this._font._transformedGlyphs[this.id];
                }, at._getCBox = function() {
                  return this.path.bbox;
                }, X;
              }(Po), of = {
                decode: function(X) {
                  for (var at = 0, R = [0, 1, 2, 3, 4], z = 0; z < R.length; z++) {
                    var j = X.readUInt8();
                    if (at & 3758096384)
                      throw new Error("Overflow");
                    if (at = at << 7 | j & 127, !(j & 128))
                      return at;
                  }
                  throw new Error("Bad base 128 number");
                }
              }, sd = ["cmap", "head", "hhea", "hmtx", "maxp", "name", "OS/2", "post", "cvt ", "fpgm", "glyf", "loca", "prep", "CFF ", "VORG", "EBDT", "EBLC", "gasp", "hdmx", "kern", "LTSH", "PCLT", "VDMX", "vhea", "vmtx", "BASE", "GDEF", "GPOS", "GSUB", "EBSC", "JSTF", "MATH", "CBDT", "CBLC", "COLR", "CPAL", "SVG ", "sbix", "acnt", "avar", "bdat", "bloc", "bsln", "cvar", "fdsc", "feat", "fmtx", "fvar", "gvar", "hsty", "just", "lcar", "mort", "morx", "opbd", "prop", "trak", "Zapf", "Silf", "Glat", "Gloc", "Feat", "Sill"], fd = new e.Struct({
                flags: e.uint8,
                customTag: new e.Optional(new e.String(4), function(lt) {
                  return (lt.flags & 63) === 63;
                }),
                tag: function(X) {
                  return X.customTag || sd[X.flags & 63];
                },
                // || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },
                length: of,
                transformVersion: function(X) {
                  return X.flags >>> 6 & 3;
                },
                transformed: function(X) {
                  return X.tag === "glyf" || X.tag === "loca" ? X.transformVersion === 0 : X.transformVersion !== 0;
                },
                transformLength: new e.Optional(of, function(lt) {
                  return lt.transformed;
                })
              }), sf = new e.Struct({
                tag: new e.String(4),
                // should be 'wOF2'
                flavor: e.uint32,
                length: e.uint32,
                numTables: e.uint16,
                reserved: new e.Reserved(e.uint16),
                totalSfntSize: e.uint32,
                totalCompressedSize: e.uint32,
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                metaOffset: e.uint32,
                metaLength: e.uint32,
                metaOrigLength: e.uint32,
                privOffset: e.uint32,
                privLength: e.uint32,
                tables: new e.Array(fd, "numTables")
              });
              sf.process = function() {
                for (var lt = {}, X = 0; X < this.tables.length; X++) {
                  var at = this.tables[X];
                  lt[at.tag] = at;
                }
                return this.tables = lt;
              };
              var ld = /* @__PURE__ */ function(lt) {
                function X() {
                  return lt.apply(this, arguments) || this;
                }
                l(X, lt), X.probe = function(z) {
                  return z.toString("ascii", 0, 4) === "wOF2";
                };
                var at = X.prototype;
                return at._decodeDirectory = function() {
                  this.directory = sf.decode(this.stream), this._dataPos = this.stream.pos;
                }, at._decompress = function() {
                  if (!this._decompressed) {
                    this.stream.pos = this._dataPos;
                    var z = this.stream.readBuffer(this.directory.totalCompressedSize), j = 0;
                    for (var ft in this.directory.tables) {
                      var mt = this.directory.tables[ft];
                      mt.offset = j, j += mt.transformLength != null ? mt.transformLength : mt.length;
                    }
                    var pt = F(z, j);
                    if (!pt)
                      throw new Error("Error decoding compressed data in WOFF2");
                    this.stream = new e.DecodeStream(i.from(pt)), this._decompressed = !0;
                  }
                }, at._decodeTable = function(z) {
                  return this._decompress(), lt.prototype._decodeTable.call(this, z);
                }, at._getBaseGlyph = function(z, j) {
                  if (j === void 0 && (j = []), !this._glyphs[z])
                    return this.directory.tables.glyf && this.directory.tables.glyf.transformed ? (this._transformedGlyphs || this._transformGlyfTable(), this._glyphs[z] = new od(z, j, this)) : lt.prototype._getBaseGlyph.call(this, z, j);
                }, at._transformGlyfTable = function() {
                  this._decompress(), this.stream.pos = this.directory.tables.glyf.offset;
                  for (var z = ud.decode(this.stream), j = [], ft = 0; ft < z.numGlyphs; ft++) {
                    var mt = {}, pt = z.nContours.readInt16BE();
                    if (mt.numberOfContours = pt, pt > 0) {
                      for (var dt = [], Nt = 0, Yt = 0; Yt < pt; Yt++) {
                        var se = Cs(z.nPoints);
                        Nt += se, dt.push(Nt);
                      }
                      mt.points = vd(z.flags, z.glyphs, Nt);
                      for (var te = 0; te < pt; te++)
                        mt.points[dt[te] - 1].endContour = !0;
                      Cs(z.glyphs);
                    } else if (pt < 0) {
                      var ce = Po.prototype._decodeComposite.call({
                        _font: this
                      }, mt, z.composites);
                      ce && Cs(z.glyphs);
                    }
                    j.push(mt);
                  }
                  this._transformedGlyphs = j;
                }, X;
              }(Ja), Qa = /* @__PURE__ */ function() {
                function lt(at) {
                  this.length = at, this._buf = new e.Buffer(at);
                }
                var X = lt.prototype;
                return X.decode = function(R, z) {
                  return new e.DecodeStream(this._buf.decode(R, z));
                }, lt;
              }(), ud = new e.Struct({
                version: e.uint32,
                numGlyphs: e.uint16,
                indexFormat: e.uint16,
                nContourStreamSize: e.uint32,
                nPointsStreamSize: e.uint32,
                flagStreamSize: e.uint32,
                glyphStreamSize: e.uint32,
                compositeStreamSize: e.uint32,
                bboxStreamSize: e.uint32,
                instructionStreamSize: e.uint32,
                nContours: new Qa("nContourStreamSize"),
                nPoints: new Qa("nPointsStreamSize"),
                flags: new Qa("flagStreamSize"),
                glyphs: new Qa("glyphStreamSize"),
                composites: new Qa("compositeStreamSize"),
                bboxes: new Qa("bboxStreamSize"),
                instructions: new Qa("instructionStreamSize")
              }), cd = 253, hd = 254, dd = 255, ff = 253;
              function Cs(lt) {
                var X = lt.readUInt8();
                return X === cd ? lt.readUInt16BE() : X === dd ? lt.readUInt8() + ff : X === hd ? lt.readUInt8() + ff * 2 : X;
              }
              function wa(lt, X) {
                return lt & 1 ? X : -X;
              }
              function vd(lt, X, at) {
                for (var R, z = R = 0, j = [], ft = 0; ft < at; ft++) {
                  var mt = 0, pt = 0, dt = lt.readUInt8(), Nt = !(dt >> 7);
                  if (dt &= 127, dt < 10)
                    mt = 0, pt = wa(dt, ((dt & 14) << 7) + X.readUInt8());
                  else if (dt < 20)
                    mt = wa(dt, ((dt - 10 & 14) << 7) + X.readUInt8()), pt = 0;
                  else if (dt < 84) {
                    var Yt = dt - 20, se = X.readUInt8();
                    mt = wa(dt, 1 + (Yt & 48) + (se >> 4)), pt = wa(dt >> 1, 1 + ((Yt & 12) << 2) + (se & 15));
                  } else if (dt < 120) {
                    var Yt = dt - 84;
                    mt = wa(dt, 1 + (Yt / 12 << 8) + X.readUInt8()), pt = wa(dt >> 1, 1 + (Yt % 12 >> 2 << 8) + X.readUInt8());
                  } else if (dt < 124) {
                    var se = X.readUInt8(), te = X.readUInt8();
                    mt = wa(dt, (se << 4) + (te >> 4)), pt = wa(dt >> 1, ((te & 15) << 8) + X.readUInt8());
                  } else
                    mt = wa(dt, X.readUInt16BE()), pt = wa(dt >> 1, X.readUInt16BE());
                  z += mt, R += pt, j.push(new Da(Nt, !1, z, R));
                }
                return j;
              }
              var pd = new e.VersionedStruct(e.uint32, {
                65536: {
                  numFonts: e.uint32,
                  offsets: new e.Array(e.uint32, "numFonts")
                },
                131072: {
                  numFonts: e.uint32,
                  offsets: new e.Array(e.uint32, "numFonts"),
                  dsigTag: e.uint32,
                  dsigLength: e.uint32,
                  dsigOffset: e.uint32
                }
              }), gd = /* @__PURE__ */ function() {
                function lt(at) {
                  if (this.stream = at, at.readString(4) !== "ttcf")
                    throw new Error("Not a TrueType collection");
                  this.header = pd.decode(at);
                }
                lt.probe = function(R) {
                  return R.toString("ascii", 0, 4) === "ttcf";
                };
                var X = lt.prototype;
                return X.getFont = function(R) {
                  for (var z = s(this.header.offsets), j; !(j = z()).done; ) {
                    var ft = j.value, mt = new e.DecodeStream(this.stream.buffer);
                    mt.pos = ft;
                    var pt = new Ja(mt);
                    if (pt.postscriptName === R)
                      return pt;
                  }
                  return null;
                }, o(lt, [{
                  key: "fonts",
                  get: function() {
                    for (var R = [], z = s(this.header.offsets), j; !(j = z()).done; ) {
                      var ft = j.value, mt = new e.DecodeStream(this.stream.buffer);
                      mt.pos = ft, R.push(new Ja(mt));
                    }
                    return R;
                  }
                }]);
              }(), md = new e.String(e.uint8);
              new e.Struct({
                len: e.uint32,
                buf: new e.Buffer("len")
              });
              var yd = new e.Struct({
                id: e.uint16,
                nameOffset: e.int16,
                attr: e.uint8,
                dataOffset: e.uint24,
                handle: e.uint32
              }), xd = new e.Struct({
                name: new e.String(4),
                maxTypeIndex: e.uint16,
                refList: new e.Pointer(e.uint16, new e.Array(yd, function(lt) {
                  return lt.maxTypeIndex + 1;
                }), {
                  type: "parent"
                })
              }), bd = new e.Struct({
                length: e.uint16,
                types: new e.Array(xd, function(lt) {
                  return lt.length + 1;
                })
              }), wd = new e.Struct({
                reserved: new e.Reserved(e.uint8, 24),
                typeList: new e.Pointer(e.uint16, bd),
                nameListOffset: new e.Pointer(e.uint16, "void")
              }), lf = new e.Struct({
                dataOffset: e.uint32,
                map: new e.Pointer(e.uint32, wd),
                dataLength: e.uint32,
                mapLength: e.uint32
              }), Ad = /* @__PURE__ */ function() {
                function lt(at) {
                  this.stream = at, this.header = lf.decode(this.stream);
                  for (var R = s(this.header.map.typeList.types), z; !(z = R()).done; ) {
                    for (var j = z.value, ft = s(j.refList), mt; !(mt = ft()).done; ) {
                      var pt = mt.value;
                      pt.nameOffset >= 0 ? (this.stream.pos = pt.nameOffset + this.header.map.nameListOffset, pt.name = md.decode(this.stream)) : pt.name = null;
                    }
                    j.name === "sfnt" && (this.sfnt = j);
                  }
                }
                lt.probe = function(R) {
                  var z = new e.DecodeStream(R);
                  try {
                    var j = lf.decode(z);
                  } catch (dt) {
                    return !1;
                  }
                  for (var ft = s(j.map.typeList.types), mt; !(mt = ft()).done; ) {
                    var pt = mt.value;
                    if (pt.name === "sfnt")
                      return !0;
                  }
                  return !1;
                };
                var X = lt.prototype;
                return X.getFont = function(R) {
                  if (!this.sfnt)
                    return null;
                  for (var z = s(this.sfnt.refList), j; !(j = z()).done; ) {
                    var ft = j.value, mt = this.header.dataOffset + ft.dataOffset + 4, pt = new e.DecodeStream(this.stream.buffer.slice(mt)), dt = new Ja(pt);
                    if (dt.postscriptName === R)
                      return dt;
                  }
                  return null;
                }, o(lt, [{
                  key: "fonts",
                  get: function() {
                    for (var R = [], z = s(this.sfnt.refList), j; !(j = z()).done; ) {
                      var ft = j.value, mt = this.header.dataOffset + ft.dataOffset + 4, pt = new e.DecodeStream(this.stream.buffer.slice(mt));
                      R.push(new Ja(pt));
                    }
                    return R;
                  }
                }]);
              }();
              I.registerFormat(Ja), I.registerFormat(id), I.registerFormat(ld), I.registerFormat(gd), I.registerFormat(Ad), f.exports = I;
            }
          ),
          /***/
          5417: (
            /***/
            function(f, d, t) {
              var i = t(59006), r = t(32504), n = t(84490), o = n.BK, h = n.CR, u = n.LF, l = n.NL, c = n.SG, s = n.WJ, v = n.SP, y = n.ZWJ, x = n.BA, e = n.HY, b = n.NS, A = n.AI, P = n.AL, D = n.CJ, E = n.HL, T = n.RI, C = n.SA, F = n.XX, m = t(5303), I = m.DI_BRK, O = m.IN_BRK, M = m.CI_BRK, N = m.CP_BRK;
              m.PR_BRK;
              var G = m.pairTable, ot = r.toByteArray("AAgOAAAAAACA3QAAAe0OEvHtnXuMXUUdx+d2d2/33r237V3YSoFC11r6IGgbRFBEfFF5KCVCMYKFaKn8AYqmwUeqECFabUGQipUiNCkgSRElUkKwJRWtwSpJrZpCI4E2NQqiBsFGwWL8Tu6Md3Z23o9zbund5JM5c+b1m9/85nnOuXtTHyFrwXpwL9gBngTPgj+Dv4H9Ae4B0N9PSAMcDqaB0X57urmIs8AQ72SEnQ4+ABaBxWAJWAquENJ9BtdfANeCleBGcCv4NvgeuBv8AGwCm8FWlpbzOPw7wC7wFNgDngMvgpfAq2DCACF10ACHgaPAzIF2+PFwT2Th1P8OuO8FZ4MPggvAxWAp+A6VHe5ysILFvx7u6oF2+Wvg3g7uYvlT+TbC/TH4CdgCtoGtfW3/E2An8++Gu5eleR7uP8B+8BoLf4LFH6i23Vp1rB5a1Q7TGMeCUYYY18RcxF0gxT8H5b3dIw8X3iPkdxauPwQWgyVgWbVT30/h+mrwZan8r8L/FcEWVsJ/E1grpKXcwdLdI9y/H9cPgUerbbun0PadCHcbjQd+D55mafcx9y9wXwKvCLJUJiLdRH09ef4xupqE/KeCY8Bx4M3gbeBdYCE4G3wYXASWgGXgSibTcuaugHs9WA3WgNvBBha2Ee4D4GFNPTYL9x/D9XaJXwnXvwW7wDPgTzQd2A9eAwODhDTBCJgOZoETwEngtEFmF3DPAouY/0K4Swb9dbaMpbkS7nKP9CsCyrpOSrNK8K9kNnYL7q0DGwbb/XnjoDv3gQfBZvBz8GvwO/AHdr3Pkv4F4fplj3J79OgRBx8HypajR48ePXr06NGjx8HFv7pABhX/HRx7HqKjr9Y+y6PXg7X2WRoPm1Kzpz8CcWaweLPhHt/fPq95C65PZnmfDnchOLfWPo/7OLgQ15ewdJ+E++na2PMhyudw72bDGc01CP8aWAm+Dr4BVoHV4IZeWC+sF9YL64UlD1sD1oE7au0z0zK5p1YuZde/R49uJnYdez/62EPgkVr4c7pHkfYXivTbcW8n2A32gOekOH+F/5/gAOivE9IArXpbrmlwR+vljz9bJrV552RCvgQ2GXgRzJ9CyGVTxofdLd17Gv6jW4RcAG5ote/9FO4B8NZhQs4DN4O9kOFY6OFSsB48C/qGCFkAyERCzh9q+0WuA2sqHX4m+Smv4t6RjXYelItwvQ7sBtOahHwU3NYcn+5Q4pFmRz89evTocajxStM898/FfLSgrg8/sT5+zcLDTkXY+6S0C+E/l907SXO+Rt/Lujrxe1kmztPU70JDvSmXILwJWS9TxLuC3VtuycPGCoV+VfD41yvKW6W4d1O9/S5YtZ+Qtbi+k/m/D/eHYBPzb4G7DfyS+enZ42/qnXPFp+pjZdgD/yX0XcV6+93DF+H+G5AhtcxPIs/BoY5cg0g7RRGXx/8Ewo8Y6vhp/Bnwz2F5zId7CgunZ6Dv1uTF0585pNY7P9NdhPCPDI1Ncyn8l4OrwHKwguVB12WrNPnpoPW5BWluA3eCuxRl3cfyfFCom43NBjkeQ9h2Tzlzs7PL5CmD3UwHew26+KMm7AVHu8hJaL1fTtj29L3E/wi6oPvWvkY7bAjucKOYtpymKWdGo/3e5KxGR8YTGvmfZ4XW46RGmnMIG6excs6Ae46nPuh7pGXbvm/fOB91vLhRXvkmlkKuK8BnFTb8xYL6TyqugbzXJZCZ9tlVrO9+C+53G5134A8G1htsjdbvXoT/KEBPmwq04dS2v6UxNnxbAXV5gul4Z6J+tMtBZtv4+Qzy2Ndof+fwPHP/zsbg/QFz02tIM4B9ZRO0mp379NxxBpgD5gv3T8H16eAMcCZYxMIWw/2YEG8pri9n/qvgfr45fm67VtjPzmbpVrJ7NzL3VrjvF/Jdh+sN3M/cB+A+LOV/bVNdX13b0G9KtmrSHCo8jvqfGjFu7WiWP37E8s2+yv8ZwVbYRgvMAm9kvMkhjStzAZbIBGIR+ngAy2NSZ9f0Hv2bIIShCckU5k5sb+OdGGQ0BKqSPzeE1WFCgWXK5dO2rDD/COn9zTvEUfXJ4zT3c9DP2oH2+ZoAtc9RBr/mY0SLdGyap+Nxh6W0In2Sn5C8/W00c/7dXn63we1DtAHud9WZbFNimmFL2iIoqt8eDPQHptERIkNoO8prFVvblm13OaG6oGM+n7P4/RrRz2HdTktotxHFdZW5tvm72UWEtm9dQF6n++hU1FmVFL++L2Nsdt3/1IVrWaacda4Se91t+pHDVXF5HFd9pG7X14NNyePr6wkfPTRI+H6qDPvLqRM5DR2beZ8W95Divq0IWXXyy/d18Yq09ZhyY/fyPjafY37yta8ybD9l3W15+crXYhQ5rsj2Wkb7iDadon1c+tKI4p5NR6HjPl/vqvLm92uK8lTjWNntkwJTu9hkiJmHVf3S1V5UOii6PWL1nVqOkP5QI/b2L2o+Kqr/h9i0bHNl9HudnKn0btKBbZzItQ7n47Drmutg6P+ubZK7/5va0PU8XZS56DP4Isci07gUo3/fscdlfMyp6xR6dy0vt/275K1bJ8qkHI99bdK3v4vt4Gtzs7sEWa5aZH4NDz3yfWG368bXLlQ6GZYQ7/UL1y3mryroZ+nkZwK28SD1vlt+7sNd+lcR3Ji1RKq1WcvhftFzousYxftH7Ngu2pZubcGfD8eMizp5Y/uha/m69NNK5siSOapkcq2lTOOGvE4y9aPclFl20eXTvwoZO374ymob90Jx3Zfk2h/I849q7VNE+WXsj+ZFlJ96Xcd1PyD4ue2J69/Q9V+u9uPrQC7/sHRftjE+n+eQP2Ztl5Kc+0TX/WND8vP2iF23xO7lfO3XtKfLhUm/PE6Ze78RD/3Fknr8i907yWsoUx+M3S+0SNjcHyu7qg6+aYvqF671TLXfTzU+2uaTnOOzbFc+7yHoZE59npIL175kay/ZxlKMH6a+NSJdl90XKXytpbMpTr/kP5zJfqxQDzneYWTstxh9pPPdYJ/CL8alTBag+fFvHFXtQMutWxBloOUMMHS6GWSyVYS4pvgmexXtVjc/TFWk9ZnnZLt3+caI10/8Xkb+hsYlfeh+QOyPNQN1S7hv2nqivEVSj/Ex+1lu73Ib1olbu4jpfN4ddbWbHN+/mcpWfUem+g7RhK4833SuepHbN0d5PjKF1kUll3xPFc5d+btTW9uqdCHXwaQ7kw252ENIW9vKTdEfTLox+VPYT6r8XXUWq7tYuXyZnEAG+ic+pwyVdRLDp8wcOp0kEZNXzLyqw3f+yEkjMI1sFznk8ulDKcoKlcFVlz75qPyu9+U8YuvnqnfXNDn6t6neNr3xfHj4JEU500ma8SSkjjodptBlTLurbI7rTxUnhcxF6d9W76KRbd6G3DdVNj2qia/qD3KY2O90elLJocpHJc90Q7kqVLqaLlGUjYj+Pg00jD8Xk+Wnf5UAN8c8HGrvXKYi+4irnsoo09ctU29Fll2UraSyaxnTOar8DFw+w60St+cRNlzfm9E9y9CNUTZM5/7iOTWR6imOgaKf/pn6hJw/f8dDdS6u0tNhDN1ZOlGUoauTrqyQNvCd21Mjy8N/T7AixBkQrm3tRKS0tngDwrWYzobuLFwXV3WfP5uR9TGTXdvc3BRVjq18l3rbwmaS8c9QByR4m3Sb/lPVX2V/M4naDkV79GFmJDad2NaLOdpBpxsbvs+/YubgVPO5bn3h+75BahnEOU/EVb+yTL7vQeTQp04GH/twfTYaCv9ehe8XXdZ0Ic+IY94Hcik/9h0Zk35c7MdWXo737HM/y6dllPENj9zeuvq7vMMYam88fZnfU7nOHznf6/AdP+W8ffXv2q6uelDlE1N/Wx+Prb/MG8ARBVJ0eb7rz5Tf6sl5l/G9nizDnJLJudZoaNqU/hbsCPH73dhu+03aWPiZhW9/yLHf8IGvT1OtzwZJ56yG/7YvX5sSdn+yof6x5av2ebxcV1dOZ9pDVgSXys/36uLzG1s5Nvj7pKo9axm2zsueylxeT1lWlQ4rkuuzx5f3+VXPPGIhgbLnKp/rtiJdcz2lOtMpAtMZV27E/kRttyaF83dFbf3NdYwXx6sZpH0uVkZ/VslmOrspa24V1+O56u3TdmXpQdaJy36wLPm4LZVR7jyp/CLOmULtzeWZoqstuLS9rhzTmqwIe3LVia0f2OSP3c/71Ec8V0itv6JtONbOXdb3Oc5YdcTaQVFzRWg7+z6HydnHy+qPoWO+j1yq8anofifWl7ri97chNiq/z6KyM37t8333sJR/SF/3bUvd+z+8nV3KNPWfIvt3mfNZijFAZT8xfXSekLfOtl3rHCuPzxrEdT7U9UvRjn3HKV5/XTuo2i3n+E3L5L+3yN+TkH+z07ZGDlkviuXLcX3aL7b+8m+duhCzJonp/yF9wabPItZhJmJ/N8pVfvn31Fok7PeiYsalFON4bPnyuOO7Ru2G+S52fqB5DAt55bJtXf2LtJdQParCVevHlqcufduvKJuQ5yxxvA/Zw6W0l5D3+nz7a4wdieXxd+FS2SjPN7Z9XXDRp62/dMv4GTM22uwx1/iTe7zTUSfjf1Mqld36EHv2xvPoprMnGfGvIiDHk+/x+EQTP7fMOjl928f0/855OTnaJ5XeQsevVHNojO5147ePXLH681mDqOBhqef/Ivp+7PMF1Vxs02kMITLK30zp/k+FbX1RdP/w1b2OMt9hiR1bKLHfZ+XWT+4+ahqzVM8iUug81r5tfTf3+JB6DPFpk1zllLUu9523cpPLdlR6zTVP+bShGFd1lh/Td33rVdT44WqTtjqktOtc87osc8x5hM9vyLrK49v+Pvmp7De0/vyvLJvk1C3+1OOyLyG/aSSud1L/TlLq/BoZ5M2xNj66IFRlT9fcT4GqDYosQ3df/G0zlR5U4UVzjAJZPpW8NlLI5lOejzwq+eS4rnWZbsjTx7ZUrq4sXdrQPmAa82Pb0HVuyZl3rrrZ7Nal/ULzdy0zBUXrMaQcU18v6ncmxd9eM/1fkdQ24Tvu+paZ2q5S6z13+anlTyVfrv4aWz/desfFfn3WEj727rNGKHJdlqsM1VompjzT+shXv7F75dj3J3K3qY7QM7DcZ2L/Aw=="), K = new i(ot), nt = function(Lt) {
                switch (Lt) {
                  case A:
                    return P;
                  case C:
                  case c:
                  case F:
                    return P;
                  case D:
                    return b;
                  default:
                    return Lt;
                }
              }, xt = function(Lt) {
                switch (Lt) {
                  case u:
                  case l:
                    return o;
                  case v:
                    return s;
                  default:
                    return Lt;
                }
              }, bt = function(Lt, jt) {
                jt === void 0 && (jt = !1), this.position = Lt, this.required = jt;
              }, St = /* @__PURE__ */ function() {
                function Dt(jt) {
                  this.string = jt, this.pos = 0, this.lastPos = 0, this.curClass = null, this.nextClass = null, this.LB8a = !1, this.LB21a = !1, this.LB30a = 0;
                }
                var Lt = Dt.prototype;
                return Lt.nextCodePoint = function() {
                  var J = this.string.charCodeAt(this.pos++), yt = this.string.charCodeAt(this.pos);
                  return 55296 <= J && J <= 56319 && 56320 <= yt && yt <= 57343 ? (this.pos++, (J - 55296) * 1024 + (yt - 56320) + 65536) : J;
                }, Lt.nextCharClass = function() {
                  return nt(K.get(this.nextCodePoint()));
                }, Lt.getSimpleBreak = function() {
                  switch (this.nextClass) {
                    case v:
                      return !1;
                    case o:
                    case u:
                    case l:
                      return this.curClass = o, !1;
                    case h:
                      return this.curClass = h, !1;
                  }
                  return null;
                }, Lt.getPairTableBreak = function(J) {
                  var yt = !1;
                  switch (G[this.curClass][this.nextClass]) {
                    case I:
                      yt = !0;
                      break;
                    case O:
                      yt = J === v;
                      break;
                    case M:
                      if (yt = J === v, !yt)
                        return yt = !1, yt;
                      break;
                    case N:
                      if (J !== v)
                        return yt;
                      break;
                  }
                  return this.LB8a && (yt = !1), this.LB21a && (this.curClass === e || this.curClass === x) ? (yt = !1, this.LB21a = !1) : this.LB21a = this.curClass === E, this.curClass === T ? (this.LB30a++, this.LB30a == 2 && this.nextClass === T && (yt = !0, this.LB30a = 0)) : this.LB30a = 0, this.curClass = this.nextClass, yt;
                }, Lt.nextBreak = function() {
                  if (this.curClass == null) {
                    var J = this.nextCharClass();
                    this.curClass = xt(J), this.nextClass = J, this.LB8a = J === y, this.LB30a = 0;
                  }
                  for (; this.pos < this.string.length; ) {
                    this.lastPos = this.pos;
                    var yt = this.nextClass;
                    if (this.nextClass = this.nextCharClass(), this.curClass === o || this.curClass === h && this.nextClass !== u)
                      return this.curClass = xt(nt(this.nextClass)), new bt(this.lastPos, !0);
                    var ut = this.getSimpleBreak();
                    if (ut === null && (ut = this.getPairTableBreak(yt)), this.LB8a = this.nextClass === y, ut)
                      return new bt(this.lastPos);
                  }
                  return this.lastPos < this.string.length ? (this.lastPos = this.string.length, new bt(this.string.length)) : null;
                }, Dt;
              }();
              f.exports = St;
            }
          ),
          /***/
          50477: (
            /***/
            function() {
            }
          ),
          /***/
          16403: (
            /***/
            function() {
            }
          ),
          /***/
          63779: (
            /***/
            function() {
            }
          ),
          /***/
          77199: (
            /***/
            function() {
            }
          ),
          /***/
          10821: (
            /***/
            function(f, d, t) {
              var i = t(10884), r = typeof globalThis == "undefined" ? t.g : globalThis;
              f.exports = function() {
                for (var o = [], h = 0; h < i.length; h++)
                  typeof r[i[h]] == "function" && (o[o.length] = i[h]);
                return o;
              };
            }
          ),
          /***/
          24766: (
            /***/
            function(f, d, t) {
              var i = t(32504), r = t(59006);
              function n(ut) {
                return ut && ut.__esModule ? ut.default : ut;
              }
              function o(ut) {
                Object.defineProperty(ut, "__esModule", { value: !0, configurable: !0 });
              }
              function h(ut, st, wt, V) {
                Object.defineProperty(ut, st, { get: wt, set: V, enumerable: !0, configurable: !0 });
              }
              o(f.exports), h(f.exports, "getCategory", () => O), h(f.exports, "getCombiningClass", () => M), h(f.exports, "getScript", () => N), h(f.exports, "getEastAsianWidth", () => G), h(f.exports, "getNumericValue", () => ot), h(f.exports, "isAlphabetic", () => K), h(f.exports, "isDigit", () => nt), h(f.exports, "isPunctuation", () => xt), h(f.exports, "isLowerCase", () => bt), h(f.exports, "isUpperCase", () => St), h(f.exports, "isTitleCase", () => Dt), h(f.exports, "isWhiteSpace", () => Lt), h(f.exports, "isBaseForm", () => jt), h(f.exports, "isMark", () => J), h(f.exports, "default", () => yt);
              var u = {};
              u = JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');
              const l = new (n(r))(n(i).toByteArray("AAARAAAAAADwfAEAZXl5ONRt+/5bPVFZimRfKoTQJNm37CGE7Iw0j3UsTWKsoyI7kwyyTiEUzSD7NiEzhWYijH0wMVkHE4Mx49fzfo+3nuP4/fdZjvv+XNd5n/d9nef1WZvmKhTxiZndzDQBSEYQqxqKwnsKvGQucFh+6t6cJ792ePQBZv5S9yXSwkyjf/P4T7mTNnIAv1dOVhMlR9lflbUL9JeJguqsjvG9NTj/wLb566VAURnLo2vvRi89S3gW/33ihh2eXpDn40BIW7REl/7coRKIhAFlAiOtbLDTt6mMb4GzMF1gNnvX/sBxtbsAIjfztCNcQjcNDtLThRvuXu5M5g/CBjaLBE4lJm4qy/oZD97+IJryApcXfgWYlkvWbhfXgujOJKVu8B+ozqTLbxyJ5kNiR75CxDqfBM9eOlDMmGeoZ0iQbbS5VUplIwI+ZNXEKQVJxlwqjhOY7w3XwPesbLK5JZE+Tt4X8q8km0dzInsPPzbscrjBMVjF5mOHSeRdJVgKUjLTHiHqXSPkep8N/zFk8167KLp75f6RndkvzdfB6Uz3MmqvRArzdCbs1/iRZjYPLLF3U8Qs+H+Rb8iK51a6NIV2V9+07uJsTGFWpPz8J++7iRu2B6eAKlK/kujrLthwaD/7a6J5w90TusnH1JMAc+gNrql4aspOUG/RrsxUKmPzhHgP4Bleru+6Vfc/MBjgXVx7who94nPn7MPFrnwQP7g0k0Dq0h2GSKO6fTZ8nLodN1SiOUj/5EL/Xo1DBvRm0wmrh3x6phcJ20/9CuMr5h8WPqXMSasLoLHoufTmE7mzYrs6B0dY7KjuCogKqsvxnxAwXWvd9Puc9PnE8DOHT2INHxRlIyVHrqZahtfV2E/A2PDdtA3ewlRHMtFIBKO/T4IozWTQZ+mb+gdKuk/ZHrqloucKdsOSJmlWTSntWjcxVMjUmroXLM10I6TwDLnBq4LP69TxgVeyGsd8yHvhF8ydPlrNRSNs9EP7WmeuSE7Lu10JbOuQcJw/63sDp68wB9iwP5AO+mBpV0R5VDDeyQUFCel1G+4KHBgEVFS0YK+m2sXLWLuGTlkVAd97WwKKdacjWElRCuDRauf33l/yVcDF6sVPKeTes99FC1NpNWcpieGSV/IbO8PCTy5pbUR1U8lxzf4T+y6fZMxOz3LshkQLeeDSd0WmUrQgajmbktrxsb2AZ0ACw2Vgni+gV/m+KvCRWLg08Clx7uhql+v9XySGcjjOHlsp8vBw/e8HS7dtiqF6T/XcSXuaMW66GF1g4q9YyBadHqy3Y5jin1c7yZos6BBr6dsomSHxiUHanYtcYQwnMMZhRhOnaYJeyJzaRuukyCUh48+e/BUvk/aEfDp8ag+jD64BHxNnQ5v/E7WRk7eLjGV13I3oqy45YNONi/1op1oDr7rPjkhPsTXgUpQtGDPlIs55KhQaic9kSGs/UrZ2QKQOflB8MTEQxRF9pullToWO7Eplan6mcMRFnUu2441yxi23x+KqKlr7RWWsi9ZXMWlr8vfP3llk1m2PRj0yudccxBuoa7VfIgRmnFPGX6Pm1WIfMm/Rm4n/xTn8IGqA0GWuqgu48pEUO0U9nN+ZdIvFpPb7VDPphIfRZxznlHeVFebkd9l+raXy9BpTMcIUIvBfgHEb6ndGo8VUkxpief14KjzFOcaANfgvFpvyY8lE8lE4raHizLpluPzMks1hx/e1Hok5yV0p7qQH7GaYeMzzZTFvRpv6k6iaJ4yNqzBvN8J7B430h2wFm1IBPcqbou33G7/NWPgopl4Mllla6e24L3TOTVNkza2zv3QKuDWTeDpClCEYgTQ+5vEBSQZs/rMF50+sm4jofTgWLqgX1x3TkrDEVaRqfY/xZizFZ3Y8/DFEFD31VSfBQ5raEB6nHnZh6ddehtclQJ8fBrldyIh99LNnV32HzKEej04hk6SYjdauCa4aYW0ru/QxvQRGzLKOAQszf3ixJypTW3WWL6BLSF2EMCMIw7OUvWBC6A/gDc2D1jvBapMCc7ztx6jYczwTKsRLL6dMNXb83HS8kdD0pTMMj161zbVHkU0mhSHo9SlBDDXdN6hDvRGizmohtIyR3ot8tF5iUG4GLNcXeGvBudSFrHu+bVZb9jirNVG+rQPI51A7Hu8/b0UeaIaZ4UgDO68PkYx3PE2HWpKapJ764Kxt5TFYpywMy4DLQqVRy11I7SOLhxUFmqiEK52NaijWArIfCg6qG8q5eSiwRCJb1R7GDJG74TrYgx/lVq7w9++Kh929xSJEaoSse5fUOQg9nMAnIZv+7fwVRcNv3gOHI46Vb5jYUC66PYHO6lS+TOmvEQjuYmx4RkffYGxqZIp/DPWNHAixbRBc+XKE3JEOgs4jIwu/dSAwhydruOGF39co91aTs85JJ3Z/LpXoF43hUwJsb/M1Chzdn8HX8vLXnqWUKvRhNLpfAF4PTFqva1sBQG0J+59HyYfmQ3oa4/sxZdapVLlo/fooxSXi/dOEQWIWq8E0FkttEyTFXR2aNMPINMIzZwCNEheYTVltsdaLkMyKoEUluPNAYCM2IG3br0DLy0fVNWKHtbSKbBjfiw7Lu06gQFalC7RC9BwRMSpLYDUo9pDtDfzwUiPJKLJ2LGcSphWBadOI/iJjNqUHV7ucG8yC6+iNM9QYElqBR7ECFXrcTgWQ3eG/tCWacT9bxIkfmxPmi3vOd36KxihAJA73vWNJ+Y9oapXNscVSVqS5g15xOWND/WuUCcA9YAAg6WFbjHamrblZ5c0L6Zx1X58ZittGcfDKU697QRSqW/g+RofNRyvrWMrBn44cPvkRe2HdTu/Cq01C5/riWPHZyXPKHuSDDdW8c1XPgd6ogvLh20qEIu8c19sqr4ufyHrwh37ZN5MkvY1dsGmEz9pUBTxWrvvhNyODyX2Q1k/fbX/T/vbHNcBrmjgDtvBdtZrVtiIg5iXQuzO/DEMvRX8Mi1zymSlt92BGILeKItjoShJXE/H7xwnf0Iewb8BFieJ9MflEBCQYEDm8eZniiEPfGoaYiiEdhQxHQNr2AuRdmbL9mcl18Kumh+HEZLp6z+j35ML9zTbUwahUZCyQQOgQrGfdfQtaR/OYJ/9dYXb2TWZFMijfCA8Nov4sa5FFDUe1T68h4q08WDE7JbbDiej4utRMR9ontevxlXv6LuJTXt1YEv8bDzEt683PuSsIN0afvu0rcBu9AbXZbkOG3K3AhtqQ28N23lXm7S3Yn6KXmAhBhz+GeorJJ4XxO/b3vZk2LXp42+QvsVxGSNVpfSctIFMTR1bD9t70i6sfNF3WKz/uKDEDCpzzztwhL45lsw89H2IpWN10sXHRlhDse9KCdpP5qNNpU84cTY+aiqswqR8XZ9ea0KbVRwRuOGQU3csAtV2fSbnq47U6es6rKlWLWhg3s/B9C9g+oTyp6RtIldR51OOkP5/6nSy6itUVPcMNOp4M/hDdKOz3uK6srbdxOrc2cJgr1Sg02oBxxSky6V7JaG+ziNwlfqnjnvh2/uq1lKfbp+qpwq/D/5OI5gkFl5CejKGxfc2YVJfGqc4E0x5e9PHK2ukbHNI7/RZV6LNe65apbTGjoCaQls0txPPbmQbCQn+/upCoXRZy9yzorWJvZ0KWcbXlBxU/d5I4ERUTxMuVWhSMmF677LNN7NnLwsmKawXkCgbrpcluOl0WChR1qhtSrxGXHu251dEItYhYX3snvn1gS2uXuzdTxCJjZtjsip0iT2sDC0qMS7Bk9su2NyXjFK5/f5ZoWwofg3DtTyjaFqspnOOTSh8xK/CKUFS57guVEkw9xoQuRCwwEO9Lu9z2vYxSa9NFV8DvSxv2C4WYLYF8Nrc4DzWkzNsk81JJOlZ/LYJrGCoj4MmZpnf3AXmzxT4rtl9jsqljEyedz468SGKdBiQzyz/qWKEhFg45ZczlZZ3KGL3l6sn+3TTa3zMVMhPa1obGp/z+fvY0QXTrJTf1XAT3EtQdUfYYlmWZyvPZ/6rWwU7UOQei7pVE0osgN94Iy+T1+omE6z4Rh2O20FjgBeK2y1mcoFiMDOJvuZPn5Moy9fmFH3wyfKvn4+TwfLvt/lHTTVnvrtoUWRBiQXhiNM8nE6ZoWeux/Z0b2unRcdUzdDpmL7CAgd1ToRXwgmHTZOgiGtVT+xr1QH9ObebRTT4NzL+XSpLuuWp62GqQvJVTPoZOeJCb6gIwd9XHMftQ+Kc08IKKdKQANSJ1a2gve3JdRhO0+tNiYzWAZfd7isoeBu67W7xuK8WX7nhJURld98Inb0t/dWOSau/kDvV4DJo/cImw9AO2Gvq0F2n0M7yIZKL8amMbjYld+qFls7hq8Acvq97K2PrCaomuUiesu7qNanGupEl6J/iem8lyr/NMnsTr6o41PO0yhQh3hPFN0wJP7S830je9iTBLzUNgYH+gUZpROo3rN2qgCI+6GewpX8w8CH+ro6QrWiStqmcMzVa3vEel+3/dDxMp0rDv1Q6wTMS3K64zTT6RWzK1y643im25Ja7X2ePCV2mTswd/4jshZPo4bLnerqIosq/hy2bKUAmVn9n4oun1+a0DIZ56UhVwmZHdUNpLa8gmPvxS1eNvCF1T0wo1wKPdCJi0qOrWz7oYRTzgTtkzEzZn308XSLwUog4OWGKJzCn/3FfF9iA32dZHSv30pRCM3KBY9WZoRhtdK/ChHk6DEQBsfV6tN2o1Cn0mLtPBfnkS+qy1L2xfFe9TQPtDE1Be44RTl82E9hPT2rS2+93LFbzhQQO3C/hD2jRFH3BWWbasAfuMhRJFcTri73eE835y016s22DjoFJ862WvLj69fu2TgSF3RHia9D5DSitlQAXYCnbdqjPkR287Lh6dCHDapos+eFDvcZPP2edPmTFxznJE/EBLoQQ0Qmn9EkZOyJmHxMbvKYb8o21ZHmv5YLqgsEPk9gWZwYQY9wLqGXuax/8QlV5qDaPbq9pLPT1yp+zOWKmraEy1OUJI7zdEcEmvBpbdwLrDCgEb2xX8S/nxZgjK4bRi+pbOmbh8bEeoPvU/L9ndx9kntlDALbdAvp0O8ZC3zSUnFg4cePsw7jxewWvL7HRSBLUn6J7vTH9uld5N76JFPgBCdXGF221oEJk++XfRwXplLSyrVO7HFWBEs99nTazKveW3HpbD4dH/YmdAl+lwbSt8BQWyTG7jAsACI7bPPUU9hI9XUHWqQOuezHzUjnx5Qqs6T1qNHfTTHleDtmqK7flA9a0gz2nycIpz1FHBuWxKNtUeTdqP29Fb3tv+tl5JyBqXoR+vCsdzZwZUhf6Lu8bvkB9yQP4x7GGegB0ym0Lpl03Q7e+C0cDsm9GSDepCDji7nUslLyYyluPfvLyKaDSX4xpR+nVYQjQQn5F8KbY1gbIVLiK1J3mW90zTyR1bqApX2BlWh7KG8LAY9/S9nWC0XXh9pZZo6xuir12T43rkaGfQssbQyIslA7uJnSHOV22NhlNtUo0czxPAsXhh8tIQYaTM4l/yAlZlydTcXhlG22Gs/n3BxKBd/3ZjYwg3NaUurVXhNB+afVnFfNr9TbC9ksNdvwpNfeHanyJ8M6GrIVfLlYAPv0ILe4dn0Z+BJSbJkN7eZY/c6+6ttDYcIDeUKIDXqUSE42Xdh5nRbuaObozjht0HJ5H1e+em+NJi/+8kQlyjCbJpPckwThZeIF9/u7lrVIKNeJLCN/TpPAeXxvd31/CUDWHK9MuP1V1TJgngzi4V0qzS3SW3Qy5UiGHqg02wQa5tsEl9s/X9nNMosgLlUgZSfCBj1DiypLfhr9/r0nR0XY2tmhDOcUS4E7cqa4EJBhzqvpbZa35Q5Iz5EqmhYiOGDAYk606Tv74+KGfPjKVuP15rIzgW0I7/niOu9el/sn2bRye0gV+GrePDRDMHjwO1lEdeXH8N+UTO3IoN18kpI3tPxz+fY+n2MGMSGFHAx/83tKeJOl+2i+f1O9v6FfEDBbqrw+lpM8Anav7zHNr7hE78nXUtPNodMbCnITWA7Ma/IHlZ50F9hWge/wzOvSbtqFVFtkS8Of2nssjZwbSFdU+VO8z6tCEc9UA9ACxT5zIUeSrkBB/v1krOpm7bVMrGxEKfI6LcnpB4D8bvn2hDKGqKrJaVAJuDaBEY3F7eXyqnFWlOoFV/8ZLspZiZd7orXLhd4mhHQgbuKbHjJWUzrnm0Dxw/LJLzXCkh7slMxKo8uxZIWZfdKHlfI7uj3LP6ARAuWdF7ZmZ7daOKqKGbz5LxOggTgS39oEioYmrqkCeUDvbxkBYKeHhcLmMN8dMF01ZMb32IpL/cH8R7VHQSI5I0YfL14g9d7P/6cjB1JXXxbozEDbsrPdmL8ph7QW10jio+v7YsqHKQ6xrBbOVtxU0/nFfzUGZwIBLwyUvg49ii+54nv9FyECBpURnQK4Ox6N7lw5fsjdd5l/2SwBcAHMJoyjO1Pifye2dagaOwCVMqdJWAo77pvBe0zdJcTWu5fdzPNfV2p1pc7/JKQ8zhKkwsOELUDhXygPJ5oR8Vpk2lsCen3D3QOQp2zdrSZHjVBstDF/wWO98rrkQ6/7zt/Drip7OHIug1lomNdmRaHRrjmqeodn22sesQQPgzimPOMqC60a5+i/UYh51uZm+ijWkkaI2xjrBO2558DZNZMiuDQlaVAvBy2wLn/bR3FrNzfnO/9oDztYqxZrr7JMIhqmrochbqmQnKowxW29bpqTaJu7kW1VotC72QkYX8OoDDdMDwV1kJRk3mufgJBzf+iwFRJ7XWQwO5ujVglgFgHtycWiMLx5N+6XU+TulLabWjOzoao03fniUW0xvIJNPbk7CQlFZd/RCOPvgQbLjh5ITE8NVJeKt3HGr6JTnFdIzcVOlEtwqbIIX0IM7saC+4N5047MTJ9+Wn11EhyEPIlwsHE5utCeXRjQzlrR+R1Cf/qDzcNbqLXdk3J7gQ39VUrrEkS/VMWjjg+t2oYrqB0tUZClcUF6+LBC3EQ7KnGIwm/qjZX4GKPtjTX1zQKV6nPAb2t/Rza5IqKRf8i2DFEhV/YSifX0YwsiF6TQnp48Gr65TFq0zUe6LGjiY7fq0LSGKL1VnC6ESI2yxvt3XqBx53B3gSlGFeJcPbUbonW1E9E9m4NfuwPh+t5QjRxX34lvBPVxwQd7aeTd+r9dw5CiP1pt8wMZoMdni7GapYdo6KPgeQKcmlFfq4UYhvV0IBgeiR3RnTMBaqDqpZrTRyLdsp4l0IXZTdErfH0sN3dqBG5vRIx3VgCYcHmmkqJ8Hyu3s9K9uBD1d8cZUEx3qYcF5vsqeRpF1GOg8emeWM2OmBlWPdZ6qAXwm3nENFyh+kvXk132PfWAlN0kb7yh4fz2T7VWUY/hEXX5DvxGABC03XRpyOG8t/u3Gh5tZdpsSV9AWaxJN7zwhVglgII1gV28tUViyqn4UMdIh5t+Ea2zo7PO48oba0TwQbiSZOH4YhD578kPF3reuaP7LujPMsjHmaDuId9XEaZBCJhbXJbRg5VCk3KJpryH/+8S3wdhR47pdFcmpZG2p0Bpjp/VbvalgIZMllYX5L31aMPdt1J7r/7wbixt0Mnz2ZvNGTARHPVD+2O1D8SGpWXlVnP2ekgon55YiinADDynyaXtZDXueVqbuTi8z8cHHK325pgqM+mWZwzHeEreMvhZopAScXM14SJHpGwZyRljMlDvcMm9FZ/1e9+r/puOnpXOtc9Iu2fmgBfEP9cGW1Fzb1rGlfJ08pACtq1ZW18bf2cevebzVeHbaA50G9qoUp39JWdPHbYkPCRXjt4gzlq3Cxge28Mky8MoS/+On72kc+ZI2xBtgJytpAQHQ1zrEddMIVyR5urX6yBNu8v5lKC8eLdGKTJtbgIZ3ZyTzSfWmx9f+cvcJe8yM39K/djkp2aUTE/9m2Lj5jg7b8vdRAer7DO3SyLNHs1CAm5x5iAdh2yGJYivArZbCBNY88Tw+w+C1Tbt7wK3zl2rzTHo/D8/gb3c3mYrnEIEipYqPUcdWjnTsSw471O3EUN7Gtg4NOAs9PJrxm03VuZKa5xwXAYCjt7Gs01Km6T2DhOYUMoFcCSu7Hk1p3yP1eG+M3v3Q5luAze6WwBnZIYO0TCucPWK+UJ36KoJ8Y+vpavhLO8g5ed704IjlQdfemrMu//EvPYXTQSGIPPfiagJS9nMqP5IvkxN9pvuJz7h8carPXTKMq8jnTeL0STan6dnLTAqwIswcIwWDR2KwbGddAVN8SYWRB7kfBfBRkSXzvHlIF8D6jo64kUzYk5o/n8oLjKqat0rdXvQ86MkwQGMnnlcasqPPT2+mVtUGb32KuH6cyZQenrRG11TArcAl27+nvOMBDe++EKHf4YdyGf7mznzOz33cFFGEcv329p4qG2hoaQ8ULiMyVz6ENcxhoqGnFIdupcn7GICQWuw3yO3W8S33mzCcMYJ8ywc7U7rmaQf/W5K63Gr4bVTpXOyOp4tbaPyIaatBNpXqlmQUTSZXjxPr19+73PSaT+QnI35YsWn6WpfJjRtK8vlJZoTSgjaRU39AGCkWOZtifJrnefCrqwTKDFmuWUCukEsYcRrMzCoit28wYpP7kSVjMD8WJYQiNc2blMjuqYegmf6SsfC1jqz8XzghMlOX+gn/MKZmgljszrmehEa4V98VreJDxYvHr3j7IeJB9/sBZV41BWT/AZAjuC5XorlIPnZgBAniBEhanp0/0+qZmEWDpu8ige1hUPIyTo6T6gDEcFhWSoduNh8YSu65KgMOGBw7VlNYzNIgwHtq9KP2yyTVysqX5v12sf7D+vQUdR2dRDvCV40rIInXSLWT/yrC6ExOQxBJwIDbeZcl3z1yR5Rj3l8IGpxspapnvBL+fwupA3b6fkFceID9wgiM1ILB0cHVdvo/R4xg8yqKXT8efl0GnGX1/27FUYeUW2L/GNRGGWVGp3i91oaJkb4rybENHre9a2P5viz/yqk8ngWUUS+Kv+fu+9BLFnfLiLXOFcIeBJLhnayCiuDRSqcx0Qu68gVsGYc6EHD500Fkt+gpDj6gvr884n8wZ5o6q7xtL5wA0beXQnffWYkZrs2NGIRgQbsc5NB302SVx+R4ROvmgZaR8wBcji128BMfJ9kcvJ4DC+bQ57kRmv5yxgU4ngZfn0/JNZ8JBwxjTqS+s9kjJFG1unGUGLwMiIuXUD9EFhNIJuyCEAmVZSIGKH4G6v1gRR1LyzQKH2ZqiI1DnHMoDEZspbDjTeaFIAbSvjSq3A+n46y9hhVM8wIpnARSXyzmOD96d9UXvFroSPgGw1dq2vdEqDq9fJN1EbL2WulNmHkFDvxSO9ZT/RX/Bw2gA/BrF90XrJACereVfbV/YXaKfp77Nmx5NjEIUlxojsy7iN7nBHSZigfsbFyVOX1ZTeCCxvqnRSExP4lk5ZeYlRu9caaa743TWNdchRIhEWwadsBIe245C8clpaZ4zrPsk+OwXzxWCvRRumyNSLW5KWaSJyJU95cwheK76gr7228spZ3hmTtLyrfM2QRFqZFMR8/Q6yWfVgwTdfX2Ry4w3+eAO/5VT5nFb5NlzXPvBEAWrNZ6Q3jbH0RF4vcbp+fDngf/ywpoyNQtjrfvcq93AVb1RDWRghvyqgI2BkMr1rwYi8gizZ0G9GmPpMeqPerAQ0dJbzx+KAFM4IBq6iSLpZHUroeyfd9o5o+4fR2EtsZBoJORQEA4SW0CmeXSnblx2e9QkCHIodyqV6+g5ETEpZsLqnd/Na60EKPX/tQpPEcO+COIBPcQdszDzSiHGyQFPly/7KciUh1u+mFfxTCHGv9nn2WqndGgeGjQ/kr02qmTBX7Hc1qiEvgiSz1Tz/sy7Es29wvn6FrDGPP7asXlhOaiHxOctPvTptFA1kHFUk8bME7SsTSnGbFbUrssxrq70LhoSh5OwvQna+w84XdXhZb2sloJ4ZsCg3j+PrjJL08/JBi5zGd6ud/ZxhmcGKLOXPcNunQq5ESW92iJvfsuRrNYtawWwSmNhPYoFj2QqWNF0ffLpGt/ad24RJ8vkb5sXkpyKXmvFG5Vcdzf/44k3PBL/ojJ52+kWGzOArnyp5f969oV3J2c4Li27Nkova9VwRNVKqN0V+gV+mTHitgkXV30aWd3A1RSildEleiNPA+5cp+3+T7X+xfHiRZXQ1s4FA9TxIcnveQs9JSZ5r5qNmgqlW4zMtZ6rYNvgmyVcywKtu8ZxnSbS5vXlBV+NXdIfi3+xzrnJ0TkFL+Un8v1PWOC2PPFCjVPq7qTH7mOpzOYj/b4h0ceT+eHgr97Jqhb1ziVfeANzfN8bFUhPKBi7hJBCukQnB0aGjFTYLJPXL26lQ2b80xrOD5cFWgA8hz3St0e69kwNnD3+nX3gy12FjrjO+ddRvvvfyV3SWbXcxqNHfmsb9u1TV+wHTb9B07/L2sB8WUHJ9eeNomDyysEWZ0deqEhH/oWI2oiEh526gvAK1Nx2kIhNvkYR+tPYHEa9j+nd1VBpQP1uzSjIDO+fDDB7uy029rRjDC5Sk6aKczyz1D5uA9Lu+Rrrapl8JXNL3VRllNQH2K1ZFxOpX8LprttfqQ56MbPM0IttUheXWD/mROOeFqGUbL+kUOVlXLTFX/525g4faLEFO4qWWdmOXMNvVjpIVTWt650HfQjX9oT3Dg5Au6+v1/Ci78La6ZOngYCFPT1AUwxQuZ0yt5xKdNXLaDTISMTeCj16XTryhM36K2mfGRIgot71voWs8tTpL/f1rvcwv3LSDf+/G8THCT7NpfHWcW+lsF/ol8q9Bi6MezNTqp0rpp/kJRiVfNrX/w27cRRTu8RIIqtUblBMkxy4jwAVqCjUJkiPBj2cAoVloG8B2/N5deLdMhDb7xs5nhd3dubJhuj8WbaFRyu1L678DHhhA+rMimNo4C1kGpp0tD/qnCfCFHejpf0LJX43OTr578PY0tnIIrlWyNYyuR/ie6j2xNb1OV6u0dOX/1Dtcd7+ya9W+rY2LmnyQMtk8SMLTon8RAdwOaN2tNg5zVnDKlmVeOxPV2vhHIo9QEPV7jc3f+zVDquiNg1OaHX3cZXJDRY5MJpo+VanAcmqp4oasYLG+wrXUL5vJU0kqk2hGEskhP+Jjigrz1l6QnEwp6n8PMVeJp70Ii6ppeaK9GhF6fJE00ceLyxv08tKiPat4QdxZFgSbQknnEiCLD8Qc1rjazVKM3r3gXnnMeONgdz/yFV1q+haaN+wnF3Fn4uYCI9XsKOuVwDD0LsCO/f0gj5cmxCFcr7sclIcefWjvore+3aSU474cyqDVxH7w1RX3CHsaqsMRX17ZLgjsDXws3kLm2XJdM3Ku383UXqaHqsywzPhx7NFir0Fqjym/w6cxD2U9ypa3dx7Z12w/fi3Jps8sqJ8f8Ah8aZAvkHXvIRyrsxK7rrFaNNdNvjI8+3Emri195DCNa858anj2Qdny6Czshkn4N2+1m+k5S8sunX3Ja7I+JutRzg1mc2e9Yc0Zv9PZn1SwhxIdU9sXwZRTd/J5FoUm0e+PYREeHg3oc2YYzGf2xfJxXExt4pT3RfDRHvMXLUmoXOy63xv5pLuhOEax0dRgSywZ/GH+YBXFgCeTU0hZ8SPEFsn8punp1Kurd1KgXxUZ+la3R5+4ePGR4ZF5UQtOa83+Vj8zh80dfzbhxWCeoJnQ4dkZJM4drzknZOOKx2n3WrvJnzFIS8p0xeic+M3ZRVXIp10tV2DyYKwRxLzulPwzHcLlYTxl4PF7v8l106Azr+6wBFejbq/3P72C/0j78cepY9990/d4eAurn2lqdGKLU8FffnMw7cY7pVeXJRMU73Oxwi2g2vh/+4gX8dvbjfojn/eLVhhYl8GthwCQ50KcZq4z2JeW5eeOnJWFQEnVxDoG459TaC4zXybECEoJ0V5q1tXrQbDMtUxeTV6Pdt1/zJuc7TJoV/9YZFWxUtCf6Ou3Vd/vR/vG0138hJQrHkNeoep5dLe+6umcSquKvMaFpm3EZHDBOvCi0XYyIFHMgX7Cqp3JVXlxJFwQfHSaIUEbI2u1lBVUdlNw4Qa9UsLPEK94Qiln3pyKxQVCeNlx8yd7EegVNQBkFLabKvnietYVB4IPZ1fSor82arbgYec8aSdFMaIluYTYuNx32SxfrjKUdPGq+UNp5YpydoEG3xVLixtmHO9zXxKAnHnPuH2fPGrjx0GcuCDEU+yXUtXh6nfUL+cykws1gJ5vkfYFaFBr9PdCXvVf35OJQxzUMmWjv0W6uGJK11uAGDqSpOwCf6rouSIjPVgw57cJCOQ4b9tkI/Y5WNon9Swe72aZryKo8d+HyHBEdWJKrkary0LIGczA4Irq353Wc0Zga3om7UQiAGCvIl8GGyaqz5zH+1gMP5phWUCpKtttWIyicz09vXg76GxkmiGSMQ06Z9X8BUwqOtauDbPIf4rpK/yYoeAHxJ9soXS9VDe1Aw+awOOxaN8foLrif0TXBvQ55dtRtulRq9emFDBxlQcqKCaD8NeTSE7FOHvcjf/+oKbbtRqz9gbofoc2EzQ3pL6W5JdfJzAWmOk8oeoECe90lVMruwl/ltM015P/zIPazqvdvFmLNVHMIZrwiQ2tIKtGh6PDVH+85ew3caqVt2BsDv5rOcu3G9srQWd7NmgtzCRUXLYknYRSwtH9oUtkqyN3CfP20xQ1faXQl4MEmjQehWR6GmGnkdpYNQYeIG408yAX7uCZmYUic9juOfb+Re28+OVOB+scYK4DaPcBe+5wmji9gymtkMpKo4UKqCz7yxzuN8VIlx9yNozpRJpNaWHtaZVEqP45n2JemTlYBSmNIK1FuSYAUQ1yBLnKxevrjayd+h2i8PjdB3YY6b0nr3JuOXGpPMyh4V2dslpR3DFEvgpsBLqhqLDOWP4yEvIL6f21PpA7/8B")), c = Math.log2 || ((ut) => Math.log(ut) / Math.LN2), s = (ut) => c(ut) + 1 | 0, v = s((/* @__PURE__ */ n(u)).categories.length - 1), y = s((/* @__PURE__ */ n(u)).combiningClasses.length - 1), x = s((/* @__PURE__ */ n(u)).scripts.length - 1), e = s((/* @__PURE__ */ n(u)).eaw.length - 1), b = 10, A = y + x + e + b, P = x + e + b, D = e + b, E = b, T = (1 << v) - 1, C = (1 << y) - 1, F = (1 << x) - 1, m = (1 << e) - 1, I = (1 << b) - 1;
              function O(ut) {
                const st = l.get(ut);
                return (/* @__PURE__ */ n(u)).categories[st >> A & T];
              }
              function M(ut) {
                const st = l.get(ut);
                return (/* @__PURE__ */ n(u)).combiningClasses[st >> P & C];
              }
              function N(ut) {
                const st = l.get(ut);
                return (/* @__PURE__ */ n(u)).scripts[st >> D & F];
              }
              function G(ut) {
                const st = l.get(ut);
                return (/* @__PURE__ */ n(u)).eaw[st >> E & m];
              }
              function ot(ut) {
                let st = l.get(ut), wt = st & I;
                if (wt === 0)
                  return null;
                if (wt <= 50)
                  return wt - 1;
                if (wt < 480) {
                  const V = (wt >> 4) - 12, Ft = (wt & 15) + 1;
                  return V / Ft;
                } else if (wt < 768) {
                  st = (wt >> 5) - 14;
                  let V = (wt & 31) + 2;
                  for (; V > 0; )
                    st *= 10, V--;
                  return st;
                } else {
                  st = (wt >> 2) - 191;
                  let V = (wt & 3) + 1;
                  for (; V > 0; )
                    st *= 60, V--;
                  return st;
                }
              }
              function K(ut) {
                const st = O(ut);
                return st === "Lu" || st === "Ll" || st === "Lt" || st === "Lm" || st === "Lo" || st === "Nl";
              }
              function nt(ut) {
                return O(ut) === "Nd";
              }
              function xt(ut) {
                const st = O(ut);
                return st === "Pc" || st === "Pd" || st === "Pe" || st === "Pf" || st === "Pi" || st === "Po" || st === "Ps";
              }
              function bt(ut) {
                return O(ut) === "Ll";
              }
              function St(ut) {
                return O(ut) === "Lu";
              }
              function Dt(ut) {
                return O(ut) === "Lt";
              }
              function Lt(ut) {
                const st = O(ut);
                return st === "Zs" || st === "Zl" || st === "Zp";
              }
              function jt(ut) {
                const st = O(ut);
                return st === "Nd" || st === "No" || st === "Nl" || st === "Lu" || st === "Ll" || st === "Lt" || st === "Lm" || st === "Lo" || st === "Me" || st === "Mc";
              }
              function J(ut) {
                const st = O(ut);
                return st === "Mn" || st === "Me" || st === "Mc";
              }
              var yt = {
                getCategory: O,
                getCombiningClass: M,
                getScript: N,
                getEastAsianWidth: G,
                getNumericValue: ot,
                isAlphabetic: K,
                isDigit: nt,
                isPunctuation: xt,
                isLowerCase: bt,
                isUpperCase: St,
                isTitleCase: Dt,
                isWhiteSpace: Lt,
                isBaseForm: jt,
                isMark: J
              };
            }
          ),
          /***/
          43267: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('[["8740","ä°ä°²ää¦ä¸ð§§äµ·ä³ð§²±ä³¢ð§³ã®ä¶ää±ä±ð¤¿ð£ð§ð¦ºð§ä±ðªäää²ð§±¬ä´äª¤ä¡ð¦¬£ç¥ð¥©ð¡©£ð£¸ð£½¡æå»"],["8767","ç¶å¤ð¨®¹ã·´é´ð§¯¯å¯ð¡µåª¤ã¥ð©º°å«å®·å³¼æ®èð©¥ç¡çã¡µð¡µð£ð¦¡ã»¬"],["87a1","ð¥£ã«µç«¼é¾ð¤¡ð¨¤ð£ªð ªð£äèé¾é¯ä¤°èå¢ééç§ç¨²æ æ¨©è¢çç¯æç¨¬åéã¦çð¥¶¹çé¿å³ä¤¯åä±ð£å ç©²ð§­¥è®ä®ð¦ºäð¥¶ç®®ð¢¼é¿ð¢ð¢ð¢é¿èð£»ä´é¿ä¡ðª·¿æç®é¿"],["8840","ã",4,"ð ãð ð ããð ð¡¿¨ãð ããããð ããÄÃÇÃÄÃÄÃÅÃÇÃà¿¿ÃÌáº¾à¿¿ÃÌá»ÃÄÃ¡ÇÃ ÉÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇ"],["88a1","ÇÃ¼à¿¿ÃªÌáº¿à¿¿ÃªÌá»ÃªÉ¡ââ"],["8940","ðª©ð¡"],["8943","æ"],["8946","ä¸½æ»éµé"],["894c","ð§µæä¼ä¼¨ä¾¨åå´åå¤å¡å¨å»åååå¢å£°å¤å¤å¤²å¤´å­¦å®å®å²åºæ»ææ¾æ æ¡¥æµç¼çµçº¤çº¬çººç»ç»ç»ç¼ç¼·èºèè¯è§è®¾è¯¢è½¦è½§è½®"],["89a1","çç³¼ç·æ¥ç«å§"],["89ab","éç¢¸éè¼"],["89b0","è´è¶ð §§"],["89b5","èé»ä³é·é¸ä°¾ð©·¶ð§é¸ðª³ã"],["89c1","æºè¾ç"],["89c5","ä¤é©¬éªé¾ç¦ð¨¬ð¡·ð ð¢«¦ä¸¤äºäºäºäº¿ä»«ä¼·ãä¾½ã¹ååã½ãã¥åå¤åå¼åäºå¹åå§ãå©ãå°ãåå£ã­ã²ãåå£å´å¹åå¯åå£å¨ãå¿ã¥ã¿åã"],["8a40","ð§¶å¥"],["8a43","ð ±ð ´ð¥«åð¢³ã§¬ð è¹ð¤¶¸ð©¥äð¨¾çºð¢°¸ã¨´äð¨ð¦§²ð¤·ªæð µ¼ð ¾´ð ³ð¡´æè¹¾ð ºð °ð ½¤ð¢²©ð¨ð¤"],["8a64","ð µð©©ð¨©ä´ð¤º§ð¢³éª²ã©§ð©´ã¿­ãð¥ð©ð§£ð¢µéµ®é "],["8a76","äð¦¥æ´å£ð¢µð¢¯ð¡·ã§»ð¡¯"],["8aa1","ð¦ð¦ð§¦ æªð¥ð ±è¹¨ð¢¡ð¨­ð ±"],["8aac","ä ð ©ã¿ºå¡³ð¢¶"],["8ab2","ð¤ð ¼ð¦ð ½ð ¶å¹ä»äº"],["8abb","äª´ð¢©¦ð¡èªé£µð ¶æ¹ã§¾ð¢µè·å¡æ¼ã¹"],["8ac9","ðªð ¸ð¢«ð¢³"],["8ace","ð¡ð£§ã¦ã¨ð¨ã¸ð¥¹ð¢åð ¼±ð¢²²ð© ã¼æ°½ð¤¸»"],["8adf","ð§´ð¢ºð¢ðªð¨³ð ¹ºð °´ð¦ ç¾ð¡ð¢ ð¢¤¹ã»ð¥£ð ºð ¾ð ºªã¾ð ¼°ð µð¡ð ¹"],["8af6","ð º«ð ®©ð µð¡ð¡½ã¿¹ð¢æ²ð ¾­"],["8b40","ð£´ð§¹ð¢¯ð µ¾ð µ¿ð¢±ð¢±ã¨ð ºð¡ð ¼®ðª²ð¦­ð¨³ð¨¶ð¨³éªåèå¹"],["8b55","ð©»é°¦éª¶ð§ð¢·®çè­è¬å°ð¦²è´ãåð¨½é¶ð »ºð ¸ð ¹·ð »»ãð¤·«ãð ³å¯ð¢µð¡ð ¸ð ¹¸ð¡¸ð¡ð¨ð¡ð ¹¹ð¤¹ð¢¶¤å©ð¡ð¡ð¡µð¡¶åð ¸"],["8ba1","ð§ð¨ð ¾µð ¹»ð¥¾ãð ¾¶ð¡ð¥ðª½ð¤§ð¡ ºð¤·ð¨¼å¢å¨ãð¥½ç®²å­¨ä ä¬¬é¼§ä§§é°é®ð¥­´ð£½å»ã²åä¸¨å¤ð¡¯ð¯¡¸éð ä¹äº»ã¾å°£å½å¿ã£ºææµæ­ºæ°µæ°ºç¬ç«ä¸¬ç­ð¤£©ç½ç¤»ç³¹ç½ð¦ªã"],["8bde","ð¦èèð¦ð¦¥åè¡¤è§ð§¢²è® è´éé¸é¿é¨ð¨¸é¦é¡µé£é£é¥£ð© é±¼é¸é»æ­¯ï¤ä¸·ð éæ·é¢"],["8c40","å»æ·¾ð©±³é¾¦ã·è¢ð¤ç·å³µä¬ ð¥ãð¥´°æ¢ð¨¨²è¾§é¶çæçºð£ðªã²ð¡¦ä¬ç£¤çå®ð¨äæ©£ðªºä£èð ©¯ç¨ªð©¥ð¨«ªéçå¤ð¢¾é´çð¨§£é¾§çäº£ä¿°å¼ä¸¯ä¼é¾¨å´ç¶å¢å£ð¡¶¶åºåºå¿ð¢æ"],["8ca1","ð£¹æ¤æ©ð£±£æ³¿"],["8ca7","çð¤çã»ð¤¨å¬ç¹è®ð¥²¤ð¥çªç¯¬ç³ç¹¬è¸èé¾©è¢é¾ªèº¹é¾«è¿èé§ é¡é¾¬ð¨¶¹ð¡¿ä±ä¢å¨"],["8cc9","é¡¨æ«ä¶å½"],["8cce","èð¤¥»è¿ð§ä²ð¦µ´åµ»ð¦¬ð¦¾¾é¾­é¾®å®é¾¯æ§ç¹æ¹ç§ã¶äð£ð¢ää¶"],["8ce6","å³ð£¬è«¹å±¸ã´ð£åµ¸é¾²çäð¤¬ð¡¸£ä±·ã¥¸ãð ¤ð¦±è«ä¾´ð ¹å¦¿è¬é¡ð©£ºå¼»"],["8d40","ð ®"],["8d42","ð¢ð¨¥­ää»ð©¹ã¼é¾³ðªµä¸ãä·ð¦±ä¼ð¨²ð§¿ä­ã£ð¥ä¡ää¶ä±»äµ¶äªã¿ð¤¬ã¡ää½ä­å´¾åµåµã·¼ã å¶¤å¶¹ã  ã ¸å¹åº½å¼¥å¾ã¤ã¤ã¤¿ã¥ææ½å³¥ã¦æ·æ¹æã¦¸æ¬ææ¥æã§¸å±"],["8da1","ã¨æ¢æ»ææã©æå´å¡é¾ãªæãª½æ¿æã«²æã¬¢æã­æ¤æ ã­æ¡æ¢ã­²ã­±ã­»æ¤æ¥çæ¥¤æ¦æ¦ã®¼æ§ã¯æ©¥æ©´æ©±æªã¯¬æªã¯²æª«æªµæ«æ«¶æ®æ¯æ¯ªæ±µæ²ªã³æ´æ´æ´¦æ¶ã³¯æ¶¤æ¶±æ¸æ¸æ¸©æºð¨§æº»æ»¢æ»é½¿æ»¨æ»©æ¼¤æ¼´ãµð£½æ¾æ¾¾ãµªãµµç·å²ã¶ç¬ã¶ççç¯ç¿çð ¥äã±ð »"],["8e40","ð£»å¾ð¦»ç¾ð¥ ãæ¦¢ð¨¯©å­´ç©ð¥£¡ð©ç©¥ç©½ð¥¦¬çª»çª°ç«ç«çð¦äç«ç«ç«ªä¯å²ð¥°ç¬ç­ç¬©ð¥ð¥³¾ç®¢ç­¯èð¥®´ð¦±¿ç¯è¡ç®ç®¸ð¥´ ã¶­ð¥±¥èç¯ºç°ç°µð¥³ç±ç²ð¤¢ç²¦æ½ð¤¸ç³ç³ç³¦ç±´ç³³ç³µç³"],["8ea1","ç¹§äð¦¹çµð¦»çç¶ç¶«çµç¶³ç·ð¤ð¦©ç·¤ã´ç·µð¡¹ç·¥ð¨­ç¸ð¦¡ð¦ç¹®çºä«é¬ç¸§ç½ç½ç½ç¤¶ð¦é§¡ç¾ð¦ç¾£ð¡¡ð ¨äð£¦äð¨ºç¿ºð¦èèèè¨è¯ðªð¦³è»è¼è¡ð¢ä¦ð¦¦ð£·£ð¦¨æ¥è§ð¨©èèå¢°ð¢¶æ±¿ð¦ð¤¾¸æ§ð¡èð¡¡æ©ð¤©¥ð¤ªäºè©ð ¬ð¦©ð£µ¾ä¿¹ð¡½è¢è¢ð¦¬ð¤¦§ð£°ð¡³ð£·¸èªæ¤ð¯¦ä"],["8f40","èèèð ¸ð¡´ãð£½ð£è»è¢èð£ºð¦¶£ð¦¬ð¦®ð£ã¶¿èå¬èäð¦¶¥è¬èèã¾ð¦»æ©èãð¦¹ð¢»¯èð¥¯¤è±ã·ä¤æª§èð£²µç¥è¨ð¦®ð¦¹·ð¦¹èèèä èè¤ð¥²äð¥³äè´å«²ð¦ºä§è³äæ¿è"],["8fa1","ð¨¥ð¨»èð§èð¡ð§ð¯¦²äªè¨ãð¡¢¢å·ð§è¾è±ðª¸è®ð¢°§è±èè å¡è¬æ¡äè¡è¡ð§ ð£¶¹ð§¤è¡è¢äè¢´è¢µæè£ç·ð§è¦è¦è¦¦è¦©è¦§è¦¼ð¨¨¥è§§ð§¤¤ð§ª½èªçé¾èªð§©ç«©ð§¬ºð£¾äð§¬¸ç¼è¬è¬ð¥°ð¥¥è¬¿è­è­èª©ð¤©ºè®è®èª¯ð¡äè¡è²ð§µð§¶ð¯§ã¥ð§µè³ð§¶ð§¶½è´è´ð¡¤è³çè´ð¤³ã»èµ·"],["9040","è¶©ð¨ð¡ð¤¦ã­¼ð¨¼ð§ç«§èº­èº¶è»éè¼è¼­ð¨¥ð¨è¾¥éðªð ©è¾³ä¤ªð¨§ð¨½ð£¶»å»¸ð£¢è¿¹ðªð¨¼ð¨ð¢¥ã¦ð¦»é·ð¨¼ð§ª¾é¡ð¨¬ð¨é¨ð¨éð¨¦é®é½é§ã«°é©éç²¬ð¨¤³ð¡ºéæ²éé¢ð¥¹é¹ð¨«ð£²ð¨¬ð¥"],["90a1","ð ´±é¬é«ð¨«¡ð¨¯«çå«ð¨«¢ð¨«¥ä¥¥éð¨¯¬ð¨°¹ð¨¯¿é³éèº¼éé¦é¦é æ¿¶ä¹ð¢ºð¨ð¡¼ð£¸®ä§æ°é»éä¬é£ð¦»æé¶ç£µð¨« é½åä¦¡ð¦²¸ð ´ð¦ð©¯ð©¥ð¤«ð¡¤ð£é±èé¶ä¨ä½äð¤«©çµå­ééð©éå­ð©«éé¥åð£·ð£¼ééé±é¾ééé ð¥¬é®çð©³é¿éµð©ð§¥ºä«é ´é ³é¡é¡¦ã¬ð§µãµð °ð¤"],["9140","ð¥é£é¢·é£é£ä«¿ð¦´§ð¡å°é£¡é£¦é£¬é¸é¤¹ð¤¨©ä­²ð©¡ð©¤é§µé¨é¨»é¨é©ð¥¥ãð©±ð©¯é« é«¢ð©¬é«´ä°é¬é¬­ð¨å´é¬´ð¦¦¨ã£ð£½é­é­ð©´¾å©ð¡¡£é®ð¤é°é¯¿é°ð©¹¨é·ð©¾·ðªðª«ðª¡ðª£ðªéµ¾é¶ðª´é¸æ¢"],["91a1","é·ð¢ðªðª ð¡¤»ðª³é´¹ðª¹ðª´éºéºéºéº¢ä´´éºªéº¯ð¤¤é»ã­ ã§¥ã´ä¼²ã¾ð¨°«é¼é¼ä®é¤ð¦¶¢é¼é¼é¼¹ååé½é¦¸ð©é²è¿é½¢é½©ç«é¾çä®¾ð¤¥µð¤¦»ç·ð¤§¸ð¤ð¤©çð¨¯ð¡£ºç¦ð¨¥¾ð¨¸¶é©é³ð¨©é¬ééð¨¥¬ð¤¹çã»«ç²ç©çð¤³ð¤¸ç¾ð¡¯ç£ð¡¢¾ð£ã»ð¡¢ð¥¯ð¡¸ã¢ð¡»ð¡ ¹ã¡ð¡´ð¡£ð¥½ã£ð¡åð¤¨¥ð¡¾ð¡¨"],["9240","ð¡ð¡¶èð£¦èèð¤¦ð§¥ð£¸±ð¥ð£»»ð§ä´ð£®ð©¦ð¦¼¦æ¹ã³ã°ã·§å¡¬ð¡¤¢æ äð£¿ð¤¡ð¤ð¤ð¦°¡ååð¦±åð ¿ð ®¨ð ¸éð¨¬éä»¸å«ã ð¤¶äº¼ð ¥ð ¿ä½ä¾ð¥å©¨ð «ð ã¦ð ð ãµä¼©ð ð¨º³ð µè«ð äº"],["92a1","ååä¾¢ä¼ð¤¨ð£ºä½å®å¬åä¿ä¿¥åå¼ååååæ¹¶ð£ð£¸¹ð£º¿æµ²ð¡¢ð£ºå¨åð  äð £ð ð èµºð¨ªð åå¤ð ¡³å¡é®äºçð¤ð ° ð¤¦¬ð¡¤æ§ð ¸ç¹ã»ççççä®ð¤ª¼ð¤åãçð¤å´ð åð ¯åéé´é¦ååå¿ã¾å£åªð¨©ð¡ºð¡¯ð¡å¨¬å¦¸éå©¾å«å¨ð¥¥ð¡§³ð¡¡¡ð¤ãµæ´çå¨¡ð¥º"],["9340","åªð¨¯ð é çð¡çä¥²éð¨§»é½ã å°å²å¹å¹ð¡¦ð¡¥¼ð£«®å»å­ð¡¤ð¡¤ãð¡¢ ãð¡¾ãèªð¨©ð¡¶ºð£²ð¨¦¨å¼å¼ð¡¤§ð¡«å©«ð¡»å­èð§½è¡ æ¾ð¢¡ ð¢«å¿ãº¸ð¢¯ð¢¾ð©ð¦½³æð ¾ð ð¢æææµð¢²ð¢´ð¤ð©"],["93a1","æ±ð¤¥ð¢­ªã¨©ð¢¬¢ð£ð©£ªð¢¹¸æ·ðªæ¶æ±æð¤§£ð¢µ§æ¤ð¢²¡æ»æ«æ¥²ã¯´ð£ð£­ð¤¦ð£«åð£ ð¡£ð©¿æð£ð£³ã« äð¥ð¨¬¢ð¥ð¡¼ð¥ð¥¥ç£®ð£ð¡ ªð£´ã¤ð£ð£ð¤æð¦´¤æ«ä®æ°ð§¡°ð¡·«æ£ð£ð£¡æð¥¡²ã£ð£ ºð£¼ã®ð£¢ð£¾çã®æð¤ªæ¢¶æ ã¯æª¾ã¡£ð£ð¤æ¨³æ©æ«æ¬ð¡¤ææ¢æ©ã¯æ©ºæ­ð£¿ð£²é é²ð¨¯ªð¨«"],["9440","éð¨ð¨§é§æ¶¥æ¼ð¤§¬æµ§ð£½¿ã¶æ¸ð¤¼å¨½æ¸å¡æ´¤ç¡ç»ð¤ð¤¶ç±çççð¤ð¤¥å¹ð¤ª¤ð «çºð£»¸ð£ð¤©ð¤¤ð¥¿¡ã¼ãº±ð¤«ð¨°£ð£¼µæ§ã»³çç¼éç·äð¦·ªäçã½£ð¤³ð¤´ã½çç³ðªã¬ç¨ð¨«ð¤¦«ð¤¦ã«»"],["94a1","ã·ð¤©ã»¿ð¤§ð¤£³éºå²éð¨«£ð¡¡¤åð¥¡ð¥§ç¸ð£²ççç»ð¤ð£ã©ð¤£°ç¸çãº¿ð¤ªºð¤«äð¤ªð¦®éð¥ç ç¢ç¢ç£çç¥ð§ð¥£äç¦èç¦¥æ¨­ð£»ºç¨ºç§´ä®ð¡¦ä²éµç§±ð µð¤¦ð ð£¶ºð¡®ãå«ã°ãªð ð °ç«¢å©ð¢µð¥ª¯ð¥ªå¨ð ç£°å¨ªð¥¯ç«¾ä¹ç±ç±­äð¥®³ð¥º¼ð¥º¦ç³ð¤§¹ð¡°ç²ç±¼ç²®æª²ç·ç¸ç·ç½ð¦¡"],["9540","ð¦ð§­ç¶ð¥ºäªð¦­µð ¤æð ð£åð¦ð¦¸ð¤¥¢ç¿ç¬§ð  ¬ð¥«©ð¥µç¬ð¥¸é§¦èé©£æ¨ð£¿ã§¢ð¤§·ð¦­é¨ð¦ èð§§ð¦³äªè·äèèèð¦´é£ð¦©è¢è¥ð¦©èð¦¶§èð§åªä¿ð¡¡å¬«ð¡¢¡å«¤ð¡£è ð¯¦¼ð£¶è ­ð§¢å¨"],["95a1","è¡®ä½è¢è¢¿è£¦è¥¥è¥ð¥è¥ð§ð§ð¨¯µð¨¯ð¨®ð¨§¹ãº­è£äµäã²è¨½è¨ð©å½é«ð¤æç©çð¡¡éµ­è²è³©ð§·å¦çå§°ä®ãè¸ªèº§ð¤°è¼°è½ä´æ±æ¾»ð¢¡ä¢æ½¹æºð¡é¯©ãµð¤¤¯é»éå±ä¤é»éð¨©ä¢ð¨«¼é§ð¨°ð¨°»è¥è¨«éé§ééð¨´´çã»ð¤£¿ð¤©ð¤ªã»§ð£¥éð¨»§ð¨¹¦ð¨¹¥ã»ð¤§­ð¤©¸ð£¿®çç«ã»¼éð©°"],["9640","æ¡ä¨ð©ð¥éé¨ð¨¦ð¨°¦ð¨¬¯ð¦¾éºå¬è­©ä¤¼ç¹ð¤éé±é¤¸ð ¼¦å·ð¨¯ð¤ª²é ð©é¶ð©é¥äð¨­ð¤©§ð¨­¤é£ð¨©ã¼éªä¤¥èé¤»é¥ð§¬ã·½é¦ä­¯é¦ªé©ð¨­¥ð¥£æªé¨¡å«¾é¨¯ð©£±ä®ð©¥é¦¼ä®½ä®é½å¡²ð¡å ¢ð¤¦¸"],["96a1","ð¡¨ç¡ð¢ð£¶¸æ£ãµ½éã¤§æð¢ð¢¥«æé±é±é±»é°µé°é­¿é¯ð©¸­é®ðªµðª¾é´¡ä²®ð¤é¸ä²°é´ðª´ðª­ðª³ð©¤¯é¶¥è½ð¦¸ð¦¿ð¦®è¼ä³ð¦¶¤ð¦ºð¦·°è è®ð¦¸ð£ð¦¤ç§¢ð£ð£ä¤­ð¤§ãµ¢éé¾éð ¿ç¢¹é·éä¿¤ãé¤ð¥ç ½ç¡ç¢¶ç¡ð¡ð£ð¤¥ãä½²æ¿æ¿ççåð¤µå»å£³åé´åç´ã¯ð¤¬ç«ð¦±ð¤¾å¬¨ð¡µð¨©"],["9740","æå«å¨ä¼ð¤ã¬ä­»ð¨§¼é»é¸ð¡£ð ¼è²ð¦³ð¡ð¤ºð¢°¦ð¤å¦ð£¶·ð¦ç¶¨ð¦ð¦¤ð¤¦¹ð¤¦ð¨§ºé¥ç¢ã»©ç´ð¨­£ð¡¢ã»¡ð¤ª³æ«ç³ç»ã»ð¤¨¾ð¤ªð¡ð¤©¦ð §ð¡¤ð¤§¥çð¤¤ç¥ð¤¥¶éç¦éð ¾é±ð¨«ð¨¨éð¨¯§ð¥ä¤µð¨ªç«"],["97a1","ð¤¥ð ³¿å¤ð ð ¯«ð ²¸åç§ð¡ºç·¾ð¡ð¤©ð¡¡ä®éãð¨«ð¤¦­å¦°ð¡¢¿ð¡¢ð§åª¡ã¢ð£µã°éå©¹ð¨ªð¡¡¢é´ã³ð ª´äªã¦å´ãµ©ãµð¡çµä»ð¨æ¸ð©¤ä«æµð§¹ç§æ²¯ã³ð£¿­ð£¸­æ¸æ¼ãµ¯ð µçã¼ãäã»ä¡±å§é®ä¤¾è½ð¨°ð¦¯å åãð¡ç¾ð¤¢ð¤©±ð¢¿£ð¡°ð¢½æ¢¹æ¥§ð¡ð£¥ð§¯´ð£ð¨ªð£ð£ºð¤²æ¨ð£­ð¦²·è¾ää"],["9840","ð¦´¦ð¦µð¦²ð¦¿æ¼ð§è½ð¡ºè­ð¦²ð§ð¡å¦åªð¡³å©¡å©±ð¡¤ð¤¼ã­å§¯ð¡¼ãçéæð¤¥å©®å¨«ð¤æ¨«ð£»¹ð§¶ð¤ð¤çð¤ð¨§¡ä¾°ð¦´¨å³ð¤ð§¹ð¤½æ¨ð¤ð¡ç¦ç³ð¤©ã¶¥æ³ð¯ ¥ð¤©ç¹¥å§«å´¯ã·³å½ð¤©ð¡ç¶¤è¦"],["98a1","åð£«ºð£ð å¾ð £ð ã¿¥ð¡¾ðª¶çð©åµ°çç³ð¨©ð© ä¿ç¿§ççð§«´ç¸ç¹ð¥¶ççãº©ð§¬é¬çµð¤£²ç¡è¶ã»çã»æ²¢å½çççã»¢ã»°ã»´ã»ºçã¼ã½çç­ç²çã½¼ççã¿çã¿ç´ã¿çºð¤½çå£è¦å¡©äçä¹æ¡äãçäªä¯å±ç¾çå£²ç ç¹ç ä¨ç ¹ç¡ç¡ç¡¦èð¥µç¤³æ ç¤²ä"],["9940","äç¦ç¦è¾»ç¨è¾¼ä§çªä²çª¼è¹äç«ç«ää¸¡ç­¢ç­¬ç­»ç°ç°ä äºç±»ç²äç²¸äç³­è¾çð ³ç·ç·ç·ç·½ç¾®ç¾´çäè è¥ç¬¹è®è±èã·å´ç è·è©ä­èçªèèç èäã¬¹èèè"],["99a1","äå ºè¼èä¥èä­è¥å¯èè¤èäè¦è¶èèè¿ä°èé©æ¦èçµè¤æ£èäè¾è¡è¸èè¸èä»è¯è°è ä·è²èè²è¯éèääè¢®è£¿è¤¤è¥è¦ð§¥§è¨©è¨¸èªèª´è±è³è³²è´äå¡è·ä­ä»®è¸ºååè¹±åµèº°ä ·è»è»¢è»¤è»­è»²è¾·è¿è¿è¿é³é§ä¢­é£ éä¤é¨éé«é±é®é¿"],["9a40","é£é«é³é´é½ééé­ä¥ä¥éº¿éåéé­é¾ä¥ªéé¹é­é¢ä¦§é´é³ä§¥æ ä¨¤éä¨µé²éåä«¤æ¨é¢¹ä¬é£±å¡é¤é¤å´é¤é¤·é¥é¥é¥¢ä­°é§ä®é¨¼é¬çªé­©é®é¯é¯±é¯´ä±­é° ã¯ð¡¯éµé°º"],["9aa1","é»¾åé¶é¶½é·é·¼é¶è¾¶é¹»éº¬éº±éº½é»éé»¢é»±é»¸ç«é½ð ð ·ð  æ¤éå¦¬ð å¡éã¹ð ð ð ¶ð¡ºåç³ð «ð «ð ®¿åªð¯ »ð ¯åð ¯»ð °»ð ±ð ±¥ð ±¼æ§ð ²åºð ²µð ³ð ³­ð µ¯ð ¶²ð ·æ¥é°¯è¥ð ¸ð ¸ð »ð ¾ð ¼­ð ¹³å° ð ¾¼å¸ð¡ð¡ð¡¶æð¡»ð¡ð¡ãð¡¿ð¡ð¡¯ð¡»å¤è­ð¡£ð¡µð¡¶è®ð¡·ð¡ð¡ð¡ä¹¸ç»ð¡ ­ð¡¥ª"],["9b40","ð¡¨­ð¡©ð¡°ªð¡±°ð¡²¬ð¡»æð¡»ð¡¼çæ¡ð¢æ§©ãð¢¼ð¢ð¢ºð¢ªð¢¡±ð¢¥è½ð¢¥§ð¢¦ð¢«è¦¥ð¢«¨è¾ ð¢¬é¸ð¢¬¿é¡éª½ð¢±"],["9b62","ð¢²ð¢²·ð¥¯¨ð¢´ð¢´ð¢¶·ð¢¶ð¢¹ð¢½´ð¢¿ð£³ð£¦ð£ð£å¾±ææ¿ð§©¹ð£§ð£³çð¤¦ºçð£ð£çºð å¢µæ"],["9ba1","æ¤ð£ª§ð§ð¥¿¢ð£¸ð£º¹ð§¾ð¢ä£äª¸ð¤ð¨ªð¤®ð¤ð¤»ð¤´ð¤ð¤©ð åð å¦ð¡º¨ã®¾ð£³¿ð¤ð¤åð¤´ã¦ð¤¯ð¨¨ð©§ã¢ð¢è­ð¨­é§ð¤ ð¤£»ð¤¨çð¤«ð ±¸å¥¥ð¤º¥ð¤¾ð ¹è»ð¥¬åå¿ç±ð¥ð¥ð£½ð¤ª§å¼ð¥ð¥®ð¦­éã³ð¥¿ð§²ð¥äð¥¢ð¥¦ð¥ð¤¤¿ð¥¡å¦ã»ð£æð¥¤ä¼ð¨¥ð¥ª®ð¥®ð¥°ð¡¶å¡çæ¾¶ð¦ð§°éð¦²ð¤¾è­¢ð¦ð¦"],["9c40","åµð¦¯·è¼¶ð¦ð¡¤è«ªð¤§¶ð¦ð£¿¯ð¦ä¯ð¦¿ð¦µð¢é¥ð¥¡æå¨§ð¯£ä¾»å¹ð¤¡ð¦¼ä¹ªð¤¤´éæ¶ð¦²½ãè¥·ð¦ð¦¡®ð¦ð¦¡çð¦£ç­ð©ð ¨ð¦¤¦éð¦¤¹ç©é·°ð¦§ºé¨¦ð¦¨­ãð¦©ð ¡ç¦ð¦¨´ð¦­å´¬ð£èð¦®äð¦²¤ç»è¡¥ð¦¶®å¢¶"],["9ca1","ãð¢ð§ð§ã±ð§ð§éð¢ºð§é°ð§¦ð¤§æ°¹éð§ð »¸è §è£µð¢¤¦ð¨³ð¡±æº¸ð¤¨ªð¡  ã¦¤ã¹å°ç§£ä¿æ¶ð©²­ð©¢¤è¥ð§ð§¡åäð¡ã¦¡ð£¯ð¨¨ð¡ç­è¦ð§§ð©¨å©§ä²·ð§¯ð¨¦«ð§§½ð§¨ð§¬ð§µ¦ð¤ºç­ç¥¾ð¨æ¾µðªæ¨ð¨å¢ð¦¸é¿æ ¶éð¨¯ð¨£ð¦¦µð¡­ð£¯ð¨å¶ð¨°°ð¨åé £ð¨¥å¶«ð¤¦æ¾æ§åð¤ª¥ð£¾ã°æ¶ð¨ð¨´ð¨®ð¡¾¡ð¨"],["9d40","ð¨ð¨¯ð¨ð¨ð¨¯ð¨ãð¨¨ð¨ªä£ºæ¦ð¨¥ç éð¨¦¸ä²ð¨§§äð¨§¨ð¨­ð¨¯å§¸ð¨°è¼ð¨¿ð©¬ç­ð©ð©¼ã··ð©ð¤«è¿çåð©§ð©©ð©°ð©¸ð©²ð©£ð©¥ð©¥ªð©§ð©¨¨ð©¬ð©µð©¶çºð©»¸ð©¼£ä²¤éðªç¢ðª¿ä¶éðªä¶ð ²è¾¾å"],["9da1","è¾ºð¢°è¾¹ð¤ªäç¹¿æ½æª±ä»ªã¤ð¨¬¬ð§¢ãºèºð¡µð¨¤ð¨­¬ð¨®ð§¨¾ð¦¯ã·«ð§ð£²·ð¥µð¥¥äºð¥ºð¦å¿ð ¹­è¸å­­ð£ºð¤²ææð¡¶ð¡¡»æ°å­ð¥±åð¥ã·ð©¶ä±½å¢åç½ð¥»å¥µð£µè°ä¸ð ¿ªð µð£ºèéµè´ç»é±çç¹éå²èè·å¥è²èè½åªç¥¢ååð ºãåå±æ±ð¨¢ã­ç´å°åºåå²ð ±ð ²å»ð¥ð ¹¶ð¢±¢"],["9e40","ð º¢éº«çµåð¡µæé­åè³ç¶é¶æ¼æ¹æ¾å©ð¢­é±²ð¢º³åãð ¶§å§åååç¦è¸­ð¦¢ç±è¶è èè£è¶èð¡ä¬çð¤å®èð¦¢å»ð¢´ð§´¯ð¤£ð§µ³ð¦»ð§¶é°ð¡éð£³¼ðª©ð º¬ð »¹ç¦ð¡²¢äð¤¿ð§¿¹ð ¿«äº"],["9ea1","é±æð¢¶ ä£³ð¤ ð©µ¼ð ¿¬ð ¸æ¢ð§£ð ¿­"],["9ead","ð¦ð¡ç£çºéµä¸ä¸ã·å¬æ²²å§ã¬ã§å½ã¥ð¤å¢ð¤­®è­ååªð¥ªð ¥¹"],["9ec5","ã©ð¢¥ç´ð©º¬ä´é¯­ð£³¾ð©¼°ä±ð¤¾©ð©ð©¿èð£¶¶ð§²ð¦³ð£ æ®ç´¥ð£»·ð£¸¬ã¨ªéåã¹´ãºä©ð çå«°ð º¶ç¡ºð§¼®å¢§ä¿å¼é®åµ´çðª´éºä³¡ç¹ã»æð£ð¤²"],["9ef5","åð¡©å§ð¤¥£ð©¸å´ð§®ã­æ±éµ¼"],["9f40","ç±é¬¹åð¡¬å±æð©ð¦µð§¤è­ð ´¨ð¦´¢ð¤«¢ð µ±"],["9f4f","å¾ð¡¼å¶éð¡·éºéç¬é¬å³ç®£æ¨æµé«¿ç¯é¬ªç±¾é¬®ç±ç²é°ç¯¼é¬é¼é°ð¤¤¾é½å³å¯ä¿½éºä¿²å ã¸åå§åå¦·å¸éé¶«è½å©é´é¥éºå¬æ°"],["9fa1","æ¤¬åé°é´ä°»éæ¦å¦çð¡­é§å³"],["9fae","ééé"],["9fb2","éð¨ºæ¿ð¦´£æ«åéçºæð ¼çç±°ð¥°¡ð£³½"],["9fc1","ð¤¤çé®ä¸ªð ³è¾è¡"],["9fc9","å±æ§å­åºåå·µä»æ°±ð ²ä¼¹åååè¶ã¾å¼ã³"],["9fdb","æ­é¼é¾¥é®é ®é¢´éªºéº¨éºçºç¬"],["9fe7","æ¯ºè ç½¸"],["9feb","å ðªè¹·é½"],["9ff0","è·è¹é¸è¸æð¨½è¸¨è¹µç«ð¤©·ç¨¾ç£æ³ªè©§ç"],["a040","ð¨©é¼¦æ³èçðª²ç¡ð¯¡è´ç¢ç±è¬­çç±è³«ð¤ª»è¯å¾ºè¢ ä·"],["a055","ð¡ »ð¦¸"],["a058","è©¾ð¢"],["a05b","æ½ç§é«éµé®é®èµ"],["a063","è è³·ç¬é¡é®°ãç²ä°ç±é¥ð¦æä°éºæ½"],["a073","åæ¯æ¦æ¹æã©æ¢åªð£µæ¤æ ã"],["a0a1","åµð¨¯è¿ð¨¸¹"],["a0a6","åð¡µç¤å²é¸ð ¼»ä¥"],["a0ae","ç¾"],["a0b0","ç³ð¥¼ç³ç¨­è¦è£çµçç²è¦èæè¢ð§èç°èç¤è¦ð¦çð¦»è©èèèè©è²­è­ç«ç¸èãµæ¦²è¶¦"],["a0d4","è¦©ç¨æ¶¹èð¤ç§ã·ç¶æ¤æã³ç¢æ·"],["a0e2","ç½±ð¨¬­çæ©ä­¾å ã°ð£³ð¥»ð§ð¥±ð¡¥ð¡¾ð©¤ð¦·ð§­å³ð¦­ð¨¨ð£·ð ®ð¦¡ð¤¼ä¢å¬ð¦é½éº¦ð¦«"],["a3c0","â",31,"â¡"],["c6a1","â ",9,"â´",9,"â°",9,"ä¸¶ä¸¿äºäº ååå«å¹å¸å©å¶å¤å®å·â¼³å¹¿å»´å½å½¡æ´æ çç¶è¾µé¶Â¨Ëã½ã¾ãããä»ãããã¼ï¼»ï¼½â½ã",23],["c740","ã",58,"ã¡ã¢ã£ã¤"],["c7a1","ã¥",81,"Ð",5,"ÐÐ",4],["c840","Ð",26,"ÑÐ¶",25,"â§â¸â¹ãð ä¹ð åä"],["c8a1","é¾°åé¾±ð§"],["c8cd","ï¿¢ï¿¤ï¼ï¼ã±ââ¡ããâºâºâºâºâºâºâºâºâºâºâºâº¥âº§âºªâº¬âº®âº¶âº¼âº¾â»â»â»â»â»â»â»â»â»£"],["c8f5","ÊÉÉÉÉµÅÃ¸ÅÊÉª"],["f9fe","ï¿­"],["fa40","ð éð ð£¿èäµç¯åµãð¤¥ð¨§¤éð¡§è®ð£³ç ¼ææð¤¤³ð¨¦ªð  ð¦®³ð¡ä¾«ð¢­åð¦´©ð§ªð£ð¤ª±ð¢å©ð ¾å¾¤ð ð æ»ð å½åãºåé¡¬ãèð¤¦¤ð å ð£´åªð ¯¿ð¢¼ð ¥ð¢°ð ð£³ð¡¦å®è½ð ³ð£²å²å¸"],["faa1","é´´åååã³åð¤ª¦å³å¢åå­èæ¤¾ð£­å½»åå¦å¼åµååå¹åç°èå èð¦¬åð¨«åæ»ð£¾ð ¥ð£¿¬å³åð ¯¢æ³ð¡¦æ çæãºªã£ð¡¨çä¢å­å´ð¨«å¾å¿ð¡ð¡ç¦åð¨ªå å«å®ç§ð¥²ã½çååæ±ä¹å¾åãª«ð ®å ð£¿«ð¢¶£å¶ð ±·åç¹å«ææµå­ð¦­ð µ´ååå¤ä¦ð¡ð »ã¶´ð µ"],["fb40","ð¨¦¼ð¢åä³­å¯çåå©åð¡£ð¤ºäð¤µæ³ð¡´å·æð£æ¤æ­ååç£±å±éå¾åå¯å­ð¨­¦ã£ð¡åð¤¥æ±®çåã±ð¦±¾å¦ð¡å ð¡ð¤£å ¦ð¤¯µå¡å¢ªã¡å£ å£ð¡¼å£»å¯¿åðªð¤¸éã¡å¤æ¢¦ãæ¹"],["fba1","ð¡¾å¨¤åð¡èå§ð µð¦²ð¦´ªð¡å§ð¡»ð¡²ð¦¶¦æµ±ð¡ ¨ð¡å§¹ð¦¹åª«å©£ã¦ð¤¦©å©·ãåªç¥å«ð¦¾¡ð¢ã¶ð¡¤ã²ð¡¸åºåå­¶æå­¼ð§¨ää¡ð å¯æ ð¡¨´ð¥§ð ¥å¯³å®ä´å°ð¡­å°çå°ð¡²¥ð¦¬¨å±ä£å²å³©å³¯å¶ð¡·¹ð¡¸·å´å´åµð¡º¤å²ºå·è¼ã ­ð¤¤ð¢ð¢³èã ¶ã¯å¸®æªå¹µå¹ºð¤¼ð ³å¦äº·å»å¨ð¡±å¸å»´ð¨"],["fc40","å»¹å»»ã¢ å»¼æ ¾éå¼ð ð¯¢ã«ä¢®ð¡ºå¼ºð¦¢ð¢å½ð¢±å½£é½ð¦¹®å½²éð¨¨¶å¾§å¶¶ãµð¥ð¡½ªð§¸ð¢¨éð ð¨¨©æ±æð¡¡·ã¥£ã·ã¹åð¢´ç¥±ã¹ææ¤æ³ð¤¦ð¤¦ð§©ç¤å¡åª æ¤è¤æð¯¢¦ð¦»æå´ð æå®ªð£¾·"],["fca1","ð¢¡æð¨®ð©¥æã¤²ð¢¦ð¢£æ£æææð æð¡°æð¢¸æ¬ð¤§ã¨æ¸æ¸ð¡ð¡¼ææ¾ð¢¸¶é ð¤ð¥æ¡æ¥é»ã©¦æºã©ææ¼ð¤¨¨ð¤¨£ææ­æð£¾æµð¤¥ä¬·æäð¡ ©æ æ£å¿ð£æð£·ð£¸æð£¤ð£¥æð ¹µæ§ð¥¦æ³æ´ð¡¸½ð£±ð¨´ð£ð¥çð¢£·é¦¤æð¤ð¤¨¡ã¬«æ§ºð£ææ§æ¢ð¤ð©­æä©æ ¢æ¹é¼æ ð£¦ð¦¶ æ¡"],["fd40","ð£¯æ§¡æ¨ð¨«æ¥³æ£ð£æ¤æ¤ã´²ã¨ð£¼ã®æ¬æ¥¡ð¨©ä¼æ¤¶æ¦ã®¡ð è£åæ§¹ð£ð¢ªæ©ð£æªã¯³æ±æ«ð©ã°æ¬ð ¤£ææ¬µæ­´ð¢æºµð£«ð µð¡¥ãå¡ð£­æ¯¡ð£»¼æ¯æ°·ð¢ð¤£±ð¦­æ±è¦æ±¹ð£¶¼äð£¶½ð¤¤ð¤¤ð¤¤"],["fda1","ð£³ã¥ã³«ð ´²é®ð£¹ð¢ç¾æ ·ð¦´¥ð¦¶¡ð¦·«æ¶æµæ¹¼æ¼ð¤¥¿ð¤ð¦¹²è³ð¦½´åæ²æ¸è®ð¨¬¡æ¸¯ð£¸¯çð£¾ç§æ¹åªð£æ¿¸ãæ¾ð£¸°æ»ºð¡ð¤½äé°æ½æ½ãµæ½´ð©°ã´»æ¾ð¤æ¿ð¤ð¤ð¤¹ð£¿°ð£¾´ð¤¿åð¤ð¤ð¤ð¦çç¾ç§çççççäã·¨ç´çð¤·ç«çåªçç®å²ð¤¥çé¢ð¤ç¬ð¤ð¤¨§ð¤¨¢çºð¨¯¨ç½ç"],["fe40","éçå¤éç¤éð¥ç®çð¤¥´æ¢½ççã¹ð£æ æ¼½ççªç«ð¤ £ð¨ «ä£­ð¨ ç¨ç®ççªð °ºð¦¨®ççð¤¢ð¡§ð¤¨¤æ£ãð¤¦·ð¤¦ð¤§»ç·çæ¤ð¤¨¦ç¹ð ã»çð¢¢­ç ð¨º²çç¤ç¶è¹ç¬ã°ç´é±æ¨¬çä¥ð¤ª"],["fea1","ð¤ð¤©¹ð¨®å­ð¨°ð¡¢çð¡¦çç©çð¨»ð¡©å¯ð¨º¬éççç§ç®ð¤¾ã¼ð¤´çççç´çç¬ççç¯ç¶ð¦µçè¯ã¸ð¦¤ð¦¤ç¡ç¥ç·çð¦¾è¢ð¥ð¥½ð¡¸çç¦çæ¯ð¥ çð£¬ç¯ð¨¥¤ð¨¥¨ð¡ç´ç ð¡¶ð¤¨æ£ç¢¯ç£ç£é¥ç¤®ð¥ ç£ç¤´ç¢±ð§è¾¸è¢ð¨¬«ð¦ð¢ç¦è¤æ¤ç¦ð¥¡ç¦ð§¬¹ç¤¼ç¦©æ¸ªð§¦ãº¨ç§ð©ç§"]]');
            }
          ),
          /***/
          74488: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('[["0","\\u0000",127,"â¬"],["8140","ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ ä¸¡ä¸£ä¸¦ä¸©ä¸®ä¸¯ä¸±ä¸³ä¸µä¸·ä¸¼ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹¢ä¹£ä¹¤ä¹¥ä¹§ä¹¨ä¹ª",5,"ä¹²ä¹´",9,"ä¹¿",6,"äºäº"],["8180","äºäºäºäºäºäºäºäº£äºªäº¯äº°äº±äº´äº¶äº·äº¸äº¹äº¼äº½äº¾ä»ä»ä»ä»ä»ä»ä»ä»ä» ä»¢ä»¦ä»§ä»©ä»­ä»®ä»¯ä»±ä»´ä»¸ä»¹ä»ºä»¼ä»¾ä¼ä¼",6,"ä¼ä¼ä¼",4,"ä¼ä¼ä¼¡ä¼£ä¼¨ä¼©ä¼¬ä¼­ä¼®ä¼±ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾",4,"ä½ä½ä½",5,"ä½ä½ä½ä½¡ä½¢ä½¦ä½¨ä½ªä½«ä½­ä½®ä½±ä½²ä½µä½·ä½¸ä½¹ä½ºä½½ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾¡ä¾¢"],["8240","ä¾¤ä¾«ä¾­ä¾°",4,"ä¾¶",8,"ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿",4,"ä¿ä¿ä¿ ä¿¢ä¿¤ä¿¥ä¿§ä¿«ä¿¬ä¿°ä¿²ä¿´ä¿µä¿¶ä¿·ä¿¹ä¿»ä¿¼ä¿½ä¿¿",11],["8280","åååååååååååå å¢å£å¤å§å«å¯",10,"å»å½å¿ååååååååååå",4,"åååååå",7,"å¦",5,"å­",8,"å¸å¹åºå¼å½ååååååååååå",20,"å¤å¦åªå«å­",4,"å³",6,"å¼"],["8340","å½",17,"å",5,"åååå",10,"å¨å©åªå«å¯å°å±å²å´å¶",4,"å¼",9,"å"],["8380","ååå",5,"å",13,"å¢",28,"åååååååååååååå",4,"å£å¤å¦å§å©åªå¯å²åºå¾å¿åååååååååååååååååå¡å£å¦",4,"å­å®å´å¸å¹åºå¾å¿åååååååååå",5],["8440","ååååååå¢å£å¥",5,"å¬å®å±å²å´å·å¾åååååååååååååå¡å¢å£å¥å¦å§åªå¬å¯å±å²å´åµå¼å¾å",5,"åååååååå"],["8480","åååååå å¢å£å¤å¦å¨å«å¬å­å®å°å±å³",9,"å¾åå",4,"å",6,"ååå",6,"åå¤å¥å¦å§å®å¯å°å´",9,"åååååååååååååååååå",5,"å å¡å¢å£å¥",10,"å±",7,"å»å¼å½åååååååååå"],["8540","åååååååååå¢å¤å¥å§å¨å©å«å¬å­å¯",9,"å¼å½åååååååååååååå¥å¨åªå¬å­å²å¶å¹å»å¼å½å¾åååååååå"],["8580","å",4,"ååååååå å¡å¤å§åªå«å¬å­å¯",6,"å·å¸å¹åºå¼å½å¾åå",4,"ååååååååååå¡å¢å§å´åºå¾å¿ååååååååååå¢å¤å¥åªå°å³å¶å·åºå½å¿ååååååååååååå",4,"å£å¥å§å©",7,"å´å¹åºå¾å¿åååååååååååååååå å¡"],["8640","å¢å¥å®å°å²åµå¶å·å¹åºå¼å¾åååååååå ",4,"å«å¬å¯å°å±å´",5,"å»å¾ååååååå",4,"ååå",5,"ååååå¡å¥å¦"],["8680","å¨å©å«å­å²å´åµå¶å¸å¹åºå»å½åååååå",4,"ååååå",4,"åååå å¢å£å¨å©å«å¯",5,"å¹åºå½å¿ååååååååååååååå ",6,"å¨",8,"å²å´å¶å¸åºå¼å¿",4,"åååååååååå",4,"åå å¢å§å©å­å®å°å±å´å¶å¸",4,"å¿åååå"],["8740","åååååå",7,"ååååå å¡å¢å¥å¦å¨å©åªå«å®å¯å°å³åµå·å¸åºå¼å½å¾å",11,"å",4,"ååååå",4],["8780","å£å¥å¦å§å­å®å¯å°å²å³å´åµå·å¸å¹åºå½",7,"å",6,"åååå",14,"å¤",10,"å°",6,"å¸å¹åºå»å½",12,"å",8,"åååååå£å¥",5,"å¬å®å¯å²å³å¶å·å¸å»å¼åååååå",6],["8840","å",9,"ååå å¡å¢å¤å¥å¦å§å«å±å²å´",4,"å¼å½å¿ååååååååå",4,"ååå¢å£å¥å§å¬å®å°å±å²å´åµå¸å¹åºå½å¾å¿å"],["8880","åååååå",4,"å",6,"ååååå¥å¨åªå¬å¯å°å±å³åµå¶å·å¹",8,"å",6,"ååååååååååå¡å¢å£å¥",7,"å®å°å±å²å³åµå¶å·å»å¼å¾å¿å å å å å å å å å å å å å å å å å å å å å å å ¢å £å ¥",4,"å «",4,"å ±å ²å ³å ´å ¶",7],["8940","å ¾",5,"å¡",6,"å¡å¡å¡å¡å¡å¡å¡å¡å¡",4,"å¡",5,"å¡¦",4,"å¡­",16,"å¡¿å¢å¢å¢å¢å¢å¢å¢å¢"],["8980","å¢",4,"å¢",4,"å¢å¢å¢å¢ ",7,"å¢ª",17,"å¢½å¢¾å¢¿å£å£å£å£å£",10,"å£å£å£å£",13,"å£¥",5,"å£­å£¯å£±å£²å£´å£µå£·å£¸å£º",7,"å¤å¤å¤å¤",4,"å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤ å¤¡å¤¢å¤£å¤¦å¤¨å¤¬å¤°å¤²å¤³å¤µå¤¶å¤»"],["8a40","å¤½å¤¾å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥",4,"å¥¡å¥£å¥¤å¥¦",12,"å¥µå¥·å¥ºå¥»å¥¼å¥¾å¥¿å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦ å¦¡å¦¢å¦¦"],["8a80","å¦§å¦¬å¦­å¦°å¦±å¦³",5,"å¦ºå¦¼å¦½å¦¿",6,"å§å§å§å§å§å§å§å§å§å§å§å§",4,"å§¤å§¦å§§å§©å§ªå§«å§­",11,"å§ºå§¼å§½å§¾å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨¡å¨¢å¨¤å¨¦å¨§å¨¨å¨ª",6,"å¨³å¨µå¨·",4,"å¨½å¨¾å¨¿å©",4,"å©å©å©",9,"å©å©å©å©å©",5],["8b40","å©¡å©£å©¤å©¥å©¦å©¨å©©å©«",8,"å©¸å©¹å©»å©¼å©½å©¾åª",17,"åª",6,"åª",13,"åª«åª¬"],["8b80","åª­",4,"åª´åª¶åª·åª¹",4,"åª¿å«å«",5,"å«å«å«",4,"å«å«å«å«å«å«å«å«å«å«¢å«¤å«¥å«§å«¨å«ªå«¬",4,"å«²",22,"å¬",11,"å¬",25,"å¬³å¬µå¬¶å¬¸",7,"å­",6],["8c40","å­",7,"å­å­å­å­ å­¡å­§å­¨å­«å­­å­®å­¯å­²å­´å­¶å­·å­¸å­¹å­»å­¼å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®å®§å®¨å®©å®¬å®­å®®å®¯å®±å®²å®·å®ºå®»å®¼å¯å¯å¯å¯å¯å¯å¯å¯å¯å¯"],["8c80","å¯å¯",8,"å¯ å¯¢å¯£å¯¦å¯§å¯©",4,"å¯¯å¯±",6,"å¯½å¯¾å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å° å°¡å°£å°¦å°¨å°©å°ªå°«å°­å°®å°¯å°°å°²å°³å°µå°¶å°·å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±¢å±¤å±§",6,"å±°å±²",6,"å±»å±¼å±½å±¾å²å²",4,"å²å²å²å²å²å²å²å²å²",4,"å²¤",4],["8d40","å²ªå²®å²¯å²°å²²å²´å²¶å²¹å²ºå²»å²¼å²¾å³å³å³å³",5,"å³",5,"å³",5,"å³",6,"å³¢å³£å³§å³©å³«å³¬å³®å³¯å³±",9,"å³¼",4],["8d80","å´å´å´å´",5,"å´",4,"å´å´å´å´å´å´å´å´",4,"å´¥å´¨å´ªå´«å´¬å´¯",4,"å´µ",7,"å´¿",7,"åµåµåµ",10,"åµåµåµåµ",10,"åµªåµ­åµ®åµ°åµ±åµ²åµ³åµµ",12,"å¶",21,"å¶å¶å¶å¶å¶å¶ "],["8e40","å¶¡",21,"å¶¸",12,"å·",6,"å·",12,"å·å·å· å·£å·¤å·ªå·¬å·­"],["8e80","å·°å·µå·¶å·¸",4,"å·¿å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸",7,"å¸¨",4,"å¸¯å¸°å¸²",4,"å¸¹å¸ºå¸¾å¸¿å¹å¹å¹å¹",5,"å¹",6,"å¹",4,"å¹å¹å¹å¹ å¹£",14,"å¹µå¹·å¹¹å¹¾åºåºåºåºåºåºåºåºåºåºåºåºåºåº¡åº¢åº£åº¤åº¨",4,"åº®",4,"åº´åººåº»åº¼åº½åº¿",6],["8f40","å»å»å»å»",5,"å»å»å»å»å»å»å»",11,"å»©å»«",8,"å»µå»¸å»¹å»»å»¼å»½å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤"],["8f80","å¼¨å¼«å¼¬å¼®å¼°å¼²",6,"å¼»å¼½å¼¾å¼¿å½",14,"å½å½å½å½å½å½å½å½å½ å½£å½¥å½§å½¨å½«å½®å½¯å½²å½´å½µå½¶å½¸å½ºå½½å½¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾ å¾¢",5,"å¾©å¾«å¾¬å¾¯",5,"å¾¶å¾¸å¾¹å¾ºå¾»å¾¾",4,"å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿¢å¿£å¿¥å¿¦å¿¨å¿©å¿¬å¿¯å¿°å¿²å¿³å¿´å¿¶å¿·å¿¹å¿ºå¿¼æ"],["9040","æææææææææææææ¢æ£æ¤æ¬æ­æ®æ°",4,"æ¶",4,"æ½æ¾ææ",6,"ææææææææææææææ æ¡æ¥æ¦æ®æ±æ²æ´æµæ·æ¾æ"],["9080","ææææææææææææææææææææ¡æ¢æ¤æ¥æ§æ©æªæ®æ°æ³æµæ¶æ·æ¹æºæ½",7,"ææææ",4,"æææææææææ¡",4,"æªæ±æ²æµæ·æ¸æ»",4,"æææææææææ",4,"æææææææææ¡æ¢æ¥æ¨æ©æªæ¬",18,"æ",6],["9140","ææææææææææ",6,"æææ æ¡æ£æ¤æ¥æ¦æ©",6,"æ±æ²æ³æ´æ¶æ¸",18,"æææ",4,"æ"],["9180","æ",6,"æ",8,"æªæ«æ­",9,"æ¸",5,"æ¿æææ",4,"ææ",4,"ææ",16,"æ§",13,"æ¶",8,"æ",5,"æææææææææ æ£æ¦æ§æ¨æ©æ«æ­æ¯æ°æ±æ²æµæ¶æ¸",4,"æææææ"],["9240","ææææææææ",6,"æ¤æ¥æ¨æ±æ²æ´æµæ·æ¸æºæ»æ½ææææææææ",5,"ææææææ£æ¦æ§æ©æªæ­æ®æ¯æ°æ²æ³æ´æ¶æ·æ¸æºæ¾ææ"],["9280","ææææææææ æ¡æ¤æªæ«æ°æ²æµæ¸æ¹æºæ»ææææææææææææææææææææ¦æ§æ©æ¬æ­æ®æ°æ±æ³",5,"æ»æ¼æ¾æ¿æææææææææææ",7,"æ æ¤æ¥æ¦æ¨æªæ«æ¬æ¯æ°æ²æ³æ´æµæ¸æ¹æ¼æ½æ¾æ¿æææææææææææææ",6,"æ¡æ¤æ¦æ«æ¯æ±æ²æµæ¶æ¹æ»æ½æ¿æ"],["9340","ææææææææææææææ",6,"ææ¢æ¤",4,"æ«æ¬æ®æ¯æ°æ±æ³æµæ·æ¹æºæ»æ¼æ¾æææ",4,"æææææ",5,"æææ¢æ£æ¤"],["9380","æ¥æ§æ¨æ©æ«æ®",5,"æµ",4,"æ»æ¼æ¾æææææ",6,"æææææ",4,"æ",7,"æ¨æªæ«æ¬æ®",9,"æ»",6,"æææ",8,"æææææææææ",4,"æ¥æ¦æ§æ¨æªæ«æ¯æ±æ²æ³æ´æ¶æ¹æ»æ½æ¾æ¿ææææ",6,"ææææææææ"],["9440","æææææ æ¡æ£æ¥æ§",24,"æ",7,"æ",7,"æ",4,"æ",8],["9480","æ¢æ£æ¤æ¦",4,"æ¬æ­æ°æ±æ²æ³æ·æºæ¼æ½æ",4,"ææææææææææææææææ æ¡æ¤æ¥æ§æ¨æ©æªæ­æ®æ¯æ±æ³æµæ¶æ¸",14,"æææææææææææææææ æ¢æ£æ¦æ¨æªæ¬æ®æ±",7,"æºæ»æ¾æ¿æææææææææææææ",7,"æ¡æ£æ¤æªæ«"],["9540","æ²æ³æ´æµæ¸æ¹æ»",4,"æææææææææææææææææææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ²æ³æ·",4,"æ½æ¿æææ",6,"æææææ"],["9580","ææææææ æ¢æ£æ¥æ§æ©",4,"æ±æ²æ³æµæ¸æ¹æ»æ¼æ½æ¿ææææææææææææææææææ",4,"æ",8,"æ©",4,"æ¯",4,"æµæ¶æ·æ¸æºæ»æ¼æ½æ¿",25,"ææ",7,"æ§æ¨æª",5,"æ±æµæ¶æ¸æºæ»æ½æææ"],["9640","æææææææææææææææææ ",5,"æ§æ©æ®æ°æ²æ³æ¶æ·æ¸æ¹æ»æ¼æ¾æ¿æææææææææææ",4,"ææ¢æ£æ¤æ¦æ§æ«æ¬æ®æ±æ´æ¶"],["9680","æ¸æ¹æºæ»æ½ææææææææææææææææææææ æ¡æ¤æ¦æ©æ¬æ®æ±æ²æ´æ¹",7,"ææ",9,"ææææææ¡æ£æ¤æ¦æ§æ¨æªæ«æ­æ®æ²æµ",7,"æ¾æ æ æ æ æ æ æ æ æ æ æ ",4,"æ æ æ  æ ¢",6,"æ «",6,"æ ´æ µæ ¶æ ºæ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡",5],["9740","æ¡æ¡æ¡æ¡æ¡ªæ¡¬",7,"æ¡µæ¡¸",8,"æ¢æ¢æ¢",7,"æ¢æ¢æ¢æ¢æ¢æ¢æ¢",9,"æ¢£æ¢¤æ¢¥æ¢©æ¢ªæ¢«æ¢¬æ¢®æ¢±æ¢²æ¢´æ¢¶æ¢·æ¢¸"],["9780","æ¢¹",6,"æ£æ£",5,"æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£",4,"æ£¡æ£¢æ£¤",9,"æ£¯æ£²æ£³æ£´æ£¶æ£·æ£¸æ£»æ£½æ£¾æ£¿æ¤æ¤æ¤æ¤æ¤",4,"æ¤æ¤æ¤æ¤",11,"æ¤¡æ¤¢æ¤£æ¤¥",7,"æ¤®æ¤¯æ¤±æ¤²æ¤³æ¤µæ¤¶æ¤·æ¤¸æ¤ºæ¤»æ¤¼æ¤¾æ¥æ¥æ¥",16,"æ¥æ¥æ¥æ¥æ¥æ¥æ¥"],["9840","æ¥¡æ¥¢æ¥¤æ¥¥æ¥§æ¥¨æ¥©æ¥ªæ¥¬æ¥­æ¥¯æ¥°æ¥²",4,"æ¥ºæ¥»æ¥½æ¥¾æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦æ¦",5,"æ¦æ¦æ¦æ¦æ¦",9,"æ¦©æ¦ªæ¦¬æ¦®æ¦¯æ¦°æ¦²æ¦³æ¦µæ¦¶æ¦¸æ¦¹æ¦ºæ¦¼æ¦½"],["9880","æ¦¾æ¦¿æ§æ§",7,"æ§æ§æ§æ§æ§æ§æ§",5,"æ§æ§æ§æ§¡",11,"æ§®æ§¯æ§°æ§±æ§³",9,"æ§¾æ¨",9,"æ¨",11,"æ¨",5,"æ¨ æ¨¢",5,"æ¨©æ¨«æ¨¬æ¨­æ¨®æ¨°æ¨²æ¨³æ¨´æ¨¶",6,"æ¨¿",4,"æ©æ©æ©",7,"æ©",6,"æ©"],["9940","æ©",4,"æ©¢æ©£æ©¤æ©¦",10,"æ©²",6,"æ©ºæ©»æ©½æ©¾æ©¿æªæªæªæª",8,"æªæª",4,"æª",7,"æª¡",5],["9980","æª§æª¨æªªæª­",114,"æ¬¥æ¬¦æ¬¨",6],["9a40","æ¬¯æ¬°æ¬±æ¬³æ¬´æ¬µæ¬¶æ¬¸æ¬»æ¬¼æ¬½æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­æ­",11,"æ­",7,"æ­¨æ­©æ­«",13,"æ­ºæ­½æ­¾æ­¿æ®æ®æ®"],["9a80","æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®",4,"æ®¢",7,"æ®«",7,"æ®¶æ®¸",6,"æ¯æ¯æ¯æ¯",4,"æ¯æ¯æ¯æ¯æ¯æ¯æ¯",4,"æ¯¢",7,"æ¯¬æ¯­æ¯®æ¯°æ¯±æ¯²æ¯´æ¯¶æ¯·æ¯¸æ¯ºæ¯»æ¯¼æ¯¾",6,"æ°",4,"æ°æ°æ°æ°æ°æ°æ° æ°£æ°¥æ°«æ°¬æ°­æ°±æ°³æ°¶æ°·æ°¹æ°ºæ°»æ°¼æ°¾æ°¿æ±æ±æ±æ±æ±",4,"æ±æ±æ±æ±æ±"],["9b40","æ±æ±æ±¢æ±£æ±¥æ±¦æ±§æ±«",4,"æ±±æ±³æ±µæ±·æ±¸æ±ºæ±»æ±¼æ±¿æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ² æ²¢æ²¨æ²¬æ²¯æ²°æ²´æ²µæ²¶æ²·æ²ºæ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["9b80","æ³æ³æ³æ³æ³æ³¤æ³¦æ³§æ³©æ³¬æ³­æ³²æ³´æ³¹æ³¿æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´",5,"æ´¦æ´¨æ´©æ´¬æ´­æ´¯æ´°æ´´æ´¶æ´·æ´¸æ´ºæ´¿æµæµæµæµæµæµæµæµæµæµæµæµæµæµ¡æµ¢æµ¤æµ¥æµ§æµ¨æµ«æµ¬æµ­æµ°æµ±æµ²æµ³æµµæµ¶æµ¹æµºæµ»æµ½",4,"æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶",4,"æ¶æ¶¢æ¶¥æ¶¬æ¶­æ¶°æ¶±æ¶³æ¶´æ¶¶æ¶·æ¶¹",5,"æ·æ·æ·æ·æ·æ·"],["9c40","æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·¢æ·£æ·¥æ·§æ·¨æ·©æ·ªæ·­æ·¯æ·°æ·²æ·´æ·µæ·¶æ·¸æ·ºæ·½",7,"æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸¢æ¸¦æ¸§æ¸¨æ¸ªæ¸¬æ¸®æ¸°æ¸±æ¸³æ¸µ"],["9c80","æ¸¶æ¸·æ¸¹æ¸»",7,"æ¹",7,"æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹ ",10,"æ¹¬æ¹­æ¹¯",14,"æºæºæºæºæºæºæº",4,"æº",6,"æºæºæºæºæºæº æº¡æº£æº¤æº¦æº¨æº©æº«æº¬æº­æº®æº°æº³æºµæº¸æº¹æº¼æº¾æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»£æ»§æ»ª",5],["9d40","æ»°æ»±æ»²æ»³æ»µæ»¶æ»·æ»¸æ»º",7,"æ¼æ¼æ¼æ¼æ¼æ¼",4,"æ¼æ¼æ¼æ¼",9,"æ¼¡æ¼¢æ¼£æ¼¥æ¼¦æ¼§æ¼¨æ¼¬æ¼®æ¼°æ¼²æ¼´æ¼µæ¼·",6,"æ¼¿æ½æ½æ½"],["9d80","æ½æ½æ½æ½æ½æ½æ½æ½",9,"æ½æ½æ½æ½æ½æ½ æ½¡æ½£æ½¤æ½¥æ½§",5,"æ½¯æ½°æ½±æ½³æ½µæ½¶æ½·æ½¹æ½»æ½½",6,"æ¾æ¾æ¾æ¾æ¾æ¾",12,"æ¾æ¾æ¾æ¾ æ¾¢",4,"æ¾¨",10,"æ¾´æ¾µæ¾·æ¾¸æ¾º",5,"æ¿æ¿",5,"æ¿",6,"æ¿",10,"æ¿æ¿¢æ¿£æ¿¤æ¿¥"],["9e40","æ¿¦",7,"æ¿°",32,"ç",7,"ç",6,"ç¤",6],["9e80","ç«",9,"ç¶ç·ç¸çº",17,"ççç",13,"ç",11,"ç®ç±ç²ç³ç´ç·ç¹çºç»ç½ççççççççççççççççççç",12,"ç°ç²ç´çµç¶çºç¾ç¿çççççç",12,"ç"],["9f40","çççç ç¡ç¢ç£ç¥çªç®ç°",6,"ç¸çºç»ç¼ç¾",10,"ç",4,"ççççç",10,"ç§",7,"ç²ç³ç´"],["9f80","çµç·",13,"ççççççç",12,"çç",4,"ç¥ç©",4,"ç¯ç°ç±ç´çµç¶ç·ç¹ç»ç¼ç¾",5,"ç",4,"çççççççççççç",4,"ç¡",6,"ç©çªç«ç­",5,"ç´ç¶ç·ç¸çº",8,"ç",9,"ç",4],["a040","ç",9,"ç¡ç¢ç£ç¤ç¦ç¨",5,"ç¯",9,"çº",11,"ç",19],["a080","ççç",9,"ç©ç«ç­ç®ç¯ç²ç³ç´çºç¼ç¾ç",6,"çççççççççççççççç ç£ç¤ç¥ç¨çªç«ç¬ç­ç°ç±ç³ç´ç¶ç·ç¸ç»ç¼ç½ççç",4,"ççççç",11,"ç ",11,"ç®ç±ç²ç³çµçº",6,"çççççççççççççççç"],["a1a1","ãããÂ·ËËÂ¨ããâï½ââ¦ââââããã",7,"ããããÂ±ÃÃ·â¶â§â¨âââªâ©ââ·ââ¥â¥â âââ«â®â¡âââ½ââ â®â¯â¤â¥ââµâ´ââÂ°â²â³âï¼Â¤ï¿ ï¿¡â°Â§âââââââââ¡â â³â²â»ââââã"],["a2a1","â°",9],["a2b1","â",19,"â´",19,"â ",9],["a2e5","ã ",9],["a2f1","â ",11],["a3a1","ï¼ï¼ï¼ï¿¥ï¼",88,"ï¿£"],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a6e0","ï¸µï¸¶ï¸¹ï¸ºï¸¿ï¹ï¸½ï¸¾ï¹ï¹ï¹ï¹"],["a6ee","ï¸»ï¸¼ï¸·ï¸¸ï¸±"],["a6f4","ï¸³ï¸´"],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a840","ËËËâââ¥âµâââââââââ£ââ¦â§â¿â",35,"â",6],["a880","â",7,"ââââ¼â½â¢â£â¤â¥ââããã"],["a8a1","ÄÃ¡ÇÃ ÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇÇÃ¼ÃªÉ"],["a8bd","ÅÅ"],["a8c0","É¡"],["a8c5","ã",36],["a940","ã¡",8,"ã£ãããããã¡ãããããï¸°ï¿¢ï¿¤"],["a959","â¡ã±"],["a95c","â"],["a960","ã¼ããã½ã¾ãããï¹",9,"ï¹ï¹ï¹ï¹ï¹",8],["a980","ï¹¢",4,"ï¹¨ï¹©ï¹ªï¹«"],["a996","ã"],["a9a4","â",75],["aa40","çççç¢",5,"çªç«çµç¶ç¹ç½ç¾ç¿ççç",5,"ççççççççççççç ç£ç¤ç¦ç§ç¨ç­ç¯ç°ç²ç³çµç¶çºç»ç¼ç½ç",8],["aa80","çççççççççççç",7,"ç¡",10,"ç®ç°ç±"],["ab40","ç²",11,"ç¿",4,"çççççççççççççççççççç ç¡ç£",5,"çªç¬ç­ç±ç´çµç¶ç¸ç¹ç¼ç½ç¾ç¿çç",4],["ab80","çççç",6,"çççççç¡ç¢ç£ç¤ç¦ç¨çªç«ç¬ç®ç¯ç°ç±ç³",4],["ac40","ç¸",10,"çççççççç",8,"ç",5,"ç£ç¤ç§ç©ç«ç­ç¯ç±ç²ç·",4,"ç½ç¾ç¿çç",11],["ac80","ç",6,"çççç ",12,"ç®ç¯ç±",4,"ç¸ç¹çº"],["ad40","ç»ç¼ç½ç¿ççççççççççç",10,"çç",7,"çª",15,"ç»",12],["ad80","ç",9,"ç",8,"ççç¡ç¥ç§",6,"ç°ç±ç²"],["ae40","ç³çµç¸",6,"ççççç",7,"ççççççççççç ",4,"ç¦ç§çªç®ç´ç¶ç¹ç¼ç½ç¿ççççççççççççççççç"],["ae80","ç",7,"ç§ç¨ç©ç«",6,"ç³çµç¶ç·çº",4,"çççççç"],["af40","çççççççççççççç¢ç¦",4,"ç­ç¶ç·çºç»ç¿ççççççççççççççççç ç¡ç¥ç©ç¬ç­ç®ç¯ç²ç³çµç¶ç·ç¸çºç»ç½ç¾çççç"],["af80","çççççççççççççççç¡ç£ç§ç¨ç¬ç®ç¯ç±ç²ç¶ç·ç¹çºç»ç½ççç"],["b040","ç",6,"ç",5,"çç",4,"ççç ç¡ç¢ç¤",6,"ç¬ç­ç®ç°",7,"ç¹çºç¼ç¿ççççççççççççççççç"],["b080","ç",7,"ç¥",8,"ç¯ç°ç³çµ",9,"çççåé¿åæ¨åååççè¼ç®è¾ç¢ç±ééæ°¨å®ä¿ºææå²¸èºæ¡è®æçå¹æç¬ç¿±è¢å²å¥¥ææ¾³è­ææå­å§ç¬å«ç¤å·´æè·é¶æèåé¸ç½¢ç¸ç½æç¾æä½°è´¥æç¨æç­æ¬æ³è¬é¢æ¿çæ®æä¼´ç£ååç»é¦å¸®æ¢æ¦èç»æ£ç£èéåè°¤èèåè¤å¥"],["b140","ççççççççççççç ",4,"ç¦",7,"ç°ç³çµç¶ç·çºç»ç½ç¿çççççççç",10,"ççççç¡ç£ç¤ç¥ç§çªç«"],["b180","ç¬ç®ç°",4,"ç¹ç»ç½ç¾ç¿ççççç",7,"ç",7,"çèé¹ä¿å ¡é¥±å®æ±æ¥æ´è±¹é²çæ¯ç¢æ²ååè¾èè´é¡åçå¤æ«çè¢«å¥è¯æ¬ç¬¨å´©ç»·ç­æ³µè¹¦è¿¸é¼é¼»æ¯éç¬å½¼ç¢§èè½æ¯æ¯æ¯å¸åºç¹é­æå¼å¿è¾å£èé¿éé­è¾¹ç¼è´¬æä¾¿ååè¾¨è¾©è¾«éæ å½ªèè¡¨é³æå«çªå½¬ææ¿æ»¨å®¾æåµå°æä¸ç§é¥¼ç³"],["b240","çççç ç¤ç§ç©çªç­",11,"çºç»ç¼çççç",5,"ççç",11,"ç¡ç£ç¤ç¦ç¨ç«ç­ç®ç¯ç±ç²ç´ç¶",4],["b280","ç¼ç¾ç",12,"ç",8,"çççç",4,"ç¤çå¹¶ç»è æ­æ¨éµæ³¢ååæéç®ä¼¯å¸è¶èèæ¸¤æ³é©³æååºè¡¥å ä¸å¸æ­¥ç°¿é¨ææ¦çè£ææè´¢ç¬è¸©éå½©èè¡é¤åèæ®æ­æ¨ç¿èè±ä»æ²§èæç³æ§½æ¹èåç­ä¾§åæµå±è¹­æåè¬è¶æ¥ç¢´æ½å¯å²å·®è¯§ææ´è±ºææºèé¦è°ç¼ é²äº§éé¢¤æç"],["b340","ç¦ç¨çªç¯ç°ç±ç²ç´çµç·ç¹çºç»ç¼ç ",5,"ç ç ç ç ç ç ç ç ç ç ç  ç ¡ç ¢ç ¤ç ¨ç ªç «ç ®ç ¯ç ±ç ²ç ³ç µç ¶ç ½ç ¿ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡"],["b380","ç¡ç¡ç¡",11,"ç¡¯",7,"ç¡¸ç¡¹ç¡ºç¡»ç¡½",6,"åºå°å¸¸é¿å¿è åæçå±å¡è¶æéæå²æ½®å·¢åµçè½¦æ¯æ¤æ£å½»æ¾é´è£è¾°å°æ¨å¿±æ²éè¶è¡¬æç§°åæ©æåä¹ç¨æ©æ¾è¯æ¿ééªç§¤åç´æåæ± è¿å¼é©°è»é½¿ä¾å°ºèµ¤ç¿æ¥ç½åå²è«å´å® æ½é¬ç´è¸ç¨ æç­¹ä»ç»¸çä¸è­ååºæ©±å¨èºééæ»é¤æ¥"],["b440","ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ ç¢¢ç¢¤ç¢¦ç¢¨",7,"ç¢µç¢¶ç¢·ç¢¸ç¢ºç¢»ç¢¼ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£",9],["b480","ç£¤ç£¥ç£¦ç£§ç£©ç£ªç£«ç£­",4,"ç£³ç£µç£¶ç£¸ç£¹ç£»",5,"ç¤ç¤ç¤ç¤",6,"ç¡å¨çæè§¦å¤æ£å·ç©¿æ¤½ä¼ è¹åä¸²ç®çªå¹¢åºé¯åå¹çæ¶é¤åæ¥æ¤¿éåæ·³çº¯è ¢æ³ç»°çµè¨ç£éè¾æç·è¯æ­¤åºèµæ¬¡èªè±å±åä»ä¸åç²éç°ä¿è¹¿ç¯¡çªæ§å´å¬èçç²¹æ·¬ç¿ æå­å¯¸ç£æ®ææªæ«éæ­è¾¾ç­ç©æå¤§åæ­¹å£æ´å¸¦æ®ä»£è´·è¢å¾é®"],["b540","ç¤",5,"ç¤",9,"ç¤",4,"ç¤¥",14,"ç¤µ",4,"ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥",8,"ç¥ç¥ç¥ç¥ç¥¡ç¥£"],["b580","ç¥¤ç¥¦ç¥©ç¥ªç¥«ç¥¬ç¥®ç¥°",6,"ç¥¹ç¥»",4,"ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦æ è½æä¸¹åé¸æ¸èæ¦æ°®ä½æ®æ·¡è¯å¼¹èå½æ¡åè¡æ¡£åæ£è¹åå²ç¥·å¯¼å°ç¨»æ¼éçå¾·å¾çè¹¬ç¯ç»ç­çªå³éå ¤ä½æ»´è¿ªæç¬çæ¶¤ç¿å«¡æµåºå°èç¬¬å¸å¼éç¼é¢ ææ»ç¢ç¹å¸éå«çµä½ç¸åºæ¦å¥ æ·æ®¿ç¢å¼éååæåéè°è·ç¹ç¢è¶è¿­è°å "],["b640","ç¦",6,"ç¦",11,"ç¦¨",10,"ç¦´",4,"ç¦¼ç¦¿ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§",5,"ç§ ç§¡ç§¢ç§¥ç§¨ç§ª"],["b680","ç§¬ç§®ç§±",6,"ç§¹ç§ºç§¼ç§¾ç§¿ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨",4,"ç¨ç¨ç¨ç¨ç¨ç¨ä¸ç¯å®éé¡¶é¼é­å®è®¢ä¸¢ä¸å¬è£æå¨æ ä¾æ«å»æ´åææé¡è±éçé½ç£æ¯çç¬è¯»å µç¹èµæéèåº¦æ¸¡å¦ç«¯ç­é»æ®µæ­ç¼å åéå¯¹å¢©å¨è¹²æ¦é¡¿å¤éç¾éæåå¤å¤ºåèº²æµè·ºèµåæ°å è¾å³¨é¹ä¿é¢è®¹å¨¥æ¶åæ¼ééé¥¿æ©èå¿è³å°é¥µæ´±äº"],["b740","ç¨ç¨ç¨¡ç¨¢ç¨¤",14,"ç¨´ç¨µç¨¶ç¨¸ç¨ºç¨¾ç©",5,"ç©",9,"ç©",4,"ç©",16],["b780","ç©©",6,"ç©±ç©²ç©³ç©µç©»ç©¼ç©½ç©¾çªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçª¡çª¢è´°åç½ç­ä¼ä¹éæ³çè©å¸çªç¿»æ¨ç¾éç¹å¡ç¦åè¿èè´©ç¯é¥­æ³åè³æ¹èªæ¿é²å¦¨ä»¿è®¿çººæ¾è²éå¡é£è¥åªè¯½å èºåºæ²¸è´¹è¬éå©æ°åçº·åçæ±¾ç²å¥ä»½å¿¿æ¤ç²ªä¸°å°æ«èå³°éé£ç¯ç½é¢å¯ç¼è®½å¥å¤ä½å¦å¤«æ·è¤å­µæ¶æè¾å¹æ°ç¬¦ä¼ä¿æ"],["b840","çª£çª¤çª§çª©çªªçª«çª®",4,"çª´",10,"ç«",10,"ç«",9,"ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¤ç«§",5,"ç«®ç«°ç«±ç«²ç«³"],["b880","ç«´",4,"ç«»ç«¼ç«¾ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬¡ç¬¢ç¬£ç¬§ç¬©ç¬­æµ®æ¶ªç¦è¢±å¼ç«æè¾ä¿¯éæ§è¯èåºèèµ´å¯è¦èµå¤åä»éç¶è¹è´å¯è®£éå¦ç¼åå¶åè¯¥æ¹æ¦éçæºå¹²çææç«¿èèµ¶æç§æ¢èµ£ååé¢ç¼¸èçº²å²æ¸¯æ ç¯çé«èç¾ç³æéç¨¿åå¥æ­ææé¸½è³çå²é©èæ ¼è¤ééé¬ä¸ªåç»æ ¹è·èæ´åºç¾¹"],["b940","ç¬¯ç¬°ç¬²ç¬´ç¬µç¬¶ç¬·ç¬¹ç¬»ç¬½ç¬¿",5,"ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­¡ç­£",10,"ç­¯ç­°ç­³ç­´ç­¶ç­¸ç­ºç­¼ç­½ç­¿ç®ç®ç®ç®ç®",6,"ç®ç®"],["b980","ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®£ç®¤ç®¥ç®®ç®¯ç®°ç®²ç®³ç®µç®¶ç®·ç®¹",7,"ç¯ç¯ç¯åè¿æ¢å·¥æ»åæ­é¾ä¾èº¬å¬å®«å¼å·©æ±æ±è´¡å±é©å¾æ²èçå¢æè´­å¤è¾èåç®ä¼°æ²½å­¤å§é¼å¤èéª¨è°·è¡æé¡¾åºéå®çåå¯¡æè¤ä¹ææªæ£ºå³å®å è§ç®¡é¦ç½æ¯çè´¯åå¹¿éç°è§å­ç¡å½é¾éºè½¨é¬¼è¯¡ç¸æ¡æè·ªè´µå½è¾æ»æ£éé­å½æè£¹è¿å"],["ba40","ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯",4,"ç¯ç¯ç¯ç¯ç¯ ç¯¢ç¯£ç¯¤ç¯§ç¯¨ç¯©ç¯«ç¯¬ç¯­ç¯¯ç¯°ç¯²",4,"ç¯¸ç¯¹ç¯ºç¯»ç¯½ç¯¿",7,"ç°ç°ç°ç°ç°ç°",5,"ç°ç°ç°"],["ba80","ç°",4,"ç° ",5,"ç°¨ç°©ç°«",12,"ç°¹",5,"ç±éª¸å­©æµ·æ°¦äº¥å®³éªé£æ¨é¯é©å«æ¶µå¯å½åç½ç¿°æ¼ææ±æ¾æçæ±æ±å¤¯æ­èªå£åè±ªæ¯«éå¥½èå·æµ©åµåè·èæ ¸ç¦¾åä½åçè²éæ²³æ¶¸èµ«è¤é¹¤è´ºå¿é»çå¾ç æ¨å¼äº¨æ¨ªè¡¡æè½°åçè¹é¸¿æ´ªå®å¼çº¢åä¾¯ç´å¼åååå¼ä¹å¿½çå£¶è«è¡è´çç³æ¹"],["bb40","ç±",9,"ç±",36,"ç±µ",5,"ç±¾",9],["bb80","ç²ç²",6,"ç²ç²ç²ç²ç²ç²ç² ç²¡ç²£ç²¦ç²§ç²¨ç²©ç²«ç²¬ç²­ç²¯ç²°ç²´",4,"ç²ºç²»å¼§èå¬æ¤äºæ²ªæ·è±ååç¾æ»ç»ååè¯æ§å¾ææ·®åæ¬¢ç¯æ¡è¿ç¼æ¢æ£å¤çªè±¢çæ¶£å®¦å¹»èæé»ç£ºèç°§çå°æ¶çæå¹æè°ç°æ¥è¾å¾½æ¢èåæ¯ææ§åæ æ¦è´¿ç§½ä¼ç©æ±è®³è¯²ç»è¤æå©é­æµæ··è±æ´»ä¼ç«è·ææéè´§ç¥¸å»å¾åºæºç¸ç¨½ç§¯ç®"],["bc40","ç²¿ç³ç³ç³ç³ç³ç³ç³ç³",6,"ç³ç³ç³ç³ç³ç³¡",6,"ç³©",5,"ç³°",7,"ç³¹ç³ºç³¼",13,"ç´",5],["bc80","ç´",14,"ç´¡ç´£ç´¤ç´¥ç´¦ç´¨ç´©ç´ªç´¬ç´­ç´®ç´°",6,"èé¥¥è¿¹æ¿è®¥é¸¡å§¬ç»©ç¼åææ£è¾ç±éåæ¥ç¾æ±²å³å«çº§æ¤å èå·±èæåå­£ä¼ç¥­åæ¸æµå¯å¯è®¡è®°æ¢å¿éå¦ç»§çºªåæ·å¤¹ä½³å®¶å èé¢è´¾ç²é¾åç¨¼ä»·æ¶é©¾å«æ­¼çåå°ç¬ºé´çå¼è©è°å¥¸ç¼è§æ£æ¬ç¢±ç¡·æ£æ¡ç®ä¿­åªåèæ§é´è·µè´±è§é®ç®­ä»¶"],["bd40","ç´·",54,"çµ¯",7],["bd80","çµ¸",32,"å¥è°åé¥¯æ¸æºæ¶§å»ºåµå§å°æµæ±çèæ¡¨å¥è®²å é±éèæ¤ç¤ç¦è¶äº¤éæµéªå¨å¼æé°ç«ä¾¥èç¡è§é¥ºç¼´ç»å¿æéµè½¿è¾å«çªæ­æ¥çç§¸è¡é¶æªå«èæ¡æ°æ·ç«ç«­æ´ç»è§£å§æèè¥çåä»ç¥è¯«å±å·¾ç­æ¤éä»æ´¥è¥ç´§é¦ä»è°¨è¿é³æç¦è¿ç¬æµ¸"],["be40","ç¶",12,"ç¶§",6,"ç¶¯",42],["be80","ç·",32,"å°½å²èå¢èçæ¶é²¸äº¬æç²¾ç²³ç»äºè­¦æ¯é¢éå¢æ¬éå¾çéç«ç«åç¯çªæªç©¶çº çé­ä¹ç¸ä¹éå©ææ§è¼èåå°±çé æçç½å±é©¹èå±åç©ä¸¾æ²®èææ®å·¨å·è·è¸é¯ä¿±å¥æ§ç¬å§æé¹å¨å¦ç·å·ç»¢ææ«ææåçµè§å³è¯ç»åèé§ååå³»"],["bf40","ç·»",62],["bf80","ç¸ºç¸¼",4,"ç¹",4,"ç¹",21,"ä¿ç«£æµé¡éªååå¡å¯å¼æ©æ¥·å¯æ¨åå ªååç çåº·æ·ç³ ææäº¢çèæ·ç¤é å·èæ¯æ£µç£é¢ç§å£³å³å¯æ¸´åå»å®¢è¯¾è¯åå¦æ³åå­ç©ºæå­æ§æ å£æ£å¯æ¯å­çªè¦é·åºè£¤å¤¸å®æè·¨è¯åç­·ä¾©å¿«å®½æ¬¾å¡ç­çæ¡ç¿ç¶æ·åµäºçå²¿çª¥èµå¥é­å"],["c040","ç¹",35,"çº",23,"çºçºçº"],["c080","çº®çº´çº»çº¼ç»ç»¤ç»¬ç»¹ç¼ç¼ç¼ç¼·ç¼¹ç¼»",6,"ç½ç½",9,"ç½ç½é¦æ§æºå¤ææå°æ¬æ©å»éåæåè¡èè¾£å¦è±æ¥èµèå©ªæ æ¦ç¯®éå°æ¾è°°æ½è§æç¼çæ»¥çæ¦ç¼å»éææµªæå³ç¢èä½¬å§¥éªçæ¶åä¹é·é­è¾ç£ç´¯å¡åæèç±»æ³ªæ£±æ¥å·åæ¢¨çé»ç¯±ç¸ç¦»æ¼çæéé²¤ç¤¼èèåæ ä¸½åå±ç ¾åå©åä¾ä¿"],["c140","ç½ç½ç½ç½ç½ç½ç½ ç½£",4,"ç½«ç½¬ç½­ç½¯ç½°ç½³ç½µç½¶ç½·ç½¸ç½ºç½»ç½¼ç½½ç½¿ç¾ç¾",7,"ç¾ç¾ç¾",4,"ç¾",4,"ç¾ç¾ç¾ ç¾¢ç¾£ç¾¥ç¾¦ç¾¨",6,"ç¾±"],["c180","ç¾³",4,"ç¾ºç¾»ç¾¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿",4,"ç¿ç¿ç¿",5,"ç¿¢ç¿£ç¢ç«ç²æ²¥é¶åçå©ä¿©èè²è¿é°å»ææ¶å¸æè¸é¾æç¼ç»ç²®åæ¢ç²±è¯ä¸¤è¾éæ¾äº®è°æ©èåççå¯¥è¾½æ½¦äºæé£å»æåè£çå£çç³æç£·éä¸´é»é³æ·åèµåæç²è±é¶é¾éä¼¶ç¾åçµéµå²­é¢å¦ä»¤æºçæ¦´ç¡«é¦çåç¤æµæ³å­é¾èåç¬¼çª¿"],["c240","ç¿¤ç¿§ç¿¨ç¿ªç¿«ç¿¬ç¿­ç¿¯ç¿²ç¿´",6,"ç¿½ç¿¾ç¿¿èèèèèèèèèèèèèèè¡è£è¤è«",5,"è²è´è¹èºè¼è¾èèèèèèèèèèèèèèè"],["c280","èè",13,"è«",5,"è²",11,"éåæ¢éæ¥¼å¨æç¯æ¼éè¦å¢é¢åºçæ³å¤èé²éºç¢é²è·¯èµé¹¿æ½ç¦å½éæ®é©´åéä¾£æå±¥å±¡ç¼èæ°¯å¾çæ»¤ç»¿å³¦æå­ªæ»¦åµä¹±æ ç¥æ¡è½®ä¼¦ä»æ²¦çº¶è®ºèèºç½é»é£ç®©éª¡è£¸è½æ´éªç»å¦éº»çç èé©¬éªåååä¹°éº¦åè¿èçé¦è®æ»¡èæ¼æ¢æ¼«"],["c340","è¾èèèèèè",5,"èèèèèè£è¦è§è¨è¬è°è³èµè¶è¸è¹è»èè",4,"è",6,"èèè è¢è£è¦è®èµè·è¹è»è¾è¿èèèèèèèè"],["c380","èèèèèèèè",12,"è­è®è°è³è´èµè·è¹",4,"è¿è°©èè«ç²æ°å¿è½ç«èéæ¯çéå¯èåå¸½è²è´¸ä¹ç«ææ¢é¶éç¤æ²¡çåªéæ¯ç¾æ§å¯å¦¹åªé¨é·ä»¬èèæª¬çé°çæ¢¦å­ç¯éé¡ç³è¿·è°å¼¥ç±³ç§è§æ³èå¯å¹æ£ç ç»µåååå¨©ç¼é¢èæçèç§æ¸ºåºå¦èç­æ°æ¿ç¿ææ¯é½æèé¸£é­åå½è°¬æ¸"],["c440","è",5,"èèèèèèèèèè",4,"è¡è¢è£è¤è¦è¨èªè«è¬è¯è²è³èµè¶è·è¸èè",4,"èèèèèèè",5,"èèè",4,"è¤è¥"],["c480","è§è©è«",7,"è´",5,"è¼è½è¾è¿èèèèèèè",6,"æ¹èæ¨¡èç£¨æ©é­æ¹æ«è«å¢¨é»æ²«æ¼ å¯éè°çææç¡äº©å§æ¯å¢æ®å¹åææ¨ç®ç¦ç§ç©æ¿åªåé é£å¨çº³æ°ä¹å¥¶èå¥åç·é¾åæ èæ¼é¹æ·å¢é¦åå«©è½å¦®éåªæ³¥å°¼æä½ å¿è»éæººè«æå¹´ç¢¾æµæ»å¿µå¨é¿é¸å°¿æèå­½å®ééæ¶æ¨æ çåå®"],["c540","è",14,"è¤è¥è¦è¨è©è«è®",4,"èµ",5,"è½è¿èè",4,"èèèèè",5,"èè è¤è¥è¦è§è©è®è²èºè¼è½è¿"],["c580","èèèèèèèèèèèè",7,"èèèèèè ",7,"è©æ§æ³çæ­é®çº½èæµåå¼å¥´åªæå¥³æèçæªæ¦ç³¯è¯ºå¦æ¬§é¸¥æ®´èåå¶æ²¤åªè¶´ç¬å¸æç¶ææçå¾æ¹æ´¾ææ½çç£ç¼çå¤åä¹åºæèªèæåå¨ç®è¢è·æ³¡å¸èå¹è£´èµéªéä½©æ²å·çç °æ¨ç¹æ¾å½­è¬æ£ç¡¼ç¯·è¨æé¹æ§ç¢°å¯ç é¹æ¹æ«åçµæ¯"],["c640","èªè«è¬è­è±èµè¶è·è¸è»è¼èèèèèèèèèèèèèèèèè è¢è£è§è²èµè¶èºè»è¼è¿èèèèèèèèèèèè¢è§è¨è©èªè¬è­è®è°è²è³èµè¶è¸"],["c680","èºè¼",4,"èèèèèèèèèè",9,"è©èªè®è°è²è·è»è½å¤è¾ç²ç®å¹çå»å±è­¬ç¯åçéªé£æ¼ç¢ç¥¨æç¥æ¼é¢è´«åèä¹åªè¹èå¹³å­ç¶è¯å±å¡æ³¼é¢å©ç ´é­è¿«ç²åæéºä»èè¡è©è²åæ´åæ®æµ¦è°±æçææ¬ºæ æå¦»ä¸åæ¼ææ²å¶æ£å¥æ­§ç¦å´èé½æç¥ç¥éªèµ·å²ä¹ä¼å¯å¥ç å¨æ°è¿å¼æ±½æ³£è®«æ"],["c740","è¾è¿èèèèèè",4,"èè",4,"èè¢è°",6,"è¹èºè¾",6,"èèèèèèèèèèèèèèèèèè¡",6,"è¬è­è®"],["c780","è¯èµè»è¾è¿èèèèèèèèèèèèèèèèèèèè¢è£è¤è¦è§è¨è«è¬è­æ°æ´½çµæ¦ééåè¿ç­¾ä»è°¦ä¹¾é»é±é³åæ½é£æµè°´å åµæ¬ æ­æªåèç¾å¢è·å¼ºæ¢æ©é¹æ²ææ¡¥ç§ä¹ä¾¨å·§éæ¬ç¿å³­ä¿çªåèä¸æ¯çªé¦ä¾µäº²ç§¦ç´å¤è¹æç¦½å¯æ²éè½»æ°¢å¾å¿æ¸ææ´æ°°æé¡·è¯·åºç¼ç©·ç§ä¸é±çæ±åéæ³è¶åºèæ²èº¯å±é©±æ¸ "],["c840","è®è¯è³",4,"èºè»è¼è¾è¿èèèèèèèèè",5,"èèèè",5,"è©",7,"è²",5,"è¹èºè»è¾",7,"èèè"],["c880","è",6,"è",4,"èèèèè è¢è¤",4,"èªè®è¯è°è²è´è·è¹è»è¼åå¨¶é¾è¶£å»åé¢§æéæ³å¨çæ³ç¬å¸åç¼ºçç¸å´é¹æ¦·ç¡®éè£ç¾¤ç¶çåæç¤å£¤æå·è®©é¥¶æ°ç»æ¹ç­å£¬ä»äººå¿é§ä»»è®¤åå¦çº«æä»æ¥æè¸èè£èçæº¶å®¹ç»åææèè¹è åå­ºå¦è¾±ä¹³æ±å¥è¤¥è½¯é®èçéé°æ¶¦è¥å¼±ææ´è¨è®é³å¡èµä¸å"],["c940","è½",4,"èèèèèèè",7,"èèèèèèè è¢",12,"è°è±è³èµè¶è·è»è¼è¾èèèèèèèèèèèèèèè"],["c980","è",4,"èè¡è¢è¤è§",4,"è­è®è¯è±",10,"è½è¾èèèä¼æ£æ¡åä¸§æéªæ«å«çè²æ¶©æ£®å§èç æå¹æ²çº±å»å¥çç­æçè«æå±±å ç½è¡«éªéæèµ¡è³åæ±æç¼®å¢ä¼¤åèµæä¸å°è£³æ¢¢æç¨ç§èåºé¶å°å¨éµç»å¥¢èµèèèèµ¦æå°ææ¶ç¤¾è®¾ç ·ç³å»ä¼¸èº«æ·±å¨ ç»ç¥æ²å®¡å©¶çè¾ææ¸å£°çç¥ç²åç»³"],["ca40","è",8,"èèèèèèèèèèèèèèè è¢",8,"è­",9,"è¾",4,"èèèèè",10],["ca80","èèèèèèè",4,"è¥è¦è§è©",8,"è³èµè¶è·è¸è¼è½è¿èèççå©èå£å¸å¤±ç®æ½æ¹¿è¯å°¸è±åç³æ¾æ¶ä»é£èå®è¯å²ç¢ä½¿å±é©¶å§å¼ç¤ºå£«ä¸æ¿äºæ­èªéå¿æ¯åå¬éä»ä¾éé¥°æ°å¸æå®¤è§è¯æ¶æé¦å®å¯¿æå®åç¦å½è¬æ¢æ¢³æ®æè¾åèæ·çä¹¦èµå­°çè¯ææç½²èé»é¼ å±æ¯è¿°æ ææç«å¢åº¶æ°æ¼±"],["cb40","èèèè",6,"è",10,"è",6,"è¥è¦è§è©è«è¬è­è±",5,"è¸èº",6,"è",6,"è",4,"èè"],["cb80","èè",5,"è",6,"è¥è¦è§è¨èª",14,"æå·èæè¡°ç©å¸æ æ´éåç½è°æ°´ç¡ç¨å®ç¬é¡ºèè¯´ç¡æçæ¯æå¶æç§å¸ä¸æ­»èå¯ºå£åä¼ºä¼¼é¥²å·³æ¾è¸æé¢éå®è®¼è¯µæèæå½èé¥ä¿ç´ éç²å³å¡æº¯å®¿è¯èé¸èç®è½ééç»¥é«ç¢å²ç©éé§ç¥å­æç¬èæ¢­åç¼©çç´¢éæå¡ä»å®å¥¹å¡"],["cc40","è¹èºè¼è½è¾è",4,"è",10,"èèèèè",15,"è¨èª",13,"è¹èºè»è½è¾è¿è"],["cc80","è",11,"èèè",4,"èèèèè è¡è£",7,"ç­æè¹è¸èèæ¬å°æ³°éå¤ªææ±°åæè´ªç«æ»©åæªç°æ½­è°­è°å¦æ¯¯è¢ç¢³æ¢å¹ç­æ±¤å¡æªå æ£ èåç³åèººæ·è¶ç«ææ¶æ»ç»¦èæ¡éæ·é¶è®¨å¥ç¹è¤è¾ç¼èªæ¢¯åè¸¢éæé¢è¹å¼ä½æ¿åææ¶åå±å¤©æ·»å¡«ç°çæ¬èèææ¡è¿¢çºè·³è´´éå¸åå¬ç"],["cd40","è­è¯è°è²",6,"è",6,"è",4,"èè",5,"è",4,"è¥è¦è«è­è®è²è³è·è¸è¹è»",4,"èèèèèèèèèèèèèè"],["cd80","èè è¡è¢è£è¥è¦è§è¨èªè«è¬è¯èµè¶è·èºè»è¼è½è¿èèèèèèèèèèèèæ±å»·åäº­åº­æºèéæ¡é®ç³åéå½¤ç«¥æ¡¶æç­ç»çå·æå¤´éå¸ç§çªå¾å¾éæ¶å± åååæ¹å¢æ¨é¢è¿èè¤ªéåå±¯èææè±é¸µéé©®é©¼æ¤­å¦¥æå¾æåèæ´¼å¨ç¦è¢æ­ªå¤è±å¼¯æ¹¾ç©é¡½ä¸¸ç·å®ç¢æ½æçæå®å©ä¸èæ±ªçäº¡æç½å¾æºæå¿å¦å¨"],["ce40","èèèèè è¤è¦è§è¨èªè«è¬è­è¯è°è²è³èµè¶è¸è¹èºè¼è½è",6,"èèèèèèèèèèèè",5,"è¡è¢è¦",7,"è¯è±è²è³èµ"],["ce80","è·è¸è¹èºè¿èèèèèèèèè",4,"èèèè",6,"è ",4,"å·å¾®å±é¦è¿æ¡å´å¯æä¸ºæ½ç»´èèå§ä¼ä¼ªå°¾çº¬æªèå³çèåé­ä½æ¸­è°å°æ°å«çæ¸©èæé»çº¹å»ç¨³ç´é®å¡ç¿ç®æèæ¶¡çªææ¡å§æ¡æ²å·«åé¨ä¹æ±¡è¯¬å±æ èæ¢§å¾å´æ¯æ­¦äºæåèä¼ä¾®åæé¾æ¤ç©å¿å¡æè¯¯æçæè¥¿ç¡ç½æ°å»å¸é¡çº"],["cf40","è¥è¦è§è©èªè®è°è±è²è´è¶è·è¸è¹è»è¼è¾è¿è",4,"èèèè",4,"è",6,"èèèèè¡è¢è£è¤è¦è§è¨è©è«è¬è­è¯",9],["cf80","èºè»è¼è½è¿è è è è ",5,"è ",7,"è è è è è è ",4,"è £ç¨æ¯å¸æèå¤æçç¯æºªæ±çæªè¢­å¸­ä¹ åª³åé£æ´ç³»éæç»çè¾å£éè¾æå³¡ä¾ ç­ä¸å¦å¤åæé¨åä»é²çº¤å¸è´¤è¡è·é²æ¶å¼¦å«æ¾é©ç°ç®å¿èºé¦ç¾¡å®ªé·éçº¿ç¸å¢é¶é¦ç®±è¥æ¹ä¹¡ç¿ç¥¥è¯¦æ³åäº«é¡¹å··æ©¡ååè±¡è§ç¡éåå®å£éæ¶å®µæ·æ"],["d040","è ¤",13,"è ³",5,"è ºè »è ½è ¾è ¿è¡è¡è¡è¡",5,"è¡",5,"è¡è¡è¡è¡",6,"è¡¦è¡§è¡ªè¡­è¡¯è¡±è¡³è¡´è¡µè¡¶è¡¸è¡¹è¡º"],["d080","è¡»è¡¼è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢",4,"è¢",4,"è¢£è¢¥",5,"å°å­æ ¡èå¸ç¬ææ¥äºæ­èéåææºéªæèè°åæ¢°å¸è¹ææ³æ³»è°¢å±èªè¯éæ¬£è¾æ°å¿»å¿ä¿¡è¡æè¥ç©æºå´ååå½¢é¢è¡éå¹¸ææ§å§åå¶è¸åæ±¹éçä¼ä¿®ç¾æ½åéç§è¢ç»£å¢æéèåé¡»å¾è®¸èéåæ­åºçæ¤çµ®å©¿ç»ªç»­è½©å§å®£æ¬æç"],["d140","è¢¬è¢®è¢¯è¢°è¢²",4,"è¢¸è¢¹è¢ºè¢»è¢½è¢¾è¢¿è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£",4,"è£ è£¡è£¦è£§è£©",6,"è£²è£µè£¶è£·è£ºè£»è£½è£¿è¤è¤è¤",5],["d180","è¤è¤",4,"è¤è¤",4,"è¤",4,"è¤¢è¤£è¤¤è¤¦è¤§è¤¨è¤©è¤¬è¤­è¤®è¤¯è¤±è¤²è¤³è¤µè¤·éç£ç©ç»é´èå­¦ç©´éªè¡åçå¾ªæ¬è¯¢å¯»é©¯å·¡æ®æ±è®­è®¯éè¿åæ¼é¸¦é¸­åä¸«è½çèå´è¡æ¶¯éåäºè®¶çå½éçæ·¹çä¸¥ç èå²©å»¶è¨é¢éçæ²¿å¥æ©ç¼è¡æ¼è³å °çåç éåå½¦ç°å®´è°éªæ®å¤®é¸¯ç§§æ¨æ¬ä½¯ç¡ç¾æ´é³æ°§ä»°çå»æ ·æ¼¾éè°å¦ç¶"],["d240","è¤¸",8,"è¥è¥è¥",24,"è¥ ",5,"è¥§",19,"è¥¼"],["d280","è¥½è¥¾è¦è¦è¦è¦è¦",26,"æå°§é¥çªè°£å§å¬èè¯è¦èæ¤°åè¶ç·éå¶ä¹é¡µæä¸å¶æ³èå¤æ¶²ä¸å£¹å»æé±ä¾ä¼è¡£é¢å¤·éç§»ä»ªè°çæ²å®å§¨å½æ¤èåå·²ä¹ç£ä»¥èºææéå±¹äº¿å½¹èé¸èç«äº¦è£ææ¯å¿ä¹çæº¢è¯£è®®è°è¯å¼ç¿¼ç¿ç»èµè«å æ®·é³é´å§»åé¶æ·«å¯é¥®å°¹å¼é"],["d340","è¦¢",30,"è§è§è§è§è§è§è§è§è§è§è§è§ è§¡è§¢è§¤è§§è§¨è§©è§ªè§¬è§­è§®è§°è§±è§²è§´",6],["d380","è§»",4,"è¨",5,"è¨",21,"å°è±æ¨±å©´é¹°åºç¼¨è¹è¤è¥è§èè¿èµ¢çå½±é¢ç¡¬æ åæ¥ä½£èçåº¸éè¸è¹åæ³³æ¶æ°¸æ¿åç¨å¹½ä¼æ å¿§å°¤ç±é®éç¹æ²¹æ¸¸éæåå³ä½éè¯±åå¹¼è¿æ·¤äºçæ¦èæèä½ä¿é¾é±¼ææ¸æ¸éäºå¨±é¨ä¸å±¿ç¦¹å®è¯­ç¾½çåèéåéå»å³ªå¾¡ææ¬²ç±è²èª"],["d440","è¨",31,"è¨¿",8,"è©",21],["d480","è©",25,"è©º",6,"æµ´å¯è£é¢è±«é©­é¸³æ¸å¤åå£è¢åæ´è¾å­ååç¿æºç¼è¿èæ¿æ¨é¢æ°çº¦è¶è·é¥å²³ç²¤ææ¦éèäºé§åé¨åè¿è´éæéµå­åç ¸ææ ½åç¾å®°è½½åå¨å±ææèµèµèè¬é­ç³å¿è»æ£æ©æ¾¡è¤èºåªé çç¶ç¥è´£æ©åæ³½è´¼æå¢ææ¾èµ æå³æ¸£æ­è½§"],["d540","èª",7,"èª",7,"èª",46],["d580","è«",32,"é¡é¸ç¨æ æ¦¨åä¹ç¸è¯ææå®çªåºå¯¨ç»æ¯¡è©¹ç²æ²¾çæ©è¾å´­å±è¸æ å æç«æ¹ç»½æ¨ç« å½°æ¼³å¼ ææ¶¨æä¸å¸è´¦ä»èç´éææ­æ¾æ²¼èµµç§ç½©åèå¬é®æå²è°è¾èéèè¿æµçæççç §è»è´éä¾¦æç¹è¯éæ¯ééµè¸æ£çå¾ç°äºææ´æ¯æ­£æ¿"],["d640","è«¤",34,"è¬",27],["d680","è¬¤è¬¥è¬§",30,"å¸§çéè¯èææ¯å±èç¥è¢èæ±ä¹ç»èç´æ¤æ®æ§å¼ä¾åææ­¢è¶¾åªæ¨çº¸å¿ææ·è³è´ç½®å¸å³å¶æºç§©ç¨è´¨ççæ»æ²»çªä¸­çå¿ éè¡·ç»ç§è¿éä»²ä¼èå¨å·æ´²è¯ç²¥è½´èå¸åç±å®æ¼éª¤ç æ ªèæ±çªè¯¸è¯éç«¹çç®æç©å±ä¸»èæ±å©èè´®é¸ç­"],["d740","è­",31,"è­§",4,"è­­",25],["d780","è®",24,"è®¬è®±è®»è¯è¯è¯ªè°è°ä½æ³¨ç¥é©»æçªæ½ä¸ç è½¬æ°èµç¯æ¡©åºè£å¦æå£®ç¶æ¤é¥è¿½èµå ç¼è°åææåæ¡ç¢èéåçç¼æµå¹å¨èµå§¿æ»æ·å­ç´«ä»ç±½æ»å­èªæ¸å­é¬æ£è¸ªå®ç»¼æ»çºµé¹èµ°å¥æç§è¶³åæç¥è¯é»ç»é»çºå´éæç½ªå°éµæ¨å·¦ä½æåä½ååº§"],["d840","è°¸",8,"è±è±è±è±è±è±è±è±",7,"è±è±è±è±è±",5,"è±£",6,"è±¬",6,"è±´è±µè±¶è±·è±»",6,"è²è²è²è²"],["d880","è²è²è²",6,"è²è²è²è²",20,"äºä¸åä¸å»¿åä¸äºä¸é¬²å­¬å©ä¸¨ç¦ºä¸¿åä¹å¤­ç»å®æ°åè¤é¦æ¯ç¾é¼ä¸¶äºé¼ä¹ä¹©äºèå­å¬åä»ååå£å¥å®é¥èµååµå¦å®å¾èµå¦å£åååå­å³å¿åååå¡åè¯å½åååååç½äº»ä»ä»ä»ä»¨ä»¡ä»«ä»ä¼ä»³ä¼¢ä½¤ä»µä¼¥ä¼§ä¼ä¼«ä½ä½§æ¸ä½ä½"],["d940","è²®",62],["d980","è³­",32,"ä½ä½ä¼²ä¼½ä½¶ä½´ä¾ä¾ä¾ä¾ä½¾ä½»ä¾ªä½¼ä¾¬ä¾ä¿¦ä¿¨ä¿ªä¿ä¿ä¿£ä¿ä¿ä¿ä¿¸å©åä¿³å¬åå®å­ä¿¾ååå¥å¨å¾ååååå¬å»å¥å§å©åºååå­å¬å¦å®ååä»æ°½ä½ä½¥ä¿é¾ æ±ç±´å®å·½é»é¦åå¤å¹åè¨åå«å¤åäº åäº³è¡®è¢¤äºµèè£ç¦å¬´è ç¾¸å«å±å½å¼"],["da40","è´",14,"è´ èµèµèµèµèµ¥èµ¨èµ©èµªèµ¬èµ®èµ¯èµ±èµ²èµ¸",8,"è¶è¶è¶è¶è¶è¶è¶",4,"è¶è¶è¶",9,"è¶ è¶¡"],["da80","è¶¢è¶¤",12,"è¶²è¶¶è¶·è¶¹è¶»è¶½è·è·è·è·è·è·è·è·è·è·è·è·è·ååå¢å¥è® è®¦è®§è®ªè®´è®µè®·è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯ è¯¤è¯¨è¯©è¯®è¯°è¯³è¯¶è¯¹è¯¼è¯¿è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è° è°¡è°¥è°§è°ªè°«è°®è°¯è°²è°³è°µè°¶å©åºéé¢é¡é±éªé½é¼ééééé§é¬é²é´éééé°ééééé¬é¡é´é³é¶éº"],["db40","è·è·è·è·è· è·¡è·¢è·¥è·¦è·§è·©è·­è·®è·°è·±è·²è·´è·¶è·¼è·¾",6,"è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸",7,"è¸ è¸¡è¸¤",4,"è¸«è¸­è¸°è¸²è¸³è¸´è¸¶è¸·è¸¸è¸»è¸¼è¸¾"],["db80","è¸¿è¹è¹è¹è¹",4,"è¹",5,"è¹",11,"è¹§è¹¨è¹ªè¹«è¹®è¹±é¸é°ééé¾ééééé¦é¢éééé«é¯é¾éé¢éé£é±é¯é¹ééåå¥å¢å¬å­å¾å¿ååå°åç®çå»´åµå¼é¬¯å¶å¼çå·¯åå©å¡å¡¾å¢¼å£å£å©å¬åªå³å¹å®å¯åå»åå©åå«åå¼å»å¨å­å¶å³å­å¤åå²åå§å´åå åååååå¸å´å¯å¸å¤å"],["dc40","è¹³è¹µè¹·",4,"è¹½è¹¾èºèºèºèºèºèº",6,"èºèºèºèº",6,"èºèº",11,"èº­èº®èº°èº±èº³",6,"èº»",7],["dc80","è»",10,"è»",21,"å å å½å­å å å å¡å  å¡¥å¡¬å¢å¢å¢å¢é¦¨é¼æ¿è¹è½è¿èèè¨èèèèèè«è¸è¾è°èèè£èè·è®èèèè©è´è¡èªèèèè¤è¡èè·è¤èèèè´èèèè»èèèèèèè èèèèèèèè¼è´è±èèè¯èèèèèèè è­èºè³è¦è¥"],["dd40","è»¥",62],["dd80","è¼¤",32,"è¨èè©è¬èªè­è®è°è¸è³è´è èªèèèè¼è¶è©è½è¸è»èèè¨èºè¼èèè¥èå èèèè½èèè¸èèèèèèè¸è¹èªèèè¦è°è¡èèèèè³èèèºèè¸è¼èè©è¶èèè±è­èèèè¦è½èèè¿èºè è¡è¹è´èè¥è£èçè¸è°è¹èèº"],["de40","è½",32,"è½ªè¾è¾è¾è¾è¾ è¾¡è¾¢è¾¤è¾¥è¾¦è¾§è¾ªè¾¬è¾­è¾®è¾¯è¾²è¾³è¾´è¾µè¾·è¾¸è¾ºè¾»è¾¼è¾¿è¿è¿è¿"],["de80","è¿",4,"è¿è¿è¿è¿è¿è¿ è¿¡è¿£è¿§è¿¬è¿¯è¿±è¿²è¿´è¿µè¿¶è¿ºè¿»è¿¼è¿¾è¿¿éééééééèè»è¿è¼èèè¨è¤èèºç¢èè²è»è¤è¨èèè¹è®èèè¹è·è°èèèè¿è§èè©èè¼å»¾å¼å¤¼å¥è·å¥å¥å¥åå°¢å°¥å°¬å°´ææªææ»ææææ®æ¢æ¶æ¹æææ­æ¶æ±æºææ´æ­æ¬ææ©æ®æ¼æ²æ¸æ æ¿ææææææ¾æææææ ææ¦æ¡æææ­æ"],["df40","ééé£é¤é¥é§",5,"é°",4,"é·é¹éºé½é¿ééééé",4,"ééééééé",5,"é¤é¦é§é©éªé«é¬é¯",4,"é¶",6,"é¾é"],["df80","ééééééé",4,"ééééééééé é¤é¥é§é¨é©é«é­é²é·é¼é½é¿éæºæ·æ¸ææºææææ¤æ¢ææ¥æ®å¼å¿çå¼åå±å½å©å¨å»åååååååååå¡ååå£å²ååå·å±å¤åååå¶å¦ååå­åå´åå§å¦ååå²å£åå»å¿ååååå©åªå¤ååååå§å å½åå³å¢å£ååå§åªå§ååµåå­ååå¿åå¼"],["e040","éééééééééééééééééé é£é¤é¥é©éªé¬é®é°é±é²é³éµé¶é·é¹éºé»é¼é¿éééé",19,"ééé"],["e080","ééé é¡é¤",10,"é°é²",6,"éº",8,"éå·ååµå¶å·å³å°ååååå±å¹åååå¾ååå»åå½å¾åååªå·åååå«å¬åå¦ååå¯å¥å²å³ååå¨åµå¤è¾ååååå¤å£å¾åå§å­åå¹åå¬åå¢åååååå¤å±å«å»å¼ååå¯åååå¡åµå«å¹å¿ååååå¸å¸å¸å¸å¸±å¸»å¸¼"],["e140","éééééééééééééé é¦é§é¨é«é­é³éºé»é¼é",4,"éééééé",6,"é",5,"é¤",5,"é«é¬é°é±é²é³é¶é·é¸é¹é»"],["e180","é¼",10,"éééé",9,"é",8,"å¸·å¹å¹å¹å¹å¹¡å²å±ºå²å²å²å²å²å²å²å²å²å²µå²¢å²½å²¬å²«å²±å²£å³å²·å³å³å³¤å³å³¥å´å´å´§å´¦å´®å´¤å´å´å´åµå´¾å´´å´½åµ¬åµåµ¯åµåµ«åµåµåµ©åµ´å¶å¶å¶è±³å¶·å·å½³å½·å¾å¾å¾å¾å¾å¾å¾å¾¨å¾­å¾µå¾¼è¡¢å½¡ç­ç°ç´ç·ç¸çççççç¨ç¯ç©ç²ç´ç·çç³ççº"],["e240","é¦",62],["e280","é¥",32,"ç»ççç¡ççççç¢ç¹ç¥ç¬ç¸ç±çççç ç¬ç¯ç¾èå¤¥é£§å¤¤å¤é¥£é¥§",5,"é¥´é¥·é¥½é¦é¦é¦é¦é¦é¦é¦é¦é¦é¦åºåºåºåºåº¥åº åº¹åºµåº¾åº³èµå»å»å»å»¨å»ªèºå¿å¿å¿å¿æå¿®æå¿¡å¿¤å¿¾ææå¿ªå¿­å¿¸ææµæ¦ææææ©æ«ææ¿æ¡æ¸æ¹æ»æºæ"],["e340","é",45,"éµ",16],["e380","é",7,"é",24,"æªæ½æææ­ææææææ¬æ»æ±æææææ´æ æ¦ææ£æ´æææ«ææµæ¬ææ§æ·ææµå¿é³é©é«é±é³éµé¶é¼é¾éééééééééééééééä¸¬ç¿ææ°µæ±æ±æ±æ²£æ²æ²æ²æ²æ±¨æ±©æ±´æ±¶æ²æ²©æ³æ³æ²­æ³·æ³¸æ³±æ³æ²²æ³ æ³æ³ºæ³«æ³®æ²±æ³æ³¯æ³¾"],["e440","é¨",5,"é¯",24,"é",31],["e480","é©",32,"æ´¹æ´§æ´æµæµæ´æ´æ´æ´æ´«æµæ´®æ´µæ´æµæµæµæ´³æ¶æµ¯æ¶æ¶ æµæ¶æ¶æµæµ æµ¼æµ£æ¸æ·æ·æ·æ¸æ¶¿æ· æ¸æ·¦æ·æ·æ¸æ¶«æ¸æ¶®æ¸«æ¹®æ¹æ¹«æº²æ¹æºæ¹æ¹æ¸²æ¸¥æ¹æ»æº±æºæ» æ¼­æ»¢æº¥æº§æº½æº»æº·æ»æº´æ»æºæ»æºæ½¢æ½æ½æ¼¤æ¼æ»¹æ¼¯æ¼¶æ½æ½´æ¼ªæ¼æ¼©æ¾æ¾æ¾æ½¸æ½²æ½¼æ½ºæ¿"],["e540","é",51,"é¿",10],["e580","é",31,"é«æ¿æ¾§æ¾¹æ¾¶æ¿æ¿¡æ¿®æ¿æ¿ æ¿¯çç£çç¹çµççå®å®å®å®å®¥å®¸ç¯éªæ´å¯¤å¯®è¤°å¯°è¹è¬è¾¶è¿è¿è¿¥è¿®è¿¤è¿©è¿¦è¿³è¿¨éééé¦éééé¡éµé¶é­é¯ééééé¨éé¢éæ¹é´é½ééééå½å½å½å½å°»å«å±å±å­±å±£å±¦ç¾¼å¼ªå¼©å¼­è´å¼¼é¬»å±®å¦å¦å¦å¦©å¦ªå¦£"],["e640","é¬",34,"é",27],["e680","é¬",29,"éééå¦å§å¦«å¦å¦¤å§å¦²å¦¯å§å¦¾å¨å¨å§å¨å§£å§å§¹å¨å¨å¨²å¨´å¨å¨£å¨å©å©§å©å©å¨¼å©¢å©µè¬åªªåªå©·å©ºåª¾å««åª²å«å«åª¸å« å«£å«±å«å«¦å«å«å¬å¬å¬å¬²å¬·å­å°å°å­å­¥å­³å­å­å­¢é©µé©·é©¸é©ºé©¿é©½éªéªéªéªéªéªéªéªéªéªéªéªéªéªéª éª¢éª£éª¥éª§çºçº¡çº£çº¥çº¨çº©"],["e740","é",7,"é",54],["e780","é",32,"çº­çº°çº¾ç»ç»ç»ç»ç»ç»ç»ç»ç»ç»ç» ç»¡ç»¨ç»«ç»®ç»¯ç»±ç»²ç¼ç»¶ç»ºç»»ç»¾ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼¡",6,"ç¼ªç¼«ç¼¬ç¼­ç¼¯",4,"ç¼µå¹ºç¿å·ç¾éççç®ç¢ççççç·ç³çççç¥çé¡¼çç©ç§ççºç²ççªçç¦ç¥ç¨ç°ç®ç¬"],["e840","é¯",14,"é¿",43,"é¬é­é®é¯"],["e880","é°",20,"ééééééééé¦é»éé çççççççç·ç­ç¾çççççççç¨ç©çç§ççºéªé«é¬æææææ©æ¥ææªæ³ææ§æµæ¨ææ­ææ·æ¼æ°æ ææ æ©æ°æ ææµææ³ææ ææ¸æ¢æ ææ½æ ²æ ³æ¡ æ¡¡æ¡æ¡¢æ¡æ¡¤æ¢æ æ¡æ¡¦æ¡æ¡§æ¡æ ¾æ¡æ¡æ ©æ¢µæ¢æ¡´æ¡·æ¢æ¡«æ£æ¥®æ£¼æ¤æ¤ æ£¹"],["e940","é§é³é½éééééé é®é´éµé·",7,"é",42],["e980","é«",32,"æ¤¤æ£°æ¤æ¤æ¥æ££æ¤æ¥±æ¤¹æ¥ æ¥æ¥æ¦æ¥«æ¦æ¦æ¥¸æ¤´æ§æ¦æ¦æ§æ¦æ¥¦æ¥£æ¥¹æ¦æ¦§æ¦»æ¦«æ¦­æ§æ¦±æ§æ§æ§æ¦æ§ æ¦æ§¿æ¨¯æ§­æ¨æ¨æ©¥æ§²æ©æ¨¾æª æ©æ©æ¨µæªæ©¹æ¨½æ¨¨æ©æ©¼æªæªæª©æªæª«ç·çæ®æ®æ®æ®æ®æ®æ®æ®æ®æ®¡æ®ªè½«è½­è½±è½²è½³è½µè½¶è½¸è½·è½¹è½ºè½¼è½¾è¾è¾è¾è¾è¾"],["ea40","é",27,"é¬é¿éééééé é£",6,"é«é¬é­é¯é°é·é¸é¹éºé¾éééééééééé"],["ea80","ééééééé é£é¥é¦é«é­",4,"é³é¸",12,"éééè¾è¾è¾è¾è¾è»æææææ¢æ¡æ¥æ¤æ¬è§ç¯ç´ç¿çççæ´æ®æ¯æ°æææ²æææçæ·ææ´æ±æ¶æµèææææææ¡ææ·æææ§ææ¾æææ¦æ©è´²è´³è´¶è´»è´½èµèµèµèµèµèµèµèµèµè§è§è§è§è§è§è§è§ç®ççç¦ç¯ç¾ç¿çççççææ²æ°"],["eb40","éééééééééé",9,"é¨",7,"é±é²é´éµé·é¸éºé»é¿éééééééééé",9,"é¡",6,"é«"],["eb80","é¬é­é®é°é±é²é´éµé¸éºé»é¼é½é¿éééééééééééé",4,"ééé æ¿æèæ¯ªæ¯³æ¯½æ¯µæ¯¹æ°æ°æ°æ°æ°æ°æ°æ°æ°¡æ°©æ°¤æ°ªæ°²æµææ«çççç°è¢åèèèè¼æè½è±è«è­è´è·è§è¨è©èªèèèèèèæèè«è±è´è­èèè²è¼æèè±è¶èè¬èè²èèèè´èèè±è è©è¼è½è­è§å¡åªµèèèæ»è£èªèæ¦èè»"],["ec40","é¡",8,"é«é¬é®é¯é±é³",4,"éºé»é¼é½é¿",18,"ééééééééé£é¤é¦é§é¨éª",7],["ec80","é²éµé·",4,"é½",7,"é",4,"ééééééééé",4,"èè¦æ¬¤æ¬·æ¬¹æ­æ­æ­é£é£é£é£é£é£æ®³å½æ¯è§³æé½ææ¼æææææææççççç»çç·ç«ç±ç¨ççççç¯ç±ç³çç¨çç²çç¸çºçç³çµç¨ç ç çç§ç¹çç¨ç¬çç¦ç¹æ¾æ½æææç¤»ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥¢ç¥ç¥ ç¥¯ç¥§ç¥ºç¦ç¦ç¦ç¦§ç¦³å¿å¿"],["ed40","ééé¡é¢é¤",6,"é¬é®é°é±é³éµ",46],["ed80","é¤é¥é¨é®",4,"é´é·",23,"æ¼æææ§æææ£æ«ææææ©ææææèè¿æ²æ³¶æ·¼ç¶ç¸ç ç ç ç ç æ«ç ­ç ç ç ¹ç ºç »ç ç ¼ç ¥ç ¬ç £ç ©ç¡ç¡­ç¡ç¡ç ¦ç¡ç¡ç¡ç¡ªç¢ç¢ç¢ç¢ç¢ç¢¡ç¢£ç¢²ç¢¹ç¢¥ç£ç£ç£ç£¬ç£²ç¤ç£´ç¤ç¤¤ç¤ç¤´é¾é»¹é»»é»¼ç±ççç¹çççç¢çç­ç¦çµç¸çççççç¨"],["ee40","é ",62],["ee80","é¡",32,"ç¢ç¥ç¿çç½ççççç ç°çµç½çºçççççç²ç¹çç½ç½¡ç½è©ç½¨ç½´ç½±ç½¹ç¾ç½¾çç¥è ²éééééééééééééééé£é¤é«éªé­é¬é¯é°é²é´é¶",4,"é¼é½é¿éé",6,"éééééééééééé é¢é¤é¥é§é¨éª"],["ef40","é¡¯",5,"é¢é¢é¢é¢é¢é¢£é¢¨",37,"é£é£é£é£é£é£é£é£é£ ",4],["ef80","é£¥é£¦é£©",30,"é©é«é®é¯é³é´éµé·é¹é¼é½é¿éééééééééé",4,"éééééé¢éªé«é©é¬é±é²é´é¶é·é¸é¼é¾é¿ééµééééééééééééééééééé¡é¢é¤",8,"é¯é±é²é³éºç§ç¬éç§ç§­ç§£ç§«ç¨åµç¨ç¨ç¨ç¨"],["f040","é¤",4,"é¤é¤é¤",28,"é¤¯",26],["f080","é¥",9,"é¥",12,"é¥¤é¥¦é¥³é¥¸é¥¹é¥»é¥¾é¦é¦é¦ç¨¹ç¨·ç©é»é¦¥ç©°ççççç¤çç ç¬é¸ é¸¢é¸¨",4,"é¸²é¸±é¸¶é¸¸é¸·é¸¹é¸ºé¸¾é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹£é¹¦",6,"é¹±é¹­é¹³çççç çç¬ç£ç³ç´ç¸çç±ç°ççççç£ç¨ç¦ç¤ç«ç§çç±ç¼ç¿ççççççç¥ççç"],["f140","é¦é¦é¦",10,"é¦¦é¦§é¦©",47],["f180","é§",32,"çç¼ç¢ç çç­ç°ç¿çµçç¾ç³çççççç«ç¯ç¿ç«¦ç©¸ç©¹çªçªçªçªçª¦çª çª¬çª¨çª­çª³è¡¤è¡©è¡²è¡½è¡¿è¢è¢¢è£è¢·è¢¼è£è£¢è£è££è£¥è£±è¤è£¼è£¨è£¾è£°è¤¡è¤è¤è¤è¤è¤´è¤«è¤¶è¥è¥¦è¥»çè¥ç²ç´çèèèèè è¢è¥è¦è§è©è¨è±èèµèèèèè©è±è¦é¡¸é¢é¢"],["f240","é§º",62],["f280","é¨¹",32,"é¢é¢é¢é¢é¢é¢é¢é¢é¢é¢¡é¢¢é¢¥é¢¦èèè¬è®è¿èºè¼è»è¨èèè¬èè§è£èªèè©è¶èèµèè°èºè±è¯èèè´è©è±è²è­è³èèèè´èèèèèè¸èèèèè£è»èè¥è®èè¾èè´è±è©è·è¿èè¢è½è¾è»è è°èè®èèè£è¼è¤èè¥èè¯è¨è"],["f340","é©",17,"é©²éªéªéªéªéªéªéªéª¦éª©",6,"éª²éª³éª´éªµéª¹éª»éª½éª¾éª¿é«é«é«",4,"é«é«é«é«é«é«é«é«é«é«é«é«é«"],["f380","é«é«é« é«¢é«£é«¤é«¥é«§é«¨é«©é«ªé«¬é«®é«°",8,"é«ºé«¼",6,"é¬é¬é¬èèèè­èèè«è¥è¬èµè³èèè½èèèèèªè è®è è è¾è è è ¡è ¹è ¼ç¼¶ç½ç½ç½èç«ºç«½ç¬ç¬ç¬ç¬ç¬ç¬«ç¬ç­ç¬¸ç¬ªç¬ç¬®ç¬±ç¬ ç¬¥ç¬¤ç¬³ç¬¾ç¬ç­ç­ç­ç­µç­ç­ç­ ç­®ç­»ç­¢ç­²ç­±ç®ç®¦ç®§ç®¸ç®¬ç®ç®¨ç®ç®ªç®ç®¢ç®«ç®´ç¯ç¯ç¯ç¯ç¯ç¯¥ç¯¦ç¯ªç°ç¯¾ç¯¼ç°ç°ç°"],["f440","é¬é¬",5,"é¬é¬é¬é¬",10,"é¬ é¬¡é¬¢é¬¤",10,"é¬°é¬±é¬³",7,"é¬½é¬¾é¬¿é­é­é­é­é­é­é­é­é­é­",5],["f480","é­",32,"ç°ç°ªç°¦ç°¸ç±ç±è¾èèèè¬è¡è¡è¢è£è­è¯è¨è«è¸è»è³è´è¾èèèèèèè¨è¡¾è¢è¢è£è£è¥ç¾ç¾ç¾§ç¾¯ç¾°ç¾²ç±¼æç²ç²ç²ç²ç²¢ç²²ç²¼ç²½ç³ç³ç³ç³ç³ç³ç³ç³¨è®æ¨ç¾¿ç¿ç¿ç¿¥ç¿¡ç¿¦ç¿©ç¿®ç¿³ç³¸çµ·ç¶¦ç¶®ç¹çºéº¸éº´èµ³è¶è¶è¶è¶±èµ§èµ­è±è±ééééé¤"],["f540","é­¼",62],["f580","é®»",32,"é¢é¡é°é©é¯é½é¾é²é´é¹éééééé¢é£éªé­é®é¯éµé´éºè±é¹¾è¶¸è·«è¸è¹è¹©è¶µè¶¿è¶¼è¶ºè·è·è·è·è·è·è·è·è·è·¬è··è·¸è·£è·¹è·»è·¤è¸è·½è¸è¸è¸è¸¬è¸®è¸£è¸¯è¸ºè¹è¸¹è¸µè¸½è¸±è¹è¹è¹è¹è¹è¹è¹°è¹¶è¹¼è¹¯è¹´èºèºèºèºèºèºè±¸è²è²è²è²è²æè§è§è§è§"],["f640","é¯",62],["f680","é°",32,"è§¥è§«è§¯è¨¾è¬¦éé©é³é¯ééééééªé­é°é¾é¾é¾é¾",5,"é¾é»¾é¼é¼é¹é¼é½ééç¿é éé®éé¾éªééé¾é«é±¿é²é²é²é²é²ç¨£é²é²é²é²é²é²é²é²é²é²",5,"é²¥",4,"é²«é²­é²®é²°",7,"é²ºé²»é²¼é²½é³é³é³é³é³é³"],["f740","é°¼",62],["f780","é±»é±½é±¾é²é²é²é²é²é²é²é²é²é²é²é²é²é²ªé²¬é²¯é²¹é²¾",4,"é³é³é³é³é³é³é³ é³¡é³",4,"é³é³é³é³é³é³é³é³é³é³¢é¼ééééé¯é«é£é²é´éª±éª°éª·é¹éª¶éªºéª¼é«é«é«é«é«é«é«é­é­é­é­é­é­é­é£¨é¤é¤®é¥é¥é«é«¡é«¦é«¯é««é«»é«­é«¹é¬é¬é¬é¬é¬£éº½éº¾ç¸»éºéºéºéºéºééºéºé»é»é»é» é»é»¢é»©é»§é»¥é»ªé»¯é¼¢é¼¬é¼¯é¼¹é¼·é¼½é¼¾é½"],["f840","é³£",62],["f880","é´¢",32],["f940","éµ",62],["f980","é¶",32],["fa40","é¶£",62],["fa80","é·¢",32],["fb40","é¸",27,"é¸¤é¸§é¸®é¸°é¸´é¸»é¸¼é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹ é¹¡é¹¢é¹¥é¹®é¹¯é¹²é¹´",9,"éº"],["fb80","éºéºéºéºéºéºéºéº",5,"éº",8,"éºéº ",5,"éº§éº¨éº©éºª"],["fc40","éº«",8,"éºµéº¶éº·éº¹éººéº¼éº¿",4,"é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»¡é»£é»¤é»¦é»¨é»«é»¬é»­é»®é»°",8,"é»ºé»½é»¿",6],["fc80","é¼",4,"é¼é¼é¼é¼é¼é¼é¼é¼é¼",5,"é¼¡é¼£",8,"é¼­é¼®é¼°é¼±"],["fd40","é¼²",4,"é¼¸é¼ºé¼¼é¼¿",4,"é½",10,"é½",38],["fd80","é½¹",5,"é¾é¾é¾",11,"é¾é¾é¾é¾¡",4,"ï¤¬ï¥¹ï¦ï§§ï§±"],["fe40","ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ ï¨¡ï¨£ï¨¤ï¨§ï¨¨ï¨©"]]');
            }
          ),
          /***/
          21166: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('[["0","\\u0000",127],["8141","ê°ê°ê°ê°ê°",4,"ê°ê°ê°ê°¡ê°¢ê°£ê°¥",6,"ê°®ê°²ê°³ê°´"],["8161","ê°µê°¶ê°·ê°ºê°»ê°½ê°¾ê°¿ê±",9,"ê±ê±",5,"ê±"],["8181","ê±ê±ê±ê±ê±ê±",18,"ê±²ê±³ê±µê±¶ê±¹ê±»",4,"ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²",6,"ê²ê²¢",5,"ê²«ê²­ê²®ê²±",6,"ê²ºê²¾ê²¿ê³ê³ê³ê³ê³ê³ê³ê³ê³ê³",7,"ê³ê³",7,"ê³¢ê³£ê³¥ê³¦ê³©ê³«ê³­ê³®ê³²ê³´ê³·",4,"ê³¾ê³¿ê´ê´ê´ê´ê´",4,"ê´ê´ê´ê´"],["8241","ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´¡",7,"ê´ªê´«ê´®",5],["8261","ê´¶ê´·ê´¹ê´ºê´»ê´½",6,"êµêµêµ",5,"êµêµêµêµêµêµ"],["8281","êµ",7,"êµ¢êµ¤",7,"êµ®êµ¯êµ±êµ²êµ·êµ¸êµ¹êµºêµ¾ê¶ê¶",4,"ê¶ê¶ê¶ê¶ê¶ê¶",10,"ê¶",5,"ê¶¥",17,"ê¶¸",7,"ê·ê·ê·ê·ê·ê·",6,"ê·ê·",7,"ê·ê·ê·ê·¡ê·¢ê·£ê·¥",18],["8341","ê·ºê·»ê·½ê·¾ê¸",5,"ê¸ê¸ê¸",5,"ê¸",7],["8361","ê¸",18,"ê¸²ê¸³ê¸µê¸¶ê¸¹ê¸»ê¸¼"],["8381","ê¸½ê¸¾ê¸¿ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹",4,"ê¹ê¹¢ê¹£ê¹¤ê¹¦ê¹§ê¹ªê¹«ê¹­ê¹®ê¹¯ê¹±",6,"ê¹ºê¹¾",5,"êº",5,"êº",46,"êº¿ê»ê»ê»ê»",6,"ê»ê»",5,"ê»ê»ê»",8],["8441","ê»¦ê»§ê»©ê»ªê»¬ê»®",5,"ê»µê»¶ê»·ê»¹ê»ºê»»ê»½",8],["8461","ê¼ê¼ê¼ê¼ê¼ê¼ê¼ê¼",18],["8481","ê¼¤",7,"ê¼®ê¼¯ê¼±ê¼³ê¼µ",6,"ê¼¾ê½ê½ê½ê½ê½ê½",5,"ê½",10,"ê½",5,"ê½¦",18,"ê½º",5,"ê¾ê¾ê¾ê¾ê¾ê¾ê¾",6,"ê¾ê¾ê¾ê¾",5,"ê¾",26,"ê¾ºê¾»ê¾½ê¾¾"],["8541","ê¾¿ê¿",5,"ê¿ê¿ê¿",4,"ê¿",6,"ê¿",4],["8561","ê¿¢",5,"ê¿ª",5,"ê¿²ê¿³ê¿µê¿¶ê¿·ê¿¹",6,"ëë"],["8581","ë",6,"ëëëëëëë",6,"ë",9,"ë©",26,"ëëëëëëëëëëëëëëë",29,"ë¾ë¿ëëëë",6,"ëëë",5,"ëëëë£ë¤"],["8641","ë¥ë¦ë§ëªë°ë²ë¶ë·ë¹ëºë»ë½",6,"ëë",5,"ë"],["8661","ëëëëë",6,"ë¡ë¢ë£ë¤ë¦",10],["8681","ë±",22,"ëëëëëëëëëëë",4,"ë¦ë§ë©ëªë«ë­",6,"ë¶ëº",5,"ëëëëëë",6,"ëëëëëëëëëëë¡",22,"ëºë»ë½ë¾ë¿ëë",4,"ëëëëëëëëëëëëë"],["8741","ë",9,"ë©",15],["8761","ë¹",18,"ëëëëëëë"],["8781","ë",5,"ëë ",7,"ëªë«ë­ë®ë¯ë±",7,"ëºë¼ë¾",5,"ëëëëë",6,"ëëë",5,"ë¡",18,"ëµ",6,"ë½",26,"ëëëëëëë¡",6,"ëª",4],["8841","ë¯",4,"ë¶",5,"ë½",6,"ëëëë",4],["8861","ëëëëëëë",4,"ë¢ë¤ë§ë¨ë©ë«ë­ë®ë¯ë±ë²ë³ëµë¶ë·"],["8881","ë¸",15,"ëëëëëëë",4,"ëëëëë ë¡ë£ë§ë©ëªë°ë±ë²ë¶ë¼ë½ë¾ëëëëëë",6,"ëë",5,"ë",54,"ëëëëë ë¡ë¢ë£"],["8941","ë¦ë¨ëªë¬ë­ë¯ë²ë³ëµë¶ë·ë¹",6,"ëë",5,"ë"],["8961","ëëëëëë",10,"ë¢",5,"ë©ëªë«ë­"],["8981","ë®",21,"ëëëëëëëëëëëëëëëë¡ë¢ë£ë¥ë¦ë§ë©",18,"ë½",18,"ë",6,"ëëëëëëë¡",6,"ëªë¬",7,"ëµ",15],["8a41","ë",10,"ëëëëëë",6,"ë¢ë¤ë¦"],["8a61","ë§",4,"ë­",18,"ëë"],["8a81","ë",4,"ë",19,"ë",5,"ë¥ë¦ë§ë©ëªë«ë­",7,"ë¶ë¸ëº",5,"ëëëëëëë",6,"ëëëëë",5,"ëëë¡ë¢ë¥ë§",4,"ë®ë°ë²",5,"ë¹",26,"ëëëëë"],["8b41","ë",5,"ë¦ë«",4,"ë²ë³ëµë¶ë·ë¹",6,"ëë"],["8b61","ëëëëëëëëëë",6,"ëë¢",8],["8b81","ë«",52,"ë¢ë£ë¥ë¦ë§ë©ë¬ë­ë®ë¯ë²ë¶",4,"ë¾ë¿ëëëë",6,"ëë",5,"ë",18,"ë­",18],["8c41","ë",15,"ëëëëëë",4],["8c61","ë",6,"ë¦",5,"ë­",6,"ëµ",5],["8c81","ë»",12,"ë",26,"ë¥ë¦ë§ë©",50,"ëëë¡ë¢ë£ë¥",5,"ë­ë®ë¯ë°ë²",16],["8d41","ë",16,"ë",8],["8d61","ë",17,"ë±ë²ë³ëµë¶ë·ë¹ëº"],["8d81","ë»",4,"ëëëë",33,"ëªë«ë­ë®ë±",6,"ëºë¼",7,"ëëëëëëë",6,"ë",9,"ë¡ë¢ë£ë¥ë¦ë§ë©",6,"ë²ë´ë¶",5,"ë¾ë¿ëëëë",6,"ëëëëëëëë"],["8e41","ëë¡",6,"ëªë®",5,"ë¶ë·ë¹",8],["8e61","ë",4,"ëë",19],["8e81","ë",13,"ë®ë¯ë±ë²ë³ëµ",6,"ë¾ë ",4,"ë ë ë ë ë ë ",6,"ë ë ë ",5,"ë ¦ë §ë ©ë ªë «ë ­",6,"ë ¶ë º",5,"ë¡ë¡ë¡ë¡",11,"ë¡ë¡",7,"ë¡ë¡ë¡¡ë¡¢ë¡£ë¡¥",6,"ë¡®ë¡°ë¡²",5,"ë¡¹ë¡ºë¡»ë¡½",7],["8f41","ë¢",7,"ë¢",17],["8f61","ë¢ ",7,"ë¢©",6,"ë¢±ë¢²ë¢³ë¢µë¢¶ë¢·ë¢¹",4],["8f81","ë¢¾ë¢¿ë£ë£ë£",5,"ë£ë£ë£ë£ë£ë£ë£",7,"ë£ë£ ë£¢",5,"ë£ªë£«ë£­ë£®ë£¯ë£±",6,"ë£ºë£¼ë£¾",5,"ë¤",18,"ë¤",6,"ë¤¡",26,"ë¤¾ë¤¿ë¥ë¥ë¥ë¥",6,"ë¥ë¥ë¥ë¥",5],["9041","ë¥ë¥ë¥ë¥ë¥ë¥¡",6,"ë¥ªë¥¬ë¥®",5,"ë¥¶ë¥·ë¥¹ë¥ºë¥»ë¥½"],["9061","ë¥¾",5,"ë¦ë¦ë¦ë¦ë¦",15],["9081","ë¦",12,"ë¦®ë¦¯ë¦±ë¦²ë¦³ë¦µ",6,"ë¦¾ë§ë§",5,"ë§ë§ë§ë§",4,"ë§ë§ë§ë§ ë§¢ë§¦ë§§ë§©ë§ªë§«ë§­",6,"ë§¶ë§»",4,"ë¨",5,"ë¨",11,"ë¨",33,"ë¨ºë¨»ë¨½ë¨¾ë¨¿ë©ë©ë©ë©ë©"],["9141","ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©",6,"ë©¦ë©ª",5],["9161","ë©²ë©³ë©µë©¶ë©·ë©¹",9,"ëªëªëªëªëªëª",5],["9181","ëª",20,"ëªªëª­ëª®ëª¯ëª±ëª³",4,"ëªºëª¼ëª¾",5,"ë«ë«ë«ë«",14,"ë«",33,"ë«½ë«¾ë«¿ë¬ë¬ë¬ë¬",7,"ë¬ë¬ë¬",5,"ë¬ë¬ë¬ë¬ë¬ë¬ë¬¡",6],["9241","ë¬¨ë¬ªë¬¬",7,"ë¬·ë¬¹ë¬ºë¬¿",4,"ë­ë­ë­ë­ë­ë­ë­ë­"],["9261","ë­ë­ë­ë­ë­",7,"ë­¢ë­¤",7,"ë­­",4],["9281","ë­²",21,"ë®ë®ë®ë®ë®ë®ë®",18,"ë®¥ë®¦ë®§ë®©ë®ªë®«ë®­",6,"ë®µë®¶ë®¸",7,"ë¯ë¯ë¯ë¯ë¯ë¯ë¯",6,"ë¯ë¯ë¯",35,"ë¯ºë¯»ë¯½ë¯¾ë°"],["9341","ë°",4,"ë°ë°ë°ë°ë°ë°ë°ë° ë°¡ë°¢ë°£ë°¦ë°¨ë°ªë°«ë°¬ë°®ë°¯ë°²ë°³ë°µ"],["9361","ë°¶ë°·ë°¹",6,"ë±ë±ë±ë±ë±ë±ë±ë±ë±",8],["9381","ë±ë±ë±ë±",37,"ë²ë²ë²ë²ë²ë²",4,"ë²ë²ë²",4,"ë²¢ë²£ë²¥ë²¦ë²©",6,"ë²²ë²¶",5,"ë²¾ë²¿ë³ë³ë³ë³",7,"ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³",22,"ë³·ë³¹ë³ºë³»ë³½"],["9441","ë³¾",5,"ë´ë´ë´",5,"ë´ë´ë´ë´",8],["9461","ë´",5,"ë´¥",6,"ë´­",12],["9481","ë´º",5,"ëµ",6,"ëµëµëµëµëµëµ",6,"ëµ",9,"ëµ¥ëµ¦ëµ§ëµ©",22,"ë¶ë¶ë¶ë¶ë¶",4,"ë¶ë¶ë¶ë¶ë¶ë¶ë¶",6,"ë¶¥",10,"ë¶±",6,"ë¶¹",24],["9541","ë·ë·ë·ë·ë·ë·ë·ë·",11,"ë·ª",5,"ë·±"],["9561","ë·²ë·³ë·µë·¶ë··ë·¹",6,"ë¸ë¸ë¸ë¸",5,"ë¸ë¸ë¸ë¸ë¸"],["9581","ë¸",6,"ë¸ë¸ ",35,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹",4,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹¢ë¹£ë¹¥ë¹¦ë¹§ë¹©ë¹«",4,"ë¹²ë¹¶",4,"ë¹¾ë¹¿ëºëºëºëº",6,"ëºëº",5,"ëº",13,"ëº©",14],["9641","ëº¸",23,"ë»ë»"],["9661","ë»ë»ë»",6,"ë»¡ë»¢ë»¦",5,"ë»­",8],["9681","ë»¶",10,"ë¼",5,"ë¼",13,"ë¼ë¼",33,"ë½ë½ë½ë½ë½ë½",6,"ë½ë½ë½ë½",44],["9741","ë¾",16,"ë¾",8],["9761","ë¾",17,"ë¾±",7],["9781","ë¾¹",11,"ë¿",5,"ë¿ë¿ë¿ë¿ë¿ë¿",6,"ë¿ë¿ë¿ ë¿¢",89,"ì½ì¾ì¿"],["9841","ì",16,"ì",5,"ììì"],["9861","ìììì¡",6,"ìª",15],["9881","ìº",21,"ìììììì",6,"ì¢ì¤ì¦",5,"ì®ì±ì²ì·",4,"ì¾ììììììììììì",6,"ìì",5,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì¸ìº",5,"ììììììì",6,"ììììì",5,"ì¡ì¢ì¥ì¨ì©ìªì«ì®"],["9941","ì²ì³ì´ìµì·ìºì»ì½ì¾ì¿ì",6,"ìì",5,"ìì"],["9961","ìììì",6,"ì¦ìª",5,"ì±ì²ì³ìµì¶ì·ì¹ìºì»"],["9981","ì¼",8,"ì",5,"ìììììì",4,"ìì ì¢ì£ì¤ì¦ì§ìªì«ì­ì®ì¯ì±",11,"ì¾",5,"ììììììì",6,"ììì",6,"ì¡ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´",7,"ì¾ì¿ìììì",6,"ììì",5,"ììììì¡ì¢ì£"],["9a41","ì¤ì¥ì¦ì§ìªì¬ì®ì°ì³ìµ",16],["9a61","ììì",6,"ìììììì",6,"ì¡ì¢ì£ì¤ì¦"],["9a81","ì§",4,"ì®ì¯ì±ì²ì³ìµ",6,"ì¾ìì",5,"ì",5,"ì",6,"ìììì",5,"ì¦ì§ì©ìªì«ì®",5,"ì¶ì¸ìº",33,"ììì¡ì¢ì¥",5,"ì®ì°ì²ì³ì´ìµì·ìºì½ì¾ì¿ì",6,"ìììì"],["9b41","ììììììììì",6,"ì¦ì§ìª",8],["9b61","ì³",17,"ì",7],["9b81","ì",25,"ìªì«ì­ì®ì¯ì±ì³",4,"ìºì»ì¾",5,"ììììììì",50,"ì",22,"ì"],["9c41","ìììì¡ì£",4,"ìªì«ì¬ì®",5,"ì¶ì·ì¹",5],["9c61","ì¿",8,"ì",6,"ì",9],["9c81","ì",8,"ì¥",6,"ì­ì®ì¯ì±ì²ì³ìµ",6,"ì¾",9,"ì",26,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì·ì¸ìº",5,"ì",18,"ì",6,"ì",12],["9d41","ìª",13,"ì¹ìºì»ì½",8],["9d61","ì",25],["9d81","ì ",8,"ìª",5,"ì²ì³ìµì¶ì·ì¹ì»ì¼ì½ì¾ì",9,"ììììììì",6,"ì",10,"ìªì«ì­ì®ì¯ì±",6,"ìºì¼ì¾",5,"ììììììììììììì¢ì£ì¥ì¦ì§ì©",6,"ì²ì¶",5,"ì¾ì¿ìììììììììììììì"],["9e41","ìììììììì¡",7,"ìª",9,"ì¶"],["9e61","ì·ìºì¿",4,"ììììììììì",6,"ì¢ì¤ì¦ì§"],["9e81","ì¨ì©ìªì«ì¯ì±ì²ì³ìµì¸ì¹ìºì»ìììììììììì",6,"ìì",6,"ì¦ì§ì©ìªì«ì¯ì±ì²ì¶ì¸ìºì¼ì½ì¾ì¿ìììììì",6,"ìì",5,"ììì¡",10,"ì­ì®ì°ì²",5,"ìºì»ì½ì¾ì¿ì",6,"ììì",5,"ìììììì",6,"ì¦"],["9f41","ì¨ìª",5,"ì²ì³ìµì¶ì·ì»",4,"ììì",5,"ì"],["9f61","ììììì",6,"ììì¢",5,"ìªì«ì­ì®ì¯ì±ì²"],["9f81","ì³",4,"ìºì»ì¼ì¾",5,"ìììììì",6,"ììì",5,"ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´ì¶ì¸ì¹ìºì»ì¾ì¿ìììì",4,"ìììììììììì¡",6,"ì©ìªì¬",7,"ì¶ì·ì¹ìºì»ì¿ììììììììììììì",4,"ì¢ì§",4,"ì®ì¯ì±ì²ì³ìµì¶ì·"],["a041","ì¸ì¹ìºì»ì¾ì",5,"ììììì",6,"ìììì"],["a061","ì",5,"ì¥ì¦ì§ì©ìªì«ì­",13],["a081","ì»",4,"ì ì ì ì ì ì ì ",4,"ì ì ì ",4,"ì ì ì ¡ì ¢ì £ì ¥",6,"ì ®ì °ì ²",5,"ì ¹ì ºì »ì ½ì ¾ì ¿ì¡",6,"ì¡ì¡ì¡",5,"ì¡",26,"ì¡²ì¡³ì¡µì¡¶ì¡·ì¡¹ì¡»",4,"ì¢ì¢ì¢ì¢ì¢ì¢",5,"ì¢",7,"ì¢ì¢ ì¢¢ì¢£ì¢¤"],["a141","ì¢¥ì¢¦ì¢§ì¢©",18,"ì¢¾ì¢¿ì£ì£"],["a161","ì£ì£ì£ì£ì£ì£ì£ì£ì£",6,"ì£ì£ì£",5,"ì£¢ì££ì£¥"],["a181","ì£¦",14,"ì£¶",5,"ì£¾ì£¿ì¤ì¤ì¤ì¤",4,"ì¤ãããÂ·â¥â¦Â¨ãÂ­ââ¥ï¼¼â¼ââââããã",9,"Â±ÃÃ·â â¤â¥ââ´Â°â²â³ââ«ï¿ ï¿¡ï¿¥âââ â¥ââââ¡âÂ§â»ââââââââ¡â â³â²â½â¼âââââãâªâ«ââ½ââµâ«â¬âââââââªâ©â§â¨ï¿¢"],["a241","ì¤ì¤",5,"ì¤",18],["a261","ì¤­",6,"ì¤µ",18],["a281","ì¥",7,"ì¥ì¥ì¥ì¥ì¥ì¥",6,"ì¥¢ì¥¤",7,"ì¥­ì¥®ì¥¯ââââÂ´ï½ËËËËËÂ¸ËÂ¡Â¿Ëâ®ââÂ¤ââ°âââ·â¶â¤â â¡â¥â§â£âââ£ââââ¤â¥â¨â§â¦â©â¨ââââÂ¶â â¡ââââââ­â©âªâ¬ã¿ãâãâ¢ããâ¡â¬Â®"],["a341","ì¥±ì¥²ì¥³ì¥µ",6,"ì¥½",10,"ì¦ì¦ì¦ì¦ì¦"],["a361","ì¦",6,"ì¦ì¦ì¦",16],["a381","ì¦¯",16,"ì§ì§ì§ì§ì§ì§",4,"ì§ì§ì§ì§ì§ï¼",58,"ï¿¦ï¼½",32,"ï¿£"],["a441","ì§ì§ì§¡ì§£ì§¥ì§¦ì§¨ì§©ì§ªì§«ì§®ì§²",5,"ì§ºì§»ì§½ì§¾ì§¿ì¨ì¨ì¨ì¨"],["a461","ì¨ì¨ì¨ì¨ì¨",5,"ì¨ì¨ì¨ì¨",12],["a481","ì¨¦ì¨§ì¨¨ì¨ª",28,"ã±",93],["a541","ì©",4,"ì©ì©ì©ì©ì©ì©",6,"ì©ì©¢",5,"ì©©ì©ª"],["a561","ì©«",17,"ì©¾",5,"ìªìª"],["a581","ìª",16,"ìª",14,"â°",9],["a5b0","â ",9],["a5c1","Î",16,"Î£",6],["a5e1","Î±",16,"Ï",6],["a641","ìª¨",19,"ìª¾ìª¿ì«ì«ì«ì«"],["a661","ì«",5,"ì«ì«ì«ì«ì«ì«ì«ì«",5,"ì«¡",6],["a681","ì«¨ì«©ì«ªì««ì«­",6,"ì«µ",18,"ì¬ì¬ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸ââââââââââââ¡â¢â¦â§â©âªâ­â®â±â²âµâ¶â¹âºâ½â¾âââ",7],["a741","ì¬",4,"ì¬ì¬ì¬ì¬ì¬ì¬ì¬",6,"ì¬¢",7],["a761","ì¬ª",22,"ì­ì­ì­"],["a781","ì­ì­ì­ì­ì­ì­ì­ì­ì­",6,"ì­ì­ì­ì­",5,"ì­¥",7,"ãããâããã£ã¤ã¥ã¦ã",9,"ããããããããã§ã¨ã°",9,"ã",4,"ãº",5,"ã",4,"â¦ãããããããã­ã®ã¯ãã©ãªã«ã¬ããããããã"],["a841","ì­­",10,"ì­º",14],["a861","ì®",18,"ì®",6],["a881","ì®¤",19,"ì®¹",11,"ÃÃÂªÄ¦"],["a8a6","Ä²"],["a8a8","Ä¿ÅÃÅÂºÃÅ¦Å"],["a8b1","ã ",27,"â",25,"â ",14,"Â½ââÂ¼Â¾ââââ"],["a941","ì¯",14,"ì¯",10],["a961","ì¯ ì¯¡ì¯¢ì¯£ì¯¥ì¯¦ì¯¨ì¯ª",18],["a981","ì¯½",14,"ì°ì°ì°ì°ì°ì°",6,"ì°ì°ì° ì°£ì°¤Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÃ¸ÅÃÃ¾Å§ÅÅã",27,"â",25,"â´",14,"Â¹Â²Â³â´â¿ââââ"],["aa41","ì°¥ì°¦ì°ªì°«ì°­ì°¯ì°±",6,"ì°ºì°¿",4,"ì±ì±ì±ì±ì±ì±ì±"],["aa61","ì±",4,"ì±ì±",5,"ì±¡ì±¢ì±£ì±¥ì±§ì±©",6,"ì±±ì±²"],["aa81","ì±³ì±´ì±¶",29,"ã",82],["ab41","ì²ì²ì²ì²ì²ì²ì²ì²ì²ì²¡",6,"ì²ªì²®",5,"ì²¶ì²·ì²¹"],["ab61","ì²ºì²»ì²½",6,"ì³ì³ì³",5,"ì³ì³ì³ì³",5],["ab81","ì³",8,"ì³¥",6,"ì³­ì³®ì³¯ì³±",12,"ã¡",85],["ac41","ì³¾ì³¿ì´ì´",5,"ì´ì´ì´ì´ì´ì´",6,"ì´ì´ì´ì´ì´ "],["ac61","ì´¡ì´¢ì´£ì´¥ì´¦ì´§ì´©ì´ªì´«ì´­",11,"ì´º",4],["ac81","ì´¿",28,"ìµìµìµÐ",5,"ÐÐ",25],["acd1","Ð°",5,"ÑÐ¶",25],["ad41","ìµ¡ìµ¢ìµ£ìµ¥",6,"ìµ®ìµ°ìµ²",5,"ìµ¹",7],["ad61","ì¶",6,"ì¶",10,"ì¶ì¶ì¶ì¶ì¶ì¶ì¶ì¶"],["ad81","ì¶ ì¶¡ì¶¢ì¶£ì¶¦ì¶¨ì¶ª",5,"ì¶±",18,"ì·"],["ae41","ì·",5,"ì·ì·ì·ì·",16],["ae61","ì·¢",5,"ì·©ì·ªì·«ì·­ì·®ì·¯ì·±",6,"ì·ºì·¼ì·¾",4],["ae81","ì¸ì¸ì¸ì¸ì¸ì¸ì¸ì¸",6,"ì¸ì¸ì¸ì¸ì¸",5,"ì¸¢ì¸£ì¸¥ì¸¦ì¸§ì¸©ì¸ªì¸«"],["af41","ì¸¬ì¸­ì¸®ì¸¯ì¸²ì¸´ì¸¶",19],["af61","ì¹",13,"ì¹ì¹ì¹ì¹ì¹¢",5,"ì¹ªì¹¬"],["af81","ì¹®",5,"ì¹¶ì¹·ì¹¹ì¹ºì¹»ì¹½",6,"ìºìºìº",5,"ìºìºìºìºìºìº"],["b041","ìº",5,"ìº¢ìº¦",5,"ìº®",12],["b061","ìº»",5,"ì»",19],["b081","ì»",13,"ì»¦ì»§ì»©ì»ªì»­",6,"ì»¶ì»º",5,"ê°ê°ê°ê°ê°ê°ê°ê°",7,"ê°",4,"ê° ê°¤ê°¬ê°­ê°¯ê°°ê°±ê°¸ê°¹ê°¼ê±ê±ê±ê±ê±ê±ê±°ê±±ê±´ê±·ê±¸ê±ºê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê² ê²¡ê²¨ê²©ê²ªê²¬ê²¯ê²°ê²¸ê²¹ê²»ê²¼ê²½ê³ê³ê³ê³ê³ê³ê³ ê³¡ê³¤ê³§ê³¨ê³ªê³¬ê³¯ê³°ê³±ê³³ê³µê³¶ê³¼ê³½ê´ê´ê´"],["b141","ì¼ì¼ì¼ì¼ì¼ì¼",6,"ì¼ì¼ì¼",5,"ì¼ì¼ì¼ì¼¡ì¼¢ì¼£"],["b161","ì¼¥",6,"ì¼®ì¼²",5,"ì¼¹",11],["b181","ì½",14,"ì½ì½ì½ì½ì½ì½",6,"ì½¦ì½¨ì½ªì½«ì½¬ê´ê´ê´ê´ê´ê´ê´ ê´©ê´¬ê´­ê´´ê´µê´¸ê´¼êµêµêµêµêµêµêµêµ¡êµ£êµ¬êµ­êµ°êµ³êµ´êµµêµ¶êµ»êµ¼êµ½êµ¿ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶¤ê¶·ê·ê·ê·ê·ê·ê·ê·ê·ê· ê·¤ê·¸ê·¹ê·¼ê·¿ê¸ê¸ê¸ê¸ê¸ê¸ê¸ê¸°ê¸±ê¸´ê¸·ê¸¸ê¸ºê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ ê¹¡ê¹¥ê¹¨ê¹©ê¹¬ê¹°ê¹¸"],["b241","ì½­ì½®ì½¯ì½²ì½³ì½µì½¶ì½·ì½¹",6,"ì¾ì¾ì¾ì¾ì¾",5,"ì¾"],["b261","ì¾",18,"ì¾¢",5,"ì¾©"],["b281","ì¾ª",5,"ì¾±",18,"ì¿",6,"ê¹¹ê¹»ê¹¼ê¹½êºêºêºêº¼êº½êº¾ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»¨ê»«ê»­ê»´ê»¸ê»¼ê¼ê¼ê¼ê¼ê¼¬ê¼­ê¼°ê¼²ê¼´ê¼¼ê¼½ê¼¿ê½ê½ê½ê½ê½ê½ê½ê½ê½¤ê½¥ê½¹ê¾ê¾ê¾ê¾ê¾ê¾ê¾ê¾¸ê¾¹ê¾¼ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿¨ê¿©ê¿°ê¿±ê¿´ê¿¸ëëëëëëëëë¨ëëëëëëëëëëë"],["b341","ì¿",19,"ì¿¢ì¿£ì¿¥ì¿¦ì¿§ì¿©"],["b361","ì¿ª",5,"ì¿²ì¿´ì¿¶",5,"ì¿½ì¿¾ì¿¿íííí",5],["b381","í",5,"í",5,"í",19,"ëë¼ë½ëëëëëëëëëëëë ë¡ë¢ë¨ë©ë«",4,"ë±ë³ë´ëµë¸ë¼ëëëëëëëëëë ë¥ëëëëëëëëëëëëë£ë¤ë¥ë¨ë¬ë´ëµë·ë¸ë¹ëëëëëëëëëëë ë¸ë¹ë¼ëëëëëëëëëëëë¨ëëëëë"],["b441","í®",5,"í¶í·í¹íºí»í½",6,"ííí",5],["b461","ííííííí",6,"í¡",10,"í®í¯"],["b481","í±í²í³íµ",6,"í¾í¿íí",18,"ëë¨ë©ë¬ë°ë¹ë»ë½ëëëëëëëëëë ë´ë¼ëëë ë¨ë©ë´ëµë¼ëëëëëëëëëë ë¡ë£ë¥ë¦ëªë¬ë°ë´ëëëëëëëëëë¢ë¤ë¥ë¦ë¨ë«",4,"ë³ë´ëµë·",4,"ë¿ëëëëëëëëëëëëëëëëëëë¤ë¥"],["b541","í",14,"í¦í§í©íªí«í­",5],["b561","í³í¶í¸íº",5,"íííííí",5,"íí",4],["b581","íííí¡í¢í£í¥",6,"í®í²",5,"í¹",11,"ë§ë©ë«ë®ë°ë±ë´ë¸ëëëëëëëëë ë¡ë¨ë¬ëëëëëëëëëëëëëë ë¤ë¨ë¼ëëëë ë¨ë©ë«ë´ëëëëë ë¡ë£ë¥ë¬ëëëë¤ë¨ë¬ëµë·ë¹ëëëëëëëë ë£ë¤ë¦ë¬ë­ë¯ë±ë¸ëëëëëë¤ë¥ë§ë¨ë©ëªë°ë±ë´ë¸"],["b641","í",7,"í",17],["b661","í ",15,"í²í³íµí¶í·í¹í»í¼í½í¾"],["b681","í¿íí",5,"íííííí",6,"íí í¢",5,"í©íªí«í­ëëëëëëëëëëëëëë ë¡ë ë¡ë¤ë¨ëªë«ë°ë±ë³ë´ëµë»ë¼ë½ëëëëëëëëë¬ëëëëë¥ë¬ë´ëë¤ë¨ëëë ë¤ë«ë¬ë±ëë°ë´ë¸ëëëë¨ë©ë¬ë¯ë°ë¸ë¹ë»ëëëëëë ë¤ë¨ë°ë±ë³ëµë¼ë½ëëëëëëëëëë"],["b741","í®",13,"í½",6,"ííííí"],["b761","í",20,"í¢í£í¥í¦í§"],["b781","í©",6,"í²í´í¶í·í¸í¹í»í½í¾í¿í",14,"ëëëë ë¨ë©ë«ë¬ë­ë´ëµë¸ëëë¬ë­ë°ë´ë¼ë½ë¿ë ë ë ë ë ë ë ë ë ë ë ë ¤ë ¥ë ¨ë ¬ë ´ë µë ·ë ¸ë ¹ë¡ë¡ë¡ë¡ë¡ë¡ë¡ ë¡¤ë¡¬ë¡­ë¡¯ë¡±ë¡¸ë¡¼ë¢ë¢¨ë¢°ë¢´ë¢¸ë£ë£ë£ë£ë£ë£ë£ë£ë£ë£¡ë£¨ë£©ë£¬ë£°ë£¸ë£¹ë£»ë£½ë¤ë¤ë¤ ë¤¼ë¤½ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ ë¥¨ë¥©"],["b841","í",7,"í",17],["b861","í«",8,"íµí¶í·í¹",13],["b881","íí",5,"í",24,"ë¥«ë¥­ë¥´ë¥µë¥¸ë¥¼ë¦ë¦ë¦ë¦ë¦ë¦ë¦ë¦¬ë¦­ë¦°ë¦´ë¦¼ë¦½ë¦¿ë§ë§ë§ë§ë§",4,"ë§ë§ë§ë§ë§ë§¡ë§£ë§¤ë§¥ë§¨ë§¬ë§´ë§µë§·ë§¸ë§¹ë§ºë¨ë¨ë¨ë¨ë¨¸ë¨¹ë¨¼ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©¤ë©¥ë©§ë©¨ë©©ë©°ë©±ë©´ë©¸ëªëªëªëªëªëª¨ëª©ëª«ëª¬ëª°ëª²ëª¸ëª¹ëª»ëª½ë«ë«ë«ë«ë«¼"],["b941","íªí«í®í¯í±í²í³íµ",6,"í¾íí",5,"íííí"],["b961","í",14,"í",6,"í¥í¦í§í¨"],["b981","í©",22,"íííííííííë¬ë¬ë¬ë¬ë¬ë¬ë¬ë¬ ë¬©ë¬«ë¬´ë¬µë¬¶ë¬¸ë¬»ë¬¼ë¬½ë¬¾ë­ë­ë­ë­ë­ë­ë­ë­ë­ë­¡ë­£ë­¬ë®ë®ë®ë®¤ë®¨ë®¬ë®´ë®·ë¯ë¯ë¯ë¯ë¯ë¯¸ë¯¹ë¯¼ë¯¿ë°ë°ë°ë°ë°ë°ë°ë°ë°ë°",4,"ë°",4,"ë°¤ë°¥ë°§ë°©ë°­ë°°ë°±ë°´ë°¸ë±ë±ë±ë±ë±ë±ë±ë±ë±ë±ë²ë²ë²ë²ë²ë²ë²ë²ë²"],["ba41","ííííííí",5,"íííí¡í¢í£í¥",6,"í­"],["ba61","í®í¯í°í²",5,"íºí»í½í¾íí",4,"íí",5],["ba81","ííííííííí",6,"í¦",9,"í²í³íµí¶í·í¹íºë²ë²ë² ë²¡ë²¤ë²§ë²¨ë²°ë²±ë²³ë²´ë²µë²¼ë²½ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³´ë³µë³¶ë³¸ë³¼ë´ë´ë´ë´ë´ë´ë´¤ë´¬ëµëµëµëµëµëµëµëµ¤ëµ¨ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶¤ë¶°ë¶¸ë·ë·ë·ë·ë·©ë·°ë·´ë·¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ ë¹¡ë¹¤"],["bb41","í»",4,"ííí",5,"íííííí",4,"íí¢í£"],["bb61","í¤í¦í§íªí«í­í®í¯í±",6,"íºí¾",5,"íííí"],["bb81","í",31,"ë¹¨ë¹ªë¹°ë¹±ë¹³ë¹´ë¹µë¹»ë¹¼ë¹½ëºëºëºëºëºëºëºëºëºëº¨ë»ë»ë»ë»ë»ë» ë»£ë»¤ë»¥ë»¬ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë½ë½ë½ë½ë½ë½ë½ë¾ë¾°ë¿ë¿ë¿ë¿ë¿ë¿ë¿ë¿¡ì¼ìììì ì¨ì©ììììì ì¡ì£ì¥ì¬ì­ì¯ì°ì³ì´ìµì¶ì¼ì½ì¿ììììììììììììì¤"],["bc41","íª",17,"í¾í¿íííííí"],["bc61","íííííí",5,"íííííí¡",6,"íªí¬í®"],["bc81","í¯",4,"íµí¶í·í¹íºí»í½",6,"ííí",5,"í",5,"ì¥ì¨ì¬ì´ìµì·ì¹ìììììì",4,"ì£ì¤ì¦ì§ì¬ì­ì¯ì°ì±ì¶ì¸ì¹ì¼ììììììììììì¤ì¥ì§ì¨ì©ì°ì´ì¸ììììììììììì¡ì¥ì¨ì©ì¬ì°ì½ììììììì ì¤ì¨ì°ì±ì³ì¼ì½ììììììììììì ì¨ì©ì«ì­"],["bd41","íí",7,"í¢í¤",7,"í®í¯í±í²í³íµí¶í·"],["bd61","í¸í¹íºí»í¾íí",5,"í",13],["bd81","í",5,"í",25,"ì¯ì±ì²ì´ìììììì ì¥ì¬ì­ì°ì´ì¼ì½ì¿ìììììììì¤ì¥ì¨ì¬ì­ì´ìµì·ì¹ììì ì£ì¤ì«ì¬ì­ì¯ì±ì¶ì¸ì¹ì»ì¼ììììììììììì¤ì¥ì¨ì©ìì¨ì©ì¬ì°ì²ì¸ì¹ì¼ì½ììììììììì ì¢ì¨ì©ì­ì´ìµì¸ììì¤ì¬ì°"],["be41","í¸",7,"íííí",14],["be61","í",7,"íííí¡í¢í£í¥",7,"í®í°í±í²"],["be81","í³",4,"íºí»í½í¾íí",4,"ííí",5,"í",8,"ì´ì¼ì½ìì¤ì¥ì¨ì¬ì´ìµì¹ìììì¸ì¼ì©ì°ì±ì´ì¸ìºì¿ììììììì¨ì©ì¬ì°ì¸ì¹ì»ì½ììììììììììììììììì ì¡ì¤ì¨ì°ì±ì³ì´ìµì¼ì½ìììììììììììì ì©ì´ìµì¸ì¹ì»ì¼ì½ì¾ì",6,"ìì"],["bf41","í",10,"íª",14],["bf61","í¹",18,"ííííííí"],["bf81","í",5,"ííí ",7,"í©íªí«í­í®í¯í±",6,"í¹íºí¼ììììì ì¡ì£ì¥ì¬ì­ì®ì°ì´ì¶ì·ì¼",5,"ììììììììììì¤ì¥ì¨ì¬ì­ì®ì°ì³ì´ìµì·ì¹ì»ìììììììììììì ì¬ì¯ì±ì¸ì¹ì¼ìììììììììì¤ì¥ì§ì©ì°ì±ì´ì¸ì¹ìºììììììììììì ì¡ì¨"],["c041","í¾",5,"ííííííí",6,"íí",5],["c061","í",25],["c081","í¸í¹íºí»í¾í¿íííí",6,"ííí",5,"íííííí¡í¢í£ì©ì¬ì°ì¸ì¹ì½ììììììììì ì¡ì¤ì¨ì°ì±ì³ìµì·ì¼ì½ììììììì",7,"ìì ì¨ì«ì´ìµì¸ì¼ì½ì¾ìììììììììììììììì ì¡ì£ì¤ì¥ì¦ì¬ì­ì°ì´ì¼ì½ì¿ìììììììììì¤ì¨ì¬ì ì ì ì ì "],["c141","í¤í¦í§íªí¬í®",5,"í¶í·í¹íºí»í½",6,"ííí"],["c161","ííííí",19,"í¦í§"],["c181","í¨",31,"ì ì ì ì ì ì ì ì  ì ¤ì ¬ì ­ì ¯ì ±ì ¸ì ¼ì¡ì¡ì¡ì¡ì¡ì¡ì¡°ì¡±ì¡´ì¡¸ì¡ºì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢¡ì¢¨ì¢¼ì¢½ì£ì£ì£ì£ì£ì£ì£ì£ ì£¡ì£¤ì£µì£¼ì£½ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤¬ì¤´ì¥ì¥ì¥ì¥ì¥ ì¥¡ì¥£ì¥¬ì¥°ì¥´ì¥¼ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì§ì§ì§ì§ì§ì§ì§ì§ì§"],["c241","ííííííí",4,"ííí",5,"í¦í§í©íªí«í­í®"],["c261","í¯",4,"í¶í¸íº",5,"íííííí",6,"í"],["c281","í",5,"íííí¡í¢í£í¥",7,"í®",9,"íºí»ì§ì§ì§ì§ì§ì§ì§ ì§¢ì§¤ì§§ì§¬ì§­ì§¯ì§°ì§±ì§¸ì§¹ì§¼ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨©ì©ì©ì©ì©ì©ì©ì©ì© ì©¡ì©¨ì©½ìªìªìª¼ìª½ì«ì«ì«ì«ì«ì«ì«ì«ì«ì« ì«¬ì«´ì¬ì¬ì¬ì¬ì¬ ì¬¡ì­ì­ì­ì­ì­ì­ì­ì­ì­¤ì­¸ì­¹ì®ì®¸ì¯ì¯¤ì¯§ì¯©ì°ì°ì°ì°ì°ì°ì°¡ì°¢ì°§ì°¨ì°©ì°¬ì°®ì°°ì°¸ì°¹ì°»"],["c341","í½í¾í¿ííííííííííííííííííí",4],["c361","í¢",4,"í¨íª",5,"í²í³íµ",11],["c381","íííí",5,"íííííí",7,"íí í¢",5,"í©íªì°¼ì°½ì°¾ì±ì±ì±ì±ì±ì±ì±ì±ì±ì± ì±¤ì±¦ì±¨ì±°ì±µì²ì²ì²ì² ì²¨ì²©ì²«ì²¬ì²­ì²´ì²µì²¸ì²¼ì³ì³ì³ì³ì³ì³ì³¤ì³¬ì³°ì´ì´ì´ì´ì´ì´ì´ì´ì´ì´¤ì´¨ì´¬ì´¹ìµìµ ìµ¤ìµ¬ìµ­ìµ¯ìµ±ìµ¸ì¶ì¶ì¶ì¶ì¶ì¶¤ì¶¥ì¶§ì¶©ì¶°ì·ì·ì·ì·¨ì·¬ì·°ì·¸ì·¹ì·»ì·½ì¸ì¸ì¸ì¸ì¸ì¸ ì¸¡ì¸¤ì¸¨ì¸°ì¸±ì¸³ì¸µ"],["c441","í«í­í®í¯í±",7,"íºí¼",7,"ííííí"],["c461","íííííííííí",5,"í¡í¢í£í¥í¦í§í©",4],["c481","í®í¯í±í²í³í´í¶",5,"í¾í¿íííí",11,"íííì¹ì¹ì¹ì¹ì¹ ì¹¡ì¹¨ì¹©ì¹«ì¹­ì¹´ì¹µì¹¸ì¹¼ìºìºìºìºìºìºìºìºìº ìº¡ìº£ìº¤ìº¥ìº¬ìº­ì»ì»¤ì»¥ì»¨ì»«ì»¬ì»´ì»µì»·ì»¸ì»¹ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ ì¼¤ì¼¬ì¼­ì¼¯ì¼°ì¼±ì¼¸ì½ì½ì½ì½ì½¤ì½¥ì½§ì½©ì½°ì½±ì½´ì½¸ì¾ì¾ì¾ì¾¡ì¾¨ì¾°ì¿ì¿ ì¿¡ì¿¤ì¿¨ì¿°ì¿±ì¿³ì¿µì¿¼ííííí­í´íµí¸í¼"],["c541","ííííííííí¡",6,"íªí¬í®",5,"í¶í·í¹"],["c561","íºí»í½",6,"íííí",5,"íííí",4],["c581","íí¢í¤í¦í§í¨íªí«í­í®í¯í±í²í³íµ",6,"í¾í¿íí",5,"íííííííííí í¬í­í°í´í¼í½íí¤í¥í¨í¬í´íµí·í¹ííííííííííííí í¤í¬í­í¯í°í±í¸íí°í±í´í¸íºííííííííííííí¡í¨í¬í¼ííí í¡í¤í¨í°í±í³íµíºí¼ííí´í¸íííí¬í­í°í´í¼í½í¿ííí"],["c641","íííí",6,"ííí",5],["c6a1","í¤ííííííííí í¤í¬í±í¸í¹í¼í¿ííííííííí¤í¥í°í±í´í¸íííííííííííííí í¡í¥í¨í©í¬í°í¸í¹í»í¼í½ííí¼í½ííííííííííí í¨í©í«í­í´í¸í¼ííííííí¡í£í¬í­í°í´í¼í½í¿í"],["c7a1","íííííí í¤í­í¯í¸í¹í¼í¿íííííííí©íííííí¨í¬í°í¸í»í½ííííííí¼í½íííííííííí í¥í¨í©í«í­í´íµí¸í¼ííííííí¥íííííííííí¤í¥í¨í¬í´íµí·í¹ííííííííííí "],["c8a1","í¤í­í¸í¹í¼íííííííííííí§í©í°í±í´ííííííííí¡í¨í¬í°í¹í»ííííííííí í¤í¨í°íµí¼í½ííííííí í¨í©í«í­í´íµí¸í¼ííííííííííí í¡í£í¥í©í¬í°í´í¼í½ííííííííí"],["caa1","ä¼½ä½³åå¹å å¯åµå¥åå«å®¶ææ¶æ·æ¯æ­ççç¨¼èèè¡è¢è¨¶è³è·è»»è¿¦é§å»å´åæªæ¤æ®¼çèè¦ºè§é£ä¾åå¢¾å¥¸å§¦å¹²å¹¹ææææ¬æ¡¿æ¾ççç£µç¨ç«¿ç°¡èè®è±è««éä¹«åæ·æ¸´ç¢£ç«­èè¤èé¨ååå ªåµææ¾æ¡æ¢ææ©æ¸çç³ç£ç°ç´ºé¯ééé¾"],["cba1","å£å²¬ç²èééåå å§å²¡å´åº·å¼ºå½æ·æ±çºçç³ çµ³ç¶±ç¾èè¡èè¥è¬é¼éé±ä»ä»·åå±å¡æ·æ¾æ¨æ¹æ§ªæ¼ç¥ççç®è¥èï¤é§éåå®¢åï¤ç²³ç¾¹éµå¨å»å±å·¨ææ®ææ§æ¸ ç¬ç¥è·è¸ï¤é½éé¸ä¹¾ä»¶å¥å·¾å»ºææ¥è±èè¹éµé¨«ä¹åæ°æ¡åååæª¢"],["cca1","ç¼éé»å«æ¯è¿²åæ©æ­ææ ¼æªæ¿èè¦¡éå ç½ç¬ççµ¹ç¹­è©è¦è­´é£éµææ±ºæ½çµç¼ºè¨£å¼æç®è¬ééäº¬ä¿åå¾åååå¿å°å¢åºå¾æ¶æ¬ææ¬æ¯æ»æ´æ¢æ¶çç±çç¥ççç¡¬ç£¬ç«ç«¶çµç¶èè¿èèè­¦è¼éé¡é é ¸é©é¯¨ä¿åå ºå¥å­£å±æ¸ææ¡æ¢°"],["cda1","æ£¨æºªçç¸ç£ç¨½ç³»ç¹«ç¹¼è¨èª¡è°¿éé·å¤å©åå±åºå§å­¤å°»åº«æ·æ·ææ²æ æ¯æ§æ²½ç¼çç¾ç¨¿ç¾èè¡èè¦è½è°èè ±è¢´èª¥ï¤è¾é®éé¡§é«é¼å­ææ²æ¢ç©è°·éµ å°å¤å´ææ¢±æ£æ»¾ç¨è¢é¯¤æ±¨ï¤éª¨ä¾å¬å±åå­å·¥ææ­æ±æ§æ»çç©ºè£è²¢éä¸²å¯¡ææç"],["cea1","ç§èèªèª²è·¨ééé¡å»æ§¨è¿é­ï¤å å®å¯¬æ£æ£ºæ¬¾çç¯çç®¡ç½èè§è²«éé¤¨å®ææ¬éä¾åå¡å£å»£æ æ´¸çççç­è±éå¦æç½«ä¹åå¡å£æªæ§ææ§é­å®ç´è±è½äº¤åå¬å¬å¬å¶ å·§æªææ ¡æ©ç¡çç¯çµç¿¹è èèè¼è½éé¤é©é®«ä¸ä¹ä¹ä»ä¿±å·å¾"],["cfa1","åå£å¥åååµå¢å¯å¶å»æ¼æææ¸æ©æ§æ­æ¯æ¯¬æ±æºç¸çççç¿ç©ç©¶çµ¿èè¼èèèè¡¢è¬³è³¼è»éé±é¤é¶é§é©é³©é·é¾åå±èé é«éº´åçªç¾¤è£è»é¡å å±æçªå®®å¼ç©¹çª®èèº¬å¦å¸å¸å·åæ³æ²æ¬æ·ç·å¥çè¨è¹¶éæºæ«æ½°è©­è»é¥ï¤æ·æ­¸è²´"],["d0a1","é¬¼ï¤å«å­å¥ææ§»çªç¡çªºç«ç³¾èµè¦èµ³éµé¨å»åçç­ èéï¤æ©åååææ£æ¥µéåå¤å¤ææ¤æ ¹æ§¿ç¾ç­è¹è«è¦²è¬¹è¿é¥ï¤ä»å¦æææªç´ç¦ç¦½è©è¡¾è¡¿è¥ï¤é¦ä¼åæ¥æ±æ±²ç´çµ¦äºå¢çè¯ä¼ä¼å¶ååå¨å»åºå¼å¤å¥å¦å¯å²å´å·±å¹¾å¿æææ£"],["d1a1","ææææ£æ£æ©æ¬ºæ°£æ±½æ²æ·çç¦çªçç£ç¸ç¿ç¢ç£¯ç¥ç¥ç¥ç¥ºç®ç´ç¶ºç¾èè­èè¨è­è±èµ·é¡é¤é£¢é¥é¨é¨é©¥éºç·ä½¶åæ®æ¡éå«åºï¤ï¤å¨æ¦ï¤ææ¿ï¤",5,"é£ï¤",4,"è«¾ï¤ï¤ï¤ï¤æï¤çï¤ï¤é£ï¤ ææºåï¤¡ææ¥ æ¹³ï¤¢ç·ï¤£ï¤¤ï¤¥"],["d2a1","ç´ï¤¦ï¤§è¡²åå¨ï¤¨",4,"ä¹ï¤­å§å¥æ°èï¤®å¥³å¹´æç§å¿µæ¬ææ»å¯§å¯åªï¤¯å¥´å¼©æï¤°ï¤±ï¤²çï¤³",5,"é§ï¤¹",10,"æ¿ï¥ï¥è¿è¾²æ±ï¥ï¥è¦ï¥ï¥å°¿ï¥",7,"å«©è¨¥æ»ç´ï¥",5,"è½ï¥ï¥å°¼æ³¥å¿æººå¤è¶"],["d3a1","ä¸¹äº¶ä½å®åå£å½æ·æ¦æªæ®µæ¹ç­ç«¯ç°ç·èè¢é²éæ»æ¾¾çºç¸éååæºæææ·¡æ¹æ½­æ¾¹ç°èè½èè¦è«è­éæ²çç­è¸éåå å¡å¹¢æææ£ ç¶ç³è³é»¨ä»£åå®å¤§å°å²±å¸¶å¾æ´æ¡ç³èºè¢è²¸éé»å®å¾·æ³ååå°åå µå¡å°å± å³¶å¶åº¦å¾æ¼ææææ¡"],["d4a1","æ£¹æ«æ·æ¸¡æ»æ¿¤ç¾çç¹ç¦±ç¨»èè¦©è³­è·³è¹éééé½éé¶éæ¯ççç¢ç¨ç£ç¦¿ç¯¤çºè®å¢©ææ¦æ½æ¾æ²ççè±é ä¹­çªä»å¬åååæ§æ±æ¡æ£æ´æ½¼ç¼ç³ç«¥è´è£éåæææçç«è³ï¥è±éé ­å±¯èèéé¯éå¾å¶æ©çç»ç­è¤è¬é§é¨°åæ¶ï¥ç©ç¾"],["d5a1","è¿èºè£¸éï¥æ´çççµ¡è½ï¥éªé§±ï¥äºåµæ¬æ¬ç¾çè­é¸åè¾£åµæ¥æ¬æ¬æ¿«ç±çºèè¥¤è¦½æèè å»ææµªç¼çç¯èéä¾å´å¾ èå·æ ç¥äº®åå©åæ¢æ¨ç²®ç²±ç³§è¯è«è¼éä¾¶å·åµåå»¬æ®æ¾ææ«æ¿¾ç¤ªèè £é­é©¢é©ªéºé»åææ­·çç¤«è½¢éæææ£æ¼£"],["d6a1","ççç·´è¯è®è¼¦é£éå½åå£æ´çè£å»ææ®®æ¿ç°¾çµä»¤ä¼¶å¹ï¥å²ºå¶ºæç²ç¬­ç¾ç¿èéé´é¶éé é½¡ä¾æ¾§ç¦®é´é·åï¥ æææ«æ½ççç§èèèè·¯è¼é²é­¯é·ºé¹µç¢ç¥¿ç¶ èéé¹¿éºè«å£å¼æ§ç§çç± è¾å¡ç¨ç¢ç£è³è³è³´é·äºåå¯®å»æççç­èè¼"],["d7a1","é¼é¬§é¾å£å©å±¢æ¨æ·æ¼ç»ç´¯ç¸·èè¤¸é¤éåææ³æ¦´æµæºççç çç¤ç¡«è¬¬é¡å­æ®é¸ä¾å«å´æ·ªç¶¸è¼ªå¾ææ ï¥¡éåèååæ¥ç¨ç¶¾è±éµä¿å©åååå±¥æ§ææ¢¨æµ¬çç¸ççï¥¢ç¢ç±¬ç½¹ç¾¸èè£è£¡ééé¢é¯åæ½¾ççèºèºªé£é±éºææ·ç³è¨éç ¬"],["d8a1","ç«ç¬ ç²æ©çªç²ç¢¼ç£¨é¦¬é­éº»å¯å¹æ¼ èè«éä¸åå¨©å·å½æ¢æ½æ©æ¼æ»¿æ¼«ç£çè¬èè »è¼é¥é°»åæ¹æ«æ²«èè¥ªéºäº¡å¦å¿å¿æç¶²ç½èè«è½è¼éåå¦¹åªå¯æ§ææ¢æ¯ç¤ç½µè²·è³£éé­èè²éé©éº¥å­æ°çç²çèåªè¦åååæ£æ²çç ç¶¿ç·¬é¢éºµæ»"],["d9a1","èå¥åå½æææ¤§æºç¿çèèèé©éé³´è¢ä¾®ååå§å¸½ææ¸æ¹æ®ææ¨¡æ¯æ¯çç¡çç¸çèè¼èè¬è¬¨è²æ¨æ²ç§ç®ç¦ç©é¶©æ­¿æ²å¤¢æ¦èå¯å¢å¦å»ææ´æ³æ¸ºç«ç«èé¨åå·«æ®ææææ«æ æ¥æ­¦æ¯ç¡ç·çç¹èèèªèª£è²¿é§éµ¡å¢¨é»ååå»åæ"],["daa1","æ±¶ç´ç´èèéé¯å¿æ²ç©å³åªå°¾åµå½å¾®æªæ¢¶æ¥£æ¸¼æ¹çç±³ç¾èè¬è¿·é¡é»´å²·æ¶ææ«ææ»æ¼æ°æ³¯ççç·¡éå¯èè¬ååæææ²æ´æ¨¸æ³ççç®ç²ç¸èè¶èè¿«é¹é§ä¼´åååææ¬æææ§æ³®æ½ç­çç¢ç¤ç¼ç£ç£»ç¤¬çµè¬è è¿é é£¯åææ¥æ¸¤æ½"],["dba1","ç¼è·é±é¢é«®é­å£ååå¦¨å°¨å¹å½·æ¿æ¾æ¹ææææ¦æ»ç£ç´¡èªèè«è³è¡èè¨ªè¬é¦é²é¾åä¿³ï¥£å¹å¾æææ¯æ¹ççèèè£´è£µè¤è³ è¼©ééªä¼¯ä½°å¸ææ ¢ç½ç¾é­å¹¡æ¨ç©ççªï¥¤ç¹èè©é£ä¼ç­ç½°é¥å¡å¸æ¢µæ°¾æ±æ³ç¯ç¯èæ³çºå»åå£ææªç§ç"],["dca1","ç¢§èé¢é¹ï¥¥åå¼è®è¾¨è¾¯éå¥ç¥é±é¼ä¸ååµå±å¹·ææºææ£ç³ççç§ç«è¼§é¤ é¨ä¿å ¡å ±å¯¶æ®æ­¥æ´æ¹ºæ½½ç¤ç«è©è£è¤è­è¼ä¼åååå®å¾©æç¦è¹è¯èè¤è¦è¼¹è¼»é¦¥é°æ¬ä¹¶ä¿¸å¥å°å³¯å³°æ§æ£ç½ç¢ç«ç¸«è¬èé¢éé³³ä¸ä»ä¿¯ååå¯å¦åå å¤«å©¦"],["dda1","å­å­µå¯åºï¥¦æ¶æ·æ§æµ®æº¥ç¶ç¬¦ç°¿ç¼¶èèèèèè©è¨è² è³¦è³»èµ´è¶ºé¨éééé§é³§ååå©å´å¢³å¥å¥®å¿¿æ¤æ®ææ±¾ççç²ç³ç´è¬è³é°ï¥§ä½å¼å½¿æå´©ææ£ç¡¼ç¹éµ¬ä¸åååªåå¦å©¢åºæ²æææ¹æææ¦§æ¯æ¯æ¯æ¯æ²¸ï¥¨çµçºç ç¢ç§ç§ç²ç·ç¿¡è¥"],["dea1","è¾èè²èè£¨èª¹è­¬è²»ééé£é¼»å¬å¬ªå½¬ææª³æ®¯æµæ¿±ççç­è²§è³é »ææ°·èé¨ä¹äºäºä»ä¼ºä¼¼ä½¿ä¿å¿å²å¸åå£åå£«å¥¢å¨å¯«å¯ºå°å·³å¸«å¾ææ¨ææ¯æ¶æ»æ¢­æ­»æ²æ³æ¸£ççç ç¤¾ç¥ç¥ ç§ç¯©ç´çµ²èèèèèè£è©è©è¬è³èµ¦è¾­éªé£¼é§éºåï¥©æï¥ª"],["dfa1","ååªå±±æ£æ±çç£çç®èé¸é°ä¹·ææ®ºçè©ä¸ï¥«ææ£®æ¸èèè¡«æ·æ¾éé¢¯ä¸å·ååååªåå­å°å³ å¸¸åºåº å»æ³æ¡æ©¡æ¹ç½ççç¸ç¥¥ç®±ç¿è£³è§´è©³è±¡è³éå¡ç½è³½åï¥¬ç©¡ç´¢è²ç²çç¥ï¥­ç¬å¢å£»å¶¼åºåº¶å¾æææ¿ææææ¸æ æ£²ççç­®çµ®ç·ç½²"],["e0a1","è¥èè¯è¥¿èªéé¤é»é¼ å¤å¥­å¸­æææ³ææ±æ·æ½ç³ç¢©èéé«ä»åååå¬å®£ææ¾ææ¸²ç½çççç¿ç¬ç¦ªç·ç¹ç¾¨èºè³è¹èè¬è©µè·£é¸éé¥é¥é®®å¨å±æ¥æ³æ´©æ¸«èèè¤»è¨­èªªéªé½§å¡æ¹æ®²çºè¾è´ééææ¶ç®ï¥®åå§å®¬æ§æºæææç©ç¹ççç­¬"],["e1a1","èè²è¥èª éä¸å¢æ­²æ´ç¨ç¬¹ç´°ï¥¯è²°å¬å¯å¡å®µå°å°å·¢ææææ­æ¢³æ²¼æ¶æº¯çç¤çç¦çççç¬ç¯ ç°«ç´ ç´¹è¬è­èè¨´éé¡éµé·é¶é¨·ä¿å±¬ææ¶ç²çºè¬è´éå­«å·½æèéé£¡çå®ææ¾æ·è¨èª¦éé å·ï¥°çç¢éè¡°éä¿®åå½ååå£½å«å®å²«å³å¸¥æ"],["e2a1","æææææ¶æ¸æ¨¹æ®æ°´æ´æ¼±ç§ç©ç¸çç²ç¦ç¡ç§ç©ç«ªç²¹ç¶ç¶¬ç¹¡ç¾è©è±èèèªè¢èª°è®è¼¸ééé¬éé¹éé§é¨ééé é¦é«é¬åå¡¾å¤å­°å®¿æ·æ½çç¡ç¹èè½å·¡å¾å¾ªææ¬æ æ¥¯æ©æ®æ´µæ·³ç£ç¾ç¬ç­ç´è£èèè´è£è©¢è«ééé é¦´æè¡è¿°é¥å´å´§"],["e3a1","åµ©çèè¨æ¿æ¾ç¿è¤¶è¥²ä¸ä¹å§ååæ¿æç¹©è éä¾åå¶å§åª¤å°¸å±å±å¸å¼ææ½æ¯ææ¾æ´çç¢ç¤ºç¿èèè¦è©¦è©©è«¡è±è±ºå´å¯å¼æ¯æ­æ¤æ®æ¹çç¯èè­è»¾é£é£¾ä¼¸ä¾ä¿¡å»å¨ å®¸æ¼æ°æ¨ç¼ç³ç¥ç´³èè£èèªèèè¨èº«è¾ï¥±è¿å¤±å®¤å¯¦æå¯©å°å¿æ²"],["e4a1","ï¥²æ·±ççè¯è«¶ä»åï¥³éæ°äºä¿ååå¨¥å³¨æçè½èªè¾è¡è¨é¿éé¤é´éµå å²³å¶½å¹æ¡ææ¡æ¨æ¸¥ééé¡é°é½·å®å²¸æææ¡ç¼ééé¡é®æ¡è¬è»é¼åµå²©å·åºµæçè´éå£æ¼çé´¨ä»°å¤®ææ»æ®ç§§é´¦åååå´æææ¶¯ç¢è¾ééåæ¼ææ¶²ç¸èé¡"],["e5a1","æ«»ç½é¶¯é¸ä¹å»å¶å¤æ¹æ¶æ¤°çºè¶ï¥´éå¼±ï¥µï¥¶ç´è¥è¯è»è¥èºï¥·ä½¯ï¥¸ï¥¹å£¤å­ææææ­æï¥ºæ¥æ¨£æ´çç¬ççç¦³ç©°ï¥»ç¾ï¥¼è¥ï¥½è®éé½ï¥¾é¤åå¾¡æ¼æ¼çç¦¦èªé¦­é­é½¬åæ¶ææªèåå °å½¦çè¨è«ºå­¼èä¿ºå¼å´å¥æ©æ·¹å¶ªæ¥­åäºä½ï¥¿ï¦ï¦å¦ï¦"],["e6a1","ï¦æ­æ±ï¦çµç¤ï¦èèè¹è¼¿è½ï¦é¤ï¦ï¦ï¦äº¦ï¦åå½¹æï¦ï¦ç«ç¹¹è­¯ï¦éé©å¥å §å§¸å¨å®´ï¦å»¶ï¦ï¦ææ»ï¦æ¤½æ²æ²¿æ¶æ¶æ·µæ¼ï¦çç¶çï¦ççï¦ç¡ç¡¯ï¦ç­µç·£ï¦ç¸¯ï¦è¡è»ï¦ï¦ï¦éï¦é³¶ï¦ï¦ï¦ææ¶ï¦ç±ï¦ ï¦¡é±å­ï¦¢ï¦£ï¦¤æï¦¥çç°ç°è¶è"],["e7a1","ï¦¦é»é«¥é¹½æï¦§çèï¦¨ï¦©å¡ï¦ªï¦«å¶¸å½±ï¦¬æ ææ¥¹æ¦®æ°¸æ³³æ¸¶æ½æ¿çç¯ççç°ï¦­çï¦®ççç©çºï¦¯ï¦°è±è© è¿ï¦±éï¦²éï¦³ï¦´ä¹åªï¦µåå¡æ³æ±­æ¿çç¿ç©¢è®èèï¦¶è£è©£è­½è±«ï¦·é³ï¦¸éé äºä¼ä¿å²åå¾å³åå¡¢å¢ºå¥§å¨å¯¤æï¦¹æææ¿æ¤æ¢§æ±æ¾³"],["e8a1","çç¬çç­½èèª¤é°²é¼å±æ²ççéºæº«ç¥çç©©ç¸èåå£æç®çç°ç¿ééé¥æ¸¦ç¦çª©çªªè¥èè¸è¨å©å®å®æ¢¡æ¤æµ£ç©çç¬ç¢ç·©ç¿«èèèè±é®é æ°å¾æºææ±ªçå­å¨æ­ªç®å¤åµ¬å·ç¥çï¦ºï¦»å¥å¹å ¯å¤­å¦å§å¯¥ï¦¼ï¦½å¶¢ææææ¾ï¦¾æï¦¿æ©ï§ç¿ç¤ï§"],["e9a1","çªçª¯ç¹ç¹èè°ï§è¯è¦è¬ éï§éé¥æ¾æ¬²æµ´ç¸è¤¥è¾±ä¿å­åååå¢å®¹åº¸ææ¦æ¶æ¹§æº¶çç¢ç¨ç¬è³è¸èè¸ééï§äºä½å¶åªååå³å®å¯å°¤æææ´ççççç¥ç¦ç¦¹ç´ç¾½èèèè¿ééµéªéé¨é©åå½§æ­æ±æ ¯çç¨¶éé äºï§æ©æ®æ¾çèè¸è"],["eaa1","ééé²é»èé¬±äºçéååå¡ååå£åªå«å¯æ¨æ¿æ´æ²æ´¹æ¹²æºç°ç¿çèè¢è½é ï§é¢é¡é´æè¶éä½ååå±åå§å¨å°æ°ææ¸­ç²çç·¯èèè¦è¿èè¡è¤è¬ééé­ä¹³ä¾ååªï§å¯å©å­ºå®¥å¹¼å¹½åº¾æ æææææ¸æï§ææï§æ¥¡æ¥¢æ²¹æ´§ï§æ¸¸ï§"],["eba1","æ¿¡ç¶ç·ï§çç±ï§çï§ï§ç¶­è¾è¸è£èªè«è«­è¸°è¹éé¾éºééé®ï§ï§å ï§æ¯èè²ï§ï§åå¥«å°¹ï§ï§æ½¤ç§è¤è´ï§ééï§ï§ï§ï§è¿æççµ¨èï§å æ©ææ®·èª¾éé±ä¹åæ·«è­é°é³é£®ææ³£éåæèºé·¹ä¾ååå®ææ¿æ¬æ¤æ¯çç£ç¾©è¤èè»è¡£èª¼"],["eca1","è­°é«äºä»¥ä¼ï§ï§å¤·å§¨ï§å·²å¼å½æ¡ï§ ï§¡ï§¢ï§£ç¾ç¥ï§¤ç°çï§¥ç§»ï§¦èè³èè¡èï§§ï§¨è²½è²³éï§©ï§ªé£´é¤ï§«ï§¬ç·çç¿ç¿ç¿¼è¬äººä»åå°ï§­å½å å§»å¯å¼å¿æ¹®ï§®ï§¯çµªèµï§°èèªï§±é­é·ï§²ï§³ä¸ä½ä½¾å£¹æ¥æº¢é¸é°é¦¹ä»»å£¬å¦å§æï§´ï§µç¨ï§¶èè³å¥å"],["eda1","ï§·ï§¸ï§¹ä»å©å­è¿ä»åºå¨å§å§¿å­å­å­æ£ææ»çç®çç·çµç£ç´«èèªè¨èèè«®è³éä½åºå¼æ«æ¨ç¼ç¸çµç¶½èéééµ²å­±æ£§æ®æ½ºçå²æ«æ½ç®´ç°ªè ¶éä¸ä»å å ´å¢»å£¯å¥¬å°å¸³åºå¼µææ²ææ¨æª£æ¬æ¼¿çï§ºççç« ç²§è¸èè§èè¬è£èèè£è´é¬é·"],["eea1","éååå¨å®°æææ ½æ¢æ¸½æ»ç½ç¸¡è£è²¡è¼é½é½ç­ç®è«éä½ä½å²åå§åºæµæµæ¥®æ¨æ²®æ¸ççªç½ç®¸ç´µè§è¹èè·è©è²¯èºéé¸éé½å£åå«¡å¯ææµæ»´çï§»çç©ç¬ç±ç¸¾ç¿è»è¬«è³èµ¤è·¡è¹è¿ªè¿¹é©éä½ä½ºå³å¨å¸ååªå¡¡å¡¼å¥ å°å±å»ææ°æ æ®¿æ°æ¾±"],["efa1","çç ç°ç¸çç²ç­ç®ç®­ç¯çºè©®è¼¾è½é¿éé¢é«é»é¡é¡«é¤åæªææµç¤ç«ç¯çµ¶å å²¾åºæ¼¸ç¹ç²éé®é»æ¥æºè¶ä¸äºäº­ååµåå§å®å¹åº­å»·å¾ææºæ¿æ´ææ¶æ¸æ¾æ¥¨æªæ­£æ±æ·æ·¨æ¸æ¹çç¡çç½çºçç¢ç¦ç¨ç©½ç²¾ç¶èè¨è«ªè²é­ééé¦éé éé"],["f0a1","éé é¼å¶åå¼å ¤å¸å¼æææ¢¯æ¿ç¥­ç¬¬èèºè£½è«¸è¹éé¤éé½é¡é½ä¿ååå©å²å¼å½«æªææ©ææºæ¹ææ¢æ£æ§½æ¼æ½®ç§ç¥çªçªçºç¥ç¥ç§ç¨ çªç²ç³çµç¹°èè»è¤è©èª¿è¶èºé é­é£é»éé³¥æç°è¶³éå­å°åæçå§å®å¾æ°æ«æ£æ·ç®ç¨®çµç¶ç¸±è«"],["f1a1","è¸ªè¸µé¾éä½åå·¦åº§æ«ç½ªä¸»ä½ä¾åå§èåªå¨å¾å¥å®å·å»ææ±æ±æ ªæ³¨æ´²æ¹æ¾ç·ç çç±ç´ç´¬ç¶¢èèè¨»èªèµ°èºè¼³é±éééé§ç«¹ç²¥ä¿åååå¯¯å³»ææ¨½æµæºæ¿¬çç¯ç«£è ¢é¡éµéé§¿èä¸­ä»²è¡éå½æ«æ¥«æ±èºå¢ææ¾æ¯çççç¹è¸è­è´ä¹åª"],["f2a1","å«å°åå¿æææ¯æ¯æ¨æºææ³æ­¢æ± æ²æ¼¬ç¥ç ¥ç¥ç¥ç´è¢èè³èè·èèªï§¼è´è¶¾é²ç´ç¨ç¨·ç¹è·ååå¡µæ¯æ¢æææ¡­æ¦æ®æ´¥æº±çç¨ç¡çç¹ç¡ççç§¦ç¸ç¸è»è¯è¢è¨ºè³è»«è¾°é²é­é£é³éä¾å±å§ªå«å¸æ¡çç¾ç§©çªè£è­è³ªè·è¿­ææï§½å·æ½ç·è¼¯"],["f3a1","é¶éå¾µæ²æ¾ä¸ä¾ååååµ¯å·®æ¬¡æ­¤ç£ç®ï§¾è¹è»é®ææ¾ççªé¯é¿é½ªæ°æ¾¯ç¦ç¨çç«ç°çºç²²çºè®è´é½é¤é¥å¹å¯æ¦æ­ç´®å­åå¡¹æææºæ¬ç«è®è®åå¡åµå±å¨¼å» å½°æ´æææ¶æ¢æ§æ»æ¼²çç¡çªè¹èèè¼åµå°å¯å¯¨å½©æ¡ç ¦ç¶µèè¡ééµåæµç­"],["f4a1","è²¬åå¦»æ½èåï§¿åå°ºæ½æææ²æ¥æ»ç èè¹ éé»ä»ååå¤©å·ææ³æ·ºçç©¿èè¦è³¤è¸é·é§é¡é¡éå¸å²åå¾¹æ¤æ¾ç¶´è¼è½éµåå°æ²¾æ·»çç»ç°½ç±¤è©¹è«å å¦¾å¸æ·ççç«è«è²¼è¼å»³æ´æ·¸è½èè«éé¯ï¨åæ¿æ¶æ»¯ç· è«¦é®éé«åå¿å¨ææææ¢¢"],["f5a1","æ¤æ¥æ¨µçç¦ç¡ç¤ç¤ç§ç¨èè¸èèèè²è¶é¢éé®ä¿åç­çèè§¸å¯¸å¿æé¨å¢å¡å¯µæ¤ææ ç¸½è°è¥éæ®å¬å´æå¢æ½æ¨æ¤æ¥¸æ¨æ¹«çºç§è»è©è«è¶¨è¿½éééééééé¨¶é°ä¸çç¥ç«ºç­ç¯ç¸®èè¹è¹´è»¸éæ¥æ¤¿çåºæ®é»åå¿ æ²è²è¡è¡·æ´èµè"],["f6a1","è´åå¹å´å¨¶å°±çç¿ èèè­è¶£éé©é·²å´ä»å æ»æ¸¬å±¤ä¾å¤å¤å³å¹æ¥æ¢æ²»æ·ç¾çç´ç¡ç¨ç©ç·ç·»ç½®è´è©è¼éé¦³é½ååé£­è¦ªä¸ææ¼ä¾µå¯¢ææ²æµ¸çç §éé¼èç§¤ç¨±å¿«ä»å¤å¾å¢®å¦¥æ°æææ¶æ¥èµéé¦±é§å¬ååå¼ï¨æï¨æ¢æ«ææ¿æ¿¯ç¢ç¸è¨"],["f7a1","é¸ååå¦å½ææ­çç­ç¶»èªå¥ªè«æ¢çè½è²ªå¡æ­æ¦»å®å¸æ¹¯ï¨è©åå°å¤ªæ ææ®æ±°æ³°ç¬èèè·é°é¢±ï¨ææ¾¤ææåååè¨ææ¡¶ï¨çç­çµ±éå æ§è¿è¤ªéé ¹å¸å¥å¦¬æéé¬ªæç¹éå¡å©å·´ææ­æºæ·æ³¢æ´¾ç¬ç¶ç ´ç½·è­è·é å¤åæ¿çç£è²©è¾¦é"],["f8a1","éªå«å­æä½©åæææ²æµ¿çç½ç¨è¦è²å½­æ¾ç¹è¨æä¾¿åæçç¯ç·¨ç¿©éé­é¨è²¶åªå¹³æ°èè©å å¬å¹£å»¢å¼æèºè½ééä½åååååºåå¸æææ±æï¨æ³¡æµ¦ç±ç ²èè¯èè¡è²è¢è¤ééªé£½é®å¹æ´æççï¨ä¿µå½å½ªæææ¨æ¼ç¢ç¥¨è¡¨è±¹é£é£é©"],["f9a1","åç¨æ¥è«·è±é¢¨é¦®å½¼æ«ç²ç®è¢«é¿éå¹å¼¼å¿æ³çç¢çç­è¾é¦ä¹é¼ä¸ä½å¦å¤å»æ°æ²³çè·è¦è³ééé°å£å­¸èè¬é¶´å¯æ¨ææ±æ±æ¼¢æ¾£çç½ç¿°ééééå²è½å½å«å¸å£åæª»æ¶µç·è¦éé·é¹¹ååçè¤é¤ééäº¢ä¼å§®å«¦å··æææ­æ¡æ²æ¸¯ç¼¸èèª"],["faa1","ï¨ï¨é äº¥åå³åå¥å­©å®³ææ¥·æµ·ç£è¹è§£è©²è«§éé§­éª¸å¾æ ¸åå¹¸æèè¡äº«åå®ç¦éé¿é¤é¥é¦åå¢èè¨±æ²æ«¶ç»è»æ­éªé©å¥çèµ«é©ä¿å³´å¼¦æ¸ææ³«ç«çç¹ç¾ç©ççµçµ¢ç¸£è·è¡ï¨è³¢éé¡¯å­ç©´è¡é å«ä¿ åå¤¾å³½æ¾æµ¹ç¹èèè¢éé °äº¨ååå"],["fba1","å½¢æ³æ»ççç¯çç©ç©èè¢è¡¡éé¢é£é¦¨å®å½æ æ§æ³èè¹é¯éä¹äºå¼å£å£ºå¥½å²µå¼§æ¶æææ§æ¯«æµ©æ·æ¹æ»¸æ¾æ¿ æ¿©ççç¥çç çç¥ç³ç¸è¡è¦è«è¿èèè´è­·è±ªé¬é é¡¥ææé·å©ææ··æ¸¾ç¿é­å¿½æç¬åå¼æ±æ³æ´ªçç´è¹è¨é´»ååå¬æ¨ºç«çµ"],["fca1","ç¦ç¦¾è±è¯è©±è­è²¨é´ï¨æ´æ«ç¢ºç¢»ç©«ä¸¸åå¥å®¦å¹»æ£ææ­¡æ¥æ¡æ¸ç¥ç°ç´éé©©é°¥æ´»æ»ç¾è±éå°å¹å¾¨ææ¶æ°ææææ¦¥æ³æ¹æ»æ½¢çççç¯ç°§èèééé»å¯åå»»å¾æ¢ææ·æ¦ææªæ·®æ¾®ç°çªç¹ªè¾è´èèª¨è³åç²å®æ©«éå®åå­ææææ¢æ¶æ·"],["fda1","ç»è´éµé©ä¾¯åååå¼ååå¸¿å¾æ½ç¦çéåå³å¡¤å£ççç»è°è¨æè¨å§æçè±ååæ¯å½å¾½æ®æçè«±è¼éº¾ä¼æºçç¦è§æ¤è­é·¸åå¶åæ´¶è¸é»ææ¬£ççåå±¹ç´è¨æ¬ æ¬½æ­å¸æ°æ´½ç¿èåååå«åå§¬å¬å¸æææ±ææ¦çç¹çºç§ç¦§ç¨ç¾²è©°"]]');
            }
          ),
          /***/
          72324: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('[["0","\\u0000",127],["a140","ãï¼ããï¼â§ï¼ï¼ï¼ï¼ï¸°â¦â¥ï¹ï¹ï¹Â·ï¹ï¹ï¹ï¹ï½âï¸±âï¸³â´ï¸´ï¹ï¼ï¼ï¸µï¸¶ï½ï½ï¸·ï¸¸ããï¸¹ï¸ºããï¸»ï¸¼ããï¸½ï¸¾ããï¸¿ï¹ããï¹ï¹ããï¹ï¹ï¹ï¹"],["a1a1","ï¹ï¹ï¹ï¹ââââããâµâ²ï¼ï¼ï¼â»Â§ãâââ³â²ââââââ¡â â½â¼ã£âÂ¯ï¿£ï¼¿Ëï¹ï¹ï¹ï¹ï¹ï¹ï¹ï¹ ï¹¡ï¼ï¼ÃÃ·Â±âï¼ï¼ï¼â¦â§â âââ¡ï¹¢",4,"ï½â©âªâ¥â ââ¿ããâ«â®âµâ´âââââââââââââ¥â£ï¼"],["a240","ï¼¼âï¹¨ï¼ï¿¥ãï¿ ï¿¡ï¼ï¼ ââï¹©ï¹ªï¹«ãããããã¡ãããÂ°ååååå¡å£å§ç©ç³â",7,"ââââââââ¼â´â¬â¤ââââââââââ­"],["a2a1","â®â°â¯âââªâ¡â¢â£â¥â¤â±â²â³ï¼",9,"â ",9,"ã¡",8,"åååï¼¡",25,"ï½",21],["a340","ï½ï½ï½ï½Î",16,"Î£",6,"Î±",16,"Ï",6,"ã",10],["a3a1","ã",25,"ËËËËË"],["a3e1","â¬"],["a440","ä¸ä¹ä¸ä¸ä¹ä¹äºäºäººå¿å¥å«å åååååååä¸ä¸ä¸ä¸ä¸«ä¸¸å¡ä¹ä¹ä¹ä¹äºäº¡åååºååå£åå£«å¤å¤§å¥³å­å­å­å¯¸å°å°¢å°¸å±±å·å·¥å·±å·²å·³å·¾å¹²å»¾å¼å¼æ"],["a4a1","ä¸ä¸ä¸ä¸­ä¸°ä¸¹ä¹å°¹äºäºäºäºäºäº¢ä»ä»ä»ä»ä»ä»ä»ä»ä»ååå§å­å®å¬åå¶åååå»å¾å¿åå¹ååååååååå£¬å¤©å¤«å¤ªå¤­å­å°å°¤å°ºå±¯å·´å¹»å»¿å¼å¼å¿ææ¶æææ¯æææ¤æ¹æ¥æ°ææ¨æ¬ æ­¢æ­¹æ¯æ¯æ¯æ°æ°´ç«çªç¶ç»çççç¬çä¸"],["a540","ä¸ä¸ä¸ä¸ä¸»ä¹ä¹ä¹ä»¥ä»ä»ä»ä»ä»ä»£ä»¤ä»ä»ååååå¬å¹åºå¸åå åååååä»ååå¡å å¯å®å»å¯å¤å³å¬å®å©å¨å¼å¸åµå«å¦åªå²å±å°å¥å­å»ååå¤"],["a5a1","å¤®å¤±å¥´å¥¶å­å®å°¼å·¨å·§å·¦å¸å¸å¹³å¹¼å¼å¼å¼å¿ææææææ¥æ¦æ®æ¬æªæ«æ­æ­£æ¯æ°æ°æ°¸æ±æ±æ°¾ç¯çççç¦ççç¨ç©ç°ç±ç²ç³çç½ç®ç¿ç®çç¢ç³ç¤ºç¦¾ç©´ç«ä¸ä¸ä¹ä¹ä¹©äºäº¤äº¦äº¥ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä»²ä»¶ä»»ä»°ä»³ä»½ä¼ä¼ååååå¨"],["a640","å±åå°åååååå£åå¡å å°å±åååååååååååååååå ååå³å°å¨å­å¬å¯å©å¤å¤å¤·å¤¸å¦å¥¸å¦å¥½å¥¹å¦å¦å­å­å®å®å®å®å¯ºå°å±¹å·å¸å¹¶å¹´"],["a6a1","å¼å¼å¿å¿æææææ£æææ¶æ©æ¨æ¬æ­æ²æ³ææ½æ´æ±æµæ¬¡æ­¤æ­»æ°æ±æ±æ±æ±æ± æ±æ±æ±¡æ±æ±æ±ç°ççç¾ç«¹ç±³ç³¸ç¼¶ç¾ç¾½èèèèè³è¿èèèè£èªè³è¼èèèè®è²è¾è«è¡è¡è¡£è¥¿é¡ä¸²äº¨ä½ä½ä½ä½ä½ä¼´ä½ä½ä¼°ä½ä½ä¼½ä¼ºä¼¸ä½ä½ä¼¼ä½ä½£"],["a740","ä½ä½ ä¼¯ä½ä¼¶ä½ä½ä½ä½ååååµå¶å·å¥å¤å©åªå¨å«å©åªå¬å£å³åµåå­åå¾å¦åå§ååå³åååå©åå¹å»å¸å®åµå¶å å¼åå±å«åå¬åªå°å¤å«åååå"],["a7a1","ååå¾ååå»å£¯å¤¾å¦å¦å¦¨å¦å¦£å¦å¦å¦å¦¤å¦å¦å¦¥å­å­å­å­å®å®å®å°¬å±å±å°¿å°¾å²å²å²å²å·«å¸åºåºåºå»·å¼å¼å½¤å½¢å½·å½¹å¿å¿å¿å¿å¿±å¿«å¿¸å¿ªæææææææ¶ææ­ææ¼æ¾æ¹æ³ææ¯ææ®æææææ¹æ»æ¸æ±æ´æææææææææææ "],["a840","æææ­¥æ¯æ±æ±æ²æ²æ²æ²æ²æ²æ±ªæ±ºæ²æ±°æ²æ±¨æ²æ²æ±½æ²æ±²æ±¾æ±´æ²æ±¶æ²æ²æ²æ²ç¶ç¼ç½ç¸ç¢ç¡ç çççç¬ç«ç·ç¸çç¯ç£ç§ç§ç¦¿ç©¶ç³»ç½èèèèèèè²è¯è"],["a8a1","èèè¦è§è¨è°·è±è±è²èµ¤èµ°è¶³èº«è»è¾è¾°è¿è¿è¿è¿å·¡éé¢éªé¦é£éééé²é®é±éªé¬ä¸¦ä¹ä¹³äºäºäºäº«äº¬ä½¯ä¾ä¾ä½³ä½¿ä½¬ä¾ä¾ä¾ä¾ä½°ä½µä¾ä½©ä½»ä¾ä½¾ä¾ä¾ä½ºåååå©å·å¶å¸å½å½å»å¸å·åºå°å®å¶åå¾å»ååååå¦å·å¸å¹åååå³åµ"],["a940","åå¸ååå»å·åååå¼åå±å¶ååå¢å¨åå½ååºåå·åªå©å¡å¦å¤å¼å¤å¥å¥å¥å¥å¥å¦¾å¦»å§å¦¹å¦®å§å§å§å§å§å§å§å¦¯å¦³å§å§å­å­¤å­£å®å®å®å®å®å®å°å±å±"],["a9a1","å±å²·å²¡å²¸å²©å²«å²±å²³å¸å¸å¸å¸å¸å¸å¹¸åºåºåºåºåºå»¶å¼¦å¼§å¼©å¾å¾å½¿å½¼å¿å¿ å¿½å¿µå¿¿æææ¯æµææªææ¡æ§æ©æ«ææææ¿æ¾ææ¿ææææ¿ææ¹æææ«æææææ¨æ½æ¼æææææµææ±æææææ¬ææ¾æ§æ¼æºææææææææææ"],["aa40","ææææ­æææ±ææ³æ·ææææ¯æ°æ¿ææ¾ææµæææ¼æªæ²æ¬£æ­¦æ­§æ­¿æ°æ°æ³£æ³¨æ³³æ²±æ³æ³¥æ²³æ²½æ²¾æ²¼æ³¢æ²«æ³æ³æ²¸æ³æ²¹æ³æ²®æ³æ³æ³±æ²¿æ²»æ³¡æ³æ³æ²¬æ³¯æ³æ³æ³ "],["aaa1","çççççç¬ç­ç¸çç§ç©çççççç©ç¨çç«ç¥ç½çççççç²ç´ç¥ç½ç¤¾ç¥ç¥ç§ç§ç©ºç©¹ç«ºç³¾ç½ç¾ç¾èèºè¥è¢è±è¡è«è©è´èªè¯è¥è¾èè³èèè­è½èè¹è±è¬è¥è¯è¸è£è°è¾è·èè±åè¡¨è»è¿è¿è¿éµé¸é±é¶ééé·éééé¿é»é"],["ab40","éé¹é¨ééäºäº­äº®ä¿¡ä¾µä¾¯ä¾¿ä¿ ä¿ä¿ä¿ä¿ä¾¶ä¿ä¿ä¿ä¿ä¾®ä¿ä¿ä¿ä¿ä¿ä¿ä¾·åååå åååååååååååååå»ååå¬åå¨ååå¸å¦å³ååå½åªå"],["aba1","ååå¯å«å±å»å©å§å¿å¿ååå å£å¢åå®åå¥å¥å¥å¥å¥å§å§å§¿å§£å§¨å¨å§¥å§ªå§å§¦å¨å§»å­©å®£å®¦å®¤å®¢å®¥å°å±å±å±å±å³å³å··å¸å¸¥å¸å¹½åº åº¦å»ºå¼å¼­å½¥å¾å¾å¾å¾å¾å¾å¾æææ æ¥ææ¨ææ°æ¨æ¢æææ¬æ«æªæ¤æææææ¼æ­ææ®æ½ææ±æ·"],["ac40","æ¯æ¬æ¾æ´æææ¿ææ«æ½æ¢æ¥æ­æ æ§æ¯ææ¨æ±æ¤æ·æ¿ææ±æææ¬æ¶æ¯æµæ©æ¯æææ´ææ¥æ¸æææ³æ°ææ¢æææ­ªæ®æ®æ®µæ¯æ¯æ°æ³æ´æ´²æ´ªæµæ´¥æ´æ´±æ´æ´"],["aca1","æ´»æ´½æ´¾æ´¶æ´æ³µæ´¹æ´§æ´¸æ´©æ´®æ´µæ´æ´«ç«çºç³ç¬ç¯ç­ç¸ç®ç¤ç°ç²ç¯ç´ç©ç ç¡ç·çç»ç²ççç³çç­ççççç«ç¤ç¥ç¢ç£ç¸ççççççççç¹ç¸ççç¾ç¼ççç ç ç ç ç¥ç¥ç¥ç¥ç¦¹ç¦ºç§ç§ç§ç©¿çªç«¿ç«½ç±½ç´ç´ç´ç´ç´ç´ç´ç¼¸ç¾ç¾¿è"],["ad40","èèèè¶èè¥èèèèè¡èèèè¤èè´è¢è§èèè£èè¦èè¥èèèèè±èèèèèèèè¯èèè¹è»èºè¡è¡«è¦è§è¨è¨è¨è²è² èµ´èµ³è¶´è»è»è¿°è¿¦è¿¢è¿ªè¿¥"],["ada1","è¿­è¿«è¿¤è¿¨ééééééééééééé¢é©éé­é³é é¢¨é£é£é¦é¦ä¹äº³ååå£ä¿¯å¦å¥ä¿¸å©ååå¼ååååä¿ºååå¨ä¿±å¡åååä¿³ä¿®å­åªä¿¾å«åå¼å¤å¥å¢ååååååååååªå¿åååå¨ååå·å¼å¥å²ååºåå©å­å¡åå®åª"],["ae40","å¦å§åå½åååååååå å¤å¥å¥å¥å¨å¨å¨å¨å¨å¨å§¬å¨ å¨£å¨©å¨¥å¨å¨å­«å±å®°å®³å®¶å®´å®®å®µå®¹å®¸å°å±å±å±å³­å³½å³»å³ªå³¨å³°å³¶å´å³´å·®å¸­å¸«åº«åº­åº§å¼±å¾å¾å¾æ"],["aea1","æ£æ¥æææ­æ©æ¯ææææææææææ³ææ¿ææ¾æ¯ææææææºææ½æªæ«æ¨ææææææææææææææææ¸ææææ ¡æ ¸æ¡æ¡æ¡æ ¹æ¡æ¡æ ©æ¢³æ æ¡æ¡æ ½æ´æ¡æ¡æ ¼æ¡æ ªæ¡æ æ æ¡æ®æ®æ®·æ°£æ°§æ°¨æ°¦æ°¤æ³°æµªæ¶æ¶æ¶æµ¦æµ¸æµ·æµæ¶"],["af40","æµ¬æ¶æµ®æµæµ´æµ©æ¶æ¶æµ¹æ¶æµ¥æ¶ççç¤çççç¹ç¹ç¼ç¹ç½ç¸ç·çç­çç®ç çªççççççç¾ççç²ç³ç½ç¼ç¹çç¸çç°çççç©çç ç¨ç©ç °ç §ç ¸ç ç ´ç ·"],["afa1","ç ¥ç ­ç  ç ç ²ç¥ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ç§¤ç§£ç§§ç§ç§¦ç§©ç§çªçªç«ç¬ç¬ç²ç´¡ç´ç´ç´ç´ ç´¢ç´ç´ç´ç´ç´ç´ç´ç´ç¼ºç½ç¾ç¿ç¿èèèèèè½è¿è±èè°èè­è´èè¸è³èè½èè¼è¯è­è¬èèèªè«è¨è¬è»è«èèèè¸èèèµè´èè²è¹è¶èèè±è¨è"],["b040","èèèªèè¤è©èè£èè¡°è¡·è¢è¢è¡½è¡¹è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è±è±ºè±¹è²¡è²¢èµ·èº¬è»è»è»è¾±ééè¿·éè¿ºè¿´éè¿½éè¿¸éé¡éé¢éééééééééé¢é£é¡"],["b0a1","ééé¤ééé»é£¢é¦¬éª¨é«é¬¥é¬²é¬¼ä¹¾åºå½ååååååå¥å¶åååµå´å·ååå¯å­ååå°åªå¯åååååååå¿åå¾åæ¼ååªå¦ååå¡ååå±åååå¯å¤å¸å®åå¬å£å³ååååååå å å å å¤åºå å µå·å¹å¤ å¥¢å¨¶å©å©å©¦å©ªå©"],["b140","å¨¼å©¢å©å©å©å­°å¯å¯å¯å¯å®¿å¯å°å°å°å± å±å±å´å´å´å´å´å´¢å´å´©å´å´å´¤å´§å´å·¢å¸¸å¸¶å¸³å¸·åº·åº¸åº¶åºµåº¾å¼µå¼·å½å½¬å½©å½«å¾å¾å¾å¾å¾¡å¾ å¾æ¿æ£ææ æ¨ææ´æ¦æ½"],["b1a1","ææ»æµææ¼æææææ¸ææææææ æ§æ²ææ¢æ¥æ·æ§ææªæ±æ©ææææ«æ¨ææææ¡æ¬ææææ»æ©æ¨æºæææææåæææææææ¬æææææææ¤æ¨æ¦ææ¹åææ¢æ¢¯æ¢¢æ¢æ¢µæ¡¿æ¡¶æ¢±æ¢§æ¢æ¢°æ¢æ£æ¢­æ¢æ¢æ¢æ¢æ¢¨æ¢æ¢¡æ¢æ¬²æ®º"],["b240","æ¯«æ¯¬æ°«æ¶æ¶¼æ·³æ·æ¶²æ·¡æ·æ·¤æ·»æ·ºæ¸æ·æ·æ¶¯æ·æ¶®æ·æ·¹æ¶¸æ··æ·µæ·æ·æ¸æ¶µæ·æ·«æ·æ·ªæ·±æ·®æ·¨æ·æ·æ¶ªæ·¬æ¶¿æ·¦ç¹ççç½ç¯ç½ç½çççççççççççç¾çç ç¶"],["b2a1","ç·çç¢ç¥ç¦ç¢ç°ççççµççççççç·ç¾ç¼ç¶ç¸çºç¡«ç¡ç¡ç¥¥ç¥¨ç¥­ç§»çªçªç¬ ç¬¨ç¬ç¬¬ç¬¦ç¬ç¬ç¬®ç²ç²ç²çµçµçµ±ç´®ç´¹ç´¼çµç´°ç´³çµç´¯çµç´²ç´±ç¼½ç¾ç¾ç¿ç¿ç¿èèèè¯èè£è«è©è°è¤èèµè·è¶è¹èèèè¸è¢èè½è«èèèèè è·è»è¼"],["b340","èè§èå½ªèèè¶èèµèèè±è¯èè¡è¢è¢è¢«è¢è¢è¢è¢è¦è¦è¨ªè¨è¨£è¨¥è¨±è¨­è¨è¨è¨¢è±è±è²©è²¬è²«è²¨è²ªè²§èµ§èµ¦è¶¾è¶ºè»è»ééééé£éééééé éé¢ééé"],["b3a1","é¨é­é½éééµé¦é£é§é­é©ééªéµé³é¸é°é´é¶é·é¬ééªé©ç« ç«é é é­é³¥é¹µé¹¿éº¥éº»å¢ååååååååæå±å²å´åµå©ååååå¥å»åå§å¼ååååååªååååå³å®åå¾å²åå»å¬å±å¾åå«ååå ¯å ªå ´å ¤å °å ±å ¡å å  å£¹å£ºå¥ "],["b440","å©·åªå©¿åªåªåª§å­³å­±å¯å¯å¯å¯å°å°å°±åµåµå´´åµå·½å¹å¸½å¹å¹å¹¾å»å»å»å»å¼¼å½­å¾©å¾ªå¾¨ææ¡æ²æ¶æ ææ£æºææ°æ»æ´æ¨æ±ææ¶ææææææ£ææææ©æææ"],["b4a1","ææ£ææ¡ææ­æ®æ¶æ´æªææææ¹ææ¦æ¢æ£æææ¯æ®æ°æ´æ¶æ¯ææºæ¾æ·æ¾æ¿æææ£ºæ£æ£ æ£æ£æ¤æ£æ£µæ£®æ£§æ£¹æ£æ£²æ££æ£æ£æ¤æ¤æ¤æ£æ£æ¥®æ£»æ¬¾æ¬ºæ¬½æ®æ®æ®¼æ¯¯æ°®æ°¯æ°¬æ¸¯æ¸¸æ¹æ¸¡æ¸²æ¹§æ¹æ¸ æ¸¥æ¸£æ¸æ¹æ¹æ¸¤æ¹æ¹®æ¸­æ¸¦æ¹¯æ¸´æ¹æ¸ºæ¸¬æ¹æ¸æ¸¾æ»"],["b540","æºæ¸æ¹æ¹£æ¹æ¹²æ¹©æ¹ççç¦ç°ç¡ç¶ç®ççççç¶ç¥ç´ç©çºçªç³ç¢ç¥çµç¶ç´ç¯çç¦ç¨ç¥ç¦ç«çªç¢çç£çççç ç»ç¼ççç´ççç­ç¡ç¡¬ç¡¯ç¨ç¨ç¨ç¨ç¨çª"],["b5a1","çªçªç«¥ç«£ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç²ç²¥çµçµçµ¨çµç´«çµ®çµ²çµ¡çµ¦çµ¢çµ°çµ³åç¿ç¿èèèèèèèèè¹èè¾èèè´èèè©èè¸èè èèèè¯è±è´èèè°èèè½è²èè¸èèèèèèèèèè­èèè¤èèè¡è£è£è¢±è¦è¦è¨»è© è©è©è¨¼è©"],["b640","è©è©è©è©è¨´è¨ºè¨¶è©è±¡è²è²¯è²¼è²³è²½è³è²»è³è²´è²·è²¶è²¿è²¸è¶è¶è¶è·è·è·è·è·è·è·è·è»»è»¸è»¼è¾é®éµé±é¸é²é¶ééµéé¾é£é¥éééé£éééééééééé"],["b6a1","ééééééé½éééé²ééééééé¯é²éé é é é£§é£ªé£¯é£©é£²é£­é¦®é¦­é»é»é»äºå­åµå²å³åå¾å¬å·å»å¯åå¿å·å½åå¦å¤å¢å£å¯åå¨åå¦ååååå£å¤å¯åå¡ååå¥åååå¡å¡å¡å¡å¡å¡å¡«å¡å¡­å¡å¡¢å¡å¡å¥§å«å«å«åª¾åª½åª¼"],["b740","åª³å«åª²åµ©åµ¯å¹å¹¹å»å»å¼å½å¾¬å¾®æææææ³ææ¹æææææææ¾æ´æ§æææ·æ¡æ¢ææ¾ææªæ­æ½æ¬æææææ¶ææææ¬ææ°ææææææææææ¦æ¥­"],["b7a1","æ¥æ¥·æ¥ æ¥æ¥µæ¤°æ¦æ¥æ¥¨æ¥«æ¥æ¥æ¥¹æ¦æ¥æ¥£æ¥æ­æ­²æ¯æ®¿æ¯æ¯½æº¢æº¯æ»æº¶æ»æºæºæ»æ»æº¥æºæº¼æººæº«æ»æºæºæ»æ»æºªæº§æº´ççç©ç¤çç§çç¬ç¦çç¥ççç¨ççºçç·çç¿ç¾ç¯çççççç¿çççç¶ç¸çç°çç²ç±çºç¿ç´ç³çççç«ç¦çç£"],["b840","ç¹çªç¬çç¥ç¨ç¢ç®ç¢ç¢°ç¢ç¢ç¢ç¢ç¡¼ç¢ç¢ç¡¿ç¥ºç¥¿ç¦è¬ç¦½ç¨ç¨ç¨ ç¨ç¨ç¨çªçª ç­·ç¯ç­ ç­®ç­§ç²±ç²³ç²µç¶çµ¹ç¶ç¶ç¶çµç½®ç½©ç½ªç½²ç¾©ç¾¨ç¾¤èèèèè±è°è¸è¥è®è³è«"],["b8a1","è¹èºè¦èèèè·è½è±èµè¦è«èè¬èè¼èµè¡è£è©è­èèèèè¹èèèèè¾è»èèèèè¡è£è£è£è£è£è£è£¡è£è£è£è¦è§£è©«è©²è©³è©¦è©©è©°èªè©¼è©£èª è©±èªè©­è©¢è©®è©¬è©¹è©»è¨¾è©¨è±¢è²è²è³è³è³è³è²²è³è³è³è·¡è·è·¨è·¯è·³è·ºè·ªè·¤è·¦èº²è¼è¼è»¾è¼"],["b940","è¾è¾²éééééé¼éééééééé¾éééé¬éªé©éé·éé¸é½éé¾ééé¤éé´éééé¹é¿éééééééééé·é»é¹é¶éé´é¶é é é é é é é£¼é£´"],["b9a1","é£½é£¾é¦³é¦±é¦´é«¡é³©éºé¼é¼é¼ å§å®å¥åå­ååååå±åå©å¢å³ååå±å­å¾åååå½åååååå·ååååå¶ååå¡µå¡¾å¢å¢å¢å¡¹å¢å¡½å£½å¤¥å¤¢å¤¤å¥ªå¥©å«¡å«¦å«©å«å«å«å«£å­µå¯å¯§å¯¡å¯¥å¯¦å¯¨å¯¢å¯¤å¯å°å±¢å¶å¶å¹å¹£å¹å¹å¹å»å»å¼å½å½°å¾¹æ"],["ba40","æ¿ææ·æ¢æ£ææææµæªææææ¤æ¸ææºææ§æ´æ­æ»æ²æ¡æææ¢æ¨ææ¦æ¦¨æ¦æ§æ¦®æ§æ§æ¦æ¦·æ¦»æ¦«æ¦´æ§æ§æ¦­æ§æ¦¦æ§æ¦£æ­æ­æ°³æ¼³æ¼æ»¾æ¼æ»´æ¼©æ¼¾æ¼ æ¼¬æ¼æ¼æ¼¢"],["baa1","æ»¿æ»¯æ¼æ¼±æ¼¸æ¼²æ¼£æ¼æ¼«æ¼¯æ¾æ¼ªæ»¬æ¼æ»²æ»æ»·ççç½çççç¾ççççç¤ç£çªç°ç­ççç§ççççç¡ç£çç½ç¿ç¡ç£ç¢ç¢§ç¢³ç¢©ç¢£ç¦ç¦ç¦ç¨®ç¨±çªªçª©ç«­ç«¯ç®¡ç®ç®ç­µç®ç®ç®ç®ç®¸ç®ç®ç²¹ç²½ç²¾ç¶»ç¶°ç¶ç¶½ç¶¾ç¶ ç·ç¶´ç¶²ç¶±ç¶ºç¶¢ç¶¿ç¶µç¶¸ç¶­ç·ç·ç¶¬"],["bb40","ç½°ç¿ ç¿¡ç¿èèèèèèèèè¿èè§èºèèèèèè¿èèèèè²èèè¸èèèè¼èèè¿èè»è¢è¥è´èèè·è©è£³è¤è£´è£¹è£¸è£½è£¨è¤è£¯èª¦èªèªèª£èªèª¡èªèª¤"],["bba1","èªªèª¥èª¨èªèªèªèª§è±ªè²è²è³è³è³èµ«è¶è¶è·¼è¼è¼è¼è¼è¾£é ééé£ééé¢ééééééµé¸é·é´é¸ééééé»ééé¨é¼éé¡é¨é©é£é¥é¤ééééééé¼éé¶é é é¢¯é¢±é¤é¤é¤é¤é§éª¯éª°é«¦é­é­é³´é³¶é³³éº¼é¼»é½ååå»åµå¹ååååå"],["bc40","åååååå°å²å®å»å¹å²å¿å´å©åååå´å¶å¯å°å¢å¢å¢å¢³å¢å¢®å¢©å¢¦å¥­å¬å«»å¬å«µå¬å¬å¯®å¯¬å¯©å¯«å±¤å±¥å¶å¶å¹¢å¹å¹¡å»¢å»å»å»å»£å» å½å½±å¾·å¾µæ¶æ§æ®æææ"],["bca1","æ¼æ°æ«æ¾æ§ææ«ææ¬ææ¤ææ®æ®æ©æ¯æ¹ææ²æææ°æ¥æææ©ææ®æ­æ«ææ¬ææ¢æ³æµæ·æ¸æ®æ«æ´æ±æ¨£æ¨æ§¨æ¨æ¨æ¨æ§½æ¨¡æ¨æ¨æ§³æ¨æ¨æ§­æ¨æ­æ­æ®¤æ¯æ¯æ¼¿æ½¼æ¾æ½æ½¦æ½æ¾æ½­æ½æ½¸æ½®æ¾æ½ºæ½°æ½¤æ¾æ½æ»æ½¯æ½ æ½çç¬ç±ç¨ççççç©çç"],["bd40","ç¾çç¿ç ç©çç¤ç¦ç¡ç¢ççºç¤çççççç£ç£ç¢ºç£ç¢¾ç£ç¢¼ç£ç¨¿ç¨¼ç©ç¨½ç¨·ç¨»çª¯çª®ç®­ç®±ç¯ç®´ç¯ç¯ç¯ç® ç¯ç³ç· ç·´ç·¯ç·»ç·ç·¬ç·ç·¨ç·£ç·ç·ç·©ç¶ç·ç·²ç·¹ç½µç½·ç¾¯"],["bda1","ç¿©è¦èèèè èèèè½èè®è¬è­èèè£è¡èè¬è¥è¿èèè´è¶è è¦è¸è¨èèèèè¡è¡è¤è¤è¤è¤è¤è¤èª¼è«è«è«èªè«è«¸èª²è«è«èª¿èª°è«è«èª¶èª¹è«è±è±è±¬è³ è³è³¦è³¤è³¬è³­è³¢è³£è³è³ªè³¡èµ­è¶è¶£è¸«è¸è¸è¸¢è¸è¸©è¸è¸¡è¸èººè¼è¼è¼è¼©è¼¦è¼ªè¼è¼"],["be40","è¼¥é©é®é¨é­é·é°é­é§é±éééééé»é·éªé¬é¤éé³é¼ééé°é²é­é±ééééé éééé ¡é «é é¢³é¤é¤é¤é¤é§é§é§é§é§é§é§é§éª·é«®é«¯é¬§é­é­é­·é­¯é´é´"],["bea1","é´éº©éº¾é»å¢¨é½åååååååªåååå³åå«å¹å©å¤å¸åªå¨å¥å±å¯å¬å¢å¶å£å¢¾å£å£å¥®å¬å¬´å­¸å¯°å°å½æ²ææ©æææ¶æ¾æææ°ææææ»æ¼ææææææ¿æææ¾æ´æææ¹æææ¸æ¨½æ¨¸æ¨ºæ©æ©«æ©æ¨¹æ©æ©¢æ©¡æ©æ©æ¨µæ©æ©æ­æ­·æ°æ¿æ¾±æ¾¡"],["bf40","æ¿æ¾¤æ¿æ¾§æ¾³æ¿æ¾¹æ¾¶æ¾¦æ¾ æ¾´ç¾çççççç¹çççççç¨çç£çççç¢ççç´ç¸çºç§ç¥ç ççç¥ç£¨ç£ç£¬ç£§ç¦¦ç©ç©ç©ç©ç©çªºç¯ç°ç¯ç¯¤ç¯ç¯¡ç¯©ç¯¦ç³ç³ç¸"],["bfa1","ç¸ç¸ç¸ç¸£ç¸ç¸ç¸ç¸ç½¹ç¾²ç¿°ç¿±ç¿®è¨è³è©è¨è»èèèèèèè¨è©èèè­èªèèèèè¢èè¡¡è¤ªè¤²è¤¥è¤«è¤¡è¦ªè¦¦è«¦è«ºè««è«±è¬è«è«§è«®è«¾è¬è¬è«·è«­è«³è«¶è«¼è±«è±­è²è³´è¹è¸±è¸´è¹è¸¹è¸µè¼»è¼¯è¼¸è¼³è¾¨è¾¦éµé´é¸é²é¼éºé´éé é¶é¸é³é¯é¢é¼é«éé"],["c040","éé¦é¡éé®éé»é§é¨éªéééééééééé¦éé °é ¸é »é ·é ­é ¹é ¤é¤é¤¨é¤é¤é¤¡é¤é§­é§¢é§±éª¸éª¼é«»é«­é¬¨é®é´é´£é´¦é´¨é´é´é»é»é¾é¾åªåå¡å²åµååååå"],["c0a1","åå£å£å£å£å¬°å¬ªå¬¤å­ºå°·å±¨å¶¼å¶ºå¶½å¶¸å¹«å½å¾½ææææ¦ææ²æ´ææææ æ°æ¦æ¬æ±æ¢æ­æææææªæªæªæª¢æªæ«æª£æ©¾æªæªæª æ­æ®®æ¯æ°æ¿æ¿±æ¿æ¿ æ¿æ¿¤æ¿«æ¿¯æ¾æ¿¬æ¿¡æ¿©æ¿æ¿®æ¿°ç§çç®ç¦ç¥ç­ç¬ç´ç çµçç°ç²ç©ç°ç¦ç¨ççççªç³çªç°ç¬"],["c140","ç§ç­ç¯ç£·ç£ºç£´ç£¯ç¤ç¦§ç¦ªç©çª¿ç°ç°ç¯¾ç¯·ç°ç¯ ç³ ç³ç³ç³¢ç³ç³ç³ç¸®ç¸¾ç¹ç¸·ç¸²ç¹ç¸«ç¸½ç¸±ç¹ç¹ç¸´ç¸¹ç¹ç¸µç¸¿ç¸¯ç½ç¿³ç¿¼è±è²è°è¯è³èèèºèèè¿è½èè¾è¨èè±èª"],["c1a1","èè¾èèèè¯èèè¨èè§èèè³èèè«è»èºèèè¤»è¤¶è¥è¤¸è¤½è¦¬è¬è¬è¬è¬è¬è¬ è¬è¬è¬è±è°¿è±³è³ºè³½è³¼è³¸è³»è¶¨è¹è¹è¹è¹è½è¼¾è½è½è¼¿é¿é½ééééé¹é£ééééé¨éµéé¥ééé¾é¬éé°éééééééé±é¸éééé éé¡é¢¶é¤µé¨"],["c240","é§¿é®®é®«é®ªé®­é´»é´¿éºé»é»é»é»é»é¼¾é½å¢åå®å£å£å¬¸å½æ£æ³æ´æ²æ¾ææºæ»æ·æ·ææ¦æª³æª¬æ«æª»æª¸æ«æª®æª¯æ­æ­¸æ®¯ççæ¿¾çæ¿ºççç»ç¼ç¾ç¸ç·çµç§ç¿ççç"],["c2a1","çç½ç¿ç»ç¼ç¤ç¦®ç©¡ç©¢ç© ç«ç«ç°«ç°§ç°ªç°ç°£ç°¡ç³§ç¹ç¹ç¹ç¹ç¹¡ç¹ç¹ç½ç¿¹ç¿»è·è¶èèèèè©èèèè°èºè¹è¦è¯è¬è²è è¦è¦²è§´è¬¨è¬¹è¬¬è¬«è±è´è¹è¹£è¹¦è¹¤è¹è¹è»è½è½éééé«é¬ééééé¢é³é®é¬é°éééééééé¢ééééé¤é£é¦"],["c340","é­é¹é¡é¡é¡é¡é¡é¢ºé¤¾é¤¿é¤½é¤®é¦¥é¨é«é¬é¬é­é­é­é¯é¯é¯½é¯é¯éµéµéµ é» é¼é¼¬å³å¥å£å£å£¢å¯µé¾å»¬æ²æ·æ¶æµæææ ææ«¥æ«æ«æ«ççç¨çççççççç¢ç¸"],["c3a1","çºç½çç£çççç¡çç¤ç¦±ç©«ç©©ç°¾ç°¿ç°¸ç°½ç°·ç±ç¹«ç¹­ç¹¹ç¹©ç¹ªç¾ç¹³ç¾¶ç¾¹ç¾¸èè©èèªèè¤è¥è·è»è è è¹è¾è¥ è¥è¥è¥è­è­è­è­è­è­è­è­è­è´è´è¹¼è¹²èºè¹¶è¹¬è¹ºè¹´è½è½è¾­ééé±é®é¡éééééééé¢ééé¤éé¨éé´é£éªé§é¡éé»é¡"],["c440","é¡é¡é¢¼é¥é¥é¨é¨é¬é¯¨é¯§é¯é¯é¶éµ¡éµ²éµªéµ¬éºéºéºéº´å¸å¨å·å¶å´å¼å£¤å­å­å­½å¯¶å·æ¸æºææææ¦æ§æ«¬ç¾ç°ç²çç»çç¢ç¥ç¤¦ç¤ªç¤¬ç¤«ç«ç«¶ç±ç±ç±ç³¯ç³°è¾®ç¹½ç¹¼"],["c4a1","çºç½èèè¦è»è¹èèºèèèèè è è¥¤è¦ºè§¸è­°è­¬è­¦è­¯è­è­«è´è´èºèºèºèºé´éééé½é¡é°é£é¥é¥é¦¨é¨«é¨°é¨·é¨µé°é°é¹¹éºµé»¨é¼¯é½é½£é½¡å·å¸åååå¤å±¬å·æ¼æ¾ææææ©æ«»æ¬æ«ºæ®²ççç§ççç©çç±çºçºç¾¼èè­èè £è ¢è ¡è è¥ªè¥¬è¦½è­´"],["c540","è­·è­½è´èºèºèºè½è¾¯éºé®é³éµéºé¸é²é«é¢é¸é¹é²é¿é¡§é¡¥é¥é©é©é©é¨¾é«é­é­é°­é°¥é¶¯é¶´é·é¶¸éºé»¯é¼é½é½¦é½§å¼å»åååå­¿å·å·å½æ¿æ¤æ¬æ­¡çççç¤çç®ç¬"],["c5a1","ç¦³ç± ç±è¾è½èè¥²è¥¯è§¼è®è´è´èºèºè½¡ééééé½é¾ééé¡«é¥é©é©é«é¬é±é°±é°¾é°»é·é·é¼´é½¬é½ªé¾åå·ææ£æ«æªæ¬æ¬çç«ç±¤ç±£ç±¥çºçºçºè¢è¸è¿è ±è®ééé£é é¤é¨é¡¯é¥é©é©é©é«é«é«é±é±é±é·¥éºé»´åå£©æ¬çç±ç²çç½ç¾è ¶è ¹è¡¢è®è®"],["c640","è®è·è´ééªééééé¡°é©é¬¢é­é±é·¹é·ºé¹¼é¹½é¼é½·é½²å»³æ¬ç£ç±¬ç±®è »è§èº¡éé²é°é¡±é¥é«é¬£é»ç¤çè®é·éé©¢é©¥çºè®èºªéé½é¾é¼é±·é±¸é»·è±é¿é¸ç¨é©ªé¬±é¸é¸ç±²"],["c940","ä¹ä¹åµååä¸ä¸ä¹äºåï¨å±®å½³ä¸åä¸ä¸®äºä»ä»ä»åå¼å¬å¹å å¤å¤¬å°å·¿æ¡æ®³æ¯æ°ç¿ä¸±ä¸¼ä»¨ä»ä»©ä»¡ä»ä»åååå¢å£å¤å¤¯å®å®å°å°»å±´å±³å¸åºåºå¿æææ°"],["c9a1","æ°¶æ±æ°¿æ°»ç®ç°çç¦¸èéä¼ä¼ä¼¬ä»µä¼ä»±ä¼ä»·ä¼ä¼ä¼ä¼ä¼¢ä¼ä¼ä»´ä¼å±åååå¦å¢ååååå¡åå®åªå´å¤¼å¦å¥¼å¦å¥»å¥¾å¥·å¥¿å­å°å°¥å±¼å±ºå±»å±¾å·å¹µåºå¼å¼å½´å¿å¿å¿æææ¤æ¡æ¦æ¢ææ ææ¥æ¯æ®æ¾æ¹æ¸æ»æºæ¿æ¼æ³æ°æ±æ±æ±æ±æ±æ±æ±"],["ca40","æ±ç±çç´çµççªç¿ç©µç½è¸è¼èè½è¿èè¥¾éééééé¢é¤é é£ä½ä¼»ä½¢ä½ä½ä½¤ä¼¾ä½§ä½ä½ä½ä½ä¼­ä¼³ä¼¿ä½¡åå¹ååå¡å­å®åå£å²ååå°å·åªååååå¥å"],["caa1","å½ååå¨å¤åå®å§å¥ååååååå¤å¥å¦¦å¦å¦ å¦å¦å¦¢å¦å¦å¦§å¦¡å®å®å°¨å°ªå²å²å²å²å²å²å²å²å²å²å· å¸å¸åºåºåºåºåºå¼å¼å½¸å½¶å¿å¿å¿å¿­å¿¨å¿®å¿³å¿¡å¿¤å¿£å¿ºå¿¯å¿·å¿»æå¿´æºæææææææ±æ»æºæ°æææ·æ½æ²æ´æ·æ°æ´æ³æ²æµææ"],["cb40","æææææææææ¯æ°æ°æ±¸æ±§æ±«æ²æ²æ²æ±±æ±¯æ±©æ²æ±­æ²æ²æ²æ±¦æ±³æ±¥æ±»æ²ç´çºç£ç¿ç½ççççºçççççççºç¹çççç¤½è´èèèèèèèèèèè"],["cba1","èèèè±¸è¿è¾¿éé¡é¥éé§é é°é¨é¯é­ä¸³ä¾ä½¼ä¾ä½½ä¾ä¾ä½¶ä½´ä¾ä¾ä½·ä½ä¾ä½ªä¾ä½¹ä¾ä½¸ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä½«ä½®åå¼å¾åµå²å³åå±å¼ååå¼åååå¿ååååå«åºå¾å¥å¬å´å¦åå¯å¡å åå£å§å¤å·å¹å¯å²å­å«å±å°å¶ååµå»å³å´å¢"],["cc40","å¨å½å¤å¥å¦µå¦ºå§å§å¦²å§å§å¦¶å¦¼å§å§å¦±å¦½å§å§å¦´å§å­¢å­¥å®å®å±å±å²®å²¤å² å²µå²¯å²¨å²¬å²å²£å²­å²¢å²ªå²§å²å²¥å²¶å²°å²¦å¸å¸å¸å¼¨å¼¢å¼£å¼¤å½å¾å½¾å½½å¿å¿¥æ­æ¦ææ²æ"],["cca1","æ´æææ³æææ¬æ¢æææ®æææææææ½æ­æ´ææ¾æªæ¶ææ®æ³æ¯æ»æ©æ°æ¸æ½æ¨æ»ææ¼ææææ»æææææ½æææ¶æææ¬æææ¶æ»ææææ´æææºæææææ½ææ¸æ¹ææ¬¥æ®æ­¾æ¯æ°æ²æ³¬æ³«æ³®æ³æ²¶æ³æ²­æ³§æ²·æ³æ³æ²ºæ³æ³æ³­æ³²"],["cd40","æ³æ³æ²´æ²æ²æ²æ³æ³æ´°æ³æ³æ²°æ³¹æ³æ³©æ³ççççççççççççªççççççççççç¤ç¡ç­ç¦ç¢ç ç¬ççç¨ç¿çç¾ççç¯ç³ç±ç°çµç¸ç¼ç¹ç»çº"],["cda1","ç·ç¥ç¤¿ç§ç©¸ç©»ç«»ç±µç³½èµèè®è£è¸èµè­è è èè«èèèèµè§è®è¼èèºè´è¨è¡è©èè¤èè¶è¢è°è¯è­è®è±è¿è¿è¿è¿è¿è¿è¿é²é´é¯é³é°é¹é½é¼éºéä¿ä¿ä¿ä¾²ä¿ä¿ä¿ä¿ä¿ä¿ä¾»ä¾³ä¿ä¿ä¿ä¾ºä¿ä¾¹ä¿¬ååååå½å¼åååååºå¡å­å¥å"],["ce40","åèå·å®åå¶ååå å°å¼å¢å¾å²åå°åµååå¤ååååååååå¥ååå£´å¤å¥å§¡å§å§®å¨å§±å§å§ºå§½å§¼å§¶å§¤å§²å§·å§å§©å§³å§µå§ å§¾å§´å§­å®¨å±å³å³å³å³å³å³"],["cea1","å³å³å³å³å³å³å³å³å³å³å³å³å³å³¸å·¹å¸¡å¸¢å¸£å¸ å¸¤åº°åº¤åº¢åºåº£åº¥å¼å¼®å½å¾æ·æ¹ææ²æææææææææææ¤æææ¦æ®ææææææµæææ«æ¹æææ¸æ¶ææææºææ»æ°æææªæ¿æ¶æ¡æ²æµææ¦æ¢æ³æ«æºææ´æ¹æ®ææææ²ææº"],["cf40","ææ»æ¸æææ·ææ«æ¤ææµææ³æ·æ¶æ®æ£ææ¹ææ§æ°æ²æ¼ææ­ææ®æ¦ææºææææªææ¬¨æ®æ®æ®¶æ¯æ¯æ¯ æ° æ°¡æ´¨æ´´æ´­æ´æ´¼æ´¿æ´æ´æ³æ´³æ´æ´æ´ºæ´æ´æ´æ´æµ"],["cfa1","æ´æ´æ´·æ´æ´æµæ´æ´ æ´¬æ´æ´¢æ´æ´ç·çç¾ç±ç°ç¡ç´çµç©çççç¬ç°ç³ç®çç¤ç¨ç«ççªç¦ç£çççççç¹ç¶çµç´ç«ç¿çç¾ççç¸çç¬ç®ç®ççç§çªç¹ççççççç·ç»çºç§ç¨ç ç ç ç ç ç ç ç ç ç ç¥ç¥ç¥ç¥ç¥ç§ç§ç§ç§ç§çª"],["d040","ç©¾ç«ç¬ç¬ç±ºç±¸ç±¹ç±¿ç²ç²ç´ç´ç´ç½ç¾ç¾ç¾¾èèèèè·èèè èèèèèè£èèèèèèèè¦èè¿è¡èèè¾è¹èè¨èèèºè«èè´è¬è¡è²èµèè»è¶è°èª"],["d0a1","è¤è èºè³è­è·è´è¼è³è¡è¡è¡§è¡ªè¡©è§è¨è¨èµ²è¿£è¿¡è¿®è¿ é±é½é¿ééé¾éééééééééééååååå¢å°åä¿µä¿´å³å·å¬ä¿¶ä¿·ååå å§åµå¯å±åååååååååå¡åååååå¢åååå¦å¢ååå§å³å¤åå¿ååå«ååå±"],["d140","åå»å·å¸å ååååååå ²åååºåå½å¼å¸å¶å¿ååå¹åå¤å¥å¨å¨å¨­å¨®å¨å¨å¨å¨å¨å¨³å­¬å®§å®­å®¬å°å±å±å³¬å³¿å³®å³±å³·å´å³¹å¸©å¸¨åº¨åº®åºªåº¬å¼³å¼°å½§æææ§"],["d1a1","ææ¢æææææææææææææææ²æææ¬æææ¶ææ¤æ¹æææ¼æ©ææ´ææææ­ææ³æææ¸ææææææææææææææææ æ æ¡æ ²æ ³æ »æ¡æ¡æ æ ±æ æ µæ «æ ­æ ¯æ¡æ¡æ ´æ æ æ æ ¦æ ¨æ ®æ¡æ ºæ ¥æ  æ¬¬æ¬¯æ¬­æ¬±æ¬´æ­­èæ®æ¯¦æ¯¤"],["d240","æ¯¨æ¯£æ¯¢æ¯§æ°¥æµºæµ£æµ¤æµ¶æ´æµ¡æ¶æµæµ¢æµ­æµ¯æ¶æ¶æ·¯æµ¿æ¶æµæµ§æµ æ¶æµ°æµ¼æµæ¶æ¶æ´¯æµ¨æ¶æµ¾æ¶æ¶æ´æ¶æµ»æµ½æµµæ¶çççççç¼¹ç¢çççç çççççççç¡çç¸"],["d2a1","ç·ç¶ççºç´ç¾ç¶ç³ç»çççç¥çç¼ç§ç£ç©ççççççççç¨ççç´çµç¡ççç°çç»ççç¿ç¶çºçççççççç£ççççç¢ç§ç £ç ¬ç ¢ç µç ¯ç ¨ç ®ç «ç ¡ç ©ç ³ç ªç ±ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç§«ç§¬ç§ ç§®ç§­ç§ªç§ç§ç§çªçªçªçªçªçªçªç«ç¬"],["d340","ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç²ç²ç²ç²ç²ç²ç²ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç½ç½¡ç½ç½ ç½ç½ç¾ç¾ç¿ç¿ç¿èè¾è¹èºè²è¹èµèè»èèè¯è¥è³è­èèèè¥èè¿èè¦èè¢"],["d3a1","èèèèªèè¼èèè¤è è·è¯è©èèèèèè¬èè§èèèè¢è¨èèèèèèèèèèè¥èè¡è§èèèèèèè¡è¡è¡­è¡µè¡¶è¡²è¢è¡±è¡¿è¡¯è¢è¡¾è¡´è¡¼è¨è±è±è±»è²¤è²£èµ¶èµ¸è¶µè¶·è¶¶è»è»è¿¾è¿µéè¿¿è¿»éè¿¼è¿¶éé ééé£éé¥ééééé¤é"],["d440","éééé¢éééé¼é££é«é¬¯ä¹¿å°åªå¡åå åååå²åååååå¢åååå©å«å£å¤ååå®å³åååå«å­å¬å®ååå­ååµå¶å¼ååå´åªåå¢å¶åµå°åå"],["d4a1","åå²å¥åå¹åå­å»ååååå»å å¢å¶åå´å å­å½å å¸å å³åå å®å£å²å¥å¬å¡å å¼å å§å å å±å©å°å å å¥å© å©å©å©§å©å¨¸å¨µå©­å©å©å©¥å©¬å©å©¤å©å©å©å©å©å©å©åªå¨¾å©å¨¹å©å©°å©©å©å©å©å©å©å­²å­®å¯å¯å±å´å´å´å´å´ å´å´¨å´å´¦å´¥å´"],["d540","å´°å´å´£å´å´®å¸¾å¸´åº±åº´åº¹åº²åº³å¼¶å¼¸å¾å¾å¾ææææ¾æ°æºææææ¤ææææ±ææ·ææ¿ææææ²æ¥æææ½æ½ææ­æææ«ææ¯æææ®æ¯æµææ­æ®æ¼æ¤æ»æ"],["d5a1","æ¸æææææ°æææ¥æ¡ææææ¢ææ¡¹æ¢æ¢æ¢æ¡­æ¡®æ¢®æ¢«æ¥æ¡¯æ¢£æ¢¬æ¢©æ¡µæ¡´æ¢²æ¢æ¡·æ¢æ¡¼æ¡«æ¡²æ¢ªæ¢æ¡±æ¡¾æ¢æ¢æ¢æ¢ æ¢æ¢¤æ¡¸æ¡»æ¢æ¢æ¢æ¡½æ¬¶æ¬³æ¬·æ¬¸æ®æ®æ®æ®æ®æ°ªæ·æ¶«æ¶´æ¶³æ¹´æ¶¬æ·©æ·¢æ¶·æ·¶æ·æ¸æ·æ· æ·æ·æ¶¾æ·¥æ·æ·æ·æ·´æ·æ¶½æ·­æ·°æ¶ºæ·æ·æ·æ·"],["d640","æ·æ·²æ·æ·½æ·æ·æ·£æ¶»çºçç·çç´çç°çç³çç¼ç¿çççç¸ç¶çççç¾ç»ç¼ç¿çççççççç¿çççç¶ç¸çµççç½çççºç¼ç¿ççç´çç¤ç£ççç"],["d6a1","çççççççç¹ç¯ç­ç±ç²ç´ç³ç½ç¥ç»çµç¡ç¡ç¡ç¡ç¡ç¡ç ¦ç¡ç¡ç¥¤ç¥§ç¥©ç¥ªç¥£ç¥«ç¥¡ç¦»ç§ºç§¸ç§¶ç§·çªçªçªç¬µç­ç¬´ç¬¥ç¬°ç¬¢ç¬¤ç¬³ç¬ç¬ªç¬ç¬±ç¬«ç¬­ç¬¯ç¬²ç¬¸ç¬ç¬£ç²ç²ç²ç²£ç´µç´½ç´¸ç´¶ç´ºçµç´¬ç´©çµçµç´¾ç´¿çµç´»ç´¨ç½£ç¾ç¾ç¾ç¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿è"],["d740","èèèèèèè¥èèè­èè¬èè¡èè§èè¢èè¸è³èºè´è²è´èè£è¨èèºè³è¤è´èèèèèµèè©è½èèèèèªèè¾è¥è¯èèè°è¿è¦èè®è¶èèèè¿è·"],["d7a1","èèèèºè°èè¹è³è¸èè´è»è¼èè½è¾è¡è¢è¢è¢¨è¢¢è¢ªè¢è¢è¢¡è¢è¢è¢§è¢è¢è¢è¢¤è¢¬è¢è¢è¢è¦è§è§è§è¨°è¨§è¨¬è¨è°¹è°»è±è±è±½è²¥èµ½èµ»èµ¹è¶¼è·è¶¹è¶¿è·è»è»è»è»è»è» è»¡é¤ééééé¡é¯éªé°é´é²é³éé«é¬é©éééééé¬é´é±é³é¸é¤é¹éª"],["d840","é«é·é¨é®éºééé¼é­é«é±é¯é¿éªé é£¥é¦åååååå£ååååå¨ååååååååå¤å§åå¨å¥å­å·åå¢ååååµåå£åå¤å½åå¦å¿åå¡ååå ©å ·"],["d8a1","å å å §å £å ¨åµå¡å ¥å å å ³å ¿å ¶å ®å ¹å ¸å ­å ¬å »å¥¡åª¯åªåªå©ºåª¢åªå©¸åª¦å©¼åª¥åª¬åªåª®å¨·åªåªåªåªåªåª©å©»å©½åªåªåªåªåªå¯ªå¯å¯å¯å¯å¯å¯å°å°°å´·åµåµ«åµåµå´¿å´µåµåµåµå´³å´ºåµå´½å´±åµåµå´¹åµå´¸å´¼å´²å´¶åµåµå¹å¹å½å¾¦å¾¥å¾«ææ¹ææ¢æææ"],["d940","æ²ææææµææ¸æ¼æ¾ææææææ¿æææææ±æ°ææ¥æ¨æ¯æææ³ææ æ¶ææ²æµæ¡ææ¾æææææææææææ°æææ²æ§æªæ¤ææ¨æ¥ææææ®ææ"],["d9a1","æ¼æ¬æ»ææ±æ¹æªæ²ææ¤æ£æ¤æ£æ¤ªæ£¬æ£ªæ£±æ¤æ£æ£·æ£«æ£¤æ£¶æ¤æ¤æ£³æ£¡æ¤æ£æ¤æ¥°æ¢´æ¤æ£¯æ£æ¤æ£¸æ£æ£½æ£¼æ£¨æ¤æ¤æ¤æ£æ£æ£æ£æ£¦æ£´æ£æ¤æ£æ£©æ¤æ¤¥æ£æ¬¹æ¬»æ¬¿æ¬¼æ®æ®æ®æ®æ®½æ¯°æ¯²æ¯³æ°°æ·¼æ¹æ¹æ¸æ¹æºæ¸¼æ¸½æ¹æ¹¢æ¸«æ¸¿æ¹æ¹æ¹³æ¸æ¸³æ¹æ¹æ¹æ¸»æ¸æ¸®æ¹"],["da40","æ¹¨æ¹æ¹¡æ¸±æ¸¨æ¹ æ¹±æ¹«æ¸¹æ¸¢æ¸°æ¹æ¹¥æ¸§æ¹¸æ¹¤æ¹·æ¹æ¹¹æ¹æ¹¦æ¸µæ¸¶æ¹ç çç¯ç»ç®ç±ç£ç¥ç¢ç²çç¨çºççççççççççç°ç¢ç±ç³ç§ç²ç­ç¦ç£çµçç®ç¬ç°ç«ç"],["daa1","çç¡ç­ç±ç¤ç£çç©ç ç²ç»ç¯ç¯ç¬ç§çç¡ç¦ççç¤ççççççççççççççç¬ç¡ ç¡¤ç¡¥ç¡ç¡­ç¡±ç¡ªç¡®ç¡°ç¡©ç¡¨ç¡ç¡¢ç¥´ç¥³ç¥²ç¥°ç¨ç¨ç¨ç¨ç¨çªç«¦ç«¤ç­ç¬»ç­ç­ç­ç­ç­ç­ç­ç²¢ç²ç²¨ç²¡çµçµ¯çµ£çµçµçµ§çµªçµçµ­çµçµ«çµçµçµ©çµçµçµç¼¾ç¼¿ç½¥"],["db40","ç½¦ç¾¢ç¾ ç¾¡ç¿èèèè¾èèèèèèè½èèºè¦è®è·è¸è¹èè¼è½è¿èµè»èè¹è£èè¨èè§è¤è¼è¶èèèè«è£è¿èèè¥èè¿è¡èèèèµèèèèèèèè³"],["dba1","èèºèèèªèèè¬è®èè»èè¢èèè¾èè¢è¦èè£èèªèè«èè¬è©èè¨èè¡è¡è¡è¢ºè£è¢¹è¢¸è£è¢¾è¢¶è¢¼è¢·è¢½è¢²è¤è£è¦è¦è¦è§è§è§è©è©è¨¹è©è©è©è©è©è©è©è©è©è©è©è©è±è²è²è²ºè²¾è²°è²¹è²µè¶è¶è¶è·è·è·è·è·è·è·è·è·è·è·è·è»¯è»·è»º"],["dc40","è»¹è»¦è»®è»¥è»µè»§è»¨è»¶è»«è»±è»¬è»´è»©é­é´é¯éé¬éé¿é¼éé¹é»éééééé¡é¤éé¢é ééé¥ééé¦ééééé¿é½ééé§ééé¤ééééé»ééééé¾é"],["dca1","ééééééé±é°é¬é°é®é é¢©é£«é³¦é»¹äºäºäº¶å½å¿åå®ååå´ååå°ååºå±ååå¶å¸ååºå¸å»å¼ååååååååååå©å¿ååååå¢ååå²ååååå¡å¡¨å¡¤å¡å¡å¡å¡¯å¡å¡å¡å¡å¡¥å¡å ½å¡£å¡±å£¼å«å«å«åªºåª¸åª±åªµåª°åª¿å«åª»å«"],["dd40","åª·å«å«åª´åª¶å«åª¹åªå¯å¯å¯å°å°³åµ±åµ£åµåµ¥åµ²åµ¬åµåµ¨åµ§åµ¢å·°å¹å¹å¹å¹å¹å»å»å»å»å»å½å¾¯å¾­æ·æææ«ææ¶æ²æ®ææ¯ææ©ææ é¨æ£æ¥æ¤ææ±æ«ææææ æ¤"],["dda1","æ³æææææ¹æ·æ¢æ£ææ¦æ°æ¨ææµæ¯ææææ¥æ§ææ§ææ®æ¡ææ¯æææææææææææ¸æ æ¥¦æ¥æ¤¸æ¥æ¥¢æ¥±æ¤¿æ¥æ¥ªæ¤¹æ¥æ¥æ¥æ¥ºæ¥æ¥æ¤µæ¥¬æ¤³æ¤½æ¥¥æ£°æ¥¸æ¤´æ¥©æ¥æ¥¯æ¥æ¥¶æ¥æ¥æ¥´æ¥æ¤»æ¥æ¤·æ¥æ¥æ¥æ¤²æ¥æ¤¯æ¥»æ¤¼æ­æ­æ­æ­æ­æ­æ®ï¨æ¯»æ¯¼"],["de40","æ¯¹æ¯·æ¯¸æºæ»æ»æºæ»æºæºæºæº æº±æº¹æ»æ»æº½æ»æºæ»æº·æº°æ»æº¦æ»æº²æº¾æ»æ»æ»æºæºæºæºæº¤æº¡æº¿æº³æ»æ»æºæº®æº£çççç£ç ççç¢ç²ç¸çªç¡ççççç°ççç"],["dea1","çççççççççç¼çç»çºçççççççççççççççççç¡ç¿ç¾ç½çç¹ç·æ¦ç¯ççç·ç¾ç¼ç¹ç¸çç»ç¶ç­çµç½ççµçççç çççç©ç§ççç­ç ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢¡ç¢ç¡¹ç¢ç¢ç¢ç¡»ç¥¼ç¦ç¥½ç¥¹ç¨ç¨ç¨ç¨ç¨ç¨ç¨¢ç¨"],["df40","ç¨ç¨çª£çª¢çªç««ç­¦ç­¤ç­­ç­´ç­©ç­²ç­¥ç­³ç­±ç­°ç­¡ç­¸ç­¶ç­£ç²²ç²´ç²¯ç¶ç¶ç¶ç¶çµ¿ç¶çµºç¶çµ»ç¶çµ¼ç¶ç¶ç¶çµ½ç¶ç½­ç½«ç½§ç½¨ç½¬ç¾¦ç¾¥ç¾§ç¿ç¿è¡è¤è è·èè©èè¢è²æ¡èè¶è§è¯"],["dfa1","èè¡èèèèèèè±è¿èè¶è¹èèè¥èèèè§è°èè½èèè´è³èèèè·èºè´èºèè¸è²èè©èèè¯èè­èè°è¹èèèè¯èèè»èè¶è³è¨è¾èè«è èè®èèèè·èèºèèµèè¸èèèè¶èèè£è£è£è£è£è£è£è£è£è¦è¦è§è§¥è§¤"],["e040","è§¡è§ è§¢è§è§¦è©¶èªè©¿è©¡è¨¿è©·èªèªè©µèªèªè©´è©ºè°¼è±è±è±¥è±¤è±¦è²è²è²è³èµ¨èµ©è¶è¶è¶è¶è¶è¶è¶è¶è¶è·°è· è·¬è·±è·®è·è·©è·£è·¢è·§è·²è·«è·´è¼è»¿è¼è¼è¼è¼è¼è¼è¼éé¿"],["e0a1","ééé½ééééééééé®é¯ééé°éºé¦é³é¥ééé®ééé­é¬éé é§é¯é¶é¡é°é±éé£éé²ééééé²ééééééééééºé½é¸éµé³é·é¸é²é é é é¢¬é£¶é£¹é¦¯é¦²é¦°é¦µéª­éª«é­é³ªé³­é³§éºé»½å¦ååå¨å³ååªåå¤åå¬å°å¯å£å "],["e140","åååå©å«å°å¬å§åååå¼ååååååºååå¿å¹å¢å¡¼å¢å¢å¢å¢å¡¿å¡´å¢å¡ºå¢å¢å¢å¡¶å¢å¢å¡»å¢å¢å£¾å¥«å«å«®å«¥å«å«ªå«å«­å««å«³å«¢å« å«å«¬å«å«å«å«¨å«å­·å¯ "],["e1a1","å¯£å±£å¶å¶åµ½å¶åµºå¶åµ·å¶å¶å¶åµ¾åµ¼å¶åµ¹åµ¿å¹å¹å¹å»å»å»å»å»å»å»å»å»å½å½å½¯å¾¶æ¬æ¨æææ±æ³æææ²æ¬ææ´ææºææ¥æ»æªæ¡ææ©æ§æ«æ«ææææ´æ¶æ²æ³æ½æµæ¦æ¦æææææææ ææ¿æ¿æ¬æ«ææ¥æ·æ³æ æ¡æ ææææ¢æ¦±æ¦¶æ§"],["e240","æ¦ æ§æ¦æ¦°æ¦¬æ¦¼æ¦æ¦æ¦æ¦§æ¦æ¦©æ¦¾æ¦¯æ¦¿æ§æ¦½æ¦¤æ§æ¦¹æ§æ¦æ§æ¦³æ¦æ¦ªæ¦¡æ¦æ§æ¦æ¦æ§æ¦µæ¦¥æ§æ­æ­æ­æ®æ®æ® æ¯æ¯æ¯¾æ»æ»µæ»±æ¼æ¼¥æ»¸æ¼·æ»»æ¼®æ¼æ½æ¼æ¼æ¼§æ¼æ¼»æ¼æ»­æ¼"],["e2a1","æ¼¶æ½³æ»¹æ»®æ¼­æ½æ¼°æ¼¼æ¼µæ»«æ¼æ¼æ½æ¼æ»½æ»¶æ¼¹æ¼æ»¼æ¼ºæ¼æ¼æ¼æ¼æ¼¡çççççççç»ççççççççççççç¢ç³ç±çµç²ç§ç®çççç½ççççççççç¸çç¼ççç®çç¯ç¾çç¢²ç¢ªç¢´ç¢­ç¢¨ç¡¾ç¢«ç¢ç¢¥ç¢ ç¢¬ç¢¢ç¢¤ç¦ç¦ç¦ç¦ç¦ç¦ç¦"],["e340","ç¦ç¦ç¦ç¦ç¨«ç©ç¨°ç¨¯ç¨¨ç¨¦çª¨çª«çª¬ç«®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®åç®ç®¤ç®ç²»ç²¿ç²¼ç²ºç¶§ç¶·ç·ç¶£ç¶ªç·ç·ç·ç¶ç·ç·ç·ç·ç·ç¶¯ç¶¹ç¶ç¶¼ç¶ç¶¦ç¶®ç¶©ç¶¡ç·ç½³ç¿¢ç¿£ç¿¥ç¿"],["e3a1","è¤èèèèèèèèèèèè¤è¡èèºèèè¬è®è«è¹è´èèèªèè±èèè§è»è¢èèèèè©è¯è¨èèè¶èè èèèèè°èè¡è³è£è¨è«èè®èè¡èèèè¬èè¾èè è²èªè­è¼èèºè±èµèè¦è§è¸è¤èè°èè£·è£§è£±è£²è£ºè£¾è£®è£¼è£¶è£»"],["e440","è£°è£¬è£«è¦è¦¡è¦è¦è§©è§«è§¨èª«èªèªèªèªèªè°½è±¨è±©è³è³è³è¶è¸è¸è·¿è¸è·½è¸è¸è¸è¸è¸è·¾è¸è¸è¼è¼è¼è¼é£éé é¢éééé¤é¡ééºé²é¹é³é¥é¤é¶ééºé ééªé"],["e4a1","é¦éé«é¹éé¿é£é®éééé¢é½éé¡ééééé§é¾éé©ééé­éé¡é¿éé½éºé¾éééé»ééé¿ééé é¢­é¢®é¤é¤é¤é¦é¦é§é¦¹é¦»é¦ºé§é¦½é§éª±é«£é«§é¬¾é¬¿é­ é­¡é­é³±é³²é³µéº§å¿åå°å¸ååå¶å¾ååå½åååå±å¯ååååµååååå"],["e540","ååå³å½å¬å¾å¸åªåºåå¢«å¢å¢±å¢ å¢£å¢¯å¢¬å¢¥å¢¡å£¿å«¿å«´å«½å«·å«¶å¬å«¸å¬å«¹å¬å¬å¬å¬å±§å¶å¶å¶å¶å¶¢å¶å¶å¶ å¶å¶¡å¶å¶å¹©å¹å¹ å¹ç·³å»å»å»¡å½å¾²æææ¹æ±æ°æ¢æ"],["e5a1","æææ¯æ­æææªæ¡ææ¦æ³æ­æ®æ°ææ ææææææææ£ææ¨æ±ææ¶æºæ¹æ»æ²æ³æµæ°æ©æ²æ·æªæ¯æ¨æ¨æ¨æ§¥æ§¸æ¨æ§±æ§¤æ¨ æ§¿æ§¬æ§¢æ¨æ¨æ§¾æ¨§æ§²æ§®æ¨æ§·æ§§æ©æ¨æ§¦æ§»æ¨æ§¼æ§«æ¨æ¨æ¨æ¨¥æ¨æ§¶æ¨¦æ¨æ§´æ¨æ­æ®¥æ®£æ®¢æ®¦æ°æ°æ¯¿æ°æ½æ¼¦æ½¾æ¾æ¿æ¾"],["e640","æ¾æ¾æ¾æ½¢æ½æ¾æ½æ¾æ½¶æ½¬æ¾æ½æ½²æ½æ½æ½æ¾æ¾æ½æ¼æ½¡æ½«æ½½æ½§æ¾æ½æ¾æ½©æ½¿æ¾æ½£æ½·æ½ªæ½»ç²ç¯çç°ç çç©çµçç¥çç¤ç¡çªçç§ç³ççççççç ççç¡çç"],["e6a1","ç¢çççççç½ççç¼ç¹ççç¾ç¥ççççç£çç¨çççççççççç£ç¢»ç£ç£ç£ç£ç£ç£ç£ç£ç£ç¦ç¦¡ç¦ ç¦ç¦¢ç¦æ­¶ç¨¹çª²çª´çª³ç®·ç¯ç®¾ç®¬ç¯ç®¯ç®¹ç¯ç®µç³ç³ç³ç³ç··ç·ç·ªç·§ç·ç·¡ç¸ç·ºç·¦ç·¶ç·±ç·°ç·®ç·ç½¶ç¾¬ç¾°ç¾­ç¿­ç¿«ç¿ªç¿¬ç¿¦ç¿¨è¤è§è£è"],["e740","èèè¢èèèèèèèèèè¤è»èèè©èèèèèè§èè»è«èºèèè´èªè²èè·è«è³è¼èèªè©èè¾è¨èè®èè½èè¶è±è¦è§è¨è°è¯è¹èè è°èèè¯è¢"],["e7a1","èè£è¤è·è¡è³èèèèè¡èèèè­èªèèèèè¯è¬èºè®èè¥èè»èµè¢è§è©è¡è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¦¢è¦¤è¦£è§­è§°è§¬è«è«èª¸è«è«è«è«èª»è«èª¾è«è«è«è«èªºèª½è«è°¾è±è²è³¥è³è³è³¨è³è³è³§è¶ è¶è¶¡è¶è¸ è¸£è¸¥è¸¤è¸®è¸è¸è¸è¸è¸è¸¦è¸§"],["e840","è¸è¸è¸è¸è¸è¸è¸è¼¬è¼¤è¼è¼è¼ è¼£è¼è¼é³é°é¯é§é«é¯é«é©éªé²é¦é®ééééééééééééé¶éé±ééé©éééé¯éé¨éééé¦éééé éé§éé"],["e8a1","éµé¡éé´é¼é¬é«é®é°é¤é¢ééééééééééé é é ¦é ©é ¨é  é é §é¢²é¤é£ºé¤é¤é¤é¤é¤é§é§é§é§é§é§é§é§é§é§é§é§éª³é«¬é««é«³é«²é«±é­é­é­§é­´é­±é­¦é­¶é­µé­°é­¨é­¤é­¬é³¼é³ºé³½é³¿é³·é´é´é³¹é³»é´é´é´éºé»é¼é¼ååååååå´å¡å°å å®"],["e940","å³å¦å£å­å²åå·ååå£å¢½å£å¢¿å¢ºå£å¢¼å£å¬å¬å¬å¬¡å¬å¬å¬å¬å¬¨å¬å¬ å¬å¯¯å¶¬å¶±å¶©å¶§å¶µå¶°å¶®å¶ªå¶¨å¶²å¶­å¶¯å¶´å¹§å¹¨å¹¦å¹¯å»©å»§å»¦å»¨å»¥å½å¾¼ææ¨æææ´ææææº"],["e9a1","æ¿æ¸æææææææ½ææææ³ææ³æ¿æ¼æ¢ææ¾æææææ½æ»æºææ£æ¨´æ©¦æ©æ©§æ¨²æ©¨æ¨¾æ©æ©­æ©¶æ©æ©æ¨¨æ©æ¨»æ¨¿æ©æ©ªæ©¤æ©æ©æ©æ©¯æ©©æ© æ¨¼æ©æ©æ©æ©æ©æ©æ­æ­æ­æ®§æ®ªæ®«æ¯æ¯æ°æ°æ°æ¾­æ¿æ¾£æ¿æ¾¼æ¿æ¿æ½æ¿æ¾½æ¾æ¿æ¾¨çæ¾¥æ¾®æ¾ºæ¾¬æ¾ªæ¿æ¾¿æ¾¸"],["ea40","æ¾¢æ¿æ¾«æ¿æ¾¯æ¾²æ¾°ççç¿ç¸ççççççççç½çç¼çççççç©ç¦ç§ç¬ç¥ç«çªç¿çç çççç¡ççç¯ç­ç±ç½ç³ç¼çµç²ç°ç»ç¦ççç¡ççç¢ç£çç"],["eaa1","çç£ç£©ç£¥ç£ªç£ç££ç£ç£¡ç£¢ç£­ç£ç£ ç¦¤ç©ç©ç©çª¶çª¸çªµçª±çª·ç¯ç¯£ç¯§ç¯ç¯ç¯¥ç¯ç¯¨ç¯¹ç¯ç¯ªç¯¢ç¯ç¯«ç¯ç¯ç³ç³ç³ç³ç³ç¸ç¸¡ç¸ç¸ç¸ç¸ ç¸ç¸ç¸ç¸ç¸ç¸¢ç¸ç¸ç¸ç¸ç¸ç¸¥ç¸¤ç½ç½»ç½¼ç½ºç¾±ç¿¯èªè©è¬è±è¦è®è¹èµè«è°è¬è´è²è·è§è²èèèèèè«èèè¡è"],["eb40","èèè¤èè¢èèèè£è¾èè±èè®èµèè§è èè¦èèè¥è¬è£è¥è¤èèèèèèèèèè¹èè£èèèèèèèèèè¤è¤¦è¤°è¤­è¤®è¤§è¤±è¤¢è¤©è¤£è¤¯è¤¬è¤è§±è« "],["eba1","è«¢è«²è«´è«µè«è¬è«¤è«è«°è«è«è«¡è«¨è«¿è«¯è«»è²è²è²è³µè³®è³±è³°è³³èµ¬èµ®è¶¥è¶§è¸³è¸¾è¸¸è¹è¹è¸¶è¸¼è¸½è¹è¸°è¸¿èº½è¼¶è¼®è¼µè¼²è¼¹è¼·è¼´é¶é¹é»ééºé³éµé¶éééééé§ééééééºé¸é¼éé£éééé­éééééºé¥éé¹é·é´éé¤é¿é©é¹éµéªéé"],["ec40","éé¾ééé»éé¼éé¾é¹éºé¶é¿éµé½é©éééééééé°é¸é µé ¯é ²é¤¤é¤é¤§é¤©é¦é§®é§¬é§¥é§¤é§°é§£é§ªé§©é§§éª¹éª¿éª´éª»é«¶é«ºé«¹é«·é¬³é®é®é®é­¼é­¾é­»é®é®é®é®é­ºé®"],["eca1","é­½é®é´¥é´é´ é´é´é´©é´é´é´¢é´é´é´éºéºéºéº®éº­é»é»é»ºé¼é¼½å¦å¥å¢å¤å å©å´ååååååå¾åå¿åå£å£å£å£å¬­å¬¥å¬²å¬£å¬¬å¬§å¬¦å¬¯å¬®å­»å¯±å¯²å¶·å¹¬å¹ªå¾¾å¾»ææµæ¼æ§æ æ¥æ¤æ¨ææ¯æ©æ£æ«æ¤æ¨æææ¶æææªæªæªæª¥æªæªæªæª¡æªæªæªæª"],["ed40","æªæªæª¨æª¤æªæ©¿æª¦æªæªæªæªæ­æ®­æ°æ¿æ¾©æ¿´æ¿æ¿£æ¿æ¿­æ¿§æ¿¦æ¿æ¿²æ¿æ¿¢æ¿¨ç¡ç±ç¨ç²ç¤ç°ç¢ç³ç®ç¯çç²ç«ççªç­ç±ç¥ç¯çççççççççç¤ç©çµç«ç²ç·ç¶"],["eda1","ç´ç±ç¨ç°ç£³ç£½ç¤ç£»ç£¼ç£²ç¤ç£¹ç£¾ç¤ç¦«ç¦¨ç©ç©ç©ç©ç©ç©çª¾ç«ç«ç°ç°ç¯²ç°ç¯¿ç¯»ç°ç¯´ç°ç¯³ç°ç°ç°ç°ç¯¸ç¯½ç°ç¯°ç¯±ç°ç°ç³¨ç¸­ç¸¼ç¹ç¸³é¡ç¸¸ç¸ªç¹ç¹ç¹ç¸©ç¹ç¸°ç¸»ç¸¶ç¹ç¸ºç½ç½¿ç½¾ç½½ç¿´ç¿²è¬è»èèèèèè¼è©èèèèèèè§èè èè£è»è¤èè"],["ee40","è·è¼èè¡èºè¸èèèèèèèèè¢èèèè¹è¶èèèè¨è¾èªè­èè°è¬è¹èµè¼è®èèèèè·è¯èèè´è¶è¿è¸è½èè²è¤µè¤³è¤¼è¤¾è¥è¥è¤·è¥è¦­è¦¯è¦®è§²è§³è¬"],["eea1","è¬è¬è¬è¬è¬è¬¢è¬è¬è¬è¬è¬è¬è¬è¬è¬è¬è±è±°è±²è±±è±¯è²è²è³¹èµ¯è¹è¹è¹è¹è¹è¹è½è½éé¾é¸éé¢éééé¡éé é¡éé¯é¤ééé¼ééé¶éééé é­éééªé¹ééééé±é·é»é¡éé£é§ééééééééé·é®é°é¬é éééééé¡é"],["ef40","ééééé±é¡é¡é¡é¡é¡é¡é¤¥é¤«é¤¬é¤ªé¤³é¤²é¤¯é¤­é¤±é¤°é¦é¦£é¦¡é¨é§ºé§´é§·é§¹é§¸é§¶é§»é§½é§¾é§¼é¨éª¾é«¾é«½é¬é«¼é­é®é®¨é®é®é®¦é®¡é®¥é®¤é®é®¢é® é®¯é´³éµéµ§é´¶é´®é´¯é´±é´¸é´°"],["efa1","éµéµéµé´¾é´·éµé´½ç¿µé´­éºéºéºéº°é»é»é»»é»¿é¼¤é¼£é¼¢é½é¾ å±å­å®ååååååå¥°å¬¼å±©å±ªå·å¹­å¹®æææ­æ®æ±æªæ°æ«ææ©æ¿ææ½æ¸æææ¼ææææææ«æª¹æª½æ«¡æ«æªºæª¶æª·æ«æª´æª­æ­æ¯æ°çççççççæ¿¿çæ¿»ç¦æ¿¼æ¿·ççç¿ç¹çç½ç¶"],["f040","ç¸ççµçç¾ç¶ç»ççççç¤çççççç¦ç½ç¬ççºç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¦­ç¦¬ç©ç°ç°©ç°ç° ç°ç°­ç°ç°¦ç°¨ç°¢ç°¥ç°°ç¹ç¹ç¹ç¹£ç¹ç¹¢ç¹ç¹ç¹ ç¹ç¹ç¾µç¾³ç¿·ç¿¸èµèè"],["f0a1","èèèè´èèèèè³èµè½èèè¿èèèèè±è¶èè¤è¸è·è¾è©è§è¦è¢èè«èªè¥èè³è¤èèèè­èè£è¤èèè è´è¨èè¥è¥è¥è¥è¥è¥è¥è¥è¬ªè¬§è¬£è¬³è¬°è¬µè­è¬¯è¬¼è¬¾è¬±è¬¥è¬·è¬¦è¬¶è¬®è¬¤è¬»è¬½è¬ºè±è±µè²è²è²è³¾è´è´è´è¹è¹¢è¹ è¹è¹è¹è¹¥è¹§"],["f140","è¹è¹è¹¡è¹è¹©è¹è½è½è½è½é¨éºé»é¾é¨é¥é§é¯éªéµééé·éééé§ééªéé¦éééééé±éé²é¤é¨é´é£é¥éééé³ééå·éééé£é¢é¥é¬é®é¨é«é¤éª"],["f1a1","é¢é¥éééééºé¡é¡é¡é¢¸é¥é¤¼é¤ºé¨é¨é¨é¨é¨é¨é¨é¨é¨é¨é«é«é¬é¬é¬é¬©é¬µé­é­é­é¯é¯é¯é®¿é¯é®µé®¸é¯é®¶é¯é®¹é®½éµéµéµéµéµéµéµéµéµéµéµéµéµéµéµéºéºé»é¼é¼é¼é¼¥é¼«é¼ªé¼©é¼¨é½é½å´åµåå·å´å«å­å¦å§åªå¬å£å£å£å¤å¬½å¬¾å¬¿å·å¹°"],["f240","å¾¿æ»æææææææææææ«§æ« æ«æ«æ«æ«æ«æ«æ«æ««æ«æ«æ«æ­ æ®°æ°çç§ç çç«ç¡ç¢ç£ç©çç¤ççªçççççç¥ç¦ç¤ç£ç¡ççç·ççç çççç±ç¤ç¤"],["f2a1","ç¤¡ç¤ç¤ç¤ç¦°ç©§ç©¨ç°³ç°¼ç°¹ç°¬ç°»ç³¬ç³ªç¹¶ç¹µç¹¸ç¹°ç¹·ç¹¯ç¹ºç¹²ç¹´ç¹¨ç½ç½ç¾ç¾ç¾·ç¿½ç¿¾è¸èèè¤è¡è£è«è±è­èè¡è¨èèè¬è²è¸èèè£èèè°è¦è¯èè¢è èºè è¶è·è è è è è¼è è¿è è è¥¢è¥è¥è¥è¥¡è¥è¥è¥è¥è¦è¦·è¦¶è§¶è­è­è­è­è­è­è­è­è­"],["f340","è­è­è­è­è±è±·è±¶è²è´è´è´è¶¬è¶ªè¶­è¶«è¹­è¹¸è¹³è¹ªè¹¯è¹»è»è½è½è½è½è½è¾´éé¿é°é­ééééééé¹é¬ééé©é¦ééé®é£éééééé§é½ééé¡é©é«é¬é¨é¦"],["f3a1","é³é·é¶éééé¡é¡é¡é¡é¢¿é¢½é¢»é¢¾é¥é¥é¥é¦¦é¦§é¨é¨é¨¥é¨é¨¤é¨é¨¢é¨ é¨§é¨£é¨é¨é¨é«é¬é¬é¬é¬é¬·é¯ªé¯«é¯ é¯é¯¤é¯¦é¯¢é¯°é¯é¯é¯¬é¯é¯é¯¥é¯é¯¡é¯éµ·é¶é¶é¶é¶éµ±é¶éµ¸é¶é¶é¶éµ½éµ«éµ´éµµéµ°éµ©é¶éµ³éµ»é¶éµ¯éµ¹éµ¿é¶éµ¨éºéºé»é»¼é¼­é½é½é½é½é½é½å·å²"],["f440","åµå³å££å­å·å·å»®å»¯å¿å¿æ¹ææææææ¨æ£æ¤æ«³æ«°æ«ªæ«¨æ«¹æ«±æ«®æ«¯ç¼çµç¯ç·ç´ç±çç¸ç¿çºç¹çç»ç³çççç¨ç½ç¼çºç«çªç¾ç­ççççç²ç¤¥ç¤£ç¤§ç¤¨ç¤¤ç¤©"],["f4a1","ç¦²ç©®ç©¬ç©­ç«·ç±ç±ç±ç±ç±ç³®ç¹»ç¹¾çºçºç¾ºç¿¿è¹èèèè¨è©è¢è¿èè¾èèè¶èèèèè½è è è è è è è¥£è¥¦è¦¹è§·è­ è­ªè­è­¨è­£è­¥è­§è­­è¶®èºèºèºè½è½è½è½è½è½éééé·éµé²é³ééé»é ééé¾ééé¨éééµéé·éééééºéé¸éé¿"],["f540","é¼éé¶éééé éé®é¯é¹é»é½é¾é¡ é¡¢é¡£é¡é£é£é¥é¥é¥é¥é¥é¥é¨²é¨´é¨±é¨¬é¨ªé¨¶é¨©é¨®é¨¸é¨­é«é«é«é¬é¬é¬é°é°é¯·é°é°é¯¸é±é°é°é°é°é°é°é¶é¶é¶¤é¶é¶é¶é¶é¶"],["f5a1","é¶ é¶é¶é¶ªé¶é¶¡é¶é¶¢é¶¨é¶é¶£é¶¿é¶©é¶é¶¦é¶§éºéºéºé»¥é»¤é»§é»¦é¼°é¼®é½é½ é½é½é½é¾åºå¹åååå½å¾å­å­å·å·å»±æ½ææ¬æ«¼æ¬æ«¸æ¬ççççççççççç¾ççªçç¤­ç¤±ç¤¯ç±ç±ç³²çºçºçºçºçºçºç½ç¾»è°èèèªè¦èè£èèè§è®è¡è è©èè¥"],["f640","è ©è è è  è ¤è è «è¡è¥­è¥©è¥®è¥«è§ºè­¹è­¸è­è­ºè­»è´è´è¶¯èºèºè½è½è½éééé¹é¿é»é¶é©é½é¼é°é¹éªé·é¬éé±é¥é¤é£éµéºé¿é¡é¡¤é£é£é£é¥é¥é¨¹é¨½é©é©é©é©é¨º"],["f6a1","é¨¿é«é¬é¬é¬é¬é¬ºé­é°«é°é°é°¬é°£é°¨é°©é°¤é°¡é¶·é¶¶é¶¼é·é·é·é·é¶¾é·é·é¶»é¶µé·é¶¹é¶ºé¶¬é·é¶±é¶­é·é¶³é·é¶²é¹ºéºé»«é»®é»­é¼é¼é¼é¼±é½é½¥é½¤é¾äº¹åååå¥±å­å­å·å·å»²æ¡æ æ¦æ¢æ¬æ¬æ¬æ°ççççççç©ç¿ççççç­ç­ç¤µç¦´ç©°ç©±ç±ç±ç±ç±ç±"],["f740","ç³´ç³±çºç½ç¾èè«è´èµè³è¬è²è¶è ¬è ¨è ¦è ªè ¥è¥±è¦¿è¦¾è§»è­¾è®è®è®è®è­¿è´èºèºèºèºèºèºèºè½ è½¢éééééééééééé¿é£é¡ªé¡©é£é¥é¥é©é©é©é©é©é©é©"],["f7a1","é©é©é©é«é¬é¬«é¬»é­é­é±é±é°¿é±é°¹é°³é±é°¼é°·é°´é°²é°½é°¶é·é·é·é·é·é·é·é·é·é·©é·é·é·é·µé·é·éº¶é»°é¼µé¼³é¼²é½é½«é¾é¾¢å½åå£¨å£§å¥²å­å·è ¯å½ææææ©æ¥ææ«æ¬æ¬æ¬æ¯ççç¢çççç°çç±§ç±¦çºè¬èºèè¹è¼è±è»è¾è °è ²è ®è ³è¥¶è¥´è¥³è§¾"],["f840","è®è®è®è®è±è´èºè½¤è½£é¼é¢ééééééé é©é©é¬é¬é¬ é±é±é±é±é±é±é±é±é±é±é·»é··é·¯é·£é·«é·¸é·¤é·¶é·¡é·®é·¦é·²é·°é·¢é·¬é·´é·³é·¨é·­é»é»é»²é»³é¼é¼é¼¸é¼·é¼¶é½é½"],["f8a1","é½±é½°é½®é½¯ååå­å±­æ­æ­æ®æ¬çç¡çç ç£çç¥çç¤¸ç¦·ç¦¶ç±ªçºç¾è­èè ¸è ·è µè¡è®è®èºèºèº èºé¾é½éé«é¨é©é¥ééééé¥é©é«é­é±£é±§é±¦é±¢é±é± é¸é·¾é¸é¸é¸é¸é¸é¸é¸é·¿é·½é¸éº é¼é½é½´é½µé½¶åæ®æ¸æ¬æ¬æ¬æ¬ç¢ç¦çªççç¤¹ç±©ç±«ç³¶çº"],["f940","çºçºçºè è¡èèèè¥¹è¥ºè¥¼è¥»è§¿è®è®èº¥èº¤èº£é®é­é¯é±é³éé¡²é¥é±¨é±®é±­é¸é¸é¸é¸é¸é¸éº¡é»µé¼é½é½¸é½»é½ºé½¹åç¦ç±¯è ¼è¶²èº¦éé´é¸é¶éµé© é±´é±³é±±é±µé¸é¸é»¶é¼"],["f9a1","é¾¤ç¨ç¥ç³·èªè ¾è ½è ¿è®è²èº©è»éé¡³é¡´é£é¥¡é¦«é©¤é©¦é©§é¬¤é¸é¸é½ææ¬ç§èèº¨éééé©©é©¨é¬®é¸ç©èè®éé±¹éº·çµé©«é±ºé¸ç©çªéº¤é½¾é½é¾ç¢é¹è£å¢»æç²§å«ºââ¦ââ â¬â£ââ©âââ¤âââªâ¡ââ§âââ¥âââ«â¢ââ¨ââââ­â®â°â¯â"]]');
            }
          ),
          /***/
          56406: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('[["0","\\u0000",127],["8ea1","ï½¡",62],["a1a1","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±ÃÃ·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââ"],["a2a1","ââ¡â â³â²â½â¼â»ãââââã"],["a2ba","âââââââªâ©"],["a2ca","â§â¨ï¿¢ââââ"],["a2dc","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["a2f2","â«â°â¯â­âªâ â¡Â¶"],["a2fe","â¯"],["a3b0","ï¼",9],["a3c1","ï¼¡",25],["a3e1","ï½",25],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a8a1","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["ada1","â ",19,"â ",9],["adc0","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["addf","ã»ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["b0a1","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["b1a1","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­ååå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿"],["b2a1","æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["b3a1","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±"],["b4a1","ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["b5a1","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥ææ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬"],["b6a1","ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["b7a1","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²"],["b8a1","æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["b9a1","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤éé é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼"],["baa1","æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["bba1","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºæææ"],["bca1","æ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["bda1","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·å"],["bea1","åå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["bfa1","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾"],["c0a1","æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["c1a1","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æ"],["c2a1","èèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["c3a1","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­èéç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µ"],["c4a1","å¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["c5a1","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°"],["c6a1","è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["c7a1","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦"],["c8a1","å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["c9a1","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æ"],["caa1","ç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["cba1","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡çæ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æº"],["cca1","æ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["cda1","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨çç"],["cea1","ç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["cfa1","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["d0a1","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["d1a1","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨"],["d2a1","è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["d3a1","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿åå"],["d4a1","ååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["d5a1","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±"],["d6a1","å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["d7a1","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææ"],["d8a1","ææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["d9a1","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼"],["daa1","æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["dba1","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£"],["dca1","æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["dda1","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾"],["dea1","æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["dfa1","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®çççççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼"],["e0a1","ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e1a1","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°"],["e2a1","ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e3a1","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­"],["e4a1","ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e5a1","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼º"],["e6a1","ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e7a1","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèè"],["e8a1","èµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e9a1","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®è"],["eaa1","èè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["eba1","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«"],["eca1","è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["eda1","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸"],["eea1","ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["efa1","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿éééééééé é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·éé"],["f0a1","ééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["f1a1","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·"],["f2a1","é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["f3a1","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ "],["f4a1","å ¯æ§éç¤åç"],["f9a1","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·"],["faa1","å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["fba1","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§é"],["fca1","ééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["fcf1","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["8fa2af","ËËÂ¸ËËÂ¯ËËï½ÎÎ"],["8fa2c2","Â¡Â¦Â¿"],["8fa2eb","ÂºÂªÂ©Â®â¢Â¤â"],["8fa6e1","ÎÎÎÎÎª"],["8fa6e7","Î"],["8fa6e9","ÎÎ«"],["8fa6ec","Î"],["8fa6f1","Î¬Î­Î®Î¯ÏÎÏÏÏÏÎ°Ï"],["8fa7c2","Ð",10,"ÐÐ"],["8fa7f2","Ñ",10,"ÑÑ"],["8fa9a1","ÃÄ"],["8fa9a4","Ä¦"],["8fa9a6","Ä²"],["8fa9a8","ÅÄ¿"],["8fa9ab","ÅÃÅ"],["8fa9af","Å¦Ã"],["8fa9c1","Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÅÅÃ¸ÅÃÅ§Ã¾"],["8faaa1","ÃÃÃÃÄÇÄÄÃÃÄÄÄÃÄÄÃÃÃÃÄÄÄÄ"],["8faaba","ÄÄÄ¢Ä Ä¤ÃÃÃÃÇÄ°ÄªÄ®Ä¨Ä´Ä¶Ä¹Ä½Ä»ÅÅÅÃÃÃÃÃÇÅÅÃÅÅÅÅÅÅ ÅÅ¤Å¢ÃÃÃÃÅ¬ÇÅ°ÅªÅ²Å®Å¨ÇÇÇÇÅ´ÃÅ¸Å¶Å¹Å½Å»"],["8faba1","Ã¡Ã Ã¤Ã¢ÄÇÄÄÃ¥Ã£ÄÄÄÃ§ÄÄÃ©Ã¨Ã«ÃªÄÄÄÄÇµÄÄ"],["8fabbd","Ä¡Ä¥Ã­Ã¬Ã¯Ã®Ç"],["8fabc5","Ä«Ä¯Ä©ÄµÄ·ÄºÄ¾Ä¼ÅÅÅÃ±Ã³Ã²Ã¶Ã´ÇÅÅÃµÅÅÅÅÅÅ¡ÅÅ¥Å£ÃºÃ¹Ã¼Ã»Å­ÇÅ±Å«Å³Å¯Å©ÇÇÇÇÅµÃ½Ã¿Å·ÅºÅ¾Å¼"],["8fb0a1","ä¸ä¸ä¸ä¸ä¸ä¸ä¸£ä¸¤ä¸¨ä¸«ä¸®ä¸¯ä¸°ä¸µä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹£ä¹¨ä¹©ä¹´ä¹µä¹¹ä¹¿äºäºäºäºäº¯äº¹ä»ä»ä»ä»ä» ä»¡ä»¢ä»¨ä»¯ä»±ä»³ä»µä»½ä»¾ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼®ä¼±ä½ ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½£ä½ªä½¬ä½®ä½±ä½·ä½¸ä½¹ä½ºä½½ä½¾ä¾ä¾ä¾"],["8fb1a1","ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾²ä¾·ä¾¹ä¾»ä¾¼ä¾½ä¾¾ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ ä¿¢ä¿°ä¿²ä¿¼ä¿½ä¿¿åååååååååååååååå¢å§å®å°å²å³åµååååååååååååååå å¢å£å¦å§åªå­å°å±å»åååååååå"],["8fb2a1","ååååååå",4,"åªå¯å°å¹åºå½åååååååååååååå¢å¤å¦å¨å©å¯å±å¶åºå¾ååååååååå²åååååååå£å§å¨å¬å­å¯å±å³å´åµå¸å¹ååååååååå¤å¦å¾ååååååå¡å£å­å¸åºå¼å¾å¿å"],["8fb3a1","ååååååååå¢å¥å®å²å³å´å·ååååååååå¢å¨å±å²åµå¼ååååååååå å¡å¦å®å·å¸å¹ååååååååååååå¤å¥å¦å§å¯å°å¶å·å¸åºå»å½åååååååååååå¡å¥å¨å©åªå¬å°å±å´å¶å·åååå"],["8fb4a1","ååååååååå¥å§å¨å©å«å¬å­å°å²åµå¼å½å¾åååååå¡å£å¥å¬å­å²å¹å¾ååååååååå¡å¤åªå«å¯å²å´åµå·å¸åºå½åååååååååå å¦å§åµåååå¡å§å¨åªå¯å±å´åµååååååå¢å¤å¦å§å©å«å­å®å´å¿"],["8fb5a1","åååååååååååå¡å¦å§å©åªå­å®å±å·å¹åºå»å¿ååååå åªå¬å¯å¶å¼å¾å¿ååååååååååªå«å²åµå¶å»å¼å½åååååååååååå å¡å¤å¦å¿åååååååååååå£å¤å­å²å¿ååååååååå"],["8fb6a1","åååååå¢å©å¶å¿åååå",5,"åå¬å°å³åµå·å¹å»å¼å½å¿åååååååååååå å¡å¢å£å¦å©å­å¯å±å²åµåååååååååååå¦å§å¨å©å«å¬å­å±å³å·å¾ååååååååååååå¡å¤",4,"å±å«å­"],["8fb7a1","å¶å·ååååååååååå å¢å£å¤å¥å©åªå¬å®å¯å³å´å½å¾å¿åååååå¢å¥å§å¨å«å­",4,"å³å´åµå·å¹åºå»å¼å¾åååååååååååå¡åå§å¨å©å¬å¸å½åååååååå¤å¦å§å©å­å°åµå¶å¸å½å¾å¿å å å å å¡"],["8fb8a1","å å å å å å  å ¦å §å ­å ²å ¹å ¿å¡å¡å¡å¡å¡å¡å¡å¡¡å¡¤å¡§å¡¨å¡¸å¡¼å¡¿å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢ å¢¡å¢¢å¢¦å¢©å¢±å¢²å£å¢¼å£å£å£å£å£å£å£å£å£å£å£¡å£¢å£©å£³å¤å¤å¤å¤å¤å¤å¤èå¤å¤¡å¤£å¤¤å¤¨å¤¯å¤°å¤³å¤µå¤¶å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥¡å¥£å¥«å¥­"],["8fb9a1","å¥¯å¥²å¥µå¥¶å¥¹å¥»å¥¼å¦å¦å¦å¦å¦å¦å¦å¦¤å¦§å¦­å¦®å¦¯å¦°å¦³å¦·å¦ºå¦¼å§å§å§å§å§å§å§å§å§å§å§£å§¤å§§å§®å§¯å§±å§²å§´å§·å¨å¨å¨å¨å¨å¨å¨å¨å¨£å¨¤å¨§å¨¨å¨ªå¨­å¨°å©å©å©å©å©å©å©å©å©£å©¥å©§å©­å©·å©ºå©»å©¾åªåªåªåªåªåªåªåªåª åª¢åª§åª¬åª±åª²åª³åªµåª¸åªºåª»åª¿"],["8fbaa1","å«å«å«å«å«å«å« å«¥å«ªå«®å«µå«¶å«½å¬å¬å¬å¬å¬´å¬å¬å¬å¬¡å¬¥å¬­å¬¸å­å­å­å­å­å­å­¨å­®å­¯å­¼å­½å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®¨å®©å®¬å®­å®¯å®±å®²å®·å®ºå®¼å¯å¯å¯å¯å¯",4,"å¯ å¯¯å¯±å¯´å¯½å°å°å°å°å°£å°¦å°©å°«å°¬å°®å°°å°²å°µå°¶å±å±å±å±¢å±£å±§å±¨å±©"],["8fbba1","å±­å±°å±´å±µå±ºå±»å±¼å±½å²å²å²å²å²å²å²å² å²¢å²£å²¦å²ªå²²å²´å²µå²ºå³å³å³å³å³å³®å³±å³²å³´å´å´å´å´å´«å´£å´¤å´¦å´§å´±å´´å´¹å´½å´¿åµåµåµåµåµåµåµåµåµåµ åµ¡åµ¢åµ¤åµªåµ­åµ°åµ¹åµºåµ¾åµ¿å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶ å¶§å¶«å¶°å¶´å¶¸å¶¹å·å·å·å·å·å·å·å· å·¤"],["8fbca1","å·©å·¸å·¹å¸å¸å¸å¸å¸å¸å¸å¸å¸ å¸®å¸¨å¸²å¸µå¸¾å¹å¹å¹å¹å¹å¹å¹å¹å¹å¹¨å¹ª",4,"å¹°åºåºåºåº¢åº¤åº¥åº¨åºªåº¬åº±åº³åº½åº¾åº¿å»å»å»å»å»å»å»å»å»å»å»¥å»«å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤å¼¨å¼«å¼¬å¼®å¼°å¼´å¼¶å¼»å¼½å¼¿å½å½å½å½å½å½å½å½å½å½ å½£å½¤å½§"],["8fbda1","å½¯å½²å½´å½µå½¸å½ºå½½å½¾å¾å¾å¾å¾å¾å¾å¾¢å¾§å¾«å¾¤å¾¬å¾¯å¾°å¾±å¾¸å¿å¿å¿å¿å¿å¿",4,"å¿å¿¡å¿¢å¿¨å¿©å¿ªå¿¬å¿­å¿®å¿¯å¿²å¿³å¿¶å¿ºå¿¼ææææææææææ¤æ­æ³æµæææææææææææ¡æ§æ±æ¾æ¿ææææææææææææ¢æ¤æ¥æ¨æ°æ±æ·"],["8fbea1","æ»æ¾æææææææææææææææ¢æ¥æ²æµæ¸æ¼æ½æææææ",4,"ææææææ¢æªæ«æ°æ±æµæ¶æ·æ¹ææææææ æ¬æ²æ¸æ»æ¼æ¿ææææææææææææææ æ¥æ¨æªæ­æ¸æ¹æ¼æææææææææææ¡æ¢æ§æ©æ¥"],["8fbfa1","æ¬æ­æ¯ææææææææ æ¢æ£æ§æ©æ«æ¹æ½æææææææææææææ¤æ­æ¯æ³æºæ½æææææ¦æ¨æ³æ¶æ·æºæ¾æ¿ææææææªæ²æ´æ¼æ½ææææææææææ©æªæ­æµæ¶æ¹æ¼ææææææææææææææ¥æ¦æ¬æ­æ±æ´æµ"],["8fc0a1","æ¸æ¼æ½æ¿æææææææææææ¤æ¦æ­æ®æ¯æ½ææææææææææ æ¥æªæ¬æ²æ³æµæ¸æ¹ææææææææ æ¢æ¤æ¥æ©æªæ¯æ°æµæ½æ¿ææææææææææææ æ¡æ£æ­æ³æ´æ»æ½æææææææææææ¡æ£æ¦æ¨æ¬æ³æ½æ¾æ¿"],["8fc1a1","æææææææææææ¤æ¥æ©æªæ­æ°æµæ·æ»æ¿ææææææææææææææ¢æ¦æ©æ®æ±æºæ¼æ½ææææææææ æ§æ«æºæ½ææææææææ æ£æ¦æ®æ²æ³æ´æ¿ææææææææææ°æ²æ´æµæ¹æ¾æ¿ææææææææææ"],["8fc2a1","ææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ±æ³æ¹æ·æææææææææææææ æ¡æ»æªæ«æ¬æ¾æ³æµæ¿æ·æ¸æ¹æ»ææ¼æææææææææææ æ¤æ­æ±æ²æµæ»æ¿æææææææææææ¨æ«æ¬æ®æºæææææææ æ¢æ³æ¾æææææææ"],["8fc3a1","æ¦æ¬æ®æ´æ¶æ»æææææææææææ°æ±æ²æµæ»æ¼æ½æ¹æææææææææææ¡æ¦æ°æ²æ¶æ·æ¡æ æ æ æ æ ¨æ §æ ¬æ ­æ ¯æ °æ ±æ ³æ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡«æ¡®",4,"æ¡µæ¡¹æ¡ºæ¡»æ¡¼æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢¡æ¢£æ¢¥æ¢©æ¢ªæ¢®æ¢²æ¢»æ£æ£æ£æ£"],["8fc4a1","æ£æ£æ£æ£æ£æ£æ£æ£¥æ£¨æ£ªæ£«æ£¬æ£­æ£°æ£±æ£µæ£¶æ£»æ£¼æ£½æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤±æ¤³æ¤µæ¤¸æ¤»æ¥æ¥æ¥æ¥æ¥æ¥æ¥£æ¥¤æ¥¥æ¥¦æ¥¨æ¥©æ¥¬æ¥°æ¥±æ¥²æ¥ºæ¥»æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦¡æ¦¥æ¦¦æ¦¨æ¦«æ¦­æ¦¯æ¦·æ¦¸æ¦ºæ¦¼æ§æ§æ§æ§æ§æ§¢æ§¥æ§®æ§¯æ§±æ§³æ§µæ§¾æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨ æ¨¤æ¨¨æ¨°æ¨²"],["8fc5a1","æ¨´æ¨·æ¨»æ¨¾æ¨¿æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©¤æ©§æ©ªæ©±æ©³æ©¾æªæªæªæªæªæªæªæªæªæªæªæª¥æª«æª¯æª°æª±æª´æª½æª¾æª¿æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«¤æ«§æ«¬æ«°æ«±æ«²æ«¼æ«½æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬¤æ¬¨æ¬«æ¬¬æ¬¯æ¬µæ¬¶æ¬»æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­ æ­§æ­«æ­®æ­°æ­µæ­½"],["8fc6a1","æ­¾æ®æ®æ®æ®æ®æ® æ®¢æ®£æ®¨æ®©æ®¬æ®­æ®®æ®°æ®¸æ®¹æ®½æ®¾æ¯æ¯æ¯æ¯æ¯æ¯æ¯¡æ¯£æ¯¦æ¯§æ¯®æ¯±æ¯·æ¯¹æ¯¿æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°¦æ°§æ°¨æ°¬æ°®æ°³æ°µæ°¶æ°ºæ°»æ°¿æ±æ±æ±æ±æ±æ±æ±æ±æ±æ±«æ±­æ±¯æ±´æ±¶æ±¸æ±¹æ±»æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²°æ²²æ²´æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["8fc7a1","æ³æ³æ³ æ³§æ³©æ³«æ³¬æ³®æ³²æ³´æ´æ´æ´æ´æ´æ´æ´æ´æ´¦æ´§æ´¨æ±§æ´®æ´¯æ´±æ´¹æ´¼æ´¿æµæµæµæµ¡æµ¥æµ§æµ¯æµ°æµ¼æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶ªæ¶¬æ¶´æ¶·æ¶¹æ¶½æ¶¿æ·æ·æ·æ·æ·æ·æ·æ·æ·æ· æ·¢æ·¥æ·©æ·¯æ·°æ·´æ·¶æ·¼æ¸æ¸æ¸æ¸¢æ¸§æ¸²æ¸¶æ¸¹æ¸»æ¸¼æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹"],["8fc8a1","æ¹¢æ¹£æ¹¨æ¹³æ¹»æ¹½æºæºæºæº æº§æº­æº®æº±æº³æº»æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»«æ»­æ»®æ»¹æ»»æ»½æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼¦æ¼©æ¼ªæ¼¯æ¼°æ¼³æ¼¶æ¼»æ¼¼æ¼­æ½æ½æ½æ½æ½æ½æ½æ½æ½æ½¡æ½¢æ½¨æ½¬æ½½æ½¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾ æ¾¥æ¾¦æ¾§æ¾¨æ¾®æ¾¯æ¾°æ¾µæ¾¶æ¾¼æ¿æ¿æ¿æ¿"],["8fc9a1","æ¿æ¿æ¿¨æ¿©æ¿°æ¿µæ¿¹æ¿¼æ¿½ççççççç ç£ç¯ç´ç·ç¹ç¼çççççççççççç¤ç¥ç¬ç®çµç¶ç¾çççç",4,"çç¤ç«ç°ç±ç´ç·ççççççççç¤çºç",4,"ççççç ç«ç­ç¯ç°ç±ç¸ççççççççççççç "],["8fcaa1","ç¨ç¹çççççççç ç¢ç¯ç°ç²ç³çºç¿ççççççççççç¸ç¾çççççççççç¤ç«ç¯ç´ç¸ç¹çççççççççççççç ç£ç¨ç«ç®ç¯ç±ç·ç¸ç»ç¼ç¿ççççççç¨ç­ç®ç±ç´ç¾ççççççççç¥ç³ç´çºç»"],["8fcba1","ç¾çççççççççççç¢ç¤ç§ç¨ç¬ç±ç²çµçºç»ç½çççççççççç ç¦ç§ç©ç«ç¬ç®ç¯ç±ç·ç¹ç¼ççççççççççççççç ç¢ç¥ç¦çªç«ç­çµç·ç¹ç¼ç½ç¿çççççççççççç¡ç£ç¦ç§ç©ç´çµç·ç¹çºç»ç½"],["8fcca1","ç¿ççççççççç¤ç¦ç¨",9,"ç¹çççççççççççç¢ç¦ç§ç¨ç«ç­ç®ç±ç²çççççççççççççççç ç¡ç£ç¦ç¨ç©çªç«ç®ç¯ç±ç²çµç¹ç»ç¿ççççççççççç¤ç¨çªç«ç¯ç´çºç»ç¼ç¿ç"],["8fcda1","çççç ç¡ç¤ç§ç©çªç¯ç¶ç¹ç½ç¾ç¿ççççççççççç¡ç¯ç±ç¹",5,"ççççççççç¢ç¤ç´çºç¿ççççççççççç ç¡ç¤ç§ç¬ç®ç¯ç±ç¹ççççççççççççççççççç£ç¥ç¦ç©ç­ç²ç³çµç¸ç¹"],["8fcea1","çºç¼çççççççççççç¤ç¥ç­ç®ç¯ç±ç´çççççççççç ç¢",6,"çªç­ç½ççççççççç ç¦ç¨ç¬ç°ç±ç¶ç¹ç¼çççççççççççç¢ç¨ç­ç®ç¯ç´çµç¶ç¹ç½ç¾çççççççççççççç ç¢"],["8fcfa1","ç¤ç§çªç¬ç°ç²ç³ç´çºç½çççççççççç¢ç§çªç®ç¯ç±çµç¾ççççççççç ç¤ç¦çªç¬ç°ç±ç´ç¸ç»ç ç ç ç ç ç ç ç ¡ç ¢ç £ç ­ç ®ç °ç µç ·ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ ç¡¡ç¡£ç¡¤ç¡¨ç¡ªç¡®ç¡ºç¡¾ç¢ç¢ç¢ç¢ç¢¡ç¢ç¢ç¢ç¢¤ç¢¨ç¢¬ç¢­ç¢°ç¢±ç¢²ç¢³"],["8fd0a1","ç¢»ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£¤ç£ç£ç£ ç£¡ç£¦ç£ªç£²ç£³ç¤ç£¶ç£·ç£ºç£»ç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¤ ç¤¥ç¤§ç¤©ç¤­ç¤±ç¤´ç¤µç¤»ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥§ç¥©ç¥«ç¥²ç¥¹ç¥»ç¥¼ç¥¾ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦¡ç¦¨ç¦©ç¦«ç¦¯ç¦±ç¦´ç¦¸ç¦»ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§"],["8fd1a1","ç§ ç§¢ç§¥ç§ªç§«ç§­ç§±ç§¸ç§¼ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨¡ç¨§ç¨«ç¨­ç¨¯ç¨°ç¨´ç¨µç¨¸ç¨¹ç¨ºç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç© ç©¥ç©§ç©ªç©­ç©µç©¸ç©¾çªçªçªçªçªçªçªçªçªçªçª çª£çª¬çª³çªµçª¹çª»çª¼ç«ç«ç«ç«ç«ç«ç«¨ç«©ç««ç«¬ç«±ç«´ç«»ç«½ç«¾ç¬ç¬ç¬ç¬£ç¬§ç¬©ç¬ªç¬«ç¬­ç¬®ç¬¯ç¬°"],["8fd2a1","ç¬±ç¬´ç¬½ç¬¿ç­ç­ç­ç­ç­ç­ ç­¤ç­¦ç­©ç­ªç­­ç­¯ç­²ç­³ç­·ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®¥ç®¬ç®¯ç®°ç®²ç®µç®¶ç®ºç®»ç®¼ç®½ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯¨ç¯ªç¯²ç¯´ç¯µç¯¸ç¯¹ç¯ºç¯¼ç¯¾ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç° ç°¥ç°¦ç°¨ç°¬ç°±ç°³ç°´ç°¶ç°¹ç°ºç±ç±ç±ç±ç±ç±ç±",5],["8fd3a1","ç±¡ç±£ç±§ç±©ç±­ç±®ç±°ç±²ç±¹ç±¼ç±½ç²ç²ç²ç²ç²ç² ç²¦ç²°ç²¶ç²·ç²ºç²»ç²¼ç²¿ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³¦ç³©ç³«ç³µç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´£ç´¦ç´ªç´­ç´±ç´¼ç´½ç´¾çµçµçµçµçµçµçµçµçµçµçµçµçµ¥çµ§çµªçµ°çµ¸çµºçµ»çµ¿ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶"],["8fd4a1","ç¶ç¶¦ç¶§ç¶ªç¶³ç¶¶ç¶·ç¶¹ç·",4,"ç·ç·ç·ç·ç·ç¸ç·¢ç·¥ç·¦ç·ªç·«ç·­ç·±ç·µç·¶ç·¹ç·ºç¸ç¸ç¸ç¸ç¸ç¸ç¸ç¸ ç¸§ç¸¨ç¸¬ç¸­ç¸¯ç¸³ç¸¶ç¸¿ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹¡ç¹¢ç¹¥ç¹«ç¹®ç¹¯ç¹³ç¹¸ç¹¾çºçºçºçºçºçºçºçºçºçºçºç¼¼ç¼»ç¼½ç¼¾ç¼¿ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½¡ç½£ç½¤ç½¥ç½¦ç½­"],["8fd5a1","ç½±ç½½ç½¾ç½¿ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾¡ç¾¢ç¾¦ç¾ªç¾­ç¾´ç¾¼ç¾¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿£ç¿¥ç¿¨ç¿¬ç¿®ç¿¯ç¿²ç¿ºç¿½ç¿¾ç¿¿èèèèèèèèèèèèèè è¤è¦è¬è®è°è´èµè·è¹èºè¼è¾èèè è¤è¦è­è±èµèèèèèè¦è§è«è¸è¹èèèèèèèèè è­è®"],["8fd6a1","è°è²è³è¶è¹èºè¾èèèèèèèè è¤è§è¬è°èµèºè¼èèèèèèè è¡è§è¨è©è­è¯è·èèèèèèèèèèèè¢è®è²è´è»èèèèèèèèèèèè¡è¤è«è¬è°è±è²èµè¶è¸è¹è½è¿èèèèèèèèè¡è¢è¨è²è´èºèèèè"],["8fd7a1","èèèèèèè è£è§è­è´è»è½è¿èèèèèèèèèèèèèèè è¡è£è¤è§è¨è©èªè®è°è²è´è·èºè¼è¾è¿èèèèè è¢è¤è¨èªè­è¯è¶è·è½è¾èèèèèèèèèèèè¡è¢è¬è­è®è°è³è·èºè¼è½èèèèèèèèèèè°è¸"],["8fd8a1","è½è¿èèèèèèèèèèèèèè¦è§è©è¬è¾è¿èèèèèèèèèè¨èªè¶è¸è¹è¼èèèèèèèè­è¯è¹èèèèèèèèèèèèèè è¤è¥è§èªè°è³è´è¶è¸è¼è½èèèèèèè¦è¨è©èªè¯è±è´èºè½è¾èèèèèèè"],["8fd9a1","èè§èªè¯è°è±è²è·è²èºè»è½èèèèèèèèè¢è£è¤è¥è§èªè«è¯è³è´è¶è¿èè",4,"èèè",6,"è¤è«è¯è¹èºè»è½è¿èèèèèèèèèèèè è¢è¥è§è´è¶è·è¸è¼è½è¾è¿èèèèèè­èèèè è¦è¨è­è³è¶è¼"],["8fdaa1","è¿èèèèèèèèèèèèè¡è§è©è¶è¸èºè¼è½èèèèèèèèèèè ",4,"è©è¬è¯èµè¶è·èºèèèèèèè¡è¦è§è¨è­è±è³è´èµè·è¸è¹è¿èèèèèèèèèèè è£è¥è§èèºè¼è½èèèèèèèèèèèèè¡è£"],["8fdba1","è¨è®è¯è±è²è¹èºè¼è½è¾èèèèèèè¡è¤è¥è¯è±è²è»è",6,"èèèèèèèèèè è£è§è¬è­è®è±èµè¾è¿èèèèèèèèèèèè¢è£è¤èªè«è­è±è³è¸èºè¿è è è è è è è è è è è è è è è è è è ¨è ­è ®è °è ²è µ"],["8fdca1","è ºè ¼è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡ è¡¤è¡©è¡±è¡¹è¡»è¢è¢è¢è¢è¢è¢è¢ è¢¨è¢ªè¢ºè¢½è¢¾è£è£",4,"è£è£è£è£è£è£§è£¯è£°è£±è£µè£·è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤ è¤¦è¤§è¤¨è¤°è¤±è¤²è¤µè¤¹è¤ºè¤¾è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥¡è¥¢è¥£è¥«è¥®è¥°è¥³è¥µè¥º"],["8fdda1","è¥»è¥¼è¥½è¦è¦è¦è¦è¦è¦è¦è¦è¦ è¦¥è¦°è¦´è¦µè¦¶è¦·è¦¼è§",4,"è§¥è§©è§«è§­è§±è§³è§¶è§¹è§½è§¿è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨ è¨¢è¨¤è¨¦è¨«è¨¬è¨¯è¨µè¨·è¨½è¨¾è©è©è©è©è©è©è©è©è©è©è©è©è©è©¡è©¥è©§è©µè©¶è©·è©¹è©ºè©»è©¾è©¿èªèªèªèªèªèªèªèªèªèªèªèª§èª©èª®èª¯èª³"],["8fdea1","èª¶èª·èª»èª¾è«è«è«è«è«è«è«è«è«è«è«è«è«¬è«°è«´è«µè«¶è«¼è«¿è¬è¬è¬è¬è¬è¬è¬è¬è¬­è¬°è¬·è¬¼è­",4,"è­è­è­è­è­è­è­è­£è­­è­¶è­¸è­¹è­¼è­¾è®è®è®è®è®è®è®è®è®è®è®è°¸è°¹è°½è°¾è±è±è±è±è±è±è±è±è±è±è±è±è±è±£è±¤è±¦è±¨è±©è±­è±³è±µè±¶è±»è±¾è²"],["8fdfa1","è²è²è²è²è²è²è²è²è²¤è²¹è²ºè³è³è³è³è³è³è³è³è³è³¡è³¨è³¬è³¯è³°è³²è³µè³·è³¸è³¾è³¿è´è´è´è´è´è´èµ¥èµ©èµ¬èµ®èµ¿è¶è¶è¶è¶è¶è¶è¶è¶è¶è¶ è¶¦è¶«è¶¬è¶¯è¶²è¶µè¶·è¶¹è¶»è·è·è·è·è·è·è·è·è·è·è·è·è·¤è·¥è·§è·¬è·°è¶¼è·±è·²è·´è·½è¸è¸è¸è¸è¸è¸è¸è¸è¸ è¸¡è¸¢"],["8fe0a1","è¸£è¸¦è¸§è¸±è¸³è¸¶è¸·è¸¸è¸¹è¸½è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹¡è¹¢è¹©è¹¬è¹­è¹¯è¹°è¹±è¹¹è¹ºè¹»èºèºèºèºèºèºèºèºèºèºèº¢èº§èº©èº­èº®èº³èºµèººèº»è»è»è»è»è»è»è»è»è»è»¨è»®è»°è»±è»·è»¹è»ºè»­è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼ è¼¡è¼£è¼¥è¼§è¼¨è¼¬è¼­è¼®è¼´è¼µè¼¶è¼·è¼ºè½è½"],["8fe1a1","è½è½è½è½",4,"è½è½è½è½¥è¾è¾ è¾¡è¾¤è¾¥è¾¦è¾µè¾¶è¾¸è¾¾è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿ è¿£è¿¤è¿¨è¿®è¿±è¿µè¿¶è¿»è¿¾ééééééé¨é©é¯éªé¬é­é³é´é·é¿éééééé¢é¦é§é¬é°é´é¹éééééééééééé é¡é¢é¥é°é²é³é´é¶é½éé¾é"],["8fe2a1","éééééééééééé¥éé¶é«é¯é°é´é¾é¿ééééééééééééééé é¥é¢é£é§é©é®é¯é±é´é¶é·é¹éºé¼é½éééééééééé¡é¤é§é­é´é¹éºé»ééééééééééééé¡é¦é¨é¬é­é®é°é±é²é³é¶é»é¼é½é¿"],["8fe3a1","éééééééééé¤é¥é©éªé¬",5,"é·é¹é»é½ééééééééééééééééé£é¤é¥é¦é¨é®é¯é°é³éµé¶é¸é¹éºé¼é¾ééééééééééééééé é¡é¥é§é¨é©é®é¯é°éµ",4,"é»é¼é½é¿ééééééé"],["8fe4a1","ééé é¤é¥é§é¨é«é¯é²é¶é¸éºé»é¼é½é¿",4,"éééééééééééééééééé é¡é£é¥é§é¨é¬é®é°é¹é»é¿éééééééééééé¡é¤é¥é§é©éªé³é´é¶é·éééééééééééé¤é¥é§é©éªé­é¯é°é±é³é´é¶"],["8fe5a1","éºé½é¿éééééééééééééé¡é£é¤é¦é¨é«é´éµé¶éºé©éééééé",4,"éééééé¢é¦é§é¹é·é¸éºé»é½ééééééééééééé®é¯é±é²é³é´é»é¿é½éééééééééé¡é£é¨é«é­é®é¯é±é²ééé¸é¹"],["8fe6a1","é¾ééééééééé¡é¦é©é«é¬é´é¶éºé½é¿éééééééééééééé é¤é¦ééé¢é¤é¥é¦é¬é±é³é·é¸é¹éºé¼é½ééééééé¡é®é´é»é¼é¾é¿ééééééééééé¤é¥é¦é©é®é¯é³éºééå¶²éééééé©é¯é±éºé"],["8fe7a1","ééééééé¡é¢é£é¨é±é³ééééééééééé£é§éªé®é³é¶é·é¸é»é½é¿éééééééééé¢é¬é®é±é²éµé¶é¸é¹éºé¼é¾é¿éééééééééééééééééé éé¡é¤é¯é±é´é·é¸éºé é é é é é é é é é  é £é ¦"],["8fe8a1","é «é ®é ¯é °é ²é ³é µé ¥é ¾é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡¢é¡£é¡¥é¡¦é¡ªé¡¬é¢«é¢­é¢®é¢°é¢´é¢·é¢¸é¢ºé¢»é¢¿é£é£é£é£é£¡é££é£¥é£¦é£§é£ªé£³é£¶é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤¢é¤¦é¤§é¤«é¤±",4,"é¤¹é¤ºé¤»é¤¼é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥ é¦é¦é¦é¦¦é¦°é¦±é¦²é¦µ"],["8fe9a1","é¦¹é¦ºé¦½é¦¿é§é§é§é§é§é§é§é§é§§é§ªé§«é§¬é§°é§´é§µé§¹é§½é§¾é¨é¨é¨é¨é¨é¨é¨é¨é¨é¨ é¨¢é¨£é¨¤é¨§é¨­é¨®é¨³é¨µé¨¶é¨¸é©é©é©é©é©é©é©é©é©é©é©éªªéª¬éª®éª¯éª²éª´éªµéª¶éª¹éª»éª¾éª¿é«é«é«é«é«é«é«é«é«é«é«é«é« é«¤é«¥é«§é«©é«¬é«²é«³é«µé«¹é«ºé«½é«¿",4],["8feaa1","é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬ é¬¦é¬«é¬­é¬³é¬´é¬µé¬·é¬¹é¬ºé¬½é­é­é­é­é­é­é­é­é­¡é­£é­¥é­¦é­¨é­ª",4,"é­³é­µé­·é­¸é­¹é­¿é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®¦é®§é®©é®¬é®°é®±é®²é®·é®¸é®»é®¼é®¾é®¿é¯é¯é¯é¯é¯é¯é¯é¯é¯é¯¥é¯§é¯ªé¯«é¯¯é¯³é¯·é¯¸"],["8feba1","é¯¹é¯ºé¯½é¯¿é°é°é°é°é°é°é°é°é°é°é°é°¢é°£é°¦",4,"é°±é°µé°¶é°·é°½é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±£é±©é±ªé±é±«é±¨é±®é±°é±²é±µé±·é±»é³¦é³²é³·é³¹é´é´é´é´é´é´é´é´é´¯é´°é´²é´³é´´é´ºé´¼éµé´½éµéµéµéµéµéµéµéµ£éµ¢éµ¥éµ©éµªéµ«éµ°éµ¶éµ·éµ»"],["8feca1","éµ¼éµ¾é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶¡é¶ªé¶¬é¶®é¶±é¶µé¶¹é¶¼é¶¿é·é·é·é·é·é·é·é·é·é·é·é· é·¥é·§é·©é·«é·®é·°é·³é·´é·¾é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¹ºé¹»é¹¼éºéºéºéºéºéºéºéºéºéºéºéºéº¤éº¨éº¬éº®éº¯éº°éº³éº´éºµé»é»é»é»é»é»¤é»§é»¬é»­é»®é»°é»±é»²é»µ"],["8feda1","é»¸é»¿é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼¢é¼¦é¼ªé¼«é¼¯é¼±é¼²é¼´é¼·é¼¹é¼ºé¼¼é¼½é¼¿é½é½",4,"é½é½é½é½é½é½é½é½é½¨é½©é½­",4,"é½³é½µé½ºé½½é¾é¾é¾é¾é¾é¾é¾é¾é¾¡é¾¢é¾£é¾¥"]]');
            }
          ),
          /***/
          99129: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('{"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}');
            }
          ),
          /***/
          55914: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('[["a140","î",62],["a180","î",32],["a240","î¦",62],["a280","î¥",32],["a2ab","î¦",5],["a2e3","â¬î­"],["a2ef","î®î¯"],["a2fd","î°î±"],["a340","î",62],["a380","î",31,"ã"],["a440","î¦",62],["a480","î¥",32],["a4f4","î²",10],["a540","î",62],["a580","î",32],["a5f7","î½",7],["a640","î¦",62],["a680","î¥",32],["a6b9","î",7],["a6d9","î",6],["a6ec","îî"],["a6f3","î"],["a6f6","î",8],["a740","î",62],["a780","î",32],["a7c2","î ",14],["a7f2","î¯",12],["a896","î¼",10],["a8bc","á¸¿"],["a8bf","Ç¹"],["a8c1","îîîî"],["a8ea","î",20],["a958","î¢"],["a95b","î£"],["a95d","î¤î¥î¦"],["a989","ã¾â¿°",11],["a997","î´",12],["a9f0","î ",14],["aaa1","î",93],["aba1","î",93],["aca1","î¼",93],["ada1","î",93],["aea1","î¸",93],["afa1","î",93],["d7fa","î ",4],["f8a1","î´",93],["f9a1","î",93],["faa1","î°",93],["fba1","î",93],["fca1","î¬",93],["fda1","î",93],["fe50","âºî î î âºã³ãâºâºî ãããâºâºã¥®ã¤î ¦ã§ã§ã©³ã§î «î ¬ã­ã±®ã³ âº§î ±î ²âºªääâº®ä·âº³âº¶âº·î »ä±ä¬âº»äää¡äî¡"],["fe80","ä£ä©ä¼äâ»ä¥ä¥ºä¥½ä¦ä¦ä¦ä¦ä¦ä¦ä¦·ä¦¶î¡î¡ä²£ä²ä² ä²¡ä±·ä²¢ä´",6,"ä¶®î¡¤î¨",93],["8135f437","î"]]');
            }
          ),
          /***/
          40679: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('[["0","\\u0000",128],["a1","ï½¡",62],["8140","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±Ã"],["8180","Ã·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââââ¡â â³â²â½â¼â»ãââââã"],["81b8","âââââââªâ©"],["81c8","â§â¨ï¿¢ââââ"],["81da","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["81f0","â«â°â¯â­âªâ â¡Â¶"],["81fc","â¯"],["824f","ï¼",9],["8260","ï¼¡",25],["8281","ï½",25],["829f","ã",82],["8340","ã¡",62],["8380","ã ",22],["839f","Î",16,"Î£",6],["83bf","Î±",16,"Ï",6],["8440","Ð",5,"ÐÐ",25],["8470","Ð°",5,"ÑÐ¶",7],["8480","Ð¾",17],["849f","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["8740","â ",19,"â ",9],["875f","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["877e","ã»"],["8780","ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["889f","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["8940","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­å"],["8980","åå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["8a40","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«"],["8a80","æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["8b40","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥æ"],["8b80","æ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["8c40","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨"],["8c80","åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["8d40","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤é"],["8d80","é é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["8e40","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢"],["8e80","æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºææææ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["8f40","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³"],["8f80","æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·ååå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["9040","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨"],["9080","éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["9140","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»"],["9180","ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æèèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["9240","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­è"],["9280","éç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µå¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["9340","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬"],["9380","åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["9440","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢"],["9480","æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["9540","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·"],["9580","æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["9640","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡ç"],["9680","æ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æºæ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["9740","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²"],["9780","æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨ççç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["9840","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["989f","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["9940","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­"],["9980","å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["9a40","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸"],["9a80","å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿ååååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["9b40","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®"],["9b80","å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["9c40","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ "],["9c80","æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["9d40","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«"],["9d80","æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["9e40","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡"],["9e80","æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["9f40","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯"],["9f80","éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["e040","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®ççç"],["e080","ççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e140","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿"],["e180","ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e240","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°"],["e280","çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e340","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·"],["e380","ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼ºç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e440","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤"],["e480","è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèèèµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e540","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬"],["e580","èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®èèè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["e640","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§"],["e680","è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["e740","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½"],["e780","è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["e840","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿ééééééé"],["e880","é é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·ééééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["e940","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©"],["e980","é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["ea40","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯"],["ea80","é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ å ¯æ§éç¤åç"],["ed40","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨"],["ed80","ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["ee40","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èè"],["ee80","è«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["eeef","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["f040","î",62],["f080","î¿",124],["f140","î¼",62],["f180","î»",124],["f240","î¸",62],["f280","î·",124],["f340","î´",62],["f380","î³",124],["f440","î°",62],["f480","î¯",124],["f540","î¬",62],["f580","î«",124],["f640","î¨",62],["f680","î§",124],["f740","î¤",62],["f780","î£",124],["f840","î ",62],["f880","î",124],["f940","î"],["fa40","â°",9,"â ",9,"ï¿¢ï¿¤ï¼ï¼ã±ââ¡âµçºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´åå"],["fa80","å¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯"],["fb40","æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨"],["fb80","ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«"],["fc40","é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"]]');
            }
          ),
          /***/
          9240: (
            /***/
            function(f) {
              f.exports = /* @__PURE__ */ JSON.parse('{"ifd":{"8298":"Copyright","8769":"ExifIFDPointer","8822":"ExposureProgram","8824":"SpectralSensitivity","8825":"GPSInfoIFDPointer","8827":"PhotographicSensitivity","8828":"OECF","8830":"SensitivityType","8831":"StandardOutputSensitivity","8832":"RecommendedExposureIndex","8833":"ISOSpeed","8834":"ISOSpeedLatitudeyyy","8835":"ISOSpeedLatitudezzz","9000":"ExifVersion","9003":"DateTimeOriginal","9004":"DateTimeDigitized","9101":"ComponentsConfiguration","9102":"CompressedBitsPerPixel","9201":"ShutterSpeedValue","9202":"ApertureValue","9203":"BrightnessValue","9204":"ExposureBiasValue","9205":"MaxApertureValue","9206":"SubjectDistance","9207":"MeteringMode","9208":"LightSource","9209":"Flash","9214":"SubjectArea","9286":"UserComment","9290":"SubSecTime","9291":"SubSecTimeOriginal","9292":"SubSecTimeDigitized","010e":"ImageDescription","010f":"Make","011a":"XResolution","011b":"YResolution","011c":"PlanarConfiguration","012d":"TransferFunction","013b":"Artist","013e":"WhitePoint","013f":"PrimaryChromaticities","0100":"ImageWidth","0101":"ImageHeight","0102":"BitsPerSample","0103":"Compression","0106":"PhotometricInterpretation","0110":"Model","0111":"StripOffsets","0112":"Orientation","0115":"SamplesPerPixel","0116":"RowsPerStrip","0117":"StripByteCounts","0128":"ResolutionUnit","0131":"Software","0132":"DateTime","0201":"JPEGInterchangeFormat","0202":"JPEGInterchangeFormatLength","0211":"YCbCrCoefficients","0212":"YCbCrSubSampling","0213":"YCbCrPositioning","0214":"ReferenceBlackWhite","829a":"ExposureTime","829d":"FNumber","920a":"FocalLength","927c":"MakerNote","a000":"FlashpixVersion","a001":"ColorSpace","a002":"PixelXDimension","a003":"PixelYDimension","a004":"RelatedSoundFile","a005":"InteroperabilityIFDPointer","a20b":"FlashEnergy","a20c":"SpatialFrequencyResponse","a20e":"FocalPlaneXResolution","a20f":"FocalPlaneYResolution","a40a":"Sharpness","a40b":"DeviceSettingDescription","a40c":"SubjectDistanceRange","a210":"FocalPlaneResolutionUnit","a214":"SubjectLocation","a215":"ExposureIndex","a217":"SensingMethod","a300":"FileSource","a301":"SceneType","a302":"CFAPattern","a401":"CustomRendered","a402":"ExposureMode","a403":"WhiteBalance","a404":"DigitalZoomRatio","a405":"FocalLengthIn35mmFilm","a406":"SceneCaptureType","a407":"GainControl","a408":"Contrast","a409":"Saturation","a420":"ImageUniqueID","a430":"CameraOwnerName","a431":"BodySerialNumber","a432":"LensSpecification","a433":"LensMake","a434":"LensModel","a435":"LensSerialNumber","a500":"Gamma"},"gps":{"0000":"GPSVersionID","0001":"GPSLatitudeRef","0002":"GPSLatitude","0003":"GPSLongitudeRef","0004":"GPSLongitude","0005":"GPSAltitudeRef","0006":"GPSAltitude","0007":"GPSTimeStamp","0008":"GPSSatellites","0009":"GPSStatus","000a":"GPSMeasureMode","000b":"GPSDOP","000c":"GPSSpeedRef","000d":"GPSSpeed","000e":"GPSTrackRef","000f":"GPSTrack","0010":"GPSImgDirectionRef","0011":"GPSImgDirection","0012":"GPSMapDatum","0013":"GPSDestLatitudeRef","0014":"GPSDestLatitude","0015":"GPSDestLongitudeRef","0016":"GPSDestLongitude","0017":"GPSDestBearingRef","0018":"GPSDestBearing","0019":"GPSDestDistanceRef","001a":"GPSDestDistance","001b":"GPSProcessingMethod","001c":"GPSAreaInformation","001d":"GPSDateStamp","001e":"GPSDifferential","001f":"GPSHPositioningError"}}');
            }
          )
          /******/
        }, w = {};
        function L(f) {
          var d = w[f];
          if (d !== void 0)
            return d.exports;
          var t = w[f] = {
            /******/
            id: f,
            /******/
            loaded: !1,
            /******/
            exports: {}
            /******/
          };
          return g[f].call(t.exports, t, t.exports, L), t.loaded = !0, t.exports;
        }
        (function() {
          L.g = function() {
            if (typeof globalThis == "object")
              return globalThis;
            try {
              return this || new Function("return this")();
            } catch (f) {
              if (typeof window == "object")
                return window;
            }
          }();
        })(), function() {
          L.nmd = function(f) {
            return f.paths = [], f.children || (f.children = []), f;
          };
        }();
        var B = L(73751);
        return B;
      }()
    );
  });
})(S1);
/*! Buttons for DataTables 3.2.2
 * Â© SpryMedia Ltd - datatables.net/license
 */
let Ce = Wn;
var C1 = 0, E1 = 0, aa = de.ext.buttons, Xs = null;
function v0(a, p, g) {
  Ce.fn.animate ? a.stop().fadeIn(p, g) : (a.css("display", "block"), g && g.call(a));
}
function p0(a, p, g) {
  Ce.fn.animate ? a.stop().fadeOut(p, g) : (a.css("display", "none"), g && g.call(a));
}
var Jr = function(a, p) {
  if (!de.versionCheck("2"))
    throw "Warning: Buttons requires DataTables 2 or newer";
  if (!(this instanceof Jr))
    return function(g) {
      return new Jr(g, a).container();
    };
  typeof p == "undefined" && (p = {}), p === !0 && (p = {}), Array.isArray(p) && (p = { buttons: p }), this.c = Ce.extend(!0, {}, Jr.defaults, p), p.buttons && (this.c.buttons = p.buttons), this.s = {
    dt: new de.Api(a),
    buttons: [],
    listenKeys: "",
    namespace: "dtb" + C1++
  }, this.dom = {
    container: Ce("<" + this.c.dom.container.tag + "/>").addClass(
      this.c.dom.container.className
    )
  }, this._constructor();
};
Ce.extend(Jr.prototype, {
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Public methods
   */
  /**
   * Get the action of a button
   * @param  {int|string} Button index
   * @return {function}
   */
  /**
  * Set the action of a button
  * @param  {node} node Button element
  * @param  {function} action Function to set
  * @return {Buttons} Self for chaining
  */
  action: function(a, p) {
    var g = this._nodeToButton(a);
    return p === void 0 ? g.conf.action : (g.conf.action = p, this);
  },
  /**
   * Add an active class to the button to make to look active or get current
   * active state.
   * @param  {node} node Button element
   * @param  {boolean} [flag] Enable / disable flag
   * @return {Buttons} Self for chaining or boolean for getter
   */
  active: function(a, p) {
    var g = this._nodeToButton(a), w = this.c.dom.button.active, L = Ce(g.node);
    return g.inCollection && this.c.dom.collection.button && this.c.dom.collection.button.active !== void 0 && (w = this.c.dom.collection.button.active), p === void 0 ? L.hasClass(w) : (L.toggleClass(w, p === void 0 ? !0 : p), this);
  },
  /**
   * Add a new button
   * @param {object} config Button configuration object, base string name or function
   * @param {int|string} [idx] Button index for where to insert the button
   * @param {boolean} [draw=true] Trigger a draw. Set a false when adding
   *   lots of buttons, until the last button.
   * @return {Buttons} Self for chaining
   */
  add: function(a, p, g) {
    var w = this.s.buttons;
    if (typeof p == "string") {
      for (var L = p.split("-"), B = this.s, f = 0, d = L.length - 1; f < d; f++)
        B = B.buttons[L[f] * 1];
      w = B.buttons, p = L[L.length - 1] * 1;
    }
    return this._expandButton(
      w,
      a,
      a !== void 0 ? a.split : void 0,
      (a === void 0 || a.split === void 0 || a.split.length === 0) && B !== void 0,
      !1,
      p
    ), (g === void 0 || g === !0) && this._draw(), this;
  },
  /**
   * Clear buttons from a collection and then insert new buttons
   */
  collectionRebuild: function(a, p) {
    var g = this._nodeToButton(a);
    if (p !== void 0) {
      var w;
      for (w = g.buttons.length - 1; w >= 0; w--)
        this.remove(g.buttons[w].node);
      for (g.conf.prefixButtons && p.unshift.apply(p, g.conf.prefixButtons), g.conf.postfixButtons && p.push.apply(p, g.conf.postfixButtons), w = 0; w < p.length; w++) {
        var L = p[w];
        this._expandButton(
          g.buttons,
          L,
          L !== void 0 && L.config !== void 0 && L.config.split !== void 0,
          !0,
          L.parentConf !== void 0 && L.parentConf.split !== void 0,
          null,
          L.parentConf
        );
      }
    }
    this._draw(g.collection, g.buttons);
  },
  /**
   * Get the container node for the buttons
   * @return {jQuery} Buttons node
   */
  container: function() {
    return this.dom.container;
  },
  /**
   * Disable a button
   * @param  {node} node Button node
   * @return {Buttons} Self for chaining
   */
  disable: function(a) {
    var p = this._nodeToButton(a);
    return p.isSplit ? Ce(p.node.childNodes[0]).addClass(this.c.dom.button.disabled).prop("disabled", !0) : Ce(p.node).addClass(this.c.dom.button.disabled).prop("disabled", !0), p.disabled = !0, this._checkSplitEnable(), this;
  },
  /**
   * Destroy the instance, cleaning up event handlers and removing DOM
   * elements
   * @return {Buttons} Self for chaining
   */
  destroy: function() {
    Ce("body").off("keyup." + this.s.namespace);
    var a = this.s.buttons.slice(), p, g;
    for (p = 0, g = a.length; p < g; p++)
      this.remove(a[p].node);
    this.dom.container.remove();
    var w = this.s.dt.settings()[0];
    for (p = 0, g = w.length; p < g; p++)
      if (w.inst === this) {
        w.splice(p, 1);
        break;
      }
    return this;
  },
  /**
   * Enable / disable a button
   * @param  {node} node Button node
   * @param  {boolean} [flag=true] Enable / disable flag
   * @return {Buttons} Self for chaining
   */
  enable: function(a, p) {
    if (p === !1)
      return this.disable(a);
    var g = this._nodeToButton(a);
    return g.isSplit ? Ce(g.node.childNodes[0]).removeClass(this.c.dom.button.disabled).prop("disabled", !1) : Ce(g.node).removeClass(this.c.dom.button.disabled).prop("disabled", !1), g.disabled = !1, this._checkSplitEnable(), this;
  },
  /**
   * Get a button's index
   *
   * This is internally recursive
   * @param {element} node Button to get the index of
   * @return {string} Button index
   */
  index: function(a, p, g) {
    p || (p = "", g = this.s.buttons);
    for (var w = 0, L = g.length; w < L; w++) {
      var B = g[w].buttons;
      if (g[w].node === a)
        return p + w;
      if (B && B.length) {
        var f = this.index(a, w + "-", B);
        if (f !== null)
          return f;
      }
    }
    return null;
  },
  /**
   * Get the instance name for the button set selector
   * @return {string} Instance name
   */
  name: function() {
    return this.c.name;
  },
  /**
   * Get a button's node of the buttons container if no button is given
   * @param  {node} [node] Button node
   * @return {jQuery} Button element, or container
   */
  node: function(a) {
    if (!a)
      return this.dom.container;
    var p = this._nodeToButton(a);
    return Ce(p.node);
  },
  /**
   * Set / get a processing class on the selected button
   * @param {element} node Triggering button node
   * @param  {boolean} flag true to add, false to remove, undefined to get
   * @return {boolean|Buttons} Getter value or this if a setter.
   */
  processing: function(a, p) {
    var g = this.s.dt, w = this._nodeToButton(a);
    return p === void 0 ? Ce(w.node).hasClass("processing") : (Ce(w.node).toggleClass("processing", p), Ce(g.table().node()).triggerHandler("buttons-processing.dt", [
      p,
      g.button(a),
      g,
      Ce(a),
      w.conf
    ]), this);
  },
  /**
   * Remove a button.
   * @param  {node} node Button node
   * @return {Buttons} Self for chaining
   */
  remove: function(a) {
    var p = this._nodeToButton(a), g = this._nodeToHost(a), w = this.s.dt;
    if (p.buttons.length)
      for (var L = p.buttons.length - 1; L >= 0; L--)
        this.remove(p.buttons[L].node);
    p.conf.destroying = !0, p.conf.destroy && p.conf.destroy.call(w.button(a), w, Ce(a), p.conf), this._removeKey(p.conf), Ce(p.node).remove();
    var B = Ce.inArray(p, g);
    return g.splice(B, 1), this;
  },
  /**
   * Get the text for a button
   * @param  {int|string} node Button index
   * @return {string} Button text
   */
  /**
  * Set the text for a button
  * @param  {int|string|function} node Button index
  * @param  {string} label Text
  * @return {Buttons} Self for chaining
  */
  text: function(a, p) {
    var g = this._nodeToButton(a), w = g.textNode, L = this.s.dt, B = Ce(g.node), f = function(d) {
      return typeof d == "function" ? d(L, B, g.conf) : d;
    };
    return p === void 0 ? f(g.conf.text) : (g.conf.text = p, w.html(f(p)), this);
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Constructor
   */
  /**
   * Buttons constructor
   * @private
   */
  _constructor: function() {
    var a = this, p = this.s.dt, g = p.settings()[0], w = this.c.buttons;
    g._buttons || (g._buttons = []), g._buttons.push({
      inst: this,
      name: this.c.name
    });
    for (var L = 0, B = w.length; L < B; L++)
      this.add(w[L]);
    p.on("destroy", function(f, d) {
      d === g && a.destroy();
    }), Ce("body").on("keyup." + this.s.namespace, function(f) {
      if (!document.activeElement || document.activeElement === document.body) {
        var d = String.fromCharCode(f.keyCode).toLowerCase();
        a.s.listenKeys.toLowerCase().indexOf(d) !== -1 && a._keypress(d, f);
      }
    });
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Private methods
   */
  /**
   * Add a new button to the key press listener
   * @param {object} conf Resolved button configuration object
   * @private
   */
  _addKey: function(a) {
    a.key && (this.s.listenKeys += Ce.isPlainObject(a.key) ? a.key.key : a.key);
  },
  /**
   * Insert the buttons into the container. Call without parameters!
   * @param  {node} [container] Recursive only - Insert point
   * @param  {array} [buttons] Recursive only - Buttons array
   * @private
   */
  _draw: function(a, p) {
    a || (a = this.dom.container, p = this.s.buttons), a.children().detach();
    for (var g = 0, w = p.length; g < w; g++)
      a.append(p[g].inserter), a.append(" "), p[g].buttons && p[g].buttons.length && this._draw(p[g].collection, p[g].buttons);
  },
  /**
   * Create buttons from an array of buttons
   * @param  {array} attachTo Buttons array to attach to
   * @param  {object} button Button definition
   * @param  {boolean} inCollection true if the button is in a collection
   * @private
   */
  _expandButton: function(a, p, g, w, L, B, f) {
    var d = this.s.dt, t = !1, i = this.c.dom.collection, r = Array.isArray(p) ? p : [p];
    p === void 0 && (r = Array.isArray(g) ? g : [g]);
    for (var n = 0, o = r.length; n < o; n++) {
      var h = this._resolveExtends(r[n]);
      if (h) {
        if (t = !!(h.config && h.config.split), Array.isArray(h)) {
          this._expandButton(
            a,
            h,
            u !== void 0 && u.conf !== void 0 ? u.conf.split : void 0,
            w,
            f !== void 0 && f.split !== void 0,
            B,
            f
          );
          continue;
        }
        var u = this._buildButton(
          h,
          w,
          h.split !== void 0 || h.config !== void 0 && h.config.split !== void 0,
          L
        );
        if (u) {
          if (B != null ? (a.splice(B, 0, u), B++) : a.push(u), u.conf.dropIcon && !u.conf.split && Ce(u.node).addClass(this.c.dom.button.dropClass).append(this.c.dom.button.dropHtml), u.conf.buttons && (u.collection = Ce(
            "<" + i.container.content.tag + "/>"
          ), u.conf._collection = u.collection, this._expandButton(
            u.buttons,
            u.conf.buttons,
            u.conf.split,
            !t,
            t,
            B,
            u.conf
          )), u.conf.split) {
            u.collection = Ce("<" + i.container.tag + "/>"), u.conf._collection = u.collection;
            for (var l = 0; l < u.conf.split.length; l++) {
              var c = u.conf.split[l];
              typeof c == "object" && (c.parent = f, c.collectionLayout === void 0 && (c.collectionLayout = u.conf.collectionLayout), c.dropup === void 0 && (c.dropup = u.conf.dropup), c.fade === void 0 && (c.fade = u.conf.fade));
            }
            this._expandButton(
              u.buttons,
              u.conf.buttons,
              u.conf.split,
              !t,
              t,
              B,
              u.conf
            );
          }
          u.conf.parent = f, h.init && h.init.call(d.button(u.node), d, Ce(u.node), h);
        }
      }
    }
  },
  /**
   * Create an individual button
   * @param  {object} config            Resolved button configuration
   * @param  {boolean} inCollection `true` if a collection button
   * @return {object} Completed button description object
   * @private
   */
  _buildButton: function(a, p, g, w) {
    var L = this, B = this.c.dom, f, d = this.s.dt, t = function(D) {
      return typeof D == "function" ? D(d, n, a) : D;
    }, i = Ce.extend(!0, {}, B.button);
    if (p && g && B.collection.split ? Ce.extend(!0, i, B.collection.split.action) : w || p ? Ce.extend(!0, i, B.collection.button) : g && Ce.extend(!0, i, B.split.button), a.spacer) {
      var r = Ce("<" + i.spacer.tag + "/>").addClass(
        "dt-button-spacer " + a.style + " " + i.spacer.className
      ).html(t(a.text));
      return {
        conf: a,
        node: r,
        inserter: r,
        buttons: [],
        inCollection: p,
        isSplit: g,
        collection: null,
        textNode: r
      };
    }
    if (a.available && !a.available(d, a) && !a.html)
      return !1;
    var n;
    if (a.html)
      n = Ce(a.html);
    else {
      var o = function(D, E, T, C, F) {
        C.action.call(E.button(T), D, E, T, C, F), Ce(E.table().node()).triggerHandler("buttons-action.dt", [
          E.button(T),
          E,
          T,
          C
        ]);
      }, h = function(D, E, T, C) {
        C.async ? (L.processing(T[0], !0), setTimeout(function() {
          o(D, E, T, C, function() {
            L.processing(T[0], !1);
          });
        }, C.async)) : o(D, E, T, C, function() {
        });
      }, u = a.tag || i.tag, l = a.clickBlurs === void 0 ? !0 : a.clickBlurs;
      if (n = Ce("<" + u + "/>").addClass(i.className).attr("tabindex", this.s.dt.settings()[0].iTabIndex).attr("aria-controls", this.s.dt.table().node().id).on("click.dtb", function(D) {
        D.preventDefault(), !n.hasClass(i.disabled) && a.action && h(D, d, n, a), l && n.trigger("blur");
      }).on("keypress.dtb", function(D) {
        D.keyCode === 13 && (D.preventDefault(), !n.hasClass(i.disabled) && a.action && h(D, d, n, a));
      }), u.toLowerCase() === "a" && n.attr("href", "#"), u.toLowerCase() === "button" && n.attr("type", "button"), i.liner.tag) {
        var c = Ce("<" + i.liner.tag + "/>").html(t(a.text)).addClass(i.liner.className);
        i.liner.tag.toLowerCase() === "a" && c.attr("href", "#"), n.append(c), f = c;
      } else
        n.html(t(a.text)), f = n;
      a.enabled === !1 && n.addClass(i.disabled), a.className && n.addClass(a.className), a.titleAttr && n.attr("title", t(a.titleAttr)), a.attr && n.attr(a.attr), a.namespace || (a.namespace = ".dt-button-" + E1++), a.config !== void 0 && a.config.split && (a.split = a.config.split);
    }
    var s = this.c.dom.buttonContainer, v;
    s && s.tag ? v = Ce("<" + s.tag + "/>").addClass(s.className).append(n) : v = n, this._addKey(a), this.c.buttonCreated && (v = this.c.buttonCreated(a, v));
    var y;
    if (g) {
      var x = p ? Ce.extend(!0, this.c.dom.split, this.c.dom.collection.split) : this.c.dom.split, e = x.wrapper;
      y = Ce("<" + e.tag + "/>").addClass(e.className).append(n);
      var b = Ce.extend(a, {
        autoClose: !0,
        align: x.dropdown.align,
        attr: {
          "aria-haspopup": "dialog",
          "aria-expanded": !1
        },
        className: x.dropdown.className,
        closeButton: !1,
        splitAlignClass: x.dropdown.splitAlignClass,
        text: x.dropdown.text
      });
      this._addKey(b);
      var A = function(D, E, T, C) {
        aa.split.action.call(
          E.button(y),
          D,
          E,
          T,
          C
        ), Ce(E.table().node()).triggerHandler("buttons-action.dt", [
          E.button(T),
          E,
          T,
          C
        ]), T.attr("aria-expanded", !0);
      }, P = Ce(
        '<button class="' + x.dropdown.className + ' dt-button"></button>'
      ).html(this.c.dom.button.dropHtml).addClass(this.c.dom.button.dropClass).on("click.dtb", function(D) {
        D.preventDefault(), D.stopPropagation(), P.hasClass(i.disabled) || A(D, d, P, b), l && P.trigger("blur");
      }).on("keypress.dtb", function(D) {
        D.keyCode === 13 && (D.preventDefault(), P.hasClass(i.disabled) || A(D, d, P, b));
      });
      a.split.length === 0 && P.addClass("dtb-hide-drop"), y.append(P).attr(b.attr);
    }
    return {
      conf: a,
      node: g ? y.get(0) : n.get(0),
      inserter: g ? y : v,
      buttons: [],
      inCollection: p,
      isSplit: g,
      inSplit: w,
      collection: null,
      textNode: f
    };
  },
  /**
   * Spin over buttons checking if splits should be enabled or not.
   * @param {*} buttons Array of buttons to check
   */
  _checkSplitEnable: function(a) {
    a || (a = this.s.buttons);
    for (var p = 0; p < a.length; p++) {
      var g = a[p];
      if (g.isSplit) {
        var w = g.node.childNodes[1];
        this._checkAnyEnabled(g.buttons) ? Ce(w).removeClass(this.c.dom.button.disabled).prop("disabled", !1) : Ce(w).addClass(this.c.dom.button.disabled).prop("disabled", !1);
      } else
        g.isCollection && this._checkSplitEnable(g.buttons);
    }
  },
  /**
   * Check an array of buttons and see if any are enabled in it
   * @param {*} buttons Button array
   * @returns true if a button is enabled, false otherwise
   */
  _checkAnyEnabled: function(a) {
    for (var p = 0; p < a.length; p++)
      if (!a[p].disabled)
        return !0;
    return !1;
  },
  /**
   * Get the button object from a node (recursive)
   * @param  {node} node Button node
   * @param  {array} [buttons] Button array, uses base if not defined
   * @return {object} Button object
   * @private
   */
  _nodeToButton: function(a, p) {
    p || (p = this.s.buttons);
    for (var g = 0, w = p.length; g < w; g++) {
      if (p[g].node === a || Ce(p[g].node).children().eq(0).get(0) === a)
        return p[g];
      if (p[g].buttons.length) {
        var L = this._nodeToButton(a, p[g].buttons);
        if (L)
          return L;
      }
    }
  },
  /**
   * Get container array for a button from a button node (recursive)
   * @param  {node} node Button node
   * @param  {array} [buttons] Button array, uses base if not defined
   * @return {array} Button's host array
   * @private
   */
  _nodeToHost: function(a, p) {
    p || (p = this.s.buttons);
    for (var g = 0, w = p.length; g < w; g++) {
      if (p[g].node === a)
        return p;
      if (p[g].buttons.length) {
        var L = this._nodeToHost(a, p[g].buttons);
        if (L)
          return L;
      }
    }
  },
  /**
   * Handle a key press - determine if any button's key configured matches
   * what was typed and trigger the action if so.
   * @param  {string} character The character pressed
   * @param  {object} e Key event that triggered this call
   * @private
   */
  _keypress: function(a, p) {
    if (!p._buttonsHandled) {
      var g = function(L, B) {
        if (L.key) {
          if (L.key === a)
            p._buttonsHandled = !0, Ce(B).click();
          else if (Ce.isPlainObject(L.key)) {
            if (L.key.key !== a || L.key.shiftKey && !p.shiftKey || L.key.altKey && !p.altKey || L.key.ctrlKey && !p.ctrlKey || L.key.metaKey && !p.metaKey)
              return;
            p._buttonsHandled = !0, Ce(B).click();
          }
        }
      }, w = function(L) {
        for (var B = 0, f = L.length; B < f; B++)
          g(L[B].conf, L[B].node), L[B].buttons.length && w(L[B].buttons);
      };
      w(this.s.buttons);
    }
  },
  /**
   * Remove a key from the key listener for this instance (to be used when a
   * button is removed)
   * @param  {object} conf Button configuration
   * @private
   */
  _removeKey: function(a) {
    if (a.key) {
      var p = Ce.isPlainObject(a.key) ? a.key.key : a.key, g = this.s.listenKeys.split(""), w = Ce.inArray(p, g);
      g.splice(w, 1), this.s.listenKeys = g.join("");
    }
  },
  /**
   * Resolve a button configuration
   * @param  {string|function|object} conf Button config to resolve
   * @return {object} Button configuration
   * @private
   */
  _resolveExtends: function(a) {
    var p = this, g = this.s.dt, w, L, B = function(r) {
      for (var n = 0; !Ce.isPlainObject(r) && !Array.isArray(r); ) {
        if (r === void 0)
          return;
        if (typeof r == "function") {
          if (r = r.call(p, g, a), !r)
            return !1;
        } else if (typeof r == "string") {
          if (!aa[r])
            return { html: r };
          r = aa[r];
        }
        if (n++, n > 30)
          throw "Buttons: Too many iterations";
      }
      return Array.isArray(r) ? r : Ce.extend({}, r);
    };
    for (a = B(a); a && a.extend; ) {
      if (!aa[a.extend])
        throw "Cannot extend unknown button type: " + a.extend;
      var f = B(aa[a.extend]);
      if (Array.isArray(f))
        return f;
      if (!f)
        return !1;
      var d = f.className;
      a.config !== void 0 && f.config !== void 0 && (a.config = Ce.extend({}, f.config, a.config)), a = Ce.extend({}, f, a), d && a.className !== d && (a.className = d + " " + a.className), a.extend = f.extend;
    }
    var t = a.postfixButtons;
    if (t)
      for (a.buttons || (a.buttons = []), w = 0, L = t.length; w < L; w++)
        a.buttons.push(t[w]);
    var i = a.prefixButtons;
    if (i)
      for (a.buttons || (a.buttons = []), w = 0, L = i.length; w < L; w++)
        a.buttons.splice(w, 0, i[w]);
    return a;
  },
  /**
   * Display (and replace if there is an existing one) a popover attached to a button
   * @param {string|node} content Content to show
   * @param {DataTable.Api} hostButton DT API instance of the button
   * @param {object} inOpts Options (see object below for all options)
   */
  _popover: function(a, p, g) {
    var w = p, L = this.c, B = !1, f = Ce.extend(
      {
        align: "button-left",
        // button-right, dt-container, split-left, split-right
        autoClose: !1,
        background: !0,
        backgroundClassName: "dt-button-background",
        closeButton: !0,
        containerClassName: L.dom.collection.container.className,
        contentClassName: L.dom.collection.container.content.className,
        collectionLayout: "",
        collectionTitle: "",
        dropup: !1,
        fade: 400,
        popoverTitle: "",
        rightAlignClassName: "dt-button-right",
        tag: L.dom.collection.container.tag
      },
      g
    ), d = f.tag + "." + f.containerClassName.replace(/ /g, "."), t = p.node(), i = f.collectionLayout.includes("fixed") ? Ce("body") : p.node(), r = function() {
      B = !0, p0(Ce(d), f.fade, function() {
        Ce(this).detach();
      }), Ce(
        w.buttons('[aria-haspopup="dialog"][aria-expanded="true"]').nodes()
      ).attr("aria-expanded", "false"), Ce("div.dt-button-background").off("click.dtb-collection"), Jr.background(
        !1,
        f.backgroundClassName,
        f.fade,
        i
      ), Ce(window).off("resize.resize.dtb-collection"), Ce("body").off(".dtb-collection"), w.off("buttons-action.b-internal"), w.off("destroy"), Ce("body").trigger("buttons-popover-hide.dt");
    };
    if (a === !1) {
      r();
      return;
    }
    var n = Ce(
      w.buttons('[aria-haspopup="dialog"][aria-expanded="true"]').nodes()
    );
    if (n.length && (i.closest(d).length && (i = n.eq(0)), r()), f.sort) {
      var o = Ce("button", a).map(function(C, F) {
        return {
          text: Ce(F).text(),
          el: F
        };
      }).toArray();
      o.sort(function(C, F) {
        return C.text.localeCompare(F.text);
      }), Ce(a).append(o.map(function(C) {
        return C.el;
      }));
    }
    var h = Ce(".dt-button", a).length, u = "";
    h === 3 ? u = "dtb-b3" : h === 2 ? u = "dtb-b2" : h === 1 && (u = "dtb-b1");
    var l = Ce("<" + f.tag + "/>").addClass(f.containerClassName).addClass(f.collectionLayout).addClass(f.splitAlignClass).addClass(u).css("display", "none").attr({
      "aria-modal": !0,
      role: "dialog"
    });
    a = Ce(a).addClass(f.contentClassName).attr("role", "menu").appendTo(l), t.attr("aria-expanded", "true"), i.parents("body")[0] !== document.body && (i = Ce(document.body).children("div, section, p").last()), f.popoverTitle ? l.prepend(
      '<div class="dt-button-collection-title">' + f.popoverTitle + "</div>"
    ) : f.collectionTitle && l.prepend(
      '<div class="dt-button-collection-title">' + f.collectionTitle + "</div>"
    ), f.closeButton && l.prepend('<div class="dtb-popover-close">&times;</div>').addClass("dtb-collection-closeable"), v0(l.insertAfter(i), f.fade);
    var c = Ce(p.table().container()), s = l.css("position");
    if ((f.span === "container" || f.align === "dt-container") && (i = i.parent(), l.css("width", c.width())), s === "absolute") {
      var v = Ce(i[0].offsetParent), y = i.position(), x = i.offset(), e = v.offset(), b = v.position(), A = window.getComputedStyle(v[0]);
      e.height = v.outerHeight(), e.width = v.width() + parseFloat(A.paddingLeft), e.right = e.left + e.width, e.bottom = e.top + e.height;
      var P = y.top + i.outerHeight(), D = y.left;
      l.css({
        top: P,
        left: D
      }), A = window.getComputedStyle(l[0]);
      var E = l.offset();
      E.height = l.outerHeight(), E.width = l.outerWidth(), E.right = E.left + E.width, E.bottom = E.top + E.height, E.marginTop = parseFloat(A.marginTop), E.marginBottom = parseFloat(A.marginBottom), f.dropup && (P = y.top - E.height - E.marginTop - E.marginBottom), (f.align === "button-right" || l.hasClass(f.rightAlignClassName)) && (D = y.left - E.width + i.outerWidth()), (f.align === "dt-container" || f.align === "container") && D < y.left && (D = -y.left), b.left + D + E.width > Ce(window).width() && (D = Ce(window).width() - E.width - b.left), x.left + D < 0 && (D = -x.left), b.top + P + E.height > Ce(window).height() + Ce(window).scrollTop() && (P = y.top - E.height - E.marginTop - E.marginBottom), v.offset().top + P < Ce(window).scrollTop() && (P = y.top + i.outerHeight()), l.css({
        top: P,
        left: D
      });
    } else {
      var T = function() {
        var C = Ce(window).height() / 2, F = l.height() / 2;
        F > C && (F = C), l.css("marginTop", F * -1);
      };
      T(), Ce(window).on("resize.dtb-collection", function() {
        T();
      });
    }
    f.background && Jr.background(
      !0,
      f.backgroundClassName,
      f.fade,
      f.backgroundHost || i
    ), Ce("div.dt-button-background").on(
      "click.dtb-collection",
      function() {
      }
    ), f.autoClose && setTimeout(function() {
      w.on("buttons-action.b-internal", function(C, F, m, I) {
        I[0] !== i[0] && r();
      });
    }, 0), Ce(l).trigger("buttons-popover.dt"), w.on("destroy", r), setTimeout(function() {
      B = !1, Ce("body").on("click.dtb-collection", function(C) {
        if (!B) {
          var F = Ce.fn.addBack ? "addBack" : "andSelf", m = Ce(C.target).parent()[0];
          (!Ce(C.target).parents()[F]().filter(a).length && !Ce(m).hasClass("dt-buttons") || Ce(C.target).hasClass("dt-button-background")) && r();
        }
      }).on("keyup.dtb-collection", function(C) {
        C.keyCode === 27 && r();
      }).on("keydown.dtb-collection", function(C) {
        var F = Ce("a, button", a), m = document.activeElement;
        C.keyCode === 9 && (F.index(m) === -1 ? (F.first().focus(), C.preventDefault()) : C.shiftKey ? m === F[0] && (F.last().focus(), C.preventDefault()) : m === F.last()[0] && (F.first().focus(), C.preventDefault()));
      });
    }, 0);
  }
});
Jr.background = function(a, p, g, w) {
  g === void 0 && (g = 400), w || (w = document.body), a ? v0(
    Ce("<div/>").addClass(p).css("display", "none").insertAfter(w),
    g
  ) : p0(Ce("div." + p), g, function() {
    Ce(this).removeClass(p).remove();
  });
};
Jr.instanceSelector = function(a, p) {
  if (a == null)
    return Ce.map(p, function(B) {
      return B.inst;
    });
  var g = [], w = Ce.map(p, function(B) {
    return B.name;
  }), L = function(B) {
    if (Array.isArray(B)) {
      for (var f = 0, d = B.length; f < d; f++)
        L(B[f]);
      return;
    }
    if (typeof B == "string")
      if (B.indexOf(",") !== -1)
        L(B.split(","));
      else {
        var t = Ce.inArray(B.trim(), w);
        t !== -1 && g.push(p[t].inst);
      }
    else if (typeof B == "number")
      g.push(p[B].inst);
    else if (typeof B == "object" && B.nodeName)
      for (var i = 0; i < p.length; i++)
        p[i].inst.dom.container[0] === B && g.push(p[i].inst);
    else
      typeof B == "object" && g.push(B);
  };
  return L(a), g;
};
Jr.buttonSelector = function(a, p) {
  for (var g = [], w = function(t, i, r) {
    for (var n, o, h = 0, u = i.length; h < u; h++)
      n = i[h], n && (o = r !== void 0 ? r + h : h + "", t.push({
        node: n.node,
        name: n.conf.name,
        idx: o
      }), n.buttons && w(t, n.buttons, o + "-"));
  }, L = function(t, i) {
    var r, n, o = [];
    w(o, i.s.buttons);
    var h = Ce.map(o, function(v) {
      return v.node;
    });
    if (Array.isArray(t) || t instanceof Ce) {
      for (r = 0, n = t.length; r < n; r++)
        L(t[r], i);
      return;
    }
    if (t == null || t === "*")
      for (r = 0, n = o.length; r < n; r++)
        g.push({
          inst: i,
          node: o[r].node
        });
    else if (typeof t == "number")
      i.s.buttons[t] && g.push({
        inst: i,
        node: i.s.buttons[t].node
      });
    else if (typeof t == "string")
      if (t.indexOf(",") !== -1) {
        var u = t.split(",");
        for (r = 0, n = u.length; r < n; r++)
          L(u[r].trim(), i);
      } else if (t.match(/^\d+(\-\d+)*$/)) {
        var l = Ce.map(o, function(v) {
          return v.idx;
        });
        g.push({
          inst: i,
          node: o[Ce.inArray(t, l)].node
        });
      } else if (t.indexOf(":name") !== -1) {
        var c = t.replace(":name", "");
        for (r = 0, n = o.length; r < n; r++)
          o[r].name === c && g.push({
            inst: i,
            node: o[r].node
          });
      } else
        Ce(h).filter(t).each(function() {
          g.push({
            inst: i,
            node: this
          });
        });
    else if (typeof t == "object" && t.nodeName) {
      var s = Ce.inArray(t, h);
      s !== -1 && g.push({
        inst: i,
        node: h[s]
      });
    }
  }, B = 0, f = a.length; B < f; B++) {
    var d = a[B];
    L(p, d);
  }
  return g;
};
Jr.stripData = function(a, p) {
  return a !== null && typeof a == "object" && a.nodeName && a.nodeType && (a = a.innerHTML), typeof a != "string" || (a = Jr.stripHtmlScript(a), a = Jr.stripHtmlComments(a), (!p || p.stripHtml) && (a = de.util.stripHtml(a)), (!p || p.trim) && (a = a.trim()), (!p || p.stripNewlines) && (a = a.replace(/\n/g, " ")), (!p || p.decodeEntities) && (Xs ? a = Xs(a) : (Bf.innerHTML = a, a = Bf.value)), (!p || p.escapeExcelFormula) && a.match(/^[=+\-@\t\r]/) && (console.log("matching and updateing"), a = "'" + a)), a;
};
Jr.entityDecoder = function(a) {
  Xs = a;
};
Jr.stripHtmlComments = function(a) {
  var p;
  do
    p = a, a = a.replace(/(<!--.*?--!?>)|(<!--[\S\s]+?--!?>)|(<!--[\S\s]*?$)/g, "");
  while (a !== p);
  return a;
};
Jr.stripHtmlScript = function(a) {
  var p;
  do
    p = a, a = a.replace(/<script\b[^<]*(?:(?!<\/script[^>]*>)<[^<]*)*<\/script[^>]*>/gi, "");
  while (a !== p);
  return a;
};
Jr.defaults = {
  buttons: ["copy", "excel", "csv", "pdf", "print"],
  name: "main",
  tabIndex: 0,
  dom: {
    container: {
      tag: "div",
      className: "dt-buttons"
    },
    collection: {
      container: {
        // The element used for the dropdown
        className: "dt-button-collection",
        content: {
          className: "",
          tag: "div"
        },
        tag: "div"
      }
      // optionally
      // , button: IButton - buttons inside the collection container
      // , split: ISplit - splits inside the collection container
    },
    button: {
      tag: "button",
      className: "dt-button",
      active: "dt-button-active",
      // class name
      disabled: "disabled",
      // class name
      spacer: {
        className: "dt-button-spacer",
        tag: "span"
      },
      liner: {
        tag: "span",
        className: ""
      },
      dropClass: "",
      dropHtml: '<span class="dt-button-down-arrow">&#x25BC;</span>'
    },
    split: {
      action: {
        // action button
        className: "dt-button-split-drop-button dt-button",
        tag: "button"
      },
      dropdown: {
        // button to trigger the dropdown
        align: "split-right",
        className: "dt-button-split-drop",
        splitAlignClass: "dt-button-split-left",
        tag: "button"
      },
      wrapper: {
        // wrap around both
        className: "dt-button-split",
        tag: "div"
      }
    }
  }
};
Jr.version = "3.2.2";
Ce.extend(aa, {
  collection: {
    text: function(a) {
      return a.i18n("buttons.collection", "Collection");
    },
    className: "buttons-collection",
    closeButton: !1,
    dropIcon: !0,
    init: function(a, p) {
      p.attr("aria-expanded", !1);
    },
    action: function(a, p, g, w) {
      w._collection.parents("body").length ? this.popover(!1, w) : this.popover(w._collection, w), a.type === "keypress" && Ce("a, button", w._collection).eq(0).focus();
    },
    attr: {
      "aria-haspopup": "dialog"
    }
    // Also the popover options, defined in Buttons.popover
  },
  split: {
    text: function(a) {
      return a.i18n("buttons.split", "Split");
    },
    className: "buttons-split",
    closeButton: !1,
    init: function(a, p) {
      return p.attr("aria-expanded", !1);
    },
    action: function(a, p, g, w) {
      this.popover(w._collection, w);
    },
    attr: {
      "aria-haspopup": "dialog"
    }
    // Also the popover options, defined in Buttons.popover
  },
  copy: function() {
    if (aa.copyHtml5)
      return "copyHtml5";
  },
  csv: function(a, p) {
    if (aa.csvHtml5 && aa.csvHtml5.available(a, p))
      return "csvHtml5";
  },
  excel: function(a, p) {
    if (aa.excelHtml5 && aa.excelHtml5.available(a, p))
      return "excelHtml5";
  },
  pdf: function(a, p) {
    if (aa.pdfHtml5 && aa.pdfHtml5.available(a, p))
      return "pdfHtml5";
  },
  pageLength: function(a) {
    var p = a.settings()[0].aLengthMenu, g = [], w = [], L = function(d) {
      return d.i18n(
        "buttons.pageLength",
        {
          "-1": "Show all rows",
          _: "Show %d rows"
        },
        d.page.len()
      );
    };
    if (Array.isArray(p[0]))
      g = p[0], w = p[1];
    else
      for (var B = 0; B < p.length; B++) {
        var f = p[B];
        Ce.isPlainObject(f) ? (g.push(f.value), w.push(f.label)) : (g.push(f), w.push(f));
      }
    return {
      extend: "collection",
      text: L,
      className: "buttons-page-length",
      autoClose: !0,
      buttons: Ce.map(g, function(d, t) {
        return {
          text: w[t],
          className: "button-page-length",
          action: function(i, r) {
            r.page.len(d).draw();
          },
          init: function(i, r, n) {
            var o = this, h = function() {
              o.active(i.page.len() === d);
            };
            i.on("length.dt" + n.namespace, h), h();
          },
          destroy: function(i, r, n) {
            i.off("length.dt" + n.namespace);
          }
        };
      }),
      init: function(d, t, i) {
        var r = this;
        d.on("length.dt" + i.namespace, function() {
          r.text(i.text);
        });
      },
      destroy: function(d, t, i) {
        d.off("length.dt" + i.namespace);
      }
    };
  },
  spacer: {
    style: "empty",
    spacer: !0,
    text: function(a) {
      return a.i18n("buttons.spacer", "");
    }
  }
});
de.Api.register("buttons()", function(a, p) {
  p === void 0 && (p = a, a = void 0), this.selector.buttonGroup = a;
  var g = this.iterator(
    !0,
    "table",
    function(w) {
      if (w._buttons)
        return Jr.buttonSelector(
          Jr.instanceSelector(a, w._buttons),
          p
        );
    },
    !0
  );
  return g._groupSelector = a, g;
});
de.Api.register("button()", function(a, p) {
  var g = this.buttons(a, p);
  return g.length > 1 && g.splice(1, g.length), g;
});
de.Api.registerPlural(
  "buttons().active()",
  "button().active()",
  function(a) {
    return a === void 0 ? this.map(function(p) {
      return p.inst.active(p.node);
    }) : this.each(function(p) {
      p.inst.active(p.node, a);
    });
  }
);
de.Api.registerPlural(
  "buttons().action()",
  "button().action()",
  function(a) {
    return a === void 0 ? this.map(function(p) {
      return p.inst.action(p.node);
    }) : this.each(function(p) {
      p.inst.action(p.node, a);
    });
  }
);
de.Api.registerPlural(
  "buttons().collectionRebuild()",
  "button().collectionRebuild()",
  function(a) {
    return this.each(function(p) {
      for (var g = 0; g < a.length; g++)
        typeof a[g] == "object" && (a[g].parentConf = p);
      p.inst.collectionRebuild(p.node, a);
    });
  }
);
de.Api.register(
  ["buttons().enable()", "button().enable()"],
  function(a) {
    return this.each(function(p) {
      p.inst.enable(p.node, a);
    });
  }
);
de.Api.register(
  ["buttons().disable()", "button().disable()"],
  function() {
    return this.each(function(a) {
      a.inst.disable(a.node);
    });
  }
);
de.Api.register("button().index()", function() {
  var a = null;
  return this.each(function(p) {
    var g = p.inst.index(p.node);
    g !== null && (a = g);
  }), a;
});
de.Api.registerPlural(
  "buttons().nodes()",
  "button().node()",
  function() {
    var a = Ce();
    return Ce(
      this.each(function(p) {
        a = a.add(p.inst.node(p.node));
      })
    ), a;
  }
);
de.Api.registerPlural(
  "buttons().processing()",
  "button().processing()",
  function(a) {
    return a === void 0 ? this.map(function(p) {
      return p.inst.processing(p.node);
    }) : this.each(function(p) {
      p.inst.processing(p.node, a);
    });
  }
);
de.Api.registerPlural(
  "buttons().text()",
  "button().text()",
  function(a) {
    return a === void 0 ? this.map(function(p) {
      return p.inst.text(p.node);
    }) : this.each(function(p) {
      p.inst.text(p.node, a);
    });
  }
);
de.Api.registerPlural(
  "buttons().trigger()",
  "button().trigger()",
  function() {
    return this.each(function(a) {
      a.inst.node(a.node).trigger("click");
    });
  }
);
de.Api.register("button().popover()", function(a, p) {
  return this.map(function(g) {
    return g.inst._popover(a, this.button(this[0].node), p);
  });
});
de.Api.register("buttons().containers()", function() {
  var a = Ce(), p = this._groupSelector;
  return this.iterator(!0, "table", function(g) {
    if (g._buttons)
      for (var w = Jr.instanceSelector(p, g._buttons), L = 0, B = w.length; L < B; L++)
        a = a.add(w[L].container());
  }), a;
});
de.Api.register("buttons().container()", function() {
  return this.containers().eq(0);
});
de.Api.register("button().add()", function(a, p, g) {
  var w = this.context;
  if (w.length) {
    var L = Jr.instanceSelector(
      this._groupSelector,
      w[0]._buttons
    );
    L.length && L[0].add(p, a, g);
  }
  return this.button(this._groupSelector, a);
});
de.Api.register("buttons().destroy()", function() {
  return this.pluck("inst").unique().each(function(a) {
    a.destroy();
  }), this;
});
de.Api.registerPlural(
  "buttons().remove()",
  "buttons().remove()",
  function() {
    return this.each(function(a) {
      a.inst.remove(a.node);
    }), this;
  }
);
var Yi;
de.Api.register("buttons.info()", function(a, p, g) {
  var w = this;
  return a === !1 ? (this.off("destroy.btn-info"), p0(Ce("#datatables_buttons_info"), 400, function() {
    Ce(this).remove();
  }), clearTimeout(Yi), Yi = null, this) : (Yi && clearTimeout(Yi), Ce("#datatables_buttons_info").length && Ce("#datatables_buttons_info").remove(), a = a ? "<h2>" + a + "</h2>" : "", v0(
    Ce('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a).append(
      Ce("<div/>")[typeof p == "string" ? "html" : "append"](
        p
      )
    ).css("display", "none").appendTo("body")
  ), g !== void 0 && g !== 0 && (Yi = setTimeout(function() {
    w.buttons.info(!1);
  }, g)), this.on("destroy.btn-info", function() {
    w.buttons.info(!1);
  }), this);
});
de.Api.register("buttons.exportData()", function(a) {
  if (this.context.length)
    return I1(new de.Api(this.context[0]), a);
});
de.Api.register("buttons.exportInfo()", function(a) {
  return a || (a = {}), {
    filename: T1(a, this),
    title: F1(a, this),
    messageTop: Of(this, a, a.message || a.messageTop, "top"),
    messageBottom: Of(this, a, a.messageBottom, "bottom")
  };
});
var T1 = function(a, p) {
  var g = a.filename === "*" && a.title !== "*" && a.title !== void 0 && a.title !== null && a.title !== "" ? a.title : a.filename;
  if (typeof g == "function" && (g = g(a, p)), g == null)
    return null;
  g.indexOf("*") !== -1 && (g = g.replace(/\*/g, Ce("head > title").text()).trim()), g = g.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, "");
  var w = g0(a.extension, a, p);
  return w || (w = ""), g + w;
}, g0 = function(a, p, g) {
  return a == null ? null : typeof a == "function" ? a(p, g) : a;
}, F1 = function(a, p) {
  var g = g0(a.title, a, p);
  return g === null ? null : g.indexOf("*") !== -1 ? g.replace(/\*/g, Ce("head > title").text() || "Exported data") : g;
}, Of = function(a, p, g, w) {
  var L = g0(g, p, a);
  if (L === null)
    return null;
  var B = Ce("caption", a.table().container()).eq(0);
  if (L === "*") {
    var f = B.css("caption-side");
    return f !== w ? null : B.length ? B.text() : "";
  }
  return L;
}, Bf = Ce("<textarea/>")[0], I1 = function(a, p) {
  var g = Ce.extend(
    !0,
    {},
    {
      rows: null,
      columns: "",
      modifier: {
        search: "applied",
        order: "applied"
      },
      orthogonal: "display",
      stripHtml: !0,
      stripNewlines: !0,
      decodeEntities: !0,
      escapeExcelFormula: !1,
      trim: !0,
      format: {
        header: function(x) {
          return Jr.stripData(x, g);
        },
        footer: function(x) {
          return Jr.stripData(x, g);
        },
        body: function(x) {
          return Jr.stripData(x, g);
        }
      },
      customizeData: null,
      customizeZip: null
    },
    p
  ), w = a.columns(g.columns).indexes().map(function(x) {
    var e = a.column(x);
    return g.format.header(e.title(), x, e.header());
  }).toArray(), L = a.table().footer() ? a.columns(g.columns).indexes().map(function(x) {
    var e = a.column(x).footer(), b = "";
    if (e) {
      var A = Ce(".dt-column-title", e);
      b = A.length ? A.html() : Ce(e).html();
    }
    return g.format.footer(b, x, e);
  }).toArray() : null, B = Ce.extend({}, g.modifier);
  a.select && typeof a.select.info == "function" && B.selected === void 0 && a.rows(g.rows, Ce.extend({ selected: !0 }, B)).any() && Ce.extend(B, { selected: !0 });
  for (var f = a.rows(g.rows, B).indexes().toArray(), d = a.cells(f, g.columns, {
    order: B.order
  }), t = d.render(g.orthogonal).toArray(), i = d.nodes().toArray(), r = d.indexes().toArray(), n = a.columns(g.columns).count(), o = n > 0 ? t.length / n : 0, h = [], u = 0, l = 0, c = o; l < c; l++) {
    for (var s = [n], v = 0; v < n; v++)
      s[v] = g.format.body(
        t[u],
        r[u].row,
        r[u].column,
        i[u]
      ), u++;
    h[l] = s;
  }
  var y = {
    header: w,
    headerStructure: Rf(
      g.format.header,
      a.table().header.structure(g.columns)
    ),
    footer: L,
    footerStructure: Rf(
      g.format.footer,
      a.table().footer.structure(g.columns)
    ),
    body: h
  };
  return g.customizeData && g.customizeData(y), y;
};
function Rf(a, p) {
  for (var g = 0; g < p.length; g++)
    for (var w = 0; w < p[g].length; w++) {
      var L = p[g][w];
      L && (L.title = a(
        L.title,
        w,
        L.cell
      ));
    }
  return p;
}
Ce.fn.dataTable.Buttons = Jr;
Ce.fn.DataTable.Buttons = Jr;
Ce(document).on("init.dt plugin-init.dt", function(a, p) {
  if (a.namespace === "dt") {
    var g = p.oInit.buttons || de.defaults.buttons;
    g && !p._buttons && new Jr(p, g).container();
  }
});
function vl(a, p) {
  var g = new de.Api(a), w = p || g.init().buttons || de.defaults.buttons;
  return new Jr(g, w).container();
}
de.ext.feature.push({
  fnInit: vl,
  cFeature: "B"
});
de.feature && de.feature.register("buttons", vl);
/*!
 * Column visibility buttons for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
let D1 = Wn;
D1.extend(de.ext.buttons, {
  // A collection of column visibility buttons
  colvis: function(a, p) {
    var g = null, w = {
      extend: "collection",
      init: function(L, B) {
        g = B;
      },
      text: function(L) {
        return L.i18n("buttons.colvis", "Column visibility");
      },
      className: "buttons-colvis",
      closeButton: !1,
      buttons: [
        {
          extend: "columnsToggle",
          columns: p.columns,
          columnText: p.columnText
        }
      ]
    };
    return a.on("column-reorder.dt" + p.namespace, function() {
      a.button(null, a.button(null, g).node()).collectionRebuild([
        {
          extend: "columnsToggle",
          columns: p.columns,
          columnText: p.columnText
        }
      ]);
    }), w;
  },
  // Selected columns with individual buttons - toggle column visibility
  columnsToggle: function(a, p) {
    var g = a.columns(p.columns).indexes().map(function(w) {
      return {
        extend: "columnToggle",
        columns: w,
        columnText: p.columnText
      };
    }).toArray();
    return g;
  },
  // Single button to toggle column visibility
  columnToggle: function(a, p) {
    return {
      extend: "columnVisibility",
      columns: p.columns,
      columnText: p.columnText
    };
  },
  // Selected columns with individual buttons - set column visibility
  columnsVisibility: function(a, p) {
    var g = a.columns(p.columns).indexes().map(function(w) {
      return {
        extend: "columnVisibility",
        columns: w,
        visibility: p.visibility,
        columnText: p.columnText
      };
    }).toArray();
    return g;
  },
  // Single button to set column visibility
  columnVisibility: {
    columns: void 0,
    // column selector
    text: function(a, p, g) {
      return g._columnText(a, g);
    },
    className: "buttons-columnVisibility",
    action: function(a, p, g, w) {
      var L = p.columns(w.columns), B = L.visible();
      L.visible(
        w.visibility !== void 0 ? w.visibility : !(B.length && B[0])
      );
    },
    init: function(a, p, g) {
      var w = this;
      p.attr("data-cv-idx", g.columns), a.on("column-visibility.dt" + g.namespace, function(L, B) {
        !B.bDestroying && B.nTable == a.settings()[0].nTable && w.active(a.column(g.columns).visible());
      }).on("column-reorder.dt" + g.namespace, function() {
        g.destroying || a.columns(g.columns).count() === 1 && (w.text(g._columnText(a, g)), w.active(a.column(g.columns).visible()));
      }), this.active(a.column(g.columns).visible());
    },
    destroy: function(a, p, g) {
      a.off("column-visibility.dt" + g.namespace).off(
        "column-reorder.dt" + g.namespace
      );
    },
    _columnText: function(a, p) {
      if (typeof p.text == "string")
        return p.text;
      var g = a.column(p.columns).title(), w = a.column(p.columns).index();
      return g = g.replace(/\n/g, " ").replace(/<br\s*\/?>/gi, " ").replace(/<select(.*?)<\/select\s*>/gi, ""), g = de.Buttons.stripHtmlComments(g), g = de.util.stripHtml(g).trim(), p.columnText ? p.columnText(a, w, g) : g;
    }
  },
  colvisRestore: {
    className: "buttons-colvisRestore",
    text: function(a) {
      return a.i18n("buttons.colvisRestore", "Restore visibility");
    },
    init: function(a, p, g) {
      a.columns().every(function() {
        var w = this.init();
        w.__visOriginal === void 0 && (w.__visOriginal = this.visible());
      });
    },
    action: function(a, p, g, w) {
      p.columns().every(function(L) {
        var B = this.init();
        this.visible(B.__visOriginal);
      });
    }
  },
  colvisGroup: {
    className: "buttons-colvisGroup",
    action: function(a, p, g, w) {
      p.columns(w.show).visible(!0, !1), p.columns(w.hide).visible(!1, !1), p.columns.adjust();
    },
    show: [],
    hide: []
  }
});
/*!
 * HTML5 export buttons for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 *
 * FileSaver.js (1.3.3) - MIT license
 * Copyright Â© 2016 Eli Grey - http://eligrey.com
 */
let bn = Wn;
var pl, gl;
function Zs() {
  return pl || window.JSZip;
}
function Ys() {
  return gl || window.pdfMake;
}
de.Buttons.pdfMake = function(a) {
  if (!a)
    return Ys();
  gl = a;
};
de.Buttons.jszip = function(a) {
  if (!a)
    return Zs();
  pl = a;
};
var Qo = function(a) {
  if (!(typeof a == "undefined" || typeof navigator != "undefined" && /MSIE [1-9]\./.test(navigator.userAgent))) {
    var p = a.document, g = function() {
      return a.URL || a.webkitURL || a;
    }, w = p.createElementNS("http://www.w3.org/1999/xhtml", "a"), L = "download" in w, B = function(s) {
      var v = new MouseEvent("click");
      s.dispatchEvent(v);
    }, f = /constructor/i.test(a.HTMLElement) || a.safari, d = /CriOS\/[\d]+/.test(navigator.userAgent), t = function(s) {
      (a.setImmediate || a.setTimeout)(function() {
        throw s;
      }, 0);
    }, i = "application/octet-stream", r = 1e3 * 40, n = function(s) {
      var v = function() {
        typeof s == "string" ? g().revokeObjectURL(s) : s.remove();
      };
      setTimeout(v, r);
    }, o = function(s, v, y) {
      v = [].concat(v);
      for (var x = v.length; x--; ) {
        var e = s["on" + v[x]];
        if (typeof e == "function")
          try {
            e.call(s, y || s);
          } catch (b) {
            t(b);
          }
      }
    }, h = function(s) {
      return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
        s.type
      ) ? new Blob([String.fromCharCode(65279), s], {
        type: s.type
      }) : s;
    }, u = function(s, v, y) {
      y || (s = h(s));
      var x = this, e = s.type, b = e === i, A, P = function() {
        o(
          x,
          "writestart progress write writeend".split(" ")
        );
      }, D = function() {
        if ((d || b && f) && a.FileReader) {
          var E = new FileReader();
          E.onloadend = function() {
            var C = d ? E.result : E.result.replace(
              /^data:[^;]*;/,
              "data:attachment/file;"
            ), F = a.open(C, "_blank");
            F || (a.location.href = C), C = void 0, x.readyState = x.DONE, P();
          }, E.readAsDataURL(s), x.readyState = x.INIT;
          return;
        }
        if (A || (A = g().createObjectURL(s)), b)
          a.location.href = A;
        else {
          var T = a.open(A, "_blank");
          T || (a.location.href = A);
        }
        x.readyState = x.DONE, P(), n(A);
      };
      if (x.readyState = x.INIT, L) {
        A = g().createObjectURL(s), setTimeout(function() {
          w.href = A, w.download = v, B(w), P(), n(A), x.readyState = x.DONE;
        });
        return;
      }
      D();
    }, l = u.prototype, c = function(s, v, y) {
      return new u(
        s,
        v || s.name || "download",
        y
      );
    };
    return typeof navigator != "undefined" && navigator.msSaveOrOpenBlob ? function(s, v, y) {
      return v = v || s.name || "download", y || (s = h(s)), navigator.msSaveOrOpenBlob(s, v);
    } : (l.abort = function() {
    }, l.readyState = l.INIT = 0, l.WRITING = 1, l.DONE = 2, l.error = l.onwritestart = l.onprogress = l.onwrite = l.onabort = l.onerror = l.onwriteend = null, c);
  }
}(
  typeof self != "undefined" && self || typeof window != "undefined" && window || globalThis.content
);
de.fileSave = Qo;
var Lf = function(a) {
  var p = "Sheet1";
  return a.sheetName && (p = a.sheetName.replace(/[\[\]\*\/\\\?\:]/g, "")), p;
}, ml = function(a) {
  return a.newline ? a.newline : navigator.userAgent.match(/Windows/) ? `\r
` : `
`;
}, yl = function(a, p) {
  var g = ml(p), w = a.buttons.exportData(p.exportOptions), L = p.fieldBoundary, B = p.fieldSeparator, f = new RegExp(L, "g"), d = p.escapeChar !== void 0 ? p.escapeChar : "\\", t = function(u) {
    for (var l = "", c = 0, s = u.length; c < s; c++)
      c > 0 && (l += B), l += L ? L + ("" + u[c]).replace(f, d + L) + L : u[c];
    return l;
  }, i = "", r = "", n = [];
  p.header && (i = w.headerStructure.map(function(u) {
    return t(
      u.map(function(l) {
        return l ? l.title : "";
      })
    );
  }).join(g) + g), p.footer && w.footer && (r = w.footerStructure.map(function(u) {
    return t(
      u.map(function(l) {
        return l ? l.title : "";
      })
    );
  }).join(g) + g);
  for (var o = 0, h = w.body.length; o < h; o++)
    n.push(t(w.body[o]));
  return {
    str: i + n.join(g) + g + r,
    rows: n.length
  };
}, xl = function() {
  var a = navigator.userAgent.indexOf("Safari") !== -1 && navigator.userAgent.indexOf("Chrome") === -1 && navigator.userAgent.indexOf("Opera") === -1;
  if (!a)
    return !1;
  var p = navigator.userAgent.match(/AppleWebKit\/(\d+\.\d+)/);
  return !!(p && p.length > 1 && p[1] * 1 < 603.1);
};
function Ji(a) {
  for (var p = "A".charCodeAt(0), g = "Z".charCodeAt(0), w = g - p + 1, L = ""; a >= 0; )
    L = String.fromCharCode(a % w + p) + L, a = Math.floor(a / w) - 1;
  return L;
}
try {
  var Ks = new XMLSerializer(), Uo;
} catch (a) {
}
function bl(a, p) {
  Uo === void 0 && (Uo = Ks.serializeToString(
    new window.DOMParser().parseFromString(
      wl["xl/worksheets/sheet1.xml"],
      "text/xml"
    )
  ).indexOf("xmlns:r") === -1), bn.each(p, function(g, w) {
    if (bn.isPlainObject(w)) {
      var L = a.folder(g);
      bl(L, w);
    } else {
      if (Uo) {
        var B = w.childNodes[0], f, d, t = [];
        for (f = B.attributes.length - 1; f >= 0; f--) {
          var i = B.attributes[f].nodeName, r = B.attributes[f].nodeValue;
          i.indexOf(":") !== -1 && (t.push({ name: i, value: r }), B.removeAttribute(i));
        }
        for (f = 0, d = t.length; f < d; f++) {
          var n = w.createAttribute(
            t[f].name.replace(":", "_dt_b_namespace_token_")
          );
          n.value = t[f].value, B.setAttributeNode(n);
        }
      }
      var o = Ks.serializeToString(w);
      Uo && (o.indexOf("<?xml") === -1 && (o = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' + o), o = o.replace(/_dt_b_namespace_token_/g, ":"), o = o.replace(/xmlns:NS[\d]+="" NS[\d]+:/g, "")), o = o.replace(/<([^<>]*?) xmlns=""([^<>]*?)>/g, "<$1 $2>"), a.file(g, o);
    }
  });
}
function ra(a, p, g) {
  var w = a.createElement(p);
  return g && (g.attr && bn(w).attr(g.attr), g.children && bn.each(g.children, function(L, B) {
    w.appendChild(B);
  }), g.text !== null && g.text !== void 0 && w.appendChild(a.createTextNode(g.text))), w;
}
function P1(a, p) {
  var g = a.header[p].length, w, L, B;
  a.footer && a.footer[p] && a.footer[p].length > g && (g = a.footer[p].length);
  for (var f = 0, d = a.body.length; f < d; f++) {
    var t = a.body[f][p];
    if (B = t != null ? t.toString() : "", B.indexOf(`
`) !== -1 ? (L = B.split(`
`), L.sort(function(i, r) {
      return r.length - i.length;
    }), w = L[0].length) : w = B.length, w > g && (g = w), g > 40)
      return 54;
  }
  return g *= 1.35, g > 6 ? g : 6;
}
var wl = {
  "_rels/.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',
  "xl/_rels/workbook.xml.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',
  "[Content_Types].xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
  "xl/workbook.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="Sheet1" sheetId="1" r:id="rId1"/></sheets><definedNames/></workbook>',
  "xl/worksheets/sheet1.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/><mergeCells count="0"/></worksheet>',
  "xl/styles.xml": '<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><numFmts count="6"><numFmt numFmtId="164" formatCode="[$$-409]#,##0.00;-[$$-409]#,##0.00"/><numFmt numFmtId="165" formatCode="&quot;Â£&quot;#,##0.00"/><numFmt numFmtId="166" formatCode="[$â¬-2] #,##0.00"/><numFmt numFmtId="167" formatCode="0.0%"/><numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/><numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/></numFmts><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="68"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf><xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="14" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'
}, Nf = [
  {
    match: /^\-?\d+\.\d%$/,
    style: 60,
    fmt: function(a) {
      return a / 100;
    }
  },
  // Percent with d.p.
  {
    match: /^\-?\d+\.?\d*%$/,
    style: 56,
    fmt: function(a) {
      return a / 100;
    }
  },
  // Percent
  { match: /^\-?\$[\d,]+.?\d*$/, style: 57 },
  // Dollars
  { match: /^\-?Â£[\d,]+.?\d*$/, style: 58 },
  // Pounds
  { match: /^\-?â¬[\d,]+.?\d*$/, style: 59 },
  // Euros
  { match: /^\-?\d+$/, style: 65 },
  // Numbers without thousand separators
  { match: /^\-?\d+\.\d{2}$/, style: 66 },
  // Numbers 2 d.p. without thousands separators
  {
    match: /^\([\d,]+\)$/,
    style: 61,
    fmt: function(a) {
      return -1 * a.replace(/[\(\)]/g, "");
    }
  },
  // Negative numbers indicated by brackets
  {
    match: /^\([\d,]+\.\d{2}\)$/,
    style: 62,
    fmt: function(a) {
      return -1 * a.replace(/[\(\)]/g, "");
    }
  },
  // Negative numbers indicated by brackets - 2d.p.
  { match: /^\-?[\d,]+$/, style: 63 },
  // Numbers with thousand separators
  { match: /^\-?[\d,]+\.\d{2}$/, style: 64 },
  {
    match: /^(19\d\d|[2-9]\d\d\d)\-(0\d|1[012])\-[0123][\d]$/,
    style: 67,
    fmt: function(a) {
      return Math.round(25569 + Date.parse(a) / (86400 * 1e3));
    }
  }
  //Date yyyy-mm-dd
], zo = function(a, p, g, w, L) {
  var B = bn("mergeCells", a);
  B[0].appendChild(
    ra(a, "mergeCell", {
      attr: {
        ref: Ji(g) + p + ":" + Ji(g + L - 1) + (p + w - 1)
      }
    })
  ), B.attr("count", parseFloat(B.attr("count")) + 1);
};
de.ext.buttons.copyHtml5 = {
  className: "buttons-copy buttons-html5",
  text: function(a) {
    return a.i18n("buttons.copy", "Copy");
  },
  action: function(a, p, g, w, L) {
    var B = yl(p, w), f = p.buttons.exportInfo(w), d = ml(w), t = B.str, i = bn("<div/>").css({
      height: 1,
      width: 1,
      overflow: "hidden",
      position: "fixed",
      top: 0,
      left: 0
    });
    f.title && (t = f.title + d + d + t), f.messageTop && (t = f.messageTop + d + d + t), f.messageBottom && (t = t + d + d + f.messageBottom), w.customize && (t = w.customize(t, w, p));
    var r = bn("<textarea readonly/>").val(t).appendTo(i);
    if (document.queryCommandSupported("copy")) {
      i.appendTo(p.table().container()), r[0].focus(), r[0].select();
      try {
        var n = document.execCommand("copy");
        if (i.remove(), n) {
          w.copySuccess && p.buttons.info(
            p.i18n("buttons.copyTitle", "Copy to clipboard"),
            p.i18n(
              "buttons.copySuccess",
              {
                1: "Copied one row to clipboard",
                _: "Copied %d rows to clipboard"
              },
              B.rows
            ),
            2e3
          ), L();
          return;
        }
      } catch (l) {
      }
    }
    var o = bn(
      "<span>" + p.i18n(
        "buttons.copyKeys",
        "Press <i>ctrl</i> or <i>â</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape."
      ) + "</span>"
    ).append(i);
    p.buttons.info(
      p.i18n("buttons.copyTitle", "Copy to clipboard"),
      o,
      0
    ), r[0].focus(), r[0].select();
    var h = bn(o).closest(".dt-button-info"), u = function() {
      h.off("click.buttons-copy"), bn(document).off(".buttons-copy"), p.buttons.info(!1);
    };
    h.on("click.buttons-copy", function() {
      u(), L();
    }), bn(document).on("keydown.buttons-copy", function(l) {
      l.keyCode === 27 && (u(), L());
    }).on("copy.buttons-copy cut.buttons-copy", function() {
      u(), L();
    });
  },
  async: 100,
  copySuccess: !0,
  exportOptions: {},
  fieldSeparator: "	",
  fieldBoundary: "",
  header: !0,
  footer: !0,
  title: "*",
  messageTop: "*",
  messageBottom: "*"
};
de.ext.buttons.csvHtml5 = {
  bom: !1,
  className: "buttons-csv buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && window.Blob;
  },
  text: function(a) {
    return a.i18n("buttons.csv", "CSV");
  },
  action: function(a, p, g, w, L) {
    var B = yl(p, w).str, f = p.buttons.exportInfo(w), d = w.charset;
    w.customize && (B = w.customize(B, w, p)), d !== !1 ? (d || (d = document.characterSet || document.charset), d && (d = ";charset=" + d)) : d = "", w.bom && (B = String.fromCharCode(65279) + B), Qo(
      new Blob([B], { type: "text/csv" + d }),
      f.filename,
      !0
    ), L();
  },
  async: 100,
  filename: "*",
  extension: ".csv",
  exportOptions: {
    escapeExcelFormula: !0
  },
  fieldSeparator: ",",
  fieldBoundary: '"',
  escapeChar: '"',
  charset: null,
  header: !0,
  footer: !0
};
de.ext.buttons.excelHtml5 = {
  className: "buttons-excel buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && Zs() !== void 0 && !xl() && Ks;
  },
  text: function(a) {
    return a.i18n("buttons.excel", "Excel");
  },
  action: function(a, p, g, w, L) {
    var B = 0, f, d, t = function(C) {
      var F = wl[C];
      return bn.parseXML(F);
    }, i = t("xl/worksheets/sheet1.xml"), r = i.getElementsByTagName("sheetData")[0], n = {
      _rels: {
        ".rels": t("_rels/.rels")
      },
      xl: {
        _rels: {
          "workbook.xml.rels": t("xl/_rels/workbook.xml.rels")
        },
        "workbook.xml": t("xl/workbook.xml"),
        "styles.xml": t("xl/styles.xml"),
        worksheets: {
          "sheet1.xml": i
        }
      },
      "[Content_Types].xml": t("[Content_Types].xml")
    }, o = p.buttons.exportData(w.exportOptions), h, u, l = function(C) {
      h = B + 1, u = ra(i, "row", { attr: { r: h } });
      for (var F = 0, m = C.length; F < m; F++) {
        var I = Ji(F) + "" + h, O = null;
        if (C[F] === null || C[F] === void 0 || C[F] === "")
          if (w.createEmptyCells === !0)
            C[F] = "";
          else
            continue;
        var M = C[F];
        C[F] = typeof C[F].trim == "function" ? C[F].trim() : C[F];
        for (var N = 0, G = Nf.length; N < G; N++) {
          var ot = Nf[N];
          if (C[F].match && !C[F].match(/^0\d+/) && C[F].match(ot.match)) {
            var K = C[F].replace(/[^\d\.\-]/g, "");
            ot.fmt && (K = ot.fmt(K)), O = ra(i, "c", {
              attr: {
                r: I,
                s: ot.style
              },
              children: [ra(i, "v", { text: K })]
            });
            break;
          }
        }
        if (!O)
          if (typeof C[F] == "number" || C[F].match && C[F].match(/^-?\d+(\.\d+)?([eE]\-?\d+)?$/) && // Includes exponential format
          !C[F].match(/^0\d+/))
            O = ra(i, "c", {
              attr: {
                t: "n",
                r: I
              },
              children: [ra(i, "v", { text: C[F] })]
            });
          else {
            var nt = M.replace ? M.replace(
              /[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g,
              ""
            ) : M;
            O = ra(i, "c", {
              attr: {
                t: "inlineStr",
                r: I
              },
              children: {
                row: ra(i, "is", {
                  children: {
                    row: ra(i, "t", {
                      text: nt,
                      attr: {
                        "xml:space": "preserve"
                      }
                    })
                  }
                })
              }
            });
          }
        u.appendChild(O);
      }
      r.appendChild(u), B++;
    }, c = function(C) {
      C.forEach(function(F) {
        l(
          F.map(function(m) {
            return m ? m.title : "";
          })
        ), bn("row:last c", i).attr("s", "2"), F.forEach(function(m, I) {
          m && (m.colSpan > 1 || m.rowSpan > 1) && zo(
            i,
            B,
            I,
            m.rowSpan,
            m.colSpan
          );
        });
      });
    }, s = p.buttons.exportInfo(w);
    s.title && (l([s.title]), zo(i, B, 0, 1, o.header.length), bn("row:last c", i).attr("s", "51")), s.messageTop && (l([s.messageTop]), zo(i, B, 0, 1, o.header.length)), w.header && c(o.headerStructure), f = B;
    for (var v = 0, y = o.body.length; v < y; v++)
      l(o.body[v]);
    d = B, w.footer && o.footer && c(o.footerStructure), s.messageBottom && (l([s.messageBottom]), zo(i, B, 0, 1, o.header.length));
    var x = ra(i, "cols");
    bn("worksheet", i).prepend(x);
    for (var e = 0, b = o.header.length; e < b; e++)
      x.appendChild(
        ra(i, "col", {
          attr: {
            min: e + 1,
            max: e + 1,
            width: P1(o, e),
            customWidth: 1
          }
        })
      );
    var A = n.xl["workbook.xml"];
    bn("sheets sheet", A).attr("name", Lf(w)), w.autoFilter && (bn("mergeCells", i).before(
      ra(i, "autoFilter", {
        attr: {
          ref: "A" + f + ":" + Ji(o.header.length - 1) + d
        }
      })
    ), bn("definedNames", A).append(
      ra(A, "definedName", {
        attr: {
          name: "_xlnm._FilterDatabase",
          localSheetId: "0",
          hidden: 1
        },
        text: "'" + Lf(w).replace(/'/g, "''") + "'!$A$" + f + ":" + Ji(o.header.length - 1) + d
      })
    )), w.customize && w.customize(n, w, p), bn("mergeCells", i).children().length === 0 && bn("mergeCells", i).remove();
    var P = Zs(), D = new P(), E = {
      compression: "DEFLATE",
      type: "blob",
      mimeType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    };
    bl(D, n);
    var T = s.filename;
    T > 175 && (T = T.substr(0, 175)), w.customizeZip && w.customizeZip(D, o, T), D.generateAsync ? D.generateAsync(E).then(function(C) {
      Qo(C, T), L();
    }) : (Qo(D.generate(E), T), L());
  },
  async: 100,
  filename: "*",
  extension: ".xlsx",
  exportOptions: {},
  header: !0,
  footer: !0,
  title: "*",
  messageTop: "*",
  messageBottom: "*",
  createEmptyCells: !1,
  autoFilter: !1,
  sheetName: ""
};
de.ext.buttons.pdfHtml5 = {
  className: "buttons-pdf buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && Ys();
  },
  text: function(a) {
    return a.i18n("buttons.pdf", "PDF");
  },
  action: function(a, p, g, w, L) {
    var B = p.buttons.exportData(w.exportOptions), f = p.buttons.exportInfo(w), d = [];
    w.header && B.headerStructure.forEach(function(o) {
      d.push(
        o.map(function(h) {
          return h ? {
            text: h.title,
            colSpan: h.colspan,
            rowSpan: h.rowspan,
            style: "tableHeader"
          } : {};
        })
      );
    });
    for (var t = 0, i = B.body.length; t < i; t++)
      d.push(
        B.body[t].map(function(o) {
          return {
            text: o == null ? "" : typeof o == "string" ? o : o.toString()
          };
        })
      );
    w.footer && B.footerStructure.forEach(function(o) {
      d.push(
        o.map(function(h) {
          return h ? {
            text: h.title,
            colSpan: h.colspan,
            rowSpan: h.rowspan,
            style: "tableFooter"
          } : {};
        })
      );
    });
    var r = {
      pageSize: w.pageSize,
      pageOrientation: w.orientation,
      content: [
        {
          style: "table",
          table: {
            headerRows: B.headerStructure.length,
            footerRows: B.footerStructure.length,
            // Used for styling, doesn't do anything in pdfmake
            body: d
          },
          layout: {
            hLineWidth: function(o, h) {
              return o === 0 || o === h.table.body.length ? 0 : 0.5;
            },
            vLineWidth: function() {
              return 0;
            },
            hLineColor: function(o, h) {
              return o === h.table.headerRows || o === h.table.body.length - h.table.footerRows ? "#333" : "#ddd";
            },
            fillColor: function(o) {
              return o < B.headerStructure.length ? "#fff" : o % 2 === 0 ? "#f3f3f3" : null;
            },
            paddingTop: function() {
              return 5;
            },
            paddingBottom: function() {
              return 5;
            }
          }
        }
      ],
      styles: {
        tableHeader: {
          bold: !0,
          fontSize: 11,
          alignment: "center"
        },
        tableFooter: {
          bold: !0,
          fontSize: 11,
          alignment: "center"
        },
        table: {
          margin: [0, 5, 0, 5]
        },
        title: {
          alignment: "center",
          fontSize: 13
        },
        message: {}
      },
      defaultStyle: {
        fontSize: 10
      }
    };
    f.messageTop && r.content.unshift({
      text: f.messageTop,
      style: "message",
      margin: [0, 0, 0, 12]
    }), f.messageBottom && r.content.push({
      text: f.messageBottom,
      style: "message",
      margin: [0, 0, 0, 12]
    }), f.title && r.content.unshift({
      text: f.title,
      style: "title",
      margin: [0, 0, 0, 12]
    }), w.customize && w.customize(r, w, p);
    var n = Ys().createPdf(r);
    w.download === "open" && !xl() ? n.open() : n.download(f.filename), L();
  },
  async: 100,
  title: "*",
  filename: "*",
  extension: ".pdf",
  exportOptions: {},
  orientation: "portrait",
  // This isn't perfect, but it is close
  pageSize: navigator.language === "en-US" || navigator.language === "en-CA" ? "LETTER" : "A4",
  header: !0,
  footer: !0,
  messageTop: "*",
  messageBottom: "*",
  customize: null,
  download: "download"
};
/*!
 * Print button for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
let ui = Wn;
var fi = document.createElement("a"), O1 = function(a) {
  var p = ui(a).clone()[0];
  return p.nodeName.toLowerCase() === "link" && (p.href = Al(p.href)), p.outerHTML;
}, Al = function(a) {
  fi.href = a;
  var p = fi.host;
  return p.indexOf("/") === -1 && fi.pathname.indexOf("/") !== 0 && (p += "/"), fi.protocol + "//" + p + fi.pathname + fi.search;
};
de.ext.buttons.print = {
  className: "buttons-print",
  text: function(a) {
    return a.i18n("buttons.print", "Print");
  },
  action: function(a, p, g, w, L) {
    var B = p.buttons.exportData(
      ui.extend({ decodeEntities: !1 }, w.exportOptions)
      // XSS protection
    ), f = p.buttons.exportInfo(w), d = p.columns(w.exportOptions.columns).nodes().map(function(s) {
      return s.className;
    }).toArray(), t = function(s, v) {
      for (var y = "<tr>", x = 0, e = s.length; x < e; x++) {
        var b = s[x] === null || s[x] === void 0 ? "" : s[x], A = d[x] ? 'class="' + d[x] + '"' : "";
        y += "<" + v + " " + A + ">" + b + "</" + v + ">";
      }
      return y + "</tr>";
    }, i = '<table class="' + p.table().node().className + '">';
    if (w.header) {
      var r = B.headerStructure.map(function(s) {
        return "<tr>" + s.map(function(v) {
          return v ? '<th colspan="' + v.colspan + '" rowspan="' + v.rowspan + '">' + v.title + "</th>" : "";
        }).join("") + "</tr>";
      });
      i += "<thead>" + r.join("") + "</thead>";
    }
    i += "<tbody>";
    for (var n = 0, o = B.body.length; n < o; n++)
      i += t(B.body[n], "td");
    if (i += "</tbody>", w.footer && B.footer) {
      var h = B.footerStructure.map(function(s) {
        return "<tr>" + s.map(function(v) {
          return v ? '<th colspan="' + v.colspan + '" rowspan="' + v.rowspan + '">' + v.title + "</th>" : "";
        }).join("") + "</tr>";
      });
      i += "<tfoot>" + h.join("") + "</tfoot>";
    }
    i += "</table>";
    var u = window.open("", "");
    if (!u) {
      p.buttons.info(
        p.i18n("buttons.printErrorTitle", "Unable to open print view"),
        p.i18n(
          "buttons.printErrorMsg",
          "Please allow popups in your browser for this site to be able to view the print view."
        ),
        5e3
      );
      return;
    }
    u.document.close();
    var l = "<title>" + f.title + "</title>";
    ui("style, link").each(function() {
      l += O1(this);
    });
    try {
      u.document.head.innerHTML = l;
    } catch (s) {
      ui(u.document.head).html(l);
    }
    w.customScripts && w.customScripts.forEach(function(s) {
      var v = u.document.createElement("script");
      v.src = s, u.document.getElementsByTagName("head")[0].appendChild(v);
    }), u.document.body.innerHTML = "<h1>" + f.title + "</h1><div>" + (f.messageTop || "") + "</div>" + i + "<div>" + (f.messageBottom || "") + "</div>", ui(u.document.body).addClass("dt-print-view"), ui("img", u.document.body).each(function(s, v) {
      v.setAttribute("src", Al(v.getAttribute("src")));
    }), w.customize && w.customize(u, w, p);
    var c = function() {
      w.autoPrint && (u.print(), u.close());
    };
    u.setTimeout(c, 1e3), L();
  },
  async: 100,
  title: "*",
  messageTop: "*",
  messageBottom: "*",
  exportOptions: {},
  header: !0,
  footer: !0,
  autoPrint: !0,
  customize: null
};
class Mf extends Error {
  constructor(p) {
    super(`Configuration Error : ${p}`), this.name = "ConfigError", this.stack = new Error().stack;
  }
}
class B1 {
  constructor() {
    mr(this, "instance");
    mr(this, "initEvent", (p) => new CustomEvent("datatable:init", {
      detail: p
    }));
  }
  validateConfig(p) {
    var g;
    if (!p)
      throw new Mf("Object not found");
    if (!p.data && !((g = p.lxConfig) != null && g.url))
      throw new Mf("You must provide data source or an URL");
    if (p.lxConfig && p.lxConfig.row_action) {
      if (!p.lxConfig.row_action.width)
        throw new Error("Param width is missing from row_action");
      if (!p.lxConfig.row_action.actions)
        throw new Error("Param actions is missing from row_action");
      if (!Array.isArray(p.lxConfig.row_action.actions))
        throw new TypeError("Param actions must be of type Array");
    }
    return p;
  }
  _splitConfig(p) {
    let g = null, w = null;
    return "lxConfig" in p && (g = p.lxConfig, delete p.lxConfig), w = p, { standardConfig: w, lxConfig: g };
  }
}
var Ki = /* @__PURE__ */ ((a) => (a.NONE = "NONE", a))(Ki || {});
class R1 {
  constructor(p) {
    mr(this, "config");
    mr(this, "headersGroup");
    mr(this, "cols");
    mr(this, "groupByHeadersGroup", (p) => {
      var w;
      const g = {};
      for (let L = 0; L < p.length; L++) {
        const B = p[L], f = (w = B.headerGroup) != null ? w : `NONE_${L}`;
        g[f] = B.columns;
      }
      return g;
    });
    mr(this, "getColumns", () => this.cols);
    mr(this, "getGroupHeaders", () => this.headersGroup);
    mr(this, "getConfig", () => this.config);
    this.config = p, this.headersGroup = [], this.cols = [];
  }
  setColsDef(p) {
    return this.config = p, this;
  }
  generate() {
    var p;
    return !this.config || !((p = this.config) != null && p.headers) ? this : (this.headersGroup = this.generateHeadersGroup(this.config.headers), this);
  }
  generateHeadersGroup(p) {
    const g = /* @__PURE__ */ new Set();
    return p.map((w) => {
      w.headerGroup && g.add(w.headerGroup), w.columns.forEach((L) => this.cols.push(L));
    }), Array.from(g);
  }
}
var na, qa;
class L1 {
  constructor(p) {
    ta(this, na, void 0);
    ta(this, qa, []);
    Rn(this, na, p);
  }
  get value() {
    return un(this, na);
  }
  set value(p) {
    Rn(this, na, p);
  }
  getState(p) {
    return p != null ? un(this, na)[p] : un(this, na);
  }
  setState(p) {
    return p instanceof Function ? Rn(this, na, p(un(this, na))) : Rn(this, na, p), un(this, qa).forEach((g) => g(un(this, na))), un(this, na);
  }
  subscribe(p) {
    return un(this, qa).push(p), () => {
      Rn(this, qa, un(this, qa).filter((g) => g !== p));
    };
  }
}
na = new WeakMap(), qa = new WeakMap();
class Sl extends Error {
  constructor(p) {
    super(`Data Acquisition Error : ${p}`), this.name = "DaoError", this.stack = new Error().stack;
  }
}
class N1 {
  constructor() {
    mr(this, "state");
    this.state = new L1({
      loading: !1,
      error: null,
      data: null
    });
  }
  fetchData(p) {
    return ea(this, null, function* () {
      if (!p)
        throw new Sl("you must provide data or an URL");
      this.state.setState((g) => (g.loading = !1, g));
      try {
        if (!p)
          throw new Error("Error : Url is not defined");
        const g = yield fetch(p);
        if (g.ok) {
          const w = yield g.json();
          this.state.setState((L) => (L.data = w, L));
        } else
          this.state.setState((w) => (w.error = new Error(
            `Error during fetch => Status : ${g.status}`
          ), w));
      } catch (g) {
        process.env.NODE_ENV !== "test" && console.error(g), this.state.setState((w) => (w.error = g, w));
      } finally {
        return this.state.setState((w) => (w.loading = !1, w)), this.state.getState();
      }
    });
  }
}
class M1 {
  getDataFormatted(p, g) {
    return p.map((w) => {
      const L = {};
      return g.forEach((B) => {
        w[B.name] && (L[B.name] = w[B.name]);
      }), L;
    }).filter((w) => Object.keys(w).length > 0);
  }
}
var pi;
class Ms {
  constructor(p) {
    ta(this, pi, void 0);
    Rn(this, pi, p);
  }
  get colsDef() {
    return un(this, pi);
  }
  setColsDef(p) {
    return Rn(this, pi, p), this;
  }
  /**
   * @description set default value from columnsDefaultKey config key
   */
  static setDefaultKeyValue(p = null, g) {
    return p && g.forEach((w) => {
      Object.entries(p).map(([L, B]) => {
        L in w || (w[L] = B);
      });
    }), g;
  }
  static mergeColumns(p, g) {
    const w = {};
    for (let L = 0; L < p.length; L++) {
      const B = p[L];
      w[B.name] = B;
    }
    for (let L = 0; L < g.length; L++) {
      const B = g[L];
      w[B.name] ? w[B.name] = Vi(Vi({}, w[B.name]), B) : w[B.name] = B;
    }
    return Object.values(w);
  }
}
pi = new WeakMap();
class m0 {
  $element(p, {
    classList: g,
    attributes: w,
    content: L,
    children: B,
    html: f,
    style: d,
    onClick: t,
    onChange: i
  }) {
    const r = document.createElement(p);
    if (g && g.forEach((n) => r.classList.add(n)), L && (r.textContent = L), B && r.append(...B), f && (r.innerHTML = f), d)
      for (const [n, o] of Object.entries(d))
        r.style[n] = String(o);
    return w && Object.entries(w).forEach(([n, o]) => {
      typeof o == "boolean" ? r.toggleAttribute(n, o) : r.setAttribute(n, o);
    }), t && t.forEach((n) => n), i && i.forEach((n) => n), r;
  }
}
class Cl extends Error {
  constructor(p) {
    super(`DOM Error : ${p}`), this.name = "DomError", this.stack = new Error().stack;
  }
}
class k1 extends m0 {
  constructor(g, { headers: w, config: L }) {
    super();
    mr(this, "tableRef");
    mr(this, "headerRef", null);
    mr(this, "config");
    mr(this, "headers");
    mr(this, "MAIN_HEADER_ID", "main_header");
    mr(this, "GROUP_HEADER_ID", "group_header");
    mr(this, "appendTableHeader", () => {
      var g;
      return (g = this.tableRef) == null ? void 0 : g.append(this.$element("thead", {}));
    });
    mr(this, "getHeaderElement", () => {
      var g, w;
      return this.headerRef = (w = (g = this.tableRef) == null ? void 0 : g.querySelector("thead")) != null ? w : null, this.headerRef;
    });
    mr(this, "$headerWrapper", (g, w, L) => this.$element("tr", {
      attributes: { class: w, id: g },
      children: L
    }));
    this.tableRef = g, this.headers = w, this.config = L, this.appendTableHeader(), this.getHeaderElement();
  }
  build() {
    return ea(this, null, function* () {
      var w, L, B;
      if (!this.headerRef)
        throw new Cl("Cannot select the dom header ref");
      if (!this.headers.getConfig())
        return this.headerRef;
      const g = this.headers.groupByHeadersGroup(
        (w = this.config.headers) != null ? w : []
      );
      if (!Object.keys(g).length)
        return this.headerRef;
      if (Object.keys(g).some(
        (f) => !f.startsWith(Ki.NONE)
      )) {
        const [f, d] = yield Promise.all([
          this.$groupHeaders(g),
          this.$mainHeader(g)
        ]), t = this.$headerWrapper(
          this.GROUP_HEADER_ID,
          "group_header",
          f
        ), i = this.$headerWrapper(
          this.MAIN_HEADER_ID,
          "main_header",
          d
        );
        (B = this.headerRef) == null || B.append(t, i);
      } else {
        const f = this.$mainRowHeader(g), d = this.$headerWrapper(
          this.MAIN_HEADER_ID,
          "main_header",
          f
        );
        (L = this.headerRef) == null || L.append(d);
      }
      return this.headerRef;
    });
  }
  /**
   * Build main headers columns
   */
  $mainHeader(g) {
    return ea(this, null, function* () {
      const w = [];
      for (const [L, B] of Object.entries(g))
        if (!L.startsWith(Ki.NONE))
          for (let f = 0; f < B.length; f++)
            w.push(
              this.$element("th", {
                classList: ["colspan-border"],
                attributes: {
                  rowspan: "1",
                  colspan: "1"
                },
                content: B[f].title,
                style: B[f].style
              })
            );
      return w;
    });
  }
  $mainRowHeader(g) {
    const w = [];
    for (const [L, B] of Object.entries(g))
      for (let f = 0; f < B.length; f++)
        L.startsWith(Ki.NONE) && w.push(
          this.$element("th", {
            classList: ["colspan-border"],
            attributes: {
              rowspan: "1",
              colspan: "1"
            },
            content: B[f].title,
            style: B[f].style
          })
        );
    return w;
  }
  /**
   * Build Group headers
   */
  $groupHeaders(g) {
    return ea(this, null, function* () {
      const w = [];
      for (const [L, B] of Object.entries(g))
        if (!L.startsWith(Ki.NONE))
          w.push(
            this.$element("th", {
              classList: ["colspan-border"],
              attributes: {
                rowspan: "1",
                colspan: String(B.length)
              },
              content: L
            })
          );
        else
          for (let f = 0; f < B.length; f++)
            w.push(
              this.$element("th", {
                classList: ["colspan-border"],
                attributes: {
                  rowspan: "2",
                  colspan: "1"
                },
                content: B[f].title,
                style: B[f].style
              })
            );
      return w;
    });
  }
}
class U1 {
  constructor() {
    mr(this, "transformers");
    /**
     * Add transformer to the data submitted
     */
    mr(this, "add", (p) => this.transformers.push(p));
    /**
     * Execute each transformer
     */
    mr(this, "exec", (p) => (this.transformers.forEach((g) => {
      p = g(p);
    }), p));
    this.transformers = [];
  }
}
class li extends Error {
  constructor(p) {
    super(`Action plugin Error : ${p}`), this.name = "ActionError", this.stack = new Error().stack;
  }
}
class z1 extends m0 {
  constructor() {
    super();
  }
  $actionButton({
    name: p,
    label: g,
    iconTitle: w,
    icon: L,
    style: B,
    effect: f
  }) {
    const d = {
      padding: "4px"
    };
    let t;
    return w && (t = this.$element("i", {
      classList: ["fa", w]
    })), L && (t = L.cloneNode(!0)), this.$element("button", {
      classList: ["btn"],
      children: [t],
      attributes: {
        name: p,
        "aria-label": g != null ? g : p
      },
      style: Vi(Vi({}, d), B),
      onClick: Array.isArray(f) ? f : [f]
    });
  }
  defineDefaultCellStyle(p) {
    p.style.display = "flex", p.style.justifyContent = "center", p.style.alignItems = "center", p.style.gap = "6px";
  }
}
class W1 {
  static fetchUrl(p) {
    return ea(this, null, function* () {
      try {
        return yield (yield fetch(p)).json();
      } catch (g) {
        throw g;
      }
    });
  }
}
class H1 {
  constructor(p, g) {
    mr(this, "customActions");
    mr(this, "retrieve", () => this.customActions);
    this.customActions = [
      {
        name: "SURVEA_EDIT",
        effect: (w) => ea(this, null, function* () {
          if (!p.url)
            throw new Error("URL is not defined");
          try {
            const L = g(p.url, w), B = yield W1.fetchUrl(L);
            B.url || window.open(B.url, p.blank ? "_blank" : "_self");
          } catch (L) {
            throw L;
          }
        })
      }
    ];
  }
}
var qi, gi, mi, _i, yi, jo;
class j1 {
  constructor({ width: p, className: g, actions: w }) {
    ta(this, yi);
    mr(this, "actions");
    mr(this, "customActions");
    ta(this, qi, void 0);
    ta(this, gi, void 0);
    ta(this, mi, void 0);
    ta(this, _i, void 0);
    this.actions = [], Rn(this, qi, p), Rn(this, mi, g), Rn(this, gi, w), Rn(this, _i, new z1());
  }
  generateColDefConfig() {
    return ea(this, null, function* () {
      return {
        data: null,
        defaultContent: "",
        targets: -1,
        width: un(this, qi),
        createdCell: (p, g) => ea(this, null, function* () {
          for (const w of un(this, gi))
            if (w.effect)
              Lo(this, yi, jo).call(this, p, g, w);
            else if (w.customAction) {
              if (!w.url || w.url === "")
                throw new Error("Cannnot open URL, URL is missing");
              new H1(w, this.parseUrlString.bind(this)).retrieve().map((L) => {
                L.name === w.customAction && (w.effect = L.effect, Lo(this, yi, jo).call(this, p, g, w));
              });
            } else
              w.effect = (L) => {
                if (!w.url || w.url === "")
                  throw new Error("Cannnot open URL, URL is missing");
                const B = this.parseUrlString(w.url, L);
                window.open(B, w.blank ? "_blank" : "_self");
              }, Lo(this, yi, jo).call(this, p, g, w);
        })
      };
    });
  }
  _getUrlParams(p) {
    const g = Array.from(p.matchAll(/\{(.+?)\}/g)), w = Array.from(g).filter((L) => L[1] !== "}{").map((L) => L[1]);
    return Array.from(new Set(w));
  }
  parseUrlString(p, g) {
    const w = this._getUrlParams(p);
    return w.length && w.forEach((L) => {
      p.includes(`{${L}}`) && g[L] && (p = p.replaceAll(`{${L}}`, g[L]));
    }), p;
  }
  /**
   * @throws ActionError if an error occured
   */
  validateConfig() {
    return un(this, gi).map((p) => {
      if (!p.icon && !p.iconTitle)
        throw new li("You must provide an icon name or an icon title");
      if (p.icon && !(p.icon instanceof HTMLElement))
        throw new li("Icon must be of type HTMLElement");
      if (!p.name)
        throw new li("Name is not set");
      if (!p.effect && !p.url)
        throw new li("You must provide an URL or an Effect function");
      if (p.url && p.url === "")
        throw new li("Invalid URL");
      if (p.effect && !(p.effect instanceof Function))
        throw new li("Effect must be a function");
    }), this;
  }
}
qi = new WeakMap(), gi = new WeakMap(), mi = new WeakMap(), _i = new WeakMap(), yi = new WeakSet(), jo = function(p, g, w) {
  const L = un(this, _i).$actionButton(w);
  L.addEventListener("click", () => ea(this, null, function* () {
    try {
      yield w.effect(g), w.onComplete && w.onComplete(g);
    } catch (B) {
      w.onError && w.onError(B, g);
    }
  })), un(this, mi) && p.classList.add(un(this, mi)), p.appendChild(L);
};
class G1 {
  getDefaults() {
    return [
      "copyHtml5",
      "excelHtml5",
      "csvHtml5",
      {
        text: "JSON",
        action: function(p, g) {
          var w = g.buttons.exportData({ orthogonal: "export_json" });
          Wn.fn.dataTable.fileSave(
            new Blob([JSON.stringify(w)]),
            "Exported_data.json"
          );
        }
      },
      "colvis"
    ];
  }
  parse(p) {
    return Array.isArray(p) && p.forEach((g) => {
    }), p;
  }
}
class V1 extends m0 {
  constructor(g, w) {
    super();
    mr(this, "tableRef");
    mr(this, "footerRef", null);
    mr(this, "config");
    mr(this, "appendTableFooter", () => {
      var g, w;
      (g = this.tableRef) != null && g.querySelector("tfoot") || (w = this.tableRef) == null || w.append(this.$element("tfoot", {}));
    });
    mr(this, "getFooterElement", () => {
      var g, w;
      return this.footerRef = (w = (g = this.tableRef) == null ? void 0 : g.querySelector("tfoot")) != null ? w : null, this.footerRef;
    });
    this.tableRef = g, this.config = w, this.appendTableFooter(), this.getFooterElement();
  }
  build(g = "main_footer", w = "main_footer") {
    return ea(this, null, function* () {
      var f, d, t;
      if (!this.footerRef)
        throw new Cl("Cannot select the dom footer ref");
      if (!((f = this.config.headers) != null && f.length))
        return this.footerRef;
      const L = [];
      (d = this.config.headers) == null || d.forEach((i) => {
        var r;
        (r = i.columns) == null || r.forEach((n) => {
          L.push(
            this.$element("th", {
              classList: ["colspan-border"],
              attributes: {
                rowspan: "1",
                colspan: "1"
              },
              //content: column.title,
              style: n.style
            })
          );
        });
      });
      const B = this.$element("tr", {
        attributes: { class: w, id: g },
        children: L
      });
      return (t = this.footerRef) == null || t.append(B), this.footerRef;
    });
  }
}
class X1 {
  constructor(p, g) {
    mr(this, "tableRef");
    mr(this, "config");
    mr(this, "footerUiBuilder");
    this.tableRef = p, this.config = g, this.footerUiBuilder = new V1(this.tableRef, g);
  }
  build(p = "main_filter", g = "main_filter") {
    return ea(this, null, function* () {
      return this.footerUiBuilder.build(p, g);
    });
  }
  init(p, g) {
    p.columns().every(function() {
      let w = this.footer().textContent;
      if (g == "input") {
        let L = document.createElement("div");
        L.classList.add("column_search_container");
        let B = document.createElement("input");
        B.setAttribute("type", "text"), B.classList.add("column_search"), B.placeholder = w;
        let f = document.createElement("i");
        f.classList.add("fa", "fa-search"), L.appendChild(B), L.appendChild(f), this.footer().replaceChildren(L), B.addEventListener("keyup", () => {
          this.search() !== this.value && this.search(B.value).draw();
        });
      }
    });
  }
}
1.005.toFixed(2) == "1.01" || function(a) {
  const p = function(w) {
    if (Math.abs(w) < 1) {
      var L = parseInt(w.toString().split("e-")[1]);
      L && (w *= Math.pow(10, L - 1), w = "0." + new Array(L).join("0") + w.toString().substring(2));
    } else {
      var L = parseInt(w.toString().split("+")[1]);
      L > 20 && (L -= 20, w /= Math.pow(10, L), w += new Array(L + 1).join("0"));
    }
    return w;
  };
  var g = a.toFixed;
  a.toFixed = function(w) {
    var L = p(this).toString().split("."), B = +(L[1] ? L.join(".") + (L[1].length > w && "1" || "") : L[0]);
    return g.call(B, w);
  };
}(Number.prototype);
var El = { exports: {} };
(function(a, p) {
  (function(g, w) {
    a.exports = w();
  })(hi, function() {
    var g = 1e3, w = 6e4, L = 36e5, B = "millisecond", f = "second", d = "minute", t = "hour", i = "day", r = "week", n = "month", o = "quarter", h = "year", u = "date", l = "Invalid Date", c = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, s = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, v = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(m) {
      var I = ["th", "st", "nd", "rd"], O = m % 100;
      return "[" + m + (I[(O - 20) % 10] || I[O] || I[0]) + "]";
    } }, y = function(m, I, O) {
      var M = String(m);
      return !M || M.length >= I ? m : "" + Array(I + 1 - M.length).join(O) + m;
    }, x = { s: y, z: function(m) {
      var I = -m.utcOffset(), O = Math.abs(I), M = Math.floor(O / 60), N = O % 60;
      return (I <= 0 ? "+" : "-") + y(M, 2, "0") + ":" + y(N, 2, "0");
    }, m: function m(I, O) {
      if (I.date() < O.date())
        return -m(O, I);
      var M = 12 * (O.year() - I.year()) + (O.month() - I.month()), N = I.clone().add(M, n), G = O - N < 0, ot = I.clone().add(M + (G ? -1 : 1), n);
      return +(-(M + (O - N) / (G ? N - ot : ot - N)) || 0);
    }, a: function(m) {
      return m < 0 ? Math.ceil(m) || 0 : Math.floor(m);
    }, p: function(m) {
      return { M: n, y: h, w: r, d: i, D: u, h: t, m: d, s: f, ms: B, Q: o }[m] || String(m || "").toLowerCase().replace(/s$/, "");
    }, u: function(m) {
      return m === void 0;
    } }, e = "en", b = {};
    b[e] = v;
    var A = "$isDayjsObject", P = function(m) {
      return m instanceof C || !(!m || !m[A]);
    }, D = function m(I, O, M) {
      var N;
      if (!I)
        return e;
      if (typeof I == "string") {
        var G = I.toLowerCase();
        b[G] && (N = G), O && (b[G] = O, N = G);
        var ot = I.split("-");
        if (!N && ot.length > 1)
          return m(ot[0]);
      } else {
        var K = I.name;
        b[K] = I, N = K;
      }
      return !M && N && (e = N), N || !M && e;
    }, E = function(m, I) {
      if (P(m))
        return m.clone();
      var O = typeof I == "object" ? I : {};
      return O.date = m, O.args = arguments, new C(O);
    }, T = x;
    T.l = D, T.i = P, T.w = function(m, I) {
      return E(m, { locale: I.$L, utc: I.$u, x: I.$x, $offset: I.$offset });
    };
    var C = function() {
      function m(O) {
        this.$L = D(O.locale, null, !0), this.parse(O), this.$x = this.$x || O.x || {}, this[A] = !0;
      }
      var I = m.prototype;
      return I.parse = function(O) {
        this.$d = function(M) {
          var N = M.date, G = M.utc;
          if (N === null)
            return /* @__PURE__ */ new Date(NaN);
          if (T.u(N))
            return /* @__PURE__ */ new Date();
          if (N instanceof Date)
            return new Date(N);
          if (typeof N == "string" && !/Z$/i.test(N)) {
            var ot = N.match(c);
            if (ot) {
              var K = ot[2] - 1 || 0, nt = (ot[7] || "0").substring(0, 3);
              return G ? new Date(Date.UTC(ot[1], K, ot[3] || 1, ot[4] || 0, ot[5] || 0, ot[6] || 0, nt)) : new Date(ot[1], K, ot[3] || 1, ot[4] || 0, ot[5] || 0, ot[6] || 0, nt);
            }
          }
          return new Date(N);
        }(O), this.init();
      }, I.init = function() {
        var O = this.$d;
        this.$y = O.getFullYear(), this.$M = O.getMonth(), this.$D = O.getDate(), this.$W = O.getDay(), this.$H = O.getHours(), this.$m = O.getMinutes(), this.$s = O.getSeconds(), this.$ms = O.getMilliseconds();
      }, I.$utils = function() {
        return T;
      }, I.isValid = function() {
        return this.$d.toString() !== l;
      }, I.isSame = function(O, M) {
        var N = E(O);
        return this.startOf(M) <= N && N <= this.endOf(M);
      }, I.isAfter = function(O, M) {
        return E(O) < this.startOf(M);
      }, I.isBefore = function(O, M) {
        return this.endOf(M) < E(O);
      }, I.$g = function(O, M, N) {
        return T.u(O) ? this[M] : this.set(N, O);
      }, I.unix = function() {
        return Math.floor(this.valueOf() / 1e3);
      }, I.valueOf = function() {
        return this.$d.getTime();
      }, I.startOf = function(O, M) {
        var N = this, G = !!T.u(M) || M, ot = T.p(O), K = function(J, yt) {
          var ut = T.w(N.$u ? Date.UTC(N.$y, yt, J) : new Date(N.$y, yt, J), N);
          return G ? ut : ut.endOf(i);
        }, nt = function(J, yt) {
          return T.w(N.toDate()[J].apply(N.toDate("s"), (G ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(yt)), N);
        }, xt = this.$W, bt = this.$M, St = this.$D, Dt = "set" + (this.$u ? "UTC" : "");
        switch (ot) {
          case h:
            return G ? K(1, 0) : K(31, 11);
          case n:
            return G ? K(1, bt) : K(0, bt + 1);
          case r:
            var Lt = this.$locale().weekStart || 0, jt = (xt < Lt ? xt + 7 : xt) - Lt;
            return K(G ? St - jt : St + (6 - jt), bt);
          case i:
          case u:
            return nt(Dt + "Hours", 0);
          case t:
            return nt(Dt + "Minutes", 1);
          case d:
            return nt(Dt + "Seconds", 2);
          case f:
            return nt(Dt + "Milliseconds", 3);
          default:
            return this.clone();
        }
      }, I.endOf = function(O) {
        return this.startOf(O, !1);
      }, I.$set = function(O, M) {
        var N, G = T.p(O), ot = "set" + (this.$u ? "UTC" : ""), K = (N = {}, N[i] = ot + "Date", N[u] = ot + "Date", N[n] = ot + "Month", N[h] = ot + "FullYear", N[t] = ot + "Hours", N[d] = ot + "Minutes", N[f] = ot + "Seconds", N[B] = ot + "Milliseconds", N)[G], nt = G === i ? this.$D + (M - this.$W) : M;
        if (G === n || G === h) {
          var xt = this.clone().set(u, 1);
          xt.$d[K](nt), xt.init(), this.$d = xt.set(u, Math.min(this.$D, xt.daysInMonth())).$d;
        } else
          K && this.$d[K](nt);
        return this.init(), this;
      }, I.set = function(O, M) {
        return this.clone().$set(O, M);
      }, I.get = function(O) {
        return this[T.p(O)]();
      }, I.add = function(O, M) {
        var N, G = this;
        O = Number(O);
        var ot = T.p(M), K = function(bt) {
          var St = E(G);
          return T.w(St.date(St.date() + Math.round(bt * O)), G);
        };
        if (ot === n)
          return this.set(n, this.$M + O);
        if (ot === h)
          return this.set(h, this.$y + O);
        if (ot === i)
          return K(1);
        if (ot === r)
          return K(7);
        var nt = (N = {}, N[d] = w, N[t] = L, N[f] = g, N)[ot] || 1, xt = this.$d.getTime() + O * nt;
        return T.w(xt, this);
      }, I.subtract = function(O, M) {
        return this.add(-1 * O, M);
      }, I.format = function(O) {
        var M = this, N = this.$locale();
        if (!this.isValid())
          return N.invalidDate || l;
        var G = O || "YYYY-MM-DDTHH:mm:ssZ", ot = T.z(this), K = this.$H, nt = this.$m, xt = this.$M, bt = N.weekdays, St = N.months, Dt = N.meridiem, Lt = function(yt, ut, st, wt) {
          return yt && (yt[ut] || yt(M, G)) || st[ut].slice(0, wt);
        }, jt = function(yt) {
          return T.s(K % 12 || 12, yt, "0");
        }, J = Dt || function(yt, ut, st) {
          var wt = yt < 12 ? "AM" : "PM";
          return st ? wt.toLowerCase() : wt;
        };
        return G.replace(s, function(yt, ut) {
          return ut || function(st) {
            switch (st) {
              case "YY":
                return String(M.$y).slice(-2);
              case "YYYY":
                return T.s(M.$y, 4, "0");
              case "M":
                return xt + 1;
              case "MM":
                return T.s(xt + 1, 2, "0");
              case "MMM":
                return Lt(N.monthsShort, xt, St, 3);
              case "MMMM":
                return Lt(St, xt);
              case "D":
                return M.$D;
              case "DD":
                return T.s(M.$D, 2, "0");
              case "d":
                return String(M.$W);
              case "dd":
                return Lt(N.weekdaysMin, M.$W, bt, 2);
              case "ddd":
                return Lt(N.weekdaysShort, M.$W, bt, 3);
              case "dddd":
                return bt[M.$W];
              case "H":
                return String(K);
              case "HH":
                return T.s(K, 2, "0");
              case "h":
                return jt(1);
              case "hh":
                return jt(2);
              case "a":
                return J(K, nt, !0);
              case "A":
                return J(K, nt, !1);
              case "m":
                return String(nt);
              case "mm":
                return T.s(nt, 2, "0");
              case "s":
                return String(M.$s);
              case "ss":
                return T.s(M.$s, 2, "0");
              case "SSS":
                return T.s(M.$ms, 3, "0");
              case "Z":
                return ot;
            }
            return null;
          }(yt) || ot.replace(":", "");
        });
      }, I.utcOffset = function() {
        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
      }, I.diff = function(O, M, N) {
        var G, ot = this, K = T.p(M), nt = E(O), xt = (nt.utcOffset() - this.utcOffset()) * w, bt = this - nt, St = function() {
          return T.m(ot, nt);
        };
        switch (K) {
          case h:
            G = St() / 12;
            break;
          case n:
            G = St();
            break;
          case o:
            G = St() / 3;
            break;
          case r:
            G = (bt - xt) / 6048e5;
            break;
          case i:
            G = (bt - xt) / 864e5;
            break;
          case t:
            G = bt / L;
            break;
          case d:
            G = bt / w;
            break;
          case f:
            G = bt / g;
            break;
          default:
            G = bt;
        }
        return N ? G : T.a(G);
      }, I.daysInMonth = function() {
        return this.endOf(n).$D;
      }, I.$locale = function() {
        return b[this.$L];
      }, I.locale = function(O, M) {
        if (!O)
          return this.$L;
        var N = this.clone(), G = D(O, M, !0);
        return G && (N.$L = G), N;
      }, I.clone = function() {
        return T.w(this.$d, this);
      }, I.toDate = function() {
        return new Date(this.valueOf());
      }, I.toJSON = function() {
        return this.isValid() ? this.toISOString() : null;
      }, I.toISOString = function() {
        return this.$d.toISOString();
      }, I.toString = function() {
        return this.$d.toUTCString();
      }, m;
    }(), F = C.prototype;
    return E.prototype = F, [["$ms", B], ["$s", f], ["$m", d], ["$H", t], ["$W", i], ["$M", n], ["$y", h], ["$D", u]].forEach(function(m) {
      F[m[1]] = function(I) {
        return this.$g(I, m[0], m[1]);
      };
    }), E.extend = function(m, I) {
      return m.$i || (m(I, C, E), m.$i = !0), E;
    }, E.locale = D, E.isDayjs = P, E.unix = function(m) {
      return E(1e3 * m);
    }, E.en = b[e], E.Ls = b, E.p = {}, E;
  });
})(El);
var Z1 = El.exports;
const ks = /* @__PURE__ */ hl(Z1), Us = {
  DATE_DAY: {
    render: function(a, p) {
      return p === "display" || p === "filter" ? ks(a).format("DD/MM/YYYY") : a;
    }
  },
  DATE_WITH_SECOND: {
    render: function(a, p) {
      return p === "display" || p === "filter" ? ks(a).format("DD/MM/YYYY HH:mm:ss") : a;
    }
  },
  LOCAL_NUMBER: {
    render: function(a, p) {
      return p === "display" || p === "filter" ? a.toLocaleString() : a;
    }
  },
  BOOLEAN_OUI_NON: {
    render: function(a, p) {
      return p === "display" || p === "filter" ? a === !0 ? "Oui" : "Non" : a;
    }
  },
  NUMBER_FIXED_2: {
    render: function(a) {
      if (typeof a == "number")
        return a.toFixed(2);
      if (typeof a == "string") {
        const p = parseFloat(a);
        return isNaN(p) ? a : p.toFixed(2);
      }
    }
  },
  NUMBER_2_DIGIT_MAX: {
    render: function(a) {
      if (typeof a == "number")
        return a % 1 === 0 ? a : a.toFixed(2);
      if (typeof a == "string") {
        const p = parseFloat(a);
        return isNaN(p) || p % 1 === 0 ? a : p.toFixed(2);
      } else
        return a;
    }
  },
  PARSE_INT: {
    render: function(a) {
      return parseInt(a);
    }
  },
  UPPERCASE: {
    render: (a) => typeof a == "string" ? a.toUpperCase() : a
  },
  LOWERCASE: {
    render: (a) => typeof a == "string" ? a.toLowerCase() : a
  },
  CUT_LONG_TEXT: {
    createdCell: function(a, p) {
      typeof p == "string" && p.length > 30 && (a.title = p, a.innerText = p.substring(0, 28) + "â¦");
    }
  },
  CHECKBOX: {
    checkboxes: {
      selectRow: !0
    }
  },
  _dynamic: [
    {
      pattern: /^DATE_TO_FORMAT_(.+)$/,
      handler: (a) => {
        const p = a[1];
        return {
          render: function(g, w) {
            return w === "display" || w === "filter" ? ks(g).format(p) : g;
          }
        };
      }
    }
  ]
};
function Y1(a) {
  if (typeof a == "string") {
    if (a in Us)
      return Us[a];
    for (const p of Us._dynamic || []) {
      const g = a.match(p.pattern);
      if (g)
        return p.handler(g);
    }
    return {};
  }
  return a;
}
class K1 {
  constructor(p) {
    p.headers && p.headers.map((g) => {
      for (const w of g.columns) {
        if (!w.renderer)
          continue;
        Array.isArray(w.renderer) && (console.warn(
          "Multiple renderers are not supported yet. Please use a single renderer."
        ), w.renderer = w.renderer[0]);
        const L = Y1(w.renderer);
        L.render && (w.render = L.render), L.createdCell && (w.createdCell = L.createdCell), L.checkboxes && (w.checkboxes = L.checkboxes);
      }
    });
  }
}
window.JSZip = A1;
var to, xi, bi, $o;
class $1 extends B1 {
  constructor(g, w) {
    super();
    mr(this, "config");
    mr(this, "_ref");
    mr(this, "refElement");
    mr(this, "dao");
    mr(this, "dto");
    mr(this, "tranformer");
    ta(this, to, void 0);
    ta(this, xi, void 0);
    ta(this, bi, void 0);
    // @ts-ignore
    ta(this, $o, void 0);
    mr(this, "filterColumn");
    this._ref = g, this.refElement = document.querySelector(g), this.config = w, this.dao = new N1(), this.dto = new M1(), this.tranformer = new U1();
  }
  /**
   * Get the default datatable config if not set
   */
  setDefaults(g) {
    var w, L, B, f, d, t;
    return !g.dom && !g.layout && (g.dom = '<"top"Bf>rt<"bottom"lip><"clear">'), g.scrollX || (g.scrollX = (w = g.scrollX) != null ? w : !0), g.fixedHeader || (g.fixedHeader = (L = g.fixedHeader) != null ? L : !0), g.paging || (g.paging = (B = g.paging) != null ? B : !0), g.lxConfig && (g.lxConfig.filters = (f = g.lxConfig.filters) != null ? f : !0, g.lxConfig.handleBootrapTabChange = (d = g.lxConfig.handleBootrapTabChange) != null ? d : !0, g.lxConfig.scrollYFitToScreen = (t = g.lxConfig.scrollYFitToScreen) != null ? t : !1), g;
  }
  /**
   * Main function of datatable
   *
   * Instantiating the lx datatable
   * Generate cols, create dom content etc...
   */
  init() {
    return ea(this, null, function* () {
      var f, d;
      try {
        this.config = this.validateConfig(this.config);
      } catch (t) {
        return console.error(t.message), this;
      }
      this.setDefaults(this.config);
      let g = [], w = [];
      if (!this.refElement)
        throw new DOMException("Error: element selected doesn't exist");
      const { standardConfig: L, lxConfig: B } = this._splitConfig(this.config);
      if (Rn(this, to, new Ms()), Rn(this, xi, new R1()), Rn(this, bi, new G1()), L && (g = (f = un(this, to).setColsDef(L.columns).colsDef) != null ? f : []), B) {
        g != null && g.length && (B.headers = B.headers ? [{ columns: [...g] }, ...B.headers] : [{ columns: [...g] }]), new K1(B);
        const t = un(this, xi).setColsDef(B).generate();
        w = t.getColumns();
        const i = new k1(this.refElement, {
          headers: t,
          config: B
        });
        if (Rn(this, $o, yield i.build()), B && B.filters && (this.filterColumn = new X1(this.refElement, B), yield this.filterColumn.build()), !this.config.data)
          try {
            const { data: r, error: n } = yield this.dao.fetchData(B.url);
            if (n)
              throw new Sl(n.message);
            this.config.data = r != null ? r : [];
          } catch (r) {
            return console.error(r.message), this;
          }
      }
      if (this.config.columns = Ms.setDefaultKeyValue(
        (d = un(this, xi).getConfig()) == null ? void 0 : d.columnsDefaultKey,
        w
      ), this.config.columns = Ms.mergeColumns(
        g,
        w
      ), !this.config.data)
        throw new Error("Error : no data provided");
      if (this.config.data = this.tranformer.exec(this.config.data), B != null && B.row_action && B.row_action.actions.length) {
        const t = new j1(B.row_action);
        try {
          const i = yield t.validateConfig().generateColDefConfig();
          this.config.columnDefs ? this.config.columnDefs = [...this.config.columnDefs, i] : this.config.columnDefs = Array(i);
        } catch (i) {
          console.error(i.message);
        }
      }
      return this.config.buttons || (this.config.buttons = un(this, bi).getDefaults()), un(this, bi).parse(
        this.config.buttons
      ), Wn(`${this._ref}`).on("init.dt", (t, i) => {
        var o, h;
        if (t.namespace !== "dt")
          return;
        const r = i.oInstance.api();
        if (B && B.filters)
          if ((o = this.filterColumn) == null || o.init(r, "input"), (h = this.config) != null && h.scrollX) {
            Wn(`${this._ref}_wrapper .dt-scroll-foot tfoot tr th`).removeAttr(
              "data-dt-column"
            );
            var n = Wn(`${this._ref}_wrapper .dt-scroll-foot tfoot tr`);
            Wn(`${this._ref}_wrapper .dt-scroll-head thead`).append(n);
          } else {
            Wn(`${this._ref} tfoot tr th`).removeAttr("data-dt-column");
            var n = Wn(`${this._ref} tfoot tr`);
            Wn(`${this._ref} thead`).append(n);
          }
        if (B != null && B.scrollYFitToScreen) {
          const u = this._convertToScrollYFitToScreenConfig(
            B.scrollYFitToScreen
          );
          this._scrollYFitToScreen(u), r.draw();
        }
      }), this.instance = new de(`${this._ref}`, this.config), this.refElement.dispatchEvent(this.initEvent(this.instance)), B && B.handleBootrapTabChange && this.handleBootrapTabChange(this.instance), B != null && B.keepFixedHeaderInDT && this._ref && this.__keepFixedHeaderInDT(), this;
    });
  }
  __filterDataWithKey() {
  }
  __keepFixedHeaderInDT() {
    new MutationObserver((w) => {
      for (const L of w)
        for (const B of L.addedNodes)
          if (B instanceof HTMLElement && B.classList.contains("dtfh-floatingparent")) {
            const f = document.querySelector(this._ref);
            if (!f)
              return;
            const t = `${this._ref.startsWith("#") || this._ref.startsWith(".") ? this._ref.slice(1) : this._ref}_info`, i = B.querySelector("table");
            (i == null ? void 0 : i.getAttribute("aria-describedby")) === t && (f.contains(B) || f.insertBefore(B, f.firstChild));
          }
    }).observe(document.body, {
      childList: !0,
      subtree: !0
    });
  }
  _scrollYFitToScreen(g) {
    const w = this, L = g && g.addStaticMargin ? g.addStaticMargin : 0;
    Wn(`${this._ref}`).on("draw.dt", (B, f) => {
      if (B.namespace !== "dt")
        return;
      const d = document.querySelector(
        `${w._ref}_wrapper`
      );
      if (d) {
        const t = d.getBoundingClientRect().top, i = (document.querySelector(
          `${w._ref}_wrapper .dt-scroll-head`
        ) || { offsetHeight: 0 }).offsetHeight, r = (document.querySelector(
          `${w._ref}_wrapper .top`
        ) || { offsetHeight: 0 }).offsetHeight, n = (document.querySelector(
          `${w._ref}_wrapper .bottom`
        ) || { offsetHeight: 0 }).offsetHeight, o = (document.querySelector(
          `${w._ref}_wrapper .dt-scroll-foot`
        ) || { offsetHeight: 0 }).offsetHeight, h = document.querySelectorAll(
          `${w._ref}_wrapper .dt-layout-row:not(.dt-layout-table)`
        ), u = Array.from(h).reduce(
          (s, v) => s + v.offsetHeight,
          0
        );
        console.log("dtLayoutRowsHeight", u);
        const l = window.innerHeight - // La taille de la fenÃªtre complete
        t - // L'ordonnÃ©e du haut du tableau
        r - // La taille du top (lorsqu'on utilise `dom`)
        n - // La taille du bottom (lorsqu'on utilise `dom`)
        i - // La taille du header (lorsqu'on utilise `layout`)
        o - // La taille du footer (lorsqu'on utilise `layout`)
        u - // La taille de toutes les rows (lorsqu'on utilise `layout`)
        L, c = document.querySelector(
          `${w._ref}_wrapper .dt-scroll-body`
        );
        t + d.offsetHeight > window.innerHeight && (c.style.minHeight = l + "px", c.style.height = l + "px");
      }
    });
  }
  handleBootrapTabChange(g) {
    typeof $ == "function" && $('a[data-toggle="tab"]').on("shown.bs.tab", function() {
      g.draw();
    }), document.querySelectorAll('button[data-bs-toggle="tab"]').forEach((w) => {
      w.addEventListener("shown.bs.tab", () => {
        g.draw();
      });
    });
  }
  // CrÃ©er une fonction utilitaire pour convertir le paramÃ¨tre
  _convertToScrollYFitToScreenConfig(g) {
    return typeof g == "boolean" && g === !0 ? {
      addStaticMargin: 0
    } : g;
  }
}
to = new WeakMap(), xi = new WeakMap(), bi = new WeakMap(), $o = new WeakMap();
export {
  $1 as default
};
