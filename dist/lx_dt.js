import Ca from "jquery";
/*! DataTables 2.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
var Xt = Ca, ge = function(s, p) {
  if (ge.factory(s, p))
    return ge;
  if (this instanceof ge)
    return Xt(s).DataTable(p);
  p = s;
  var b = this, A = p === void 0, R = this.length;
  return A && (p = {}), this.api = function() {
    return new Sr(this);
  }, this.each(function() {
    var B = {}, u = R > 1 ? (
      // optimisation for single table case
      $0(B, p, !0)
    ) : p, d = 0, t, o = this.getAttribute("id"), r = !1, n = ge.defaults, i = Xt(this);
    if (this.nodeName.toLowerCase() != "table") {
      qn(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
      return;
    }
    Xt(this).trigger("options.dt", u), G0(n), cf(n.column), Ba(n, n, !0), Ba(n.column, n.column, !0), Ba(n, Xt.extend(u, i.data()), !0);
    var f = ge.settings;
    for (d = 0, t = f.length; d < t; d++) {
      var l = f[d];
      if (l.nTable == this || l.nTHead && l.nTHead.parentNode == this || l.nTFoot && l.nTFoot.parentNode == this) {
        var c = u.bRetrieve !== void 0 ? u.bRetrieve : n.bRetrieve, h = u.bDestroy !== void 0 ? u.bDestroy : n.bDestroy;
        if (A || c)
          return l.oInstance;
        if (h) {
          new ge.Api(l).destroy();
          break;
        } else {
          qn(l, 0, "Cannot reinitialise DataTable", 3);
          return;
        }
      }
      if (l.sTableId == this.id) {
        f.splice(d, 1);
        break;
      }
    }
    (o === null || o === "") && (o = "DataTables_Table_" + ge.ext._unique++, this.id = o);
    var a = Xt.extend(!0, {}, ge.models.oSettings, {
      sDestroyWidth: i[0].style.width,
      sInstance: o,
      sTableId: o,
      colgroup: Xt("<colgroup>").prependTo(this),
      fastData: function(C, E, F) {
        return ta(a, C, E, F);
      }
    });
    a.nTable = this, a.oInit = u, f.push(a), a.api = new Sr(a), a.oInstance = b.length === 1 ? b : i.dataTable(), G0(u), u.aLengthMenu && !u.iDisplayLength && (u.iDisplayLength = Array.isArray(u.aLengthMenu[0]) ? u.aLengthMenu[0][0] : Xt.isPlainObject(u.aLengthMenu[0]) ? u.aLengthMenu[0].value : u.aLengthMenu[0]), u = $0(Xt.extend(!0, {}, n), u), La(a.oFeatures, u, [
      "bPaginate",
      "bLengthChange",
      "bFilter",
      "bSort",
      "bSortMulti",
      "bInfo",
      "bProcessing",
      "bAutoWidth",
      "bSortClasses",
      "bServerSide",
      "bDeferRender"
    ]), La(a, u, [
      "ajax",
      "fnFormatNumber",
      "sServerMethod",
      "aaSorting",
      "aaSortingFixed",
      "aLengthMenu",
      "sPaginationType",
      "iStateDuration",
      "bSortCellsTop",
      "iTabIndex",
      "sDom",
      "fnStateLoadCallback",
      "fnStateSaveCallback",
      "renderer",
      "searchDelay",
      "rowId",
      "caption",
      "layout",
      ["iCookieDuration", "iStateDuration"],
      // backwards compat
      ["oSearch", "oPreviousSearch"],
      ["aoSearchCols", "aoPreSearchCols"],
      ["iDisplayLength", "_iDisplayLength"]
    ]), La(a.oScroll, u, [
      ["sScrollX", "sX"],
      ["sScrollXInner", "sXInner"],
      ["sScrollY", "sY"],
      ["bScrollCollapse", "bCollapse"]
    ]), La(a.oLanguage, u, "fnInfoCallback"), $n(a, "aoDrawCallback", u.fnDrawCallback), $n(a, "aoStateSaveParams", u.fnStateSaveParams), $n(a, "aoStateLoadParams", u.fnStateLoadParams), $n(a, "aoStateLoaded", u.fnStateLoaded), $n(a, "aoRowCallback", u.fnRowCallback), $n(a, "aoRowCreatedCallback", u.fnCreatedRow), $n(a, "aoHeaderCallback", u.fnHeaderCallback), $n(a, "aoFooterCallback", u.fnFooterCallback), $n(a, "aoInitComplete", u.fnInitComplete), $n(a, "aoPreDrawCallback", u.fnPreDrawCallback), a.rowIdFn = ui(u.rowId), Xh(a);
    var v = a.oClasses;
    Xt.extend(v, ge.ext.classes, u.oClasses), i.addClass(v.table), a.oFeatures.bPaginate || (u.iDisplayStart = 0), a.iInitDisplayStart === void 0 && (a.iInitDisplayStart = u.iDisplayStart, a._iDisplayStart = u.iDisplayStart);
    var y = a.oLanguage;
    Xt.extend(!0, y, u.oLanguage), y.sUrl ? (Xt.ajax({
      dataType: "json",
      url: y.sUrl,
      success: function(C) {
        Ba(n.oLanguage, C), Xt.extend(!0, y, C, a.oInit.oLanguage), Nr(a, null, "i18n", [a]), Fo(a);
      },
      error: function() {
        qn(a, 0, "i18n file loading error", 21), Fo(a);
      }
    }), r = !0) : Nr(a, null, "i18n", [a]);
    var g = [], e = this.getElementsByTagName("thead"), m = xf(a, e[0]);
    if (u.aoColumns)
      g = u.aoColumns;
    else if (m.length)
      for (d = 0, t = m[0].length; d < t; d++)
        g.push(null);
    for (d = 0, t = g.length; d < t; d++)
      hf(a);
    Kh(a, u.aoColumnDefs, g, m, function(C, E) {
      gs(a, C, E);
    });
    var w = i.children("tbody").find("tr").eq(0);
    if (w.length) {
      var D = function(C, E) {
        return C.getAttribute("data-" + E) !== null ? E : null;
      };
      Xt(w[0]).children("th, td").each(function(C, E) {
        var F = a.aoColumns[C];
        if (F || qn(a, 0, "Incorrect column count", 18), F.mData === C) {
          var x = D(E, "sort") || D(E, "order"), P = D(E, "filter") || D(E, "search");
          (x !== null || P !== null) && (F.mData = {
            _: C + ".display",
            sort: x !== null ? C + ".@data-" + x : void 0,
            type: x !== null ? C + ".@data-" + x : void 0,
            filter: P !== null ? C + ".@data-" + P : void 0
          }, F._isArrayHost = !0, gs(a, C));
        }
      });
    }
    var I = a.oFeatures, T = function() {
      if (u.aaSorting === void 0) {
        var C = a.aaSorting;
        for (d = 0, t = C.length; d < t; d++)
          C[d][1] = a.aoColumns[d].asSorting[0];
      }
      ms(a), $n(a, "aoDrawCallback", function() {
        (a.bSorted || Zn(a) === "ssp" || I.bDeferRender) && ms(a);
      });
      var E = i.children("caption");
      a.caption && (E.length === 0 && (E = Xt("<caption/>").appendTo(i)), E.html(a.caption)), E.length && (E[0]._captionSide = E.css("caption-side"), a.captionNode = E[0]), e.length === 0 && (e = Xt("<thead/>").appendTo(i)), a.nTHead = e[0], Xt("tr", e).addClass(v.thead.row);
      var F = i.children("tbody");
      F.length === 0 && (F = Xt("<tbody/>").insertAfter(e)), a.nTBody = F[0];
      var x = i.children("tfoot");
      if (x.length === 0 && (x = Xt("<tfoot/>").appendTo(i)), a.nTFoot = x[0], Xt("tr", x).addClass(v.tfoot.row), u.aaData)
        for (d = 0; d < u.aaData.length; d++)
          Za(a, u.aaData[d]);
      else
        Zn(a) == "dom" && Ps(a, Xt(a.nTBody).children("tr"));
      a.aiDisplay = a.aiDisplayMaster.slice(), a.bInitialised = !0, r === !1 && Fo(a);
    };
    $n(a, "aoDrawCallback", Wo), u.bStateSave ? (I.bStateSave = !0, dd(a, u, T)) : T();
  }), b = null, this;
};
ge.ext = Vr = {
  /**
   * Buttons. For use with the Buttons extension for DataTables. This is
   * defined here so other extensions can define buttons regardless of load
   * order. It is _not_ used by DataTables core.
   *
   *  @type object
   *  @default {}
   */
  buttons: {},
  /**
   * Element class names
   *
   *  @type object
   *  @default {}
   */
  classes: {},
  /**
   * DataTables build type (expanded by the download builder)
   *
   *  @type string
   */
  builder: "-source-",
  /**
   * Error reporting.
   * 
   * How should DataTables report an error. Can take the value 'alert',
   * 'throw', 'none' or a function.
   *
   *  @type string|function
   *  @default alert
   */
  errMode: "alert",
  /**
   * Legacy so v1 plug-ins don't throw js errors on load
   */
  feature: [],
  /**
   * Feature plug-ins.
   * 
   * This is an object of callbacks which provide the features for DataTables
   * to be initialised via the `layout` option.
   */
  features: {},
  /**
   * Row searching.
   * 
   * This method of searching is complimentary to the default type based
   * searching, and a lot more comprehensive as it allows you complete control
   * over the searching logic. Each element in this array is a function
   * (parameters described below) that is called for every row in the table,
   * and your logic decides if it should be included in the searching data set
   * or not.
   *
   * Searching functions have the following input parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{array|object}` Data for the row to be processed (same as the
   *    original format that was passed in as the data source, or an array
   *    from a DOM data source
   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
   *    can be useful to retrieve the `TR` element if you need DOM interaction.
   *
   * And the following return is expected:
   *
   * * {boolean} Include the row in the searched result set (true) or not
   *   (false)
   *
   * Note that as with the main search ability in DataTables, technically this
   * is "filtering", since it is subtractive. However, for consistency in
   * naming we call it searching here.
   *
   *  @type array
   *  @default []
   *
   *  @example
   *    // The following example shows custom search being applied to the
   *    // fourth column (i.e. the data[3] index) based on two input values
   *    // from the end-user, matching the data in a certain range.
   *    $.fn.dataTable.ext.search.push(
   *      function( settings, data, dataIndex ) {
   *        var min = document.getElementById('min').value * 1;
   *        var max = document.getElementById('max').value * 1;
   *        var version = data[3] == "-" ? 0 : data[3]*1;
   *
   *        if ( min == "" && max == "" ) {
   *          return true;
   *        }
   *        else if ( min == "" && version < max ) {
   *          return true;
   *        }
   *        else if ( min < version && "" == max ) {
   *          return true;
   *        }
   *        else if ( min < version && version < max ) {
   *          return true;
   *        }
   *        return false;
   *      }
   *    );
   */
  search: [],
  /**
   * Selector extensions
   *
   * The `selector` option can be used to extend the options available for the
   * selector modifier options (`selector-modifier` object data type) that
   * each of the three built in selector types offer (row, column and cell +
   * their plural counterparts). For example the Select extension uses this
   * mechanism to provide an option to select only rows, columns and cells
   * that have been marked as selected by the end user (`{selected: true}`),
   * which can be used in conjunction with the existing built in selector
   * options.
   *
   * Each property is an array to which functions can be pushed. The functions
   * take three attributes:
   *
   * * Settings object for the host table
   * * Options object (`selector-modifier` object type)
   * * Array of selected item indexes
   *
   * The return is an array of the resulting item indexes after the custom
   * selector has been applied.
   *
   *  @type object
   */
  selector: {
    cell: [],
    column: [],
    row: []
  },
  /**
   * Legacy configuration options. Enable and disable legacy options that
   * are available in DataTables.
   *
   *  @type object
   */
  legacy: {
    /**
     * Enable / disable DataTables 1.9 compatible server-side processing
     * requests
     *
     *  @type boolean
     *  @default null
     */
    ajax: null
  },
  /**
   * Pagination plug-in methods.
   * 
   * Each entry in this object is a function and defines which buttons should
   * be shown by the pagination rendering method that is used for the table:
   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
   * buttons are displayed in the document, while the functions here tell it
   * what buttons to display. This is done by returning an array of button
   * descriptions (what each button will do).
   *
   * Pagination types (the four built in options and any additional plug-in
   * options defined here) can be used through the `paginationType`
   * initialisation parameter.
   *
   * The functions defined take two parameters:
   *
   * 1. `{int} page` The current page index
   * 2. `{int} pages` The number of pages in the table
   *
   * Each function is expected to return an array where each element of the
   * array can be one of:
   *
   * * `first` - Jump to first page when activated
   * * `last` - Jump to last page when activated
   * * `previous` - Show previous page when activated
   * * `next` - Show next page when activated
   * * `{int}` - Show page of the index given
   * * `{array}` - A nested array containing the above elements to add a
   *   containing 'DIV' element (might be useful for styling).
   *
   * Note that DataTables v1.9- used this object slightly differently whereby
   * an object with two functions would be defined for each plug-in. That
   * ability is still supported by DataTables 1.10+ to provide backwards
   * compatibility, but this option of use is now decremented and no longer
   * documented in DataTables 1.10+.
   *
   *  @type object
   *  @default {}
   *
   *  @example
   *    // Show previous, next and current page buttons only
   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
   *      return [ 'previous', page, 'next' ];
   *    };
   */
  pager: {},
  renderer: {
    pageButton: {},
    header: {}
  },
  /**
   * Ordering plug-ins - custom data source
   * 
   * The extension options for ordering of data available here is complimentary
   * to the default type based ordering that DataTables typically uses. It
   * allows much greater control over the the data that is being used to
   * order a column, but is necessarily therefore more complex.
   * 
   * This type of ordering is useful if you want to do ordering based on data
   * live from the DOM (for example the contents of an 'input' element) rather
   * than just the static string that DataTables knows of.
   * 
   * The way these plug-ins work is that you create an array of the values you
   * wish to be ordering for the column in question and then return that
   * array. The data in the array much be in the index order of the rows in
   * the table (not the currently ordering order!). Which order data gathering
   * function is run here depends on the `dt-init columns.orderDataType`
   * parameter that is used for the column (if any).
   *
   * The functions defined take two parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{int}` Target column index
   *
   * Each function is expected to return an array:
   *
   * * `{array}` Data for the column to be ordering upon
   *
   *  @type array
   *
   *  @example
   *    // Ordering using `input` node values
   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
   *    {
   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
   *        return $('input', td).val();
   *      } );
   *    }
   */
  order: {},
  /**
   * Type based plug-ins.
   *
   * Each column in DataTables has a type assigned to it, either by automatic
   * detection or by direct assignment using the `type` option for the column.
   * The type of a column will effect how it is ordering and search (plug-ins
   * can also make use of the column type if required).
   *
   * @namespace
   */
  type: {
    /**
     * Automatic column class assignment
     */
    className: {},
    /**
     * Type detection functions.
     *
     * The functions defined in this object are used to automatically detect
     * a column's type, making initialisation of DataTables super easy, even
     * when complex data is in the table.
     *
     * The functions defined take two parameters:
     *
        *  1. `{*}` Data from the column cell to be analysed
        *  2. `{settings}` DataTables settings object. This can be used to
        *     perform context specific type detection - for example detection
        *     based on language settings such as using a comma for a decimal
        *     place. Generally speaking the options from the settings will not
        *     be required
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Data type detected, or null if unknown (and thus
     *   pass it on to the other type detection functions.
     *
     *  @type array
     *
     *  @example
     *    // Currency type detection plug-in:
     *    $.fn.dataTable.ext.type.detect.push(
     *      function ( data, settings ) {
     *        // Check the numeric part
     *        if ( ! data.substring(1).match(/[0-9]/) ) {
     *          return null;
     *        }
     *
     *        // Check prefixed by currency
     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
     *          return 'currency';
     *        }
     *        return null;
     *      }
     *    );
     */
    detect: [],
    /**
     * Automatic renderer assignment
     */
    render: {},
    /**
     * Type based search formatting.
     *
     * The type based searching functions can be used to pre-format the
     * data to be search on. For example, it can be used to strip HTML
     * tags or to de-format telephone numbers for numeric only searching.
     *
     * Note that is a search is not defined for a column of a given type,
     * no search formatting will be performed.
     * 
     * Pre-processing of searching data plug-ins - When you assign the sType
     * for a column (or have it automatically detected for you by DataTables
     * or a type detection plug-in), you will typically be using this for
     * custom sorting, but it can also be used to provide custom searching
     * by allowing you to pre-processing the data and returning the data in
     * the format that should be searched upon. This is done by adding
     * functions this object with a parameter name which matches the sType
     * for that target column. This is the corollary of <i>afnSortData</i>
     * for searching data.
     *
     * The functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for searching
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Formatted string that will be used for the searching.
     *
     *  @type object
     *  @default {}
     *
     *  @example
     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
     *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
     *    }
     */
    search: {},
    /**
     * Type based ordering.
     *
     * The column type tells DataTables what ordering to apply to the table
     * when a column is sorted upon. The order for each type that is defined,
     * is defined by the functions available in this object.
     *
     * Each ordering option can be described by three properties added to
     * this object:
     *
     * * `{type}-pre` - Pre-formatting function
     * * `{type}-asc` - Ascending order function
     * * `{type}-desc` - Descending order function
     *
     * All three can be used together, only `{type}-pre` or only
     * `{type}-asc` and `{type}-desc` together. It is generally recommended
     * that only `{type}-pre` is used, as this provides the optimal
     * implementation in terms of speed, although the others are provided
     * for compatibility with existing Javascript sort functions.
     *
     * `{type}-pre`: Functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for ordering
     *
     * And return:
     *
     * * `{*}` Data to be sorted upon
     *
     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
     * functions, taking two parameters:
     *
        *  1. `{*}` Data to compare to the second parameter
        *  2. `{*}` Data to compare to the first parameter
     *
     * And returning:
     *
     * * `{*}` Ordering match: <0 if first parameter should be sorted lower
     *   than the second parameter, ===0 if the two parameters are equal and
     *   >0 if the first parameter should be sorted height than the second
     *   parameter.
     * 
     *  @type object
     *  @default {}
     *
     *  @example
     *    // Numeric ordering of formatted numbers with a pre-formatter
     *    $.extend( $.fn.dataTable.ext.type.order, {
     *      "string-pre": function(x) {
     *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
     *        return parseFloat( a );
     *      }
     *    } );
     *
     *  @example
     *    // Case-sensitive string ordering, with no pre-formatting method
     *    $.extend( $.fn.dataTable.ext.order, {
     *      "string-case-asc": function(x,y) {
     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
     *      },
     *      "string-case-desc": function(x,y) {
     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
     *      }
     *    } );
     */
    order: {}
  },
  /**
   * Unique DataTables instance counter
   *
   * @type int
   * @private
   */
  _unique: 0,
  //
  // Depreciated
  // The following properties are retained for backwards compatibility only.
  // The should not be used in new projects and will be removed in a future
  // version
  //
  /**
   * Version check function.
   *  @type function
   *  @depreciated Since 1.10
   */
  fnVersionCheck: ge.fnVersionCheck,
  /**
   * Index for what 'this' index API functions should use
   *  @type int
   *  @deprecated Since v1.10
   */
  iApiIndex: 0,
  /**
   * Software version
   *  @type string
   *  @deprecated Since v1.10
   */
  sVersion: ge.version
};
Xt.extend(Vr, {
  afnFiltering: Vr.search,
  aTypes: Vr.type.detect,
  ofnSearch: Vr.type.search,
  oSort: Vr.type.order,
  afnSortData: Vr.order,
  aoFeatures: Vr.feature,
  oStdClasses: Vr.classes,
  oPagination: Vr.pager
});
Xt.extend(ge.ext.classes, {
  container: "dt-container",
  empty: {
    row: "dt-empty"
  },
  info: {
    container: "dt-info"
  },
  length: {
    container: "dt-length",
    select: "dt-input"
  },
  order: {
    canAsc: "dt-orderable-asc",
    canDesc: "dt-orderable-desc",
    isAsc: "dt-ordering-asc",
    isDesc: "dt-ordering-desc",
    none: "dt-orderable-none",
    position: "sorting_"
  },
  processing: {
    container: "dt-processing"
  },
  scrolling: {
    body: "dt-scroll-body",
    container: "dt-scroll",
    footer: {
      self: "dt-scroll-foot",
      inner: "dt-scroll-footInner"
    },
    header: {
      self: "dt-scroll-head",
      inner: "dt-scroll-headInner"
    }
  },
  search: {
    container: "dt-search",
    input: "dt-input"
  },
  table: "dataTable",
  tbody: {
    cell: "",
    row: ""
  },
  thead: {
    cell: "",
    row: ""
  },
  tfoot: {
    cell: "",
    row: ""
  },
  paging: {
    active: "current",
    button: "dt-paging-button",
    container: "dt-paging",
    disabled: "disabled"
  }
});
var Vr, Sr, Ke, Xr, ls = {}, Wh = /[\r\n\u2028]/g, Cs = /<.*?>/g, Hh = /^\d{2,4}[./-]\d{1,2}[./-]\d{1,2}([T ]{1}\d{1,2}[:.]\d{2}([.:]\d{2})?)?$/, jh = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")", "g"), Es = /['\u00A0,$Â£â¬Â¥%\u2009\u202F\u20BD\u20a9\u20BArfkÉÎ]/gi, Aa = function(s) {
  return !s || s === !0 || s === "-";
}, sf = function(s) {
  var p = parseInt(s, 10);
  return !isNaN(p) && isFinite(s) ? p : null;
}, ff = function(s, p) {
  return ls[p] || (ls[p] = new RegExp(ys(p), "g")), typeof s == "string" && p !== "." ? s.replace(/\./g, "").replace(ls[p], ".") : s;
}, Ts = function(s, p, b) {
  var A = typeof s, R = A === "string";
  return A === "number" || A === "bigint" || Aa(s) ? !0 : (p && R && (s = ff(s, p)), b && R && (s = s.replace(Es, "")), !isNaN(parseFloat(s)) && isFinite(s));
}, Gh = function(s) {
  return Aa(s) || typeof s == "string";
}, lf = function(s, p, b) {
  if (Aa(s))
    return !0;
  if (typeof s == "string" && s.match(/<(input|select)/i))
    return null;
  var A = Gh(s);
  return A && Ts(li(s), p, b) ? !0 : null;
}, Xn = function(s, p, b) {
  var A = [], R = 0, B = s.length;
  if (b !== void 0)
    for (; R < B; R++)
      s[R] && s[R][p] && A.push(s[R][p][b]);
  else
    for (; R < B; R++)
      s[R] && A.push(s[R][p]);
  return A;
}, Gi = function(s, p, b, A) {
  var R = [], B = 0, u = p.length;
  if (A !== void 0)
    for (; B < u; B++)
      s[p[B]][b] && R.push(s[p[B]][b][A]);
  else
    for (; B < u; B++)
      s[p[B]] && R.push(s[p[B]][b]);
  return R;
}, Pa = function(s, p) {
  var b = [], A;
  p === void 0 ? (p = 0, A = s) : (A = p, p = s);
  for (var R = p; R < A; R++)
    b.push(R);
  return b;
}, uf = function(s) {
  for (var p = [], b = 0, A = s.length; b < A; b++)
    s[b] && p.push(s[b]);
  return p;
}, li = function(s) {
  return s.replace(Cs, "").replace(/<script/i, "");
}, si = function(s) {
  return Array.isArray(s) && (s = s.join(",")), typeof s == "string" ? s.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;") : s;
}, ps = function(s, p) {
  if (typeof s != "string")
    return s;
  var b = s.normalize("NFD");
  return b.length !== s.length ? (p === !0 ? s + " " : "") + b.replace(/[\u0300-\u036f]/g, "") : b;
}, Vh = function(s) {
  if (s.length < 2)
    return !0;
  for (var p = s.slice().sort(), b = p[0], A = 1, R = p.length; A < R; A++) {
    if (p[A] === b)
      return !1;
    b = p[A];
  }
  return !0;
}, Xa = function(s) {
  if (Array.from && Set)
    return Array.from(new Set(s));
  if (Vh(s))
    return s.slice();
  var p = [], b, A, R = s.length, B, u = 0;
  t:
    for (A = 0; A < R; A++) {
      for (b = s[A], B = 0; B < u; B++)
        if (p[B] === b)
          continue t;
      p.push(b), u++;
    }
  return p;
}, Fs = function(s, p) {
  if (Array.isArray(p))
    for (var b = 0; b < p.length; b++)
      Fs(s, p[b]);
  else
    s.push(p);
  return s;
};
function fi(s, p) {
  p && p.split(" ").forEach(function(b) {
    b && s.classList.add(b);
  });
}
ge.util = {
  /**
   * Return a string with diacritic characters decomposed
   * @param {*} mixed Function or string to normalize
   * @param {*} both Return original string and the normalized string
   * @returns String or undefined
   */
  diacritics: function(s, p) {
    var b = typeof s;
    if (b !== "function")
      return ps(s, p);
    ps = s;
  },
  /**
   * Debounce a function
   *
   * @param {function} fn Function to be called
   * @param {integer} freq Call frequency in mS
   * @return {function} Wrapped function
   */
  debounce: function(s, p) {
    var b;
    return function() {
      var A = this, R = arguments;
      clearTimeout(b), b = setTimeout(function() {
        s.apply(A, R);
      }, p || 250);
    };
  },
  /**
   * Throttle the calls to a function. Arguments and context are maintained
   * for the throttled function.
   *
   * @param {function} fn Function to be called
   * @param {integer} freq Call frequency in mS
   * @return {function} Wrapped function
   */
  throttle: function(s, p) {
    var b = p !== void 0 ? p : 200, A, R;
    return function() {
      var B = this, u = +/* @__PURE__ */ new Date(), d = arguments;
      A && u < A + b ? (clearTimeout(R), R = setTimeout(function() {
        A = void 0, s.apply(B, d);
      }, b)) : (A = u, s.apply(B, d));
    };
  },
  /**
   * Escape a string such that it can be used in a regular expression
   *
   *  @param {string} val string to escape
   *  @returns {string} escaped string
   */
  escapeRegex: function(s) {
    return s.replace(jh, "\\$1");
  },
  /**
   * Create a function that will write to a nested object or array
   * @param {*} source JSON notation string
   * @returns Write function
   */
  set: function(s) {
    if (Xt.isPlainObject(s))
      return ge.util.set(s._);
    if (s === null)
      return function() {
      };
    if (typeof s == "function")
      return function(b, A, R) {
        s(b, "set", A, R);
      };
    if (typeof s == "string" && (s.indexOf(".") !== -1 || s.indexOf("[") !== -1 || s.indexOf("(") !== -1)) {
      var p = function(b, A, R) {
        for (var B = X0(R), u, d = B[B.length - 1], t, o, r, n, i = 0, f = B.length - 1; i < f; i++) {
          if (B[i] === "__proto__" || B[i] === "constructor")
            throw new Error("Cannot set prototype values");
          if (t = B[i].match(Mi), o = B[i].match(ri), t) {
            if (B[i] = B[i].replace(Mi, ""), b[B[i]] = [], u = B.slice(), u.splice(0, i + 1), n = u.join("."), Array.isArray(A))
              for (var l = 0, c = A.length; l < c; l++)
                r = {}, p(r, A[l], n), b[B[i]].push(r);
            else
              b[B[i]] = A;
            return;
          } else
            o && (B[i] = B[i].replace(ri, ""), b = b[B[i]](A));
          (b[B[i]] === null || b[B[i]] === void 0) && (b[B[i]] = {}), b = b[B[i]];
        }
        d.match(ri) ? b = b[d.replace(ri, "")](A) : b[d.replace(Mi, "")] = A;
      };
      return function(b, A) {
        return p(b, A, s);
      };
    } else
      return function(b, A) {
        b[s] = A;
      };
  },
  /**
   * Create a function that will read nested objects from arrays, based on JSON notation
   * @param {*} source JSON notation string
   * @returns Value read
   */
  get: function(s) {
    if (Xt.isPlainObject(s)) {
      var p = {};
      return Xt.each(s, function(A, R) {
        R && (p[A] = ge.util.get(R));
      }), function(A, R, B, u) {
        var d = p[R] || p._;
        return d !== void 0 ? d(A, R, B, u) : A;
      };
    } else {
      if (s === null)
        return function(A) {
          return A;
        };
      if (typeof s == "function")
        return function(A, R, B, u) {
          return s(A, R, B, u);
        };
      if (typeof s == "string" && (s.indexOf(".") !== -1 || s.indexOf("[") !== -1 || s.indexOf("(") !== -1)) {
        var b = function(A, R, B) {
          var u, d, t, o;
          if (B !== "")
            for (var r = X0(B), n = 0, i = r.length; n < i; n++) {
              if (u = r[n].match(Mi), d = r[n].match(ri), u) {
                if (r[n] = r[n].replace(Mi, ""), r[n] !== "" && (A = A[r[n]]), t = [], r.splice(0, n + 1), o = r.join("."), Array.isArray(A))
                  for (var f = 0, l = A.length; f < l; f++)
                    t.push(b(A[f], R, o));
                var c = u[0].substring(1, u[0].length - 1);
                A = c === "" ? t : t.join(c);
                break;
              } else if (d) {
                r[n] = r[n].replace(ri, ""), A = A[r[n]]();
                continue;
              }
              if (A === null || A[r[n]] === null)
                return null;
              if (A === void 0 || A[r[n]] === void 0)
                return;
              A = A[r[n]];
            }
          return A;
        };
        return function(A, R) {
          return b(A, R, s);
        };
      } else
        return function(A) {
          return A[s];
        };
    }
  },
  stripHtml: function(s) {
    var p = typeof s;
    if (p === "function") {
      li = s;
      return;
    } else if (p === "string")
      return li(s);
    return s;
  },
  escapeHtml: function(s) {
    var p = typeof s;
    if (p === "function") {
      si = s;
      return;
    } else if (p === "string" || Array.isArray(s))
      return si(s);
    return s;
  },
  unique: Xa
};
function Lo(s) {
  var p = "a aa ai ao as b fn i m o s ", b, A, R = {};
  Xt.each(s, function(B) {
    b = B.match(/^([^A-Z]+?)([A-Z])/), b && p.indexOf(b[1] + " ") !== -1 && (A = B.replace(b[0], b[2].toLowerCase()), R[A] = B, b[1] === "o" && Lo(s[B]));
  }), s._hungarianMap = R;
}
function Ba(s, p, b) {
  s._hungarianMap || Lo(s);
  var A;
  Xt.each(p, function(R) {
    A = s._hungarianMap[R], A !== void 0 && (b || p[A] === void 0) && (A.charAt(0) === "o" ? (p[A] || (p[A] = {}), Xt.extend(!0, p[A], p[R]), Ba(s[A], p[A], b)) : p[A] = p[R]);
  });
}
var Wn = function(s, p, b) {
  s[p] !== void 0 && (s[b] = s[p]);
};
function G0(s) {
  Wn(s, "ordering", "bSort"), Wn(s, "orderMulti", "bSortMulti"), Wn(s, "orderClasses", "bSortClasses"), Wn(s, "orderCellsTop", "bSortCellsTop"), Wn(s, "order", "aaSorting"), Wn(s, "orderFixed", "aaSortingFixed"), Wn(s, "paging", "bPaginate"), Wn(s, "pagingType", "sPaginationType"), Wn(s, "pageLength", "iDisplayLength"), Wn(s, "searching", "bFilter"), typeof s.sScrollX == "boolean" && (s.sScrollX = s.sScrollX ? "100%" : ""), typeof s.scrollX == "boolean" && (s.scrollX = s.scrollX ? "100%" : "");
  var p = s.aoSearchCols;
  if (p)
    for (var b = 0, A = p.length; b < A; b++)
      p[b] && Ba(ge.models.oSearch, p[b]);
  s.serverSide && !s.searchDelay && (s.searchDelay = 400);
}
function cf(s) {
  Wn(s, "orderable", "bSortable"), Wn(s, "orderData", "aDataSort"), Wn(s, "orderSequence", "asSorting"), Wn(s, "orderDataType", "sortDataType");
  var p = s.aDataSort;
  typeof p == "number" && !Array.isArray(p) && (s.aDataSort = [p]);
}
function Xh(s) {
  if (!ge.__browser) {
    var p = {};
    ge.__browser = p;
    var b = Xt("<div/>").css({
      position: "fixed",
      top: 0,
      left: -1 * window.pageXOffset,
      // allow for scrolling
      height: 1,
      width: 1,
      overflow: "hidden"
    }).append(
      Xt("<div/>").css({
        position: "absolute",
        top: 1,
        left: 1,
        width: 100,
        overflow: "scroll"
      }).append(
        Xt("<div/>").css({
          width: "100%",
          height: 10
        })
      )
    ).appendTo("body"), A = b.children(), R = A.children();
    p.barWidth = A[0].offsetWidth - A[0].clientWidth, p.bScrollbarLeft = Math.round(R.offset().left) !== 1, b.remove();
  }
  Xt.extend(s.oBrowser, ge.__browser), s.oScroll.iBarWidth = ge.__browser.barWidth;
}
function hf(s) {
  var p = ge.defaults.column, b = s.aoColumns.length, A = Xt.extend({}, ge.models.oColumn, p, {
    aDataSort: p.aDataSort ? p.aDataSort : [b],
    mData: p.mData ? p.mData : b,
    idx: b,
    searchFixed: {},
    colEl: Xt("<col>")
  });
  s.aoColumns.push(A);
  var R = s.aoPreSearchCols;
  R[b] = Xt.extend({}, ge.models.oSearch, R[b]);
}
function gs(s, p, b) {
  var A = s.aoColumns[p];
  if (b != null) {
    cf(b), Ba(ge.defaults.column, b, !0), b.mDataProp !== void 0 && !b.mData && (b.mData = b.mDataProp), b.sType && (A._sManualType = b.sType), b.className && !b.sClass && (b.sClass = b.className);
    var R = A.sClass;
    Xt.extend(A, b), La(A, b, "sWidth", "sWidthOrig"), R !== A.sClass && (A.sClass = R + " " + A.sClass), b.iDataSort !== void 0 && (A.aDataSort = [b.iDataSort]), La(A, b, "aDataSort");
  }
  var B = A.mData, u = ui(B);
  if (A.mRender && Array.isArray(A.mRender)) {
    var d = A.mRender.slice(), t = d.shift();
    A.mRender = ge.render[t].apply(window, d);
  }
  A._render = A.mRender ? ui(A.mRender) : null;
  var o = function(r) {
    return typeof r == "string" && r.indexOf("@") !== -1;
  };
  A._bAttrSrc = Xt.isPlainObject(B) && (o(B.sort) || o(B.type) || o(B.filter)), A._setter = null, A.fnGetData = function(r, n, i) {
    var f = u(r, n, void 0, i);
    return A._render && n ? A._render(f, n, r, i) : f;
  }, A.fnSetData = function(r, n, i) {
    return Va(B)(r, n, i);
  }, typeof B != "number" && !A._isArrayHost && (s._rowReadObject = !0), s.oFeatures.bSort || (A.bSortable = !1);
}
function No(s) {
  sd(s), Zh(s);
  var p = s.oScroll;
  (p.sY !== "" || p.sX !== "") && Sf(s), Nr(s, null, "column-sizing", [s]);
}
function Zh(s) {
  for (var p = s.aoColumns, b = 0; b < p.length; b++) {
    var A = vf(s, [b], !1, !1);
    p[b].colEl.css("width", A);
  }
}
function df(s, p) {
  var b = Is(s, "bVisible");
  return typeof b[p] == "number" ? b[p] : null;
}
function Vi(s, p) {
  var b = Is(s, "bVisible"), A = b.indexOf(p);
  return A !== -1 ? A : null;
}
function Mo(s) {
  var p = s.aoHeader, b = s.aoColumns, A = 0;
  if (p.length)
    for (var R = 0, B = p[0].length; R < B; R++)
      b[R].bVisible && Xt(p[0][R].cell).css("display") !== "none" && A++;
  return A;
}
function Is(s, p) {
  var b = [];
  return s.aoColumns.map(function(A, R) {
    A[p] && b.push(R);
  }), b;
}
function Ds(s) {
  var p = s.aoColumns, b = s.aoData, A = ge.ext.type.detect, R, B, u, d, t, o, r, n, i;
  for (R = 0, B = p.length; R < B; R++) {
    if (r = p[R], i = [], !r.sType && r._sManualType)
      r.sType = r._sManualType;
    else if (!r.sType) {
      for (u = 0, d = A.length; u < d; u++) {
        for (t = 0, o = b.length; t < o && !(b[t] && (i[t] === void 0 && (i[t] = ta(s, t, R, "type")), n = A[u](i[t], s), !n && u !== A.length - 2 || n === "html" && !Aa(i[t]))); t++)
          ;
        if (n) {
          r.sType = n;
          break;
        }
      }
      r.sType || (r.sType = "string");
    }
    var f = Vr.type.className[r.sType];
    f && (V0(s.aoHeader, R, f), V0(s.aoFooter, R, f));
    var l = Vr.type.render[r.sType];
    l && !r._render && (r._render = ge.util.get(l), Yh(s, R));
  }
}
function Yh(s, p) {
  for (var b = s.aoData, A = 0; A < b.length; A++)
    if (b[A].nTr) {
      var R = ta(s, A, p, "display");
      b[A].displayData[p] = R, Io(b[A].anCells[p], R);
    }
}
function V0(s, p, b) {
  s.forEach(function(A) {
    A[p].unique && fi(A[p].cell, b);
  });
}
function Kh(s, p, b, A, R) {
  var B, u, d, t, o, r, n, i = s.aoColumns;
  if (b)
    for (B = 0, u = b.length; B < u; B++)
      b[B] && b[B].name && (i[B].sName = b[B].name);
  if (p)
    for (B = p.length - 1; B >= 0; B--) {
      n = p[B];
      var f = n.target !== void 0 ? n.target : n.targets !== void 0 ? n.targets : n.aTargets;
      for (Array.isArray(f) || (f = [f]), d = 0, t = f.length; d < t; d++) {
        var l = f[d];
        if (typeof l == "number" && l >= 0) {
          for (; i.length <= l; )
            hf(s);
          R(l, n);
        } else if (typeof l == "number" && l < 0)
          R(i.length + l, n);
        else if (typeof l == "string")
          for (o = 0, r = i.length; o < r; o++)
            l.indexOf(":name") !== -1 ? i[o].sName === l.replace(":name", "") && R(o, n) : A.forEach(function(c) {
              var h = Xt(c[o].cell);
              l.match(/^[a-z][\w-]*$/i) && (l = "." + l), (l === "_all" || h.is(l)) && R(o, n);
            });
      }
    }
  if (b)
    for (B = 0, u = b.length; B < u; B++)
      R(B, b[B]);
}
function vf(s, p, b, A) {
  Array.isArray(p) || (p = Os(p));
  for (var R = 0, B, u = s.aoColumns, d = 0, t = p.length; d < t; d++) {
    var o = u[p[d]], r = b ? o.sWidthOrig : o.sWidth;
    if (!(!A && o.bVisible === !1)) {
      if (r == null)
        return null;
      if (typeof r == "number")
        B = "px", R += r;
      else {
        var n = r.match(/([\d\.]+)([^\d]*)/);
        n && (R += n[1] * 1, B = n.length === 3 ? n[2] : "px");
      }
    }
  }
  return R + B;
}
function Os(s) {
  var p = Xt(s).closest("[data-dt-column]").attr("data-dt-column");
  return p ? p.split(",").map(function(b) {
    return b * 1;
  }) : [];
}
function Za(s, p, b, A) {
  var R = s.aoData.length, B = Xt.extend(!0, {}, ge.models.oRow, {
    src: b ? "dom" : "data",
    idx: R
  });
  B._aData = p, s.aoData.push(B);
  for (var u = s.aoColumns, d = 0, t = u.length; d < t; d++)
    u[d].sType = null;
  s.aiDisplayMaster.push(R);
  var o = s.rowIdFn(p);
  return o !== void 0 && (s.aIds[o] = B), (b || !s.oFeatures.bDeferRender) && gf(s, R, b, A), R;
}
function Ps(s, p) {
  var b;
  return p instanceof Xt || (p = Xt(p)), p.map(function(A, R) {
    return b = pf(s, R), Za(s, b.data, R, b.cells);
  });
}
function ta(s, p, b, A) {
  A === "search" ? A = "filter" : A === "order" && (A = "sort");
  var R = s.iDraw, B = s.aoColumns[b], u = s.aoData[p]._aData, d = B.sDefaultContent, t = B.fnGetData(u, A, {
    settings: s,
    row: p,
    col: b
  });
  if (A !== "display" && t && typeof t == "object" && t.nodeName && (t = t.innerHTML), t === void 0)
    return s.iDrawError != R && d === null && (qn(s, 0, "Requested unknown parameter " + (typeof B.mData == "function" ? "{function}" : "'" + B.mData + "'") + " for row " + p + ", column " + b, 4), s.iDrawError = R), d;
  if ((t === u || t === null) && d !== null && A !== void 0)
    t = d;
  else if (typeof t == "function")
    return t.call(u);
  if (t === null && A === "display")
    return "";
  if (A === "filter") {
    var o = ge.ext.type.search;
    o[B.sType] && (t = o[B.sType](t));
  }
  return t;
}
function Jh(s, p, b, A) {
  var R = s.aoColumns[b], B = s.aoData[p]._aData;
  R.fnSetData(B, A, {
    settings: s,
    row: p,
    col: b
  });
}
function Io(s, p) {
  p && typeof p == "object" && p.nodeName ? Xt(s).empty().append(p) : s.innerHTML = p;
}
var Mi = /\[.*?\]$/, ri = /\(\)$/;
function X0(s) {
  var p = s.match(/(\\.|[^.])+/g) || [""];
  return p.map(function(b) {
    return b.replace(/\\\./g, ".");
  });
}
var ui = ge.util.get, Va = ge.util.set;
function Z0(s) {
  return Xn(s.aoData, "_aData");
}
function Bs(s) {
  s.aoData.length = 0, s.aiDisplayMaster.length = 0, s.aiDisplay.length = 0, s.aIds = {};
}
function ko(s, p, b, A) {
  var R = s.aoData[p], B, u;
  if (R._aSortData = null, R._aFilterData = null, R.displayData = null, b === "dom" || (!b || b === "auto") && R.src === "dom")
    R._aData = pf(
      s,
      R,
      A,
      A === void 0 ? void 0 : R._aData
    ).data;
  else {
    var d = R.anCells, t = Rs(s, p);
    if (d)
      if (A !== void 0)
        Io(d[A], t[A]);
      else
        for (B = 0, u = d.length; B < u; B++)
          Io(d[B], t[B]);
  }
  var o = s.aoColumns;
  if (A !== void 0)
    o[A].sType = null, o[A].maxLenString = null;
  else {
    for (B = 0, u = o.length; B < u; B++)
      o[B].sType = null, o[B].maxLenString = null;
    yf(s, R);
  }
}
function pf(s, p, b, A) {
  var R = [], B = p.firstChild, u, d, t = 0, o, r = s.aoColumns, n = s._rowReadObject;
  A = A !== void 0 ? A : n ? {} : [];
  var i = function(v, y) {
    if (typeof v == "string") {
      var g = v.indexOf("@");
      if (g !== -1) {
        var e = v.substring(g + 1), m = Va(v);
        m(A, y.getAttribute(e));
      }
    }
  }, f = function(v) {
    if (b === void 0 || b === t)
      if (d = r[t], o = v.innerHTML.trim(), d && d._bAttrSrc) {
        var y = Va(d.mData._);
        y(A, o), i(d.mData.sort, v), i(d.mData.type, v), i(d.mData.filter, v);
      } else
        n ? (d._setter || (d._setter = Va(d.mData)), d._setter(A, o)) : A[t] = o;
    t++;
  };
  if (B)
    for (; B; )
      u = B.nodeName.toUpperCase(), (u == "TD" || u == "TH") && (f(B), R.push(B)), B = B.nextSibling;
  else {
    R = p.anCells;
    for (var l = 0, c = R.length; l < c; l++)
      f(R[l]);
  }
  var h = p.firstChild ? p : p.nTr;
  if (h) {
    var a = h.getAttribute("id");
    a && Va(s.rowId)(A, a);
  }
  return {
    data: A,
    cells: R
  };
}
function Rs(s, p) {
  let b = s.aoData[p], A = s.aoColumns;
  if (!b.displayData) {
    b.displayData = [];
    for (var R = 0, B = A.length; R < B; R++)
      b.displayData.push(
        ta(s, p, R, "display")
      );
  }
  return b.displayData;
}
function gf(s, p, b, A) {
  var R = s.aoData[p], B = R._aData, u = [], d, t, o, r, n, i, f = s.oClasses.tbody.row;
  if (R.nTr === null) {
    for (d = b || document.createElement("tr"), R.nTr = d, R.anCells = u, fi(d, f), d._DT_RowIndex = p, yf(s, R), r = 0, n = s.aoColumns.length; r < n; r++) {
      o = s.aoColumns[r], i = !b, t = i ? document.createElement(o.sCellType) : A[r], t || qn(s, 0, "Incorrect column count", 18), t._DT_CellIndex = {
        row: p,
        column: r
      }, u.push(t);
      var l = Rs(s, p);
      (i || (o.mRender || o.mData !== r) && (!Xt.isPlainObject(o.mData) || o.mData._ !== r + ".display")) && Io(t, l[r]), o.bVisible && !b ? d.appendChild(t) : !o.bVisible && b && t.parentNode.removeChild(t), o.fnCreatedCell && o.fnCreatedCell.call(
        s.oInstance,
        t,
        ta(s, p, r),
        B,
        p,
        r
      );
    }
    Nr(s, "aoRowCreatedCallback", "row-created", [d, B, p, u]);
  } else
    fi(R.nTr, f);
}
function yf(s, p) {
  var b = p.nTr, A = p._aData;
  if (b) {
    var R = s.rowIdFn(A);
    if (R && (b.id = R), A.DT_RowClass) {
      var B = A.DT_RowClass.split(" ");
      p.__rowc = p.__rowc ? Xa(p.__rowc.concat(B)) : B, Xt(b).removeClass(p.__rowc.join(" ")).addClass(A.DT_RowClass);
    }
    A.DT_RowAttr && Xt(b).attr(A.DT_RowAttr), A.DT_RowData && Xt(b).data(A.DT_RowData);
  }
}
function Y0(s, p) {
  var b = s.oClasses, A = s.aoColumns, R, B, u, d = p === "header" ? s.nTHead : s.nTFoot, t = p === "header" ? "sTitle" : p;
  if (d) {
    if (Xt("th, td", d).length === 0 && (p === "header" || Xn(s.aoColumns, t).join("")))
      for (u = Xt("<tr/>").appendTo(d), R = 0, B = A.length; R < B; R++)
        Xt("<th/>").html(A[R][t] || "").appendTo(u);
    var o = xf(s, d, !0);
    p === "header" ? s.aoHeader = o : s.aoFooter = o, Xt(d).children("tr").attr("role", "row"), Xt(d).children("tr").children("th, td").each(function() {
      Po(s, p)(
        s,
        Xt(this),
        b
      );
    });
  }
}
function mf(s, p, b) {
  var A, R, B, u = [], d = [], t = s.aoColumns, o = t.length, r, n;
  if (p) {
    for (b || (b = Pa(o).filter(function(f) {
      return t[f].bVisible;
    })), A = 0; A < p.length; A++)
      u[A] = p[A].slice().filter(function(f, l) {
        return b.includes(l);
      }), d.push([]);
    for (A = 0; A < u.length; A++)
      for (R = 0; R < u[A].length; R++)
        if (r = 1, n = 1, d[A][R] === void 0) {
          for (B = u[A][R].cell; u[A + r] !== void 0 && u[A][R].cell == u[A + r][R].cell; )
            d[A + r][R] = null, r++;
          for (; u[A][R + n] !== void 0 && u[A][R].cell == u[A][R + n].cell; ) {
            for (var i = 0; i < r; i++)
              d[A + i][R + n] = null;
            n++;
          }
          d[A][R] = {
            cell: B,
            colspan: n,
            rowspan: r,
            title: Xt("span.dt-column-title", B).html()
          };
        }
    return d;
  }
}
function Do(s, p) {
  for (var b = mf(s, p), A, R, B = 0; B < p.length; B++) {
    if (A = p[B].row, A)
      for (; R = A.firstChild; )
        A.removeChild(R);
    for (var u = 0; u < b[B].length; u++) {
      var d = b[B][u];
      d && Xt(d.cell).appendTo(A).attr("rowspan", d.rowspan).attr("colspan", d.colspan);
    }
  }
}
function hi(s, p) {
  qh(s);
  var b = Nr(s, "aoPreDrawCallback", "preDraw", [s]);
  if (b.indexOf(!1) !== -1) {
    _n(s, !1);
    return;
  }
  var A = [], R = 0, B = Zn(s) == "ssp", u = s.aiDisplay, d = s._iDisplayStart, t = s.fnDisplayEnd(), o = s.aoColumns, r = Xt(s.nTBody);
  if (s.bDrawing = !0, !B)
    s.iDraw++;
  else if (!s.bDestroying && !p) {
    s.iDraw === 0 && r.empty().append(K0(s)), _h(s);
    return;
  }
  if (u.length !== 0)
    for (var n = B ? 0 : d, i = B ? s.aoData.length : t, f = n; f < i; f++) {
      var l = u[f], c = s.aoData[l];
      c.nTr === null && gf(s, l);
      for (var h = c.nTr, a = 0; a < o.length; a++) {
        var v = o[a], y = c.anCells[a];
        fi(y, Vr.type.className[v.sType]), fi(y, v.sClass), fi(y, s.oClasses.tbody.cell);
      }
      Nr(
        s,
        "aoRowCallback",
        null,
        [h, c._aData, R, f, l]
      ), A.push(h), R++;
    }
  else
    A[0] = K0(s);
  Nr(s, "aoHeaderCallback", "header", [
    Xt(s.nTHead).children("tr")[0],
    Z0(s),
    d,
    t,
    u
  ]), Nr(s, "aoFooterCallback", "footer", [
    Xt(s.nTFoot).children("tr")[0],
    Z0(s),
    d,
    t,
    u
  ]), r.children().detach(), r.append(Xt(A)), Xt(s.nTableWrapper).toggleClass("dt-empty-footer", Xt("tr", s.nTFoot).length === 0), Nr(s, "aoDrawCallback", "draw", [s], !0), s.bSorted = !1, s.bFiltered = !1, s.bDrawing = !1;
}
function ci(s, p, b) {
  var A = s.oFeatures, R = A.bSort, B = A.bFilter;
  (b === void 0 || b === !0) && (R && Ms(s), B ? ji(s, s.oPreviousSearch) : s.aiDisplay = s.aiDisplayMaster.slice()), p !== !0 && (s._iDisplayStart = 0), s._drawHold = p, hi(s), s._drawHold = !1;
}
function K0(s) {
  var p = s.oLanguage, b = p.sZeroRecords, A = Zn(s);
  return s.iDraw <= 1 && (A === "ajax" || A === "ssp") ? b = p.sLoadingRecords : p.sEmptyTable && s.fnRecordsTotal() === 0 && (b = p.sEmptyTable), Xt("<tr/>").append(Xt("<td />", {
    colSpan: Mo(s),
    class: s.oClasses.empty.row
  }).html(b))[0];
}
function J0(s, p, b) {
  var A = {};
  Xt.each(p, function(t, o) {
    if (o !== null) {
      var r = t.replace(/([A-Z])/g, " $1").split(" ");
      A[r[0]] || (A[r[0]] = {});
      var n = r.length === 1 ? "full" : r[1].toLowerCase(), i = A[r[0]];
      Xt.isPlainObject(o) ? o.contents ? i[n] = o : i[n] = {
        contents: Object.keys(o).map(function(f) {
          return {
            feature: f,
            opts: o[f]
          };
        })
      } : i[n] = {
        contents: o
      }, Array.isArray(i[n].contents) || (i[n].contents = [i[n].contents]);
    }
  });
  var R = Object.keys(A).map(function(t) {
    return t.indexOf(b) !== 0 ? null : {
      name: t,
      val: A[t]
    };
  }).filter(function(t) {
    return t !== null;
  });
  R.sort(function(t, o) {
    var r = t.name.replace(/[^0-9]/g, "") * 1, n = o.name.replace(/[^0-9]/g, "") * 1;
    return n - r;
  }), b === "bottom" && R.reverse();
  for (var B = [], u = 0, d = R.length; u < d; u++)
    R[u].val.full && (B.push({ full: R[u].val.full }), Q0(s, B[B.length - 1]), delete R[u].val.full), Object.keys(R[u].val).length && (B.push(R[u].val), Q0(s, B[B.length - 1]));
  return B;
}
function Q0(s, p) {
  var b = function(R, B) {
    return Vr.features[R] || qn(s, 0, "Unknown feature: " + R), Vr.features[R].apply(this, [s, B]);
  }, A = function(R) {
    for (var B = p[R].contents, u = 0, d = B.length; u < d; u++)
      if (B[u]) {
        if (typeof B[u] == "string")
          B[u] = b(B[u], null);
        else if (Xt.isPlainObject(B[u]))
          B[u] = b(B[u].feature, B[u].opts);
        else if (typeof B[u].node == "function")
          B[u] = B[u].node(s);
        else if (typeof B[u] == "function") {
          var t = B[u](s);
          B[u] = typeof t.node == "function" ? t.node() : t;
        }
      } else
        continue;
  };
  Xt.each(p, function(R) {
    A(R);
  });
}
function Qh(s) {
  var p = s.oClasses, b = Xt(s.nTable), A = Xt("<div/>").attr({
    id: s.sTableId + "_wrapper",
    class: p.container
  }).insertBefore(b);
  s.nTableWrapper = A[0];
  var R = J0(s, s.layout, "top"), B = J0(s, s.layout, "bottom"), u = Po(s, "layout");
  s.sDom ? $h(s, s.sDom, A) : (R.forEach(function(d) {
    u(s, A, d);
  }), u(s, A, {
    full: {
      table: !0,
      contents: [wf(s)]
    }
  }), B.forEach(function(d) {
    u(s, A, d);
  })), od(s);
}
function $h(s, p, b) {
  for (var A = p.match(/(".*?")|('.*?')|./g), R, B, u, d, t, o = 0; o < A.length; o++) {
    if (R = null, B = A[o], B == "<") {
      if (u = Xt("<div/>"), d = A[o + 1], d[0] == "'" || d[0] == '"') {
        t = d.replace(/['"]/g, "");
        var r = "", n;
        if (t.indexOf(".") != -1) {
          var i = t.split(".");
          r = i[0], n = i[1];
        } else
          t[0] == "#" ? r = t : n = t;
        u.attr("id", r.substring(1)).addClass(n), o++;
      }
      b.append(u), b = u;
    } else
      B == ">" ? b = b.parent() : B == "t" ? R = wf(s) : ge.ext.feature.forEach(function(f) {
        B == f.cFeature && (R = f.fnInit(s));
      });
    R && b.append(R);
  }
}
function xf(s, p, b) {
  var A = s.aoColumns, R = Xt(p).children("tr"), B, u, d, t, o, r, n, i, f, l, c = p && p.nodeName.toLowerCase() === "thead", h = [], a, v = function(w, D, I) {
    for (var T = w[D]; T[I]; )
      I++;
    return I;
  };
  for (d = 0, r = R.length; d < r; d++)
    h.push([]);
  for (d = 0, r = R.length; d < r; d++)
    for (B = R[d], i = 0, u = B.firstChild; u; ) {
      if (u.nodeName.toUpperCase() == "TD" || u.nodeName.toUpperCase() == "TH") {
        var y = [];
        if (f = u.getAttribute("colspan") * 1, l = u.getAttribute("rowspan") * 1, f = !f || f === 0 || f === 1 ? 1 : f, l = !l || l === 0 || l === 1 ? 1 : l, n = v(h, d, i), a = f === 1, b) {
          if (a) {
            gs(s, n, Xt(u).data());
            var g = A[n], e = u.getAttribute("width") || null, m = u.style.width.match(/width:\s*(\d+[pxem%]+)/);
            m && (e = m[1]), g.sWidthOrig = g.sWidth || e, c ? (g.sTitle !== null && !g.autoTitle && (u.innerHTML = g.sTitle), !g.sTitle && a && (g.sTitle = u.innerHTML.replace(/<.*?>/g, ""), g.autoTitle = !0)) : g.footer && (u.innerHTML = g.footer), g.ariaTitle || (g.ariaTitle = Xt(u).attr("aria-label") || g.sTitle), g.className && Xt(u).addClass(g.className);
          }
          Xt("span.dt-column-title", u).length === 0 && Xt("<span>").addClass("dt-column-title").append(u.childNodes).appendTo(u), c && Xt("span.dt-column-order", u).length === 0 && Xt("<span>").addClass("dt-column-order").appendTo(u);
        }
        for (o = 0; o < f; o++) {
          for (t = 0; t < l; t++)
            h[d + t][n + o] = {
              cell: u,
              unique: a
            }, h[d + t].row = B;
          y.push(n + o);
        }
        u.setAttribute("data-dt-column", Xa(y).join(","));
      }
      u = u.nextSibling;
    }
  return h;
}
function qh(s) {
  var p = Zn(s) == "ssp", b = s.iInitDisplayStart;
  b !== void 0 && b !== -1 && (s._iDisplayStart = p ? b : b >= s.fnRecordsDisplay() ? 0 : b, s.iInitDisplayStart = -1);
}
function Ls(s, p, b) {
  var A, R = s.ajax, B = s.oInstance, u = function(o) {
    var r = s.jqXHR ? s.jqXHR.status : null;
    (o === null || typeof r == "number" && r == 204) && (o = {}, Uo(s, o, []));
    var n = o.error || o.sError;
    n && qn(s, 0, n), s.json = o, Nr(s, null, "xhr", [s, o, s.jqXHR], !0), b(o);
  };
  if (Xt.isPlainObject(R) && R.data) {
    A = R.data;
    var d = typeof A == "function" ? A(p, s) : (
      // fn can manipulate data or return
      A
    );
    p = typeof A == "function" && d ? d : Xt.extend(!0, p, d), delete R.data;
  }
  var t = {
    url: typeof R == "string" ? R : "",
    data: p,
    success: u,
    dataType: "json",
    cache: !1,
    type: s.sServerMethod,
    error: function(o, r) {
      var n = Nr(s, null, "xhr", [s, null, s.jqXHR], !0);
      n.indexOf(!0) === -1 && (r == "parsererror" ? qn(s, 0, "Invalid JSON response", 1) : o.readyState === 4 && qn(s, 0, "Ajax error", 7)), _n(s, !1);
    }
  };
  Xt.isPlainObject(R) && Xt.extend(t, R), s.oAjaxData = p, Nr(s, null, "preXhr", [s, p, t], !0), typeof R == "function" ? s.jqXHR = R.call(B, p, u, s) : R.url === "" ? u({}) : (s.jqXHR = Xt.ajax(t), A && (R.data = A));
}
function _h(s) {
  s.iDraw++, _n(s, !0), Ls(
    s,
    td(s),
    function(p) {
      ed(s, p);
    }
  );
}
function td(s) {
  var p = s.aoColumns, b = s.oFeatures, A = s.oPreviousSearch, R = s.aoPreSearchCols, B = function(u, d) {
    return typeof p[u][d] == "function" ? "function" : p[u][d];
  };
  return {
    draw: s.iDraw,
    columns: p.map(function(u, d) {
      return {
        data: B(d, "mData"),
        name: u.sName,
        searchable: u.bSearchable,
        orderable: u.bSortable,
        search: {
          value: R[d].search,
          regex: R[d].regex,
          fixed: Object.keys(u.searchFixed).map(function(t) {
            return {
              name: t,
              term: u.searchFixed[t].toString()
            };
          })
        }
      };
    }),
    order: zo(s).map(function(u) {
      return {
        column: u.col,
        dir: u.dir,
        name: B(u.col, "sName")
      };
    }),
    start: s._iDisplayStart,
    length: b.bPaginate ? s._iDisplayLength : -1,
    search: {
      value: A.search,
      regex: A.regex,
      fixed: Object.keys(s.searchFixed).map(function(u) {
        return {
          name: u,
          term: s.searchFixed[u].toString()
        };
      })
    }
  };
}
function ed(s, p) {
  var b = Uo(s, p), A = us(s, "draw", p), R = us(s, "recordsTotal", p), B = us(s, "recordsFiltered", p);
  if (A !== void 0) {
    if (A * 1 < s.iDraw)
      return;
    s.iDraw = A * 1;
  }
  b || (b = []), Bs(s), s._iRecordsTotal = parseInt(R, 10), s._iRecordsDisplay = parseInt(B, 10);
  for (var u = 0, d = b.length; u < d; u++)
    Za(s, b[u]);
  s.aiDisplay = s.aiDisplayMaster.slice(), hi(s, !0), Oo(s), _n(s, !1);
}
function Uo(s, p, b) {
  var A = "data";
  if (Xt.isPlainObject(s.ajax) && s.ajax.dataSrc !== void 0) {
    var R = s.ajax.dataSrc;
    typeof R == "string" || typeof R == "function" ? A = R : R.data !== void 0 && (A = R.data);
  }
  if (!b)
    return A === "data" ? p.aaData || p[A] : A !== "" ? ui(A)(p) : p;
  Va(A)(p, b);
}
function us(s, p, b) {
  var A = Xt.isPlainObject(s.ajax) ? s.ajax.dataSrc : null;
  if (A && A[p])
    return ui(A[p])(b);
  var R = "";
  return p === "draw" ? R = "sEcho" : p === "recordsTotal" ? R = "iTotalRecords" : p === "recordsFiltered" && (R = "iTotalDisplayRecords"), b[R] !== void 0 ? b[R] : b[p];
}
function ji(s, p) {
  var b = s.aoPreSearchCols;
  if (Ds(s), Zn(s) != "ssp") {
    id(s), s.aiDisplay = s.aiDisplayMaster.slice(), wo(s.aiDisplay, s, p.search, p), Xt.each(s.searchFixed, function(B, u) {
      wo(s.aiDisplay, s, u, {});
    });
    for (var A = 0; A < b.length; A++) {
      var R = b[A];
      wo(
        s.aiDisplay,
        s,
        R.search,
        R,
        A
      ), Xt.each(s.aoColumns[A].searchFixed, function(B, u) {
        wo(s.aiDisplay, s, u, {}, A);
      });
    }
    rd(s);
  }
  s.bFiltered = !0, Nr(s, null, "search", [s]);
}
function rd(s) {
  for (var p = ge.ext.search, b = s.aiDisplay, A, R, B = 0, u = p.length; B < u; B++) {
    for (var d = [], t = 0, o = b.length; t < o; t++)
      R = b[t], A = s.aoData[R], p[B](s, A._aFilterData, R, A._aData, t) && d.push(R);
    b.length = 0, b.push.apply(b, d);
  }
}
function wo(s, p, b, A, R) {
  if (b !== "")
    for (var B = 0, u = typeof b == "function" ? b : null, d = b instanceof RegExp ? b : u ? null : nd(b, A); B < s.length; ) {
      var t = p.aoData[s[B]], o = R === void 0 ? t._sFilterRow : t._aFilterData[R];
      (u && !u(o, t._aData, s[B], R) || d && !d.test(o)) && (s.splice(B, 1), B--), B++;
    }
}
function nd(s, p) {
  var b = [], A = Xt.extend({}, {
    boundary: !1,
    caseInsensitive: !0,
    exact: !1,
    regex: !1,
    smart: !0
  }, p);
  if (typeof s != "string" && (s = s.toString()), A.exact)
    return new RegExp(
      "^" + ys(s) + "$",
      A.caseInsensitive ? "i" : ""
    );
  if (s = A.regex ? s : ys(s), A.smart) {
    var R = s.match(/!?["\u201C][^"\u201D]+["\u201D]|[^ ]+/g) || [""], B = R.map(function(t) {
      var o = !1, r;
      return t.charAt(0) === "!" && (o = !0, t = t.substring(1)), t.charAt(0) === '"' ? (r = t.match(/^"(.*)"$/), t = r ? r[1] : t) : t.charAt(0) === "â" && (r = t.match(/^\u201C(.*)\u201D$/), t = r ? r[1] : t), o && (t.length > 1 && b.push("(?!" + t + ")"), t = ""), t.replace('"', "");
    }), u = b.length ? b.join("") : "", d = A.boundary ? "\\b" : "";
    s = "^(?=.*?" + d + B.join(")(?=.*?" + d) + ")(" + u + ".)*$";
  }
  return new RegExp(s, A.caseInsensitive ? "i" : "");
}
var ys = ge.util.escapeRegex, To = Xt("<div>")[0], ad = To.textContent !== void 0;
function id(s) {
  for (var p = s.aoColumns, b = s.aoData, A, R, B, u, d, t, o = !1, r = 0; r < b.length; r++)
    if (b[r] && (t = b[r], !t._aFilterData)) {
      for (u = [], R = 0, B = p.length; R < B; R++)
        A = p[R], A.bSearchable ? (d = ta(s, r, R, "filter"), d === null && (d = ""), typeof d != "string" && d.toString && (d = d.toString())) : d = "", d.indexOf && d.indexOf("&") !== -1 && (To.innerHTML = d, d = ad ? To.textContent : To.innerText), d.replace && (d = d.replace(/[\r\n\u2028]/g, "")), u.push(d);
      t._aFilterData = u, t._sFilterRow = u.join("  "), o = !0;
    }
  return o;
}
function Fo(s) {
  var p, b = s.iInitDisplayStart;
  if (!s.bInitialised) {
    setTimeout(function() {
      Fo(s);
    }, 200);
    return;
  }
  Y0(s, "header"), Y0(s, "footer"), Do(s, s.aoHeader), Do(s, s.aoFooter), Qh(s), ld(s), Af(s), _n(s, !0), Nr(s, null, "preInit", [s], !0), ci(s);
  var A = Zn(s);
  A != "ssp" && (A == "ajax" ? Ls(s, {}, function(R) {
    var B = Uo(s, R);
    for (p = 0; p < B.length; p++)
      Za(s, B[p]);
    s.iInitDisplayStart = b, ci(s), _n(s, !1), Oo(s);
  }) : (Oo(s), _n(s, !1)));
}
function Oo(s) {
  if (!s._bInitComplete) {
    var p = [s, s.json];
    s._bInitComplete = !0, No(s), Nr(s, null, "plugin-init", p, !0), Nr(s, "aoInitComplete", "init", p, !0);
  }
}
function bf(s, p) {
  var b = parseInt(p, 10);
  s._iDisplayLength = b, Tf(s), Nr(s, null, "length", [s, b]);
}
function Ns(s, p, b) {
  var A = s._iDisplayStart, R = s._iDisplayLength, B = s.fnRecordsDisplay();
  if (B === 0 || R === -1)
    A = 0;
  else if (typeof p == "number")
    A = p * R, A > B && (A = 0);
  else if (p == "first")
    A = 0;
  else if (p == "previous")
    A = R >= 0 ? A - R : 0, A < 0 && (A = 0);
  else if (p == "next")
    A + R < B && (A += R);
  else if (p == "last")
    A = Math.floor((B - 1) / R) * R;
  else {
    if (p === "ellipsis")
      return;
    qn(s, 0, "Unknown paging action: " + p, 5);
  }
  var u = s._iDisplayStart !== A;
  return s._iDisplayStart = A, Nr(s, null, u ? "page" : "page-nc", [s]), u && b && hi(s), u;
}
function od(s) {
  var p = s.nTable;
  if (s.oFeatures.bProcessing) {
    var b = Xt("<div/>", {
      id: s.sTableId + "_processing",
      class: s.oClasses.processing.container,
      role: "status"
    }).html(s.oLanguage.sProcessing).append("<div><div></div><div></div><div></div><div></div></div>").insertBefore(p);
    Xt(p).on("processing.dt.DT", function(A, R, B) {
      b.css("display", B ? "block" : "none");
    });
  }
}
function _n(s, p) {
  Nr(s, null, "processing", [s, p]);
}
function wf(s) {
  var p = Xt(s.nTable), b = s.oScroll;
  if (b.sX === "" && b.sY === "")
    return s.nTable;
  var A = b.sX, R = b.sY, B = s.oClasses.scrolling, u = s.captionNode, d = u ? u._captionSide : null, t = Xt(p[0].cloneNode(!1)), o = Xt(p[0].cloneNode(!1)), r = p.children("tfoot"), n = "<div/>", i = function(v) {
    return v ? Ra(v) : null;
  };
  r.length || (r = null);
  var f = Xt(n, { class: B.container }).append(
    Xt(n, { class: B.header.self }).css({
      overflow: "hidden",
      position: "relative",
      border: 0,
      width: A ? i(A) : "100%"
    }).append(
      Xt(n, { class: B.header.inner }).css({
        "box-sizing": "content-box",
        width: b.sXInner || "100%"
      }).append(
        t.removeAttr("id").css("margin-left", 0).append(d === "top" ? u : null).append(
          p.children("thead")
        )
      )
    )
  ).append(
    Xt(n, { class: B.body }).css({
      position: "relative",
      overflow: "auto",
      width: i(A)
    }).append(p)
  );
  r && f.append(
    Xt(n, { class: B.footer.self }).css({
      overflow: "hidden",
      border: 0,
      width: A ? i(A) : "100%"
    }).append(
      Xt(n, { class: B.footer.inner }).append(
        o.removeAttr("id").css("margin-left", 0).append(d === "bottom" ? u : null).append(
          p.children("tfoot")
        )
      )
    )
  );
  var l = f.children(), c = l[0], h = l[1], a = r ? l[2] : null;
  return Xt(h).on("scroll.DT", function() {
    var v = this.scrollLeft;
    c.scrollLeft = v, r && (a.scrollLeft = v);
  }), Xt("th, td", c).on("focus", function() {
    var v = c.scrollLeft;
    h.scrollLeft = v, r && (h.scrollLeft = v);
  }), Xt(h).css("max-height", R), b.bCollapse || Xt(h).css("height", R), s.nScrollHead = c, s.nScrollBody = h, s.nScrollFoot = a, s.aoDrawCallback.push(Sf), f[0];
}
function Sf(s) {
  var p = s.oScroll, b = p.iBarWidth, A = Xt(s.nScrollHead), R = A.children("div"), B = R.children("table"), u = s.nScrollBody, d = Xt(u), t = Xt(s.nScrollFoot), o = t.children("div"), r = o.children("table"), n = Xt(s.nTHead), i = Xt(s.nTable), f = s.nTFoot && Xt("th, td", s.nTFoot).length ? Xt(s.nTFoot) : null, l = s.oBrowser, c, h, a = u.scrollHeight > u.clientHeight;
  if (s.scrollBarVis !== a && s.scrollBarVis !== void 0) {
    s.scrollBarVis = a, No(s);
    return;
  } else
    s.scrollBarVis = a;
  if (i.children("thead, tfoot").remove(), c = n.clone().prependTo(i), c.find("th, td").removeAttr("tabindex"), c.find("[id]").removeAttr("id"), f && (h = f.clone().prependTo(i), h.find("[id]").removeAttr("id")), s.aiDisplay.length) {
    var v = i.find("tbody tr").eq(0).find("th, td").map(function() {
      return Xt(this).outerWidth();
    });
    Xt("col", s.colgroup).each(function(m) {
      var w = this.style.width.replace("px", "");
      w !== v[m] && (this.style.width = v[m] + "px");
    });
  }
  B.find("colgroup").remove(), B.append(s.colgroup.clone()), f && (r.find("colgroup").remove(), r.append(s.colgroup.clone())), Xt("th, td", c).each(function() {
    Xt(this).children().wrapAll('<div class="dt-scroll-sizing">');
  }), f && Xt("th, td", h).each(function() {
    Xt(this).children().wrapAll('<div class="dt-scroll-sizing">');
  });
  var y = Math.floor(i.height()) > u.clientHeight || d.css("overflow-y") == "scroll", g = "padding" + (l.bScrollbarLeft ? "Left" : "Right"), e = i.outerWidth();
  B.css("width", Ra(e)), R.css("width", Ra(e)).css(g, y ? b + "px" : "0px"), f && (r.css("width", Ra(e)), o.css("width", Ra(e)).css(g, y ? b + "px" : "0px")), i.children("colgroup").prependTo(i), d.trigger("scroll"), (s.bSorted || s.bFiltered) && !s._drawHold && (u.scrollTop = 0);
}
function sd(s) {
  if (s.oFeatures.bAutoWidth) {
    var p = s.nTable, b = s.aoColumns, A = s.oScroll, R = A.sY, B = A.sX, u = A.sXInner, d = Is(s, "bVisible"), t = p.getAttribute("width"), o = p.parentNode, r, n, i, f = p.style.width;
    f && f.indexOf("%") !== -1 && (t = f), Nr(
      s,
      null,
      "column-calc",
      { visible: d },
      !1
    );
    var l = Xt(p.cloneNode()).css("visibility", "hidden").removeAttr("id");
    l.append("<tbody>");
    var c = Xt("<tr/>").appendTo(l.find("tbody"));
    for (l.append(Xt(s.nTHead).clone()).append(Xt(s.nTFoot).clone()), l.find("tfoot th, tfoot td").css("width", ""), l.find("thead th, thead td").each(function() {
      var I = vf(s, this, !0, !1);
      I ? (this.style.width = I, B && Xt(this).append(Xt("<div/>").css({
        width: I,
        margin: 0,
        padding: 0,
        border: 0,
        height: 1
      }))) : this.style.width = "";
    }), r = 0; r < d.length; r++) {
      i = d[r], n = b[i];
      var h = fd(s, i), a = Vr.type.className[n.sType], v = h + n.sContentPadding, y = h.indexOf("<") === -1 ? document.createTextNode(v) : v;
      Xt("<td/>").addClass(a).addClass(n.sClass).append(y).appendTo(c);
    }
    Xt("[name]", l).removeAttr("name");
    var g = Xt("<div/>").css(
      B || R ? {
        position: "absolute",
        top: 0,
        left: 0,
        height: 1,
        right: 0,
        overflow: "hidden"
      } : {}
    ).append(l).appendTo(o);
    B && u ? l.width(u) : B ? (l.css("width", "auto"), l.removeAttr("width"), l.width() < o.clientWidth && t && l.width(o.clientWidth)) : R ? l.width(o.clientWidth) : t && l.width(t);
    var e = 0, m = l.find("tbody tr").eq(0).children();
    for (r = 0; r < d.length; r++) {
      var w = m[r].getBoundingClientRect().width;
      e += w, b[d[r]].sWidth = Ra(w);
    }
    if (p.style.width = Ra(e), g.remove(), t && (p.style.width = Ra(t)), (t || B) && !s._reszEvt) {
      var D = function() {
        Xt(window).on("resize.DT-" + s.sInstance, ge.util.throttle(function() {
          s.bDestroying || No(s);
        }));
      };
      D(), s._reszEvt = !0;
    }
  }
}
function fd(s, p) {
  var b = s.aoColumns[p];
  if (!b.maxLenString) {
    for (var A, R = "", B = -1, u = 0, d = s.aiDisplayMaster.length; u < d; u++) {
      var t = s.aiDisplayMaster[u], o = Rs(s, t)[p], r = o && typeof o == "object" && o.nodeType ? o.innerHTML : o + "";
      r = r.replace(/id=".*?"/g, "").replace(/name=".*?"/g, ""), A = li(r).replace(/&nbsp;/g, " "), A.length > B && (R = r, B = A.length);
    }
    b.maxLenString = R;
  }
  return b.maxLenString;
}
function Ra(s) {
  return s === null ? "0px" : typeof s == "number" ? s < 0 ? "0px" : s + "px" : s.match(/\d$/) ? s + "px" : s;
}
function Af(s) {
  var p = s.aoColumns;
  for (s.colgroup.empty(), ia = 0; ia < p.length; ia++)
    p[ia].bVisible && s.colgroup.append(p[ia].colEl);
}
function ld(s) {
  var p = s.nTHead, b = p.querySelectorAll("tr"), A = s.bSortCellsTop, R = ':not([data-dt-order="disable"]):not([data-dt-order="icon-only"])';
  A === !0 ? p = b[0] : A === !1 && (p = b[b.length - 1]), Cf(
    s,
    p,
    p === s.nTHead ? "tr" + R + " th" + R + ", tr" + R + " td" + R : "th" + R + ", td" + R
  );
  var B = [];
  zi(s, B, s.aaSorting), s.aaSorting = B;
}
function Cf(s, p, b, A, R) {
  Ef(p, b, function(B) {
    var u = A === void 0 ? Os(B.target) : [A];
    u.length && (_n(s, !0), setTimeout(function() {
      for (var d = 0, t = u.length; d < t; d++) {
        var o = B.shiftKey || d > 0;
        cd(s, u[d], o);
      }
      Ms(s), ud(s), ci(s, !1, !1), _n(s, !1), R && R();
    }, 0));
  });
}
function ud(s) {
  var p = s.aiDisplay, b = s.aiDisplayMaster;
  p.sort(function(A, R) {
    return b.indexOf(A) - b.indexOf(R);
  });
}
function zi(s, p, b) {
  var A = function(B) {
    if (Xt.isPlainObject(B)) {
      if (B.idx !== void 0)
        p.push([B.idx, B.dir]);
      else if (B.name) {
        var u = Xn(s.aoColumns, "sName"), d = u.indexOf(B.name);
        d !== -1 && p.push([d, B.dir]);
      }
    } else
      p.push(B);
  };
  if (Xt.isPlainObject(b))
    A(b);
  else if (b.length && typeof b[0] == "number")
    A(b);
  else if (b.length)
    for (var R = 0; R < b.length; R++)
      A(b[R]);
}
function zo(s) {
  var p, b, A, R = [], B = ge.ext.type.order, u = s.aoColumns, d, t, o, r, n = s.aaSortingFixed, i = Xt.isPlainObject(n), f = [];
  if (!s.oFeatures.bSort)
    return R;
  for (Array.isArray(n) && zi(s, f, n), i && n.pre && zi(s, f, n.pre), zi(s, f, s.aaSorting), i && n.post && zi(s, f, n.post), p = 0; p < f.length; p++)
    if (r = f[p][0], u[r])
      for (d = u[r].aDataSort, b = 0, A = d.length; b < A; b++)
        t = d[b], o = u[t].sType || "string", f[p]._idx === void 0 && (f[p]._idx = u[t].asSorting.indexOf(f[p][1])), f[p][1] && R.push({
          src: r,
          col: t,
          dir: f[p][1],
          index: f[p]._idx,
          type: o,
          formatter: B[o + "-pre"],
          sorter: B[o + "-" + f[p][1]]
        });
  return R;
}
function Ms(s, p, b) {
  var A, R, B, u = [], d = ge.ext.type.order, t = s.aoData, o, r = s.aiDisplayMaster, n;
  if (Ds(s), p !== void 0) {
    var i = s.aoColumns[p];
    n = [{
      src: p,
      col: p,
      dir: b,
      index: 0,
      type: i.sType,
      formatter: d[i.sType + "-pre"],
      sorter: d[i.sType + "-" + b]
    }], r = r.slice();
  } else
    n = zo(s);
  for (A = 0, R = n.length; A < R; A++)
    o = n[A], hd(s, o.col);
  if (Zn(s) != "ssp" && n.length !== 0) {
    for (A = 0, B = r.length; A < B; A++)
      u[A] = A;
    n.length && n[0].dir === "desc" && u.reverse(), r.sort(function(f, l) {
      var c, h, a, v, y, g = n.length, e = t[f]._aSortData, m = t[l]._aSortData;
      for (a = 0; a < g; a++)
        if (y = n[a], c = e[y.col], h = m[y.col], y.sorter) {
          if (v = y.sorter(c, h), v !== 0)
            return v;
        } else if (v = c < h ? -1 : c > h ? 1 : 0, v !== 0)
          return y.dir === "asc" ? v : -v;
      return c = u[f], h = u[l], c < h ? -1 : c > h ? 1 : 0;
    });
  } else
    n.length === 0 && r.sort(function(f, l) {
      return f < l ? -1 : f > l ? 1 : 0;
    });
  return p === void 0 && (s.bSorted = !0, Nr(s, null, "order", [s, n])), r;
}
function cd(s, p, b) {
  var A = s.aoColumns[p], R = s.aaSorting, B = A.asSorting, u, d = function(o, r) {
    var n = o._idx;
    return n === void 0 && (n = B.indexOf(o[1])), n + 1 < B.length ? n + 1 : r ? null : 0;
  };
  if (A.bSortable)
    if (typeof R[0] == "number" && (R = s.aaSorting = [R]), b && s.oFeatures.bSortMulti) {
      var t = Xn(R, "0").indexOf(p);
      t !== -1 ? (u = d(R[t], !0), u === null && R.length === 1 && (u = 0), u === null ? R.splice(t, 1) : (R[t][1] = B[u], R[t]._idx = u)) : (R.push([p, B[0], 0]), R[R.length - 1]._idx = 0);
    } else
      R.length && R[0][0] == p ? (u = d(R[0]), R.length = 1, R[0][1] = B[u], R[0]._idx = u) : (R.length = 0, R.push([p, B[0]]), R[0]._idx = 0);
}
function ms(s) {
  var p = s.aLastSort, b = s.oClasses.order.position, A = zo(s), R = s.oFeatures, B, u, d;
  if (R.bSort && R.bSortClasses) {
    for (B = 0, u = p.length; B < u; B++)
      d = p[B].src, Xt(Xn(s.aoData, "anCells", d)).removeClass(b + (B < 2 ? B + 1 : 3));
    for (B = 0, u = A.length; B < u; B++)
      d = A[B].src, Xt(Xn(s.aoData, "anCells", d)).addClass(b + (B < 2 ? B + 1 : 3));
  }
  s.aLastSort = A;
}
function hd(s, p) {
  var b = s.aoColumns[p], A = ge.ext.order[b.sSortDataType], R;
  A && (R = A.call(
    s.oInstance,
    s,
    p,
    Vi(s, p)
  ));
  for (var B, u, d = ge.ext.type.order[b.sType + "-pre"], t = s.aoData, o = 0; o < t.length; o++)
    t[o] && (B = t[o], B._aSortData || (B._aSortData = []), (!B._aSortData[p] || A) && (u = A ? R[o] : (
      // If there was a custom sort function, use data from there
      ta(s, o, p, "sort")
    ), B._aSortData[p] = d ? d(u, s) : u));
}
function Wo(s) {
  if (!s._bLoadingState) {
    var p = {
      time: +/* @__PURE__ */ new Date(),
      start: s._iDisplayStart,
      length: s._iDisplayLength,
      order: Xt.extend(!0, [], s.aaSorting),
      search: Xt.extend({}, s.oPreviousSearch),
      columns: s.aoColumns.map(function(b, A) {
        return {
          visible: b.bVisible,
          search: Xt.extend({}, s.aoPreSearchCols[A])
        };
      })
    };
    s.oSavedState = p, Nr(s, "aoStateSaveParams", "stateSaveParams", [s, p]), s.oFeatures.bStateSave && !s.bDestroying && s.fnStateSaveCallback.call(s.oInstance, s, p);
  }
}
function dd(s, p, b) {
  if (!s.oFeatures.bStateSave) {
    b();
    return;
  }
  var A = function(B) {
    xs(s, B, b);
  }, R = s.fnStateLoadCallback.call(s.oInstance, s, A);
  return R !== void 0 && xs(s, R, b), !0;
}
function xs(s, p, b) {
  var A, R, B = s.aoColumns;
  s._bLoadingState = !0;
  var u = s._bInitComplete ? new ge.Api(s) : null;
  if (!p || !p.time) {
    s._bLoadingState = !1, b();
    return;
  }
  var d = s.iStateDuration;
  if (d > 0 && p.time < +/* @__PURE__ */ new Date() - d * 1e3) {
    s._bLoadingState = !1, b();
    return;
  }
  var t = Nr(s, "aoStateLoadParams", "stateLoadParams", [s, p]);
  if (t.indexOf(!1) !== -1) {
    s._bLoadingState = !1, b();
    return;
  }
  if (p.columns && B.length !== p.columns.length) {
    s._bLoadingState = !1, b();
    return;
  }
  if (s.oLoadedState = Xt.extend(!0, {}, p), Nr(s, null, "stateLoadInit", [s, p], !0), p.length !== void 0 && (u ? u.page.len(p.length) : s._iDisplayLength = p.length), p.start !== void 0 && (u === null ? (s._iDisplayStart = p.start, s.iInitDisplayStart = p.start) : Ns(s, p.start / s._iDisplayLength)), p.order !== void 0 && (s.aaSorting = [], Xt.each(p.order, function(r, n) {
    s.aaSorting.push(
      n[0] >= B.length ? [0, n[1]] : n
    );
  })), p.search !== void 0 && Xt.extend(s.oPreviousSearch, p.search), p.columns) {
    for (A = 0, R = p.columns.length; A < R; A++) {
      var o = p.columns[A];
      o.visible !== void 0 && (u ? u.column(A).visible(o.visible, !1) : B[A].bVisible = o.visible), o.search !== void 0 && Xt.extend(s.aoPreSearchCols[A], o.search);
    }
    u && u.columns.adjust();
  }
  s._bLoadingState = !1, Nr(s, "aoStateLoaded", "stateLoaded", [s, p]), b();
}
function qn(s, p, b, A) {
  if (b = "DataTables warning: " + (s ? "table id=" + s.sTableId + " - " : "") + b, A && (b += ". For more information about this error, please see https://datatables.net/tn/" + A), p)
    window.console && console.log && console.log(b);
  else {
    var R = ge.ext, B = R.sErrMode || R.errMode;
    if (s && Nr(s, null, "dt-error", [s, A, b], !0), B == "alert")
      alert(b);
    else {
      if (B == "throw")
        throw new Error(b);
      typeof B == "function" && B(s, A, b);
    }
  }
}
function La(s, p, b, A) {
  if (Array.isArray(b)) {
    Xt.each(b, function(R, B) {
      Array.isArray(B) ? La(s, p, B[0], B[1]) : La(s, p, B);
    });
    return;
  }
  A === void 0 && (A = b), p[b] !== void 0 && (s[A] = p[b]);
}
function $0(s, p, b) {
  var A;
  for (var R in p)
    Object.prototype.hasOwnProperty.call(p, R) && (A = p[R], Xt.isPlainObject(A) ? (Xt.isPlainObject(s[R]) || (s[R] = {}), Xt.extend(!0, s[R], A)) : b && R !== "data" && R !== "aaData" && Array.isArray(A) ? s[R] = A.slice() : s[R] = A);
  return s;
}
function Ef(s, p, b) {
  Xt(s).on("click.DT", p, function(A) {
    b(A);
  }).on("keypress.DT", p, function(A) {
    A.which === 13 && (A.preventDefault(), b(A));
  }).on("selectstart.DT", p, function() {
    return !1;
  });
}
function $n(s, p, b) {
  b && s[p].push(b);
}
function Nr(s, p, b, A, R) {
  var B = [];
  if (p && (B = s[p].slice().reverse().map(function(t) {
    return t.apply(s.oInstance, A);
  })), b !== null) {
    var u = Xt.Event(b + ".dt"), d = Xt(s.nTable);
    u.dt = s.api, d[R ? "trigger" : "triggerHandler"](u, A), R && d.parents("body").length === 0 && Xt("body").trigger(u, A), B.push(u.result);
  }
  return B;
}
function Tf(s) {
  var p = s._iDisplayStart, b = s.fnDisplayEnd(), A = s._iDisplayLength;
  p >= b && (p = b - A), p -= p % A, (A === -1 || p < 0) && (p = 0), s._iDisplayStart = p;
}
function Po(s, p) {
  var b = s.renderer, A = ge.ext.renderer[p];
  return Xt.isPlainObject(b) && b[p] ? A[b[p]] || A._ : typeof b == "string" && A[b] || A._;
}
function Zn(s) {
  return s.oFeatures.bServerSide ? "ssp" : s.ajax ? "ajax" : "dom";
}
function ks(s, p, b) {
  var A = s.fnFormatNumber, R = s._iDisplayStart + 1, B = s._iDisplayLength, u = s.fnRecordsDisplay(), d = s.fnRecordsTotal(), t = B === -1;
  return p.replace(/_START_/g, A.call(s, R)).replace(/_END_/g, A.call(s, s.fnDisplayEnd())).replace(/_MAX_/g, A.call(s, d)).replace(/_TOTAL_/g, A.call(s, u)).replace(/_PAGE_/g, A.call(s, t ? 1 : Math.ceil(R / B))).replace(/_PAGES_/g, A.call(s, t ? 1 : Math.ceil(u / B))).replace(/_ENTRIES_/g, s.api.i18n("entries", "", b)).replace(/_ENTRIES-MAX_/g, s.api.i18n("entries", "", d)).replace(/_ENTRIES-TOTAL_/g, s.api.i18n("entries", "", u));
}
var Us = [], Ln = Array.prototype, vd = function(s) {
  var p, b, A = ge.settings, R = Xn(A, "nTable");
  if (s) {
    if (s.nTable && s.oFeatures)
      return [s];
    if (s.nodeName && s.nodeName.toLowerCase() === "table")
      return p = R.indexOf(s), p !== -1 ? [A[p]] : null;
    if (s && typeof s.settings == "function")
      return s.settings().toArray();
    typeof s == "string" ? b = Xt(s).get() : s instanceof Xt && (b = s.get());
  } else
    return [];
  if (b)
    return A.filter(function(B, u) {
      return b.includes(R[u]);
    });
};
Sr = function(s, p) {
  if (!(this instanceof Sr))
    return new Sr(s, p);
  var b = [], A = function(u) {
    var d = vd(u);
    d && b.push.apply(b, d);
  };
  if (Array.isArray(s))
    for (var R = 0, B = s.length; R < B; R++)
      A(s[R]);
  else
    A(s);
  this.context = b.length > 1 ? Xa(b) : b, p && this.push.apply(this, p), this.selector = {
    rows: null,
    cols: null,
    opts: null
  }, Sr.extend(this, this, Us);
};
ge.Api = Sr;
Xt.extend(Sr.prototype, {
  any: function() {
    return this.count() !== 0;
  },
  context: [],
  // array of table settings objects
  count: function() {
    return this.flatten().length;
  },
  each: function(s) {
    for (var p = 0, b = this.length; p < b; p++)
      s.call(this, this[p], p, this);
    return this;
  },
  eq: function(s) {
    var p = this.context;
    return p.length > s ? new Sr(p[s], this[s]) : null;
  },
  filter: function(s) {
    var p = Ln.filter.call(this, s, this);
    return new Sr(this.context, p);
  },
  flatten: function() {
    var s = [];
    return new Sr(this.context, s.concat.apply(s, this.toArray()));
  },
  get: function(s) {
    return this[s];
  },
  join: Ln.join,
  includes: function(s) {
    return this.indexOf(s) !== -1;
  },
  indexOf: Ln.indexOf,
  iterator: function(s, p, b, A) {
    var R = [], B, u, d, t, o, r = this.context, n, i, f, l = this.selector;
    for (typeof s == "string" && (A = b, b = p, p = s, s = !1), u = 0, d = r.length; u < d; u++) {
      var c = new Sr(r[u]);
      if (p === "table")
        B = b.call(c, r[u], u), B !== void 0 && R.push(B);
      else if (p === "columns" || p === "rows")
        B = b.call(c, r[u], this[u], u), B !== void 0 && R.push(B);
      else if (p === "every" || p === "column" || p === "column-rows" || p === "row" || p === "cell")
        for (i = this[u], p === "column-rows" && (n = Ho(r[u], l.opts)), t = 0, o = i.length; t < o; t++)
          f = i[t], p === "cell" ? B = b.call(c, r[u], f.row, f.column, u, t) : B = b.call(c, r[u], f, u, t, n), B !== void 0 && R.push(B);
    }
    if (R.length || A) {
      var h = new Sr(r, s ? R.concat.apply([], R) : R), a = h.selector;
      return a.rows = l.rows, a.cols = l.cols, a.opts = l.opts, h;
    }
    return this;
  },
  lastIndexOf: Ln.lastIndexOf,
  length: 0,
  map: function(s) {
    var p = Ln.map.call(this, s, this);
    return new Sr(this.context, p);
  },
  pluck: function(s) {
    var p = ge.util.get(s);
    return this.map(function(b) {
      return p(b);
    });
  },
  pop: Ln.pop,
  push: Ln.push,
  reduce: Ln.reduce,
  reduceRight: Ln.reduceRight,
  reverse: Ln.reverse,
  // Object with rows, columns and opts
  selector: null,
  shift: Ln.shift,
  slice: function() {
    return new Sr(this.context, this);
  },
  sort: Ln.sort,
  splice: Ln.splice,
  toArray: function() {
    return Ln.slice.call(this);
  },
  to$: function() {
    return Xt(this);
  },
  toJQuery: function() {
    return Xt(this);
  },
  unique: function() {
    return new Sr(this.context, Xa(this.toArray()));
  },
  unshift: Ln.unshift
});
function pd(s, p, b) {
  return function() {
    var A = p.apply(s || this, arguments);
    return Sr.extend(A, A, b.methodExt), A;
  };
}
function gd(s, p) {
  for (var b = 0, A = s.length; b < A; b++)
    if (s[b].name === p)
      return s[b];
  return null;
}
window.__apiStruct = Us;
Sr.extend = function(s, p, b) {
  if (!(!b.length || !p || !(p instanceof Sr) && !p.__dt_wrapper)) {
    var A, R, B;
    for (A = 0, R = b.length; A < R; A++)
      B = b[A], p[B.name] = B.type === "function" ? pd(s, B.val, B) : B.type === "object" ? {} : B.val, p[B.name].__dt_wrapper = !0, Sr.extend(s, p[B.name], B.propExt);
  }
};
Sr.register = Ke = function(s, p) {
  if (Array.isArray(s)) {
    for (var b = 0, A = s.length; b < A; b++)
      Sr.register(s[b], p);
    return;
  }
  var R, B, u = s.split("."), d = Us, t, o;
  for (R = 0, B = u.length; R < B; R++) {
    o = u[R].indexOf("()") !== -1, t = o ? u[R].replace("()", "") : u[R];
    var r = gd(d, t);
    r || (r = {
      name: t,
      val: {},
      methodExt: [],
      propExt: [],
      type: "object"
    }, d.push(r)), R === B - 1 ? (r.val = p, r.type = typeof p == "function" ? "function" : Xt.isPlainObject(p) ? "object" : "other") : d = o ? r.methodExt : r.propExt;
  }
};
Sr.registerPlural = Xr = function(s, p, b) {
  Sr.register(s, b), Sr.register(p, function() {
    var A = b.apply(this, arguments);
    return A === this ? this : A instanceof Sr ? A.length ? Array.isArray(A[0]) ? new Sr(A.context, A[0]) : (
      // Array results are 'enhanced'
      A[0]
    ) : void 0 : A;
  });
};
var Ff = function(s, p) {
  if (Array.isArray(s)) {
    var b = [];
    return s.forEach(function(R) {
      var B = Ff(R, p);
      b.push.apply(b, B);
    }), b.filter(function(R) {
      return R;
    });
  }
  if (typeof s == "number")
    return [p[s]];
  var A = p.map(function(R) {
    return R.nTable;
  });
  return Xt(A).filter(s).map(function() {
    var R = A.indexOf(this);
    return p[R];
  }).toArray();
};
Ke("tables()", function(s) {
  return s != null ? new Sr(Ff(s, this.context)) : this;
});
Ke("table()", function(s) {
  var p = this.tables(s), b = p.context;
  return b.length ? new Sr(b[0]) : p;
});
[
  ["nodes", "node", "nTable"],
  ["body", "body", "nTBody"],
  ["header", "header", "nTHead"],
  ["footer", "footer", "nTFoot"]
].forEach(function(s) {
  Xr(
    "tables()." + s[0] + "()",
    "table()." + s[1] + "()",
    function() {
      return this.iterator("table", function(p) {
        return p[s[2]];
      }, 1);
    }
  );
});
[
  ["header", "aoHeader"],
  ["footer", "aoFooter"]
].forEach(function(s) {
  Ke("table()." + s[0] + ".structure()", function(p) {
    var b = this.columns(p).indexes().flatten(), A = this.context[0];
    return mf(A, A[s[1]], b);
  });
});
Xr("tables().containers()", "table().container()", function() {
  return this.iterator("table", function(s) {
    return s.nTableWrapper;
  }, 1);
});
Ke("tables().every()", function(s) {
  var p = this;
  return this.iterator("table", function(b, A) {
    s.call(p.table(A), A);
  });
});
Ke("caption()", function(s, p) {
  var b = this.context;
  if (s === void 0) {
    var A = b[0].captionNode;
    return A && b.length ? A.innerHTML : null;
  }
  return this.iterator("table", function(R) {
    var B = Xt(R.nTable), u = Xt(R.captionNode), d = Xt(R.nTableWrapper);
    if (u.length || (u = Xt("<caption/>").html(s), R.captionNode = u[0], p || (B.prepend(u), p = u.css("caption-side"))), u.html(s), p && (u.css("caption-side", p), u[0]._captionSide = p), d.find("div.dataTables_scroll").length) {
      var t = p === "top" ? "Head" : "Foot";
      d.find("div.dataTables_scroll" + t + " table").prepend(u);
    } else
      B.prepend(u);
  }, 1);
});
Ke("caption.node()", function() {
  var s = this.context;
  return s.length ? s[0].captionNode : null;
});
Ke("draw()", function(s) {
  return this.iterator("table", function(p) {
    s === "page" ? hi(p) : (typeof s == "string" && (s = s !== "full-hold"), ci(p, s === !1));
  });
});
Ke("page()", function(s) {
  return s === void 0 ? this.page.info().page : this.iterator("table", function(p) {
    Ns(p, s);
  });
});
Ke("page.info()", function() {
  if (this.context.length !== 0) {
    var s = this.context[0], p = s._iDisplayStart, b = s.oFeatures.bPaginate ? s._iDisplayLength : -1, A = s.fnRecordsDisplay(), R = b === -1;
    return {
      page: R ? 0 : Math.floor(p / b),
      pages: R ? 1 : Math.ceil(A / b),
      start: p,
      end: s.fnDisplayEnd(),
      length: b,
      recordsTotal: s.fnRecordsTotal(),
      recordsDisplay: A,
      serverSide: Zn(s) === "ssp"
    };
  }
});
Ke("page.len()", function(s) {
  return s === void 0 ? this.context.length !== 0 ? this.context[0]._iDisplayLength : void 0 : this.iterator("table", function(p) {
    bf(p, s);
  });
});
var If = function(s, p, b) {
  if (b) {
    var A = new Sr(s);
    A.one("draw", function() {
      b(A.ajax.json());
    });
  }
  if (Zn(s) == "ssp")
    ci(s, p);
  else {
    _n(s, !0);
    var R = s.jqXHR;
    R && R.readyState !== 4 && R.abort(), Ls(s, {}, function(B) {
      Bs(s);
      for (var u = Uo(s, B), d = 0, t = u.length; d < t; d++)
        Za(s, u[d]);
      ci(s, p), Oo(s), _n(s, !1);
    });
  }
};
Ke("ajax.json()", function() {
  var s = this.context;
  if (s.length > 0)
    return s[0].json;
});
Ke("ajax.params()", function() {
  var s = this.context;
  if (s.length > 0)
    return s[0].oAjaxData;
});
Ke("ajax.reload()", function(s, p) {
  return this.iterator("table", function(b) {
    If(b, p === !1, s);
  });
});
Ke("ajax.url()", function(s) {
  var p = this.context;
  return s === void 0 ? p.length === 0 ? void 0 : (p = p[0], Xt.isPlainObject(p.ajax) ? p.ajax.url : p.ajax) : this.iterator("table", function(b) {
    Xt.isPlainObject(b.ajax) ? b.ajax.url = s : b.ajax = s;
  });
});
Ke("ajax.url().load()", function(s, p) {
  return this.iterator("table", function(b) {
    If(b, p === !1, s);
  });
});
var zs = function(s, p, b, A, R) {
  var B = [], u, d, t, o, r, n, i = typeof p;
  for ((!p || i === "string" || i === "function" || p.length === void 0) && (p = [p]), t = 0, o = p.length; t < o; t++)
    for (d = p[t] && p[t].split && !p[t].match(/[[(:]/) ? p[t].split(",") : [p[t]], r = 0, n = d.length; r < n; r++)
      u = b(typeof d[r] == "string" ? d[r].trim() : d[r]), u = u.filter(function(l) {
        return l != null;
      }), u && u.length && (B = B.concat(u));
  var f = Vr.selector[s];
  if (f.length)
    for (t = 0, o = f.length; t < o; t++)
      B = f[t](A, R, B);
  return Xa(B);
}, Ws = function(s) {
  return s || (s = {}), s.filter && s.search === void 0 && (s.search = s.filter), Xt.extend({
    search: "none",
    order: "current",
    page: "all"
  }, s);
}, Hs = function(s) {
  let p = new Sr(s.context[0]);
  return s.length && p.push(s[0]), p.selector = s.selector, p.length && p[0].length > 1 && p[0].splice(1), p;
}, Ho = function(s, p) {
  var b, A, R, B = [], u = s.aiDisplay, d = s.aiDisplayMaster, t = p.search, o = p.order, r = p.page;
  if (Zn(s) == "ssp")
    return t === "removed" ? [] : Pa(0, d.length);
  if (r == "current")
    for (b = s._iDisplayStart, A = s.fnDisplayEnd(); b < A; b++)
      B.push(u[b]);
  else if (o == "current" || o == "applied") {
    if (t == "none")
      B = d.slice();
    else if (t == "applied")
      B = u.slice();
    else if (t == "removed") {
      var n = {};
      for (b = 0, A = u.length; b < A; b++)
        n[u[b]] = null;
      d.forEach(function(f) {
        Object.prototype.hasOwnProperty.call(n, f) || B.push(f);
      });
    }
  } else if (o == "index" || o == "original")
    for (b = 0, A = s.aoData.length; b < A; b++)
      s.aoData[b] && (t == "none" ? B.push(b) : (R = u.indexOf(b), (R === -1 && t == "removed" || R >= 0 && t == "applied") && B.push(b)));
  else if (typeof o == "number") {
    var i = Ms(s, o, "asc");
    if (t === "none")
      B = i;
    else
      for (b = 0; b < i.length; b++)
        R = u.indexOf(i[b]), (R === -1 && t == "removed" || R >= 0 && t == "applied") && B.push(i[b]);
  }
  return B;
}, yd = function(s, p, b) {
  var A, R = function(d) {
    var t = sf(d), o = s.aoData;
    if (t !== null && !b)
      return [t];
    if (A || (A = Ho(s, b)), t !== null && A.indexOf(t) !== -1)
      return [t];
    if (d == null || d === "")
      return A;
    if (typeof d == "function")
      return A.map(function(c) {
        var h = o[c];
        return d(c, h._aData, h.nTr) ? c : null;
      });
    if (d.nodeName) {
      var r = d._DT_RowIndex, n = d._DT_CellIndex;
      if (r !== void 0)
        return o[r] && o[r].nTr === d ? [r] : [];
      if (n)
        return o[n.row] && o[n.row].nTr === d.parentNode ? [n.row] : [];
      var i = Xt(d).closest("*[data-dt-row]");
      return i.length ? [i.data("dt-row")] : [];
    }
    if (typeof d == "string" && d.charAt(0) === "#") {
      var f = s.aIds[d.replace(/^#/, "")];
      if (f !== void 0)
        return [f.idx];
    }
    var l = uf(
      Gi(s.aoData, A, "nTr")
    );
    return Xt(l).filter(d).map(function() {
      return this._DT_RowIndex;
    }).toArray();
  }, B = zs("row", p, R, s, b);
  if (b.order === "current" || b.order === "applied") {
    var u = s.aiDisplayMaster;
    B.sort(function(d, t) {
      return u.indexOf(d) - u.indexOf(t);
    });
  }
  return B;
};
Ke("rows()", function(s, p) {
  s === void 0 ? s = "" : Xt.isPlainObject(s) && (p = s, s = ""), p = Ws(p);
  var b = this.iterator("table", function(A) {
    return yd(A, s, p);
  }, 1);
  return b.selector.rows = s, b.selector.opts = p, b;
});
Ke("rows().nodes()", function() {
  return this.iterator("row", function(s, p) {
    return s.aoData[p].nTr || void 0;
  }, 1);
});
Ke("rows().data()", function() {
  return this.iterator(!0, "rows", function(s, p) {
    return Gi(s.aoData, p, "_aData");
  }, 1);
});
Xr("rows().cache()", "row().cache()", function(s) {
  return this.iterator("row", function(p, b) {
    var A = p.aoData[b];
    return s === "search" ? A._aFilterData : A._aSortData;
  }, 1);
});
Xr("rows().invalidate()", "row().invalidate()", function(s) {
  return this.iterator("row", function(p, b) {
    ko(p, b, s);
  });
});
Xr("rows().indexes()", "row().index()", function() {
  return this.iterator("row", function(s, p) {
    return p;
  }, 1);
});
Xr("rows().ids()", "row().id()", function(s) {
  for (var p = [], b = this.context, A = 0, R = b.length; A < R; A++)
    for (var B = 0, u = this[A].length; B < u; B++) {
      var d = b[A].rowIdFn(b[A].aoData[this[A][B]]._aData);
      p.push((s === !0 ? "#" : "") + d);
    }
  return new Sr(b, p);
});
Xr("rows().remove()", "row().remove()", function() {
  return this.iterator("row", function(s, p) {
    var b = s.aoData, A = b[p], R = s.aiDisplayMaster.indexOf(p);
    R !== -1 && s.aiDisplayMaster.splice(R, 1), R = s.aiDisplay.indexOf(p), R !== -1 && s.aiDisplay.splice(R, 1), s._iRecordsDisplay > 0 && s._iRecordsDisplay--, Tf(s);
    var B = s.rowIdFn(A._aData);
    B !== void 0 && delete s.aIds[B], b[p] = null;
  }), this;
});
Ke("rows.add()", function(s) {
  var p = this.iterator("table", function(A) {
    var R, B, u, d = [];
    for (B = 0, u = s.length; B < u; B++)
      R = s[B], R.nodeName && R.nodeName.toUpperCase() === "TR" ? d.push(Ps(A, R)[0]) : d.push(Za(A, R));
    return d;
  }, 1), b = this.rows(-1);
  return b.pop(), b.push.apply(b, p), b;
});
Ke("row()", function(s, p) {
  return Hs(this.rows(s, p));
});
Ke("row().data()", function(s) {
  var p = this.context;
  if (s === void 0)
    return p.length && this.length && this[0].length ? p[0].aoData[this[0]]._aData : void 0;
  var b = p[0].aoData[this[0]];
  return b._aData = s, Array.isArray(s) && b.nTr && b.nTr.id && Va(p[0].rowId)(s, b.nTr.id), ko(p[0], this[0], "data"), this;
});
Ke("row().node()", function() {
  var s = this.context;
  return s.length && this.length && this[0].length && s[0].aoData[this[0]].nTr || null;
});
Ke("row.add()", function(s) {
  s instanceof Xt && s.length && (s = s[0]);
  var p = this.iterator("table", function(b) {
    return s.nodeName && s.nodeName.toUpperCase() === "TR" ? Ps(b, s)[0] : Za(b, s);
  });
  return this.row(p[0]);
});
Xt(document).on("plugin-init.dt", function(s, p) {
  var b = new Sr(p);
  b.on("stateSaveParams.DT", function(A, R, B) {
    for (var u = R.rowIdFn, d = R.aiDisplayMaster, t = [], o = 0; o < d.length; o++) {
      var r = d[o], n = R.aoData[r];
      n._detailsShow && t.push("#" + u(n._aData));
    }
    B.childRows = t;
  }), b.on("stateLoaded.DT", function(A, R, B) {
    q0(b, B);
  }), q0(b, b.state.loaded());
});
var q0 = function(s, p) {
  p && p.childRows && s.rows(p.childRows.map(function(b) {
    return b.replace(/:/g, "\\:");
  })).every(function() {
    Nr(s.settings()[0], null, "requestChild", [this]);
  });
}, md = function(s, p, b, A) {
  var R = [], B = function(u, d) {
    if (Array.isArray(u) || u instanceof Xt) {
      for (var t = 0, o = u.length; t < o; t++)
        B(u[t], d);
      return;
    }
    if (u.nodeName && u.nodeName.toLowerCase() === "tr")
      u.setAttribute("data-dt-row", p.idx), R.push(u);
    else {
      var r = Xt("<tr><td></td></tr>").attr("data-dt-row", p.idx).addClass(d);
      Xt("td", r).addClass(d).html(u)[0].colSpan = Mo(s), R.push(r[0]);
    }
  };
  B(b, A), p._details && p._details.detach(), p._details = Xt(R), p._detailsShow && p._details.insertAfter(p.nTr);
}, Df = ge.util.throttle(
  function(s) {
    Wo(s[0]);
  },
  500
), js = function(s, p) {
  var b = s.context;
  if (b.length) {
    var A = b[0].aoData[p !== void 0 ? p : s[0]];
    A && A._details && (A._details.remove(), A._detailsShow = void 0, A._details = void 0, Xt(A.nTr).removeClass("dt-hasChild"), Df(b));
  }
}, Of = function(s, p) {
  var b = s.context;
  if (b.length && s.length) {
    var A = b[0].aoData[s[0]];
    A._details && (A._detailsShow = p, p ? (A._details.insertAfter(A.nTr), Xt(A.nTr).addClass("dt-hasChild")) : (A._details.detach(), Xt(A.nTr).removeClass("dt-hasChild")), Nr(b[0], null, "childRow", [p, s.row(s[0])]), xd(b[0]), Df(b));
  }
}, xd = function(s) {
  var p = new Sr(s), b = ".dt.DT_details", A = "draw" + b, R = "column-sizing" + b, B = "destroy" + b, u = s.aoData;
  p.off(A + " " + R + " " + B), Xn(u, "_details").length > 0 && (p.on(A, function(d, t) {
    s === t && p.rows({ page: "current" }).eq(0).each(function(o) {
      var r = u[o];
      r._detailsShow && r._details.insertAfter(r.nTr);
    });
  }), p.on(R, function(d, t) {
    if (s === t)
      for (var o, r = Mo(t), n = 0, i = u.length; n < i; n++)
        o = u[n], o._details && o._details.each(function() {
          var f = Xt(this).children("td");
          f.length == 1 && f.attr("colspan", r);
        });
  }), p.on(B, function(d, t) {
    if (s === t)
      for (var o = 0, r = u.length; o < r; o++)
        u[o]._details && js(p, o);
  }));
}, bd = "", Xi = bd + "row().child", jo = Xi + "()";
Ke(jo, function(s, p) {
  var b = this.context;
  return s === void 0 ? b.length && this.length ? b[0].aoData[this[0]]._details : void 0 : (s === !0 ? this.child.show() : s === !1 ? js(this) : b.length && this.length && md(b[0], b[0].aoData[this[0]], s, p), this);
});
Ke([
  Xi + ".show()",
  jo + ".show()"
  // only when `child()` was called with parameters (without
], function() {
  return Of(this, !0), this;
});
Ke([
  Xi + ".hide()",
  jo + ".hide()"
  // only when `child()` was called with parameters (without
], function() {
  return Of(this, !1), this;
});
Ke([
  Xi + ".remove()",
  jo + ".remove()"
  // only when `child()` was called with parameters (without
], function() {
  return js(this), this;
});
Ke(Xi + ".isShown()", function() {
  var s = this.context;
  return s.length && this.length && s[0].aoData[this[0]]._detailsShow || !1;
});
var wd = /^([^:]+):(name|title|visIdx|visible)$/, Gs = function(s, p, b, A, R, B) {
  for (var u = [], d = 0, t = R.length; d < t; d++)
    u.push(ta(s, R[d], p, B));
  return u;
}, Sd = function(s, p, b) {
  var A = s.aoColumns, R = Xn(A, "sName"), B = Xn(A, "sTitle"), u = ge.util.get("[].[].cell")(s.aoHeader), d = Xa(Fs([], u)), t = function(o) {
    var r = sf(o);
    if (o === "")
      return Pa(A.length);
    if (r !== null)
      return [
        r >= 0 ? r : (
          // Count from left
          A.length + r
        )
        // Count from right (+ because its a negative value)
      ];
    if (typeof o == "function") {
      var n = Ho(s, b);
      return A.map(function(a, v) {
        return o(
          v,
          Gs(s, v, 0, 0, n)
        ) ? v : null;
      });
    }
    var i = typeof o == "string" ? o.match(wd) : "";
    if (i)
      switch (i[2]) {
        case "visIdx":
        case "visible":
          var f = parseInt(i[1], 10);
          if (f < 0) {
            var l = A.map(function(a, v) {
              return a.bVisible ? v : null;
            });
            return [l[l.length + f]];
          }
          return [df(s, f)];
        case "name":
          return R.map(function(a, v) {
            return a === i[1] ? v : null;
          });
        case "title":
          return B.map(function(a, v) {
            return a === i[1] ? v : null;
          });
        default:
          return [];
      }
    if (o.nodeName && o._DT_CellIndex)
      return [o._DT_CellIndex.column];
    var c = Xt(d).filter(o).map(function() {
      return Os(this);
    }).toArray();
    if (c.length || !o.nodeName)
      return c;
    var h = Xt(o).closest("*[data-dt-column]");
    return h.length ? [h.data("dt-column")] : [];
  };
  return zs("column", p, t, s, b);
}, Ad = function(s, p, b) {
  var A = s.aoColumns, R = A[p], B = s.aoData, u, d, t, o;
  if (b === void 0)
    return R.bVisible;
  if (R.bVisible === b)
    return !1;
  if (b) {
    var r = Xn(A, "bVisible").indexOf(!0, p + 1);
    for (d = 0, t = B.length; d < t; d++)
      B[d] && (o = B[d].nTr, u = B[d].anCells, o && o.insertBefore(u[p], u[r] || null));
  } else
    Xt(Xn(s.aoData, "anCells", p)).detach();
  return R.bVisible = b, Af(s), !0;
};
Ke("columns()", function(s, p) {
  s === void 0 ? s = "" : Xt.isPlainObject(s) && (p = s, s = ""), p = Ws(p);
  var b = this.iterator("table", function(A) {
    return Sd(A, s, p);
  }, 1);
  return b.selector.cols = s, b.selector.opts = p, b;
});
Xr("columns().header()", "column().header()", function(s) {
  return this.iterator("column", function(p, b) {
    var A = p.aoHeader, R = s !== void 0 ? s : p.bSortCellsTop ? 0 : A.length - 1;
    return A[R][b].cell;
  }, 1);
});
Xr("columns().footer()", "column().footer()", function(s) {
  return this.iterator("column", function(p, b) {
    var A = p.aoFooter;
    return A.length ? p.aoFooter[s !== void 0 ? s : 0][b].cell : null;
  }, 1);
});
Xr("columns().data()", "column().data()", function() {
  return this.iterator("column-rows", Gs, 1);
});
Xr("columns().render()", "column().render()", function(s) {
  return this.iterator("column-rows", function(p, b, A, R, B) {
    return Gs(p, b, A, R, B, s);
  }, 1);
});
Xr("columns().dataSrc()", "column().dataSrc()", function() {
  return this.iterator("column", function(s, p) {
    return s.aoColumns[p].mData;
  }, 1);
});
Xr("columns().cache()", "column().cache()", function(s) {
  return this.iterator("column-rows", function(p, b, A, R, B) {
    return Gi(
      p.aoData,
      B,
      s === "search" ? "_aFilterData" : "_aSortData",
      b
    );
  }, 1);
});
Xr("columns().init()", "column().init()", function() {
  return this.iterator("column", function(s, p) {
    return s.aoColumns[p];
  }, 1);
});
Xr("columns().nodes()", "column().nodes()", function() {
  return this.iterator("column-rows", function(s, p, b, A, R) {
    return Gi(s.aoData, R, "anCells", p);
  }, 1);
});
Xr("columns().titles()", "column().title()", function(s, p) {
  return this.iterator("column", function(b, A) {
    typeof s == "number" && (p = s, s = void 0);
    var R = Xt("span.dt-column-title", this.column(A).header(p));
    return s !== void 0 ? (R.html(s), this) : R.html();
  }, 1);
});
Xr("columns().types()", "column().type()", function() {
  return this.iterator("column", function(s, p) {
    var b = s.aoColumns[p].sType;
    return b || Ds(s), b;
  }, 1);
});
Xr("columns().visible()", "column().visible()", function(s, p) {
  var b = this, A = [], R = this.iterator("column", function(B, u) {
    if (s === void 0)
      return B.aoColumns[u].bVisible;
    Ad(B, u, s) && A.push(u);
  });
  return s !== void 0 && this.iterator("table", function(B) {
    Do(B, B.aoHeader), Do(B, B.aoFooter), B.aiDisplay.length || Xt(B.nTBody).find("td[colspan]").attr("colspan", Mo(B)), Wo(B), b.iterator("column", function(u, d) {
      A.includes(d) && Nr(u, null, "column-visibility", [u, d, s, p]);
    }), A.length && (p === void 0 || p) && b.columns.adjust();
  }), R;
});
Xr("columns().widths()", "column().width()", function() {
  var s = this.columns(":visible").count(), p = Xt("<tr>").html("<td>" + Array(s).join("</td><td>") + "</td>");
  Xt(this.table().body()).append(p);
  var b = p.children().map(function() {
    return Xt(this).outerWidth();
  });
  return p.remove(), this.iterator("column", function(A, R) {
    var B = Vi(A, R);
    return B !== null ? b[B] : 0;
  }, 1);
});
Xr("columns().indexes()", "column().index()", function(s) {
  return this.iterator("column", function(p, b) {
    return s === "visible" ? Vi(p, b) : b;
  }, 1);
});
Ke("columns.adjust()", function() {
  return this.iterator("table", function(s) {
    No(s);
  }, 1);
});
Ke("column.index()", function(s, p) {
  if (this.context.length !== 0) {
    var b = this.context[0];
    if (s === "fromVisible" || s === "toData")
      return df(b, p);
    if (s === "fromData" || s === "toVisible")
      return Vi(b, p);
  }
});
Ke("column()", function(s, p) {
  return Hs(this.columns(s, p));
});
var Cd = function(s, p, b) {
  var A = s.aoData, R = Ho(s, b), B = uf(Gi(A, R, "anCells")), u = Xt(Fs([], B)), d, t = s.aoColumns.length, o, r, n, i, f, l, c = function(h) {
    var a = typeof h == "function";
    if (h == null || a) {
      for (o = [], r = 0, n = R.length; r < n; r++)
        for (d = R[r], i = 0; i < t; i++)
          f = {
            row: d,
            column: i
          }, a ? (l = A[d], h(f, ta(s, d, i), l.anCells ? l.anCells[i] : null) && o.push(f)) : o.push(f);
      return o;
    }
    if (Xt.isPlainObject(h))
      return h.column !== void 0 && h.row !== void 0 && R.indexOf(h.row) !== -1 ? [h] : [];
    var v = u.filter(h).map(function(y, g) {
      return {
        // use a new object, in case someone changes the values
        row: g._DT_CellIndex.row,
        column: g._DT_CellIndex.column
      };
    }).toArray();
    return v.length || !h.nodeName ? v : (l = Xt(h).closest("*[data-dt-row]"), l.length ? [{
      row: l.data("dt-row"),
      column: l.data("dt-column")
    }] : []);
  };
  return zs("cell", p, c, s, b);
};
Ke("cells()", function(s, p, b) {
  if (Xt.isPlainObject(s) && (s.row === void 0 ? (b = s, s = null) : (b = p, p = null)), Xt.isPlainObject(p) && (b = p, p = null), p == null)
    return this.iterator("table", function(i) {
      return Cd(i, s, Ws(b));
    });
  var A = b ? {
    page: b.page,
    order: b.order,
    search: b.search
  } : {}, R = this.columns(p, A), B = this.rows(s, A), u, d, t, o, r = this.iterator("table", function(i, f) {
    var l = [];
    for (u = 0, d = B[f].length; u < d; u++)
      for (t = 0, o = R[f].length; t < o; t++)
        l.push({
          row: B[f][u],
          column: R[f][t]
        });
    return l;
  }, 1), n = b && b.selected ? this.cells(r, b) : r;
  return Xt.extend(n.selector, {
    cols: p,
    rows: s,
    opts: b
  }), n;
});
Xr("cells().nodes()", "cell().node()", function() {
  return this.iterator("cell", function(s, p, b) {
    var A = s.aoData[p];
    return A && A.anCells ? A.anCells[b] : void 0;
  }, 1);
});
Ke("cells().data()", function() {
  return this.iterator("cell", function(s, p, b) {
    return ta(s, p, b);
  }, 1);
});
Xr("cells().cache()", "cell().cache()", function(s) {
  return s = s === "search" ? "_aFilterData" : "_aSortData", this.iterator("cell", function(p, b, A) {
    return p.aoData[b][s][A];
  }, 1);
});
Xr("cells().render()", "cell().render()", function(s) {
  return this.iterator("cell", function(p, b, A) {
    return ta(p, b, A, s);
  }, 1);
});
Xr("cells().indexes()", "cell().index()", function() {
  return this.iterator("cell", function(s, p, b) {
    return {
      row: p,
      column: b,
      columnVisible: Vi(s, b)
    };
  }, 1);
});
Xr("cells().invalidate()", "cell().invalidate()", function(s) {
  return this.iterator("cell", function(p, b, A) {
    ko(p, b, s, A);
  });
});
Ke("cell()", function(s, p, b) {
  return Hs(this.cells(s, p, b));
});
Ke("cell().data()", function(s) {
  var p = this.context, b = this[0];
  return s === void 0 ? p.length && b.length ? ta(p[0], b[0].row, b[0].column) : void 0 : (Jh(p[0], b[0].row, b[0].column, s), ko(p[0], b[0].row, "data", b[0].column), this);
});
Ke("order()", function(s, p) {
  var b = this.context, A = Array.prototype.slice.call(arguments);
  return s === void 0 ? b.length !== 0 ? b[0].aaSorting : void 0 : (typeof s == "number" ? s = [[s, p]] : A.length > 1 && (s = A), this.iterator("table", function(R) {
    R.aaSorting = Array.isArray(s) ? s.slice() : s;
  }));
});
Ke("order.listener()", function(s, p, b) {
  return this.iterator("table", function(A) {
    Cf(A, s, {}, p, b);
  });
});
Ke("order.fixed()", function(s) {
  if (!s) {
    var p = this.context, b = p.length ? p[0].aaSortingFixed : void 0;
    return Array.isArray(b) ? { pre: b } : b;
  }
  return this.iterator("table", function(A) {
    A.aaSortingFixed = Xt.extend(!0, {}, s);
  });
});
Ke([
  "columns().order()",
  "column().order()"
], function(s) {
  var p = this;
  return s ? this.iterator("table", function(b, A) {
    b.aaSorting = p[A].map(function(R) {
      return [R, s];
    });
  }) : this.iterator("column", function(b, A) {
    for (var R = zo(b), B = 0, u = R.length; B < u; B++)
      if (R[B].col === A)
        return R[B].dir;
    return null;
  }, 1);
});
Xr("columns().orderable()", "column().orderable()", function(s) {
  return this.iterator("column", function(p, b) {
    var A = p.aoColumns[b];
    return s ? A.asSorting : A.bSortable;
  }, 1);
});
Ke("processing()", function(s) {
  return this.iterator("table", function(p) {
    _n(p, s);
  });
});
Ke("search()", function(s, p, b, A) {
  var R = this.context;
  return s === void 0 ? R.length !== 0 ? R[0].oPreviousSearch.search : void 0 : this.iterator("table", function(B) {
    B.oFeatures.bFilter && (typeof p == "object" ? ji(B, Xt.extend(B.oPreviousSearch, p, {
      search: s
    })) : ji(B, Xt.extend(B.oPreviousSearch, {
      search: s,
      regex: p === null ? !1 : p,
      smart: b === null ? !0 : b,
      caseInsensitive: A === null ? !0 : A
    })));
  });
});
Ke("search.fixed()", function(s, p) {
  var b = this.iterator(!0, "table", function(A) {
    var R = A.searchFixed;
    if (s) {
      if (p === void 0)
        return R[s];
      p === null ? delete R[s] : R[s] = p;
    } else
      return Object.keys(R);
    return this;
  });
  return s !== void 0 && p === void 0 ? b[0] : b;
});
Xr(
  "columns().search()",
  "column().search()",
  function(s, p, b, A) {
    return this.iterator("column", function(R, B) {
      var u = R.aoPreSearchCols;
      if (s === void 0)
        return u[B].search;
      R.oFeatures.bFilter && (typeof p == "object" ? Xt.extend(u[B], p, {
        search: s
      }) : Xt.extend(u[B], {
        search: s,
        regex: p === null ? !1 : p,
        smart: b === null ? !0 : b,
        caseInsensitive: A === null ? !0 : A
      }), ji(R, R.oPreviousSearch));
    });
  }
);
Ke(
  [
    "columns().search.fixed()",
    "column().search.fixed()"
  ],
  function(s, p) {
    var b = this.iterator(!0, "column", function(A, R) {
      var B = A.aoColumns[R].searchFixed;
      if (s) {
        if (p === void 0)
          return B[s];
        p === null ? delete B[s] : B[s] = p;
      } else
        return Object.keys(B);
      return this;
    });
    return s !== void 0 && p === void 0 ? b[0] : b;
  }
);
Ke("state()", function(s, p) {
  if (!s)
    return this.context.length ? this.context[0].oSavedState : null;
  var b = Xt.extend(!0, {}, s);
  return this.iterator("table", function(A) {
    p !== !1 && (b.time = +/* @__PURE__ */ new Date() + 100), xs(A, b, function() {
    });
  });
});
Ke("state.clear()", function() {
  return this.iterator("table", function(s) {
    s.fnStateSaveCallback.call(s.oInstance, s, {});
  });
});
Ke("state.loaded()", function() {
  return this.context.length ? this.context[0].oLoadedState : null;
});
Ke("state.save()", function() {
  return this.iterator("table", function(s) {
    Wo(s);
  });
});
ge.use = function(s, p) {
  p === "lib" || s.fn ? Xt = s : p == "win" || s.document ? (window = s, document = s.document) : (p === "datetime" || s.type === "DateTime") && (ge.DateTime = s);
};
ge.factory = function(s, p) {
  var b = !1;
  return s && s.document && (window = s, document = s.document), p && p.fn && p.fn.jquery && (Xt = p, b = !0), b;
};
ge.versionCheck = function(s, p) {
  for (var b = p ? p.split(".") : ge.version.split("."), A = s.split("."), R, B, u = 0, d = A.length; u < d; u++)
    if (R = parseInt(b[u], 10) || 0, B = parseInt(A[u], 10) || 0, R !== B)
      return R > B;
  return !0;
};
ge.isDataTable = function(s) {
  var p = Xt(s).get(0), b = !1;
  return s instanceof ge.Api ? !0 : (Xt.each(ge.settings, function(A, R) {
    var B = R.nScrollHead ? Xt("table", R.nScrollHead)[0] : null, u = R.nScrollFoot ? Xt("table", R.nScrollFoot)[0] : null;
    (R.nTable === p || B === p || u === p) && (b = !0);
  }), b);
};
ge.tables = function(s) {
  var p = !1;
  Xt.isPlainObject(s) && (p = s.api, s = s.visible);
  var b = ge.settings.filter(function(A) {
    return !!(!s || s && Xt(A.nTable).is(":visible"));
  }).map(function(A) {
    return A.nTable;
  });
  return p ? new Sr(b) : b;
};
ge.camelToHungarian = Ba;
Ke("$()", function(s, p) {
  var b = this.rows(p).nodes(), A = Xt(b);
  return Xt([].concat(
    A.filter(s).toArray(),
    A.find(s).toArray()
  ));
});
Xt.each(["on", "one", "off"], function(s, p) {
  Ke(p + "()", function() {
    var b = Array.prototype.slice.call(arguments);
    b[0] = b[0].split(/\s/).map(function(R) {
      return R.match(/\.dt\b/) ? R : R + ".dt";
    }).join(" ");
    var A = Xt(this.tables().nodes());
    return A[p].apply(A, b), this;
  });
});
Ke("clear()", function() {
  return this.iterator("table", function(s) {
    Bs(s);
  });
});
Ke("error()", function(s) {
  return this.iterator("table", function(p) {
    qn(p, 0, s);
  });
});
Ke("settings()", function() {
  return new Sr(this.context, this.context);
});
Ke("init()", function() {
  var s = this.context;
  return s.length ? s[0].oInit : null;
});
Ke("data()", function() {
  return this.iterator("table", function(s) {
    return Xn(s.aoData, "_aData");
  }).flatten();
});
Ke("trigger()", function(s, p, b) {
  return this.iterator("table", function(A) {
    return Nr(A, null, s, p, b);
  }).flatten();
});
Ke("ready()", function(s) {
  var p = this.context;
  return s ? this.tables().every(function() {
    this.context[0]._bInitComplete ? s.call(this) : this.on("init", function() {
      s.call(this);
    });
  }) : p.length ? p[0]._bInitComplete || !1 : null;
});
Ke("destroy()", function(s) {
  return s = s || !1, this.iterator("table", function(p) {
    var b = p.oClasses, A = p.nTable, R = p.nTBody, B = p.nTHead, u = p.nTFoot, d = Xt(A), t = Xt(R), o = Xt(p.nTableWrapper), r = p.aoData.map(function(h) {
      return h ? h.nTr : null;
    }), n = b.order;
    p.bDestroying = !0, Nr(p, "aoDestroyCallback", "destroy", [p], !0), s || new Sr(p).columns().visible(!0), o.off(".DT").find(":not(tbody *)").off(".DT"), Xt(window).off(".DT-" + p.sInstance), A != B.parentNode && (d.children("thead").detach(), d.append(B)), u && A != u.parentNode && (d.children("tfoot").detach(), d.append(u)), p.aaSorting = [], p.aaSortingFixed = [], ms(p), Xt("th, td", B).removeClass(
      n.canAsc + " " + n.canDesc + " " + n.isAsc + " " + n.isDesc
    ).css("width", ""), t.children().detach(), t.append(r);
    var i = p.nTableWrapper.parentNode, f = p.nTableWrapper.nextSibling, l = s ? "remove" : "detach";
    d[l](), o[l](), !s && i && (i.insertBefore(A, f), d.css("width", p.sDestroyWidth).removeClass(b.table));
    var c = ge.settings.indexOf(p);
    c !== -1 && ge.settings.splice(c, 1);
  });
});
Xt.each(["column", "row", "cell"], function(s, p) {
  Ke(p + "s().every()", function(b) {
    var A = this.selector.opts, R = this, B, u = 0;
    return this.iterator("every", function(d, t, o) {
      B = R[p](t, A), p === "cell" ? b.call(B, B[0][0].row, B[0][0].column, o, u) : b.call(B, t, o, u), u++;
    });
  });
});
Ke("i18n()", function(s, p, b) {
  var A = this.context[0], R = ui(s)(A.oLanguage);
  return R === void 0 && (R = p), Xt.isPlainObject(R) && (R = b !== void 0 && R[b] !== void 0 ? R[b] : R._), typeof R == "string" ? R.replace("%d", b) : R;
});
ge.version = "2.0.0";
ge.settings = [];
ge.models = {};
ge.models.oSearch = {
  /**
   * Flag to indicate if the filtering should be case insensitive or not
   */
  caseInsensitive: !0,
  /**
   * Applied search term
   */
  search: "",
  /**
   * Flag to indicate if the search term should be interpreted as a
   * regular expression (true) or not (false) and therefore and special
   * regex characters escaped.
   */
  regex: !1,
  /**
   * Flag to indicate if DataTables is to use its smart filtering or not.
   */
  smart: !0,
  /**
   * Flag to indicate if DataTables should only trigger a search when
   * the return key is pressed.
   */
  return: !1
};
ge.models.oRow = {
  /**
   * TR element for the row
   */
  nTr: null,
  /**
   * Array of TD elements for each row. This is null until the row has been
   * created.
   */
  anCells: null,
  /**
   * Data object from the original data source for the row. This is either
   * an array if using the traditional form of DataTables, or an object if
   * using mData options. The exact type will depend on the passed in
   * data from the data source, or will be an array if using DOM a data
   * source.
   */
  _aData: [],
  /**
   * Sorting data cache - this array is ostensibly the same length as the
   * number of columns (although each index is generated only as it is
   * needed), and holds the data that is used for sorting each column in the
   * row. We do this cache generation at the start of the sort in order that
   * the formatting of the sort data need be done only once for each cell
   * per sort. This array should not be read from or written to by anything
   * other than the master sorting methods.
   */
  _aSortData: null,
  /**
   * Per cell filtering data cache. As per the sort data cache, used to
   * increase the performance of the filtering in DataTables
   */
  _aFilterData: null,
  /**
   * Filtering data cache. This is the same as the cell filtering cache, but
   * in this case a string rather than an array. This is easily computed with
   * a join on `_aFilterData`, but is provided as a cache so the join isn't
   * needed on every search (memory traded for performance)
   */
  _sFilterRow: null,
  /**
   * Denote if the original data source was from the DOM, or the data source
   * object. This is used for invalidating data, so DataTables can
   * automatically read data from the original source, unless uninstructed
   * otherwise.
   */
  src: null,
  /**
   * Index in the aoData array. This saves an indexOf lookup when we have the
   * object, but want to know the index
   */
  idx: -1,
  /**
   * Cached display value
   */
  displayData: null
};
ge.models.oColumn = {
  /**
   * Column index.
   */
  idx: null,
  /**
   * A list of the columns that sorting should occur on when this column
   * is sorted. That this property is an array allows multi-column sorting
   * to be defined for a column (for example first name / last name columns
   * would benefit from this). The values are integers pointing to the
   * columns to be sorted on (typically it will be a single integer pointing
   * at itself, but that doesn't need to be the case).
   */
  aDataSort: null,
  /**
   * Define the sorting directions that are applied to the column, in sequence
   * as the column is repeatedly sorted upon - i.e. the first value is used
   * as the sorting direction when the column if first sorted (clicked on).
   * Sort it again (click again) and it will move on to the next index.
   * Repeat until loop.
   */
  asSorting: null,
  /**
   * Flag to indicate if the column is searchable, and thus should be included
   * in the filtering or not.
   */
  bSearchable: null,
  /**
   * Flag to indicate if the column is sortable or not.
   */
  bSortable: null,
  /**
   * Flag to indicate if the column is currently visible in the table or not
   */
  bVisible: null,
  /**
   * Store for manual type assignment using the `column.type` option. This
   * is held in store so we can manipulate the column's `sType` property.
   */
  _sManualType: null,
  /**
   * Flag to indicate if HTML5 data attributes should be used as the data
   * source for filtering or sorting. True is either are.
   */
  _bAttrSrc: !1,
  /**
   * Developer definable function that is called whenever a cell is created (Ajax source,
   * etc) or processed for input (DOM source). This can be used as a compliment to mRender
   * allowing you to modify the DOM element (add background colour for example) when the
   * element is available.
   */
  fnCreatedCell: null,
  /**
   * Function to get data from a cell in a column. You should <b>never</b>
   * access data directly through _aData internally in DataTables - always use
   * the method attached to this property. It allows mData to function as
   * required. This function is automatically assigned by the column
   * initialisation method
   */
  fnGetData: null,
  /**
   * Function to set data for a cell in the column. You should <b>never</b>
   * set the data directly to _aData internally in DataTables - always use
   * this method. It allows mData to function as required. This function
   * is automatically assigned by the column initialisation method
   */
  fnSetData: null,
  /**
   * Property to read the value for the cells in the column from the data
   * source array / object. If null, then the default content is used, if a
   * function is given then the return from the function is used.
   */
  mData: null,
  /**
   * Partner property to mData which is used (only when defined) to get
   * the data - i.e. it is basically the same as mData, but without the
   * 'set' option, and also the data fed to it is the result from mData.
   * This is the rendering method to match the data method of mData.
   */
  mRender: null,
  /**
   * The class to apply to all TD elements in the table's TBODY for the column
   */
  sClass: null,
  /**
   * When DataTables calculates the column widths to assign to each column,
   * it finds the longest string in each column and then constructs a
   * temporary table and reads the widths from that. The problem with this
   * is that "mmm" is much wider then "iiii", but the latter is a longer
   * string - thus the calculation can go wrong (doing it properly and putting
   * it into an DOM object and measuring that is horribly(!) slow). Thus as
   * a "work around" we provide this option. It will append its value to the
   * text that is found to be the longest string for the column - i.e. padding.
   */
  sContentPadding: null,
  /**
   * Allows a default value to be given for a column's data, and will be used
   * whenever a null data source is encountered (this can be because mData
   * is set to null, or because the data source itself is null).
   */
  sDefaultContent: null,
  /**
   * Name for the column, allowing reference to the column by name as well as
   * by index (needs a lookup to work by name).
   */
  sName: null,
  /**
   * Custom sorting data type - defines which of the available plug-ins in
   * afnSortData the custom sorting will use - if any is defined.
   */
  sSortDataType: "std",
  /**
   * Class to be applied to the header element when sorting on this column
   */
  sSortingClass: null,
  /**
   * Title of the column - what is seen in the TH element (nTh).
   */
  sTitle: null,
  /**
   * Column sorting and filtering type
   */
  sType: null,
  /**
   * Width of the column
   */
  sWidth: null,
  /**
   * Width of the column when it was first "encountered"
   */
  sWidthOrig: null,
  /** Cached string which is the longest in the column */
  maxLenString: null,
  /**
   * Store for named searches
   */
  searchFixed: null
};
ge.defaults = {
  /**
   * An array of data to use for the table, passed in at initialisation which
   * will be used in preference to any data which is already in the DOM. This is
   * particularly useful for constructing tables purely in Javascript, for
   * example with a custom Ajax call.
   */
  aaData: null,
  /**
   * If ordering is enabled, then DataTables will perform a first pass sort on
   * initialisation. You can define which column(s) the sort is performed
   * upon, and the sorting direction, with this variable. The `sorting` array
   * should contain an array for each column to be sorted initially containing
   * the column's index and a direction string ('asc' or 'desc').
   */
  aaSorting: [[0, "asc"]],
  /**
   * This parameter is basically identical to the `sorting` parameter, but
   * cannot be overridden by user interaction with the table. What this means
   * is that you could have a column (visible or hidden) which the sorting
   * will always be forced on first - any sorting after that (from the user)
   * will then be performed as required. This can be useful for grouping rows
   * together.
   */
  aaSortingFixed: [],
  /**
   * DataTables can be instructed to load data to display in the table from a
   * Ajax source. This option defines how that Ajax call is made and where to.
   *
   * The `ajax` property has three different modes of operation, depending on
   * how it is defined. These are:
   *
   * * `string` - Set the URL from where the data should be loaded from.
   * * `object` - Define properties for `jQuery.ajax`.
   * * `function` - Custom data get function
   *
   * `string`
   * --------
   *
   * As a string, the `ajax` property simply defines the URL from which
   * DataTables will load data.
   *
   * `object`
   * --------
   *
   * As an object, the parameters in the object are passed to
   * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control
   * of the Ajax request. DataTables has a number of default parameters which
   * you can override using this option. Please refer to the jQuery
   * documentation for a full description of the options available, although
   * the following parameters provide additional options in DataTables or
   * require special consideration:
   *
   * * `data` - As with jQuery, `data` can be provided as an object, but it
   *   can also be used as a function to manipulate the data DataTables sends
   *   to the server. The function takes a single parameter, an object of
   *   parameters with the values that DataTables has readied for sending. An
   *   object may be returned which will be merged into the DataTables
   *   defaults, or you can add the items to the object that was passed in and
   *   not return anything from the function. This supersedes `fnServerParams`
   *   from DataTables 1.9-.
   *
   * * `dataSrc` - By default DataTables will look for the property `data` (or
   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
   *   from an Ajax source or for server-side processing - this parameter
   *   allows that property to be changed. You can use Javascript dotted
   *   object notation to get a data source for multiple levels of nesting, or
   *   it my be used as a function. As a function it takes a single parameter,
   *   the JSON returned from the server, which can be manipulated as
   *   required, with the returned value being that used by DataTables as the
   *   data source for the table.
   *
   * * `success` - Should not be overridden it is used internally in
   *   DataTables. To manipulate / transform the data returned by the server
   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
   *
   * `function`
   * ----------
   *
   * As a function, making the Ajax call is left up to yourself allowing
   * complete control of the Ajax request. Indeed, if desired, a method other
   * than Ajax could be used to obtain the required data, such as Web storage
   * or an AIR database.
   *
   * The function is given four parameters and no return is required. The
   * parameters are:
   *
   * 1. _object_ - Data to send to the server
   * 2. _function_ - Callback function that must be executed when the required
   *    data has been obtained. That data should be passed into the callback
   *    as the only parameter
   * 3. _object_ - DataTables settings object for the table
   */
  ajax: null,
  /**
   * This parameter allows you to readily specify the entries in the length drop
   * down menu that DataTables shows when pagination is enabled. It can be
   * either a 1D array of options which will be used for both the displayed
   * option and the value, or a 2D array which will use the array in the first
   * position as the value, and the array in the second position as the
   * displayed options (useful for language strings such as 'All').
   *
   * Note that the `pageLength` property will be automatically set to the
   * first value given in this array, unless `pageLength` is also provided.
   */
  aLengthMenu: [10, 25, 50, 100],
  /**
   * The `columns` option in the initialisation parameter allows you to define
   * details about the way individual columns behave. For a full list of
   * column options that can be set, please see
   * {@link DataTable.defaults.column}. Note that if you use `columns` to
   * define your columns, you must have an entry in the array for every single
   * column that you have in your table (these can be null if you don't which
   * to specify any options).
   */
  aoColumns: null,
  /**
   * Very similar to `columns`, `columnDefs` allows you to target a specific
   * column, multiple columns, or all columns, using the `targets` property of
   * each object in the array. This allows great flexibility when creating
   * tables, as the `columnDefs` arrays can be of any length, targeting the
   * columns you specifically want. `columnDefs` may use any of the column
   * options available: {@link DataTable.defaults.column}, but it _must_
   * have `targets` defined in each object in the array. Values in the `targets`
   * array may be:
   *   <ul>
   *     <li>a string - class name will be matched on the TH for the column</li>
   *     <li>0 or a positive integer - column index counting from the left</li>
   *     <li>a negative integer - column index counting from the right</li>
   *     <li>the string "_all" - all columns (i.e. assign a default)</li>
   *   </ul>
   */
  aoColumnDefs: null,
  /**
   * Basically the same as `search`, this parameter defines the individual column
   * filtering state at initialisation time. The array must be of the same size
   * as the number of columns, and each element be an object with the parameters
   * `search` and `escapeRegex` (the latter is optional). 'null' is also
   * accepted and the default will be used.
   */
  aoSearchCols: [],
  /**
   * Enable or disable automatic column width calculation. This can be disabled
   * as an optimisation (it takes some time to calculate the widths) if the
   * tables widths are passed in using `columns`.
   */
  bAutoWidth: !0,
  /**
   * Deferred rendering can provide DataTables with a huge speed boost when you
   * are using an Ajax or JS data source for the table. This option, when set to
   * true, will cause DataTables to defer the creation of the table elements for
   * each row until they are needed for a draw - saving a significant amount of
   * time.
   */
  bDeferRender: !0,
  /**
   * Replace a DataTable which matches the given selector and replace it with
   * one which has the properties of the new initialisation object passed. If no
   * table matches the selector, then the new DataTable will be constructed as
   * per normal.
   */
  bDestroy: !1,
  /**
   * Enable or disable filtering of data. Filtering in DataTables is "smart" in
   * that it allows the end user to input multiple words (space separated) and
   * will match a row containing those words, even if not in the order that was
   * specified (this allow matching across multiple columns). Note that if you
   * wish to use filtering in DataTables this must remain 'true' - to remove the
   * default filtering input box and retain filtering abilities, please use
   * {@link DataTable.defaults.dom}.
   */
  bFilter: !0,
  /**
   * Used only for compatiblity with DT1
   * @deprecated
   */
  bInfo: !0,
  /**
   * Used only for compatiblity with DT1
   * @deprecated
   */
  bLengthChange: !0,
  /**
   * Enable or disable pagination.
   */
  bPaginate: !0,
  /**
   * Enable or disable the display of a 'processing' indicator when the table is
   * being processed (e.g. a sort). This is particularly useful for tables with
   * large amounts of data where it can take a noticeable amount of time to sort
   * the entries.
   */
  bProcessing: !1,
  /**
   * Retrieve the DataTables object for the given selector. Note that if the
   * table has already been initialised, this parameter will cause DataTables
   * to simply return the object that has already been set up - it will not take
   * account of any changes you might have made to the initialisation object
   * passed to DataTables (setting this parameter to true is an acknowledgement
   * that you understand this). `destroy` can be used to reinitialise a table if
   * you need.
   */
  bRetrieve: !1,
  /**
   * When vertical (y) scrolling is enabled, DataTables will force the height of
   * the table's viewport to the given height at all times (useful for layout).
   * However, this can look odd when filtering data down to a small data set,
   * and the footer is left "floating" further down. This parameter (when
   * enabled) will cause DataTables to collapse the table's viewport down when
   * the result set will fit within the given Y height.
   */
  bScrollCollapse: !1,
  /**
   * Configure DataTables to use server-side processing. Note that the
   * `ajax` parameter must also be given in order to give DataTables a
   * source to obtain the required data for each draw.
   */
  bServerSide: !1,
  /**
   * Enable or disable sorting of columns. Sorting of individual columns can be
   * disabled by the `sortable` option for each column.
   */
  bSort: !0,
  /**
   * Enable or display DataTables' ability to sort multiple columns at the
   * same time (activated by shift-click by the user).
   */
  bSortMulti: !0,
  /**
   * Allows control over whether DataTables should use the top (true) unique
   * cell that is found for a single column, or the bottom (false - default).
   * This is useful when using complex headers.
   */
  bSortCellsTop: null,
  /**
   * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
   * `sorting\_3` to the columns which are currently being sorted on. This is
   * presented as a feature switch as it can increase processing time (while
   * classes are removed and added) so for large data sets you might want to
   * turn this off.
   */
  bSortClasses: !0,
  /**
   * Enable or disable state saving. When enabled HTML5 `localStorage` will be
   * used to save table display information such as pagination information,
   * display length, filtering and sorting. As such when the end user reloads
   * the page the display display will match what thy had previously set up.
   */
  bStateSave: !1,
  /**
   * This function is called when a TR element is created (and all TD child
   * elements have been inserted), or registered if using a DOM source, allowing
   * manipulation of the TR element (adding classes etc).
   */
  fnCreatedRow: null,
  /**
   * This function is called on every 'draw' event, and allows you to
   * dynamically modify any aspect you want about the created DOM.
   */
  fnDrawCallback: null,
  /**
   * Identical to fnHeaderCallback() but for the table footer this function
   * allows you to modify the table footer on every 'draw' event.
   */
  fnFooterCallback: null,
  /**
   * When rendering large numbers in the information element for the table
   * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
   * to have a comma separator for the 'thousands' units (e.g. 1 million is
   * rendered as "1,000,000") to help readability for the end user. This
   * function will override the default method DataTables uses.
   */
  fnFormatNumber: function(s) {
    return s.toString().replace(
      /\B(?=(\d{3})+(?!\d))/g,
      this.oLanguage.sThousands
    );
  },
  /**
   * This function is called on every 'draw' event, and allows you to
   * dynamically modify the header row. This can be used to calculate and
   * display useful information about the table.
   */
  fnHeaderCallback: null,
  /**
   * The information element can be used to convey information about the current
   * state of the table. Although the internationalisation options presented by
   * DataTables are quite capable of dealing with most customisations, there may
   * be times where you wish to customise the string further. This callback
   * allows you to do exactly that.
   */
  fnInfoCallback: null,
  /**
   * Called when the table has been initialised. Normally DataTables will
   * initialise sequentially and there will be no need for this function,
   * however, this does not hold true when using external language information
   * since that is obtained using an async XHR call.
   */
  fnInitComplete: null,
  /**
   * Called at the very start of each table draw and can be used to cancel the
   * draw by returning false, any other return (including undefined) results in
   * the full draw occurring).
   */
  fnPreDrawCallback: null,
  /**
   * This function allows you to 'post process' each row after it have been
   * generated for each table draw, but before it is rendered on screen. This
   * function might be used for setting the row class name etc.
   */
  fnRowCallback: null,
  /**
   * Load the table state. With this function you can define from where, and how, the
   * state of a table is loaded. By default DataTables will load from `localStorage`
   * but you might wish to use a server-side database or cookies.
   */
  fnStateLoadCallback: function(s) {
    try {
      return JSON.parse(
        (s.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
          "DataTables_" + s.sInstance + "_" + location.pathname
        )
      );
    } catch {
      return {};
    }
  },
  /**
   * Callback which allows modification of the saved state prior to loading that state.
   * This callback is called when the table is loading state from the stored data, but
   * prior to the settings object being modified by the saved state. Note that for
   * plug-in authors, you should use the `stateLoadParams` event to load parameters for
   * a plug-in.
   */
  fnStateLoadParams: null,
  /**
   * Callback that is called when the state has been loaded from the state saving method
   * and the DataTables settings object has been modified as a result of the loaded state.
   */
  fnStateLoaded: null,
  /**
   * Save the table state. This function allows you to define where and how the state
   * information for the table is stored By default DataTables will use `localStorage`
   * but you might wish to use a server-side database or cookies.
   */
  fnStateSaveCallback: function(s, p) {
    try {
      (s.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
        "DataTables_" + s.sInstance + "_" + location.pathname,
        JSON.stringify(p)
      );
    } catch {
    }
  },
  /**
   * Callback which allows modification of the state to be saved. Called when the table
   * has changed state a new state save is required. This method allows modification of
   * the state saving object prior to actually doing the save, including addition or
   * other state properties or modification. Note that for plug-in authors, you should
   * use the `stateSaveParams` event to save parameters for a plug-in.
   */
  fnStateSaveParams: null,
  /**
   * Duration for which the saved state information is considered valid. After this period
   * has elapsed the state will be returned to the default.
   * Value is given in seconds.
   */
  iStateDuration: 7200,
  /**
   * Number of rows to display on a single page when using pagination. If
   * feature enabled (`lengthChange`) then the end user will be able to override
   * this to a custom setting using a pop-up menu.
   */
  iDisplayLength: 10,
  /**
   * Define the starting point for data display when using DataTables with
   * pagination. Note that this parameter is the number of records, rather than
   * the page number, so if you have 10 records per page and want to start on
   * the third page, it should be "20".
   */
  iDisplayStart: 0,
  /**
   * By default DataTables allows keyboard navigation of the table (sorting, paging,
   * and filtering) by adding a `tabindex` attribute to the required elements. This
   * allows you to tab through the controls and press the enter key to activate them.
   * The tabindex is default 0, meaning that the tab follows the flow of the document.
   * You can overrule this using this parameter if you wish. Use a value of -1 to
   * disable built-in keyboard navigation.
   */
  iTabIndex: 0,
  /**
   * Classes that DataTables assigns to the various components and features
   * that it adds to the HTML table. This allows classes to be configured
   * during initialisation in addition to through the static
   * {@link DataTable.ext.oStdClasses} object).
   */
  oClasses: {},
  /**
   * All strings that DataTables uses in the user interface that it creates
   * are defined in this object, allowing you to modified them individually or
   * completely replace them all as required.
   */
  oLanguage: {
    /**
     * Strings that are used for WAI-ARIA labels and controls only (these are not
     * actually visible on the page, but will be read by screenreaders, and thus
     * must be internationalised as well).
     */
    oAria: {
      /**
       * ARIA label that is added to the table headers when the column may be sorted
       */
      orderable: ": Activate to sort",
      /**
       * ARIA label that is added to the table headers when the column is currently being sorted
       */
      orderableReverse: ": Activate to invert sorting",
      /**
       * ARIA label that is added to the table headers when the column is currently being 
       * sorted and next step is to remove sorting
       */
      orderableRemove: ": Activate to remove sorting",
      paginate: {
        first: "First",
        last: "Last",
        next: "Next",
        previous: "Previous"
      }
    },
    /**
     * Pagination string used by DataTables for the built-in pagination
     * control types.
     */
    oPaginate: {
      /**
       * Label and character for first page button
       */
      sFirst: "Â«",
      /**
       * Last page button
       */
      sLast: "Â»",
      /**
       * Next page button
       */
      sNext: "âº",
      /**
       * Previous page button
       */
      sPrevious: "â¹"
    },
    /**
     * Plural object for the data type the table is showing
     */
    entries: {
      _: "entries",
      1: "entry"
    },
    /**
     * This string is shown in preference to `zeroRecords` when the table is
     * empty of data (regardless of filtering). Note that this is an optional
     * parameter - if it is not given, the value of `zeroRecords` will be used
     * instead (either the default or given value).
     */
    sEmptyTable: "No data available in table",
    /**
     * This string gives information to the end user about the information
     * that is current on display on the page. The following tokens can be
     * used in the string and will be dynamically replaced as the table
     * display updates. This tokens can be placed anywhere in the string, or
     * removed as needed by the language requires:
     *
     * * `\_START\_` - Display index of the first record on the current page
     * * `\_END\_` - Display index of the last record on the current page
     * * `\_TOTAL\_` - Number of records in the table after filtering
     * * `\_MAX\_` - Number of records in the table without filtering
     * * `\_PAGE\_` - Current page number
     * * `\_PAGES\_` - Total number of pages of data in the table
     */
    sInfo: "Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_",
    /**
     * Display information string for when the table is empty. Typically the
     * format of this string should match `info`.
     */
    sInfoEmpty: "Showing 0 to 0 of 0 _ENTRIES-TOTAL_",
    /**
     * When a user filters the information in a table, this string is appended
     * to the information (`info`) to give an idea of how strong the filtering
     * is. The variable _MAX_ is dynamically updated.
     */
    sInfoFiltered: "(filtered from _MAX_ total _ENTRIES-MAX_)",
    /**
     * If can be useful to append extra information to the info string at times,
     * and this variable does exactly that. This information will be appended to
     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
     * being used) at all times.
     */
    sInfoPostFix: "",
    /**
     * This decimal place operator is a little different from the other
     * language options since DataTables doesn't output floating point
     * numbers, so it won't ever use this for display of a number. Rather,
     * what this parameter does is modify the sort methods of the table so
     * that numbers which are in a format which has a character other than
     * a period (`.`) as a decimal place will be sorted numerically.
     *
     * Note that numbers with different decimal places cannot be shown in
     * the same table and still be sortable, the table must be consistent.
     * However, multiple different tables on the page can use different
     * decimal place characters.
     */
    sDecimal: "",
    /**
     * DataTables has a build in number formatter (`formatNumber`) which is
     * used to format large numbers that are used in the table information.
     * By default a comma is used, but this can be trivially changed to any
     * character you wish with this parameter.
     */
    sThousands: ",",
    /**
     * Detail the action that will be taken when the drop down menu for the
     * pagination length option is changed. The '_MENU_' variable is replaced
     * with a default select list of 10, 25, 50 and 100, and can be replaced
     * with a custom select box if required.
     */
    sLengthMenu: "_MENU_ _ENTRIES_ per page",
    /**
     * When using Ajax sourced data and during the first draw when DataTables is
     * gathering the data, this message is shown in an empty row in the table to
     * indicate to the end user the the data is being loaded. Note that this
     * parameter is not used when loading data by server-side processing, just
     * Ajax sourced data with client-side processing.
     */
    sLoadingRecords: "Loading...",
    /**
     * Text which is displayed when the table is processing a user action
     * (usually a sort command or similar).
     */
    sProcessing: "",
    /**
     * Details the actions that will be taken when the user types into the
     * filtering input text box. The variable "_INPUT_", if used in the string,
     * is replaced with the HTML text box for the filtering input allowing
     * control over where it appears in the string. If "_INPUT_" is not given
     * then the input box is appended to the string automatically.
     */
    sSearch: "Search:",
    /**
     * Assign a `placeholder` attribute to the search `input` element
     *  @type string
     *  @default 
     *
     *  @dtopt Language
     *  @name DataTable.defaults.language.searchPlaceholder
     */
    sSearchPlaceholder: "",
    /**
     * All of the language information can be stored in a file on the
     * server-side, which DataTables will look up if this parameter is passed.
     * It must store the URL of the language file, which is in a JSON format,
     * and the object has the same properties as the oLanguage object in the
     * initialiser object (i.e. the above parameters). Please refer to one of
     * the example language files to see how this works in action.
     */
    sUrl: "",
    /**
     * Text shown inside the table records when the is no information to be
     * displayed after filtering. `emptyTable` is shown when there is simply no
     * information in the table at all (regardless of filtering).
     */
    sZeroRecords: "No matching records found"
  },
  /**
   * This parameter allows you to have define the global filtering state at
   * initialisation time. As an object the `search` parameter must be
   * defined, but all other parameters are optional. When `regex` is true,
   * the search string will be treated as a regular expression, when false
   * (default) it will be treated as a straight string. When `smart`
   * DataTables will use it's smart filtering methods (to word match at
   * any point in the data), when false this will not be done.
   */
  oSearch: Xt.extend({}, ge.models.oSearch),
  /**
   * Table and control layout. This replaces the legacy `dom` option.
   */
  layout: {
    topStart: "pageLength",
    topEnd: "search",
    bottomStart: "info",
    bottomEnd: "paging"
  },
  /**
   * Legacy DOM layout option
   */
  sDom: null,
  /**
   * Search delay option. This will throttle full table searches that use the
   * DataTables provided search input element (it does not effect calls to
   * `dt-api search()`, providing a delay before the search is made.
   */
  searchDelay: null,
  /**
   * DataTables features six different built-in options for the buttons to
   * display for pagination control:
   *
   * * `numbers` - Page number buttons only
   * * `simple` - 'Previous' and 'Next' buttons only
   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers
   */
  sPaginationType: "full_numbers",
  /**
   * Enable horizontal scrolling. When a table is too wide to fit into a
   * certain layout, or you have a large number of columns in the table, you
   * can enable x-scrolling to show the table in a viewport, which can be
   * scrolled. This property can be `true` which will allow the table to
   * scroll horizontally when needed, or any CSS unit, or a number (in which
   * case it will be treated as a pixel measurement). Setting as simply `true`
   * is recommended.
   */
  sScrollX: "",
  /**
   * This property can be used to force a DataTable to use more width than it
   * might otherwise do when x-scrolling is enabled. For example if you have a
   * table which requires to be well spaced, this parameter is useful for
   * "over-sizing" the table, and thus forcing scrolling. This property can by
   * any CSS unit, or a number (in which case it will be treated as a pixel
   * measurement).
   */
  sScrollXInner: "",
  /**
   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
   * to the given height, and enable scrolling for any data which overflows the
   * current viewport. This can be used as an alternative to paging to display
   * a lot of data in a small area (although paging and scrolling can both be
   * enabled at the same time). This property can be any CSS unit, or a number
   * (in which case it will be treated as a pixel measurement).
   */
  sScrollY: "",
  /**
   * __Deprecated__ The functionality provided by this parameter has now been
   * superseded by that provided through `ajax`, which should be used instead.
   *
   * Set the HTTP method that is used to make the Ajax call for server-side
   * processing or Ajax sourced data.
   */
  sServerMethod: "GET",
  /**
   * DataTables makes use of renderers when displaying HTML elements for
   * a table. These renderers can be added or modified by plug-ins to
   * generate suitable mark-up for a site. For example the Bootstrap
   * integration plug-in for DataTables uses a paging button renderer to
   * display pagination buttons in the mark-up required by Bootstrap.
   *
   * For further information about the renderers available see
   * DataTable.ext.renderer
   */
  renderer: null,
  /**
   * Set the data property name that DataTables should use to get a row's id
   * to set as the `id` property in the node.
   */
  rowId: "DT_RowId",
  /**
   * Caption value
   */
  caption: null
};
Lo(ge.defaults);
ge.defaults.column = {
  /**
   * Define which column(s) an order will occur on for this column. This
   * allows a column's ordering to take multiple columns into account when
   * doing a sort or use the data from a different column. For example first
   * name / last name columns make sense to do a multi-column sort over the
   * two columns.
   */
  aDataSort: null,
  iDataSort: -1,
  ariaTitle: "",
  /**
   * You can control the default ordering direction, and even alter the
   * behaviour of the sort handler (i.e. only allow ascending ordering etc)
   * using this parameter.
   */
  asSorting: ["asc", "desc", ""],
  /**
   * Enable or disable filtering on the data in this column.
   */
  bSearchable: !0,
  /**
   * Enable or disable ordering on this column.
   */
  bSortable: !0,
  /**
   * Enable or disable the display of this column.
   */
  bVisible: !0,
  /**
   * Developer definable function that is called whenever a cell is created (Ajax source,
   * etc) or processed for input (DOM source). This can be used as a compliment to mRender
   * allowing you to modify the DOM element (add background colour for example) when the
   * element is available.
   */
  fnCreatedCell: null,
  /**
   * This property can be used to read data from any data source property,
   * including deeply nested objects / properties. `data` can be given in a
   * number of different ways which effect its behaviour:
   *
   * * `integer` - treated as an array index for the data source. This is the
   *   default that DataTables uses (incrementally increased for each column).
   * * `string` - read an object property from the data source. There are
   *   three 'special' options that can be used in the string to alter how
   *   DataTables reads the data from the source object:
   *    * `.` - Dotted Javascript notation. Just as you use a `.` in
   *      Javascript to read from nested objects, so to can the options
   *      specified in `data`. For example: `browser.version` or
   *      `browser.name`. If your object parameter name contains a period, use
   *      `\\` to escape it - i.e. `first\\.name`.
   *    * `[]` - Array notation. DataTables can automatically combine data
   *      from and array source, joining the data with the characters provided
   *      between the two brackets. For example: `name[, ]` would provide a
   *      comma-space separated list from the source array. If no characters
   *      are provided between the brackets, the original array source is
   *      returned.
   *    * `()` - Function notation. Adding `()` to the end of a parameter will
   *      execute a function of the name given. For example: `browser()` for a
   *      simple function on the data source, `browser.version()` for a
   *      function in a nested property or even `browser().version` to get an
   *      object property if the function called returns an object. Note that
   *      function notation is recommended for use in `render` rather than
   *      `data` as it is much simpler to use as a renderer.
   * * `null` - use the original data source for the row rather than plucking
   *   data directly from it. This action has effects on two other
   *   initialisation options:
   *    * `defaultContent` - When null is given as the `data` option and
   *      `defaultContent` is specified for the column, the value defined by
   *      `defaultContent` will be used for the cell.
   *    * `render` - When null is used for the `data` option and the `render`
   *      option is specified for the column, the whole data source for the
   *      row is used for the renderer.
   * * `function` - the function given will be executed whenever DataTables
   *   needs to set or get the data for a cell in the column. The function
   *   takes three parameters:
   *    * Parameters:
   *      * `{array|object}` The data source for the row
   *      * `{string}` The type call data requested - this will be 'set' when
   *        setting data or 'filter', 'display', 'type', 'sort' or undefined
   *        when gathering data. Note that when `undefined` is given for the
   *        type DataTables expects to get the raw data for the object back<
   *      * `{*}` Data to set when the second parameter is 'set'.
   *    * Return:
   *      * The return value from the function is not required when 'set' is
   *        the type of call, but otherwise the return is what will be used
   *        for the data requested.
   *
   * Note that `data` is a getter and setter option. If you just require
   * formatting of data for output, you will likely want to use `render` which
   * is simply a getter and thus simpler to use.
   *
   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
   * name change reflects the flexibility of this property and is consistent
   * with the naming of mRender. If 'mDataProp' is given, then it will still
   * be used by DataTables, as it automatically maps the old name to the new
   * if required.
   */
  mData: null,
  /**
   * This property is the rendering partner to `data` and it is suggested that
   * when you want to manipulate data for display (including filtering,
   * sorting etc) without altering the underlying data for the table, use this
   * property. `render` can be considered to be the the read only companion to
   * `data` which is read / write (then as such more complex). Like `data`
   * this option can be given in a number of different ways to effect its
   * behaviour:
   *
   * * `integer` - treated as an array index for the data source. This is the
   *   default that DataTables uses (incrementally increased for each column).
   * * `string` - read an object property from the data source. There are
   *   three 'special' options that can be used in the string to alter how
   *   DataTables reads the data from the source object:
   *    * `.` - Dotted Javascript notation. Just as you use a `.` in
   *      Javascript to read from nested objects, so to can the options
   *      specified in `data`. For example: `browser.version` or
   *      `browser.name`. If your object parameter name contains a period, use
   *      `\\` to escape it - i.e. `first\\.name`.
   *    * `[]` - Array notation. DataTables can automatically combine data
   *      from and array source, joining the data with the characters provided
   *      between the two brackets. For example: `name[, ]` would provide a
   *      comma-space separated list from the source array. If no characters
   *      are provided between the brackets, the original array source is
   *      returned.
   *    * `()` - Function notation. Adding `()` to the end of a parameter will
   *      execute a function of the name given. For example: `browser()` for a
   *      simple function on the data source, `browser.version()` for a
   *      function in a nested property or even `browser().version` to get an
   *      object property if the function called returns an object.
   * * `object` - use different data for the different data types requested by
   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
   *   of the object is the data type the property refers to and the value can
   *   defined using an integer, string or function using the same rules as
   *   `render` normally does. Note that an `_` option _must_ be specified.
   *   This is the default value to use if you haven't specified a value for
   *   the data type requested by DataTables.
   * * `function` - the function given will be executed whenever DataTables
   *   needs to set or get the data for a cell in the column. The function
   *   takes three parameters:
   *    * Parameters:
   *      * {array|object} The data source for the row (based on `data`)
   *      * {string} The type call data requested - this will be 'filter',
   *        'display', 'type' or 'sort'.
   *      * {array|object} The full data source for the row (not based on
   *        `data`)
   *    * Return:
   *      * The return value from the function is what will be used for the
   *        data requested.
   */
  mRender: null,
  /**
   * Change the cell type created for the column - either TD cells or TH cells. This
   * can be useful as TH cells have semantic meaning in the table body, allowing them
   * to act as a header for a row (you may wish to add scope='row' to the TH elements).
   */
  sCellType: "td",
  /**
   * Class to give to each cell in this column.
   */
  sClass: "",
  /**
   * When DataTables calculates the column widths to assign to each column,
   * it finds the longest string in each column and then constructs a
   * temporary table and reads the widths from that. The problem with this
   * is that "mmm" is much wider then "iiii", but the latter is a longer
   * string - thus the calculation can go wrong (doing it properly and putting
   * it into an DOM object and measuring that is horribly(!) slow). Thus as
   * a "work around" we provide this option. It will append its value to the
   * text that is found to be the longest string for the column - i.e. padding.
   * Generally you shouldn't need this!
   */
  sContentPadding: "",
  /**
   * Allows a default value to be given for a column's data, and will be used
   * whenever a null data source is encountered (this can be because `data`
   * is set to null, or because the data source itself is null).
   */
  sDefaultContent: null,
  /**
   * This parameter is only used in DataTables' server-side processing. It can
   * be exceptionally useful to know what columns are being displayed on the
   * client side, and to map these to database fields. When defined, the names
   * also allow DataTables to reorder information from the server if it comes
   * back in an unexpected order (i.e. if you switch your columns around on the
   * client-side, your server-side code does not also need updating).
   */
  sName: "",
  /**
   * Defines a data source type for the ordering which can be used to read
   * real-time information from the table (updating the internally cached
   * version) prior to ordering. This allows ordering to occur on user
   * editable elements such as form inputs.
   */
  sSortDataType: "std",
  /**
   * The title of this column.
   */
  sTitle: null,
  /**
   * The type allows you to specify how the data for this column will be
   * ordered. Four types (string, numeric, date and html (which will strip
   * HTML tags before ordering)) are currently available. Note that only date
   * formats understood by Javascript's Date() object will be accepted as type
   * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
   * 'numeric', 'date' or 'html' (by default). Further types can be adding
   * through plug-ins.
   */
  sType: null,
  /**
   * Defining the width of the column, this parameter may take any CSS value
   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
   * been given a specific width through this interface ensuring that the table
   * remains readable.
   */
  sWidth: null
};
Lo(ge.defaults.column);
ge.models.oSettings = {
  /**
   * Primary features of DataTables and their enablement state.
   */
  oFeatures: {
    /**
     * Flag to say if DataTables should automatically try to calculate the
     * optimum table and columns widths (true) or not (false).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bAutoWidth: null,
    /**
     * Delay the creation of TR and TD elements until they are actually
     * needed by a driven page draw. This can give a significant speed
     * increase for Ajax source and Javascript source data, but makes no
     * difference at all for DOM and server-side processing tables.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bDeferRender: null,
    /**
     * Enable filtering on the table or not. Note that if this is disabled
     * then there is no filtering at all on the table, including fnFilter.
     * To just remove the filtering input use sDom and remove the 'f' option.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bFilter: null,
    /**
     * Used only for compatiblity with DT1
     * @deprecated
     */
    bInfo: !0,
    /**
     * Used only for compatiblity with DT1
     * @deprecated
     */
    bLengthChange: !0,
    /**
     * Pagination enabled or not. Note that if this is disabled then length
     * changing must also be disabled.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bPaginate: null,
    /**
     * Processing indicator enable flag whenever DataTables is enacting a
     * user request - typically an Ajax request for server-side processing.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bProcessing: null,
    /**
     * Server-side processing enabled flag - when enabled DataTables will
     * get all data from the server for every draw - there is no filtering,
     * sorting or paging done on the client-side.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bServerSide: null,
    /**
     * Sorting enablement flag.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSort: null,
    /**
     * Multi-column sorting
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSortMulti: null,
    /**
     * Apply a class to the columns which are being sorted to provide a
     * visual highlight or not. This can slow things down when enabled since
     * there is a lot of DOM interaction.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSortClasses: null,
    /**
     * State saving enablement flag.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bStateSave: null
  },
  /**
   * Scrolling settings for a table.
   */
  oScroll: {
    /**
     * When the table is shorter in height than sScrollY, collapse the
     * table container down to the height of the table (when true).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bCollapse: null,
    /**
     * Width of the scrollbar for the web-browser's platform. Calculated
     * during table initialisation.
     */
    iBarWidth: 0,
    /**
     * Viewport width for horizontal scrolling. Horizontal scrolling is
     * disabled if an empty string.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    sX: null,
    /**
     * Width to expand the table to when using x-scrolling. Typically you
     * should not need to use this.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @deprecated
     */
    sXInner: null,
    /**
     * Viewport height for vertical scrolling. Vertical scrolling is disabled
     * if an empty string.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    sY: null
  },
  /**
   * Language information for the table.
   */
  oLanguage: {
    /**
     * Information callback function. See
     * {@link DataTable.defaults.fnInfoCallback}
     */
    fnInfoCallback: null
  },
  /**
   * Browser support parameters
   */
  oBrowser: {
    /**
     * Determine if the vertical scrollbar is on the right or left of the
     * scrolling container - needed for rtl language layout, although not
     * all browsers move the scrollbar (Safari).
     */
    bScrollbarLeft: !1,
    /**
     * Browser scrollbar width
     */
    barWidth: 0
  },
  ajax: null,
  /**
   * Array referencing the nodes which are used for the features. The
   * parameters of this object match what is allowed by sDom - i.e.
   *   <ul>
   *     <li>'l' - Length changing</li>
   *     <li>'f' - Filtering input</li>
   *     <li>'t' - The table!</li>
   *     <li>'i' - Information</li>
   *     <li>'p' - Pagination</li>
   *     <li>'r' - pRocessing</li>
   *   </ul>
   */
  aanFeatures: [],
  /**
   * Store data information - see {@link DataTable.models.oRow} for detailed
   * information.
   */
  aoData: [],
  /**
   * Array of indexes which are in the current display (after filtering etc)
   */
  aiDisplay: [],
  /**
   * Array of indexes for display - no filtering
   */
  aiDisplayMaster: [],
  /**
   * Map of row ids to data indexes
   */
  aIds: {},
  /**
   * Store information about each column that is in use
   */
  aoColumns: [],
  /**
   * Store information about the table's header
   */
  aoHeader: [],
  /**
   * Store information about the table's footer
   */
  aoFooter: [],
  /**
   * Store the applied global search information in case we want to force a
   * research or compare the old search to a new one.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  oPreviousSearch: {},
  /**
   * Store for named searches
   */
  searchFixed: {},
  /**
   * Store the applied search for each column - see
   * {@link DataTable.models.oSearch} for the format that is used for the
   * filtering information for each column.
   */
  aoPreSearchCols: [],
  /**
   * Sorting that is applied to the table. Note that the inner arrays are
   * used in the following manner:
   * <ul>
   *   <li>Index 0 - column number</li>
   *   <li>Index 1 - current sorting direction</li>
   * </ul>
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aaSorting: null,
  /**
   * Sorting that is always applied to the table (i.e. prefixed in front of
   * aaSorting).
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aaSortingFixed: [],
  /**
   * If restoring a table - we should restore its width
   */
  sDestroyWidth: 0,
  /**
   * Callback functions array for every time a row is inserted (i.e. on a draw).
   */
  aoRowCallback: [],
  /**
   * Callback functions for the header on each draw.
   */
  aoHeaderCallback: [],
  /**
   * Callback function for the footer on each draw.
   */
  aoFooterCallback: [],
  /**
   * Array of callback functions for draw callback functions
   */
  aoDrawCallback: [],
  /**
   * Array of callback functions for row created function
   */
  aoRowCreatedCallback: [],
  /**
   * Callback functions for just before the table is redrawn. A return of
   * false will be used to cancel the draw.
   */
  aoPreDrawCallback: [],
  /**
   * Callback functions for when the table has been initialised.
   */
  aoInitComplete: [],
  /**
   * Callbacks for modifying the settings to be stored for state saving, prior to
   * saving state.
   */
  aoStateSaveParams: [],
  /**
   * Callbacks for modifying the settings that have been stored for state saving
   * prior to using the stored values to restore the state.
   */
  aoStateLoadParams: [],
  /**
   * Callbacks for operating on the settings object once the saved state has been
   * loaded
   */
  aoStateLoaded: [],
  /**
   * Cache the table ID for quick access
   */
  sTableId: "",
  /**
   * The TABLE node for the main table
   */
  nTable: null,
  /**
   * Permanent ref to the thead element
   */
  nTHead: null,
  /**
   * Permanent ref to the tfoot element - if it exists
   */
  nTFoot: null,
  /**
   * Permanent ref to the tbody element
   */
  nTBody: null,
  /**
   * Cache the wrapper node (contains all DataTables controlled elements)
   */
  nTableWrapper: null,
  /**
   * Indicate if all required information has been read in
   */
  bInitialised: !1,
  /**
   * Information about open rows. Each object in the array has the parameters
   * 'nTr' and 'nParent'
   */
  aoOpenRows: [],
  /**
   * Dictate the positioning of DataTables' control elements - see
   * {@link DataTable.model.oInit.sDom}.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sDom: null,
  /**
   * Search delay (in mS)
   */
  searchDelay: null,
  /**
   * Which type of pagination should be used.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sPaginationType: "two_button",
  /**
   * Number of paging controls on the page. Only used for backwards compatibility
   */
  pagingControls: 0,
  /**
   * The state duration (for `stateSave`) in seconds.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  iStateDuration: 0,
  /**
   * Array of callback functions for state saving. Each array element is an
   * object with the following parameters:
   *   <ul>
   *     <li>function:fn - function to call. Takes two parameters, oSettings
   *       and the JSON string to save that has been thus far created. Returns
   *       a JSON string to be inserted into a json object
   *       (i.e. '"param": [ 0, 1, 2]')</li>
   *     <li>string:sName - name of callback</li>
   *   </ul>
   */
  aoStateSave: [],
  /**
   * Array of callback functions for state loading. Each array element is an
   * object with the following parameters:
   *   <ul>
   *     <li>function:fn - function to call. Takes two parameters, oSettings
   *       and the object stored. May return false to cancel state loading</li>
   *     <li>string:sName - name of callback</li>
   *   </ul>
   */
  aoStateLoad: [],
  /**
   * State that was saved. Useful for back reference
   */
  oSavedState: null,
  /**
   * State that was loaded. Useful for back reference
   */
  oLoadedState: null,
  /**
   * Note if draw should be blocked while getting data
   */
  bAjaxDataGet: !0,
  /**
   * The last jQuery XHR object that was used for server-side data gathering.
   * This can be used for working with the XHR information in one of the
   * callbacks
   */
  jqXHR: null,
  /**
   * JSON returned from the server in the last Ajax request
   */
  json: void 0,
  /**
   * Data submitted as part of the last Ajax request
   */
  oAjaxData: void 0,
  /**
   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
   * required).
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sServerMethod: null,
  /**
   * Format numbers for display.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  fnFormatNumber: null,
  /**
   * List of options that can be used for the user selectable length menu.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aLengthMenu: null,
  /**
   * Counter for the draws that the table does. Also used as a tracker for
   * server-side processing
   */
  iDraw: 0,
  /**
   * Indicate if a redraw is being done - useful for Ajax
   */
  bDrawing: !1,
  /**
   * Draw index (iDraw) of the last error when parsing the returned data
   */
  iDrawError: -1,
  /**
   * Paging display length
   */
  _iDisplayLength: 10,
  /**
   * Paging start point - aiDisplay index
   */
  _iDisplayStart: 0,
  /**
   * Server-side processing - number of records in the result set
   * (i.e. before filtering), Use fnRecordsTotal rather than
   * this property to get the value of the number of records, regardless of
   * the server-side processing setting.
   */
  _iRecordsTotal: 0,
  /**
   * Server-side processing - number of records in the current display set
   * (i.e. after filtering). Use fnRecordsDisplay rather than
   * this property to get the value of the number of records, regardless of
   * the server-side processing setting.
   */
  _iRecordsDisplay: 0,
  /**
   * The classes to use for the table
   */
  oClasses: {},
  /**
   * Flag attached to the settings object so you can check in the draw
   * callback if filtering has been done in the draw. Deprecated in favour of
   * events.
   *  @deprecated
   */
  bFiltered: !1,
  /**
   * Flag attached to the settings object so you can check in the draw
   * callback if sorting has been done in the draw. Deprecated in favour of
   * events.
   *  @deprecated
   */
  bSorted: !1,
  /**
   * Indicate that if multiple rows are in the header and there is more than
   * one unique cell per column, if the top one (true) or bottom one (false)
   * should be used for sorting / title by DataTables.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  bSortCellsTop: null,
  /**
   * Initialisation object that is used for the table
   */
  oInit: null,
  /**
   * Destroy callback functions - for plug-ins to attach themselves to the
   * destroy so they can clean up markup and events.
   */
  aoDestroyCallback: [],
  /**
   * Get the number of records in the current record set, before filtering
   */
  fnRecordsTotal: function() {
    return Zn(this) == "ssp" ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;
  },
  /**
   * Get the number of records in the current record set, after filtering
   */
  fnRecordsDisplay: function() {
    return Zn(this) == "ssp" ? this._iRecordsDisplay * 1 : this.aiDisplay.length;
  },
  /**
   * Get the display end point - aiDisplay index
   */
  fnDisplayEnd: function() {
    var s = this._iDisplayLength, p = this._iDisplayStart, b = p + s, A = this.aiDisplay.length, R = this.oFeatures, B = R.bPaginate;
    return R.bServerSide ? B === !1 || s === -1 ? p + A : Math.min(p + s, this._iRecordsDisplay) : !B || b > A || s === -1 ? A : b;
  },
  /**
   * The DataTables object for this table
   */
  oInstance: null,
  /**
   * Unique identifier for each instance of the DataTables object. If there
   * is an ID on the table node, then it takes that value, otherwise an
   * incrementing internal counter is used.
   */
  sInstance: null,
  /**
   * tabindex attribute value that is added to DataTables control elements, allowing
   * keyboard navigation of the table and its controls.
   */
  iTabIndex: 0,
  /**
   * DIV container for the footer scrolling table if scrolling
   */
  nScrollHead: null,
  /**
   * DIV container for the footer scrolling table if scrolling
   */
  nScrollFoot: null,
  /**
   * Last applied sort
   */
  aLastSort: [],
  /**
   * Stored plug-in instances
   */
  oPlugins: {},
  /**
   * Function used to get a row's id from the row's data
   */
  rowIdFn: null,
  /**
   * Data location where to store a row's id
   */
  rowId: null,
  caption: "",
  captionNode: null,
  colgroup: null
};
ge.ext = Vr = {
  /**
   * Buttons. For use with the Buttons extension for DataTables. This is
   * defined here so other extensions can define buttons regardless of load
   * order. It is _not_ used by DataTables core.
   *
   *  @type object
   *  @default {}
   */
  buttons: {},
  /**
   * Element class names
   *
   *  @type object
   *  @default {}
   */
  classes: {},
  /**
   * DataTables build type (expanded by the download builder)
   *
   *  @type string
   */
  builder: "-source-",
  /**
   * Error reporting.
   * 
   * How should DataTables report an error. Can take the value 'alert',
   * 'throw', 'none' or a function.
   *
   *  @type string|function
   *  @default alert
   */
  errMode: "alert",
  /**
   * Legacy so v1 plug-ins don't throw js errors on load
   */
  feature: [],
  /**
   * Feature plug-ins.
   * 
   * This is an object of callbacks which provide the features for DataTables
   * to be initialised via the `layout` option.
   */
  features: {},
  /**
   * Row searching.
   * 
   * This method of searching is complimentary to the default type based
   * searching, and a lot more comprehensive as it allows you complete control
   * over the searching logic. Each element in this array is a function
   * (parameters described below) that is called for every row in the table,
   * and your logic decides if it should be included in the searching data set
   * or not.
   *
   * Searching functions have the following input parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{array|object}` Data for the row to be processed (same as the
   *    original format that was passed in as the data source, or an array
   *    from a DOM data source
   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
   *    can be useful to retrieve the `TR` element if you need DOM interaction.
   *
   * And the following return is expected:
   *
   * * {boolean} Include the row in the searched result set (true) or not
   *   (false)
   *
   * Note that as with the main search ability in DataTables, technically this
   * is "filtering", since it is subtractive. However, for consistency in
   * naming we call it searching here.
   *
   *  @type array
   *  @default []
   *
   *  @example
   *    // The following example shows custom search being applied to the
   *    // fourth column (i.e. the data[3] index) based on two input values
   *    // from the end-user, matching the data in a certain range.
   *    $.fn.dataTable.ext.search.push(
   *      function( settings, data, dataIndex ) {
   *        var min = document.getElementById('min').value * 1;
   *        var max = document.getElementById('max').value * 1;
   *        var version = data[3] == "-" ? 0 : data[3]*1;
   *
   *        if ( min == "" && max == "" ) {
   *          return true;
   *        }
   *        else if ( min == "" && version < max ) {
   *          return true;
   *        }
   *        else if ( min < version && "" == max ) {
   *          return true;
   *        }
   *        else if ( min < version && version < max ) {
   *          return true;
   *        }
   *        return false;
   *      }
   *    );
   */
  search: [],
  /**
   * Selector extensions
   *
   * The `selector` option can be used to extend the options available for the
   * selector modifier options (`selector-modifier` object data type) that
   * each of the three built in selector types offer (row, column and cell +
   * their plural counterparts). For example the Select extension uses this
   * mechanism to provide an option to select only rows, columns and cells
   * that have been marked as selected by the end user (`{selected: true}`),
   * which can be used in conjunction with the existing built in selector
   * options.
   *
   * Each property is an array to which functions can be pushed. The functions
   * take three attributes:
   *
   * * Settings object for the host table
   * * Options object (`selector-modifier` object type)
   * * Array of selected item indexes
   *
   * The return is an array of the resulting item indexes after the custom
   * selector has been applied.
   *
   *  @type object
   */
  selector: {
    cell: [],
    column: [],
    row: []
  },
  /**
   * Legacy configuration options. Enable and disable legacy options that
   * are available in DataTables.
   *
   *  @type object
   */
  legacy: {
    /**
     * Enable / disable DataTables 1.9 compatible server-side processing
     * requests
     *
     *  @type boolean
     *  @default null
     */
    ajax: null
  },
  /**
   * Pagination plug-in methods.
   * 
   * Each entry in this object is a function and defines which buttons should
   * be shown by the pagination rendering method that is used for the table:
   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
   * buttons are displayed in the document, while the functions here tell it
   * what buttons to display. This is done by returning an array of button
   * descriptions (what each button will do).
   *
   * Pagination types (the four built in options and any additional plug-in
   * options defined here) can be used through the `paginationType`
   * initialisation parameter.
   *
   * The functions defined take two parameters:
   *
   * 1. `{int} page` The current page index
   * 2. `{int} pages` The number of pages in the table
   *
   * Each function is expected to return an array where each element of the
   * array can be one of:
   *
   * * `first` - Jump to first page when activated
   * * `last` - Jump to last page when activated
   * * `previous` - Show previous page when activated
   * * `next` - Show next page when activated
   * * `{int}` - Show page of the index given
   * * `{array}` - A nested array containing the above elements to add a
   *   containing 'DIV' element (might be useful for styling).
   *
   * Note that DataTables v1.9- used this object slightly differently whereby
   * an object with two functions would be defined for each plug-in. That
   * ability is still supported by DataTables 1.10+ to provide backwards
   * compatibility, but this option of use is now decremented and no longer
   * documented in DataTables 1.10+.
   *
   *  @type object
   *  @default {}
   *
   *  @example
   *    // Show previous, next and current page buttons only
   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
   *      return [ 'previous', page, 'next' ];
   *    };
   */
  pager: {},
  renderer: {
    pageButton: {},
    header: {}
  },
  /**
   * Ordering plug-ins - custom data source
   * 
   * The extension options for ordering of data available here is complimentary
   * to the default type based ordering that DataTables typically uses. It
   * allows much greater control over the the data that is being used to
   * order a column, but is necessarily therefore more complex.
   * 
   * This type of ordering is useful if you want to do ordering based on data
   * live from the DOM (for example the contents of an 'input' element) rather
   * than just the static string that DataTables knows of.
   * 
   * The way these plug-ins work is that you create an array of the values you
   * wish to be ordering for the column in question and then return that
   * array. The data in the array much be in the index order of the rows in
   * the table (not the currently ordering order!). Which order data gathering
   * function is run here depends on the `dt-init columns.orderDataType`
   * parameter that is used for the column (if any).
   *
   * The functions defined take two parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{int}` Target column index
   *
   * Each function is expected to return an array:
   *
   * * `{array}` Data for the column to be ordering upon
   *
   *  @type array
   *
   *  @example
   *    // Ordering using `input` node values
   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
   *    {
   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
   *        return $('input', td).val();
   *      } );
   *    }
   */
  order: {},
  /**
   * Type based plug-ins.
   *
   * Each column in DataTables has a type assigned to it, either by automatic
   * detection or by direct assignment using the `type` option for the column.
   * The type of a column will effect how it is ordering and search (plug-ins
   * can also make use of the column type if required).
   *
   * @namespace
   */
  type: {
    /**
     * Automatic column class assignment
     */
    className: {},
    /**
     * Type detection functions.
     *
     * The functions defined in this object are used to automatically detect
     * a column's type, making initialisation of DataTables super easy, even
     * when complex data is in the table.
     *
     * The functions defined take two parameters:
     *
        *  1. `{*}` Data from the column cell to be analysed
        *  2. `{settings}` DataTables settings object. This can be used to
        *     perform context specific type detection - for example detection
        *     based on language settings such as using a comma for a decimal
        *     place. Generally speaking the options from the settings will not
        *     be required
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Data type detected, or null if unknown (and thus
     *   pass it on to the other type detection functions.
     *
     *  @type array
     *
     *  @example
     *    // Currency type detection plug-in:
     *    $.fn.dataTable.ext.type.detect.push(
     *      function ( data, settings ) {
     *        // Check the numeric part
     *        if ( ! data.substring(1).match(/[0-9]/) ) {
     *          return null;
     *        }
     *
     *        // Check prefixed by currency
     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
     *          return 'currency';
     *        }
     *        return null;
     *      }
     *    );
     */
    detect: [],
    /**
     * Automatic renderer assignment
     */
    render: {},
    /**
     * Type based search formatting.
     *
     * The type based searching functions can be used to pre-format the
     * data to be search on. For example, it can be used to strip HTML
     * tags or to de-format telephone numbers for numeric only searching.
     *
     * Note that is a search is not defined for a column of a given type,
     * no search formatting will be performed.
     * 
     * Pre-processing of searching data plug-ins - When you assign the sType
     * for a column (or have it automatically detected for you by DataTables
     * or a type detection plug-in), you will typically be using this for
     * custom sorting, but it can also be used to provide custom searching
     * by allowing you to pre-processing the data and returning the data in
     * the format that should be searched upon. This is done by adding
     * functions this object with a parameter name which matches the sType
     * for that target column. This is the corollary of <i>afnSortData</i>
     * for searching data.
     *
     * The functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for searching
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Formatted string that will be used for the searching.
     *
     *  @type object
     *  @default {}
     *
     *  @example
     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
     *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
     *    }
     */
    search: {},
    /**
     * Type based ordering.
     *
     * The column type tells DataTables what ordering to apply to the table
     * when a column is sorted upon. The order for each type that is defined,
     * is defined by the functions available in this object.
     *
     * Each ordering option can be described by three properties added to
     * this object:
     *
     * * `{type}-pre` - Pre-formatting function
     * * `{type}-asc` - Ascending order function
     * * `{type}-desc` - Descending order function
     *
     * All three can be used together, only `{type}-pre` or only
     * `{type}-asc` and `{type}-desc` together. It is generally recommended
     * that only `{type}-pre` is used, as this provides the optimal
     * implementation in terms of speed, although the others are provided
     * for compatibility with existing Javascript sort functions.
     *
     * `{type}-pre`: Functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for ordering
     *
     * And return:
     *
     * * `{*}` Data to be sorted upon
     *
     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
     * functions, taking two parameters:
     *
        *  1. `{*}` Data to compare to the second parameter
        *  2. `{*}` Data to compare to the first parameter
     *
     * And returning:
     *
     * * `{*}` Ordering match: <0 if first parameter should be sorted lower
     *   than the second parameter, ===0 if the two parameters are equal and
     *   >0 if the first parameter should be sorted height than the second
     *   parameter.
     * 
     *  @type object
     *  @default {}
     *
     *  @example
     *    // Numeric ordering of formatted numbers with a pre-formatter
     *    $.extend( $.fn.dataTable.ext.type.order, {
     *      "string-pre": function(x) {
     *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
     *        return parseFloat( a );
     *      }
     *    } );
     *
     *  @example
     *    // Case-sensitive string ordering, with no pre-formatting method
     *    $.extend( $.fn.dataTable.ext.order, {
     *      "string-case-asc": function(x,y) {
     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
     *      },
     *      "string-case-desc": function(x,y) {
     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
     *      }
     *    } );
     */
    order: {}
  },
  /**
   * Unique DataTables instance counter
   *
   * @type int
   * @private
   */
  _unique: 0,
  //
  // Depreciated
  // The following properties are retained for backwards compatibility only.
  // The should not be used in new projects and will be removed in a future
  // version
  //
  /**
   * Version check function.
   *  @type function
   *  @depreciated Since 1.10
   */
  fnVersionCheck: ge.fnVersionCheck,
  /**
   * Index for what 'this' index API functions should use
   *  @type int
   *  @deprecated Since v1.10
   */
  iApiIndex: 0,
  /**
   * Software version
   *  @type string
   *  @deprecated Since v1.10
   */
  sVersion: ge.version
};
Xt.extend(Vr, {
  afnFiltering: Vr.search,
  aTypes: Vr.type.detect,
  ofnSearch: Vr.type.search,
  oSort: Vr.type.order,
  afnSortData: Vr.order,
  aoFeatures: Vr.feature,
  oStdClasses: Vr.classes,
  oPagination: Vr.pager
});
Xt.extend(ge.ext.classes, {
  container: "dt-container",
  empty: {
    row: "dt-empty"
  },
  info: {
    container: "dt-info"
  },
  length: {
    container: "dt-length",
    select: "dt-input"
  },
  order: {
    canAsc: "dt-orderable-asc",
    canDesc: "dt-orderable-desc",
    isAsc: "dt-ordering-asc",
    isDesc: "dt-ordering-desc",
    none: "dt-orderable-none",
    position: "sorting_"
  },
  processing: {
    container: "dt-processing"
  },
  scrolling: {
    body: "dt-scroll-body",
    container: "dt-scroll",
    footer: {
      self: "dt-scroll-foot",
      inner: "dt-scroll-footInner"
    },
    header: {
      self: "dt-scroll-head",
      inner: "dt-scroll-headInner"
    }
  },
  search: {
    container: "dt-search",
    input: "dt-input"
  },
  table: "dataTable",
  tbody: {
    cell: "",
    row: ""
  },
  thead: {
    cell: "",
    row: ""
  },
  tfoot: {
    cell: "",
    row: ""
  },
  paging: {
    active: "current",
    button: "dt-paging-button",
    container: "dt-paging",
    disabled: "disabled"
  }
});
var Ed = ge.ext.pager;
Xt.extend(Ed, {
  simple: function() {
    return ["previous", "next"];
  },
  full: function() {
    return ["first", "previous", "next", "last"];
  },
  numbers: function() {
    return ["numbers"];
  },
  simple_numbers: function() {
    return ["previous", "numbers", "next"];
  },
  full_numbers: function() {
    return ["first", "previous", "numbers", "next", "last"];
  },
  first_last: function() {
    return ["first", "last"];
  },
  first_last_numbers: function() {
    return ["first", "numbers", "last"];
  },
  // For testing and plug-ins to use
  _numbers: Nf,
  // Number of number buttons - legacy, use `numbers` option for paging feature
  numbers_length: 7
});
Xt.extend(!0, ge.ext.renderer, {
  pagingButton: {
    _: function(s, p, b, A, R) {
      var B = s.oClasses.paging, u = [B.button], d;
      return A && u.push(B.active), R && u.push(B.disabled), p === "ellipsis" ? d = Xt('<span class="ellipsis"></span>').html(b)[0] : d = Xt("<button>", {
        class: u.join(" "),
        role: "link",
        type: "button"
      }).html(b), {
        display: d,
        clicker: d
      };
    }
  },
  pagingContainer: {
    _: function(s, p) {
      return p;
    }
  }
});
var Go = function(s, p) {
  return function(b) {
    return Aa(b) || typeof b != "string" || (b = b.replace(Wh, " "), s && (b = li(b)), p && (b = ps(b, !0))), b;
  };
};
function Pf(s) {
  return s.replace(/[\W]/g, "_");
}
function _0(s, p, b, A, R) {
  return window.moment ? s[p](R) : window.luxon ? s[b](R) : A ? s[A](R) : s;
}
var tf = !1;
function Bo(s, p, b) {
  var A;
  if (window.moment) {
    if (A = window.moment.utc(s, p, b, !0), !A.isValid())
      return null;
  } else if (window.luxon) {
    if (A = p && typeof s == "string" ? window.luxon.DateTime.fromFormat(s, p) : window.luxon.DateTime.fromISO(s), !A.isValid)
      return null;
    A.setLocale(b);
  } else
    p ? (tf || alert("DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17"), tf = !0) : A = new Date(s);
  return A;
}
function cs(s) {
  return function(p, b, A, R) {
    arguments.length === 0 ? (A = "en", b = null, p = null) : arguments.length === 1 ? (A = "en", b = p, p = null) : arguments.length === 2 && (A = b, b = p, p = null);
    var B = "datetime" + (b ? "-" + Pf(b) : "");
    return ge.ext.type.order[B] || ge.type(B, {
      detect: function(u) {
        return u === B ? B : !1;
      },
      order: {
        pre: function(u) {
          return u.valueOf();
        }
      },
      className: "dt-right"
    }), function(u, d) {
      if (u == null)
        if (R === "--now") {
          var t = /* @__PURE__ */ new Date();
          u = new Date(Date.UTC(
            t.getFullYear(),
            t.getMonth(),
            t.getDate(),
            t.getHours(),
            t.getMinutes(),
            t.getSeconds()
          ));
        } else
          u = "";
      if (d === "type")
        return B;
      if (u === "")
        return d !== "sort" ? "" : Bo("0000-01-01 00:00:00", null, A);
      if (b !== null && p === b && d !== "sort" && d !== "type" && !(u instanceof Date))
        return u;
      var o = Bo(u, p, A);
      if (o === null)
        return u;
      if (d === "sort")
        return o;
      var r = b === null ? _0(o, "toDate", "toJSDate", "")[s]() : _0(o, "format", "toFormat", "toISOString", b);
      return d === "display" ? si(r) : r;
    };
  };
}
var Bf = ",", Rf = ".";
if (window.Intl !== void 0)
  try {
    for (var ki = new Intl.NumberFormat().formatToParts(100000.1), ia = 0; ia < ki.length; ia++)
      ki[ia].type === "group" ? Bf = ki[ia].value : ki[ia].type === "decimal" && (Rf = ki[ia].value);
  } catch {
  }
ge.datetime = function(s, p) {
  var b = "datetime-detect-" + Pf(s);
  p || (p = "en"), ge.ext.type.order[b] || ge.type(b, {
    detect: function(A) {
      var R = Bo(A, s, p);
      return A === "" || R ? b : !1;
    },
    order: {
      pre: function(A) {
        return Bo(A, s, p) || 0;
      }
    },
    className: "dt-right"
  });
};
ge.render = {
  date: cs("toLocaleDateString"),
  datetime: cs("toLocaleString"),
  time: cs("toLocaleTimeString"),
  number: function(s, p, b, A, R) {
    return s == null && (s = Bf), p == null && (p = Rf), {
      display: function(B) {
        if (typeof B != "number" && typeof B != "string" || B === "" || B === null)
          return B;
        var u = B < 0 ? "-" : "", d = parseFloat(B), t = Math.abs(d);
        if (t >= 1e11 || t < 1e-4 && t !== 0) {
          var o = d.toExponential(b).split(/e\+?/);
          return o[0] + " x 10<sup>" + o[1] + "</sup>";
        }
        if (isNaN(d))
          return si(B);
        d = d.toFixed(b), B = Math.abs(d);
        var r = parseInt(B, 10), n = b ? p + (B - r).toFixed(b).substring(2) : "";
        return r === 0 && parseFloat(n) === 0 && (u = ""), u + (A || "") + r.toString().replace(
          /\B(?=(\d{3})+(?!\d))/g,
          s
        ) + n + (R || "");
      }
    };
  },
  text: function() {
    return {
      display: si,
      filter: si
    };
  }
};
var Nn = ge.ext.type;
ge.type = function(s, p, b) {
  if (!p)
    return {
      className: Nn.className[s],
      detect: Nn.detect.find(function(u) {
        return u.name === s;
      }),
      order: {
        pre: Nn.order[s + "-pre"],
        asc: Nn.order[s + "-asc"],
        desc: Nn.order[s + "-desc"]
      },
      render: Nn.render[s],
      search: Nn.search[s]
    };
  var A = function(u, d) {
    Nn[u][s] = d;
  }, R = function(u) {
    var d = function(o, r) {
      var n = u(o, r);
      return n === !0 ? s : n;
    };
    Object.defineProperty(d, "name", { value: s });
    var t = Nn.detect.findIndex(function(o) {
      return o.name === s;
    });
    t === -1 ? Nn.detect.unshift(d) : Nn.detect.splice(t, 1, d);
  }, B = function(u) {
    Nn.order[s + "-pre"] = u.pre, Nn.order[s + "-asc"] = u.asc, Nn.order[s + "-desc"] = u.desc;
  };
  b || (b = p, p = null), p === "className" ? A("className", b) : p === "detect" ? R(b) : p === "order" ? B(b) : p === "render" ? A("render", b) : p === "search" ? A("search", b) : p || (b.className && A("className", b.className), b.detect !== void 0 && R(b.detect), b.order && B(b.order), b.render !== void 0 && A("render", b.render), b.search !== void 0 && A("search", b.search));
};
ge.types = function() {
  return Nn.detect.map(function(s) {
    return s.name;
  });
};
ge.type("string", {
  detect: function() {
    return "string";
  },
  order: {
    pre: function(s) {
      return Aa(s) ? "" : typeof s == "string" ? s.toLowerCase() : s.toString ? s.toString() : "";
    }
  },
  search: Go(!1, !0)
});
ge.type("html", {
  detect: function(s) {
    return Aa(s) || typeof s == "string" && s.indexOf("<") !== -1 ? "html" : null;
  },
  order: {
    pre: function(s) {
      return Aa(s) ? "" : s.replace ? li(s).trim().toLowerCase() : s + "";
    }
  },
  search: Go(!0, !0)
});
ge.type("date", {
  className: "dt-type-date",
  detect: function(s) {
    if (s && !(s instanceof Date) && !Hh.test(s))
      return null;
    var p = Date.parse(s);
    return p !== null && !isNaN(p) || Aa(s) ? "date" : null;
  },
  order: {
    pre: function(s) {
      var p = Date.parse(s);
      return isNaN(p) ? -1 / 0 : p;
    }
  }
});
ge.type("html-num-fmt", {
  className: "dt-type-numeric",
  detect: function(s, p) {
    var b = p.oLanguage.sDecimal;
    return lf(s, b, !0) ? "html-num-fmt" : null;
  },
  order: {
    pre: function(s, p) {
      var b = p.oLanguage.sDecimal;
      return Vo(s, b, Cs, Es);
    }
  },
  search: Go(!0, !0)
});
ge.type("html-num", {
  className: "dt-type-numeric",
  detect: function(s, p) {
    var b = p.oLanguage.sDecimal;
    return lf(s, b) ? "html-num" : null;
  },
  order: {
    pre: function(s, p) {
      var b = p.oLanguage.sDecimal;
      return Vo(s, b, Cs);
    }
  },
  search: Go(!0, !0)
});
ge.type("num-fmt", {
  className: "dt-type-numeric",
  detect: function(s, p) {
    var b = p.oLanguage.sDecimal;
    return Ts(s, b, !0) ? "num-fmt" : null;
  },
  order: {
    pre: function(s, p) {
      var b = p.oLanguage.sDecimal;
      return Vo(s, b, Es);
    }
  }
});
ge.type("num", {
  className: "dt-type-numeric",
  detect: function(s, p) {
    var b = p.oLanguage.sDecimal;
    return Ts(s, b) ? "num" : null;
  },
  order: {
    pre: function(s, p) {
      var b = p.oLanguage.sDecimal;
      return Vo(s, b);
    }
  }
});
var Vo = function(s, p, b, A) {
  if (s !== 0 && (!s || s === "-"))
    return -1 / 0;
  var R = typeof s;
  return R === "number" || R === "bigint" ? s : (p && (s = ff(s, p)), s.replace && (b && (s = s.replace(b, "")), A && (s = s.replace(A, ""))), s * 1);
};
Xt.extend(!0, ge.ext.renderer, {
  footer: {
    _: function(s, p, b) {
      p.addClass(b.tfoot.cell);
    }
  },
  header: {
    _: function(s, p, b) {
      p.addClass(b.thead.cell), s.oFeatures.bSort || p.addClass(b.order.none);
      var A = s.bSortCellsTop, R = p.closest("thead").find("tr"), B = p.parent().index();
      // Cells and rows which have the attribute to disable the icons
      p.attr("data-dt-order") === "disable" || p.parent().attr("data-dt-order") === "disable" || // Legacy support for `orderCellsTop`. If it is set, then cells
      // which are not in the top or bottom row of the header (depending
      // on the value) do not get the sorting classes applied to them
      A === !0 && B !== 0 || A === !1 && B !== R.length - 1 || Xt(s.nTable).on("order.dt.DT", function(u, d, t) {
        if (s === d) {
          var o = b.order, r = d.api.columns(p), n = s.aoColumns[r.flatten()[0]], i = r.orderable().includes(!0), f = "", l = r.indexes(), c = r.orderable(!0).flatten(), h = t.map(function(e) {
            return e.col;
          }).join(",");
          p.removeClass(
            o.isAsc + " " + o.isDesc
          ).toggleClass(o.none, !i).toggleClass(o.canAsc, i && c.includes("asc")).toggleClass(o.canDesc, i && c.includes("desc"));
          var a = h.indexOf(l.toArray().join(","));
          if (a !== -1) {
            var v = r.order();
            p.addClass(
              v.includes("asc") ? o.isAsc : "" + v.includes("desc") ? o.isDesc : ""
            );
          }
          if (a === 0 && h.length === l.count()) {
            var y = t[0], g = n.asSorting;
            p.attr("aria-sort", y.dir === "asc" ? "ascending" : "descending"), f = g[y.index + 1] ? "Reverse" : "Remove";
          } else
            p.removeAttr("aria-sort");
          p.attr(
            "aria-label",
            i ? n.ariaTitle + d.api.i18n("oAria.orderable" + f) : n.ariaTitle
          ), i && (p.find(".dt-column-title").attr("role", "button"), p.attr("tabindex", 0));
        }
      });
    }
  },
  layout: {
    _: function(s, p, b) {
      var A = Xt("<div/>").addClass("dt-layout-row").appendTo(p);
      Xt.each(b, function(R, B) {
        var u = B.table ? "" : "dt-" + R + " ";
        B.table && A.addClass("dt-layout-table"), Xt("<div/>").attr({
          id: B.id || null,
          class: "dt-layout-cell " + u + (B.className || "")
        }).append(B.contents).appendTo(A);
      });
    }
  }
});
ge.feature = {};
ge.feature.register = function(s, p, b) {
  ge.ext.features[s] = p, b && Vr.feature.push({
    cFeature: b,
    fnInit: p
  });
};
ge.feature.register("info", function(s, p) {
  if (!s.oFeatures.bInfo)
    return null;
  var b = s.oLanguage, A = s.sTableId, R = Xt("<div/>", {
    class: s.oClasses.info.container
  });
  return p = Xt.extend({
    callback: b.fnInfoCallback,
    empty: b.sInfoEmpty,
    postfix: b.sInfoPostFix,
    search: b.sInfoFiltered,
    text: b.sInfo
  }, p), s.aoDrawCallback.push(function(B) {
    Td(B, p, R);
  }), Xt("#" + A + "_info", s.nWrapper).length || (R.attr({
    "aria-live": "polite",
    id: A + "_info",
    role: "status"
  }), Xt(s.nTable).attr("aria-describedby", A + "_info")), R;
}, "i");
function Td(s, p, b) {
  var A = s._iDisplayStart + 1, R = s.fnDisplayEnd(), B = s.fnRecordsTotal(), u = s.fnRecordsDisplay(), d = u ? p.text : p.empty;
  u !== B && (d += " " + p.search), d += p.postfix, d = ks(s, d), p.callback && (d = p.callback.call(
    s.oInstance,
    s,
    A,
    R,
    B,
    u,
    d
  )), b.html(d), Nr(s, null, "info", [s, b[0], d]);
}
var hs = 0;
ge.feature.register("search", function(s, p) {
  if (!s.oFeatures.bFilter)
    return null;
  var b = s.oClasses.search, A = s.sTableId, R = s.oLanguage, B = s.oPreviousSearch, u = '<input type="search" class="' + b.input + '"/>';
  p = Xt.extend({
    placeholder: R.sSearchPlaceholder,
    text: R.sSearch
  }, p), p.text.indexOf("_INPUT_") === -1 && (p.text += "_INPUT_"), p.text = ks(s, p.text);
  var d = p.text.match(/_INPUT_$/), t = p.text.match(/^_INPUT_/), o = p.text.replace(/_INPUT_/, ""), r = "<label>" + p.text + "</label>";
  t ? r = "_INPUT_<label>" + o + "</label>" : d && (r = "<label>" + o + "</label>_INPUT_");
  var n = Xt("<div>").addClass(b.container).append(r.replace(/_INPUT_/, u));
  n.find("label").attr("for", "dt-search-" + hs), n.find("input").attr("id", "dt-search-" + hs), hs++;
  var i = function(c) {
    var h = this.value;
    B.return && c.key !== "Enter" || h != B.search && (B.search = h, ji(s, B), s._iDisplayStart = 0, hi(s));
  }, f = s.searchDelay !== null ? s.searchDelay : 0, l = Xt("input", n).val(B.search).attr("placeholder", p.placeholder).on(
    "keyup.DT search.DT input.DT paste.DT cut.DT",
    f ? ge.util.debounce(i, f) : i
  ).on("mouseup.DT", function(c) {
    setTimeout(function() {
      i.call(l[0], c);
    }, 10);
  }).on("keypress.DT", function(c) {
    if (c.keyCode == 13)
      return !1;
  }).attr("aria-controls", A);
  return Xt(s.nTable).on("search.dt.DT", function(c, h) {
    s === h && l[0] !== document.activeElement && l.val(
      typeof B.search != "function" ? B.search : ""
    );
  }), n;
}, "f");
ge.feature.register("paging", function(s, p) {
  if (!s.oFeatures.bPaginate)
    return null;
  p = Xt.extend({
    numbers: ge.ext.pager.numbers_length,
    type: s.sPaginationType
  }, p);
  var b = Xt("<div/>").addClass(s.oClasses.paging.container + " paging_" + p.type), A = function() {
    Lf(s, b, p);
  };
  return s.aoDrawCallback.push(A), Xt(s.nTable).on("column-sizing.dt.DT", A), b;
}, "p");
function Lf(s, p, b) {
  if (s._bInitComplete) {
    for (var A = ge.ext.pager[b.type], R = s.oLanguage.oAria.paginate || {}, B = s._iDisplayStart, u = s._iDisplayLength, d = s.fnRecordsDisplay(), t = u === -1, o = t ? 0 : Math.ceil(B / u), r = t ? 1 : Math.ceil(d / u), n = A().map(function(y) {
      return y === "numbers" ? Nf(o, r, b.numbers) : y;
    }).flat(), i = [], f = 0; f < n.length; f++) {
      var l = n[f], c = Fd(s, l, o, r), h = Po(s, "pagingButton")(
        s,
        l,
        c.display,
        c.active,
        c.disabled
      );
      Xt(h.clicker).attr({
        "aria-controls": s.sTableId,
        "aria-disabled": c.disabled ? "true" : null,
        "aria-current": c.active ? "page" : null,
        "aria-label": R[l],
        "data-dt-idx": l,
        tabIndex: c.disabled ? -1 : s.iTabIndex
      }), typeof l != "number" && Xt(h.clicker).addClass(l), Ef(
        h.clicker,
        { action: l },
        function(y) {
          y.preventDefault(), Ns(s, y.data.action, !0);
        }
      ), i.push(h.display);
    }
    var a = Po(s, "pagingContainer")(
      s,
      i
    ), v = p.find(document.activeElement).data("dt-idx");
    p.empty().append(a), v !== void 0 && p.find("[data-dt-idx=" + v + "]").trigger("focus"), i.length && // any buttons
    b.numbers > 1 && // prevent infinite
    Xt(p).outerHeight() >= Xt(i[0]).outerHeight() * 2 - 10 && Lf(s, p, Xt.extend({}, b, { numbers: b.numbers - 2 }));
  }
}
function Fd(s, p, b, A) {
  var R = s.oLanguage.oPaginate, B = {
    display: "",
    active: !1,
    disabled: !1
  };
  switch (p) {
    case "ellipsis":
      B.display = "&#x2026;", B.disabled = !0;
      break;
    case "first":
      B.display = R.sFirst, b === 0 && (B.disabled = !0);
      break;
    case "previous":
      B.display = R.sPrevious, b === 0 && (B.disabled = !0);
      break;
    case "next":
      B.display = R.sNext, (A === 0 || b === A - 1) && (B.disabled = !0);
      break;
    case "last":
      B.display = R.sLast, (A === 0 || b === A - 1) && (B.disabled = !0);
      break;
    default:
      typeof p == "number" && (B.display = s.fnFormatNumber(p + 1), b === p && (B.active = !0));
      break;
  }
  return B;
}
function Nf(s, p, b) {
  var A = [], R = Math.floor(b / 2);
  return p <= b ? A = Pa(0, p) : b === 1 ? A = [s] : b === 3 ? s <= 1 ? A = [0, 1, "ellipsis"] : s >= p - 2 ? (A = Pa(p - 2, p), A.unshift("ellipsis")) : A = ["ellipsis", s, "ellipsis"] : s <= R ? (A = Pa(0, b - 2), A.push("ellipsis", p - 1)) : s >= p - 1 - R ? (A = Pa(p - (b - 2), p), A.unshift(0, "ellipsis")) : (A = Pa(s - R + 2, s + R - 1), A.push("ellipsis", p - 1), A.unshift(0, "ellipsis")), A;
}
var ds = 0;
ge.feature.register("pageLength", function(s, p) {
  var b = s.oFeatures;
  if (!b.bPaginate || !b.bLengthChange)
    return null;
  p = Xt.extend({
    menu: s.aLengthMenu,
    text: s.oLanguage.sLengthMenu
  }, p);
  var A = s.oClasses.length, R = s.sTableId, B = p.menu, u = [], d = [], t;
  if (Array.isArray(B[0]))
    u = B[0], d = B[1];
  else
    for (t = 0; t < B.length; t++)
      Xt.isPlainObject(B[t]) ? (u.push(B[t].value), d.push(B[t].label)) : (u.push(B[t]), d.push(B[t]));
  var o = p.text.match(/_MENU_$/), r = p.text.match(/^_MENU_/), n = p.text.replace(/_MENU_/, ""), i = "<label>" + p.text + "</label>";
  r ? i = "_MENU_<label>" + n + "</label>" : o && (i = "<label>" + n + "</label>_MENU_");
  var f = Xt("<div/>").addClass(A.container).append(
    i.replace("_MENU_", "<span></span>")
  ), l = [];
  f.find("label")[0].childNodes.forEach(function(a) {
    a.nodeType === Node.TEXT_NODE && l.push({
      el: a,
      text: a.textContent
    });
  });
  var c = function(a) {
    l.forEach(function(v) {
      v.el.textContent = ks(s, v.text, a);
    });
  }, h = Xt("<select/>", {
    name: R + "_length",
    "aria-controls": R,
    class: A.select
  });
  for (t = 0; t < u.length; t++)
    h[0][t] = new Option(
      typeof d[t] == "number" ? s.fnFormatNumber(d[t]) : d[t],
      u[t]
    );
  return f.find("label").attr("for", "dt-length-" + ds), h.attr("id", "dt-length-" + ds), ds++, f.find("span").replaceWith(h), Xt("select", f).val(s._iDisplayLength).on("change.DT", function() {
    bf(s, Xt(this).val()), hi(s);
  }), Xt(s.nTable).on("length.dt.DT", function(a, v, y) {
    s === v && (Xt("select", f).val(y), c(y));
  }), c(s._iDisplayLength), f;
}, "l");
Xt.fn.dataTable = ge;
ge.$ = Xt;
Xt.fn.dataTableSettings = ge.settings;
Xt.fn.dataTableExt = ge.ext;
Xt.fn.DataTable = function(s) {
  return Xt(this).dataTable(s).api();
};
Xt.each(ge, function(s, p) {
  Xt.fn.DataTable[s] = p;
});
/*! FixedHeader 4.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
let fr = Ca;
var Id = 0, Na = function(s, p) {
  if (!ge.versionCheck("2"))
    throw "Warning: FixedHeader requires DataTables 2 or newer";
  if (!(this instanceof Na))
    throw "FixedHeader must be initialised with the 'new' keyword.";
  p === !0 && (p = {}), s = new ge.Api(s), this.c = fr.extend(!0, {}, Na.defaults, p), this.s = {
    dt: s,
    position: {
      theadTop: 0,
      tbodyTop: 0,
      tfootTop: 0,
      tfootBottom: 0,
      width: 0,
      left: 0,
      tfootHeight: 0,
      theadHeight: 0,
      windowHeight: fr(window).height(),
      visible: !0
    },
    headerMode: null,
    footerMode: null,
    autoWidth: s.settings()[0].oFeatures.bAutoWidth,
    namespace: ".dtfc" + Id++,
    scrollLeft: {
      header: -1,
      footer: -1
    },
    enable: !0,
    autoDisable: !1
  }, this.dom = {
    floatingHeader: null,
    thead: fr(s.table().header()),
    tbody: fr(s.table().body()),
    tfoot: fr(s.table().footer()),
    header: {
      host: null,
      floating: null,
      floatingParent: fr('<div class="dtfh-floatingparent"><div></div></div>'),
      placeholder: null
    },
    footer: {
      host: null,
      floating: null,
      floatingParent: fr('<div class="dtfh-floatingparent"><div></div></div>'),
      placeholder: null
    }
  }, this.dom.header.host = this.dom.thead.parent(), this.dom.footer.host = this.dom.tfoot.parent();
  var b = s.settings()[0];
  if (b._fixedHeader)
    throw "FixedHeader already initialised on table " + b.nTable.id;
  b._fixedHeader = this, this._constructor();
};
fr.extend(Na.prototype, {
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * API methods
   */
  /**
   * Kill off FH and any events
   */
  destroy: function() {
    var s = this.dom;
    this.s.dt.off(".dtfc"), fr(window).off(this.s.namespace), s.header.rightBlocker && s.header.rightBlocker.remove(), s.header.leftBlocker && s.header.leftBlocker.remove(), s.footer.rightBlocker && s.footer.rightBlocker.remove(), s.footer.leftBlocker && s.footer.leftBlocker.remove(), this.c.header && this._modeChange("in-place", "header", !0), this.c.footer && s.tfoot.length && this._modeChange("in-place", "footer", !0);
  },
  /**
   * Enable / disable the fixed elements
   *
   * @param  {boolean} enable `true` to enable, `false` to disable
   */
  enable: function(s, p, b) {
    this.s.enable = s, this.s.enableType = b, (p || p === void 0) && (this._positions(), this._scroll(!0));
  },
  /**
   * Get enabled status
   */
  enabled: function() {
    return this.s.enable;
  },
  /**
   * Set header offset
   *
   * @param  {int} new value for headerOffset
   */
  headerOffset: function(s) {
    return s !== void 0 && (this.c.headerOffset = s, this.update()), this.c.headerOffset;
  },
  /**
   * Set footer offset
   *
   * @param  {int} new value for footerOffset
   */
  footerOffset: function(s) {
    return s !== void 0 && (this.c.footerOffset = s, this.update()), this.c.footerOffset;
  },
  /**
   * Recalculate the position of the fixed elements and force them into place
   */
  update: function(s) {
    var p = this.s.dt.table().node();
    !this.s.enable && !this.s.autoDisable || (fr(p).is(":visible") ? (this.s.autoDisable = !1, this.enable(!0, !1)) : (this.s.autoDisable = !0, this.enable(!1, !1)), fr(p).children("thead").length !== 0 && (this._positions(), this._scroll(s !== void 0 ? s : !0)));
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Constructor
   */
  /**
   * FixedHeader constructor - adding the required event listeners and
   * simple initialisation
   *
   * @private
   */
  _constructor: function() {
    var s = this, p = this.s.dt;
    fr(window).on("scroll" + this.s.namespace, function() {
      s._scroll();
    }).on(
      "resize" + this.s.namespace,
      ge.util.throttle(function() {
        s.s.position.windowHeight = fr(window).height(), s.update();
      }, 50)
    );
    var b = fr(".fh-fixedHeader");
    !this.c.headerOffset && b.length && (this.c.headerOffset = b.outerHeight());
    var A = fr(".fh-fixedFooter");
    !this.c.footerOffset && A.length && (this.c.footerOffset = A.outerHeight()), p.on(
      "column-reorder.dt.dtfc column-visibility.dt.dtfc column-sizing.dt.dtfc responsive-display.dt.dtfc",
      function(R, B) {
        s.update();
      }
    ).on("draw.dt.dtfc", function(R, B) {
      s.update(B !== p.settings()[0]);
    }), p.on("destroy.dtfc", function() {
      s.destroy();
    }), this._positions(), this._scroll();
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Private methods
   */
  /**
   * Clone a fixed item to act as a place holder for the original element
   * which is moved into a clone of the table element, and moved around the
   * document to give the fixed effect.
   *
   * @param  {string}  item  'header' or 'footer'
   * @param  {boolean} force Force the clone to happen, or allow automatic
   *   decision (reuse existing if available)
   * @private
   */
  _clone: function(s, p) {
    var b = this, A = this.s.dt, R = this.dom[s], B = s === "header" ? this.dom.thead : this.dom.tfoot;
    if (!(s === "footer" && this._scrollEnabled()))
      if (!p && R.floating)
        R.floating.removeClass(
          "fixedHeader-floating fixedHeader-locked"
        );
      else {
        R.floating && (R.placeholder !== null && R.placeholder.remove(), R.floating.children().detach(), R.floating.remove());
        var u = fr(A.table().node()), d = fr(u.parent()), t = this._scrollEnabled();
        R.floating = fr(A.table().node().cloneNode(!1)).attr("aria-hidden", "true").css({
          top: 0,
          left: 0
        }).removeAttr("id"), R.floatingParent.css({
          width: d[0].offsetWidth,
          overflow: "hidden",
          height: "fit-content",
          position: "fixed",
          left: t ? u.offset().left + d.scrollLeft() : 0
        }).css(
          s === "header" ? {
            top: this.c.headerOffset,
            bottom: ""
          } : {
            top: "",
            bottom: this.c.footerOffset
          }
        ).addClass(
          s === "footer" ? "dtfh-floatingparent-foot" : "dtfh-floatingparent-head"
        ).appendTo("body").children().eq(0).append(R.floating), this._stickyPosition(R.floating, "-");
        var o = function() {
          var l = d.scrollLeft();
          b.s.scrollLeft = { footer: l, header: l }, R.floatingParent.scrollLeft(b.s.scrollLeft.header);
        };
        o(), d.off("scroll.dtfh").on("scroll.dtfh", o), R.floatingParent.children().css({
          width: "fit-content",
          paddingRight: b.s.dt.settings()[0].oBrowser.barWidth
        });
        let f = fr(
          s === "footer" ? "div.dtfc-bottom-blocker" : "div.dtfc-top-blocker",
          A.table().container()
        );
        f.length && f.clone().appendTo(R.floatingParent).css({
          position: "fixed",
          right: f.width()
        }), R.placeholder = B.clone(!1), R.placeholder.find("*[id]").removeAttr("id"), R.host.prepend(R.placeholder), R.floating.append(B);
        for (var r = R.placeholder.parent().find("colgroup").clone().appendTo(R.floating).find("col"), n = this.s.dt.columns({ visible: !0 }).widths(), i = 0; i < n.length; i++)
          r.eq(i).css("width", n[i]);
      }
  },
  /**
   * This method sets the sticky position of the header elements to match fixed columns
   * @param {JQuery<HTMLElement>} el
   * @param {string} sign
   */
  _stickyPosition: function(s, p) {
    if (this._scrollEnabled()) {
      var b = this, A = fr(b.s.dt.table().node()).css("direction") === "rtl";
      s.find("th").each(function() {
        if (fr(this).css("position") === "sticky") {
          var R = fr(this).css("right"), B = fr(this).css("left"), u;
          R !== "auto" && !A ? (u = +R.replace(/px/g, ""), fr(this).css("right", u > 0 ? u : 0)) : B !== "auto" && A && (u = +B.replace(/px/g, ""), fr(this).css("left", u > 0 ? u : 0));
        }
      });
    }
  },
  /**
   * Reposition the floating elements to take account of horizontal page
   * scroll
   *
   * @param  {string} item       The `header` or `footer`
   * @param  {int}    scrollLeft Document scrollLeft
   * @private
   */
  _horizontal: function(s, p) {
    var b = this.dom[s], A = this.s.scrollLeft;
    if (b.floating && A[s] !== p) {
      if (this._scrollEnabled()) {
        var R = fr(
          fr(this.s.dt.table().node()).parent()
        ).scrollLeft();
        b.floating.scrollLeft(R), b.floatingParent.scrollLeft(R);
      }
      A[s] = p;
    }
  },
  /**
   * Change from one display mode to another. Each fixed item can be in one
   * of:
   *
   * * `in-place` - In the main DataTable
   * * `in` - Floating over the DataTable
   * * `below` - (Header only) Fixed to the bottom of the table body
   * * `above` - (Footer only) Fixed to the top of the table body
   *
   * @param  {string}  mode        Mode that the item should be shown in
   * @param  {string}  item        'header' or 'footer'
   * @param  {boolean} forceChange Force a redraw of the mode, even if already
   *     in that mode.
   * @private
   */
  _modeChange: function(s, p, b) {
    var A = this.dom[p], R = this.s.position, B = this._scrollEnabled();
    if (!(p === "footer" && B)) {
      var u = function(y) {
        A.floating[0].style.setProperty("width", y + "px", "important"), B || A.floatingParent[0].style.setProperty("width", y + "px", "important");
      }, d = this.dom[p === "footer" ? "tfoot" : "thead"], t = fr.contains(d[0], document.activeElement) ? document.activeElement : null, o = fr(fr(this.s.dt.table().node()).parent());
      if (s === "in-place")
        A.placeholder && (A.placeholder.remove(), A.placeholder = null), p === "header" ? A.host.prepend(d) : A.host.append(d), A.floating && (A.floating.remove(), A.floating = null, this._stickyPosition(A.host, "+")), A.floatingParent && (A.floatingParent.find("div.dtfc-top-blocker").remove(), A.floatingParent.remove()), fr(fr(A.host.parent()).parent()).scrollLeft(
          o.scrollLeft()
        );
      else if (s === "in") {
        this._clone(p, b);
        var r = o.offset(), n = fr(document).scrollTop(), i = fr(window).height(), f = n + i, l = B ? r.top : R.tbodyTop, c = B ? r.top + o.outerHeight() : R.tfootTop, h;
        p === "footer" ? h = l > f ? R.tfootHeight : l + R.tfootHeight - f : h = n + this.c.headerOffset + R.theadHeight - c;
        var a = p === "header" ? "top" : "bottom", v = this.c[p + "Offset"] - (h > 0 ? h : 0);
        A.floating.addClass("fixedHeader-floating"), A.floatingParent.css(a, v).css({
          left: R.left,
          "z-index": 3
        }), u(R.width), p === "footer" && A.floating.css("top", "");
      } else
        s === "below" ? (this._clone(p, b), A.floating.addClass("fixedHeader-locked"), A.floatingParent.css({
          position: "absolute",
          top: R.tfootTop - R.theadHeight,
          left: R.left + "px"
        }), u(R.width)) : s === "above" && (this._clone(p, b), A.floating.addClass("fixedHeader-locked"), A.floatingParent.css({
          position: "absolute",
          top: R.tbodyTop,
          left: R.left + "px"
        }), u(R.width));
      t && t !== document.activeElement && setTimeout(function() {
        t.focus();
      }, 10), this.s.scrollLeft.header = -1, this.s.scrollLeft.footer = -1, this.s[p + "Mode"] = s;
    }
  },
  /**
   * Cache the positional information that is required for the mode
   * calculations that FixedHeader performs.
   *
   * @private
   */
  _positions: function() {
    var s = this.s.dt, p = s.table(), b = this.s.position, A = this.dom, R = fr(p.node()), B = this._scrollEnabled(), u = fr(s.table().header()), d = fr(s.table().footer()), t = A.tbody, o = R.parent();
    b.visible = R.is(":visible"), b.width = R.outerWidth(), b.left = R.offset().left, b.theadTop = u.offset().top, b.tbodyTop = B ? o.offset().top : t.offset().top, b.tbodyHeight = B ? o.outerHeight() : t.outerHeight(), b.theadHeight = u.outerHeight(), b.theadBottom = b.theadTop + b.theadHeight, b.tfootTop = b.tbodyTop + b.tbodyHeight, d.length ? (b.tfootBottom = b.tfootTop + d.outerHeight(), b.tfootHeight = d.outerHeight()) : (b.tfootBottom = b.tfootTop, b.tfootHeight = 0);
  },
  /**
   * Mode calculation - determine what mode the fixed items should be placed
   * into.
   *
   * @param  {boolean} forceChange Force a redraw of the mode, even if already
   *     in that mode.
   * @private
   */
  _scroll: function(s) {
    if (!this.s.dt.settings()[0].bDestroying) {
      var p = this._scrollEnabled(), b = fr(this.s.dt.table().node()).parent(), A = b.offset(), R = b.outerHeight(), B = fr(document).scrollLeft(), u = fr(document).scrollTop(), d = fr(window).height(), t = d + u, o = this.s.position, r, n, i = p ? A.top : o.tbodyTop, f = p ? A.left : o.left, l = p ? A.top + R : o.tfootTop, c = p ? b.outerWidth() : o.tbodyWidth;
      this.c.header && (this.s.enable ? !o.visible || u + this.c.headerOffset + o.theadHeight <= i ? r = "in-place" : /* The scrolling plus the header offset plus the height of the header is lower than the top of the body */ u + this.c.headerOffset + o.theadHeight > i && // And the scrolling at the top plus the header offset is above the bottom of the body
      u + this.c.headerOffset + o.theadHeight < l ? (r = "in", u + this.c.headerOffset + o.theadHeight > l || this.dom.header.floatingParent === void 0 ? s = !0 : this.dom.header.floatingParent.css({
        top: this.c.headerOffset,
        position: "fixed"
      }).children().eq(0).append(this.dom.header.floating)) : r = "below" : r = "in-place", (s || r !== this.s.headerMode) && this._modeChange(r, "header", s), this._horizontal("header", B));
      var h = {
        offset: { top: 0, left: 0 },
        height: 0
      }, a = {
        offset: { top: 0, left: 0 },
        height: 0
      };
      if (this.c.footer && this.dom.tfoot.length && this.dom.tfoot.find("th, td").length) {
        this.s.enable ? !o.visible || o.tfootBottom + this.c.footerOffset <= t ? n = "in-place" : l + o.tfootHeight + this.c.footerOffset > t && i + this.c.footerOffset < t ? (n = "in", s = !0) : n = "above" : n = "in-place", (s || n !== this.s.footerMode) && this._modeChange(n, "footer", s), this._horizontal("footer", B);
        var v = function(m) {
          return {
            offset: m.offset(),
            height: m.outerHeight()
          };
        };
        if (h = this.dom.header.floating ? v(this.dom.header.floating) : v(this.dom.thead), a = this.dom.footer.floating ? v(this.dom.footer.floating) : v(this.dom.tfoot), p && a.offset.top > u) {
          var y = u - A.top, g = t + // If the gap between the top of the scrollbody and the window is more than
          //  the height of the header then the top of the table is still visible so add that gap
          // Doing this has effectively calculated the height from the top of the table to the bottom of the current page
          (y > -h.height ? y : 0) - // Take from that
          // The top of the header plus
          (h.offset.top + // The header height if the standard header is present
          (y < -h.height ? h.height : 0) + // And the height of the footer
          a.height);
          g < 0 && (g = 0), b.outerHeight(g), Math.round(b.outerHeight()) >= Math.round(g) ? fr(this.dom.tfoot.parent()).addClass("fixedHeader-floating") : fr(this.dom.tfoot.parent()).removeClass(
            "fixedHeader-floating"
          );
        }
      }
      if (this.dom.header.floating && this.dom.header.floatingParent.css("left", f - B), this.dom.footer.floating && this.dom.footer.floatingParent.css("left", f - B), this.s.dt.settings()[0]._fixedColumns !== void 0) {
        var e = function(m, w, D) {
          if (D === void 0) {
            var I = fr(
              "div.dtfc-" + m + "-" + w + "-blocker"
            );
            D = I.length === 0 ? null : I.clone().css("z-index", 1);
          }
          return D !== null && (r === "in" || r === "below" ? D.appendTo("body").css({
            top: w === "top" ? h.offset.top : a.offset.top,
            left: m === "right" ? f + c - D.width() : f
          }) : D.detach()), D;
        };
        this.dom.header.rightBlocker = e(
          "right",
          "top",
          this.dom.header.rightBlocker
        ), this.dom.header.leftBlocker = e(
          "left",
          "top",
          this.dom.header.leftBlocker
        ), this.dom.footer.rightBlocker = e(
          "right",
          "bottom",
          this.dom.footer.rightBlocker
        ), this.dom.footer.leftBlocker = e(
          "left",
          "bottom",
          this.dom.footer.leftBlocker
        );
      }
    }
  },
  /**
   * Function to check if scrolling is enabled on the table or not
   * @returns Boolean value indicating if scrolling on the table is enabled or not
   */
  _scrollEnabled: function() {
    var s = this.s.dt.settings()[0].oScroll;
    return s.sY !== "" || s.sX !== "";
  }
});
Na.version = "4.0.0";
Na.defaults = {
  header: !0,
  footer: !1,
  headerOffset: 0,
  footerOffset: 0
};
fr.fn.dataTable.FixedHeader = Na;
fr.fn.DataTable.FixedHeader = Na;
fr(document).on("init.dt.dtfh", function(s, p, b) {
  if (s.namespace === "dt") {
    var A = p.oInit.fixedHeader, R = ge.defaults.fixedHeader;
    if ((A || R) && !p._fixedHeader) {
      var B = fr.extend({}, R, A);
      A !== !1 && new Na(p, B);
    }
  }
});
ge.Api.register("fixedHeader()", function() {
});
ge.Api.register("fixedHeader.adjust()", function() {
  return this.iterator("table", function(s) {
    var p = s._fixedHeader;
    p && p.update();
  });
});
ge.Api.register("fixedHeader.enable()", function(s) {
  return this.iterator("table", function(p) {
    var b = p._fixedHeader;
    s = s !== void 0 ? s : !0, b && s !== b.enabled() && b.enable(s);
  });
});
ge.Api.register("fixedHeader.enabled()", function() {
  if (this.context.length) {
    var s = this.context[0]._fixedHeader;
    if (s)
      return s.enabled();
  }
  return !1;
});
ge.Api.register("fixedHeader.disable()", function() {
  return this.iterator("table", function(s) {
    var p = s._fixedHeader;
    p && p.enabled() && p.enable(!1);
  });
});
fr.each(["header", "footer"], function(s, p) {
  ge.Api.register("fixedHeader." + p + "Offset()", function(b) {
    var A = this.context;
    return b === void 0 ? A.length && A[0]._fixedHeader ? A[0]._fixedHeader[p + "Offset"]() : void 0 : this.iterator("table", function(R) {
      var B = R._fixedHeader;
      B && B[p + "Offset"](b);
    });
  });
});
var oi = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Mf(s) {
  return s && s.__esModule && Object.prototype.hasOwnProperty.call(s, "default") ? s.default : s;
}
function So(s) {
  throw new Error('Could not dynamically require "' + s + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var kf = { exports: {} };
/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/
(function(s, p) {
  (function(b) {
    s.exports = b();
  })(function() {
    return function b(A, R, B) {
      function u(o, r) {
        if (!R[o]) {
          if (!A[o]) {
            var n = typeof So == "function" && So;
            if (!r && n)
              return n(o, !0);
            if (d)
              return d(o, !0);
            var i = new Error("Cannot find module '" + o + "'");
            throw i.code = "MODULE_NOT_FOUND", i;
          }
          var f = R[o] = { exports: {} };
          A[o][0].call(f.exports, function(l) {
            var c = A[o][1][l];
            return u(c || l);
          }, f, f.exports, b, A, R, B);
        }
        return R[o].exports;
      }
      for (var d = typeof So == "function" && So, t = 0; t < B.length; t++)
        u(B[t]);
      return u;
    }({ 1: [function(b, A, R) {
      var B = b("./utils"), u = b("./support"), d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      R.encode = function(t) {
        for (var o, r, n, i, f, l, c, h = [], a = 0, v = t.length, y = v, g = B.getTypeOf(t) !== "string"; a < t.length; )
          y = v - a, n = g ? (o = t[a++], r = a < v ? t[a++] : 0, a < v ? t[a++] : 0) : (o = t.charCodeAt(a++), r = a < v ? t.charCodeAt(a++) : 0, a < v ? t.charCodeAt(a++) : 0), i = o >> 2, f = (3 & o) << 4 | r >> 4, l = 1 < y ? (15 & r) << 2 | n >> 6 : 64, c = 2 < y ? 63 & n : 64, h.push(d.charAt(i) + d.charAt(f) + d.charAt(l) + d.charAt(c));
        return h.join("");
      }, R.decode = function(t) {
        var o, r, n, i, f, l, c = 0, h = 0, a = "data:";
        if (t.substr(0, a.length) === a)
          throw new Error("Invalid base64 input, it looks like a data url.");
        var v, y = 3 * (t = t.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
        if (t.charAt(t.length - 1) === d.charAt(64) && y--, t.charAt(t.length - 2) === d.charAt(64) && y--, y % 1 != 0)
          throw new Error("Invalid base64 input, bad content length.");
        for (v = u.uint8array ? new Uint8Array(0 | y) : new Array(0 | y); c < t.length; )
          o = d.indexOf(t.charAt(c++)) << 2 | (i = d.indexOf(t.charAt(c++))) >> 4, r = (15 & i) << 4 | (f = d.indexOf(t.charAt(c++))) >> 2, n = (3 & f) << 6 | (l = d.indexOf(t.charAt(c++))), v[h++] = o, f !== 64 && (v[h++] = r), l !== 64 && (v[h++] = n);
        return v;
      };
    }, { "./support": 30, "./utils": 32 }], 2: [function(b, A, R) {
      var B = b("./external"), u = b("./stream/DataWorker"), d = b("./stream/Crc32Probe"), t = b("./stream/DataLengthProbe");
      function o(r, n, i, f, l) {
        this.compressedSize = r, this.uncompressedSize = n, this.crc32 = i, this.compression = f, this.compressedContent = l;
      }
      o.prototype = { getContentWorker: function() {
        var r = new u(B.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new t("data_length")), n = this;
        return r.on("end", function() {
          if (this.streamInfo.data_length !== n.uncompressedSize)
            throw new Error("Bug : uncompressed data size mismatch");
        }), r;
      }, getCompressedWorker: function() {
        return new u(B.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
      } }, o.createWorkerFrom = function(r, n, i) {
        return r.pipe(new d()).pipe(new t("uncompressedSize")).pipe(n.compressWorker(i)).pipe(new t("compressedSize")).withStreamInfo("compression", n);
      }, A.exports = o;
    }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(b, A, R) {
      var B = b("./stream/GenericWorker");
      R.STORE = { magic: "\0\0", compressWorker: function() {
        return new B("STORE compression");
      }, uncompressWorker: function() {
        return new B("STORE decompression");
      } }, R.DEFLATE = b("./flate");
    }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(b, A, R) {
      var B = b("./utils"), u = function() {
        for (var d, t = [], o = 0; o < 256; o++) {
          d = o;
          for (var r = 0; r < 8; r++)
            d = 1 & d ? 3988292384 ^ d >>> 1 : d >>> 1;
          t[o] = d;
        }
        return t;
      }();
      A.exports = function(d, t) {
        return d !== void 0 && d.length ? B.getTypeOf(d) !== "string" ? function(o, r, n, i) {
          var f = u, l = i + n;
          o ^= -1;
          for (var c = i; c < l; c++)
            o = o >>> 8 ^ f[255 & (o ^ r[c])];
          return -1 ^ o;
        }(0 | t, d, d.length, 0) : function(o, r, n, i) {
          var f = u, l = i + n;
          o ^= -1;
          for (var c = i; c < l; c++)
            o = o >>> 8 ^ f[255 & (o ^ r.charCodeAt(c))];
          return -1 ^ o;
        }(0 | t, d, d.length, 0) : 0;
      };
    }, { "./utils": 32 }], 5: [function(b, A, R) {
      R.base64 = !1, R.binary = !1, R.dir = !1, R.createFolders = !0, R.date = null, R.compression = null, R.compressionOptions = null, R.comment = null, R.unixPermissions = null, R.dosPermissions = null;
    }, {}], 6: [function(b, A, R) {
      var B = null;
      B = typeof Promise < "u" ? Promise : b("lie"), A.exports = { Promise: B };
    }, { lie: 37 }], 7: [function(b, A, R) {
      var B = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Uint32Array < "u", u = b("pako"), d = b("./utils"), t = b("./stream/GenericWorker"), o = B ? "uint8array" : "array";
      function r(n, i) {
        t.call(this, "FlateWorker/" + n), this._pako = null, this._pakoAction = n, this._pakoOptions = i, this.meta = {};
      }
      R.magic = "\b\0", d.inherits(r, t), r.prototype.processChunk = function(n) {
        this.meta = n.meta, this._pako === null && this._createPako(), this._pako.push(d.transformTo(o, n.data), !1);
      }, r.prototype.flush = function() {
        t.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], !0);
      }, r.prototype.cleanUp = function() {
        t.prototype.cleanUp.call(this), this._pako = null;
      }, r.prototype._createPako = function() {
        this._pako = new u[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
        var n = this;
        this._pako.onData = function(i) {
          n.push({ data: i, meta: n.meta });
        };
      }, R.compressWorker = function(n) {
        return new r("Deflate", n);
      }, R.uncompressWorker = function() {
        return new r("Inflate", {});
      };
    }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(b, A, R) {
      function B(f, l) {
        var c, h = "";
        for (c = 0; c < l; c++)
          h += String.fromCharCode(255 & f), f >>>= 8;
        return h;
      }
      function u(f, l, c, h, a, v) {
        var y, g, e = f.file, m = f.compression, w = v !== o.utf8encode, D = d.transformTo("string", v(e.name)), I = d.transformTo("string", o.utf8encode(e.name)), T = e.comment, C = d.transformTo("string", v(T)), E = d.transformTo("string", o.utf8encode(T)), F = I.length !== e.name.length, x = E.length !== T.length, P = "", L = "", N = "", M = e.dir, K = e.date, ut = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
        l && !c || (ut.crc32 = f.crc32, ut.compressedSize = f.compressedSize, ut.uncompressedSize = f.uncompressedSize);
        var J = 0;
        l && (J |= 8), w || !F && !x || (J |= 2048);
        var rt = 0, yt = 0;
        M && (rt |= 16), a === "UNIX" ? (yt = 798, rt |= function(Et, Ft) {
          var Rt = Et;
          return Et || (Rt = Ft ? 16893 : 33204), (65535 & Rt) << 16;
        }(e.unixPermissions, M)) : (yt = 20, rt |= function(Et) {
          return 63 & (Et || 0);
        }(e.dosPermissions)), y = K.getUTCHours(), y <<= 6, y |= K.getUTCMinutes(), y <<= 5, y |= K.getUTCSeconds() / 2, g = K.getUTCFullYear() - 1980, g <<= 4, g |= K.getUTCMonth() + 1, g <<= 5, g |= K.getUTCDate(), F && (L = B(1, 1) + B(r(D), 4) + I, P += "up" + B(L.length, 2) + L), x && (N = B(1, 1) + B(r(C), 4) + E, P += "uc" + B(N.length, 2) + N);
        var xt = "";
        return xt += `
\0`, xt += B(J, 2), xt += m.magic, xt += B(y, 2), xt += B(g, 2), xt += B(ut.crc32, 4), xt += B(ut.compressedSize, 4), xt += B(ut.uncompressedSize, 4), xt += B(D.length, 2), xt += B(P.length, 2), { fileRecord: n.LOCAL_FILE_HEADER + xt + D + P, dirRecord: n.CENTRAL_FILE_HEADER + B(yt, 2) + xt + B(C.length, 2) + "\0\0\0\0" + B(rt, 4) + B(h, 4) + D + P + C };
      }
      var d = b("../utils"), t = b("../stream/GenericWorker"), o = b("../utf8"), r = b("../crc32"), n = b("../signature");
      function i(f, l, c, h) {
        t.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = l, this.zipPlatform = c, this.encodeFileName = h, this.streamFiles = f, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
      }
      d.inherits(i, t), i.prototype.push = function(f) {
        var l = f.meta.percent || 0, c = this.entriesCount, h = this._sources.length;
        this.accumulate ? this.contentBuffer.push(f) : (this.bytesWritten += f.data.length, t.prototype.push.call(this, { data: f.data, meta: { currentFile: this.currentFile, percent: c ? (l + 100 * (c - h - 1)) / c : 100 } }));
      }, i.prototype.openedSource = function(f) {
        this.currentSourceOffset = this.bytesWritten, this.currentFile = f.file.name;
        var l = this.streamFiles && !f.file.dir;
        if (l) {
          var c = u(f, l, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          this.push({ data: c.fileRecord, meta: { percent: 0 } });
        } else
          this.accumulate = !0;
      }, i.prototype.closedSource = function(f) {
        this.accumulate = !1;
        var l = this.streamFiles && !f.file.dir, c = u(f, l, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
        if (this.dirRecords.push(c.dirRecord), l)
          this.push({ data: function(h) {
            return n.DATA_DESCRIPTOR + B(h.crc32, 4) + B(h.compressedSize, 4) + B(h.uncompressedSize, 4);
          }(f), meta: { percent: 100 } });
        else
          for (this.push({ data: c.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
            this.push(this.contentBuffer.shift());
        this.currentFile = null;
      }, i.prototype.flush = function() {
        for (var f = this.bytesWritten, l = 0; l < this.dirRecords.length; l++)
          this.push({ data: this.dirRecords[l], meta: { percent: 100 } });
        var c = this.bytesWritten - f, h = function(a, v, y, g, e) {
          var m = d.transformTo("string", e(g));
          return n.CENTRAL_DIRECTORY_END + "\0\0\0\0" + B(a, 2) + B(a, 2) + B(v, 4) + B(y, 4) + B(m.length, 2) + m;
        }(this.dirRecords.length, c, f, this.zipComment, this.encodeFileName);
        this.push({ data: h, meta: { percent: 100 } });
      }, i.prototype.prepareNextSource = function() {
        this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
      }, i.prototype.registerPrevious = function(f) {
        this._sources.push(f);
        var l = this;
        return f.on("data", function(c) {
          l.processChunk(c);
        }), f.on("end", function() {
          l.closedSource(l.previous.streamInfo), l._sources.length ? l.prepareNextSource() : l.end();
        }), f.on("error", function(c) {
          l.error(c);
        }), this;
      }, i.prototype.resume = function() {
        return !!t.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
      }, i.prototype.error = function(f) {
        var l = this._sources;
        if (!t.prototype.error.call(this, f))
          return !1;
        for (var c = 0; c < l.length; c++)
          try {
            l[c].error(f);
          } catch {
          }
        return !0;
      }, i.prototype.lock = function() {
        t.prototype.lock.call(this);
        for (var f = this._sources, l = 0; l < f.length; l++)
          f[l].lock();
      }, A.exports = i;
    }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(b, A, R) {
      var B = b("../compressions"), u = b("./ZipFileWorker");
      R.generateWorker = function(d, t, o) {
        var r = new u(t.streamFiles, o, t.platform, t.encodeFileName), n = 0;
        try {
          d.forEach(function(i, f) {
            n++;
            var l = function(v, y) {
              var g = v || y, e = B[g];
              if (!e)
                throw new Error(g + " is not a valid compression method !");
              return e;
            }(f.options.compression, t.compression), c = f.options.compressionOptions || t.compressionOptions || {}, h = f.dir, a = f.date;
            f._compressWorker(l, c).withStreamInfo("file", { name: i, dir: h, date: a, comment: f.comment || "", unixPermissions: f.unixPermissions, dosPermissions: f.dosPermissions }).pipe(r);
          }), r.entriesCount = n;
        } catch (i) {
          r.error(i);
        }
        return r;
      };
    }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(b, A, R) {
      function B() {
        if (!(this instanceof B))
          return new B();
        if (arguments.length)
          throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
        this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
          var u = new B();
          for (var d in this)
            typeof this[d] != "function" && (u[d] = this[d]);
          return u;
        };
      }
      (B.prototype = b("./object")).loadAsync = b("./load"), B.support = b("./support"), B.defaults = b("./defaults"), B.version = "3.10.1", B.loadAsync = function(u, d) {
        return new B().loadAsync(u, d);
      }, B.external = b("./external"), A.exports = B;
    }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(b, A, R) {
      var B = b("./utils"), u = b("./external"), d = b("./utf8"), t = b("./zipEntries"), o = b("./stream/Crc32Probe"), r = b("./nodejsUtils");
      function n(i) {
        return new u.Promise(function(f, l) {
          var c = i.decompressed.getContentWorker().pipe(new o());
          c.on("error", function(h) {
            l(h);
          }).on("end", function() {
            c.streamInfo.crc32 !== i.decompressed.crc32 ? l(new Error("Corrupted zip : CRC32 mismatch")) : f();
          }).resume();
        });
      }
      A.exports = function(i, f) {
        var l = this;
        return f = B.extend(f || {}, { base64: !1, checkCRC32: !1, optimizedBinaryString: !1, createFolders: !1, decodeFileName: d.utf8decode }), r.isNode && r.isStream(i) ? u.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : B.prepareContent("the loaded zip file", i, !0, f.optimizedBinaryString, f.base64).then(function(c) {
          var h = new t(f);
          return h.load(c), h;
        }).then(function(c) {
          var h = [u.Promise.resolve(c)], a = c.files;
          if (f.checkCRC32)
            for (var v = 0; v < a.length; v++)
              h.push(n(a[v]));
          return u.Promise.all(h);
        }).then(function(c) {
          for (var h = c.shift(), a = h.files, v = 0; v < a.length; v++) {
            var y = a[v], g = y.fileNameStr, e = B.resolve(y.fileNameStr);
            l.file(e, y.decompressed, { binary: !0, optimizedBinaryString: !0, date: y.date, dir: y.dir, comment: y.fileCommentStr.length ? y.fileCommentStr : null, unixPermissions: y.unixPermissions, dosPermissions: y.dosPermissions, createFolders: f.createFolders }), y.dir || (l.file(e).unsafeOriginalName = g);
          }
          return h.zipComment.length && (l.comment = h.zipComment), l;
        });
      };
    }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(b, A, R) {
      var B = b("../utils"), u = b("../stream/GenericWorker");
      function d(t, o) {
        u.call(this, "Nodejs stream input adapter for " + t), this._upstreamEnded = !1, this._bindStream(o);
      }
      B.inherits(d, u), d.prototype._bindStream = function(t) {
        var o = this;
        (this._stream = t).pause(), t.on("data", function(r) {
          o.push({ data: r, meta: { percent: 0 } });
        }).on("error", function(r) {
          o.isPaused ? this.generatedError = r : o.error(r);
        }).on("end", function() {
          o.isPaused ? o._upstreamEnded = !0 : o.end();
        });
      }, d.prototype.pause = function() {
        return !!u.prototype.pause.call(this) && (this._stream.pause(), !0);
      }, d.prototype.resume = function() {
        return !!u.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
      }, A.exports = d;
    }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(b, A, R) {
      var B = b("readable-stream").Readable;
      function u(d, t, o) {
        B.call(this, t), this._helper = d;
        var r = this;
        d.on("data", function(n, i) {
          r.push(n) || r._helper.pause(), o && o(i);
        }).on("error", function(n) {
          r.emit("error", n);
        }).on("end", function() {
          r.push(null);
        });
      }
      b("../utils").inherits(u, B), u.prototype._read = function() {
        this._helper.resume();
      }, A.exports = u;
    }, { "../utils": 32, "readable-stream": 16 }], 14: [function(b, A, R) {
      A.exports = { isNode: typeof Buffer < "u", newBufferFrom: function(B, u) {
        if (Buffer.from && Buffer.from !== Uint8Array.from)
          return Buffer.from(B, u);
        if (typeof B == "number")
          throw new Error('The "data" argument must not be a number');
        return new Buffer(B, u);
      }, allocBuffer: function(B) {
        if (Buffer.alloc)
          return Buffer.alloc(B);
        var u = new Buffer(B);
        return u.fill(0), u;
      }, isBuffer: function(B) {
        return Buffer.isBuffer(B);
      }, isStream: function(B) {
        return B && typeof B.on == "function" && typeof B.pause == "function" && typeof B.resume == "function";
      } };
    }, {}], 15: [function(b, A, R) {
      function B(e, m, w) {
        var D, I = d.getTypeOf(m), T = d.extend(w || {}, r);
        T.date = T.date || /* @__PURE__ */ new Date(), T.compression !== null && (T.compression = T.compression.toUpperCase()), typeof T.unixPermissions == "string" && (T.unixPermissions = parseInt(T.unixPermissions, 8)), T.unixPermissions && 16384 & T.unixPermissions && (T.dir = !0), T.dosPermissions && 16 & T.dosPermissions && (T.dir = !0), T.dir && (e = a(e)), T.createFolders && (D = h(e)) && v.call(this, D, !0);
        var C = I === "string" && T.binary === !1 && T.base64 === !1;
        w && w.binary !== void 0 || (T.binary = !C), (m instanceof n && m.uncompressedSize === 0 || T.dir || !m || m.length === 0) && (T.base64 = !1, T.binary = !0, m = "", T.compression = "STORE", I = "string");
        var E = null;
        E = m instanceof n || m instanceof t ? m : l.isNode && l.isStream(m) ? new c(e, m) : d.prepareContent(e, m, T.binary, T.optimizedBinaryString, T.base64);
        var F = new i(e, E, T);
        this.files[e] = F;
      }
      var u = b("./utf8"), d = b("./utils"), t = b("./stream/GenericWorker"), o = b("./stream/StreamHelper"), r = b("./defaults"), n = b("./compressedObject"), i = b("./zipObject"), f = b("./generate"), l = b("./nodejsUtils"), c = b("./nodejs/NodejsStreamInputAdapter"), h = function(e) {
        e.slice(-1) === "/" && (e = e.substring(0, e.length - 1));
        var m = e.lastIndexOf("/");
        return 0 < m ? e.substring(0, m) : "";
      }, a = function(e) {
        return e.slice(-1) !== "/" && (e += "/"), e;
      }, v = function(e, m) {
        return m = m !== void 0 ? m : r.createFolders, e = a(e), this.files[e] || B.call(this, e, null, { dir: !0, createFolders: m }), this.files[e];
      };
      function y(e) {
        return Object.prototype.toString.call(e) === "[object RegExp]";
      }
      var g = { load: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, forEach: function(e) {
        var m, w, D;
        for (m in this.files)
          D = this.files[m], (w = m.slice(this.root.length, m.length)) && m.slice(0, this.root.length) === this.root && e(w, D);
      }, filter: function(e) {
        var m = [];
        return this.forEach(function(w, D) {
          e(w, D) && m.push(D);
        }), m;
      }, file: function(e, m, w) {
        if (arguments.length !== 1)
          return e = this.root + e, B.call(this, e, m, w), this;
        if (y(e)) {
          var D = e;
          return this.filter(function(T, C) {
            return !C.dir && D.test(T);
          });
        }
        var I = this.files[this.root + e];
        return I && !I.dir ? I : null;
      }, folder: function(e) {
        if (!e)
          return this;
        if (y(e))
          return this.filter(function(I, T) {
            return T.dir && e.test(I);
          });
        var m = this.root + e, w = v.call(this, m), D = this.clone();
        return D.root = w.name, D;
      }, remove: function(e) {
        e = this.root + e;
        var m = this.files[e];
        if (m || (e.slice(-1) !== "/" && (e += "/"), m = this.files[e]), m && !m.dir)
          delete this.files[e];
        else
          for (var w = this.filter(function(I, T) {
            return T.name.slice(0, e.length) === e;
          }), D = 0; D < w.length; D++)
            delete this.files[w[D].name];
        return this;
      }, generate: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, generateInternalStream: function(e) {
        var m, w = {};
        try {
          if ((w = d.extend(e || {}, { streamFiles: !1, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: u.utf8encode })).type = w.type.toLowerCase(), w.compression = w.compression.toUpperCase(), w.type === "binarystring" && (w.type = "string"), !w.type)
            throw new Error("No output type specified.");
          d.checkSupport(w.type), w.platform !== "darwin" && w.platform !== "freebsd" && w.platform !== "linux" && w.platform !== "sunos" || (w.platform = "UNIX"), w.platform === "win32" && (w.platform = "DOS");
          var D = w.comment || this.comment || "";
          m = f.generateWorker(this, w, D);
        } catch (I) {
          (m = new t("error")).error(I);
        }
        return new o(m, w.type || "string", w.mimeType);
      }, generateAsync: function(e, m) {
        return this.generateInternalStream(e).accumulate(m);
      }, generateNodeStream: function(e, m) {
        return (e = e || {}).type || (e.type = "nodebuffer"), this.generateInternalStream(e).toNodejsStream(m);
      } };
      A.exports = g;
    }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(b, A, R) {
      A.exports = b("stream");
    }, { stream: void 0 }], 17: [function(b, A, R) {
      var B = b("./DataReader");
      function u(d) {
        B.call(this, d);
        for (var t = 0; t < this.data.length; t++)
          d[t] = 255 & d[t];
      }
      b("../utils").inherits(u, B), u.prototype.byteAt = function(d) {
        return this.data[this.zero + d];
      }, u.prototype.lastIndexOfSignature = function(d) {
        for (var t = d.charCodeAt(0), o = d.charCodeAt(1), r = d.charCodeAt(2), n = d.charCodeAt(3), i = this.length - 4; 0 <= i; --i)
          if (this.data[i] === t && this.data[i + 1] === o && this.data[i + 2] === r && this.data[i + 3] === n)
            return i - this.zero;
        return -1;
      }, u.prototype.readAndCheckSignature = function(d) {
        var t = d.charCodeAt(0), o = d.charCodeAt(1), r = d.charCodeAt(2), n = d.charCodeAt(3), i = this.readData(4);
        return t === i[0] && o === i[1] && r === i[2] && n === i[3];
      }, u.prototype.readData = function(d) {
        if (this.checkOffset(d), d === 0)
          return [];
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, A.exports = u;
    }, { "../utils": 32, "./DataReader": 18 }], 18: [function(b, A, R) {
      var B = b("../utils");
      function u(d) {
        this.data = d, this.length = d.length, this.index = 0, this.zero = 0;
      }
      u.prototype = { checkOffset: function(d) {
        this.checkIndex(this.index + d);
      }, checkIndex: function(d) {
        if (this.length < this.zero + d || d < 0)
          throw new Error("End of data reached (data length = " + this.length + ", asked index = " + d + "). Corrupted zip ?");
      }, setIndex: function(d) {
        this.checkIndex(d), this.index = d;
      }, skip: function(d) {
        this.setIndex(this.index + d);
      }, byteAt: function() {
      }, readInt: function(d) {
        var t, o = 0;
        for (this.checkOffset(d), t = this.index + d - 1; t >= this.index; t--)
          o = (o << 8) + this.byteAt(t);
        return this.index += d, o;
      }, readString: function(d) {
        return B.transformTo("string", this.readData(d));
      }, readData: function() {
      }, lastIndexOfSignature: function() {
      }, readAndCheckSignature: function() {
      }, readDate: function() {
        var d = this.readInt(4);
        return new Date(Date.UTC(1980 + (d >> 25 & 127), (d >> 21 & 15) - 1, d >> 16 & 31, d >> 11 & 31, d >> 5 & 63, (31 & d) << 1));
      } }, A.exports = u;
    }, { "../utils": 32 }], 19: [function(b, A, R) {
      var B = b("./Uint8ArrayReader");
      function u(d) {
        B.call(this, d);
      }
      b("../utils").inherits(u, B), u.prototype.readData = function(d) {
        this.checkOffset(d);
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, A.exports = u;
    }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(b, A, R) {
      var B = b("./DataReader");
      function u(d) {
        B.call(this, d);
      }
      b("../utils").inherits(u, B), u.prototype.byteAt = function(d) {
        return this.data.charCodeAt(this.zero + d);
      }, u.prototype.lastIndexOfSignature = function(d) {
        return this.data.lastIndexOf(d) - this.zero;
      }, u.prototype.readAndCheckSignature = function(d) {
        return d === this.readData(4);
      }, u.prototype.readData = function(d) {
        this.checkOffset(d);
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, A.exports = u;
    }, { "../utils": 32, "./DataReader": 18 }], 21: [function(b, A, R) {
      var B = b("./ArrayReader");
      function u(d) {
        B.call(this, d);
      }
      b("../utils").inherits(u, B), u.prototype.readData = function(d) {
        if (this.checkOffset(d), d === 0)
          return new Uint8Array(0);
        var t = this.data.subarray(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, A.exports = u;
    }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(b, A, R) {
      var B = b("../utils"), u = b("../support"), d = b("./ArrayReader"), t = b("./StringReader"), o = b("./NodeBufferReader"), r = b("./Uint8ArrayReader");
      A.exports = function(n) {
        var i = B.getTypeOf(n);
        return B.checkSupport(i), i !== "string" || u.uint8array ? i === "nodebuffer" ? new o(n) : u.uint8array ? new r(B.transformTo("uint8array", n)) : new d(B.transformTo("array", n)) : new t(n);
      };
    }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(b, A, R) {
      R.LOCAL_FILE_HEADER = "PK", R.CENTRAL_FILE_HEADER = "PK", R.CENTRAL_DIRECTORY_END = "PK", R.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", R.ZIP64_CENTRAL_DIRECTORY_END = "PK", R.DATA_DESCRIPTOR = "PK\x07\b";
    }, {}], 24: [function(b, A, R) {
      var B = b("./GenericWorker"), u = b("../utils");
      function d(t) {
        B.call(this, "ConvertWorker to " + t), this.destType = t;
      }
      u.inherits(d, B), d.prototype.processChunk = function(t) {
        this.push({ data: u.transformTo(this.destType, t.data), meta: t.meta });
      }, A.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(b, A, R) {
      var B = b("./GenericWorker"), u = b("../crc32");
      function d() {
        B.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
      }
      b("../utils").inherits(d, B), d.prototype.processChunk = function(t) {
        this.streamInfo.crc32 = u(t.data, this.streamInfo.crc32 || 0), this.push(t);
      }, A.exports = d;
    }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(b, A, R) {
      var B = b("../utils"), u = b("./GenericWorker");
      function d(t) {
        u.call(this, "DataLengthProbe for " + t), this.propName = t, this.withStreamInfo(t, 0);
      }
      B.inherits(d, u), d.prototype.processChunk = function(t) {
        if (t) {
          var o = this.streamInfo[this.propName] || 0;
          this.streamInfo[this.propName] = o + t.data.length;
        }
        u.prototype.processChunk.call(this, t);
      }, A.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(b, A, R) {
      var B = b("../utils"), u = b("./GenericWorker");
      function d(t) {
        u.call(this, "DataWorker");
        var o = this;
        this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, t.then(function(r) {
          o.dataIsReady = !0, o.data = r, o.max = r && r.length || 0, o.type = B.getTypeOf(r), o.isPaused || o._tickAndRepeat();
        }, function(r) {
          o.error(r);
        });
      }
      B.inherits(d, u), d.prototype.cleanUp = function() {
        u.prototype.cleanUp.call(this), this.data = null;
      }, d.prototype.resume = function() {
        return !!u.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, B.delay(this._tickAndRepeat, [], this)), !0);
      }, d.prototype._tickAndRepeat = function() {
        this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (B.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
      }, d.prototype._tick = function() {
        if (this.isPaused || this.isFinished)
          return !1;
        var t = null, o = Math.min(this.max, this.index + 16384);
        if (this.index >= this.max)
          return this.end();
        switch (this.type) {
          case "string":
            t = this.data.substring(this.index, o);
            break;
          case "uint8array":
            t = this.data.subarray(this.index, o);
            break;
          case "array":
          case "nodebuffer":
            t = this.data.slice(this.index, o);
        }
        return this.index = o, this.push({ data: t, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
      }, A.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(b, A, R) {
      function B(u) {
        this.name = u || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
      }
      B.prototype = { push: function(u) {
        this.emit("data", u);
      }, end: function() {
        if (this.isFinished)
          return !1;
        this.flush();
        try {
          this.emit("end"), this.cleanUp(), this.isFinished = !0;
        } catch (u) {
          this.emit("error", u);
        }
        return !0;
      }, error: function(u) {
        return !this.isFinished && (this.isPaused ? this.generatedError = u : (this.isFinished = !0, this.emit("error", u), this.previous && this.previous.error(u), this.cleanUp()), !0);
      }, on: function(u, d) {
        return this._listeners[u].push(d), this;
      }, cleanUp: function() {
        this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
      }, emit: function(u, d) {
        if (this._listeners[u])
          for (var t = 0; t < this._listeners[u].length; t++)
            this._listeners[u][t].call(this, d);
      }, pipe: function(u) {
        return u.registerPrevious(this);
      }, registerPrevious: function(u) {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.streamInfo = u.streamInfo, this.mergeStreamInfo(), this.previous = u;
        var d = this;
        return u.on("data", function(t) {
          d.processChunk(t);
        }), u.on("end", function() {
          d.end();
        }), u.on("error", function(t) {
          d.error(t);
        }), this;
      }, pause: function() {
        return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
      }, resume: function() {
        if (!this.isPaused || this.isFinished)
          return !1;
        var u = this.isPaused = !1;
        return this.generatedError && (this.error(this.generatedError), u = !0), this.previous && this.previous.resume(), !u;
      }, flush: function() {
      }, processChunk: function(u) {
        this.push(u);
      }, withStreamInfo: function(u, d) {
        return this.extraStreamInfo[u] = d, this.mergeStreamInfo(), this;
      }, mergeStreamInfo: function() {
        for (var u in this.extraStreamInfo)
          Object.prototype.hasOwnProperty.call(this.extraStreamInfo, u) && (this.streamInfo[u] = this.extraStreamInfo[u]);
      }, lock: function() {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.isLocked = !0, this.previous && this.previous.lock();
      }, toString: function() {
        var u = "Worker " + this.name;
        return this.previous ? this.previous + " -> " + u : u;
      } }, A.exports = B;
    }, {}], 29: [function(b, A, R) {
      var B = b("../utils"), u = b("./ConvertWorker"), d = b("./GenericWorker"), t = b("../base64"), o = b("../support"), r = b("../external"), n = null;
      if (o.nodestream)
        try {
          n = b("../nodejs/NodejsStreamOutputAdapter");
        } catch {
        }
      function i(l, c) {
        return new r.Promise(function(h, a) {
          var v = [], y = l._internalType, g = l._outputType, e = l._mimeType;
          l.on("data", function(m, w) {
            v.push(m), c && c(w);
          }).on("error", function(m) {
            v = [], a(m);
          }).on("end", function() {
            try {
              var m = function(w, D, I) {
                switch (w) {
                  case "blob":
                    return B.newBlob(B.transformTo("arraybuffer", D), I);
                  case "base64":
                    return t.encode(D);
                  default:
                    return B.transformTo(w, D);
                }
              }(g, function(w, D) {
                var I, T = 0, C = null, E = 0;
                for (I = 0; I < D.length; I++)
                  E += D[I].length;
                switch (w) {
                  case "string":
                    return D.join("");
                  case "array":
                    return Array.prototype.concat.apply([], D);
                  case "uint8array":
                    for (C = new Uint8Array(E), I = 0; I < D.length; I++)
                      C.set(D[I], T), T += D[I].length;
                    return C;
                  case "nodebuffer":
                    return Buffer.concat(D);
                  default:
                    throw new Error("concat : unsupported type '" + w + "'");
                }
              }(y, v), e);
              h(m);
            } catch (w) {
              a(w);
            }
            v = [];
          }).resume();
        });
      }
      function f(l, c, h) {
        var a = c;
        switch (c) {
          case "blob":
          case "arraybuffer":
            a = "uint8array";
            break;
          case "base64":
            a = "string";
        }
        try {
          this._internalType = a, this._outputType = c, this._mimeType = h, B.checkSupport(a), this._worker = l.pipe(new u(a)), l.lock();
        } catch (v) {
          this._worker = new d("error"), this._worker.error(v);
        }
      }
      f.prototype = { accumulate: function(l) {
        return i(this, l);
      }, on: function(l, c) {
        var h = this;
        return l === "data" ? this._worker.on(l, function(a) {
          c.call(h, a.data, a.meta);
        }) : this._worker.on(l, function() {
          B.delay(c, arguments, h);
        }), this;
      }, resume: function() {
        return B.delay(this._worker.resume, [], this._worker), this;
      }, pause: function() {
        return this._worker.pause(), this;
      }, toNodejsStream: function(l) {
        if (B.checkSupport("nodestream"), this._outputType !== "nodebuffer")
          throw new Error(this._outputType + " is not supported by this method");
        return new n(this, { objectMode: this._outputType !== "nodebuffer" }, l);
      } }, A.exports = f;
    }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(b, A, R) {
      if (R.base64 = !0, R.array = !0, R.string = !0, R.arraybuffer = typeof ArrayBuffer < "u" && typeof Uint8Array < "u", R.nodebuffer = typeof Buffer < "u", R.uint8array = typeof Uint8Array < "u", typeof ArrayBuffer > "u")
        R.blob = !1;
      else {
        var B = new ArrayBuffer(0);
        try {
          R.blob = new Blob([B], { type: "application/zip" }).size === 0;
        } catch {
          try {
            var u = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            u.append(B), R.blob = u.getBlob("application/zip").size === 0;
          } catch {
            R.blob = !1;
          }
        }
      }
      try {
        R.nodestream = !!b("readable-stream").Readable;
      } catch {
        R.nodestream = !1;
      }
    }, { "readable-stream": 16 }], 31: [function(b, A, R) {
      for (var B = b("./utils"), u = b("./support"), d = b("./nodejsUtils"), t = b("./stream/GenericWorker"), o = new Array(256), r = 0; r < 256; r++)
        o[r] = 252 <= r ? 6 : 248 <= r ? 5 : 240 <= r ? 4 : 224 <= r ? 3 : 192 <= r ? 2 : 1;
      o[254] = o[254] = 1;
      function n() {
        t.call(this, "utf-8 decode"), this.leftOver = null;
      }
      function i() {
        t.call(this, "utf-8 encode");
      }
      R.utf8encode = function(f) {
        return u.nodebuffer ? d.newBufferFrom(f, "utf-8") : function(l) {
          var c, h, a, v, y, g = l.length, e = 0;
          for (v = 0; v < g; v++)
            (64512 & (h = l.charCodeAt(v))) == 55296 && v + 1 < g && (64512 & (a = l.charCodeAt(v + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (a - 56320), v++), e += h < 128 ? 1 : h < 2048 ? 2 : h < 65536 ? 3 : 4;
          for (c = u.uint8array ? new Uint8Array(e) : new Array(e), v = y = 0; y < e; v++)
            (64512 & (h = l.charCodeAt(v))) == 55296 && v + 1 < g && (64512 & (a = l.charCodeAt(v + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (a - 56320), v++), h < 128 ? c[y++] = h : (h < 2048 ? c[y++] = 192 | h >>> 6 : (h < 65536 ? c[y++] = 224 | h >>> 12 : (c[y++] = 240 | h >>> 18, c[y++] = 128 | h >>> 12 & 63), c[y++] = 128 | h >>> 6 & 63), c[y++] = 128 | 63 & h);
          return c;
        }(f);
      }, R.utf8decode = function(f) {
        return u.nodebuffer ? B.transformTo("nodebuffer", f).toString("utf-8") : function(l) {
          var c, h, a, v, y = l.length, g = new Array(2 * y);
          for (c = h = 0; c < y; )
            if ((a = l[c++]) < 128)
              g[h++] = a;
            else if (4 < (v = o[a]))
              g[h++] = 65533, c += v - 1;
            else {
              for (a &= v === 2 ? 31 : v === 3 ? 15 : 7; 1 < v && c < y; )
                a = a << 6 | 63 & l[c++], v--;
              1 < v ? g[h++] = 65533 : a < 65536 ? g[h++] = a : (a -= 65536, g[h++] = 55296 | a >> 10 & 1023, g[h++] = 56320 | 1023 & a);
            }
          return g.length !== h && (g.subarray ? g = g.subarray(0, h) : g.length = h), B.applyFromCharCode(g);
        }(f = B.transformTo(u.uint8array ? "uint8array" : "array", f));
      }, B.inherits(n, t), n.prototype.processChunk = function(f) {
        var l = B.transformTo(u.uint8array ? "uint8array" : "array", f.data);
        if (this.leftOver && this.leftOver.length) {
          if (u.uint8array) {
            var c = l;
            (l = new Uint8Array(c.length + this.leftOver.length)).set(this.leftOver, 0), l.set(c, this.leftOver.length);
          } else
            l = this.leftOver.concat(l);
          this.leftOver = null;
        }
        var h = function(v, y) {
          var g;
          for ((y = y || v.length) > v.length && (y = v.length), g = y - 1; 0 <= g && (192 & v[g]) == 128; )
            g--;
          return g < 0 || g === 0 ? y : g + o[v[g]] > y ? g : y;
        }(l), a = l;
        h !== l.length && (u.uint8array ? (a = l.subarray(0, h), this.leftOver = l.subarray(h, l.length)) : (a = l.slice(0, h), this.leftOver = l.slice(h, l.length))), this.push({ data: R.utf8decode(a), meta: f.meta });
      }, n.prototype.flush = function() {
        this.leftOver && this.leftOver.length && (this.push({ data: R.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
      }, R.Utf8DecodeWorker = n, B.inherits(i, t), i.prototype.processChunk = function(f) {
        this.push({ data: R.utf8encode(f.data), meta: f.meta });
      }, R.Utf8EncodeWorker = i;
    }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(b, A, R) {
      var B = b("./support"), u = b("./base64"), d = b("./nodejsUtils"), t = b("./external");
      function o(c) {
        return c;
      }
      function r(c, h) {
        for (var a = 0; a < c.length; ++a)
          h[a] = 255 & c.charCodeAt(a);
        return h;
      }
      b("setimmediate"), R.newBlob = function(c, h) {
        R.checkSupport("blob");
        try {
          return new Blob([c], { type: h });
        } catch {
          try {
            var a = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            return a.append(c), a.getBlob(h);
          } catch {
            throw new Error("Bug : can't construct the Blob.");
          }
        }
      };
      var n = { stringifyByChunk: function(c, h, a) {
        var v = [], y = 0, g = c.length;
        if (g <= a)
          return String.fromCharCode.apply(null, c);
        for (; y < g; )
          h === "array" || h === "nodebuffer" ? v.push(String.fromCharCode.apply(null, c.slice(y, Math.min(y + a, g)))) : v.push(String.fromCharCode.apply(null, c.subarray(y, Math.min(y + a, g)))), y += a;
        return v.join("");
      }, stringifyByChar: function(c) {
        for (var h = "", a = 0; a < c.length; a++)
          h += String.fromCharCode(c[a]);
        return h;
      }, applyCanBeUsed: { uint8array: function() {
        try {
          return B.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
        } catch {
          return !1;
        }
      }(), nodebuffer: function() {
        try {
          return B.nodebuffer && String.fromCharCode.apply(null, d.allocBuffer(1)).length === 1;
        } catch {
          return !1;
        }
      }() } };
      function i(c) {
        var h = 65536, a = R.getTypeOf(c), v = !0;
        if (a === "uint8array" ? v = n.applyCanBeUsed.uint8array : a === "nodebuffer" && (v = n.applyCanBeUsed.nodebuffer), v)
          for (; 1 < h; )
            try {
              return n.stringifyByChunk(c, a, h);
            } catch {
              h = Math.floor(h / 2);
            }
        return n.stringifyByChar(c);
      }
      function f(c, h) {
        for (var a = 0; a < c.length; a++)
          h[a] = c[a];
        return h;
      }
      R.applyFromCharCode = i;
      var l = {};
      l.string = { string: o, array: function(c) {
        return r(c, new Array(c.length));
      }, arraybuffer: function(c) {
        return l.string.uint8array(c).buffer;
      }, uint8array: function(c) {
        return r(c, new Uint8Array(c.length));
      }, nodebuffer: function(c) {
        return r(c, d.allocBuffer(c.length));
      } }, l.array = { string: i, array: o, arraybuffer: function(c) {
        return new Uint8Array(c).buffer;
      }, uint8array: function(c) {
        return new Uint8Array(c);
      }, nodebuffer: function(c) {
        return d.newBufferFrom(c);
      } }, l.arraybuffer = { string: function(c) {
        return i(new Uint8Array(c));
      }, array: function(c) {
        return f(new Uint8Array(c), new Array(c.byteLength));
      }, arraybuffer: o, uint8array: function(c) {
        return new Uint8Array(c);
      }, nodebuffer: function(c) {
        return d.newBufferFrom(new Uint8Array(c));
      } }, l.uint8array = { string: i, array: function(c) {
        return f(c, new Array(c.length));
      }, arraybuffer: function(c) {
        return c.buffer;
      }, uint8array: o, nodebuffer: function(c) {
        return d.newBufferFrom(c);
      } }, l.nodebuffer = { string: i, array: function(c) {
        return f(c, new Array(c.length));
      }, arraybuffer: function(c) {
        return l.nodebuffer.uint8array(c).buffer;
      }, uint8array: function(c) {
        return f(c, new Uint8Array(c.length));
      }, nodebuffer: o }, R.transformTo = function(c, h) {
        if (h = h || "", !c)
          return h;
        R.checkSupport(c);
        var a = R.getTypeOf(h);
        return l[a][c](h);
      }, R.resolve = function(c) {
        for (var h = c.split("/"), a = [], v = 0; v < h.length; v++) {
          var y = h[v];
          y === "." || y === "" && v !== 0 && v !== h.length - 1 || (y === ".." ? a.pop() : a.push(y));
        }
        return a.join("/");
      }, R.getTypeOf = function(c) {
        return typeof c == "string" ? "string" : Object.prototype.toString.call(c) === "[object Array]" ? "array" : B.nodebuffer && d.isBuffer(c) ? "nodebuffer" : B.uint8array && c instanceof Uint8Array ? "uint8array" : B.arraybuffer && c instanceof ArrayBuffer ? "arraybuffer" : void 0;
      }, R.checkSupport = function(c) {
        if (!B[c.toLowerCase()])
          throw new Error(c + " is not supported by this platform");
      }, R.MAX_VALUE_16BITS = 65535, R.MAX_VALUE_32BITS = -1, R.pretty = function(c) {
        var h, a, v = "";
        for (a = 0; a < (c || "").length; a++)
          v += "\\x" + ((h = c.charCodeAt(a)) < 16 ? "0" : "") + h.toString(16).toUpperCase();
        return v;
      }, R.delay = function(c, h, a) {
        setImmediate(function() {
          c.apply(a || null, h || []);
        });
      }, R.inherits = function(c, h) {
        function a() {
        }
        a.prototype = h.prototype, c.prototype = new a();
      }, R.extend = function() {
        var c, h, a = {};
        for (c = 0; c < arguments.length; c++)
          for (h in arguments[c])
            Object.prototype.hasOwnProperty.call(arguments[c], h) && a[h] === void 0 && (a[h] = arguments[c][h]);
        return a;
      }, R.prepareContent = function(c, h, a, v, y) {
        return t.Promise.resolve(h).then(function(g) {
          return B.blob && (g instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(g)) !== -1) && typeof FileReader < "u" ? new t.Promise(function(e, m) {
            var w = new FileReader();
            w.onload = function(D) {
              e(D.target.result);
            }, w.onerror = function(D) {
              m(D.target.error);
            }, w.readAsArrayBuffer(g);
          }) : g;
        }).then(function(g) {
          var e = R.getTypeOf(g);
          return e ? (e === "arraybuffer" ? g = R.transformTo("uint8array", g) : e === "string" && (y ? g = u.decode(g) : a && v !== !0 && (g = function(m) {
            return r(m, B.uint8array ? new Uint8Array(m.length) : new Array(m.length));
          }(g))), g) : t.Promise.reject(new Error("Can't read the data of '" + c + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
        });
      };
    }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(b, A, R) {
      var B = b("./reader/readerFor"), u = b("./utils"), d = b("./signature"), t = b("./zipEntry"), o = b("./support");
      function r(n) {
        this.files = [], this.loadOptions = n;
      }
      r.prototype = { checkSignature: function(n) {
        if (!this.reader.readAndCheckSignature(n)) {
          this.reader.index -= 4;
          var i = this.reader.readString(4);
          throw new Error("Corrupted zip or bug: unexpected signature (" + u.pretty(i) + ", expected " + u.pretty(n) + ")");
        }
      }, isSignature: function(n, i) {
        var f = this.reader.index;
        this.reader.setIndex(n);
        var l = this.reader.readString(4) === i;
        return this.reader.setIndex(f), l;
      }, readBlockEndOfCentral: function() {
        this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
        var n = this.reader.readData(this.zipCommentLength), i = o.uint8array ? "uint8array" : "array", f = u.transformTo(i, n);
        this.zipComment = this.loadOptions.decodeFileName(f);
      }, readBlockZip64EndOfCentral: function() {
        this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
        for (var n, i, f, l = this.zip64EndOfCentralSize - 44; 0 < l; )
          n = this.reader.readInt(2), i = this.reader.readInt(4), f = this.reader.readData(i), this.zip64ExtensibleData[n] = { id: n, length: i, value: f };
      }, readBlockZip64EndOfCentralLocator: function() {
        if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
          throw new Error("Multi-volumes zip are not supported");
      }, readLocalFiles: function() {
        var n, i;
        for (n = 0; n < this.files.length; n++)
          i = this.files[n], this.reader.setIndex(i.localHeaderOffset), this.checkSignature(d.LOCAL_FILE_HEADER), i.readLocalPart(this.reader), i.handleUTF8(), i.processAttributes();
      }, readCentralDir: function() {
        var n;
        for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(d.CENTRAL_FILE_HEADER); )
          (n = new t({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(n);
        if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0)
          throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
      }, readEndOfCentral: function() {
        var n = this.reader.lastIndexOfSignature(d.CENTRAL_DIRECTORY_END);
        if (n < 0)
          throw this.isSignature(0, d.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
        this.reader.setIndex(n);
        var i = n;
        if (this.checkSignature(d.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === u.MAX_VALUE_16BITS || this.diskWithCentralDirStart === u.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === u.MAX_VALUE_16BITS || this.centralDirRecords === u.MAX_VALUE_16BITS || this.centralDirSize === u.MAX_VALUE_32BITS || this.centralDirOffset === u.MAX_VALUE_32BITS) {
          if (this.zip64 = !0, (n = this.reader.lastIndexOfSignature(d.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
          if (this.reader.setIndex(n), this.checkSignature(d.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, d.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(d.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
          this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(d.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
        }
        var f = this.centralDirOffset + this.centralDirSize;
        this.zip64 && (f += 20, f += 12 + this.zip64EndOfCentralSize);
        var l = i - f;
        if (0 < l)
          this.isSignature(i, d.CENTRAL_FILE_HEADER) || (this.reader.zero = l);
        else if (l < 0)
          throw new Error("Corrupted zip: missing " + Math.abs(l) + " bytes.");
      }, prepareReader: function(n) {
        this.reader = B(n);
      }, load: function(n) {
        this.prepareReader(n), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
      } }, A.exports = r;
    }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(b, A, R) {
      var B = b("./reader/readerFor"), u = b("./utils"), d = b("./compressedObject"), t = b("./crc32"), o = b("./utf8"), r = b("./compressions"), n = b("./support");
      function i(f, l) {
        this.options = f, this.loadOptions = l;
      }
      i.prototype = { isEncrypted: function() {
        return (1 & this.bitFlag) == 1;
      }, useUTF8: function() {
        return (2048 & this.bitFlag) == 2048;
      }, readLocalPart: function(f) {
        var l, c;
        if (f.skip(22), this.fileNameLength = f.readInt(2), c = f.readInt(2), this.fileName = f.readData(this.fileNameLength), f.skip(c), this.compressedSize === -1 || this.uncompressedSize === -1)
          throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
        if ((l = function(h) {
          for (var a in r)
            if (Object.prototype.hasOwnProperty.call(r, a) && r[a].magic === h)
              return r[a];
          return null;
        }(this.compressionMethod)) === null)
          throw new Error("Corrupted zip : compression " + u.pretty(this.compressionMethod) + " unknown (inner file : " + u.transformTo("string", this.fileName) + ")");
        this.decompressed = new d(this.compressedSize, this.uncompressedSize, this.crc32, l, f.readData(this.compressedSize));
      }, readCentralPart: function(f) {
        this.versionMadeBy = f.readInt(2), f.skip(2), this.bitFlag = f.readInt(2), this.compressionMethod = f.readString(2), this.date = f.readDate(), this.crc32 = f.readInt(4), this.compressedSize = f.readInt(4), this.uncompressedSize = f.readInt(4);
        var l = f.readInt(2);
        if (this.extraFieldsLength = f.readInt(2), this.fileCommentLength = f.readInt(2), this.diskNumberStart = f.readInt(2), this.internalFileAttributes = f.readInt(2), this.externalFileAttributes = f.readInt(4), this.localHeaderOffset = f.readInt(4), this.isEncrypted())
          throw new Error("Encrypted zip are not supported");
        f.skip(l), this.readExtraFields(f), this.parseZIP64ExtraField(f), this.fileComment = f.readData(this.fileCommentLength);
      }, processAttributes: function() {
        this.unixPermissions = null, this.dosPermissions = null;
        var f = this.versionMadeBy >> 8;
        this.dir = !!(16 & this.externalFileAttributes), f == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), f == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = !0);
      }, parseZIP64ExtraField: function() {
        if (this.extraFields[1]) {
          var f = B(this.extraFields[1].value);
          this.uncompressedSize === u.MAX_VALUE_32BITS && (this.uncompressedSize = f.readInt(8)), this.compressedSize === u.MAX_VALUE_32BITS && (this.compressedSize = f.readInt(8)), this.localHeaderOffset === u.MAX_VALUE_32BITS && (this.localHeaderOffset = f.readInt(8)), this.diskNumberStart === u.MAX_VALUE_32BITS && (this.diskNumberStart = f.readInt(4));
        }
      }, readExtraFields: function(f) {
        var l, c, h, a = f.index + this.extraFieldsLength;
        for (this.extraFields || (this.extraFields = {}); f.index + 4 < a; )
          l = f.readInt(2), c = f.readInt(2), h = f.readData(c), this.extraFields[l] = { id: l, length: c, value: h };
        f.setIndex(a);
      }, handleUTF8: function() {
        var f = n.uint8array ? "uint8array" : "array";
        if (this.useUTF8())
          this.fileNameStr = o.utf8decode(this.fileName), this.fileCommentStr = o.utf8decode(this.fileComment);
        else {
          var l = this.findExtraFieldUnicodePath();
          if (l !== null)
            this.fileNameStr = l;
          else {
            var c = u.transformTo(f, this.fileName);
            this.fileNameStr = this.loadOptions.decodeFileName(c);
          }
          var h = this.findExtraFieldUnicodeComment();
          if (h !== null)
            this.fileCommentStr = h;
          else {
            var a = u.transformTo(f, this.fileComment);
            this.fileCommentStr = this.loadOptions.decodeFileName(a);
          }
        }
      }, findExtraFieldUnicodePath: function() {
        var f = this.extraFields[28789];
        if (f) {
          var l = B(f.value);
          return l.readInt(1) !== 1 || t(this.fileName) !== l.readInt(4) ? null : o.utf8decode(l.readData(f.length - 5));
        }
        return null;
      }, findExtraFieldUnicodeComment: function() {
        var f = this.extraFields[25461];
        if (f) {
          var l = B(f.value);
          return l.readInt(1) !== 1 || t(this.fileComment) !== l.readInt(4) ? null : o.utf8decode(l.readData(f.length - 5));
        }
        return null;
      } }, A.exports = i;
    }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(b, A, R) {
      function B(l, c, h) {
        this.name = l, this.dir = h.dir, this.date = h.date, this.comment = h.comment, this.unixPermissions = h.unixPermissions, this.dosPermissions = h.dosPermissions, this._data = c, this._dataBinary = h.binary, this.options = { compression: h.compression, compressionOptions: h.compressionOptions };
      }
      var u = b("./stream/StreamHelper"), d = b("./stream/DataWorker"), t = b("./utf8"), o = b("./compressedObject"), r = b("./stream/GenericWorker");
      B.prototype = { internalStream: function(l) {
        var c = null, h = "string";
        try {
          if (!l)
            throw new Error("No output type specified.");
          var a = (h = l.toLowerCase()) === "string" || h === "text";
          h !== "binarystring" && h !== "text" || (h = "string"), c = this._decompressWorker();
          var v = !this._dataBinary;
          v && !a && (c = c.pipe(new t.Utf8EncodeWorker())), !v && a && (c = c.pipe(new t.Utf8DecodeWorker()));
        } catch (y) {
          (c = new r("error")).error(y);
        }
        return new u(c, h, "");
      }, async: function(l, c) {
        return this.internalStream(l).accumulate(c);
      }, nodeStream: function(l, c) {
        return this.internalStream(l || "nodebuffer").toNodejsStream(c);
      }, _compressWorker: function(l, c) {
        if (this._data instanceof o && this._data.compression.magic === l.magic)
          return this._data.getCompressedWorker();
        var h = this._decompressWorker();
        return this._dataBinary || (h = h.pipe(new t.Utf8EncodeWorker())), o.createWorkerFrom(h, l, c);
      }, _decompressWorker: function() {
        return this._data instanceof o ? this._data.getContentWorker() : this._data instanceof r ? this._data : new d(this._data);
      } };
      for (var n = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], i = function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, f = 0; f < n.length; f++)
        B.prototype[n[f]] = i;
      A.exports = B;
    }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(b, A, R) {
      (function(B) {
        var u, d, t = B.MutationObserver || B.WebKitMutationObserver;
        if (t) {
          var o = 0, r = new t(l), n = B.document.createTextNode("");
          r.observe(n, { characterData: !0 }), u = function() {
            n.data = o = ++o % 2;
          };
        } else if (B.setImmediate || B.MessageChannel === void 0)
          u = "document" in B && "onreadystatechange" in B.document.createElement("script") ? function() {
            var c = B.document.createElement("script");
            c.onreadystatechange = function() {
              l(), c.onreadystatechange = null, c.parentNode.removeChild(c), c = null;
            }, B.document.documentElement.appendChild(c);
          } : function() {
            setTimeout(l, 0);
          };
        else {
          var i = new B.MessageChannel();
          i.port1.onmessage = l, u = function() {
            i.port2.postMessage(0);
          };
        }
        var f = [];
        function l() {
          var c, h;
          d = !0;
          for (var a = f.length; a; ) {
            for (h = f, f = [], c = -1; ++c < a; )
              h[c]();
            a = f.length;
          }
          d = !1;
        }
        A.exports = function(c) {
          f.push(c) !== 1 || d || u();
        };
      }).call(this, typeof oi < "u" ? oi : typeof self < "u" ? self : typeof window < "u" ? window : {});
    }, {}], 37: [function(b, A, R) {
      var B = b("immediate");
      function u() {
      }
      var d = {}, t = ["REJECTED"], o = ["FULFILLED"], r = ["PENDING"];
      function n(a) {
        if (typeof a != "function")
          throw new TypeError("resolver must be a function");
        this.state = r, this.queue = [], this.outcome = void 0, a !== u && c(this, a);
      }
      function i(a, v, y) {
        this.promise = a, typeof v == "function" && (this.onFulfilled = v, this.callFulfilled = this.otherCallFulfilled), typeof y == "function" && (this.onRejected = y, this.callRejected = this.otherCallRejected);
      }
      function f(a, v, y) {
        B(function() {
          var g;
          try {
            g = v(y);
          } catch (e) {
            return d.reject(a, e);
          }
          g === a ? d.reject(a, new TypeError("Cannot resolve promise with itself")) : d.resolve(a, g);
        });
      }
      function l(a) {
        var v = a && a.then;
        if (a && (typeof a == "object" || typeof a == "function") && typeof v == "function")
          return function() {
            v.apply(a, arguments);
          };
      }
      function c(a, v) {
        var y = !1;
        function g(w) {
          y || (y = !0, d.reject(a, w));
        }
        function e(w) {
          y || (y = !0, d.resolve(a, w));
        }
        var m = h(function() {
          v(e, g);
        });
        m.status === "error" && g(m.value);
      }
      function h(a, v) {
        var y = {};
        try {
          y.value = a(v), y.status = "success";
        } catch (g) {
          y.status = "error", y.value = g;
        }
        return y;
      }
      (A.exports = n).prototype.finally = function(a) {
        if (typeof a != "function")
          return this;
        var v = this.constructor;
        return this.then(function(y) {
          return v.resolve(a()).then(function() {
            return y;
          });
        }, function(y) {
          return v.resolve(a()).then(function() {
            throw y;
          });
        });
      }, n.prototype.catch = function(a) {
        return this.then(null, a);
      }, n.prototype.then = function(a, v) {
        if (typeof a != "function" && this.state === o || typeof v != "function" && this.state === t)
          return this;
        var y = new this.constructor(u);
        return this.state !== r ? f(y, this.state === o ? a : v, this.outcome) : this.queue.push(new i(y, a, v)), y;
      }, i.prototype.callFulfilled = function(a) {
        d.resolve(this.promise, a);
      }, i.prototype.otherCallFulfilled = function(a) {
        f(this.promise, this.onFulfilled, a);
      }, i.prototype.callRejected = function(a) {
        d.reject(this.promise, a);
      }, i.prototype.otherCallRejected = function(a) {
        f(this.promise, this.onRejected, a);
      }, d.resolve = function(a, v) {
        var y = h(l, v);
        if (y.status === "error")
          return d.reject(a, y.value);
        var g = y.value;
        if (g)
          c(a, g);
        else {
          a.state = o, a.outcome = v;
          for (var e = -1, m = a.queue.length; ++e < m; )
            a.queue[e].callFulfilled(v);
        }
        return a;
      }, d.reject = function(a, v) {
        a.state = t, a.outcome = v;
        for (var y = -1, g = a.queue.length; ++y < g; )
          a.queue[y].callRejected(v);
        return a;
      }, n.resolve = function(a) {
        return a instanceof this ? a : d.resolve(new this(u), a);
      }, n.reject = function(a) {
        var v = new this(u);
        return d.reject(v, a);
      }, n.all = function(a) {
        var v = this;
        if (Object.prototype.toString.call(a) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var y = a.length, g = !1;
        if (!y)
          return this.resolve([]);
        for (var e = new Array(y), m = 0, w = -1, D = new this(u); ++w < y; )
          I(a[w], w);
        return D;
        function I(T, C) {
          v.resolve(T).then(function(E) {
            e[C] = E, ++m !== y || g || (g = !0, d.resolve(D, e));
          }, function(E) {
            g || (g = !0, d.reject(D, E));
          });
        }
      }, n.race = function(a) {
        var v = this;
        if (Object.prototype.toString.call(a) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var y = a.length, g = !1;
        if (!y)
          return this.resolve([]);
        for (var e = -1, m = new this(u); ++e < y; )
          w = a[e], v.resolve(w).then(function(D) {
            g || (g = !0, d.resolve(m, D));
          }, function(D) {
            g || (g = !0, d.reject(m, D));
          });
        var w;
        return m;
      };
    }, { immediate: 36 }], 38: [function(b, A, R) {
      var B = {};
      (0, b("./lib/utils/common").assign)(B, b("./lib/deflate"), b("./lib/inflate"), b("./lib/zlib/constants")), A.exports = B;
    }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(b, A, R) {
      var B = b("./zlib/deflate"), u = b("./utils/common"), d = b("./utils/strings"), t = b("./zlib/messages"), o = b("./zlib/zstream"), r = Object.prototype.toString, n = 0, i = -1, f = 0, l = 8;
      function c(a) {
        if (!(this instanceof c))
          return new c(a);
        this.options = u.assign({ level: i, method: l, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: f, to: "" }, a || {});
        var v = this.options;
        v.raw && 0 < v.windowBits ? v.windowBits = -v.windowBits : v.gzip && 0 < v.windowBits && v.windowBits < 16 && (v.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new o(), this.strm.avail_out = 0;
        var y = B.deflateInit2(this.strm, v.level, v.method, v.windowBits, v.memLevel, v.strategy);
        if (y !== n)
          throw new Error(t[y]);
        if (v.header && B.deflateSetHeader(this.strm, v.header), v.dictionary) {
          var g;
          if (g = typeof v.dictionary == "string" ? d.string2buf(v.dictionary) : r.call(v.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(v.dictionary) : v.dictionary, (y = B.deflateSetDictionary(this.strm, g)) !== n)
            throw new Error(t[y]);
          this._dict_set = !0;
        }
      }
      function h(a, v) {
        var y = new c(v);
        if (y.push(a, !0), y.err)
          throw y.msg || t[y.err];
        return y.result;
      }
      c.prototype.push = function(a, v) {
        var y, g, e = this.strm, m = this.options.chunkSize;
        if (this.ended)
          return !1;
        g = v === ~~v ? v : v === !0 ? 4 : 0, typeof a == "string" ? e.input = d.string2buf(a) : r.call(a) === "[object ArrayBuffer]" ? e.input = new Uint8Array(a) : e.input = a, e.next_in = 0, e.avail_in = e.input.length;
        do {
          if (e.avail_out === 0 && (e.output = new u.Buf8(m), e.next_out = 0, e.avail_out = m), (y = B.deflate(e, g)) !== 1 && y !== n)
            return this.onEnd(y), !(this.ended = !0);
          e.avail_out !== 0 && (e.avail_in !== 0 || g !== 4 && g !== 2) || (this.options.to === "string" ? this.onData(d.buf2binstring(u.shrinkBuf(e.output, e.next_out))) : this.onData(u.shrinkBuf(e.output, e.next_out)));
        } while ((0 < e.avail_in || e.avail_out === 0) && y !== 1);
        return g === 4 ? (y = B.deflateEnd(this.strm), this.onEnd(y), this.ended = !0, y === n) : g !== 2 || (this.onEnd(n), !(e.avail_out = 0));
      }, c.prototype.onData = function(a) {
        this.chunks.push(a);
      }, c.prototype.onEnd = function(a) {
        a === n && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = u.flattenChunks(this.chunks)), this.chunks = [], this.err = a, this.msg = this.strm.msg;
      }, R.Deflate = c, R.deflate = h, R.deflateRaw = function(a, v) {
        return (v = v || {}).raw = !0, h(a, v);
      }, R.gzip = function(a, v) {
        return (v = v || {}).gzip = !0, h(a, v);
      };
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(b, A, R) {
      var B = b("./zlib/inflate"), u = b("./utils/common"), d = b("./utils/strings"), t = b("./zlib/constants"), o = b("./zlib/messages"), r = b("./zlib/zstream"), n = b("./zlib/gzheader"), i = Object.prototype.toString;
      function f(c) {
        if (!(this instanceof f))
          return new f(c);
        this.options = u.assign({ chunkSize: 16384, windowBits: 0, to: "" }, c || {});
        var h = this.options;
        h.raw && 0 <= h.windowBits && h.windowBits < 16 && (h.windowBits = -h.windowBits, h.windowBits === 0 && (h.windowBits = -15)), !(0 <= h.windowBits && h.windowBits < 16) || c && c.windowBits || (h.windowBits += 32), 15 < h.windowBits && h.windowBits < 48 && !(15 & h.windowBits) && (h.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new r(), this.strm.avail_out = 0;
        var a = B.inflateInit2(this.strm, h.windowBits);
        if (a !== t.Z_OK)
          throw new Error(o[a]);
        this.header = new n(), B.inflateGetHeader(this.strm, this.header);
      }
      function l(c, h) {
        var a = new f(h);
        if (a.push(c, !0), a.err)
          throw a.msg || o[a.err];
        return a.result;
      }
      f.prototype.push = function(c, h) {
        var a, v, y, g, e, m, w = this.strm, D = this.options.chunkSize, I = this.options.dictionary, T = !1;
        if (this.ended)
          return !1;
        v = h === ~~h ? h : h === !0 ? t.Z_FINISH : t.Z_NO_FLUSH, typeof c == "string" ? w.input = d.binstring2buf(c) : i.call(c) === "[object ArrayBuffer]" ? w.input = new Uint8Array(c) : w.input = c, w.next_in = 0, w.avail_in = w.input.length;
        do {
          if (w.avail_out === 0 && (w.output = new u.Buf8(D), w.next_out = 0, w.avail_out = D), (a = B.inflate(w, t.Z_NO_FLUSH)) === t.Z_NEED_DICT && I && (m = typeof I == "string" ? d.string2buf(I) : i.call(I) === "[object ArrayBuffer]" ? new Uint8Array(I) : I, a = B.inflateSetDictionary(this.strm, m)), a === t.Z_BUF_ERROR && T === !0 && (a = t.Z_OK, T = !1), a !== t.Z_STREAM_END && a !== t.Z_OK)
            return this.onEnd(a), !(this.ended = !0);
          w.next_out && (w.avail_out !== 0 && a !== t.Z_STREAM_END && (w.avail_in !== 0 || v !== t.Z_FINISH && v !== t.Z_SYNC_FLUSH) || (this.options.to === "string" ? (y = d.utf8border(w.output, w.next_out), g = w.next_out - y, e = d.buf2string(w.output, y), w.next_out = g, w.avail_out = D - g, g && u.arraySet(w.output, w.output, y, g, 0), this.onData(e)) : this.onData(u.shrinkBuf(w.output, w.next_out)))), w.avail_in === 0 && w.avail_out === 0 && (T = !0);
        } while ((0 < w.avail_in || w.avail_out === 0) && a !== t.Z_STREAM_END);
        return a === t.Z_STREAM_END && (v = t.Z_FINISH), v === t.Z_FINISH ? (a = B.inflateEnd(this.strm), this.onEnd(a), this.ended = !0, a === t.Z_OK) : v !== t.Z_SYNC_FLUSH || (this.onEnd(t.Z_OK), !(w.avail_out = 0));
      }, f.prototype.onData = function(c) {
        this.chunks.push(c);
      }, f.prototype.onEnd = function(c) {
        c === t.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = u.flattenChunks(this.chunks)), this.chunks = [], this.err = c, this.msg = this.strm.msg;
      }, R.Inflate = f, R.inflate = l, R.inflateRaw = function(c, h) {
        return (h = h || {}).raw = !0, l(c, h);
      }, R.ungzip = l;
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(b, A, R) {
      var B = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
      R.assign = function(t) {
        for (var o = Array.prototype.slice.call(arguments, 1); o.length; ) {
          var r = o.shift();
          if (r) {
            if (typeof r != "object")
              throw new TypeError(r + "must be non-object");
            for (var n in r)
              r.hasOwnProperty(n) && (t[n] = r[n]);
          }
        }
        return t;
      }, R.shrinkBuf = function(t, o) {
        return t.length === o ? t : t.subarray ? t.subarray(0, o) : (t.length = o, t);
      };
      var u = { arraySet: function(t, o, r, n, i) {
        if (o.subarray && t.subarray)
          t.set(o.subarray(r, r + n), i);
        else
          for (var f = 0; f < n; f++)
            t[i + f] = o[r + f];
      }, flattenChunks: function(t) {
        var o, r, n, i, f, l;
        for (o = n = 0, r = t.length; o < r; o++)
          n += t[o].length;
        for (l = new Uint8Array(n), o = i = 0, r = t.length; o < r; o++)
          f = t[o], l.set(f, i), i += f.length;
        return l;
      } }, d = { arraySet: function(t, o, r, n, i) {
        for (var f = 0; f < n; f++)
          t[i + f] = o[r + f];
      }, flattenChunks: function(t) {
        return [].concat.apply([], t);
      } };
      R.setTyped = function(t) {
        t ? (R.Buf8 = Uint8Array, R.Buf16 = Uint16Array, R.Buf32 = Int32Array, R.assign(R, u)) : (R.Buf8 = Array, R.Buf16 = Array, R.Buf32 = Array, R.assign(R, d));
      }, R.setTyped(B);
    }, {}], 42: [function(b, A, R) {
      var B = b("./common"), u = !0, d = !0;
      try {
        String.fromCharCode.apply(null, [0]);
      } catch {
        u = !1;
      }
      try {
        String.fromCharCode.apply(null, new Uint8Array(1));
      } catch {
        d = !1;
      }
      for (var t = new B.Buf8(256), o = 0; o < 256; o++)
        t[o] = 252 <= o ? 6 : 248 <= o ? 5 : 240 <= o ? 4 : 224 <= o ? 3 : 192 <= o ? 2 : 1;
      function r(n, i) {
        if (i < 65537 && (n.subarray && d || !n.subarray && u))
          return String.fromCharCode.apply(null, B.shrinkBuf(n, i));
        for (var f = "", l = 0; l < i; l++)
          f += String.fromCharCode(n[l]);
        return f;
      }
      t[254] = t[254] = 1, R.string2buf = function(n) {
        var i, f, l, c, h, a = n.length, v = 0;
        for (c = 0; c < a; c++)
          (64512 & (f = n.charCodeAt(c))) == 55296 && c + 1 < a && (64512 & (l = n.charCodeAt(c + 1))) == 56320 && (f = 65536 + (f - 55296 << 10) + (l - 56320), c++), v += f < 128 ? 1 : f < 2048 ? 2 : f < 65536 ? 3 : 4;
        for (i = new B.Buf8(v), c = h = 0; h < v; c++)
          (64512 & (f = n.charCodeAt(c))) == 55296 && c + 1 < a && (64512 & (l = n.charCodeAt(c + 1))) == 56320 && (f = 65536 + (f - 55296 << 10) + (l - 56320), c++), f < 128 ? i[h++] = f : (f < 2048 ? i[h++] = 192 | f >>> 6 : (f < 65536 ? i[h++] = 224 | f >>> 12 : (i[h++] = 240 | f >>> 18, i[h++] = 128 | f >>> 12 & 63), i[h++] = 128 | f >>> 6 & 63), i[h++] = 128 | 63 & f);
        return i;
      }, R.buf2binstring = function(n) {
        return r(n, n.length);
      }, R.binstring2buf = function(n) {
        for (var i = new B.Buf8(n.length), f = 0, l = i.length; f < l; f++)
          i[f] = n.charCodeAt(f);
        return i;
      }, R.buf2string = function(n, i) {
        var f, l, c, h, a = i || n.length, v = new Array(2 * a);
        for (f = l = 0; f < a; )
          if ((c = n[f++]) < 128)
            v[l++] = c;
          else if (4 < (h = t[c]))
            v[l++] = 65533, f += h - 1;
          else {
            for (c &= h === 2 ? 31 : h === 3 ? 15 : 7; 1 < h && f < a; )
              c = c << 6 | 63 & n[f++], h--;
            1 < h ? v[l++] = 65533 : c < 65536 ? v[l++] = c : (c -= 65536, v[l++] = 55296 | c >> 10 & 1023, v[l++] = 56320 | 1023 & c);
          }
        return r(v, l);
      }, R.utf8border = function(n, i) {
        var f;
        for ((i = i || n.length) > n.length && (i = n.length), f = i - 1; 0 <= f && (192 & n[f]) == 128; )
          f--;
        return f < 0 || f === 0 ? i : f + t[n[f]] > i ? f : i;
      };
    }, { "./common": 41 }], 43: [function(b, A, R) {
      A.exports = function(B, u, d, t) {
        for (var o = 65535 & B | 0, r = B >>> 16 & 65535 | 0, n = 0; d !== 0; ) {
          for (d -= n = 2e3 < d ? 2e3 : d; r = r + (o = o + u[t++] | 0) | 0, --n; )
            ;
          o %= 65521, r %= 65521;
        }
        return o | r << 16 | 0;
      };
    }, {}], 44: [function(b, A, R) {
      A.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
    }, {}], 45: [function(b, A, R) {
      var B = function() {
        for (var u, d = [], t = 0; t < 256; t++) {
          u = t;
          for (var o = 0; o < 8; o++)
            u = 1 & u ? 3988292384 ^ u >>> 1 : u >>> 1;
          d[t] = u;
        }
        return d;
      }();
      A.exports = function(u, d, t, o) {
        var r = B, n = o + t;
        u ^= -1;
        for (var i = o; i < n; i++)
          u = u >>> 8 ^ r[255 & (u ^ d[i])];
        return -1 ^ u;
      };
    }, {}], 46: [function(b, A, R) {
      var B, u = b("../utils/common"), d = b("./trees"), t = b("./adler32"), o = b("./crc32"), r = b("./messages"), n = 0, i = 4, f = 0, l = -2, c = -1, h = 4, a = 2, v = 8, y = 9, g = 286, e = 30, m = 19, w = 2 * g + 1, D = 15, I = 3, T = 258, C = T + I + 1, E = 42, F = 113, x = 1, P = 2, L = 3, N = 4;
      function M(G, Tt) {
        return G.msg = r[Tt], Tt;
      }
      function K(G) {
        return (G << 1) - (4 < G ? 9 : 0);
      }
      function ut(G) {
        for (var Tt = G.length; 0 <= --Tt; )
          G[Tt] = 0;
      }
      function J(G) {
        var Tt = G.state, z = Tt.pending;
        z > G.avail_out && (z = G.avail_out), z !== 0 && (u.arraySet(G.output, Tt.pending_buf, Tt.pending_out, z, G.next_out), G.next_out += z, Tt.pending_out += z, G.total_out += z, G.avail_out -= z, Tt.pending -= z, Tt.pending === 0 && (Tt.pending_out = 0));
      }
      function rt(G, Tt) {
        d._tr_flush_block(G, 0 <= G.block_start ? G.block_start : -1, G.strstart - G.block_start, Tt), G.block_start = G.strstart, J(G.strm);
      }
      function yt(G, Tt) {
        G.pending_buf[G.pending++] = Tt;
      }
      function xt(G, Tt) {
        G.pending_buf[G.pending++] = Tt >>> 8 & 255, G.pending_buf[G.pending++] = 255 & Tt;
      }
      function Et(G, Tt) {
        var z, S, k = G.max_chain_length, V = G.strstart, it = G.prev_length, tt = G.nice_match, _ = G.strstart > G.w_size - C ? G.strstart - (G.w_size - C) : 0, At = G.window, Lt = G.w_mask, Yt = G.prev, Gt = G.strstart + T, Dt = At[V + it - 1], ae = At[V + it];
        G.prev_length >= G.good_match && (k >>= 2), tt > G.lookahead && (tt = G.lookahead);
        do
          if (At[(z = Tt) + it] === ae && At[z + it - 1] === Dt && At[z] === At[V] && At[++z] === At[V + 1]) {
            V += 2, z++;
            do
              ;
            while (At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && V < Gt);
            if (S = T - (Gt - V), V = Gt - T, it < S) {
              if (G.match_start = Tt, tt <= (it = S))
                break;
              Dt = At[V + it - 1], ae = At[V + it];
            }
          }
        while ((Tt = Yt[Tt & Lt]) > _ && --k != 0);
        return it <= G.lookahead ? it : G.lookahead;
      }
      function Ft(G) {
        var Tt, z, S, k, V, it, tt, _, At, Lt, Yt = G.w_size;
        do {
          if (k = G.window_size - G.lookahead - G.strstart, G.strstart >= Yt + (Yt - C)) {
            for (u.arraySet(G.window, G.window, Yt, Yt, 0), G.match_start -= Yt, G.strstart -= Yt, G.block_start -= Yt, Tt = z = G.hash_size; S = G.head[--Tt], G.head[Tt] = Yt <= S ? S - Yt : 0, --z; )
              ;
            for (Tt = z = Yt; S = G.prev[--Tt], G.prev[Tt] = Yt <= S ? S - Yt : 0, --z; )
              ;
            k += Yt;
          }
          if (G.strm.avail_in === 0)
            break;
          if (it = G.strm, tt = G.window, _ = G.strstart + G.lookahead, At = k, Lt = void 0, Lt = it.avail_in, At < Lt && (Lt = At), z = Lt === 0 ? 0 : (it.avail_in -= Lt, u.arraySet(tt, it.input, it.next_in, Lt, _), it.state.wrap === 1 ? it.adler = t(it.adler, tt, Lt, _) : it.state.wrap === 2 && (it.adler = o(it.adler, tt, Lt, _)), it.next_in += Lt, it.total_in += Lt, Lt), G.lookahead += z, G.lookahead + G.insert >= I)
            for (V = G.strstart - G.insert, G.ins_h = G.window[V], G.ins_h = (G.ins_h << G.hash_shift ^ G.window[V + 1]) & G.hash_mask; G.insert && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[V + I - 1]) & G.hash_mask, G.prev[V & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = V, V++, G.insert--, !(G.lookahead + G.insert < I)); )
              ;
        } while (G.lookahead < C && G.strm.avail_in !== 0);
      }
      function Rt(G, Tt) {
        for (var z, S; ; ) {
          if (G.lookahead < C) {
            if (Ft(G), G.lookahead < C && Tt === n)
              return x;
            if (G.lookahead === 0)
              break;
          }
          if (z = 0, G.lookahead >= I && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + I - 1]) & G.hash_mask, z = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), z !== 0 && G.strstart - z <= G.w_size - C && (G.match_length = Et(G, z)), G.match_length >= I)
            if (S = d._tr_tally(G, G.strstart - G.match_start, G.match_length - I), G.lookahead -= G.match_length, G.match_length <= G.max_lazy_match && G.lookahead >= I) {
              for (G.match_length--; G.strstart++, G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + I - 1]) & G.hash_mask, z = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart, --G.match_length != 0; )
                ;
              G.strstart++;
            } else
              G.strstart += G.match_length, G.match_length = 0, G.ins_h = G.window[G.strstart], G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + 1]) & G.hash_mask;
          else
            S = d._tr_tally(G, 0, G.window[G.strstart]), G.lookahead--, G.strstart++;
          if (S && (rt(G, !1), G.strm.avail_out === 0))
            return x;
        }
        return G.insert = G.strstart < I - 1 ? G.strstart : I - 1, Tt === i ? (rt(G, !0), G.strm.avail_out === 0 ? L : N) : G.last_lit && (rt(G, !1), G.strm.avail_out === 0) ? x : P;
      }
      function Ut(G, Tt) {
        for (var z, S, k; ; ) {
          if (G.lookahead < C) {
            if (Ft(G), G.lookahead < C && Tt === n)
              return x;
            if (G.lookahead === 0)
              break;
          }
          if (z = 0, G.lookahead >= I && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + I - 1]) & G.hash_mask, z = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), G.prev_length = G.match_length, G.prev_match = G.match_start, G.match_length = I - 1, z !== 0 && G.prev_length < G.max_lazy_match && G.strstart - z <= G.w_size - C && (G.match_length = Et(G, z), G.match_length <= 5 && (G.strategy === 1 || G.match_length === I && 4096 < G.strstart - G.match_start) && (G.match_length = I - 1)), G.prev_length >= I && G.match_length <= G.prev_length) {
            for (k = G.strstart + G.lookahead - I, S = d._tr_tally(G, G.strstart - 1 - G.prev_match, G.prev_length - I), G.lookahead -= G.prev_length - 1, G.prev_length -= 2; ++G.strstart <= k && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + I - 1]) & G.hash_mask, z = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), --G.prev_length != 0; )
              ;
            if (G.match_available = 0, G.match_length = I - 1, G.strstart++, S && (rt(G, !1), G.strm.avail_out === 0))
              return x;
          } else if (G.match_available) {
            if ((S = d._tr_tally(G, 0, G.window[G.strstart - 1])) && rt(G, !1), G.strstart++, G.lookahead--, G.strm.avail_out === 0)
              return x;
          } else
            G.match_available = 1, G.strstart++, G.lookahead--;
        }
        return G.match_available && (S = d._tr_tally(G, 0, G.window[G.strstart - 1]), G.match_available = 0), G.insert = G.strstart < I - 1 ? G.strstart : I - 1, Tt === i ? (rt(G, !0), G.strm.avail_out === 0 ? L : N) : G.last_lit && (rt(G, !1), G.strm.avail_out === 0) ? x : P;
      }
      function Q(G, Tt, z, S, k) {
        this.good_length = G, this.max_lazy = Tt, this.nice_length = z, this.max_chain = S, this.func = k;
      }
      function pt() {
        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = v, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new u.Buf16(2 * w), this.dyn_dtree = new u.Buf16(2 * (2 * e + 1)), this.bl_tree = new u.Buf16(2 * (2 * m + 1)), ut(this.dyn_ltree), ut(this.dyn_dtree), ut(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new u.Buf16(D + 1), this.heap = new u.Buf16(2 * g + 1), ut(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new u.Buf16(2 * g + 1), ut(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
      }
      function ct(G) {
        var Tt;
        return G && G.state ? (G.total_in = G.total_out = 0, G.data_type = a, (Tt = G.state).pending = 0, Tt.pending_out = 0, Tt.wrap < 0 && (Tt.wrap = -Tt.wrap), Tt.status = Tt.wrap ? E : F, G.adler = Tt.wrap === 2 ? 0 : 1, Tt.last_flush = n, d._tr_init(Tt), f) : M(G, l);
      }
      function ot(G) {
        var Tt = ct(G);
        return Tt === f && function(z) {
          z.window_size = 2 * z.w_size, ut(z.head), z.max_lazy_match = B[z.level].max_lazy, z.good_match = B[z.level].good_length, z.nice_match = B[z.level].nice_length, z.max_chain_length = B[z.level].max_chain, z.strstart = 0, z.block_start = 0, z.lookahead = 0, z.insert = 0, z.match_length = z.prev_length = I - 1, z.match_available = 0, z.ins_h = 0;
        }(G.state), Tt;
      }
      function mt(G, Tt, z, S, k, V) {
        if (!G)
          return l;
        var it = 1;
        if (Tt === c && (Tt = 6), S < 0 ? (it = 0, S = -S) : 15 < S && (it = 2, S -= 16), k < 1 || y < k || z !== v || S < 8 || 15 < S || Tt < 0 || 9 < Tt || V < 0 || h < V)
          return M(G, l);
        S === 8 && (S = 9);
        var tt = new pt();
        return (G.state = tt).strm = G, tt.wrap = it, tt.gzhead = null, tt.w_bits = S, tt.w_size = 1 << tt.w_bits, tt.w_mask = tt.w_size - 1, tt.hash_bits = k + 7, tt.hash_size = 1 << tt.hash_bits, tt.hash_mask = tt.hash_size - 1, tt.hash_shift = ~~((tt.hash_bits + I - 1) / I), tt.window = new u.Buf8(2 * tt.w_size), tt.head = new u.Buf16(tt.hash_size), tt.prev = new u.Buf16(tt.w_size), tt.lit_bufsize = 1 << k + 6, tt.pending_buf_size = 4 * tt.lit_bufsize, tt.pending_buf = new u.Buf8(tt.pending_buf_size), tt.d_buf = 1 * tt.lit_bufsize, tt.l_buf = 3 * tt.lit_bufsize, tt.level = Tt, tt.strategy = V, tt.method = z, ot(G);
      }
      B = [new Q(0, 0, 0, 0, function(G, Tt) {
        var z = 65535;
        for (z > G.pending_buf_size - 5 && (z = G.pending_buf_size - 5); ; ) {
          if (G.lookahead <= 1) {
            if (Ft(G), G.lookahead === 0 && Tt === n)
              return x;
            if (G.lookahead === 0)
              break;
          }
          G.strstart += G.lookahead, G.lookahead = 0;
          var S = G.block_start + z;
          if ((G.strstart === 0 || G.strstart >= S) && (G.lookahead = G.strstart - S, G.strstart = S, rt(G, !1), G.strm.avail_out === 0) || G.strstart - G.block_start >= G.w_size - C && (rt(G, !1), G.strm.avail_out === 0))
            return x;
        }
        return G.insert = 0, Tt === i ? (rt(G, !0), G.strm.avail_out === 0 ? L : N) : (G.strstart > G.block_start && (rt(G, !1), G.strm.avail_out), x);
      }), new Q(4, 4, 8, 4, Rt), new Q(4, 5, 16, 8, Rt), new Q(4, 6, 32, 32, Rt), new Q(4, 4, 16, 16, Ut), new Q(8, 16, 32, 32, Ut), new Q(8, 16, 128, 128, Ut), new Q(8, 32, 128, 256, Ut), new Q(32, 128, 258, 1024, Ut), new Q(32, 258, 258, 4096, Ut)], R.deflateInit = function(G, Tt) {
        return mt(G, Tt, v, 15, 8, 0);
      }, R.deflateInit2 = mt, R.deflateReset = ot, R.deflateResetKeep = ct, R.deflateSetHeader = function(G, Tt) {
        return G && G.state ? G.state.wrap !== 2 ? l : (G.state.gzhead = Tt, f) : l;
      }, R.deflate = function(G, Tt) {
        var z, S, k, V;
        if (!G || !G.state || 5 < Tt || Tt < 0)
          return G ? M(G, l) : l;
        if (S = G.state, !G.output || !G.input && G.avail_in !== 0 || S.status === 666 && Tt !== i)
          return M(G, G.avail_out === 0 ? -5 : l);
        if (S.strm = G, z = S.last_flush, S.last_flush = Tt, S.status === E)
          if (S.wrap === 2)
            G.adler = 0, yt(S, 31), yt(S, 139), yt(S, 8), S.gzhead ? (yt(S, (S.gzhead.text ? 1 : 0) + (S.gzhead.hcrc ? 2 : 0) + (S.gzhead.extra ? 4 : 0) + (S.gzhead.name ? 8 : 0) + (S.gzhead.comment ? 16 : 0)), yt(S, 255 & S.gzhead.time), yt(S, S.gzhead.time >> 8 & 255), yt(S, S.gzhead.time >> 16 & 255), yt(S, S.gzhead.time >> 24 & 255), yt(S, S.level === 9 ? 2 : 2 <= S.strategy || S.level < 2 ? 4 : 0), yt(S, 255 & S.gzhead.os), S.gzhead.extra && S.gzhead.extra.length && (yt(S, 255 & S.gzhead.extra.length), yt(S, S.gzhead.extra.length >> 8 & 255)), S.gzhead.hcrc && (G.adler = o(G.adler, S.pending_buf, S.pending, 0)), S.gzindex = 0, S.status = 69) : (yt(S, 0), yt(S, 0), yt(S, 0), yt(S, 0), yt(S, 0), yt(S, S.level === 9 ? 2 : 2 <= S.strategy || S.level < 2 ? 4 : 0), yt(S, 3), S.status = F);
          else {
            var it = v + (S.w_bits - 8 << 4) << 8;
            it |= (2 <= S.strategy || S.level < 2 ? 0 : S.level < 6 ? 1 : S.level === 6 ? 2 : 3) << 6, S.strstart !== 0 && (it |= 32), it += 31 - it % 31, S.status = F, xt(S, it), S.strstart !== 0 && (xt(S, G.adler >>> 16), xt(S, 65535 & G.adler)), G.adler = 1;
          }
        if (S.status === 69)
          if (S.gzhead.extra) {
            for (k = S.pending; S.gzindex < (65535 & S.gzhead.extra.length) && (S.pending !== S.pending_buf_size || (S.gzhead.hcrc && S.pending > k && (G.adler = o(G.adler, S.pending_buf, S.pending - k, k)), J(G), k = S.pending, S.pending !== S.pending_buf_size)); )
              yt(S, 255 & S.gzhead.extra[S.gzindex]), S.gzindex++;
            S.gzhead.hcrc && S.pending > k && (G.adler = o(G.adler, S.pending_buf, S.pending - k, k)), S.gzindex === S.gzhead.extra.length && (S.gzindex = 0, S.status = 73);
          } else
            S.status = 73;
        if (S.status === 73)
          if (S.gzhead.name) {
            k = S.pending;
            do {
              if (S.pending === S.pending_buf_size && (S.gzhead.hcrc && S.pending > k && (G.adler = o(G.adler, S.pending_buf, S.pending - k, k)), J(G), k = S.pending, S.pending === S.pending_buf_size)) {
                V = 1;
                break;
              }
              V = S.gzindex < S.gzhead.name.length ? 255 & S.gzhead.name.charCodeAt(S.gzindex++) : 0, yt(S, V);
            } while (V !== 0);
            S.gzhead.hcrc && S.pending > k && (G.adler = o(G.adler, S.pending_buf, S.pending - k, k)), V === 0 && (S.gzindex = 0, S.status = 91);
          } else
            S.status = 91;
        if (S.status === 91)
          if (S.gzhead.comment) {
            k = S.pending;
            do {
              if (S.pending === S.pending_buf_size && (S.gzhead.hcrc && S.pending > k && (G.adler = o(G.adler, S.pending_buf, S.pending - k, k)), J(G), k = S.pending, S.pending === S.pending_buf_size)) {
                V = 1;
                break;
              }
              V = S.gzindex < S.gzhead.comment.length ? 255 & S.gzhead.comment.charCodeAt(S.gzindex++) : 0, yt(S, V);
            } while (V !== 0);
            S.gzhead.hcrc && S.pending > k && (G.adler = o(G.adler, S.pending_buf, S.pending - k, k)), V === 0 && (S.status = 103);
          } else
            S.status = 103;
        if (S.status === 103 && (S.gzhead.hcrc ? (S.pending + 2 > S.pending_buf_size && J(G), S.pending + 2 <= S.pending_buf_size && (yt(S, 255 & G.adler), yt(S, G.adler >> 8 & 255), G.adler = 0, S.status = F)) : S.status = F), S.pending !== 0) {
          if (J(G), G.avail_out === 0)
            return S.last_flush = -1, f;
        } else if (G.avail_in === 0 && K(Tt) <= K(z) && Tt !== i)
          return M(G, -5);
        if (S.status === 666 && G.avail_in !== 0)
          return M(G, -5);
        if (G.avail_in !== 0 || S.lookahead !== 0 || Tt !== n && S.status !== 666) {
          var tt = S.strategy === 2 ? function(_, At) {
            for (var Lt; ; ) {
              if (_.lookahead === 0 && (Ft(_), _.lookahead === 0)) {
                if (At === n)
                  return x;
                break;
              }
              if (_.match_length = 0, Lt = d._tr_tally(_, 0, _.window[_.strstart]), _.lookahead--, _.strstart++, Lt && (rt(_, !1), _.strm.avail_out === 0))
                return x;
            }
            return _.insert = 0, At === i ? (rt(_, !0), _.strm.avail_out === 0 ? L : N) : _.last_lit && (rt(_, !1), _.strm.avail_out === 0) ? x : P;
          }(S, Tt) : S.strategy === 3 ? function(_, At) {
            for (var Lt, Yt, Gt, Dt, ae = _.window; ; ) {
              if (_.lookahead <= T) {
                if (Ft(_), _.lookahead <= T && At === n)
                  return x;
                if (_.lookahead === 0)
                  break;
              }
              if (_.match_length = 0, _.lookahead >= I && 0 < _.strstart && (Yt = ae[Gt = _.strstart - 1]) === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt]) {
                Dt = _.strstart + T;
                do
                  ;
                while (Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Gt < Dt);
                _.match_length = T - (Dt - Gt), _.match_length > _.lookahead && (_.match_length = _.lookahead);
              }
              if (_.match_length >= I ? (Lt = d._tr_tally(_, 1, _.match_length - I), _.lookahead -= _.match_length, _.strstart += _.match_length, _.match_length = 0) : (Lt = d._tr_tally(_, 0, _.window[_.strstart]), _.lookahead--, _.strstart++), Lt && (rt(_, !1), _.strm.avail_out === 0))
                return x;
            }
            return _.insert = 0, At === i ? (rt(_, !0), _.strm.avail_out === 0 ? L : N) : _.last_lit && (rt(_, !1), _.strm.avail_out === 0) ? x : P;
          }(S, Tt) : B[S.level].func(S, Tt);
          if (tt !== L && tt !== N || (S.status = 666), tt === x || tt === L)
            return G.avail_out === 0 && (S.last_flush = -1), f;
          if (tt === P && (Tt === 1 ? d._tr_align(S) : Tt !== 5 && (d._tr_stored_block(S, 0, 0, !1), Tt === 3 && (ut(S.head), S.lookahead === 0 && (S.strstart = 0, S.block_start = 0, S.insert = 0))), J(G), G.avail_out === 0))
            return S.last_flush = -1, f;
        }
        return Tt !== i ? f : S.wrap <= 0 ? 1 : (S.wrap === 2 ? (yt(S, 255 & G.adler), yt(S, G.adler >> 8 & 255), yt(S, G.adler >> 16 & 255), yt(S, G.adler >> 24 & 255), yt(S, 255 & G.total_in), yt(S, G.total_in >> 8 & 255), yt(S, G.total_in >> 16 & 255), yt(S, G.total_in >> 24 & 255)) : (xt(S, G.adler >>> 16), xt(S, 65535 & G.adler)), J(G), 0 < S.wrap && (S.wrap = -S.wrap), S.pending !== 0 ? f : 1);
      }, R.deflateEnd = function(G) {
        var Tt;
        return G && G.state ? (Tt = G.state.status) !== E && Tt !== 69 && Tt !== 73 && Tt !== 91 && Tt !== 103 && Tt !== F && Tt !== 666 ? M(G, l) : (G.state = null, Tt === F ? M(G, -3) : f) : l;
      }, R.deflateSetDictionary = function(G, Tt) {
        var z, S, k, V, it, tt, _, At, Lt = Tt.length;
        if (!G || !G.state || (V = (z = G.state).wrap) === 2 || V === 1 && z.status !== E || z.lookahead)
          return l;
        for (V === 1 && (G.adler = t(G.adler, Tt, Lt, 0)), z.wrap = 0, Lt >= z.w_size && (V === 0 && (ut(z.head), z.strstart = 0, z.block_start = 0, z.insert = 0), At = new u.Buf8(z.w_size), u.arraySet(At, Tt, Lt - z.w_size, z.w_size, 0), Tt = At, Lt = z.w_size), it = G.avail_in, tt = G.next_in, _ = G.input, G.avail_in = Lt, G.next_in = 0, G.input = Tt, Ft(z); z.lookahead >= I; ) {
          for (S = z.strstart, k = z.lookahead - (I - 1); z.ins_h = (z.ins_h << z.hash_shift ^ z.window[S + I - 1]) & z.hash_mask, z.prev[S & z.w_mask] = z.head[z.ins_h], z.head[z.ins_h] = S, S++, --k; )
            ;
          z.strstart = S, z.lookahead = I - 1, Ft(z);
        }
        return z.strstart += z.lookahead, z.block_start = z.strstart, z.insert = z.lookahead, z.lookahead = 0, z.match_length = z.prev_length = I - 1, z.match_available = 0, G.next_in = tt, G.input = _, G.avail_in = it, z.wrap = V, f;
      }, R.deflateInfo = "pako deflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(b, A, R) {
      A.exports = function() {
        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
      };
    }, {}], 48: [function(b, A, R) {
      A.exports = function(B, u) {
        var d, t, o, r, n, i, f, l, c, h, a, v, y, g, e, m, w, D, I, T, C, E, F, x, P;
        d = B.state, t = B.next_in, x = B.input, o = t + (B.avail_in - 5), r = B.next_out, P = B.output, n = r - (u - B.avail_out), i = r + (B.avail_out - 257), f = d.dmax, l = d.wsize, c = d.whave, h = d.wnext, a = d.window, v = d.hold, y = d.bits, g = d.lencode, e = d.distcode, m = (1 << d.lenbits) - 1, w = (1 << d.distbits) - 1;
        t:
          do {
            y < 15 && (v += x[t++] << y, y += 8, v += x[t++] << y, y += 8), D = g[v & m];
            e:
              for (; ; ) {
                if (v >>>= I = D >>> 24, y -= I, (I = D >>> 16 & 255) === 0)
                  P[r++] = 65535 & D;
                else {
                  if (!(16 & I)) {
                    if (!(64 & I)) {
                      D = g[(65535 & D) + (v & (1 << I) - 1)];
                      continue e;
                    }
                    if (32 & I) {
                      d.mode = 12;
                      break t;
                    }
                    B.msg = "invalid literal/length code", d.mode = 30;
                    break t;
                  }
                  T = 65535 & D, (I &= 15) && (y < I && (v += x[t++] << y, y += 8), T += v & (1 << I) - 1, v >>>= I, y -= I), y < 15 && (v += x[t++] << y, y += 8, v += x[t++] << y, y += 8), D = e[v & w];
                  r:
                    for (; ; ) {
                      if (v >>>= I = D >>> 24, y -= I, !(16 & (I = D >>> 16 & 255))) {
                        if (!(64 & I)) {
                          D = e[(65535 & D) + (v & (1 << I) - 1)];
                          continue r;
                        }
                        B.msg = "invalid distance code", d.mode = 30;
                        break t;
                      }
                      if (C = 65535 & D, y < (I &= 15) && (v += x[t++] << y, (y += 8) < I && (v += x[t++] << y, y += 8)), f < (C += v & (1 << I) - 1)) {
                        B.msg = "invalid distance too far back", d.mode = 30;
                        break t;
                      }
                      if (v >>>= I, y -= I, (I = r - n) < C) {
                        if (c < (I = C - I) && d.sane) {
                          B.msg = "invalid distance too far back", d.mode = 30;
                          break t;
                        }
                        if (F = a, (E = 0) === h) {
                          if (E += l - I, I < T) {
                            for (T -= I; P[r++] = a[E++], --I; )
                              ;
                            E = r - C, F = P;
                          }
                        } else if (h < I) {
                          if (E += l + h - I, (I -= h) < T) {
                            for (T -= I; P[r++] = a[E++], --I; )
                              ;
                            if (E = 0, h < T) {
                              for (T -= I = h; P[r++] = a[E++], --I; )
                                ;
                              E = r - C, F = P;
                            }
                          }
                        } else if (E += h - I, I < T) {
                          for (T -= I; P[r++] = a[E++], --I; )
                            ;
                          E = r - C, F = P;
                        }
                        for (; 2 < T; )
                          P[r++] = F[E++], P[r++] = F[E++], P[r++] = F[E++], T -= 3;
                        T && (P[r++] = F[E++], 1 < T && (P[r++] = F[E++]));
                      } else {
                        for (E = r - C; P[r++] = P[E++], P[r++] = P[E++], P[r++] = P[E++], 2 < (T -= 3); )
                          ;
                        T && (P[r++] = P[E++], 1 < T && (P[r++] = P[E++]));
                      }
                      break;
                    }
                }
                break;
              }
          } while (t < o && r < i);
        t -= T = y >> 3, v &= (1 << (y -= T << 3)) - 1, B.next_in = t, B.next_out = r, B.avail_in = t < o ? o - t + 5 : 5 - (t - o), B.avail_out = r < i ? i - r + 257 : 257 - (r - i), d.hold = v, d.bits = y;
      };
    }, {}], 49: [function(b, A, R) {
      var B = b("../utils/common"), u = b("./adler32"), d = b("./crc32"), t = b("./inffast"), o = b("./inftrees"), r = 1, n = 2, i = 0, f = -2, l = 1, c = 852, h = 592;
      function a(E) {
        return (E >>> 24 & 255) + (E >>> 8 & 65280) + ((65280 & E) << 8) + ((255 & E) << 24);
      }
      function v() {
        this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new B.Buf16(320), this.work = new B.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
      }
      function y(E) {
        var F;
        return E && E.state ? (F = E.state, E.total_in = E.total_out = F.total = 0, E.msg = "", F.wrap && (E.adler = 1 & F.wrap), F.mode = l, F.last = 0, F.havedict = 0, F.dmax = 32768, F.head = null, F.hold = 0, F.bits = 0, F.lencode = F.lendyn = new B.Buf32(c), F.distcode = F.distdyn = new B.Buf32(h), F.sane = 1, F.back = -1, i) : f;
      }
      function g(E) {
        var F;
        return E && E.state ? ((F = E.state).wsize = 0, F.whave = 0, F.wnext = 0, y(E)) : f;
      }
      function e(E, F) {
        var x, P;
        return E && E.state ? (P = E.state, F < 0 ? (x = 0, F = -F) : (x = 1 + (F >> 4), F < 48 && (F &= 15)), F && (F < 8 || 15 < F) ? f : (P.window !== null && P.wbits !== F && (P.window = null), P.wrap = x, P.wbits = F, g(E))) : f;
      }
      function m(E, F) {
        var x, P;
        return E ? (P = new v(), (E.state = P).window = null, (x = e(E, F)) !== i && (E.state = null), x) : f;
      }
      var w, D, I = !0;
      function T(E) {
        if (I) {
          var F;
          for (w = new B.Buf32(512), D = new B.Buf32(32), F = 0; F < 144; )
            E.lens[F++] = 8;
          for (; F < 256; )
            E.lens[F++] = 9;
          for (; F < 280; )
            E.lens[F++] = 7;
          for (; F < 288; )
            E.lens[F++] = 8;
          for (o(r, E.lens, 0, 288, w, 0, E.work, { bits: 9 }), F = 0; F < 32; )
            E.lens[F++] = 5;
          o(n, E.lens, 0, 32, D, 0, E.work, { bits: 5 }), I = !1;
        }
        E.lencode = w, E.lenbits = 9, E.distcode = D, E.distbits = 5;
      }
      function C(E, F, x, P) {
        var L, N = E.state;
        return N.window === null && (N.wsize = 1 << N.wbits, N.wnext = 0, N.whave = 0, N.window = new B.Buf8(N.wsize)), P >= N.wsize ? (B.arraySet(N.window, F, x - N.wsize, N.wsize, 0), N.wnext = 0, N.whave = N.wsize) : (P < (L = N.wsize - N.wnext) && (L = P), B.arraySet(N.window, F, x - P, L, N.wnext), (P -= L) ? (B.arraySet(N.window, F, x - P, P, 0), N.wnext = P, N.whave = N.wsize) : (N.wnext += L, N.wnext === N.wsize && (N.wnext = 0), N.whave < N.wsize && (N.whave += L))), 0;
      }
      R.inflateReset = g, R.inflateReset2 = e, R.inflateResetKeep = y, R.inflateInit = function(E) {
        return m(E, 15);
      }, R.inflateInit2 = m, R.inflate = function(E, F) {
        var x, P, L, N, M, K, ut, J, rt, yt, xt, Et, Ft, Rt, Ut, Q, pt, ct, ot, mt, G, Tt, z, S, k = 0, V = new B.Buf8(4), it = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        if (!E || !E.state || !E.output || !E.input && E.avail_in !== 0)
          return f;
        (x = E.state).mode === 12 && (x.mode = 13), M = E.next_out, L = E.output, ut = E.avail_out, N = E.next_in, P = E.input, K = E.avail_in, J = x.hold, rt = x.bits, yt = K, xt = ut, Tt = i;
        t:
          for (; ; )
            switch (x.mode) {
              case l:
                if (x.wrap === 0) {
                  x.mode = 13;
                  break;
                }
                for (; rt < 16; ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                if (2 & x.wrap && J === 35615) {
                  V[x.check = 0] = 255 & J, V[1] = J >>> 8 & 255, x.check = d(x.check, V, 2, 0), rt = J = 0, x.mode = 2;
                  break;
                }
                if (x.flags = 0, x.head && (x.head.done = !1), !(1 & x.wrap) || (((255 & J) << 8) + (J >> 8)) % 31) {
                  E.msg = "incorrect header check", x.mode = 30;
                  break;
                }
                if ((15 & J) != 8) {
                  E.msg = "unknown compression method", x.mode = 30;
                  break;
                }
                if (rt -= 4, G = 8 + (15 & (J >>>= 4)), x.wbits === 0)
                  x.wbits = G;
                else if (G > x.wbits) {
                  E.msg = "invalid window size", x.mode = 30;
                  break;
                }
                x.dmax = 1 << G, E.adler = x.check = 1, x.mode = 512 & J ? 10 : 12, rt = J = 0;
                break;
              case 2:
                for (; rt < 16; ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                if (x.flags = J, (255 & x.flags) != 8) {
                  E.msg = "unknown compression method", x.mode = 30;
                  break;
                }
                if (57344 & x.flags) {
                  E.msg = "unknown header flags set", x.mode = 30;
                  break;
                }
                x.head && (x.head.text = J >> 8 & 1), 512 & x.flags && (V[0] = 255 & J, V[1] = J >>> 8 & 255, x.check = d(x.check, V, 2, 0)), rt = J = 0, x.mode = 3;
              case 3:
                for (; rt < 32; ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                x.head && (x.head.time = J), 512 & x.flags && (V[0] = 255 & J, V[1] = J >>> 8 & 255, V[2] = J >>> 16 & 255, V[3] = J >>> 24 & 255, x.check = d(x.check, V, 4, 0)), rt = J = 0, x.mode = 4;
              case 4:
                for (; rt < 16; ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                x.head && (x.head.xflags = 255 & J, x.head.os = J >> 8), 512 & x.flags && (V[0] = 255 & J, V[1] = J >>> 8 & 255, x.check = d(x.check, V, 2, 0)), rt = J = 0, x.mode = 5;
              case 5:
                if (1024 & x.flags) {
                  for (; rt < 16; ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  x.length = J, x.head && (x.head.extra_len = J), 512 & x.flags && (V[0] = 255 & J, V[1] = J >>> 8 & 255, x.check = d(x.check, V, 2, 0)), rt = J = 0;
                } else
                  x.head && (x.head.extra = null);
                x.mode = 6;
              case 6:
                if (1024 & x.flags && (K < (Et = x.length) && (Et = K), Et && (x.head && (G = x.head.extra_len - x.length, x.head.extra || (x.head.extra = new Array(x.head.extra_len)), B.arraySet(x.head.extra, P, N, Et, G)), 512 & x.flags && (x.check = d(x.check, P, Et, N)), K -= Et, N += Et, x.length -= Et), x.length))
                  break t;
                x.length = 0, x.mode = 7;
              case 7:
                if (2048 & x.flags) {
                  if (K === 0)
                    break t;
                  for (Et = 0; G = P[N + Et++], x.head && G && x.length < 65536 && (x.head.name += String.fromCharCode(G)), G && Et < K; )
                    ;
                  if (512 & x.flags && (x.check = d(x.check, P, Et, N)), K -= Et, N += Et, G)
                    break t;
                } else
                  x.head && (x.head.name = null);
                x.length = 0, x.mode = 8;
              case 8:
                if (4096 & x.flags) {
                  if (K === 0)
                    break t;
                  for (Et = 0; G = P[N + Et++], x.head && G && x.length < 65536 && (x.head.comment += String.fromCharCode(G)), G && Et < K; )
                    ;
                  if (512 & x.flags && (x.check = d(x.check, P, Et, N)), K -= Et, N += Et, G)
                    break t;
                } else
                  x.head && (x.head.comment = null);
                x.mode = 9;
              case 9:
                if (512 & x.flags) {
                  for (; rt < 16; ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  if (J !== (65535 & x.check)) {
                    E.msg = "header crc mismatch", x.mode = 30;
                    break;
                  }
                  rt = J = 0;
                }
                x.head && (x.head.hcrc = x.flags >> 9 & 1, x.head.done = !0), E.adler = x.check = 0, x.mode = 12;
                break;
              case 10:
                for (; rt < 32; ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                E.adler = x.check = a(J), rt = J = 0, x.mode = 11;
              case 11:
                if (x.havedict === 0)
                  return E.next_out = M, E.avail_out = ut, E.next_in = N, E.avail_in = K, x.hold = J, x.bits = rt, 2;
                E.adler = x.check = 1, x.mode = 12;
              case 12:
                if (F === 5 || F === 6)
                  break t;
              case 13:
                if (x.last) {
                  J >>>= 7 & rt, rt -= 7 & rt, x.mode = 27;
                  break;
                }
                for (; rt < 3; ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                switch (x.last = 1 & J, rt -= 1, 3 & (J >>>= 1)) {
                  case 0:
                    x.mode = 14;
                    break;
                  case 1:
                    if (T(x), x.mode = 20, F !== 6)
                      break;
                    J >>>= 2, rt -= 2;
                    break t;
                  case 2:
                    x.mode = 17;
                    break;
                  case 3:
                    E.msg = "invalid block type", x.mode = 30;
                }
                J >>>= 2, rt -= 2;
                break;
              case 14:
                for (J >>>= 7 & rt, rt -= 7 & rt; rt < 32; ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                if ((65535 & J) != (J >>> 16 ^ 65535)) {
                  E.msg = "invalid stored block lengths", x.mode = 30;
                  break;
                }
                if (x.length = 65535 & J, rt = J = 0, x.mode = 15, F === 6)
                  break t;
              case 15:
                x.mode = 16;
              case 16:
                if (Et = x.length) {
                  if (K < Et && (Et = K), ut < Et && (Et = ut), Et === 0)
                    break t;
                  B.arraySet(L, P, N, Et, M), K -= Et, N += Et, ut -= Et, M += Et, x.length -= Et;
                  break;
                }
                x.mode = 12;
                break;
              case 17:
                for (; rt < 14; ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                if (x.nlen = 257 + (31 & J), J >>>= 5, rt -= 5, x.ndist = 1 + (31 & J), J >>>= 5, rt -= 5, x.ncode = 4 + (15 & J), J >>>= 4, rt -= 4, 286 < x.nlen || 30 < x.ndist) {
                  E.msg = "too many length or distance symbols", x.mode = 30;
                  break;
                }
                x.have = 0, x.mode = 18;
              case 18:
                for (; x.have < x.ncode; ) {
                  for (; rt < 3; ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  x.lens[it[x.have++]] = 7 & J, J >>>= 3, rt -= 3;
                }
                for (; x.have < 19; )
                  x.lens[it[x.have++]] = 0;
                if (x.lencode = x.lendyn, x.lenbits = 7, z = { bits: x.lenbits }, Tt = o(0, x.lens, 0, 19, x.lencode, 0, x.work, z), x.lenbits = z.bits, Tt) {
                  E.msg = "invalid code lengths set", x.mode = 30;
                  break;
                }
                x.have = 0, x.mode = 19;
              case 19:
                for (; x.have < x.nlen + x.ndist; ) {
                  for (; Q = (k = x.lencode[J & (1 << x.lenbits) - 1]) >>> 16 & 255, pt = 65535 & k, !((Ut = k >>> 24) <= rt); ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  if (pt < 16)
                    J >>>= Ut, rt -= Ut, x.lens[x.have++] = pt;
                  else {
                    if (pt === 16) {
                      for (S = Ut + 2; rt < S; ) {
                        if (K === 0)
                          break t;
                        K--, J += P[N++] << rt, rt += 8;
                      }
                      if (J >>>= Ut, rt -= Ut, x.have === 0) {
                        E.msg = "invalid bit length repeat", x.mode = 30;
                        break;
                      }
                      G = x.lens[x.have - 1], Et = 3 + (3 & J), J >>>= 2, rt -= 2;
                    } else if (pt === 17) {
                      for (S = Ut + 3; rt < S; ) {
                        if (K === 0)
                          break t;
                        K--, J += P[N++] << rt, rt += 8;
                      }
                      rt -= Ut, G = 0, Et = 3 + (7 & (J >>>= Ut)), J >>>= 3, rt -= 3;
                    } else {
                      for (S = Ut + 7; rt < S; ) {
                        if (K === 0)
                          break t;
                        K--, J += P[N++] << rt, rt += 8;
                      }
                      rt -= Ut, G = 0, Et = 11 + (127 & (J >>>= Ut)), J >>>= 7, rt -= 7;
                    }
                    if (x.have + Et > x.nlen + x.ndist) {
                      E.msg = "invalid bit length repeat", x.mode = 30;
                      break;
                    }
                    for (; Et--; )
                      x.lens[x.have++] = G;
                  }
                }
                if (x.mode === 30)
                  break;
                if (x.lens[256] === 0) {
                  E.msg = "invalid code -- missing end-of-block", x.mode = 30;
                  break;
                }
                if (x.lenbits = 9, z = { bits: x.lenbits }, Tt = o(r, x.lens, 0, x.nlen, x.lencode, 0, x.work, z), x.lenbits = z.bits, Tt) {
                  E.msg = "invalid literal/lengths set", x.mode = 30;
                  break;
                }
                if (x.distbits = 6, x.distcode = x.distdyn, z = { bits: x.distbits }, Tt = o(n, x.lens, x.nlen, x.ndist, x.distcode, 0, x.work, z), x.distbits = z.bits, Tt) {
                  E.msg = "invalid distances set", x.mode = 30;
                  break;
                }
                if (x.mode = 20, F === 6)
                  break t;
              case 20:
                x.mode = 21;
              case 21:
                if (6 <= K && 258 <= ut) {
                  E.next_out = M, E.avail_out = ut, E.next_in = N, E.avail_in = K, x.hold = J, x.bits = rt, t(E, xt), M = E.next_out, L = E.output, ut = E.avail_out, N = E.next_in, P = E.input, K = E.avail_in, J = x.hold, rt = x.bits, x.mode === 12 && (x.back = -1);
                  break;
                }
                for (x.back = 0; Q = (k = x.lencode[J & (1 << x.lenbits) - 1]) >>> 16 & 255, pt = 65535 & k, !((Ut = k >>> 24) <= rt); ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                if (Q && !(240 & Q)) {
                  for (ct = Ut, ot = Q, mt = pt; Q = (k = x.lencode[mt + ((J & (1 << ct + ot) - 1) >> ct)]) >>> 16 & 255, pt = 65535 & k, !(ct + (Ut = k >>> 24) <= rt); ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  J >>>= ct, rt -= ct, x.back += ct;
                }
                if (J >>>= Ut, rt -= Ut, x.back += Ut, x.length = pt, Q === 0) {
                  x.mode = 26;
                  break;
                }
                if (32 & Q) {
                  x.back = -1, x.mode = 12;
                  break;
                }
                if (64 & Q) {
                  E.msg = "invalid literal/length code", x.mode = 30;
                  break;
                }
                x.extra = 15 & Q, x.mode = 22;
              case 22:
                if (x.extra) {
                  for (S = x.extra; rt < S; ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  x.length += J & (1 << x.extra) - 1, J >>>= x.extra, rt -= x.extra, x.back += x.extra;
                }
                x.was = x.length, x.mode = 23;
              case 23:
                for (; Q = (k = x.distcode[J & (1 << x.distbits) - 1]) >>> 16 & 255, pt = 65535 & k, !((Ut = k >>> 24) <= rt); ) {
                  if (K === 0)
                    break t;
                  K--, J += P[N++] << rt, rt += 8;
                }
                if (!(240 & Q)) {
                  for (ct = Ut, ot = Q, mt = pt; Q = (k = x.distcode[mt + ((J & (1 << ct + ot) - 1) >> ct)]) >>> 16 & 255, pt = 65535 & k, !(ct + (Ut = k >>> 24) <= rt); ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  J >>>= ct, rt -= ct, x.back += ct;
                }
                if (J >>>= Ut, rt -= Ut, x.back += Ut, 64 & Q) {
                  E.msg = "invalid distance code", x.mode = 30;
                  break;
                }
                x.offset = pt, x.extra = 15 & Q, x.mode = 24;
              case 24:
                if (x.extra) {
                  for (S = x.extra; rt < S; ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  x.offset += J & (1 << x.extra) - 1, J >>>= x.extra, rt -= x.extra, x.back += x.extra;
                }
                if (x.offset > x.dmax) {
                  E.msg = "invalid distance too far back", x.mode = 30;
                  break;
                }
                x.mode = 25;
              case 25:
                if (ut === 0)
                  break t;
                if (Et = xt - ut, x.offset > Et) {
                  if ((Et = x.offset - Et) > x.whave && x.sane) {
                    E.msg = "invalid distance too far back", x.mode = 30;
                    break;
                  }
                  Ft = Et > x.wnext ? (Et -= x.wnext, x.wsize - Et) : x.wnext - Et, Et > x.length && (Et = x.length), Rt = x.window;
                } else
                  Rt = L, Ft = M - x.offset, Et = x.length;
                for (ut < Et && (Et = ut), ut -= Et, x.length -= Et; L[M++] = Rt[Ft++], --Et; )
                  ;
                x.length === 0 && (x.mode = 21);
                break;
              case 26:
                if (ut === 0)
                  break t;
                L[M++] = x.length, ut--, x.mode = 21;
                break;
              case 27:
                if (x.wrap) {
                  for (; rt < 32; ) {
                    if (K === 0)
                      break t;
                    K--, J |= P[N++] << rt, rt += 8;
                  }
                  if (xt -= ut, E.total_out += xt, x.total += xt, xt && (E.adler = x.check = x.flags ? d(x.check, L, xt, M - xt) : u(x.check, L, xt, M - xt)), xt = ut, (x.flags ? J : a(J)) !== x.check) {
                    E.msg = "incorrect data check", x.mode = 30;
                    break;
                  }
                  rt = J = 0;
                }
                x.mode = 28;
              case 28:
                if (x.wrap && x.flags) {
                  for (; rt < 32; ) {
                    if (K === 0)
                      break t;
                    K--, J += P[N++] << rt, rt += 8;
                  }
                  if (J !== (4294967295 & x.total)) {
                    E.msg = "incorrect length check", x.mode = 30;
                    break;
                  }
                  rt = J = 0;
                }
                x.mode = 29;
              case 29:
                Tt = 1;
                break t;
              case 30:
                Tt = -3;
                break t;
              case 31:
                return -4;
              case 32:
              default:
                return f;
            }
        return E.next_out = M, E.avail_out = ut, E.next_in = N, E.avail_in = K, x.hold = J, x.bits = rt, (x.wsize || xt !== E.avail_out && x.mode < 30 && (x.mode < 27 || F !== 4)) && C(E, E.output, E.next_out, xt - E.avail_out) ? (x.mode = 31, -4) : (yt -= E.avail_in, xt -= E.avail_out, E.total_in += yt, E.total_out += xt, x.total += xt, x.wrap && xt && (E.adler = x.check = x.flags ? d(x.check, L, xt, E.next_out - xt) : u(x.check, L, xt, E.next_out - xt)), E.data_type = x.bits + (x.last ? 64 : 0) + (x.mode === 12 ? 128 : 0) + (x.mode === 20 || x.mode === 15 ? 256 : 0), (yt == 0 && xt === 0 || F === 4) && Tt === i && (Tt = -5), Tt);
      }, R.inflateEnd = function(E) {
        if (!E || !E.state)
          return f;
        var F = E.state;
        return F.window && (F.window = null), E.state = null, i;
      }, R.inflateGetHeader = function(E, F) {
        var x;
        return E && E.state && 2 & (x = E.state).wrap ? ((x.head = F).done = !1, i) : f;
      }, R.inflateSetDictionary = function(E, F) {
        var x, P = F.length;
        return E && E.state ? (x = E.state).wrap !== 0 && x.mode !== 11 ? f : x.mode === 11 && u(1, F, P, 0) !== x.check ? -3 : C(E, F, P, P) ? (x.mode = 31, -4) : (x.havedict = 1, i) : f;
      }, R.inflateInfo = "pako inflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(b, A, R) {
      var B = b("../utils/common"), u = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], d = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], t = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], o = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
      A.exports = function(r, n, i, f, l, c, h, a) {
        var v, y, g, e, m, w, D, I, T, C = a.bits, E = 0, F = 0, x = 0, P = 0, L = 0, N = 0, M = 0, K = 0, ut = 0, J = 0, rt = null, yt = 0, xt = new B.Buf16(16), Et = new B.Buf16(16), Ft = null, Rt = 0;
        for (E = 0; E <= 15; E++)
          xt[E] = 0;
        for (F = 0; F < f; F++)
          xt[n[i + F]]++;
        for (L = C, P = 15; 1 <= P && xt[P] === 0; P--)
          ;
        if (P < L && (L = P), P === 0)
          return l[c++] = 20971520, l[c++] = 20971520, a.bits = 1, 0;
        for (x = 1; x < P && xt[x] === 0; x++)
          ;
        for (L < x && (L = x), E = K = 1; E <= 15; E++)
          if (K <<= 1, (K -= xt[E]) < 0)
            return -1;
        if (0 < K && (r === 0 || P !== 1))
          return -1;
        for (Et[1] = 0, E = 1; E < 15; E++)
          Et[E + 1] = Et[E] + xt[E];
        for (F = 0; F < f; F++)
          n[i + F] !== 0 && (h[Et[n[i + F]]++] = F);
        if (w = r === 0 ? (rt = Ft = h, 19) : r === 1 ? (rt = u, yt -= 257, Ft = d, Rt -= 257, 256) : (rt = t, Ft = o, -1), E = x, m = c, M = F = J = 0, g = -1, e = (ut = 1 << (N = L)) - 1, r === 1 && 852 < ut || r === 2 && 592 < ut)
          return 1;
        for (; ; ) {
          for (D = E - M, T = h[F] < w ? (I = 0, h[F]) : h[F] > w ? (I = Ft[Rt + h[F]], rt[yt + h[F]]) : (I = 96, 0), v = 1 << E - M, x = y = 1 << N; l[m + (J >> M) + (y -= v)] = D << 24 | I << 16 | T | 0, y !== 0; )
            ;
          for (v = 1 << E - 1; J & v; )
            v >>= 1;
          if (v !== 0 ? (J &= v - 1, J += v) : J = 0, F++, --xt[E] == 0) {
            if (E === P)
              break;
            E = n[i + h[F]];
          }
          if (L < E && (J & e) !== g) {
            for (M === 0 && (M = L), m += x, K = 1 << (N = E - M); N + M < P && !((K -= xt[N + M]) <= 0); )
              N++, K <<= 1;
            if (ut += 1 << N, r === 1 && 852 < ut || r === 2 && 592 < ut)
              return 1;
            l[g = J & e] = L << 24 | N << 16 | m - c | 0;
          }
        }
        return J !== 0 && (l[m + J] = E - M << 24 | 64 << 16 | 0), a.bits = L, 0;
      };
    }, { "../utils/common": 41 }], 51: [function(b, A, R) {
      A.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
    }, {}], 52: [function(b, A, R) {
      var B = b("../utils/common"), u = 0, d = 1;
      function t(k) {
        for (var V = k.length; 0 <= --V; )
          k[V] = 0;
      }
      var o = 0, r = 29, n = 256, i = n + 1 + r, f = 30, l = 19, c = 2 * i + 1, h = 15, a = 16, v = 7, y = 256, g = 16, e = 17, m = 18, w = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], D = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], I = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], T = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], C = new Array(2 * (i + 2));
      t(C);
      var E = new Array(2 * f);
      t(E);
      var F = new Array(512);
      t(F);
      var x = new Array(256);
      t(x);
      var P = new Array(r);
      t(P);
      var L, N, M, K = new Array(f);
      function ut(k, V, it, tt, _) {
        this.static_tree = k, this.extra_bits = V, this.extra_base = it, this.elems = tt, this.max_length = _, this.has_stree = k && k.length;
      }
      function J(k, V) {
        this.dyn_tree = k, this.max_code = 0, this.stat_desc = V;
      }
      function rt(k) {
        return k < 256 ? F[k] : F[256 + (k >>> 7)];
      }
      function yt(k, V) {
        k.pending_buf[k.pending++] = 255 & V, k.pending_buf[k.pending++] = V >>> 8 & 255;
      }
      function xt(k, V, it) {
        k.bi_valid > a - it ? (k.bi_buf |= V << k.bi_valid & 65535, yt(k, k.bi_buf), k.bi_buf = V >> a - k.bi_valid, k.bi_valid += it - a) : (k.bi_buf |= V << k.bi_valid & 65535, k.bi_valid += it);
      }
      function Et(k, V, it) {
        xt(k, it[2 * V], it[2 * V + 1]);
      }
      function Ft(k, V) {
        for (var it = 0; it |= 1 & k, k >>>= 1, it <<= 1, 0 < --V; )
          ;
        return it >>> 1;
      }
      function Rt(k, V, it) {
        var tt, _, At = new Array(h + 1), Lt = 0;
        for (tt = 1; tt <= h; tt++)
          At[tt] = Lt = Lt + it[tt - 1] << 1;
        for (_ = 0; _ <= V; _++) {
          var Yt = k[2 * _ + 1];
          Yt !== 0 && (k[2 * _] = Ft(At[Yt]++, Yt));
        }
      }
      function Ut(k) {
        var V;
        for (V = 0; V < i; V++)
          k.dyn_ltree[2 * V] = 0;
        for (V = 0; V < f; V++)
          k.dyn_dtree[2 * V] = 0;
        for (V = 0; V < l; V++)
          k.bl_tree[2 * V] = 0;
        k.dyn_ltree[2 * y] = 1, k.opt_len = k.static_len = 0, k.last_lit = k.matches = 0;
      }
      function Q(k) {
        8 < k.bi_valid ? yt(k, k.bi_buf) : 0 < k.bi_valid && (k.pending_buf[k.pending++] = k.bi_buf), k.bi_buf = 0, k.bi_valid = 0;
      }
      function pt(k, V, it, tt) {
        var _ = 2 * V, At = 2 * it;
        return k[_] < k[At] || k[_] === k[At] && tt[V] <= tt[it];
      }
      function ct(k, V, it) {
        for (var tt = k.heap[it], _ = it << 1; _ <= k.heap_len && (_ < k.heap_len && pt(V, k.heap[_ + 1], k.heap[_], k.depth) && _++, !pt(V, tt, k.heap[_], k.depth)); )
          k.heap[it] = k.heap[_], it = _, _ <<= 1;
        k.heap[it] = tt;
      }
      function ot(k, V, it) {
        var tt, _, At, Lt, Yt = 0;
        if (k.last_lit !== 0)
          for (; tt = k.pending_buf[k.d_buf + 2 * Yt] << 8 | k.pending_buf[k.d_buf + 2 * Yt + 1], _ = k.pending_buf[k.l_buf + Yt], Yt++, tt === 0 ? Et(k, _, V) : (Et(k, (At = x[_]) + n + 1, V), (Lt = w[At]) !== 0 && xt(k, _ -= P[At], Lt), Et(k, At = rt(--tt), it), (Lt = D[At]) !== 0 && xt(k, tt -= K[At], Lt)), Yt < k.last_lit; )
            ;
        Et(k, y, V);
      }
      function mt(k, V) {
        var it, tt, _, At = V.dyn_tree, Lt = V.stat_desc.static_tree, Yt = V.stat_desc.has_stree, Gt = V.stat_desc.elems, Dt = -1;
        for (k.heap_len = 0, k.heap_max = c, it = 0; it < Gt; it++)
          At[2 * it] !== 0 ? (k.heap[++k.heap_len] = Dt = it, k.depth[it] = 0) : At[2 * it + 1] = 0;
        for (; k.heap_len < 2; )
          At[2 * (_ = k.heap[++k.heap_len] = Dt < 2 ? ++Dt : 0)] = 1, k.depth[_] = 0, k.opt_len--, Yt && (k.static_len -= Lt[2 * _ + 1]);
        for (V.max_code = Dt, it = k.heap_len >> 1; 1 <= it; it--)
          ct(k, At, it);
        for (_ = Gt; it = k.heap[1], k.heap[1] = k.heap[k.heap_len--], ct(k, At, 1), tt = k.heap[1], k.heap[--k.heap_max] = it, k.heap[--k.heap_max] = tt, At[2 * _] = At[2 * it] + At[2 * tt], k.depth[_] = (k.depth[it] >= k.depth[tt] ? k.depth[it] : k.depth[tt]) + 1, At[2 * it + 1] = At[2 * tt + 1] = _, k.heap[1] = _++, ct(k, At, 1), 2 <= k.heap_len; )
          ;
        k.heap[--k.heap_max] = k.heap[1], function(ae, Ae) {
          var xe, ce, we, zt, Qt, le, de = Ae.dyn_tree, be = Ae.max_code, Pe = Ae.stat_desc.static_tree, Fe = Ae.stat_desc.has_stree, It = Ae.stat_desc.extra_bits, fe = Ae.stat_desc.extra_base, st = Ae.stat_desc.max_length, Y = 0;
          for (zt = 0; zt <= h; zt++)
            ae.bl_count[zt] = 0;
          for (de[2 * ae.heap[ae.heap_max] + 1] = 0, xe = ae.heap_max + 1; xe < c; xe++)
            st < (zt = de[2 * de[2 * (ce = ae.heap[xe]) + 1] + 1] + 1) && (zt = st, Y++), de[2 * ce + 1] = zt, be < ce || (ae.bl_count[zt]++, Qt = 0, fe <= ce && (Qt = It[ce - fe]), le = de[2 * ce], ae.opt_len += le * (zt + Qt), Fe && (ae.static_len += le * (Pe[2 * ce + 1] + Qt)));
          if (Y !== 0) {
            do {
              for (zt = st - 1; ae.bl_count[zt] === 0; )
                zt--;
              ae.bl_count[zt]--, ae.bl_count[zt + 1] += 2, ae.bl_count[st]--, Y -= 2;
            } while (0 < Y);
            for (zt = st; zt !== 0; zt--)
              for (ce = ae.bl_count[zt]; ce !== 0; )
                be < (we = ae.heap[--xe]) || (de[2 * we + 1] !== zt && (ae.opt_len += (zt - de[2 * we + 1]) * de[2 * we], de[2 * we + 1] = zt), ce--);
          }
        }(k, V), Rt(At, Dt, k.bl_count);
      }
      function G(k, V, it) {
        var tt, _, At = -1, Lt = V[1], Yt = 0, Gt = 7, Dt = 4;
        for (Lt === 0 && (Gt = 138, Dt = 3), V[2 * (it + 1) + 1] = 65535, tt = 0; tt <= it; tt++)
          _ = Lt, Lt = V[2 * (tt + 1) + 1], ++Yt < Gt && _ === Lt || (Yt < Dt ? k.bl_tree[2 * _] += Yt : _ !== 0 ? (_ !== At && k.bl_tree[2 * _]++, k.bl_tree[2 * g]++) : Yt <= 10 ? k.bl_tree[2 * e]++ : k.bl_tree[2 * m]++, At = _, Dt = (Yt = 0) === Lt ? (Gt = 138, 3) : _ === Lt ? (Gt = 6, 3) : (Gt = 7, 4));
      }
      function Tt(k, V, it) {
        var tt, _, At = -1, Lt = V[1], Yt = 0, Gt = 7, Dt = 4;
        for (Lt === 0 && (Gt = 138, Dt = 3), tt = 0; tt <= it; tt++)
          if (_ = Lt, Lt = V[2 * (tt + 1) + 1], !(++Yt < Gt && _ === Lt)) {
            if (Yt < Dt)
              for (; Et(k, _, k.bl_tree), --Yt != 0; )
                ;
            else
              _ !== 0 ? (_ !== At && (Et(k, _, k.bl_tree), Yt--), Et(k, g, k.bl_tree), xt(k, Yt - 3, 2)) : Yt <= 10 ? (Et(k, e, k.bl_tree), xt(k, Yt - 3, 3)) : (Et(k, m, k.bl_tree), xt(k, Yt - 11, 7));
            At = _, Dt = (Yt = 0) === Lt ? (Gt = 138, 3) : _ === Lt ? (Gt = 6, 3) : (Gt = 7, 4);
          }
      }
      t(K);
      var z = !1;
      function S(k, V, it, tt) {
        xt(k, (o << 1) + (tt ? 1 : 0), 3), function(_, At, Lt, Yt) {
          Q(_), Yt && (yt(_, Lt), yt(_, ~Lt)), B.arraySet(_.pending_buf, _.window, At, Lt, _.pending), _.pending += Lt;
        }(k, V, it, !0);
      }
      R._tr_init = function(k) {
        z || (function() {
          var V, it, tt, _, At, Lt = new Array(h + 1);
          for (_ = tt = 0; _ < r - 1; _++)
            for (P[_] = tt, V = 0; V < 1 << w[_]; V++)
              x[tt++] = _;
          for (x[tt - 1] = _, _ = At = 0; _ < 16; _++)
            for (K[_] = At, V = 0; V < 1 << D[_]; V++)
              F[At++] = _;
          for (At >>= 7; _ < f; _++)
            for (K[_] = At << 7, V = 0; V < 1 << D[_] - 7; V++)
              F[256 + At++] = _;
          for (it = 0; it <= h; it++)
            Lt[it] = 0;
          for (V = 0; V <= 143; )
            C[2 * V + 1] = 8, V++, Lt[8]++;
          for (; V <= 255; )
            C[2 * V + 1] = 9, V++, Lt[9]++;
          for (; V <= 279; )
            C[2 * V + 1] = 7, V++, Lt[7]++;
          for (; V <= 287; )
            C[2 * V + 1] = 8, V++, Lt[8]++;
          for (Rt(C, i + 1, Lt), V = 0; V < f; V++)
            E[2 * V + 1] = 5, E[2 * V] = Ft(V, 5);
          L = new ut(C, w, n + 1, i, h), N = new ut(E, D, 0, f, h), M = new ut(new Array(0), I, 0, l, v);
        }(), z = !0), k.l_desc = new J(k.dyn_ltree, L), k.d_desc = new J(k.dyn_dtree, N), k.bl_desc = new J(k.bl_tree, M), k.bi_buf = 0, k.bi_valid = 0, Ut(k);
      }, R._tr_stored_block = S, R._tr_flush_block = function(k, V, it, tt) {
        var _, At, Lt = 0;
        0 < k.level ? (k.strm.data_type === 2 && (k.strm.data_type = function(Yt) {
          var Gt, Dt = 4093624447;
          for (Gt = 0; Gt <= 31; Gt++, Dt >>>= 1)
            if (1 & Dt && Yt.dyn_ltree[2 * Gt] !== 0)
              return u;
          if (Yt.dyn_ltree[18] !== 0 || Yt.dyn_ltree[20] !== 0 || Yt.dyn_ltree[26] !== 0)
            return d;
          for (Gt = 32; Gt < n; Gt++)
            if (Yt.dyn_ltree[2 * Gt] !== 0)
              return d;
          return u;
        }(k)), mt(k, k.l_desc), mt(k, k.d_desc), Lt = function(Yt) {
          var Gt;
          for (G(Yt, Yt.dyn_ltree, Yt.l_desc.max_code), G(Yt, Yt.dyn_dtree, Yt.d_desc.max_code), mt(Yt, Yt.bl_desc), Gt = l - 1; 3 <= Gt && Yt.bl_tree[2 * T[Gt] + 1] === 0; Gt--)
            ;
          return Yt.opt_len += 3 * (Gt + 1) + 5 + 5 + 4, Gt;
        }(k), _ = k.opt_len + 3 + 7 >>> 3, (At = k.static_len + 3 + 7 >>> 3) <= _ && (_ = At)) : _ = At = it + 5, it + 4 <= _ && V !== -1 ? S(k, V, it, tt) : k.strategy === 4 || At === _ ? (xt(k, 2 + (tt ? 1 : 0), 3), ot(k, C, E)) : (xt(k, 4 + (tt ? 1 : 0), 3), function(Yt, Gt, Dt, ae) {
          var Ae;
          for (xt(Yt, Gt - 257, 5), xt(Yt, Dt - 1, 5), xt(Yt, ae - 4, 4), Ae = 0; Ae < ae; Ae++)
            xt(Yt, Yt.bl_tree[2 * T[Ae] + 1], 3);
          Tt(Yt, Yt.dyn_ltree, Gt - 1), Tt(Yt, Yt.dyn_dtree, Dt - 1);
        }(k, k.l_desc.max_code + 1, k.d_desc.max_code + 1, Lt + 1), ot(k, k.dyn_ltree, k.dyn_dtree)), Ut(k), tt && Q(k);
      }, R._tr_tally = function(k, V, it) {
        return k.pending_buf[k.d_buf + 2 * k.last_lit] = V >>> 8 & 255, k.pending_buf[k.d_buf + 2 * k.last_lit + 1] = 255 & V, k.pending_buf[k.l_buf + k.last_lit] = 255 & it, k.last_lit++, V === 0 ? k.dyn_ltree[2 * it]++ : (k.matches++, V--, k.dyn_ltree[2 * (x[it] + n + 1)]++, k.dyn_dtree[2 * rt(V)]++), k.last_lit === k.lit_bufsize - 1;
      }, R._tr_align = function(k) {
        xt(k, 2, 3), Et(k, y, C), function(V) {
          V.bi_valid === 16 ? (yt(V, V.bi_buf), V.bi_buf = 0, V.bi_valid = 0) : 8 <= V.bi_valid && (V.pending_buf[V.pending++] = 255 & V.bi_buf, V.bi_buf >>= 8, V.bi_valid -= 8);
        }(k);
      };
    }, { "../utils/common": 41 }], 53: [function(b, A, R) {
      A.exports = function() {
        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
      };
    }, {}], 54: [function(b, A, R) {
      (function(B) {
        (function(u, d) {
          if (!u.setImmediate) {
            var t, o, r, n, i = 1, f = {}, l = !1, c = u.document, h = Object.getPrototypeOf && Object.getPrototypeOf(u);
            h = h && h.setTimeout ? h : u, t = {}.toString.call(u.process) === "[object process]" ? function(g) {
              process.nextTick(function() {
                v(g);
              });
            } : function() {
              if (u.postMessage && !u.importScripts) {
                var g = !0, e = u.onmessage;
                return u.onmessage = function() {
                  g = !1;
                }, u.postMessage("", "*"), u.onmessage = e, g;
              }
            }() ? (n = "setImmediate$" + Math.random() + "$", u.addEventListener ? u.addEventListener("message", y, !1) : u.attachEvent("onmessage", y), function(g) {
              u.postMessage(n + g, "*");
            }) : u.MessageChannel ? ((r = new MessageChannel()).port1.onmessage = function(g) {
              v(g.data);
            }, function(g) {
              r.port2.postMessage(g);
            }) : c && "onreadystatechange" in c.createElement("script") ? (o = c.documentElement, function(g) {
              var e = c.createElement("script");
              e.onreadystatechange = function() {
                v(g), e.onreadystatechange = null, o.removeChild(e), e = null;
              }, o.appendChild(e);
            }) : function(g) {
              setTimeout(v, 0, g);
            }, h.setImmediate = function(g) {
              typeof g != "function" && (g = new Function("" + g));
              for (var e = new Array(arguments.length - 1), m = 0; m < e.length; m++)
                e[m] = arguments[m + 1];
              var w = { callback: g, args: e };
              return f[i] = w, t(i), i++;
            }, h.clearImmediate = a;
          }
          function a(g) {
            delete f[g];
          }
          function v(g) {
            if (l)
              setTimeout(v, 0, g);
            else {
              var e = f[g];
              if (e) {
                l = !0;
                try {
                  (function(m) {
                    var w = m.callback, D = m.args;
                    switch (D.length) {
                      case 0:
                        w();
                        break;
                      case 1:
                        w(D[0]);
                        break;
                      case 2:
                        w(D[0], D[1]);
                        break;
                      case 3:
                        w(D[0], D[1], D[2]);
                        break;
                      default:
                        w.apply(d, D);
                    }
                  })(e);
                } finally {
                  a(g), l = !1;
                }
              }
            }
          }
          function y(g) {
            g.source === u && typeof g.data == "string" && g.data.indexOf(n) === 0 && v(+g.data.slice(n.length));
          }
        })(typeof self > "u" ? B === void 0 ? this : B : self);
      }).call(this, typeof oi < "u" ? oi : typeof self < "u" ? self : typeof window < "u" ? window : {});
    }, {}] }, {}, [10])(10);
  });
})(kf);
var Dd = kf.exports;
const Od = /* @__PURE__ */ Mf(Dd);
var Pd = { exports: {} };
/*! pdfmake v0.2.9, @license MIT, @link http://pdfmake.org */
(function(s, p) {
  (function(A, R) {
    s.exports = R();
  })(typeof self < "u" ? self : oi, function() {
    return (
      /******/
      function() {
        var b = {
          /***/
          71692: (
            /***/
            function(u, d) {
              d.OP = 0, d.CL = 1, d.CP = 2, d.QU = 3, d.GL = 4, d.NS = 5, d.EX = 6, d.SY = 7, d.IS = 8, d.PR = 9, d.PO = 10, d.NU = 11, d.AL = 12, d.HL = 13, d.ID = 14, d.IN = 15, d.HY = 16, d.BA = 17, d.BB = 18, d.B2 = 19, d.ZW = 20, d.CM = 21, d.WJ = 22, d.H2 = 23, d.H3 = 24, d.JL = 25, d.JV = 26, d.JT = 27, d.RI = 28, d.EB = 29, d.EM = 30, d.ZWJ = 31, d.CB = 32, d.AI = 33, d.BK = 34, d.CJ = 35, d.CR = 36, d.LF = 37, d.NL = 38, d.SA = 39, d.SG = 40, d.SP = 41, d.XX = 42;
            }
          ),
          /***/
          54069: (
            /***/
            function(u, d) {
              var t, o, r, n, i;
              d.DI_BRK = r = 0, d.IN_BRK = n = 1, d.CI_BRK = t = 2, d.CP_BRK = o = 3, d.PR_BRK = i = 4, d.pairTable = [
                //OP   , CL    , CP    , QU    , GL    , NS    , EX    , SY    , IS    , PR    , PO    , NU    , AL    , HL    , ID    , IN    , HY    , BA    , BB    , B2    , ZW    , CM    , WJ    , H2    , H3    , JL    , JV    , JT    , RI    , EB    , EM    , ZWJ   , CB
                [i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, o, i, i, i, i, i, i, i, i, i, i, i],
                // OP
                [r, i, i, n, n, i, i, i, i, n, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // CL
                [r, i, i, n, n, i, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // CP
                [i, i, i, n, n, n, i, i, i, n, n, n, n, n, n, n, n, n, n, n, i, t, i, n, n, n, n, n, n, n, n, n, n],
                // QU
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, n, n, n, n, n, n, i, t, i, n, n, n, n, n, n, n, n, n, n],
                // GL
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // NS
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // EX
                [r, i, i, n, n, n, i, i, i, r, r, n, r, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // SY
                [r, i, i, n, n, n, i, i, i, r, r, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // IS
                [n, i, i, n, n, n, i, i, i, r, r, n, n, n, n, n, n, n, r, r, i, t, i, n, n, n, n, n, r, n, n, n, r],
                // PR
                [n, i, i, n, n, n, i, i, i, r, r, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // PO
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // NU
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // AL
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // HL
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // ID
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // IN
                [r, i, i, n, r, n, i, i, i, r, r, n, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // HY
                [r, i, i, n, r, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // BA
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, n, n, n, n, n, n, i, t, i, n, n, n, n, n, n, n, n, n, r],
                // BB
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, i, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // B2
                [r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, i, r, r, r, r, r, r, r, r, r, r, r, r],
                // ZW
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // CM
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, n, n, n, n, n, n, i, t, i, n, n, n, n, n, n, n, n, n, n],
                // WJ
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, n, n, r, r, r, n, r],
                // H2
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, n, r, r, r, n, r],
                // H3
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, n, n, n, n, r, r, r, r, n, r],
                // JL
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, n, n, r, r, r, n, r],
                // JV
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, n, r, r, r, n, r],
                // JT
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, n, r, r, n, r],
                // RI
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, n, n, r],
                // EB
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // EM
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // ZWJ
                [r, i, i, n, n, r, i, i, i, r, r, r, r, r, r, r, r, r, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r]
                // CB
              ];
            }
          ),
          /***/
          27398: (
            /***/
            function(u, d, t) {
              t(33130), d.EncodeStream = t(74883), d.DecodeStream = t(42092), d.Array = t(23948), d.LazyArray = t(88931), d.Bitfield = t(41602), d.Boolean = t(21210), d.Buffer = t(96204), d.Enum = t(2463), d.Optional = t(11568), d.Reserved = t(62211), d.String = t(69046), d.Struct = t(90433), d.VersionedStruct = t(37529);
              var o = t(76959), r = t(61002), n = t(27309);
              Object.assign(d, o, r, n);
            }
          ),
          /***/
          23948: (
            /***/
            function(u, d, t) {
              t(18821), t(10853), t(33290), t(54994), t(4845), t(45007), t(39275), t(26364), t(86632), t(61928), t(54883), t(68995);
              function o(h, a) {
                var v = typeof Symbol < "u" && h[Symbol.iterator] || h["@@iterator"];
                if (v)
                  return (v = v.call(h)).next.bind(v);
                if (Array.isArray(h) || (v = r(h)) || a && h && typeof h.length == "number") {
                  v && (h = v);
                  var y = 0;
                  return function() {
                    return y >= h.length ? { done: !0 } : { done: !1, value: h[y++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function r(h, a) {
                if (h) {
                  if (typeof h == "string")
                    return n(h, a);
                  var v = Object.prototype.toString.call(h).slice(8, -1);
                  if (v === "Object" && h.constructor && (v = h.constructor.name), v === "Map" || v === "Set")
                    return Array.from(h);
                  if (v === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(v))
                    return n(h, a);
                }
              }
              function n(h, a) {
                (a == null || a > h.length) && (a = h.length);
                for (var v = 0, y = new Array(a); v < a; v++)
                  y[v] = h[v];
                return y;
              }
              var i = t(61002), f = i.Number, l = t(76959), c = /* @__PURE__ */ function() {
                function h(v, y, g) {
                  g === void 0 && (g = "count"), this.type = v, this.length = y, this.lengthType = g;
                }
                var a = h.prototype;
                return a.decode = function(y, g) {
                  var e, m = y.pos, w = [], D = g;
                  if (this.length != null && (e = l.resolveLength(this.length, y, g)), this.length instanceof f && (Object.defineProperties(w, {
                    parent: {
                      value: g
                    },
                    _startOffset: {
                      value: m
                    },
                    _currentOffset: {
                      value: 0,
                      writable: !0
                    },
                    _length: {
                      value: e
                    }
                  }), D = w), e == null || this.lengthType === "bytes")
                    for (var I = e != null ? y.pos + e : g?._length ? g._startOffset + g._length : y.length; y.pos < I; )
                      w.push(this.type.decode(y, D));
                  else
                    for (var T = 0, C = e; T < C; T++)
                      w.push(this.type.decode(y, D));
                  return w;
                }, a.size = function(y, g) {
                  if (!y)
                    return this.type.size(null, g) * l.resolveLength(this.length, null, g);
                  var e = 0;
                  this.length instanceof f && (e += this.length.size(), g = {
                    parent: g
                  });
                  for (var m = o(y), w; !(w = m()).done; ) {
                    var D = w.value;
                    e += this.type.size(D, g);
                  }
                  return e;
                }, a.encode = function(y, g, e) {
                  var m = e;
                  this.length instanceof f && (m = {
                    pointers: [],
                    startOffset: y.pos,
                    parent: e
                  }, m.pointerOffset = y.pos + this.size(g, m), this.length.encode(y, g.length));
                  for (var w = o(g), D; !(D = w()).done; ) {
                    var I = D.value;
                    this.type.encode(y, I, m);
                  }
                  if (this.length instanceof f)
                    for (var T = 0; T < m.pointers.length; ) {
                      var C = m.pointers[T++];
                      C.type.encode(y, C.val);
                    }
                }, h;
              }();
              u.exports = c;
            }
          ),
          /***/
          41602: (
            /***/
            function(u, d, t) {
              t(15158);
              var o = /* @__PURE__ */ function() {
                function r(i, f) {
                  f === void 0 && (f = []), this.type = i, this.flags = f;
                }
                var n = r.prototype;
                return n.decode = function(f) {
                  for (var l = this.type.decode(f), c = {}, h = 0; h < this.flags.length; h++) {
                    var a = this.flags[h];
                    a != null && (c[a] = !!(l & 1 << h));
                  }
                  return c;
                }, n.size = function() {
                  return this.type.size();
                }, n.encode = function(f, l) {
                  for (var c = 0, h = 0; h < this.flags.length; h++) {
                    var a = this.flags[h];
                    a != null && l[a] && (c |= 1 << h);
                  }
                  return this.type.encode(f, c);
                }, r;
              }();
              u.exports = o;
            }
          ),
          /***/
          21210: (
            /***/
            function(u) {
              var d = /* @__PURE__ */ function() {
                function t(r) {
                  this.type = r;
                }
                var o = t.prototype;
                return o.decode = function(n, i) {
                  return !!this.type.decode(n, i);
                }, o.size = function(n, i) {
                  return this.type.size(n, i);
                }, o.encode = function(n, i, f) {
                  return this.type.encode(n, +i, f);
                }, t;
              }();
              u.exports = d;
            }
          ),
          /***/
          96204: (
            /***/
            function(u, d, t) {
              var o = t(76959), r = t(61002), n = r.Number, i = /* @__PURE__ */ function() {
                function f(c) {
                  this.length = c;
                }
                var l = f.prototype;
                return l.decode = function(h, a) {
                  var v = o.resolveLength(this.length, h, a);
                  return h.readBuffer(v);
                }, l.size = function(h, a) {
                  return h ? h.length : o.resolveLength(this.length, null, a);
                }, l.encode = function(h, a, v) {
                  return this.length instanceof n && this.length.encode(h, a.length), h.writeBuffer(a);
                }, f;
              }();
              u.exports = i;
            }
          ),
          /***/
          42092: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer;
              t(10853), t(33290), t(18821), t(39275), t(22321);
              var r;
              try {
                r = t(32766);
              } catch {
              }
              var n = /* @__PURE__ */ function() {
                function l(h) {
                  this.buffer = h, this.pos = 0, this.length = this.buffer.length;
                }
                var c = l.prototype;
                return c.readString = function(a, v) {
                  switch (v === void 0 && (v = "ascii"), v) {
                    case "utf16le":
                    case "ucs2":
                    case "utf8":
                    case "ascii":
                      return this.buffer.toString(v, this.pos, this.pos += a);
                    case "utf16be":
                      for (var y = o.from(this.readBuffer(a)), g = 0, e = y.length - 1; g < e; g += 2) {
                        var m = y[g];
                        y[g] = y[g + 1], y[g + 1] = m;
                      }
                      return y.toString("utf16le");
                    default:
                      if (y = this.readBuffer(a), r)
                        try {
                          return r.decode(y, v);
                        } catch {
                        }
                      return y;
                  }
                }, c.readBuffer = function(a) {
                  return this.buffer.slice(this.pos, this.pos += a);
                }, c.readUInt24BE = function() {
                  return (this.readUInt16BE() << 8) + this.readUInt8();
                }, c.readUInt24LE = function() {
                  return this.readUInt16LE() + (this.readUInt8() << 16);
                }, c.readInt24BE = function() {
                  return (this.readInt16BE() << 8) + this.readUInt8();
                }, c.readInt24LE = function() {
                  return this.readUInt16LE() + (this.readInt8() << 16);
                }, l;
              }();
              n.TYPES = {
                UInt8: 1,
                UInt16: 2,
                UInt24: 3,
                UInt32: 4,
                Int8: 1,
                Int16: 2,
                Int24: 3,
                Int32: 4,
                Float: 4,
                Double: 8
              };
              var i = function(c) {
                if (c.slice(0, 4) === "read") {
                  var h = n.TYPES[c.replace(/read|[BL]E/g, "")];
                  n.prototype[c] = function() {
                    var a = this.buffer[c](this.pos);
                    return this.pos += h, a;
                  };
                }
              };
              for (var f in o.prototype)
                i(f);
              u.exports = n;
            }
          ),
          /***/
          74883: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer;
              t(18821), t(83382), t(39275), t(22321);
              function r(v, y) {
                v.prototype = Object.create(y.prototype), v.prototype.constructor = v, n(v, y);
              }
              function n(v, y) {
                return n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, m) {
                  return e.__proto__ = m, e;
                }, n(v, y);
              }
              var i, f = t(20202), l = t(42092);
              try {
                i = t(32766);
              } catch {
              }
              var c = /* @__PURE__ */ function(v) {
                r(y, v);
                function y(e) {
                  var m;
                  return e === void 0 && (e = 65536), m = v.apply(this, arguments) || this, m.buffer = o.alloc(e), m.bufferOffset = 0, m.pos = 0, m;
                }
                var g = y.prototype;
                return g._read = function() {
                }, g.ensure = function(m) {
                  if (this.bufferOffset + m > this.buffer.length)
                    return this.flush();
                }, g.flush = function() {
                  if (this.bufferOffset > 0)
                    return this.push(o.from(this.buffer.slice(0, this.bufferOffset))), this.bufferOffset = 0;
                }, g.writeBuffer = function(m) {
                  return this.flush(), this.push(m), this.pos += m.length;
                }, g.writeString = function(m, w) {
                  switch (w === void 0 && (w = "ascii"), w) {
                    case "utf16le":
                    case "ucs2":
                    case "utf8":
                    case "ascii":
                      return this.writeBuffer(o.from(m, w));
                    case "utf16be":
                      for (var D = o.from(m, "utf16le"), I = 0, T = D.length - 1; I < T; I += 2) {
                        var C = D[I];
                        D[I] = D[I + 1], D[I + 1] = C;
                      }
                      return this.writeBuffer(D);
                    default:
                      if (i)
                        return this.writeBuffer(i.encode(m, w));
                      throw new Error("Install iconv-lite to enable additional string encodings.");
                  }
                }, g.writeUInt24BE = function(m) {
                  return this.ensure(3), this.buffer[this.bufferOffset++] = m >>> 16 & 255, this.buffer[this.bufferOffset++] = m >>> 8 & 255, this.buffer[this.bufferOffset++] = m & 255, this.pos += 3;
                }, g.writeUInt24LE = function(m) {
                  return this.ensure(3), this.buffer[this.bufferOffset++] = m & 255, this.buffer[this.bufferOffset++] = m >>> 8 & 255, this.buffer[this.bufferOffset++] = m >>> 16 & 255, this.pos += 3;
                }, g.writeInt24BE = function(m) {
                  return m >= 0 ? this.writeUInt24BE(m) : this.writeUInt24BE(m + 16777215 + 1);
                }, g.writeInt24LE = function(m) {
                  return m >= 0 ? this.writeUInt24LE(m) : this.writeUInt24LE(m + 16777215 + 1);
                }, g.fill = function(m, w) {
                  if (w < this.buffer.length)
                    return this.ensure(w), this.buffer.fill(m, this.bufferOffset, this.bufferOffset + w), this.bufferOffset += w, this.pos += w;
                  var D = o.alloc(w);
                  return D.fill(m), this.writeBuffer(D);
                }, g.end = function() {
                  return this.flush(), this.push(null);
                }, y;
              }(f.Readable), h = function(y) {
                if (y.slice(0, 5) === "write") {
                  var g = +l.TYPES[y.replace(/write|[BL]E/g, "")];
                  c.prototype[y] = function(e) {
                    return this.ensure(g), this.buffer[y](e, this.bufferOffset), this.bufferOffset += g, this.pos += g;
                  };
                }
              };
              for (var a in o.prototype)
                h(a);
              u.exports = c;
            }
          ),
          /***/
          2463: (
            /***/
            function(u) {
              var d = /* @__PURE__ */ function() {
                function t(r, n) {
                  n === void 0 && (n = []), this.type = r, this.options = n;
                }
                var o = t.prototype;
                return o.decode = function(n) {
                  var i = this.type.decode(n);
                  return this.options[i] || i;
                }, o.size = function() {
                  return this.type.size();
                }, o.encode = function(n, i) {
                  var f = this.options.indexOf(i);
                  if (f === -1)
                    throw new Error("Unknown option in enum: " + i);
                  return this.type.encode(n, f);
                }, t;
              }();
              u.exports = d;
            }
          ),
          /***/
          88931: (
            /***/
            function(u, d, t) {
              t(10853), t(35054);
              function o(y, g) {
                y.prototype = Object.create(g.prototype), y.prototype.constructor = y, r(y, g);
              }
              function r(y, g) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(m, w) {
                  return m.__proto__ = w, m;
                }, r(y, g);
              }
              var n = t(23948), i = t(61002), f = i.Number, l = t(76959), c = t(85663), h = c.inspect, a = /* @__PURE__ */ function(y) {
                o(g, y);
                function g() {
                  return y.apply(this, arguments) || this;
                }
                var e = g.prototype;
                return e.decode = function(w, D) {
                  var I = w.pos, T = l.resolveLength(this.length, w, D);
                  this.length instanceof f && (D = {
                    parent: D,
                    _startOffset: I,
                    _currentOffset: 0,
                    _length: T
                  });
                  var C = new v(this.type, T, w, D);
                  return w.pos += T * this.type.size(null, D), C;
                }, e.size = function(w, D) {
                  return w instanceof v && (w = w.toArray()), y.prototype.size.call(this, w, D);
                }, e.encode = function(w, D, I) {
                  return D instanceof v && (D = D.toArray()), y.prototype.encode.call(this, w, D, I);
                }, g;
              }(n), v = /* @__PURE__ */ function() {
                function y(e, m, w, D) {
                  this.type = e, this.length = m, this.stream = w, this.ctx = D, this.base = this.stream.pos, this.items = [];
                }
                var g = y.prototype;
                return g.get = function(m) {
                  if (!(m < 0 || m >= this.length)) {
                    if (this.items[m] == null) {
                      var w = this.stream.pos;
                      this.stream.pos = this.base + this.type.size(null, this.ctx) * m, this.items[m] = this.type.decode(this.stream, this.ctx), this.stream.pos = w;
                    }
                    return this.items[m];
                  }
                }, g.toArray = function() {
                  for (var m = [], w = 0, D = this.length; w < D; w++)
                    m.push(this.get(w));
                  return m;
                }, g.inspect = function() {
                  return h(this.toArray());
                }, y;
              }();
              u.exports = a;
            }
          ),
          /***/
          61002: (
            /***/
            function(u, d, t) {
              function o(l, c) {
                l.prototype = Object.create(c.prototype), l.prototype.constructor = l, r(l, c);
              }
              function r(l, c) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(a, v) {
                  return a.__proto__ = v, a;
                }, r(l, c);
              }
              var n = t(42092), i = /* @__PURE__ */ function() {
                function l(h, a) {
                  a === void 0 && (a = "BE"), this.type = h, this.endian = a, this.fn = this.type, this.type[this.type.length - 1] !== "8" && (this.fn += this.endian);
                }
                var c = l.prototype;
                return c.size = function() {
                  return n.TYPES[this.type];
                }, c.decode = function(a) {
                  return a["read" + this.fn]();
                }, c.encode = function(a, v) {
                  return a["write" + this.fn](v);
                }, l;
              }();
              d.Number = i, d.uint8 = new i("UInt8"), d.uint16be = d.uint16 = new i("UInt16", "BE"), d.uint16le = new i("UInt16", "LE"), d.uint24be = d.uint24 = new i("UInt24", "BE"), d.uint24le = new i("UInt24", "LE"), d.uint32be = d.uint32 = new i("UInt32", "BE"), d.uint32le = new i("UInt32", "LE"), d.int8 = new i("Int8"), d.int16be = d.int16 = new i("Int16", "BE"), d.int16le = new i("Int16", "LE"), d.int24be = d.int24 = new i("Int24", "BE"), d.int24le = new i("Int24", "LE"), d.int32be = d.int32 = new i("Int32", "BE"), d.int32le = new i("Int32", "LE"), d.floatbe = d.float = new i("Float", "BE"), d.floatle = new i("Float", "LE"), d.doublebe = d.double = new i("Double", "BE"), d.doublele = new i("Double", "LE");
              var f = /* @__PURE__ */ function(l) {
                o(c, l);
                function c(a, v, y) {
                  var g;
                  return y === void 0 && (y = a >> 1), g = l.call(this, "Int" + a, v) || this, g._point = 1 << y, g;
                }
                var h = c.prototype;
                return h.decode = function(v) {
                  return l.prototype.decode.call(this, v) / this._point;
                }, h.encode = function(v, y) {
                  return l.prototype.encode.call(this, v, y * this._point | 0);
                }, c;
              }(i);
              d.Fixed = f, d.fixed16be = d.fixed16 = new f(16, "BE"), d.fixed16le = new f(16, "LE"), d.fixed32be = d.fixed32 = new f(32, "BE"), d.fixed32le = new f(32, "LE");
            }
          ),
          /***/
          11568: (
            /***/
            function(u) {
              var d = /* @__PURE__ */ function() {
                function t(r, n) {
                  n === void 0 && (n = !0), this.type = r, this.condition = n;
                }
                var o = t.prototype;
                return o.decode = function(n, i) {
                  var f = this.condition;
                  if (typeof f == "function" && (f = f.call(i, i)), f)
                    return this.type.decode(n, i);
                }, o.size = function(n, i) {
                  var f = this.condition;
                  return typeof f == "function" && (f = f.call(i, i)), f ? this.type.size(n, i) : 0;
                }, o.encode = function(n, i, f) {
                  var l = this.condition;
                  if (typeof l == "function" && (l = l.call(f, f)), l)
                    return this.type.encode(n, i, f);
                }, t;
              }();
              u.exports = d;
            }
          ),
          /***/
          27309: (
            /***/
            function(u, d, t) {
              var o = t(76959), r = /* @__PURE__ */ function() {
                function i(l, c, h) {
                  if (h === void 0 && (h = {}), this.offsetType = l, this.type = c, this.options = h, this.type === "void" && (this.type = null), this.options.type == null && (this.options.type = "local"), this.options.allowNull == null && (this.options.allowNull = !0), this.options.nullValue == null && (this.options.nullValue = 0), this.options.lazy == null && (this.options.lazy = !1), this.options.relativeTo) {
                    if (typeof this.options.relativeTo != "function")
                      throw new Error("relativeTo option must be a function");
                    this.relativeToGetter = h.relativeTo;
                  }
                }
                var f = i.prototype;
                return f.decode = function(c, h) {
                  var a = this, v = this.offsetType.decode(c, h);
                  if (v === this.options.nullValue && this.options.allowNull)
                    return null;
                  var y;
                  switch (this.options.type) {
                    case "local":
                      y = h._startOffset;
                      break;
                    case "immediate":
                      y = c.pos - this.offsetType.size();
                      break;
                    case "parent":
                      y = h.parent._startOffset;
                      break;
                    default:
                      for (var g = h; g.parent; )
                        g = g.parent;
                      y = g._startOffset || 0;
                  }
                  this.options.relativeTo && (y += this.relativeToGetter(h));
                  var e = v + y;
                  if (this.type != null) {
                    var m = null, w = function() {
                      if (m != null)
                        return m;
                      var I = c.pos;
                      return c.pos = e, m = a.type.decode(c, h), c.pos = I, m;
                    };
                    return this.options.lazy ? new o.PropertyDescriptor({
                      get: w
                    }) : w();
                  } else
                    return e;
                }, f.size = function(c, h) {
                  var a = h;
                  switch (this.options.type) {
                    case "local":
                    case "immediate":
                      break;
                    case "parent":
                      h = h.parent;
                      break;
                    default:
                      for (; h.parent; )
                        h = h.parent;
                  }
                  var v = this.type;
                  if (v == null) {
                    if (!(c instanceof n))
                      throw new Error("Must be a VoidPointer");
                    var y = c;
                    v = y.type, c = c.value;
                  }
                  return c && h && (h.pointerSize += v.size(c, a)), this.offsetType.size();
                }, f.encode = function(c, h, a) {
                  var v, y = a;
                  if (h == null) {
                    this.offsetType.encode(c, this.options.nullValue);
                    return;
                  }
                  switch (this.options.type) {
                    case "local":
                      v = a.startOffset;
                      break;
                    case "immediate":
                      v = c.pos + this.offsetType.size(h, y);
                      break;
                    case "parent":
                      a = a.parent, v = a.startOffset;
                      break;
                    default:
                      for (v = 0; a.parent; )
                        a = a.parent;
                  }
                  this.options.relativeTo && (v += this.relativeToGetter(y.val)), this.offsetType.encode(c, a.pointerOffset - v);
                  var g = this.type;
                  if (g == null) {
                    if (!(h instanceof n))
                      throw new Error("Must be a VoidPointer");
                    var e = h;
                    g = e.type, h = h.value;
                  }
                  return a.pointers.push({
                    type: g,
                    val: h,
                    parent: y
                  }), a.pointerOffset += g.size(h, y);
                }, i;
              }(), n = function(f, l) {
                this.type = f, this.value = l;
              };
              d.Pointer = r, d.VoidPointer = n;
            }
          ),
          /***/
          62211: (
            /***/
            function(u, d, t) {
              t(83382);
              var o = t(76959), r = /* @__PURE__ */ function() {
                function n(f, l) {
                  l === void 0 && (l = 1), this.type = f, this.count = l;
                }
                var i = n.prototype;
                return i.decode = function(l, c) {
                  l.pos += this.size(null, c);
                }, i.size = function(l, c) {
                  var h = o.resolveLength(this.count, null, c);
                  return this.type.size() * h;
                }, i.encode = function(l, c, h) {
                  return l.fill(0, this.size(c, h));
                }, n;
              }();
              u.exports = r;
            }
          ),
          /***/
          69046: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer, r = t(61002), n = r.Number, i = t(76959), f = /* @__PURE__ */ function() {
                function l(h, a) {
                  a === void 0 && (a = "ascii"), this.length = h, this.encoding = a;
                }
                var c = l.prototype;
                return c.decode = function(a, v) {
                  var y, g;
                  if (this.length != null)
                    y = i.resolveLength(this.length, a, v);
                  else {
                    var e;
                    for (e = a.buffer, y = a.length, g = a.pos; g < y && e[g] !== 0; )
                      ++g;
                    y = g - a.pos;
                  }
                  var m = this.encoding;
                  typeof m == "function" && (m = m.call(v, v) || "ascii");
                  var w = a.readString(y, m);
                  return this.length == null && a.pos < a.length && a.pos++, w;
                }, c.size = function(a, v) {
                  if (!a)
                    return i.resolveLength(this.length, null, v);
                  var y = this.encoding;
                  typeof y == "function" && (y = y.call(v?.val, v?.val) || "ascii"), y === "utf16be" && (y = "utf16le");
                  var g = o.byteLength(a, y);
                  return this.length instanceof n && (g += this.length.size()), this.length == null && g++, g;
                }, c.encode = function(a, v, y) {
                  var g = this.encoding;
                  if (typeof g == "function" && (g = g.call(y?.val, y?.val) || "ascii"), this.length instanceof n && this.length.encode(a, o.byteLength(v, g)), a.writeString(v, g), this.length == null)
                    return a.writeUInt8(0);
                }, l;
              }();
              u.exports = f;
            }
          ),
          /***/
          90433: (
            /***/
            function(u, d, t) {
              var o = t(76959), r = /* @__PURE__ */ function() {
                function n(f) {
                  f === void 0 && (f = {}), this.fields = f;
                }
                var i = n.prototype;
                return i.decode = function(l, c, h) {
                  h === void 0 && (h = 0);
                  var a = this._setup(l, c, h);
                  return this._parseFields(l, a, this.fields), this.process != null && this.process.call(a, l), a;
                }, i._setup = function(l, c, h) {
                  var a = {};
                  return Object.defineProperties(a, {
                    parent: {
                      value: c
                    },
                    _startOffset: {
                      value: l.pos
                    },
                    _currentOffset: {
                      value: 0,
                      writable: !0
                    },
                    _length: {
                      value: h
                    }
                  }), a;
                }, i._parseFields = function(l, c, h) {
                  for (var a in h) {
                    var v, y = h[a];
                    typeof y == "function" ? v = y.call(c, c) : v = y.decode(l, c), v !== void 0 && (v instanceof o.PropertyDescriptor ? Object.defineProperty(c, a, v) : c[a] = v), c._currentOffset = l.pos - c._startOffset;
                  }
                }, i.size = function(l, c, h) {
                  l == null && (l = {}), h == null && (h = !0);
                  var a = {
                    parent: c,
                    val: l,
                    pointerSize: 0
                  }, v = 0;
                  for (var y in this.fields) {
                    var g = this.fields[y];
                    g.size != null && (v += g.size(l[y], a));
                  }
                  return h && (v += a.pointerSize), v;
                }, i.encode = function(l, c, h) {
                  var a;
                  this.preEncode != null && this.preEncode.call(c, l);
                  var v = {
                    pointers: [],
                    startOffset: l.pos,
                    parent: h,
                    val: c,
                    pointerSize: 0
                  };
                  v.pointerOffset = l.pos + this.size(c, v, !1);
                  for (var y in this.fields)
                    a = this.fields[y], a.encode != null && a.encode(l, c[y], v);
                  for (var g = 0; g < v.pointers.length; ) {
                    var e = v.pointers[g++];
                    e.type.encode(l, e.val, e.parent);
                  }
                }, n;
              }();
              u.exports = r;
            }
          ),
          /***/
          37529: (
            /***/
            function(u, d, t) {
              t(10853);
              function o(l, c) {
                l.prototype = Object.create(c.prototype), l.prototype.constructor = l, r(l, c);
              }
              function r(l, c) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(a, v) {
                  return a.__proto__ = v, a;
                }, r(l, c);
              }
              var n = t(90433), i = function(c, h) {
                return h.reduce(function(a, v) {
                  return a && a[v];
                }, c);
              }, f = /* @__PURE__ */ function(l) {
                o(c, l);
                function c(a, v) {
                  var y;
                  return v === void 0 && (v = {}), y = l.call(this) || this, y.type = a, y.versions = v, typeof a == "string" && (y.versionPath = a.split(".")), y;
                }
                var h = c.prototype;
                return h.decode = function(v, y, g) {
                  g === void 0 && (g = 0);
                  var e = this._setup(v, y, g);
                  typeof this.type == "string" ? e.version = i(y, this.versionPath) : e.version = this.type.decode(v), this.versions.header && this._parseFields(v, e, this.versions.header);
                  var m = this.versions[e.version];
                  if (m == null)
                    throw new Error("Unknown version " + e.version);
                  return m instanceof c ? m.decode(v, y) : (this._parseFields(v, e, m), this.process != null && this.process.call(e, v), e);
                }, h.size = function(v, y, g) {
                  g === void 0 && (g = !0);
                  var e, m;
                  if (!v)
                    throw new Error("Not a fixed size");
                  var w = {
                    parent: y,
                    val: v,
                    pointerSize: 0
                  }, D = 0;
                  if (typeof this.type != "string" && (D += this.type.size(v.version, w)), this.versions.header)
                    for (e in this.versions.header)
                      m = this.versions.header[e], m.size != null && (D += m.size(v[e], w));
                  var I = this.versions[v.version];
                  if (I == null)
                    throw new Error("Unknown version " + v.version);
                  for (e in I)
                    m = I[e], m.size != null && (D += m.size(v[e], w));
                  return g && (D += w.pointerSize), D;
                }, h.encode = function(v, y, g) {
                  var e, m;
                  this.preEncode != null && this.preEncode.call(y, v);
                  var w = {
                    pointers: [],
                    startOffset: v.pos,
                    parent: g,
                    val: y,
                    pointerSize: 0
                  };
                  if (w.pointerOffset = v.pos + this.size(y, w, !1), typeof this.type != "string" && this.type.encode(v, y.version), this.versions.header)
                    for (e in this.versions.header)
                      m = this.versions.header[e], m.encode != null && m.encode(v, y[e], w);
                  var D = this.versions[y.version];
                  for (e in D)
                    m = D[e], m.encode != null && m.encode(v, y[e], w);
                  for (var I = 0; I < w.pointers.length; ) {
                    var T = w.pointers[I++];
                    T.type.encode(v, T.val, T.parent);
                  }
                }, c;
              }(n);
              u.exports = f;
            }
          ),
          /***/
          76959: (
            /***/
            function(u, d, t) {
              var o = t(61002), r = o.Number;
              d.resolveLength = function(i, f, l) {
                var c;
                if (typeof i == "number" ? c = i : typeof i == "function" ? c = i.call(l, l) : l && typeof i == "string" ? c = l[i] : f && i instanceof r && (c = i.decode(f)), isNaN(c))
                  throw new Error("Not a fixed size");
                return c;
              };
              var n = function(f) {
                f === void 0 && (f = {}), this.enumerable = !0, this.configurable = !0;
                for (var l in f) {
                  var c = f[l];
                  this[l] = c;
                }
              };
              d.PropertyDescriptor = n;
            }
          ),
          /***/
          43060: (
            /***/
            function(u, d, t) {
              /*!
               * The buffer module from node.js, for the browser.
               *
               * @author   Feross Aboukhadijeh <https://feross.org>
               * @license  MIT
               */
              t(26364), t(86632), t(10853), t(54883), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(36501), t(16543), t(33142), t(83382), t(18821), t(33290), t(55862), t(29897), t(39275), t(22321), t(18183), t(19985), t(80174), t(87191), t(42833), t(54994), t(35727);
              function o(st, Y) {
                for (var j = 0; j < Y.length; j++) {
                  var bt = Y[j];
                  bt.enumerable = bt.enumerable || !1, bt.configurable = !0, "value" in bt && (bt.writable = !0), Object.defineProperty(st, n(bt.key), bt);
                }
              }
              function r(st, Y, j) {
                return Y && o(st.prototype, Y), j && o(st, j), Object.defineProperty(st, "prototype", { writable: !1 }), st;
              }
              function n(st) {
                var Y = i(st, "string");
                return typeof Y == "symbol" ? Y : String(Y);
              }
              function i(st, Y) {
                if (typeof st != "object" || !st)
                  return st;
                var j = st[Symbol.toPrimitive];
                if (j !== void 0) {
                  var bt = j.call(st, Y || "default");
                  if (typeof bt != "object")
                    return bt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (Y === "string" ? String : Number)(st);
              }
              function f(st) {
                if (st === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return st;
              }
              function l(st, Y) {
                st.prototype = Object.create(Y.prototype), st.prototype.constructor = st, c(st, Y);
              }
              function c(st, Y) {
                return c = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(bt, at) {
                  return bt.__proto__ = at, bt;
                }, c(st, Y);
              }
              var h = t(5155), a = t(74525), v = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
              d.Buffer = m, d.SlowBuffer = N, d.INSPECT_MAX_BYTES = 50;
              var y = 2147483647;
              d.kMaxLength = y, m.TYPED_ARRAY_SUPPORT = g(), !m.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
              function g() {
                try {
                  var st = new Uint8Array(1), Y = {
                    foo: function() {
                      return 42;
                    }
                  };
                  return Object.setPrototypeOf(Y, Uint8Array.prototype), Object.setPrototypeOf(st, Y), st.foo() === 42;
                } catch {
                  return !1;
                }
              }
              Object.defineProperty(m.prototype, "parent", {
                enumerable: !0,
                get: function() {
                  if (m.isBuffer(this))
                    return this.buffer;
                }
              }), Object.defineProperty(m.prototype, "offset", {
                enumerable: !0,
                get: function() {
                  if (m.isBuffer(this))
                    return this.byteOffset;
                }
              });
              function e(st) {
                if (st > y)
                  throw new RangeError('The value "' + st + '" is invalid for option "size"');
                var Y = new Uint8Array(st);
                return Object.setPrototypeOf(Y, m.prototype), Y;
              }
              function m(st, Y, j) {
                if (typeof st == "number") {
                  if (typeof Y == "string")
                    throw new TypeError('The "string" argument must be of type string. Received type number');
                  return T(st);
                }
                return w(st, Y, j);
              }
              m.poolSize = 8192;
              function w(st, Y, j) {
                if (typeof st == "string")
                  return C(st, Y);
                if (ArrayBuffer.isView(st))
                  return F(st);
                if (st == null)
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof st);
                if (be(st, ArrayBuffer) || st && be(st.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (be(st, SharedArrayBuffer) || st && be(st.buffer, SharedArrayBuffer)))
                  return x(st, Y, j);
                if (typeof st == "number")
                  throw new TypeError('The "value" argument must not be of type number. Received type number');
                var bt = st.valueOf && st.valueOf();
                if (bt != null && bt !== st)
                  return m.from(bt, Y, j);
                var at = P(st);
                if (at)
                  return at;
                if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof st[Symbol.toPrimitive] == "function")
                  return m.from(st[Symbol.toPrimitive]("string"), Y, j);
                throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof st);
              }
              m.from = function(st, Y, j) {
                return w(st, Y, j);
              }, Object.setPrototypeOf(m.prototype, Uint8Array.prototype), Object.setPrototypeOf(m, Uint8Array);
              function D(st) {
                if (typeof st != "number")
                  throw new TypeError('"size" argument must be of type number');
                if (st < 0)
                  throw new RangeError('The value "' + st + '" is invalid for option "size"');
              }
              function I(st, Y, j) {
                return D(st), st <= 0 ? e(st) : Y !== void 0 ? typeof j == "string" ? e(st).fill(Y, j) : e(st).fill(Y) : e(st);
              }
              m.alloc = function(st, Y, j) {
                return I(st, Y, j);
              };
              function T(st) {
                return D(st), e(st < 0 ? 0 : L(st) | 0);
              }
              m.allocUnsafe = function(st) {
                return T(st);
              }, m.allocUnsafeSlow = function(st) {
                return T(st);
              };
              function C(st, Y) {
                if ((typeof Y != "string" || Y === "") && (Y = "utf8"), !m.isEncoding(Y))
                  throw new TypeError("Unknown encoding: " + Y);
                var j = M(st, Y) | 0, bt = e(j), at = bt.write(st, Y);
                return at !== j && (bt = bt.slice(0, at)), bt;
              }
              function E(st) {
                for (var Y = st.length < 0 ? 0 : L(st.length) | 0, j = e(Y), bt = 0; bt < Y; bt += 1)
                  j[bt] = st[bt] & 255;
                return j;
              }
              function F(st) {
                if (be(st, Uint8Array)) {
                  var Y = new Uint8Array(st);
                  return x(Y.buffer, Y.byteOffset, Y.byteLength);
                }
                return E(st);
              }
              function x(st, Y, j) {
                if (Y < 0 || st.byteLength < Y)
                  throw new RangeError('"offset" is outside of buffer bounds');
                if (st.byteLength < Y + (j || 0))
                  throw new RangeError('"length" is outside of buffer bounds');
                var bt;
                return Y === void 0 && j === void 0 ? bt = new Uint8Array(st) : j === void 0 ? bt = new Uint8Array(st, Y) : bt = new Uint8Array(st, Y, j), Object.setPrototypeOf(bt, m.prototype), bt;
              }
              function P(st) {
                if (m.isBuffer(st)) {
                  var Y = L(st.length) | 0, j = e(Y);
                  return j.length === 0 || st.copy(j, 0, 0, Y), j;
                }
                if (st.length !== void 0)
                  return typeof st.length != "number" || Pe(st.length) ? e(0) : E(st);
                if (st.type === "Buffer" && Array.isArray(st.data))
                  return E(st.data);
              }
              function L(st) {
                if (st >= y)
                  throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + y.toString(16) + " bytes");
                return st | 0;
              }
              function N(st) {
                return +st != st && (st = 0), m.alloc(+st);
              }
              m.isBuffer = function(Y) {
                return Y != null && Y._isBuffer === !0 && Y !== m.prototype;
              }, m.compare = function(Y, j) {
                if (be(Y, Uint8Array) && (Y = m.from(Y, Y.offset, Y.byteLength)), be(j, Uint8Array) && (j = m.from(j, j.offset, j.byteLength)), !m.isBuffer(Y) || !m.isBuffer(j))
                  throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (Y === j)
                  return 0;
                for (var bt = Y.length, at = j.length, Wt = 0, _t = Math.min(bt, at); Wt < _t; ++Wt)
                  if (Y[Wt] !== j[Wt]) {
                    bt = Y[Wt], at = j[Wt];
                    break;
                  }
                return bt < at ? -1 : at < bt ? 1 : 0;
              }, m.isEncoding = function(Y) {
                switch (String(Y).toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "latin1":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return !0;
                  default:
                    return !1;
                }
              }, m.concat = function(Y, j) {
                if (!Array.isArray(Y))
                  throw new TypeError('"list" argument must be an Array of Buffers');
                if (Y.length === 0)
                  return m.alloc(0);
                var bt;
                if (j === void 0)
                  for (j = 0, bt = 0; bt < Y.length; ++bt)
                    j += Y[bt].length;
                var at = m.allocUnsafe(j), Wt = 0;
                for (bt = 0; bt < Y.length; ++bt) {
                  var _t = Y[bt];
                  if (be(_t, Uint8Array))
                    Wt + _t.length > at.length ? (m.isBuffer(_t) || (_t = m.from(_t)), _t.copy(at, Wt)) : Uint8Array.prototype.set.call(at, _t, Wt);
                  else if (m.isBuffer(_t))
                    _t.copy(at, Wt);
                  else
                    throw new TypeError('"list" argument must be an Array of Buffers');
                  Wt += _t.length;
                }
                return at;
              };
              function M(st, Y) {
                if (m.isBuffer(st))
                  return st.length;
                if (ArrayBuffer.isView(st) || be(st, ArrayBuffer))
                  return st.byteLength;
                if (typeof st != "string")
                  throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof st);
                var j = st.length, bt = arguments.length > 2 && arguments[2] === !0;
                if (!bt && j === 0)
                  return 0;
                for (var at = !1; ; )
                  switch (Y) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return j;
                    case "utf8":
                    case "utf-8":
                      return we(st).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return j * 2;
                    case "hex":
                      return j >>> 1;
                    case "base64":
                      return le(st).length;
                    default:
                      if (at)
                        return bt ? -1 : we(st).length;
                      Y = ("" + Y).toLowerCase(), at = !0;
                  }
              }
              m.byteLength = M;
              function K(st, Y, j) {
                var bt = !1;
                if ((Y === void 0 || Y < 0) && (Y = 0), Y > this.length || ((j === void 0 || j > this.length) && (j = this.length), j <= 0) || (j >>>= 0, Y >>>= 0, j <= Y))
                  return "";
                for (st || (st = "utf8"); ; )
                  switch (st) {
                    case "hex":
                      return G(this, Y, j);
                    case "utf8":
                    case "utf-8":
                      return Q(this, Y, j);
                    case "ascii":
                      return ot(this, Y, j);
                    case "latin1":
                    case "binary":
                      return mt(this, Y, j);
                    case "base64":
                      return Ut(this, Y, j);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Tt(this, Y, j);
                    default:
                      if (bt)
                        throw new TypeError("Unknown encoding: " + st);
                      st = (st + "").toLowerCase(), bt = !0;
                  }
              }
              m.prototype._isBuffer = !0;
              function ut(st, Y, j) {
                var bt = st[Y];
                st[Y] = st[j], st[j] = bt;
              }
              m.prototype.swap16 = function() {
                var Y = this.length;
                if (Y % 2 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var j = 0; j < Y; j += 2)
                  ut(this, j, j + 1);
                return this;
              }, m.prototype.swap32 = function() {
                var Y = this.length;
                if (Y % 4 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var j = 0; j < Y; j += 4)
                  ut(this, j, j + 3), ut(this, j + 1, j + 2);
                return this;
              }, m.prototype.swap64 = function() {
                var Y = this.length;
                if (Y % 8 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var j = 0; j < Y; j += 8)
                  ut(this, j, j + 7), ut(this, j + 1, j + 6), ut(this, j + 2, j + 5), ut(this, j + 3, j + 4);
                return this;
              }, m.prototype.toString = function() {
                var Y = this.length;
                return Y === 0 ? "" : arguments.length === 0 ? Q(this, 0, Y) : K.apply(this, arguments);
              }, m.prototype.toLocaleString = m.prototype.toString, m.prototype.equals = function(Y) {
                if (!m.isBuffer(Y))
                  throw new TypeError("Argument must be a Buffer");
                return this === Y ? !0 : m.compare(this, Y) === 0;
              }, m.prototype.inspect = function() {
                var Y = "", j = d.INSPECT_MAX_BYTES;
                return Y = this.toString("hex", 0, j).replace(/(.{2})/g, "$1 ").trim(), this.length > j && (Y += " ... "), "<Buffer " + Y + ">";
              }, v && (m.prototype[v] = m.prototype.inspect), m.prototype.compare = function(Y, j, bt, at, Wt) {
                if (be(Y, Uint8Array) && (Y = m.from(Y, Y.offset, Y.byteLength)), !m.isBuffer(Y))
                  throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Y);
                if (j === void 0 && (j = 0), bt === void 0 && (bt = Y ? Y.length : 0), at === void 0 && (at = 0), Wt === void 0 && (Wt = this.length), j < 0 || bt > Y.length || at < 0 || Wt > this.length)
                  throw new RangeError("out of range index");
                if (at >= Wt && j >= bt)
                  return 0;
                if (at >= Wt)
                  return -1;
                if (j >= bt)
                  return 1;
                if (j >>>= 0, bt >>>= 0, at >>>= 0, Wt >>>= 0, this === Y)
                  return 0;
                for (var _t = Wt - at, $ = bt - j, Jt = Math.min(_t, $), te = this.slice(at, Wt), Ct = Y.slice(j, bt), Ht = 0; Ht < Jt; ++Ht)
                  if (te[Ht] !== Ct[Ht]) {
                    _t = te[Ht], $ = Ct[Ht];
                    break;
                  }
                return _t < $ ? -1 : $ < _t ? 1 : 0;
              };
              function J(st, Y, j, bt, at) {
                if (st.length === 0)
                  return -1;
                if (typeof j == "string" ? (bt = j, j = 0) : j > 2147483647 ? j = 2147483647 : j < -2147483648 && (j = -2147483648), j = +j, Pe(j) && (j = at ? 0 : st.length - 1), j < 0 && (j = st.length + j), j >= st.length) {
                  if (at)
                    return -1;
                  j = st.length - 1;
                } else if (j < 0)
                  if (at)
                    j = 0;
                  else
                    return -1;
                if (typeof Y == "string" && (Y = m.from(Y, bt)), m.isBuffer(Y))
                  return Y.length === 0 ? -1 : rt(st, Y, j, bt, at);
                if (typeof Y == "number")
                  return Y = Y & 255, typeof Uint8Array.prototype.indexOf == "function" ? at ? Uint8Array.prototype.indexOf.call(st, Y, j) : Uint8Array.prototype.lastIndexOf.call(st, Y, j) : rt(st, [Y], j, bt, at);
                throw new TypeError("val must be string, number or Buffer");
              }
              function rt(st, Y, j, bt, at) {
                var Wt = 1, _t = st.length, $ = Y.length;
                if (bt !== void 0 && (bt = String(bt).toLowerCase(), bt === "ucs2" || bt === "ucs-2" || bt === "utf16le" || bt === "utf-16le")) {
                  if (st.length < 2 || Y.length < 2)
                    return -1;
                  Wt = 2, _t /= 2, $ /= 2, j /= 2;
                }
                function Jt(Le, De) {
                  return Wt === 1 ? Le[De] : Le.readUInt16BE(De * Wt);
                }
                var te;
                if (at) {
                  var Ct = -1;
                  for (te = j; te < _t; te++)
                    if (Jt(st, te) === Jt(Y, Ct === -1 ? 0 : te - Ct)) {
                      if (Ct === -1 && (Ct = te), te - Ct + 1 === $)
                        return Ct * Wt;
                    } else
                      Ct !== -1 && (te -= te - Ct), Ct = -1;
                } else
                  for (j + $ > _t && (j = _t - $), te = j; te >= 0; te--) {
                    for (var Ht = !0, oe = 0; oe < $; oe++)
                      if (Jt(st, te + oe) !== Jt(Y, oe)) {
                        Ht = !1;
                        break;
                      }
                    if (Ht)
                      return te;
                  }
                return -1;
              }
              m.prototype.includes = function(Y, j, bt) {
                return this.indexOf(Y, j, bt) !== -1;
              }, m.prototype.indexOf = function(Y, j, bt) {
                return J(this, Y, j, bt, !0);
              }, m.prototype.lastIndexOf = function(Y, j, bt) {
                return J(this, Y, j, bt, !1);
              };
              function yt(st, Y, j, bt) {
                j = Number(j) || 0;
                var at = st.length - j;
                bt ? (bt = Number(bt), bt > at && (bt = at)) : bt = at;
                var Wt = Y.length;
                bt > Wt / 2 && (bt = Wt / 2);
                var _t;
                for (_t = 0; _t < bt; ++_t) {
                  var $ = parseInt(Y.substr(_t * 2, 2), 16);
                  if (Pe($))
                    return _t;
                  st[j + _t] = $;
                }
                return _t;
              }
              function xt(st, Y, j, bt) {
                return de(we(Y, st.length - j), st, j, bt);
              }
              function Et(st, Y, j, bt) {
                return de(zt(Y), st, j, bt);
              }
              function Ft(st, Y, j, bt) {
                return de(le(Y), st, j, bt);
              }
              function Rt(st, Y, j, bt) {
                return de(Qt(Y, st.length - j), st, j, bt);
              }
              m.prototype.write = function(Y, j, bt, at) {
                if (j === void 0)
                  at = "utf8", bt = this.length, j = 0;
                else if (bt === void 0 && typeof j == "string")
                  at = j, bt = this.length, j = 0;
                else if (isFinite(j))
                  j = j >>> 0, isFinite(bt) ? (bt = bt >>> 0, at === void 0 && (at = "utf8")) : (at = bt, bt = void 0);
                else
                  throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                var Wt = this.length - j;
                if ((bt === void 0 || bt > Wt) && (bt = Wt), Y.length > 0 && (bt < 0 || j < 0) || j > this.length)
                  throw new RangeError("Attempt to write outside buffer bounds");
                at || (at = "utf8");
                for (var _t = !1; ; )
                  switch (at) {
                    case "hex":
                      return yt(this, Y, j, bt);
                    case "utf8":
                    case "utf-8":
                      return xt(this, Y, j, bt);
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return Et(this, Y, j, bt);
                    case "base64":
                      return Ft(this, Y, j, bt);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Rt(this, Y, j, bt);
                    default:
                      if (_t)
                        throw new TypeError("Unknown encoding: " + at);
                      at = ("" + at).toLowerCase(), _t = !0;
                  }
              }, m.prototype.toJSON = function() {
                return {
                  type: "Buffer",
                  data: Array.prototype.slice.call(this._arr || this, 0)
                };
              };
              function Ut(st, Y, j) {
                return Y === 0 && j === st.length ? h.fromByteArray(st) : h.fromByteArray(st.slice(Y, j));
              }
              function Q(st, Y, j) {
                j = Math.min(st.length, j);
                for (var bt = [], at = Y; at < j; ) {
                  var Wt = st[at], _t = null, $ = Wt > 239 ? 4 : Wt > 223 ? 3 : Wt > 191 ? 2 : 1;
                  if (at + $ <= j) {
                    var Jt = void 0, te = void 0, Ct = void 0, Ht = void 0;
                    switch ($) {
                      case 1:
                        Wt < 128 && (_t = Wt);
                        break;
                      case 2:
                        Jt = st[at + 1], (Jt & 192) === 128 && (Ht = (Wt & 31) << 6 | Jt & 63, Ht > 127 && (_t = Ht));
                        break;
                      case 3:
                        Jt = st[at + 1], te = st[at + 2], (Jt & 192) === 128 && (te & 192) === 128 && (Ht = (Wt & 15) << 12 | (Jt & 63) << 6 | te & 63, Ht > 2047 && (Ht < 55296 || Ht > 57343) && (_t = Ht));
                        break;
                      case 4:
                        Jt = st[at + 1], te = st[at + 2], Ct = st[at + 3], (Jt & 192) === 128 && (te & 192) === 128 && (Ct & 192) === 128 && (Ht = (Wt & 15) << 18 | (Jt & 63) << 12 | (te & 63) << 6 | Ct & 63, Ht > 65535 && Ht < 1114112 && (_t = Ht));
                    }
                  }
                  _t === null ? (_t = 65533, $ = 1) : _t > 65535 && (_t -= 65536, bt.push(_t >>> 10 & 1023 | 55296), _t = 56320 | _t & 1023), bt.push(_t), at += $;
                }
                return ct(bt);
              }
              var pt = 4096;
              function ct(st) {
                var Y = st.length;
                if (Y <= pt)
                  return String.fromCharCode.apply(String, st);
                for (var j = "", bt = 0; bt < Y; )
                  j += String.fromCharCode.apply(String, st.slice(bt, bt += pt));
                return j;
              }
              function ot(st, Y, j) {
                var bt = "";
                j = Math.min(st.length, j);
                for (var at = Y; at < j; ++at)
                  bt += String.fromCharCode(st[at] & 127);
                return bt;
              }
              function mt(st, Y, j) {
                var bt = "";
                j = Math.min(st.length, j);
                for (var at = Y; at < j; ++at)
                  bt += String.fromCharCode(st[at]);
                return bt;
              }
              function G(st, Y, j) {
                var bt = st.length;
                (!Y || Y < 0) && (Y = 0), (!j || j < 0 || j > bt) && (j = bt);
                for (var at = "", Wt = Y; Wt < j; ++Wt)
                  at += Fe[st[Wt]];
                return at;
              }
              function Tt(st, Y, j) {
                for (var bt = st.slice(Y, j), at = "", Wt = 0; Wt < bt.length - 1; Wt += 2)
                  at += String.fromCharCode(bt[Wt] + bt[Wt + 1] * 256);
                return at;
              }
              m.prototype.slice = function(Y, j) {
                var bt = this.length;
                Y = ~~Y, j = j === void 0 ? bt : ~~j, Y < 0 ? (Y += bt, Y < 0 && (Y = 0)) : Y > bt && (Y = bt), j < 0 ? (j += bt, j < 0 && (j = 0)) : j > bt && (j = bt), j < Y && (j = Y);
                var at = this.subarray(Y, j);
                return Object.setPrototypeOf(at, m.prototype), at;
              };
              function z(st, Y, j) {
                if (st % 1 !== 0 || st < 0)
                  throw new RangeError("offset is not uint");
                if (st + Y > j)
                  throw new RangeError("Trying to access beyond buffer length");
              }
              m.prototype.readUintLE = m.prototype.readUIntLE = function(Y, j, bt) {
                Y = Y >>> 0, j = j >>> 0, bt || z(Y, j, this.length);
                for (var at = this[Y], Wt = 1, _t = 0; ++_t < j && (Wt *= 256); )
                  at += this[Y + _t] * Wt;
                return at;
              }, m.prototype.readUintBE = m.prototype.readUIntBE = function(Y, j, bt) {
                Y = Y >>> 0, j = j >>> 0, bt || z(Y, j, this.length);
                for (var at = this[Y + --j], Wt = 1; j > 0 && (Wt *= 256); )
                  at += this[Y + --j] * Wt;
                return at;
              }, m.prototype.readUint8 = m.prototype.readUInt8 = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 1, this.length), this[Y];
              }, m.prototype.readUint16LE = m.prototype.readUInt16LE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 2, this.length), this[Y] | this[Y + 1] << 8;
              }, m.prototype.readUint16BE = m.prototype.readUInt16BE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 2, this.length), this[Y] << 8 | this[Y + 1];
              }, m.prototype.readUint32LE = m.prototype.readUInt32LE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), (this[Y] | this[Y + 1] << 8 | this[Y + 2] << 16) + this[Y + 3] * 16777216;
              }, m.prototype.readUint32BE = m.prototype.readUInt32BE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), this[Y] * 16777216 + (this[Y + 1] << 16 | this[Y + 2] << 8 | this[Y + 3]);
              }, m.prototype.readBigUInt64LE = It(function(Y) {
                Y = Y >>> 0, ae(Y, "offset");
                var j = this[Y], bt = this[Y + 7];
                (j === void 0 || bt === void 0) && Ae(Y, this.length - 8);
                var at = j + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 24), Wt = this[++Y] + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + bt * Math.pow(2, 24);
                return BigInt(at) + (BigInt(Wt) << BigInt(32));
              }), m.prototype.readBigUInt64BE = It(function(Y) {
                Y = Y >>> 0, ae(Y, "offset");
                var j = this[Y], bt = this[Y + 7];
                (j === void 0 || bt === void 0) && Ae(Y, this.length - 8);
                var at = j * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + this[++Y], Wt = this[++Y] * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + bt;
                return (BigInt(at) << BigInt(32)) + BigInt(Wt);
              }), m.prototype.readIntLE = function(Y, j, bt) {
                Y = Y >>> 0, j = j >>> 0, bt || z(Y, j, this.length);
                for (var at = this[Y], Wt = 1, _t = 0; ++_t < j && (Wt *= 256); )
                  at += this[Y + _t] * Wt;
                return Wt *= 128, at >= Wt && (at -= Math.pow(2, 8 * j)), at;
              }, m.prototype.readIntBE = function(Y, j, bt) {
                Y = Y >>> 0, j = j >>> 0, bt || z(Y, j, this.length);
                for (var at = j, Wt = 1, _t = this[Y + --at]; at > 0 && (Wt *= 256); )
                  _t += this[Y + --at] * Wt;
                return Wt *= 128, _t >= Wt && (_t -= Math.pow(2, 8 * j)), _t;
              }, m.prototype.readInt8 = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 1, this.length), this[Y] & 128 ? (255 - this[Y] + 1) * -1 : this[Y];
              }, m.prototype.readInt16LE = function(Y, j) {
                Y = Y >>> 0, j || z(Y, 2, this.length);
                var bt = this[Y] | this[Y + 1] << 8;
                return bt & 32768 ? bt | 4294901760 : bt;
              }, m.prototype.readInt16BE = function(Y, j) {
                Y = Y >>> 0, j || z(Y, 2, this.length);
                var bt = this[Y + 1] | this[Y] << 8;
                return bt & 32768 ? bt | 4294901760 : bt;
              }, m.prototype.readInt32LE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), this[Y] | this[Y + 1] << 8 | this[Y + 2] << 16 | this[Y + 3] << 24;
              }, m.prototype.readInt32BE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), this[Y] << 24 | this[Y + 1] << 16 | this[Y + 2] << 8 | this[Y + 3];
              }, m.prototype.readBigInt64LE = It(function(Y) {
                Y = Y >>> 0, ae(Y, "offset");
                var j = this[Y], bt = this[Y + 7];
                (j === void 0 || bt === void 0) && Ae(Y, this.length - 8);
                var at = this[Y + 4] + this[Y + 5] * Math.pow(2, 8) + this[Y + 6] * Math.pow(2, 16) + (bt << 24);
                return (BigInt(at) << BigInt(32)) + BigInt(j + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 24));
              }), m.prototype.readBigInt64BE = It(function(Y) {
                Y = Y >>> 0, ae(Y, "offset");
                var j = this[Y], bt = this[Y + 7];
                (j === void 0 || bt === void 0) && Ae(Y, this.length - 8);
                var at = (j << 24) + // Overflow
                this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + this[++Y];
                return (BigInt(at) << BigInt(32)) + BigInt(this[++Y] * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + bt);
              }), m.prototype.readFloatLE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), a.read(this, Y, !0, 23, 4);
              }, m.prototype.readFloatBE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), a.read(this, Y, !1, 23, 4);
              }, m.prototype.readDoubleLE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 8, this.length), a.read(this, Y, !0, 52, 8);
              }, m.prototype.readDoubleBE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 8, this.length), a.read(this, Y, !1, 52, 8);
              };
              function S(st, Y, j, bt, at, Wt) {
                if (!m.isBuffer(st))
                  throw new TypeError('"buffer" argument must be a Buffer instance');
                if (Y > at || Y < Wt)
                  throw new RangeError('"value" argument is out of bounds');
                if (j + bt > st.length)
                  throw new RangeError("Index out of range");
              }
              m.prototype.writeUintLE = m.prototype.writeUIntLE = function(Y, j, bt, at) {
                if (Y = +Y, j = j >>> 0, bt = bt >>> 0, !at) {
                  var Wt = Math.pow(2, 8 * bt) - 1;
                  S(this, Y, j, bt, Wt, 0);
                }
                var _t = 1, $ = 0;
                for (this[j] = Y & 255; ++$ < bt && (_t *= 256); )
                  this[j + $] = Y / _t & 255;
                return j + bt;
              }, m.prototype.writeUintBE = m.prototype.writeUIntBE = function(Y, j, bt, at) {
                if (Y = +Y, j = j >>> 0, bt = bt >>> 0, !at) {
                  var Wt = Math.pow(2, 8 * bt) - 1;
                  S(this, Y, j, bt, Wt, 0);
                }
                var _t = bt - 1, $ = 1;
                for (this[j + _t] = Y & 255; --_t >= 0 && ($ *= 256); )
                  this[j + _t] = Y / $ & 255;
                return j + bt;
              }, m.prototype.writeUint8 = m.prototype.writeUInt8 = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 1, 255, 0), this[j] = Y & 255, j + 1;
              }, m.prototype.writeUint16LE = m.prototype.writeUInt16LE = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 2, 65535, 0), this[j] = Y & 255, this[j + 1] = Y >>> 8, j + 2;
              }, m.prototype.writeUint16BE = m.prototype.writeUInt16BE = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 2, 65535, 0), this[j] = Y >>> 8, this[j + 1] = Y & 255, j + 2;
              }, m.prototype.writeUint32LE = m.prototype.writeUInt32LE = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 4, 4294967295, 0), this[j + 3] = Y >>> 24, this[j + 2] = Y >>> 16, this[j + 1] = Y >>> 8, this[j] = Y & 255, j + 4;
              }, m.prototype.writeUint32BE = m.prototype.writeUInt32BE = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 4, 4294967295, 0), this[j] = Y >>> 24, this[j + 1] = Y >>> 16, this[j + 2] = Y >>> 8, this[j + 3] = Y & 255, j + 4;
              };
              function k(st, Y, j, bt, at) {
                Dt(Y, bt, at, st, j, 7);
                var Wt = Number(Y & BigInt(4294967295));
                st[j++] = Wt, Wt = Wt >> 8, st[j++] = Wt, Wt = Wt >> 8, st[j++] = Wt, Wt = Wt >> 8, st[j++] = Wt;
                var _t = Number(Y >> BigInt(32) & BigInt(4294967295));
                return st[j++] = _t, _t = _t >> 8, st[j++] = _t, _t = _t >> 8, st[j++] = _t, _t = _t >> 8, st[j++] = _t, j;
              }
              function V(st, Y, j, bt, at) {
                Dt(Y, bt, at, st, j, 7);
                var Wt = Number(Y & BigInt(4294967295));
                st[j + 7] = Wt, Wt = Wt >> 8, st[j + 6] = Wt, Wt = Wt >> 8, st[j + 5] = Wt, Wt = Wt >> 8, st[j + 4] = Wt;
                var _t = Number(Y >> BigInt(32) & BigInt(4294967295));
                return st[j + 3] = _t, _t = _t >> 8, st[j + 2] = _t, _t = _t >> 8, st[j + 1] = _t, _t = _t >> 8, st[j] = _t, j + 8;
              }
              m.prototype.writeBigUInt64LE = It(function(Y, j) {
                return j === void 0 && (j = 0), k(this, Y, j, BigInt(0), BigInt("0xffffffffffffffff"));
              }), m.prototype.writeBigUInt64BE = It(function(Y, j) {
                return j === void 0 && (j = 0), V(this, Y, j, BigInt(0), BigInt("0xffffffffffffffff"));
              }), m.prototype.writeIntLE = function(Y, j, bt, at) {
                if (Y = +Y, j = j >>> 0, !at) {
                  var Wt = Math.pow(2, 8 * bt - 1);
                  S(this, Y, j, bt, Wt - 1, -Wt);
                }
                var _t = 0, $ = 1, Jt = 0;
                for (this[j] = Y & 255; ++_t < bt && ($ *= 256); )
                  Y < 0 && Jt === 0 && this[j + _t - 1] !== 0 && (Jt = 1), this[j + _t] = (Y / $ >> 0) - Jt & 255;
                return j + bt;
              }, m.prototype.writeIntBE = function(Y, j, bt, at) {
                if (Y = +Y, j = j >>> 0, !at) {
                  var Wt = Math.pow(2, 8 * bt - 1);
                  S(this, Y, j, bt, Wt - 1, -Wt);
                }
                var _t = bt - 1, $ = 1, Jt = 0;
                for (this[j + _t] = Y & 255; --_t >= 0 && ($ *= 256); )
                  Y < 0 && Jt === 0 && this[j + _t + 1] !== 0 && (Jt = 1), this[j + _t] = (Y / $ >> 0) - Jt & 255;
                return j + bt;
              }, m.prototype.writeInt8 = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 1, 127, -128), Y < 0 && (Y = 255 + Y + 1), this[j] = Y & 255, j + 1;
              }, m.prototype.writeInt16LE = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 2, 32767, -32768), this[j] = Y & 255, this[j + 1] = Y >>> 8, j + 2;
              }, m.prototype.writeInt16BE = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 2, 32767, -32768), this[j] = Y >>> 8, this[j + 1] = Y & 255, j + 2;
              }, m.prototype.writeInt32LE = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 4, 2147483647, -2147483648), this[j] = Y & 255, this[j + 1] = Y >>> 8, this[j + 2] = Y >>> 16, this[j + 3] = Y >>> 24, j + 4;
              }, m.prototype.writeInt32BE = function(Y, j, bt) {
                return Y = +Y, j = j >>> 0, bt || S(this, Y, j, 4, 2147483647, -2147483648), Y < 0 && (Y = 4294967295 + Y + 1), this[j] = Y >>> 24, this[j + 1] = Y >>> 16, this[j + 2] = Y >>> 8, this[j + 3] = Y & 255, j + 4;
              }, m.prototype.writeBigInt64LE = It(function(Y, j) {
                return j === void 0 && (j = 0), k(this, Y, j, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
              }), m.prototype.writeBigInt64BE = It(function(Y, j) {
                return j === void 0 && (j = 0), V(this, Y, j, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
              });
              function it(st, Y, j, bt, at, Wt) {
                if (j + bt > st.length)
                  throw new RangeError("Index out of range");
                if (j < 0)
                  throw new RangeError("Index out of range");
              }
              function tt(st, Y, j, bt, at) {
                return Y = +Y, j = j >>> 0, at || it(st, Y, j, 4), a.write(st, Y, j, bt, 23, 4), j + 4;
              }
              m.prototype.writeFloatLE = function(Y, j, bt) {
                return tt(this, Y, j, !0, bt);
              }, m.prototype.writeFloatBE = function(Y, j, bt) {
                return tt(this, Y, j, !1, bt);
              };
              function _(st, Y, j, bt, at) {
                return Y = +Y, j = j >>> 0, at || it(st, Y, j, 8), a.write(st, Y, j, bt, 52, 8), j + 8;
              }
              m.prototype.writeDoubleLE = function(Y, j, bt) {
                return _(this, Y, j, !0, bt);
              }, m.prototype.writeDoubleBE = function(Y, j, bt) {
                return _(this, Y, j, !1, bt);
              }, m.prototype.copy = function(Y, j, bt, at) {
                if (!m.isBuffer(Y))
                  throw new TypeError("argument should be a Buffer");
                if (bt || (bt = 0), !at && at !== 0 && (at = this.length), j >= Y.length && (j = Y.length), j || (j = 0), at > 0 && at < bt && (at = bt), at === bt || Y.length === 0 || this.length === 0)
                  return 0;
                if (j < 0)
                  throw new RangeError("targetStart out of bounds");
                if (bt < 0 || bt >= this.length)
                  throw new RangeError("Index out of range");
                if (at < 0)
                  throw new RangeError("sourceEnd out of bounds");
                at > this.length && (at = this.length), Y.length - j < at - bt && (at = Y.length - j + bt);
                var Wt = at - bt;
                return this === Y && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(j, bt, at) : Uint8Array.prototype.set.call(Y, this.subarray(bt, at), j), Wt;
              }, m.prototype.fill = function(Y, j, bt, at) {
                if (typeof Y == "string") {
                  if (typeof j == "string" ? (at = j, j = 0, bt = this.length) : typeof bt == "string" && (at = bt, bt = this.length), at !== void 0 && typeof at != "string")
                    throw new TypeError("encoding must be a string");
                  if (typeof at == "string" && !m.isEncoding(at))
                    throw new TypeError("Unknown encoding: " + at);
                  if (Y.length === 1) {
                    var Wt = Y.charCodeAt(0);
                    (at === "utf8" && Wt < 128 || at === "latin1") && (Y = Wt);
                  }
                } else
                  typeof Y == "number" ? Y = Y & 255 : typeof Y == "boolean" && (Y = Number(Y));
                if (j < 0 || this.length < j || this.length < bt)
                  throw new RangeError("Out of range index");
                if (bt <= j)
                  return this;
                j = j >>> 0, bt = bt === void 0 ? this.length : bt >>> 0, Y || (Y = 0);
                var _t;
                if (typeof Y == "number")
                  for (_t = j; _t < bt; ++_t)
                    this[_t] = Y;
                else {
                  var $ = m.isBuffer(Y) ? Y : m.from(Y, at), Jt = $.length;
                  if (Jt === 0)
                    throw new TypeError('The value "' + Y + '" is invalid for argument "value"');
                  for (_t = 0; _t < bt - j; ++_t)
                    this[_t + j] = $[_t % Jt];
                }
                return this;
              };
              var At = {};
              function Lt(st, Y, j) {
                At[st] = /* @__PURE__ */ function(bt) {
                  l(at, bt);
                  function at() {
                    var _t;
                    return _t = bt.call(this) || this, Object.defineProperty(f(_t), "message", {
                      value: Y.apply(f(_t), arguments),
                      writable: !0,
                      configurable: !0
                    }), _t.name = _t.name + " [" + st + "]", _t.stack, delete _t.name, _t;
                  }
                  var Wt = at.prototype;
                  return Wt.toString = function() {
                    return this.name + " [" + st + "]: " + this.message;
                  }, r(at, [{
                    key: "code",
                    get: function() {
                      return st;
                    },
                    set: function($) {
                      Object.defineProperty(this, "code", {
                        configurable: !0,
                        enumerable: !0,
                        value: $,
                        writable: !0
                      });
                    }
                  }]), at;
                }(j);
              }
              Lt("ERR_BUFFER_OUT_OF_BOUNDS", function(st) {
                return st ? st + " is outside of buffer bounds" : "Attempt to access memory outside buffer bounds";
              }, RangeError), Lt("ERR_INVALID_ARG_TYPE", function(st, Y) {
                return 'The "' + st + '" argument must be of type number. Received type ' + typeof Y;
              }, TypeError), Lt("ERR_OUT_OF_RANGE", function(st, Y, j) {
                var bt = 'The value of "' + st + '" is out of range.', at = j;
                return Number.isInteger(j) && Math.abs(j) > Math.pow(2, 32) ? at = Yt(String(j)) : typeof j == "bigint" && (at = String(j), (j > Math.pow(BigInt(2), BigInt(32)) || j < -Math.pow(BigInt(2), BigInt(32))) && (at = Yt(at)), at += "n"), bt += " It must be " + Y + ". Received " + at, bt;
              }, RangeError);
              function Yt(st) {
                for (var Y = "", j = st.length, bt = st[0] === "-" ? 1 : 0; j >= bt + 4; j -= 3)
                  Y = "_" + st.slice(j - 3, j) + Y;
                return "" + st.slice(0, j) + Y;
              }
              function Gt(st, Y, j) {
                ae(Y, "offset"), (st[Y] === void 0 || st[Y + j] === void 0) && Ae(Y, st.length - (j + 1));
              }
              function Dt(st, Y, j, bt, at, Wt) {
                if (st > j || st < Y) {
                  var _t = typeof Y == "bigint" ? "n" : "", $;
                  throw Wt > 3 ? Y === 0 || Y === BigInt(0) ? $ = ">= 0" + _t + " and < 2" + _t + " ** " + (Wt + 1) * 8 + _t : $ = ">= -(2" + _t + " ** " + ((Wt + 1) * 8 - 1) + _t + ") and < 2 ** " + ("" + ((Wt + 1) * 8 - 1) + _t) : $ = ">= " + Y + _t + " and <= " + j + _t, new At.ERR_OUT_OF_RANGE("value", $, st);
                }
                Gt(bt, at, Wt);
              }
              function ae(st, Y) {
                if (typeof st != "number")
                  throw new At.ERR_INVALID_ARG_TYPE(Y, "number", st);
              }
              function Ae(st, Y, j) {
                throw Math.floor(st) !== st ? (ae(st, j), new At.ERR_OUT_OF_RANGE(j || "offset", "an integer", st)) : Y < 0 ? new At.ERR_BUFFER_OUT_OF_BOUNDS() : new At.ERR_OUT_OF_RANGE(j || "offset", ">= " + (j ? 1 : 0) + " and <= " + Y, st);
              }
              var xe = /[^+/0-9A-Za-z-_]/g;
              function ce(st) {
                if (st = st.split("=")[0], st = st.trim().replace(xe, ""), st.length < 2)
                  return "";
                for (; st.length % 4 !== 0; )
                  st = st + "=";
                return st;
              }
              function we(st, Y) {
                Y = Y || 1 / 0;
                for (var j, bt = st.length, at = null, Wt = [], _t = 0; _t < bt; ++_t) {
                  if (j = st.charCodeAt(_t), j > 55295 && j < 57344) {
                    if (!at) {
                      if (j > 56319) {
                        (Y -= 3) > -1 && Wt.push(239, 191, 189);
                        continue;
                      } else if (_t + 1 === bt) {
                        (Y -= 3) > -1 && Wt.push(239, 191, 189);
                        continue;
                      }
                      at = j;
                      continue;
                    }
                    if (j < 56320) {
                      (Y -= 3) > -1 && Wt.push(239, 191, 189), at = j;
                      continue;
                    }
                    j = (at - 55296 << 10 | j - 56320) + 65536;
                  } else
                    at && (Y -= 3) > -1 && Wt.push(239, 191, 189);
                  if (at = null, j < 128) {
                    if ((Y -= 1) < 0)
                      break;
                    Wt.push(j);
                  } else if (j < 2048) {
                    if ((Y -= 2) < 0)
                      break;
                    Wt.push(j >> 6 | 192, j & 63 | 128);
                  } else if (j < 65536) {
                    if ((Y -= 3) < 0)
                      break;
                    Wt.push(j >> 12 | 224, j >> 6 & 63 | 128, j & 63 | 128);
                  } else if (j < 1114112) {
                    if ((Y -= 4) < 0)
                      break;
                    Wt.push(j >> 18 | 240, j >> 12 & 63 | 128, j >> 6 & 63 | 128, j & 63 | 128);
                  } else
                    throw new Error("Invalid code point");
                }
                return Wt;
              }
              function zt(st) {
                for (var Y = [], j = 0; j < st.length; ++j)
                  Y.push(st.charCodeAt(j) & 255);
                return Y;
              }
              function Qt(st, Y) {
                for (var j, bt, at, Wt = [], _t = 0; _t < st.length && !((Y -= 2) < 0); ++_t)
                  j = st.charCodeAt(_t), bt = j >> 8, at = j % 256, Wt.push(at), Wt.push(bt);
                return Wt;
              }
              function le(st) {
                return h.toByteArray(ce(st));
              }
              function de(st, Y, j, bt) {
                var at;
                for (at = 0; at < bt && !(at + j >= Y.length || at >= st.length); ++at)
                  Y[at + j] = st[at];
                return at;
              }
              function be(st, Y) {
                return st instanceof Y || st != null && st.constructor != null && st.constructor.name != null && st.constructor.name === Y.name;
              }
              function Pe(st) {
                return st !== st;
              }
              var Fe = function() {
                for (var st = "0123456789abcdef", Y = new Array(256), j = 0; j < 16; ++j)
                  for (var bt = j * 16, at = 0; at < 16; ++at)
                    Y[bt + at] = st[j] + st[at];
                return Y;
              }();
              function It(st) {
                return typeof BigInt > "u" ? fe : st;
              }
              function fe() {
                throw new Error("BigInt not supported");
              }
            }
          ),
          /***/
          20724: (
            /***/
            function(u, d, t) {
              t(36501), t(10853), u.exports = typeof ArrayBuffer < "u" && typeof DataView < "u";
            }
          ),
          /***/
          32590: (
            /***/
            function(u, d, t) {
              var o = t(20724), r = t(7493), n = t(98363), i = t(75277), f = t(52786), l = t(24792), c = t(36994), h = t(28768), a = t(45899), v = t(35974), y = t(86385).f, g = t(32010), e = t(12654), m = t(22412), w = t(52280), D = t(34524), I = n.Int8Array, T = I && I.prototype, C = n.Uint8ClampedArray, E = C && C.prototype, F = I && e(I), x = T && e(T), P = Object.prototype, L = n.TypeError, N = w("toStringTag"), M = D("TYPED_ARRAY_TAG"), K = D("TYPED_ARRAY_CONSTRUCTOR"), ut = o && !!m && c(n.opera) !== "Opera", J = !1, rt, yt, xt, Et = {
                Int8Array: 1,
                Uint8Array: 1,
                Uint8ClampedArray: 1,
                Int16Array: 2,
                Uint16Array: 2,
                Int32Array: 4,
                Uint32Array: 4,
                Float32Array: 4,
                Float64Array: 8
              }, Ft = {
                BigInt64Array: 8,
                BigUint64Array: 8
              }, Rt = function(G) {
                if (!f(G))
                  return !1;
                var Tt = c(G);
                return Tt === "DataView" || l(Et, Tt) || l(Ft, Tt);
              }, Ut = function(G) {
                if (!f(G))
                  return !1;
                var Tt = c(G);
                return l(Et, Tt) || l(Ft, Tt);
              }, Q = function(G) {
                if (Ut(G))
                  return G;
                throw L("Target is not a typed array");
              }, pt = function(G) {
                if (i(G) && (!m || g(F, G)))
                  return G;
                throw L(h(G) + " is not a typed array constructor");
              }, ct = function(G, Tt, z) {
                if (r) {
                  if (z)
                    for (var S in Et) {
                      var k = n[S];
                      if (k && l(k.prototype, G))
                        try {
                          delete k.prototype[G];
                        } catch {
                        }
                    }
                  (!x[G] || z) && v(x, G, z ? Tt : ut && T[G] || Tt);
                }
              }, ot = function(G, Tt, z) {
                var S, k;
                if (r) {
                  if (m) {
                    if (z) {
                      for (S in Et)
                        if (k = n[S], k && l(k, G))
                          try {
                            delete k[G];
                          } catch {
                          }
                    }
                    if (!F[G] || z)
                      try {
                        return v(F, G, z ? Tt : ut && F[G] || Tt);
                      } catch {
                      }
                    else
                      return;
                  }
                  for (S in Et)
                    k = n[S], k && (!k[G] || z) && v(k, G, Tt);
                }
              };
              for (rt in Et)
                yt = n[rt], xt = yt && yt.prototype, xt ? a(xt, K, yt) : ut = !1;
              for (rt in Ft)
                yt = n[rt], xt = yt && yt.prototype, xt && a(xt, K, yt);
              if ((!ut || !i(F) || F === Function.prototype) && (F = function() {
                throw L("Incorrect invocation");
              }, ut))
                for (rt in Et)
                  n[rt] && m(n[rt], F);
              if ((!ut || !x || x === P) && (x = F.prototype, ut))
                for (rt in Et)
                  n[rt] && m(n[rt].prototype, x);
              if (ut && e(E) !== x && m(E, x), r && !l(x, N)) {
                J = !0, y(x, N, {
                  get: function() {
                    return f(this) ? this[M] : void 0;
                  }
                });
                for (rt in Et)
                  n[rt] && a(n[rt], M, rt);
              }
              u.exports = {
                NATIVE_ARRAY_BUFFER_VIEWS: ut,
                TYPED_ARRAY_CONSTRUCTOR: K,
                TYPED_ARRAY_TAG: J && M,
                aTypedArray: Q,
                aTypedArrayConstructor: pt,
                exportTypedArrayMethod: ct,
                exportTypedArrayStaticMethod: ot,
                isView: Rt,
                isTypedArray: Ut,
                TypedArray: F,
                TypedArrayPrototype: x
              };
            }
          ),
          /***/
          74510: (
            /***/
            function(u, d, t) {
              t(54994);
              var o = t(98363), r = t(88697), n = t(7493), i = t(20724), f = t(55316), l = t(45899), c = t(7592), h = t(79044), a = t(9519), v = t(14229), y = t(35108), g = t(27302), e = t(45489), m = t(12654), w = t(22412), D = t(87994).f, I = t(86385).f, T = t(55522), C = t(15629), E = t(60878), F = t(20821), x = f.PROPER, P = f.CONFIGURABLE, L = F.get, N = F.set, M = "ArrayBuffer", K = "DataView", ut = "prototype", J = "Wrong length", rt = "Wrong index", yt = o[M], xt = yt, Et = xt && xt[ut], Ft = o[K], Rt = Ft && Ft[ut], Ut = Object.prototype, Q = o.Array, pt = o.RangeError, ct = r(T), ot = r([].reverse), mt = e.pack, G = e.unpack, Tt = function(ce) {
                return [ce & 255];
              }, z = function(ce) {
                return [ce & 255, ce >> 8 & 255];
              }, S = function(ce) {
                return [ce & 255, ce >> 8 & 255, ce >> 16 & 255, ce >> 24 & 255];
              }, k = function(ce) {
                return ce[3] << 24 | ce[2] << 16 | ce[1] << 8 | ce[0];
              }, V = function(ce) {
                return mt(ce, 23, 4);
              }, it = function(ce) {
                return mt(ce, 52, 8);
              }, tt = function(ce, we) {
                I(ce[ut], we, {
                  get: function() {
                    return L(this)[we];
                  }
                });
              }, _ = function(ce, we, zt, Qt) {
                var le = g(zt), de = L(ce);
                if (le + we > de.byteLength)
                  throw pt(rt);
                var be = L(de.buffer).bytes, Pe = le + de.byteOffset, Fe = C(be, Pe, Pe + we);
                return Qt ? Fe : ot(Fe);
              }, At = function(ce, we, zt, Qt, le, de) {
                var be = g(zt), Pe = L(ce);
                if (be + we > Pe.byteLength)
                  throw pt(rt);
                for (var Fe = L(Pe.buffer).bytes, It = be + Pe.byteOffset, fe = Qt(+le), st = 0; st < we; st++)
                  Fe[It + st] = fe[de ? st : we - st - 1];
              };
              if (!i)
                xt = function(ce) {
                  a(this, Et);
                  var we = g(ce);
                  N(this, {
                    bytes: ct(Q(we), 0),
                    byteLength: we
                  }), n || (this.byteLength = we);
                }, Et = xt[ut], Ft = function(ce, we, zt) {
                  a(this, Rt), a(ce, Et);
                  var Qt = L(ce).byteLength, le = v(we);
                  if (le < 0 || le > Qt)
                    throw pt("Wrong offset");
                  if (zt = zt === void 0 ? Qt - le : y(zt), le + zt > Qt)
                    throw pt(J);
                  N(this, {
                    buffer: ce,
                    byteLength: zt,
                    byteOffset: le
                  }), n || (this.buffer = ce, this.byteLength = zt, this.byteOffset = le);
                }, Rt = Ft[ut], n && (tt(xt, "byteLength"), tt(Ft, "buffer"), tt(Ft, "byteLength"), tt(Ft, "byteOffset")), c(Rt, {
                  getInt8: function(ce) {
                    return _(this, 1, ce)[0] << 24 >> 24;
                  },
                  getUint8: function(ce) {
                    return _(this, 1, ce)[0];
                  },
                  getInt16: function(ce) {
                    var we = _(this, 2, ce, arguments.length > 1 ? arguments[1] : void 0);
                    return (we[1] << 8 | we[0]) << 16 >> 16;
                  },
                  getUint16: function(ce) {
                    var we = _(this, 2, ce, arguments.length > 1 ? arguments[1] : void 0);
                    return we[1] << 8 | we[0];
                  },
                  getInt32: function(ce) {
                    return k(_(this, 4, ce, arguments.length > 1 ? arguments[1] : void 0));
                  },
                  getUint32: function(ce) {
                    return k(_(this, 4, ce, arguments.length > 1 ? arguments[1] : void 0)) >>> 0;
                  },
                  getFloat32: function(ce) {
                    return G(_(this, 4, ce, arguments.length > 1 ? arguments[1] : void 0), 23);
                  },
                  getFloat64: function(ce) {
                    return G(_(this, 8, ce, arguments.length > 1 ? arguments[1] : void 0), 52);
                  },
                  setInt8: function(ce, we) {
                    At(this, 1, ce, Tt, we);
                  },
                  setUint8: function(ce, we) {
                    At(this, 1, ce, Tt, we);
                  },
                  setInt16: function(ce, we) {
                    At(this, 2, ce, z, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setUint16: function(ce, we) {
                    At(this, 2, ce, z, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setInt32: function(ce, we) {
                    At(this, 4, ce, S, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setUint32: function(ce, we) {
                    At(this, 4, ce, S, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setFloat32: function(ce, we) {
                    At(this, 4, ce, V, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setFloat64: function(ce, we) {
                    At(this, 8, ce, it, we, arguments.length > 2 ? arguments[2] : void 0);
                  }
                });
              else {
                var Lt = x && yt.name !== M;
                if (!h(function() {
                  yt(1);
                }) || !h(function() {
                  new yt(-1);
                }) || h(function() {
                  return new yt(), new yt(1.5), new yt(NaN), Lt && !P;
                })) {
                  xt = function(ce) {
                    return a(this, Et), new yt(g(ce));
                  }, xt[ut] = Et;
                  for (var Yt = D(yt), Gt = 0, Dt; Yt.length > Gt; )
                    (Dt = Yt[Gt++]) in xt || l(xt, Dt, yt[Dt]);
                  Et.constructor = xt;
                } else
                  Lt && P && l(yt, "name", M);
                w && m(Rt) !== Ut && w(Rt, Ut);
                var ae = new Ft(new xt(2)), Ae = r(Rt.setInt8);
                ae.setInt8(0, 2147483648), ae.setInt8(1, 2147483649), (ae.getInt8(0) || !ae.getInt8(1)) && c(Rt, {
                  setInt8: function(ce, we) {
                    Ae(this, ce, we << 24 >> 24);
                  },
                  setUint8: function(ce, we) {
                    Ae(this, ce, we << 24 >> 24);
                  }
                }, {
                  unsafe: !0
                });
              }
              E(xt, M), E(Ft, K), u.exports = {
                ArrayBuffer: xt,
                DataView: Ft
              };
            }
          ),
          /***/
          36501: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(74510), i = t(57323), f = "ArrayBuffer", l = n[f], c = r[f];
              o({
                global: !0,
                forced: c !== l
              }, {
                ArrayBuffer: l
              }), i(f);
            }
          ),
          /***/
          22449: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.BlockCipher, f = r.algo, l = [], c = [], h = [], a = [], v = [], y = [], g = [], e = [], m = [], w = [];
                  (function() {
                    for (var T = [], C = 0; C < 256; C++)
                      C < 128 ? T[C] = C << 1 : T[C] = C << 1 ^ 283;
                    for (var E = 0, F = 0, C = 0; C < 256; C++) {
                      var x = F ^ F << 1 ^ F << 2 ^ F << 3 ^ F << 4;
                      x = x >>> 8 ^ x & 255 ^ 99, l[E] = x, c[x] = E;
                      var P = T[E], L = T[P], N = T[L], M = T[x] * 257 ^ x * 16843008;
                      h[E] = M << 24 | M >>> 8, a[E] = M << 16 | M >>> 16, v[E] = M << 8 | M >>> 24, y[E] = M;
                      var M = N * 16843009 ^ L * 65537 ^ P * 257 ^ E * 16843008;
                      g[x] = M << 24 | M >>> 8, e[x] = M << 16 | M >>> 16, m[x] = M << 8 | M >>> 24, w[x] = M, E ? (E = P ^ T[T[T[N ^ P]]], F ^= T[T[F]]) : E = F = 1;
                    }
                  })();
                  var D = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], I = f.AES = i.extend({
                    _doReset: function() {
                      var C;
                      if (!(this._nRounds && this._keyPriorReset === this._key)) {
                        for (var E = this._keyPriorReset = this._key, F = E.words, x = E.sigBytes / 4, P = this._nRounds = x + 6, L = (P + 1) * 4, N = this._keySchedule = [], M = 0; M < L; M++)
                          M < x ? N[M] = F[M] : (C = N[M - 1], M % x ? x > 6 && M % x == 4 && (C = l[C >>> 24] << 24 | l[C >>> 16 & 255] << 16 | l[C >>> 8 & 255] << 8 | l[C & 255]) : (C = C << 8 | C >>> 24, C = l[C >>> 24] << 24 | l[C >>> 16 & 255] << 16 | l[C >>> 8 & 255] << 8 | l[C & 255], C ^= D[M / x | 0] << 24), N[M] = N[M - x] ^ C);
                        for (var K = this._invKeySchedule = [], ut = 0; ut < L; ut++) {
                          var M = L - ut;
                          if (ut % 4)
                            var C = N[M];
                          else
                            var C = N[M - 4];
                          ut < 4 || M <= 4 ? K[ut] = C : K[ut] = g[l[C >>> 24]] ^ e[l[C >>> 16 & 255]] ^ m[l[C >>> 8 & 255]] ^ w[l[C & 255]];
                        }
                      }
                    },
                    encryptBlock: function(C, E) {
                      this._doCryptBlock(C, E, this._keySchedule, h, a, v, y, l);
                    },
                    decryptBlock: function(C, E) {
                      var F = C[E + 1];
                      C[E + 1] = C[E + 3], C[E + 3] = F, this._doCryptBlock(C, E, this._invKeySchedule, g, e, m, w, c);
                      var F = C[E + 1];
                      C[E + 1] = C[E + 3], C[E + 3] = F;
                    },
                    _doCryptBlock: function(C, E, F, x, P, L, N, M) {
                      for (var K = this._nRounds, ut = C[E] ^ F[0], J = C[E + 1] ^ F[1], rt = C[E + 2] ^ F[2], yt = C[E + 3] ^ F[3], xt = 4, Et = 1; Et < K; Et++) {
                        var Ft = x[ut >>> 24] ^ P[J >>> 16 & 255] ^ L[rt >>> 8 & 255] ^ N[yt & 255] ^ F[xt++], Rt = x[J >>> 24] ^ P[rt >>> 16 & 255] ^ L[yt >>> 8 & 255] ^ N[ut & 255] ^ F[xt++], Ut = x[rt >>> 24] ^ P[yt >>> 16 & 255] ^ L[ut >>> 8 & 255] ^ N[J & 255] ^ F[xt++], Q = x[yt >>> 24] ^ P[ut >>> 16 & 255] ^ L[J >>> 8 & 255] ^ N[rt & 255] ^ F[xt++];
                        ut = Ft, J = Rt, rt = Ut, yt = Q;
                      }
                      var Ft = (M[ut >>> 24] << 24 | M[J >>> 16 & 255] << 16 | M[rt >>> 8 & 255] << 8 | M[yt & 255]) ^ F[xt++], Rt = (M[J >>> 24] << 24 | M[rt >>> 16 & 255] << 16 | M[yt >>> 8 & 255] << 8 | M[ut & 255]) ^ F[xt++], Ut = (M[rt >>> 24] << 24 | M[yt >>> 16 & 255] << 16 | M[ut >>> 8 & 255] << 8 | M[J & 255]) ^ F[xt++], Q = (M[yt >>> 24] << 24 | M[ut >>> 16 & 255] << 16 | M[J >>> 8 & 255] << 8 | M[rt & 255]) ^ F[xt++];
                      C[E] = Ft, C[E + 1] = Rt, C[E + 2] = Ut, C[E + 3] = Q;
                    },
                    keySize: 256 / 32
                  });
                  r.AES = i._createHelper(I);
                }(), o.AES;
              });
            }
          ),
          /***/
          67646: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.BlockCipher, f = r.algo, l = 16, c = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731], h = [[3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, 4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, 1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946], [1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, 1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055], [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, 1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504], [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]], a = {
                    pbox: [],
                    sbox: []
                  };
                  function v(w, D) {
                    var I = D >> 24 & 255, T = D >> 16 & 255, C = D >> 8 & 255, E = D & 255, F = w.sbox[0][I] + w.sbox[1][T];
                    return F = F ^ w.sbox[2][C], F = F + w.sbox[3][E], F;
                  }
                  function y(w, D, I) {
                    for (var T = D, C = I, E, F = 0; F < l; ++F)
                      T = T ^ w.pbox[F], C = v(w, T) ^ C, E = T, T = C, C = E;
                    return E = T, T = C, C = E, C = C ^ w.pbox[l], T = T ^ w.pbox[l + 1], {
                      left: T,
                      right: C
                    };
                  }
                  function g(w, D, I) {
                    for (var T = D, C = I, E, F = l + 1; F > 1; --F)
                      T = T ^ w.pbox[F], C = v(w, T) ^ C, E = T, T = C, C = E;
                    return E = T, T = C, C = E, C = C ^ w.pbox[1], T = T ^ w.pbox[0], {
                      left: T,
                      right: C
                    };
                  }
                  function e(w, D, I) {
                    for (var T = 0; T < 4; T++) {
                      w.sbox[T] = [];
                      for (var C = 0; C < 256; C++)
                        w.sbox[T][C] = h[T][C];
                    }
                    for (var E = 0, F = 0; F < l + 2; F++)
                      w.pbox[F] = c[F] ^ D[E], E++, E >= I && (E = 0);
                    for (var x = 0, P = 0, L = 0, N = 0; N < l + 2; N += 2)
                      L = y(w, x, P), x = L.left, P = L.right, w.pbox[N] = x, w.pbox[N + 1] = P;
                    for (var M = 0; M < 4; M++)
                      for (var K = 0; K < 256; K += 2)
                        L = y(w, x, P), x = L.left, P = L.right, w.sbox[M][K] = x, w.sbox[M][K + 1] = P;
                    return !0;
                  }
                  var m = f.Blowfish = i.extend({
                    _doReset: function() {
                      if (this._keyPriorReset !== this._key) {
                        var D = this._keyPriorReset = this._key, I = D.words, T = D.sigBytes / 4;
                        e(a, I, T);
                      }
                    },
                    encryptBlock: function(D, I) {
                      var T = y(a, D[I], D[I + 1]);
                      D[I] = T.left, D[I + 1] = T.right;
                    },
                    decryptBlock: function(D, I) {
                      var T = g(a, D[I], D[I + 1]);
                      D[I] = T.left, D[I + 1] = T.right;
                    },
                    blockSize: 64 / 32,
                    keySize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  r.Blowfish = i._createHelper(m);
                }(), o.Blowfish;
              });
            }
          ),
          /***/
          52810: (
            /***/
            function(u, d, t) {
              t(18821), t(55862), t(10853), t(33290), t(45550), function(o, r, n) {
                u.exports = r(t(53264), t(95194));
              }(void 0, function(o) {
                o.lib.Cipher || function(r) {
                  var n = o, i = n.lib, f = i.Base, l = i.WordArray, c = i.BufferedBlockAlgorithm, h = n.enc;
                  h.Utf8;
                  var a = h.Base64, v = n.algo, y = v.EvpKDF, g = i.Cipher = c.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {WordArray} iv The IV to use for this operation.
                     */
                    cfg: f.extend(),
                    /**
                     * Creates this cipher in encryption mode.
                     *
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {Cipher} A cipher instance.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
                     */
                    createEncryptor: function(M, K) {
                      return this.create(this._ENC_XFORM_MODE, M, K);
                    },
                    /**
                     * Creates this cipher in decryption mode.
                     *
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {Cipher} A cipher instance.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
                     */
                    createDecryptor: function(M, K) {
                      return this.create(this._DEC_XFORM_MODE, M, K);
                    },
                    /**
                     * Initializes a newly created cipher.
                     *
                     * @param {number} xformMode Either the encryption or decryption transormation mode constant.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
                     */
                    init: function(M, K, ut) {
                      this.cfg = this.cfg.extend(ut), this._xformMode = M, this._key = K, this.reset();
                    },
                    /**
                     * Resets this cipher to its initial state.
                     *
                     * @example
                     *
                     *     cipher.reset();
                     */
                    reset: function() {
                      c.reset.call(this), this._doReset();
                    },
                    /**
                     * Adds data to be encrypted or decrypted.
                     *
                     * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
                     *
                     * @return {WordArray} The data after processing.
                     *
                     * @example
                     *
                     *     var encrypted = cipher.process('data');
                     *     var encrypted = cipher.process(wordArray);
                     */
                    process: function(M) {
                      return this._append(M), this._process();
                    },
                    /**
                     * Finalizes the encryption or decryption process.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
                     *
                     * @return {WordArray} The data after final processing.
                     *
                     * @example
                     *
                     *     var encrypted = cipher.finalize();
                     *     var encrypted = cipher.finalize('data');
                     *     var encrypted = cipher.finalize(wordArray);
                     */
                    finalize: function(M) {
                      M && this._append(M);
                      var K = this._doFinalize();
                      return K;
                    },
                    keySize: 128 / 32,
                    ivSize: 128 / 32,
                    _ENC_XFORM_MODE: 1,
                    _DEC_XFORM_MODE: 2,
                    /**
                     * Creates shortcut functions to a cipher's object interface.
                     *
                     * @param {Cipher} cipher The cipher to create a helper for.
                     *
                     * @return {Object} An object with encrypt and decrypt shortcut functions.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
                     */
                    _createHelper: function() {
                      function N(M) {
                        return typeof M == "string" ? L : F;
                      }
                      return function(M) {
                        return {
                          encrypt: function(ut, J, rt) {
                            return N(J).encrypt(M, ut, J, rt);
                          },
                          decrypt: function(ut, J, rt) {
                            return N(J).decrypt(M, ut, J, rt);
                          }
                        };
                      };
                    }()
                  });
                  i.StreamCipher = g.extend({
                    _doFinalize: function() {
                      var M = this._process(!0);
                      return M;
                    },
                    blockSize: 1
                  });
                  var e = n.mode = {}, m = i.BlockCipherMode = f.extend({
                    /**
                     * Creates this mode for encryption.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
                     */
                    createEncryptor: function(M, K) {
                      return this.Encryptor.create(M, K);
                    },
                    /**
                     * Creates this mode for decryption.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
                     */
                    createDecryptor: function(M, K) {
                      return this.Decryptor.create(M, K);
                    },
                    /**
                     * Initializes a newly created mode.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
                     */
                    init: function(M, K) {
                      this._cipher = M, this._iv = K;
                    }
                  }), w = e.CBC = function() {
                    var N = m.extend();
                    N.Encryptor = N.extend({
                      /**
                       * Processes the data block at offset.
                       *
                       * @param {Array} words The data words to operate on.
                       * @param {number} offset The offset where the block starts.
                       *
                       * @example
                       *
                       *     mode.processBlock(data.words, offset);
                       */
                      processBlock: function(ut, J) {
                        var rt = this._cipher, yt = rt.blockSize;
                        M.call(this, ut, J, yt), rt.encryptBlock(ut, J), this._prevBlock = ut.slice(J, J + yt);
                      }
                    }), N.Decryptor = N.extend({
                      /**
                       * Processes the data block at offset.
                       *
                       * @param {Array} words The data words to operate on.
                       * @param {number} offset The offset where the block starts.
                       *
                       * @example
                       *
                       *     mode.processBlock(data.words, offset);
                       */
                      processBlock: function(ut, J) {
                        var rt = this._cipher, yt = rt.blockSize, xt = ut.slice(J, J + yt);
                        rt.decryptBlock(ut, J), M.call(this, ut, J, yt), this._prevBlock = xt;
                      }
                    });
                    function M(K, ut, J) {
                      var rt, yt = this._iv;
                      yt ? (rt = yt, this._iv = r) : rt = this._prevBlock;
                      for (var xt = 0; xt < J; xt++)
                        K[ut + xt] ^= rt[xt];
                    }
                    return N;
                  }(), D = n.pad = {}, I = D.Pkcs7 = {
                    /**
                     * Pads data using the algorithm defined in PKCS #5/7.
                     *
                     * @param {WordArray} data The data to pad.
                     * @param {number} blockSize The multiple that the data should be padded to.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
                     */
                    pad: function(M, K) {
                      for (var ut = K * 4, J = ut - M.sigBytes % ut, rt = J << 24 | J << 16 | J << 8 | J, yt = [], xt = 0; xt < J; xt += 4)
                        yt.push(rt);
                      var Et = l.create(yt, J);
                      M.concat(Et);
                    },
                    /**
                     * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
                     *
                     * @param {WordArray} data The data to unpad.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     CryptoJS.pad.Pkcs7.unpad(wordArray);
                     */
                    unpad: function(M) {
                      var K = M.words[M.sigBytes - 1 >>> 2] & 255;
                      M.sigBytes -= K;
                    }
                  };
                  i.BlockCipher = g.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {Mode} mode The block mode to use. Default: CBC
                     * @property {Padding} padding The padding strategy to use. Default: Pkcs7
                     */
                    cfg: g.cfg.extend({
                      mode: w,
                      padding: I
                    }),
                    reset: function() {
                      var M;
                      g.reset.call(this);
                      var K = this.cfg, ut = K.iv, J = K.mode;
                      this._xformMode == this._ENC_XFORM_MODE ? M = J.createEncryptor : (M = J.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == M ? this._mode.init(this, ut && ut.words) : (this._mode = M.call(J, this, ut && ut.words), this._mode.__creator = M);
                    },
                    _doProcessBlock: function(M, K) {
                      this._mode.processBlock(M, K);
                    },
                    _doFinalize: function() {
                      var M, K = this.cfg.padding;
                      return this._xformMode == this._ENC_XFORM_MODE ? (K.pad(this._data, this.blockSize), M = this._process(!0)) : (M = this._process(!0), K.unpad(M)), M;
                    },
                    blockSize: 4
                  });
                  var T = i.CipherParams = f.extend({
                    /**
                     * Initializes a newly created cipher params object.
                     *
                     * @param {Object} cipherParams An object with any of the possible cipher parameters.
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.lib.CipherParams.create({
                     *         ciphertext: ciphertextWordArray,
                     *         key: keyWordArray,
                     *         iv: ivWordArray,
                     *         salt: saltWordArray,
                     *         algorithm: CryptoJS.algo.AES,
                     *         mode: CryptoJS.mode.CBC,
                     *         padding: CryptoJS.pad.PKCS7,
                     *         blockSize: 4,
                     *         formatter: CryptoJS.format.OpenSSL
                     *     });
                     */
                    init: function(M) {
                      this.mixIn(M);
                    },
                    /**
                     * Converts this cipher params object to a string.
                     *
                     * @param {Format} formatter (Optional) The formatting strategy to use.
                     *
                     * @return {string} The stringified cipher params.
                     *
                     * @throws Error If neither the formatter nor the default formatter is set.
                     *
                     * @example
                     *
                     *     var string = cipherParams + '';
                     *     var string = cipherParams.toString();
                     *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
                     */
                    toString: function(M) {
                      return (M || this.formatter).stringify(this);
                    }
                  }), C = n.format = {}, E = C.OpenSSL = {
                    /**
                     * Converts a cipher params object to an OpenSSL-compatible string.
                     *
                     * @param {CipherParams} cipherParams The cipher params object.
                     *
                     * @return {string} The OpenSSL-compatible string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
                     */
                    stringify: function(M) {
                      var K, ut = M.ciphertext, J = M.salt;
                      return J ? K = l.create([1398893684, 1701076831]).concat(J).concat(ut) : K = ut, K.toString(a);
                    },
                    /**
                     * Converts an OpenSSL-compatible string to a cipher params object.
                     *
                     * @param {string} openSSLStr The OpenSSL-compatible string.
                     *
                     * @return {CipherParams} The cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
                     */
                    parse: function(M) {
                      var K, ut = a.parse(M), J = ut.words;
                      return J[0] == 1398893684 && J[1] == 1701076831 && (K = l.create(J.slice(2, 4)), J.splice(0, 4), ut.sigBytes -= 16), T.create({
                        ciphertext: ut,
                        salt: K
                      });
                    }
                  }, F = i.SerializableCipher = f.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
                     */
                    cfg: f.extend({
                      format: E
                    }),
                    /**
                     * Encrypts a message.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {WordArray|string} message The message to encrypt.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {CipherParams} A cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     */
                    encrypt: function(M, K, ut, J) {
                      J = this.cfg.extend(J);
                      var rt = M.createEncryptor(ut, J), yt = rt.finalize(K), xt = rt.cfg;
                      return T.create({
                        ciphertext: yt,
                        key: ut,
                        iv: xt.iv,
                        algorithm: M,
                        mode: xt.mode,
                        padding: xt.padding,
                        blockSize: M.blockSize,
                        formatter: J.format
                      });
                    },
                    /**
                     * Decrypts serialized ciphertext.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {WordArray} The plaintext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     */
                    decrypt: function(M, K, ut, J) {
                      J = this.cfg.extend(J), K = this._parse(K, J.format);
                      var rt = M.createDecryptor(ut, J).finalize(K.ciphertext);
                      return rt;
                    },
                    /**
                     * Converts serialized ciphertext to CipherParams,
                     * else assumed CipherParams already and returns ciphertext unchanged.
                     *
                     * @param {CipherParams|string} ciphertext The ciphertext.
                     * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
                     *
                     * @return {CipherParams} The unserialized ciphertext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
                     */
                    _parse: function(M, K) {
                      return typeof M == "string" ? K.parse(M, this) : M;
                    }
                  }), x = n.kdf = {}, P = x.OpenSSL = {
                    /**
                     * Derives a key and IV from a password.
                     *
                     * @param {string} password The password to derive from.
                     * @param {number} keySize The size in words of the key to generate.
                     * @param {number} ivSize The size in words of the IV to generate.
                     * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
                     *
                     * @return {CipherParams} A cipher params object with the key, IV, and salt.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
                     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
                     */
                    execute: function(M, K, ut, J, rt) {
                      if (J || (J = l.random(64 / 8)), rt)
                        var yt = y.create({
                          keySize: K + ut,
                          hasher: rt
                        }).compute(M, J);
                      else
                        var yt = y.create({
                          keySize: K + ut
                        }).compute(M, J);
                      var xt = l.create(yt.words.slice(K), ut * 4);
                      return yt.sigBytes = K * 4, T.create({
                        key: yt,
                        iv: xt,
                        salt: J
                      });
                    }
                  }, L = i.PasswordBasedCipher = F.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
                     */
                    cfg: F.cfg.extend({
                      kdf: P
                    }),
                    /**
                     * Encrypts a message using a password.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {WordArray|string} message The message to encrypt.
                     * @param {string} password The password.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {CipherParams} A cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
                     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
                     */
                    encrypt: function(M, K, ut, J) {
                      J = this.cfg.extend(J);
                      var rt = J.kdf.execute(ut, M.keySize, M.ivSize, J.salt, J.hasher);
                      J.iv = rt.iv;
                      var yt = F.encrypt.call(this, M, K, rt.key, J);
                      return yt.mixIn(rt), yt;
                    },
                    /**
                     * Decrypts serialized ciphertext using a password.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
                     * @param {string} password The password.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {WordArray} The plaintext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
                     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
                     */
                    decrypt: function(M, K, ut, J) {
                      J = this.cfg.extend(J), K = this._parse(K, J.format);
                      var rt = J.kdf.execute(ut, M.keySize, M.ivSize, K.salt, J.hasher);
                      J.iv = rt.iv;
                      var yt = F.decrypt.call(this, M, K, rt.key, J);
                      return yt;
                    }
                  });
                }();
              });
            }
          ),
          /***/
          53264: (
            /***/
            function(u, d, t) {
              t(4116), t(54883), t(10853), t(35779), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(33290), t(18821), t(85005), t(55862), t(45550), function(o, r) {
                u.exports = r();
              }(void 0, function() {
                var o = o || function(r, n) {
                  var i;
                  if (typeof window < "u" && window.crypto && (i = window.crypto), typeof self < "u" && self.crypto && (i = self.crypto), typeof globalThis < "u" && globalThis.crypto && (i = globalThis.crypto), !i && typeof window < "u" && window.msCrypto && (i = window.msCrypto), !i && typeof t.g < "u" && t.g.crypto && (i = t.g.crypto), !i)
                    try {
                      i = t(42480);
                    } catch {
                    }
                  var f = function() {
                    if (i) {
                      if (typeof i.getRandomValues == "function")
                        try {
                          return i.getRandomValues(new Uint32Array(1))[0];
                        } catch {
                        }
                      if (typeof i.randomBytes == "function")
                        try {
                          return i.randomBytes(4).readInt32LE();
                        } catch {
                        }
                    }
                    throw new Error("Native crypto module could not be used to get secure random number.");
                  }, l = Object.create || function() {
                    function I() {
                    }
                    return function(T) {
                      var C;
                      return I.prototype = T, C = new I(), I.prototype = null, C;
                    };
                  }(), c = {}, h = c.lib = {}, a = h.Base = function() {
                    return {
                      /**
                       * Creates a new object that inherits from this object.
                       *
                       * @param {Object} overrides Properties to copy into the new object.
                       *
                       * @return {Object} The new object.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var MyType = CryptoJS.lib.Base.extend({
                       *         field: 'value',
                       *
                       *         method: function () {
                       *         }
                       *     });
                       */
                      extend: function(T) {
                        var C = l(this);
                        return T && C.mixIn(T), (!C.hasOwnProperty("init") || this.init === C.init) && (C.init = function() {
                          C.$super.init.apply(this, arguments);
                        }), C.init.prototype = C, C.$super = this, C;
                      },
                      /**
                       * Extends this object and runs the init method.
                       * Arguments to create() will be passed to init().
                       *
                       * @return {Object} The new object.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var instance = MyType.create();
                       */
                      create: function() {
                        var T = this.extend();
                        return T.init.apply(T, arguments), T;
                      },
                      /**
                       * Initializes a newly created object.
                       * Override this method to add some logic when your objects are created.
                       *
                       * @example
                       *
                       *     var MyType = CryptoJS.lib.Base.extend({
                       *         init: function () {
                       *             // ...
                       *         }
                       *     });
                       */
                      init: function() {
                      },
                      /**
                       * Copies properties into this object.
                       *
                       * @param {Object} properties The properties to mix in.
                       *
                       * @example
                       *
                       *     MyType.mixIn({
                       *         field: 'value'
                       *     });
                       */
                      mixIn: function(T) {
                        for (var C in T)
                          T.hasOwnProperty(C) && (this[C] = T[C]);
                        T.hasOwnProperty("toString") && (this.toString = T.toString);
                      },
                      /**
                       * Creates a copy of this object.
                       *
                       * @return {Object} The clone.
                       *
                       * @example
                       *
                       *     var clone = instance.clone();
                       */
                      clone: function() {
                        return this.init.prototype.extend(this);
                      }
                    };
                  }(), v = h.WordArray = a.extend({
                    /**
                     * Initializes a newly created word array.
                     *
                     * @param {Array} words (Optional) An array of 32-bit words.
                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.lib.WordArray.create();
                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
                     */
                    init: function(T, C) {
                      T = this.words = T || [], C != n ? this.sigBytes = C : this.sigBytes = T.length * 4;
                    },
                    /**
                     * Converts this word array to a string.
                     *
                     * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
                     *
                     * @return {string} The stringified word array.
                     *
                     * @example
                     *
                     *     var string = wordArray + '';
                     *     var string = wordArray.toString();
                     *     var string = wordArray.toString(CryptoJS.enc.Utf8);
                     */
                    toString: function(T) {
                      return (T || g).stringify(this);
                    },
                    /**
                     * Concatenates a word array to this word array.
                     *
                     * @param {WordArray} wordArray The word array to append.
                     *
                     * @return {WordArray} This word array.
                     *
                     * @example
                     *
                     *     wordArray1.concat(wordArray2);
                     */
                    concat: function(T) {
                      var C = this.words, E = T.words, F = this.sigBytes, x = T.sigBytes;
                      if (this.clamp(), F % 4)
                        for (var P = 0; P < x; P++) {
                          var L = E[P >>> 2] >>> 24 - P % 4 * 8 & 255;
                          C[F + P >>> 2] |= L << 24 - (F + P) % 4 * 8;
                        }
                      else
                        for (var N = 0; N < x; N += 4)
                          C[F + N >>> 2] = E[N >>> 2];
                      return this.sigBytes += x, this;
                    },
                    /**
                     * Removes insignificant bits.
                     *
                     * @example
                     *
                     *     wordArray.clamp();
                     */
                    clamp: function() {
                      var T = this.words, C = this.sigBytes;
                      T[C >>> 2] &= 4294967295 << 32 - C % 4 * 8, T.length = r.ceil(C / 4);
                    },
                    /**
                     * Creates a copy of this word array.
                     *
                     * @return {WordArray} The clone.
                     *
                     * @example
                     *
                     *     var clone = wordArray.clone();
                     */
                    clone: function() {
                      var T = a.clone.call(this);
                      return T.words = this.words.slice(0), T;
                    },
                    /**
                     * Creates a word array filled with random bytes.
                     *
                     * @param {number} nBytes The number of random bytes to generate.
                     *
                     * @return {WordArray} The random word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.lib.WordArray.random(16);
                     */
                    random: function(T) {
                      for (var C = [], E = 0; E < T; E += 4)
                        C.push(f());
                      return new v.init(C, T);
                    }
                  }), y = c.enc = {}, g = y.Hex = {
                    /**
                     * Converts a word array to a hex string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The hex string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
                     */
                    stringify: function(T) {
                      for (var C = T.words, E = T.sigBytes, F = [], x = 0; x < E; x++) {
                        var P = C[x >>> 2] >>> 24 - x % 4 * 8 & 255;
                        F.push((P >>> 4).toString(16)), F.push((P & 15).toString(16));
                      }
                      return F.join("");
                    },
                    /**
                     * Converts a hex string to a word array.
                     *
                     * @param {string} hexStr The hex string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
                     */
                    parse: function(T) {
                      for (var C = T.length, E = [], F = 0; F < C; F += 2)
                        E[F >>> 3] |= parseInt(T.substr(F, 2), 16) << 24 - F % 8 * 4;
                      return new v.init(E, C / 2);
                    }
                  }, e = y.Latin1 = {
                    /**
                     * Converts a word array to a Latin1 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The Latin1 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
                     */
                    stringify: function(T) {
                      for (var C = T.words, E = T.sigBytes, F = [], x = 0; x < E; x++) {
                        var P = C[x >>> 2] >>> 24 - x % 4 * 8 & 255;
                        F.push(String.fromCharCode(P));
                      }
                      return F.join("");
                    },
                    /**
                     * Converts a Latin1 string to a word array.
                     *
                     * @param {string} latin1Str The Latin1 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
                     */
                    parse: function(T) {
                      for (var C = T.length, E = [], F = 0; F < C; F++)
                        E[F >>> 2] |= (T.charCodeAt(F) & 255) << 24 - F % 4 * 8;
                      return new v.init(E, C);
                    }
                  }, m = y.Utf8 = {
                    /**
                     * Converts a word array to a UTF-8 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-8 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
                     */
                    stringify: function(T) {
                      try {
                        return decodeURIComponent(escape(e.stringify(T)));
                      } catch {
                        throw new Error("Malformed UTF-8 data");
                      }
                    },
                    /**
                     * Converts a UTF-8 string to a word array.
                     *
                     * @param {string} utf8Str The UTF-8 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
                     */
                    parse: function(T) {
                      return e.parse(unescape(encodeURIComponent(T)));
                    }
                  }, w = h.BufferedBlockAlgorithm = a.extend({
                    /**
                     * Resets this block algorithm's data buffer to its initial state.
                     *
                     * @example
                     *
                     *     bufferedBlockAlgorithm.reset();
                     */
                    reset: function() {
                      this._data = new v.init(), this._nDataBytes = 0;
                    },
                    /**
                     * Adds new data to this block algorithm's buffer.
                     *
                     * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
                     *
                     * @example
                     *
                     *     bufferedBlockAlgorithm._append('data');
                     *     bufferedBlockAlgorithm._append(wordArray);
                     */
                    _append: function(T) {
                      typeof T == "string" && (T = m.parse(T)), this._data.concat(T), this._nDataBytes += T.sigBytes;
                    },
                    /**
                     * Processes available data blocks.
                     *
                     * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
                     *
                     * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
                     *
                     * @return {WordArray} The processed data.
                     *
                     * @example
                     *
                     *     var processedData = bufferedBlockAlgorithm._process();
                     *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
                     */
                    _process: function(T) {
                      var C, E = this._data, F = E.words, x = E.sigBytes, P = this.blockSize, L = P * 4, N = x / L;
                      T ? N = r.ceil(N) : N = r.max((N | 0) - this._minBufferSize, 0);
                      var M = N * P, K = r.min(M * 4, x);
                      if (M) {
                        for (var ut = 0; ut < M; ut += P)
                          this._doProcessBlock(F, ut);
                        C = F.splice(0, M), E.sigBytes -= K;
                      }
                      return new v.init(C, K);
                    },
                    /**
                     * Creates a copy of this object.
                     *
                     * @return {Object} The clone.
                     *
                     * @example
                     *
                     *     var clone = bufferedBlockAlgorithm.clone();
                     */
                    clone: function() {
                      var T = a.clone.call(this);
                      return T._data = this._data.clone(), T;
                    },
                    _minBufferSize: 0
                  });
                  h.Hasher = w.extend({
                    /**
                     * Configuration options.
                     */
                    cfg: a.extend(),
                    /**
                     * Initializes a newly created hasher.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
                     *
                     * @example
                     *
                     *     var hasher = CryptoJS.algo.SHA256.create();
                     */
                    init: function(T) {
                      this.cfg = this.cfg.extend(T), this.reset();
                    },
                    /**
                     * Resets this hasher to its initial state.
                     *
                     * @example
                     *
                     *     hasher.reset();
                     */
                    reset: function() {
                      w.reset.call(this), this._doReset();
                    },
                    /**
                     * Updates this hasher with a message.
                     *
                     * @param {WordArray|string} messageUpdate The message to append.
                     *
                     * @return {Hasher} This hasher.
                     *
                     * @example
                     *
                     *     hasher.update('message');
                     *     hasher.update(wordArray);
                     */
                    update: function(T) {
                      return this._append(T), this._process(), this;
                    },
                    /**
                     * Finalizes the hash computation.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} messageUpdate (Optional) A final message update.
                     *
                     * @return {WordArray} The hash.
                     *
                     * @example
                     *
                     *     var hash = hasher.finalize();
                     *     var hash = hasher.finalize('message');
                     *     var hash = hasher.finalize(wordArray);
                     */
                    finalize: function(T) {
                      T && this._append(T);
                      var C = this._doFinalize();
                      return C;
                    },
                    blockSize: 16,
                    /**
                     * Creates a shortcut function to a hasher's object interface.
                     *
                     * @param {Hasher} hasher The hasher to create a helper for.
                     *
                     * @return {Function} The shortcut function.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
                     */
                    _createHelper: function(T) {
                      return function(C, E) {
                        return new T.init(E).finalize(C);
                      };
                    },
                    /**
                     * Creates a shortcut function to the HMAC's object interface.
                     *
                     * @param {Hasher} hasher The hasher to use in this HMAC helper.
                     *
                     * @return {Function} The shortcut function.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
                     */
                    _createHmacHelper: function(T) {
                      return function(C, E) {
                        return new D.HMAC.init(T, E).finalize(C);
                      };
                    }
                  });
                  var D = c.algo = {};
                  return c;
                }(Math);
                return o;
              });
            }
          ),
          /***/
          31946: (
            /***/
            function(u, d, t) {
              t(85005), function(o, r) {
                u.exports = r(t(53264));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = r.enc;
                  f.Base64 = {
                    /**
                     * Converts a word array to a Base64 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The Base64 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
                     */
                    stringify: function(h) {
                      var a = h.words, v = h.sigBytes, y = this._map;
                      h.clamp();
                      for (var g = [], e = 0; e < v; e += 3)
                        for (var m = a[e >>> 2] >>> 24 - e % 4 * 8 & 255, w = a[e + 1 >>> 2] >>> 24 - (e + 1) % 4 * 8 & 255, D = a[e + 2 >>> 2] >>> 24 - (e + 2) % 4 * 8 & 255, I = m << 16 | w << 8 | D, T = 0; T < 4 && e + T * 0.75 < v; T++)
                          g.push(y.charAt(I >>> 6 * (3 - T) & 63));
                      var C = y.charAt(64);
                      if (C)
                        for (; g.length % 4; )
                          g.push(C);
                      return g.join("");
                    },
                    /**
                     * Converts a Base64 string to a word array.
                     *
                     * @param {string} base64Str The Base64 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
                     */
                    parse: function(h) {
                      var a = h.length, v = this._map, y = this._reverseMap;
                      if (!y) {
                        y = this._reverseMap = [];
                        for (var g = 0; g < v.length; g++)
                          y[v.charCodeAt(g)] = g;
                      }
                      var e = v.charAt(64);
                      if (e) {
                        var m = h.indexOf(e);
                        m !== -1 && (a = m);
                      }
                      return l(h, a, y);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                  };
                  function l(c, h, a) {
                    for (var v = [], y = 0, g = 0; g < h; g++)
                      if (g % 4) {
                        var e = a[c.charCodeAt(g - 1)] << g % 4 * 2, m = a[c.charCodeAt(g)] >>> 6 - g % 4 * 2, w = e | m;
                        v[y >>> 2] |= w << 24 - y % 4 * 8, y++;
                      }
                    return i.create(v, y);
                  }
                }(), o.enc.Base64;
              });
            }
          ),
          /***/
          30961: (
            /***/
            function(u, d, t) {
              t(85005), function(o, r) {
                u.exports = r(t(53264));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = r.enc;
                  f.Base64url = {
                    /**
                     * Converts a word array to a Base64url string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @param {boolean} urlSafe Whether to use url safe
                     *
                     * @return {string} The Base64url string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);
                     */
                    stringify: function(h, a) {
                      a === void 0 && (a = !0);
                      var v = h.words, y = h.sigBytes, g = a ? this._safe_map : this._map;
                      h.clamp();
                      for (var e = [], m = 0; m < y; m += 3)
                        for (var w = v[m >>> 2] >>> 24 - m % 4 * 8 & 255, D = v[m + 1 >>> 2] >>> 24 - (m + 1) % 4 * 8 & 255, I = v[m + 2 >>> 2] >>> 24 - (m + 2) % 4 * 8 & 255, T = w << 16 | D << 8 | I, C = 0; C < 4 && m + C * 0.75 < y; C++)
                          e.push(g.charAt(T >>> 6 * (3 - C) & 63));
                      var E = g.charAt(64);
                      if (E)
                        for (; e.length % 4; )
                          e.push(E);
                      return e.join("");
                    },
                    /**
                     * Converts a Base64url string to a word array.
                     *
                     * @param {string} base64Str The Base64url string.
                     *
                     * @param {boolean} urlSafe Whether to use url safe
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);
                     */
                    parse: function(h, a) {
                      a === void 0 && (a = !0);
                      var v = h.length, y = a ? this._safe_map : this._map, g = this._reverseMap;
                      if (!g) {
                        g = this._reverseMap = [];
                        for (var e = 0; e < y.length; e++)
                          g[y.charCodeAt(e)] = e;
                      }
                      var m = y.charAt(64);
                      if (m) {
                        var w = h.indexOf(m);
                        w !== -1 && (v = w);
                      }
                      return l(h, v, g);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                  };
                  function l(c, h, a) {
                    for (var v = [], y = 0, g = 0; g < h; g++)
                      if (g % 4) {
                        var e = a[c.charCodeAt(g - 1)] << g % 4 * 2, m = a[c.charCodeAt(g)] >>> 6 - g % 4 * 2, w = e | m;
                        v[y >>> 2] |= w << 24 - y % 4 * 8, y++;
                      }
                    return i.create(v, y);
                  }
                }(), o.enc.Base64url;
              });
            }
          ),
          /***/
          44087: (
            /***/
            function(u, d, t) {
              t(85005), function(o, r) {
                u.exports = r(t(53264));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = r.enc;
                  f.Utf16 = f.Utf16BE = {
                    /**
                     * Converts a word array to a UTF-16 BE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 BE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
                     */
                    stringify: function(h) {
                      for (var a = h.words, v = h.sigBytes, y = [], g = 0; g < v; g += 2) {
                        var e = a[g >>> 2] >>> 16 - g % 4 * 8 & 65535;
                        y.push(String.fromCharCode(e));
                      }
                      return y.join("");
                    },
                    /**
                     * Converts a UTF-16 BE string to a word array.
                     *
                     * @param {string} utf16Str The UTF-16 BE string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
                     */
                    parse: function(h) {
                      for (var a = h.length, v = [], y = 0; y < a; y++)
                        v[y >>> 1] |= h.charCodeAt(y) << 16 - y % 2 * 16;
                      return i.create(v, a * 2);
                    }
                  }, f.Utf16LE = {
                    /**
                     * Converts a word array to a UTF-16 LE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 LE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
                     */
                    stringify: function(h) {
                      for (var a = h.words, v = h.sigBytes, y = [], g = 0; g < v; g += 2) {
                        var e = l(a[g >>> 2] >>> 16 - g % 4 * 8 & 65535);
                        y.push(String.fromCharCode(e));
                      }
                      return y.join("");
                    },
                    /**
                     * Converts a UTF-16 LE string to a word array.
                     *
                     * @param {string} utf16Str The UTF-16 LE string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
                     */
                    parse: function(h) {
                      for (var a = h.length, v = [], y = 0; y < a; y++)
                        v[y >>> 1] |= l(h.charCodeAt(y) << 16 - y % 2 * 16);
                      return i.create(v, a * 2);
                    }
                  };
                  function l(c) {
                    return c << 8 & 4278255360 | c >>> 8 & 16711935;
                  }
                }(), o.enc.Utf16;
              });
            }
          ),
          /***/
          95194: (
            /***/
            function(u, d, t) {
              t(55862), function(o, r, n) {
                u.exports = r(t(53264), t(61977), t(5577));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.Base, f = n.WordArray, l = r.algo, c = l.MD5, h = l.EvpKDF = i.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                     * @property {Hasher} hasher The hash algorithm to use. Default: MD5
                     * @property {number} iterations The number of iterations to perform. Default: 1
                     */
                    cfg: i.extend({
                      keySize: 128 / 32,
                      hasher: c,
                      iterations: 1
                    }),
                    /**
                     * Initializes a newly created key derivation function.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                     *
                     * @example
                     *
                     *     var kdf = CryptoJS.algo.EvpKDF.create();
                     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
                     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
                     */
                    init: function(v) {
                      this.cfg = this.cfg.extend(v);
                    },
                    /**
                     * Derives a key from a password.
                     *
                     * @param {WordArray|string} password The password.
                     * @param {WordArray|string} salt A salt.
                     *
                     * @return {WordArray} The derived key.
                     *
                     * @example
                     *
                     *     var key = kdf.compute(password, salt);
                     */
                    compute: function(v, y) {
                      for (var g, e = this.cfg, m = e.hasher.create(), w = f.create(), D = w.words, I = e.keySize, T = e.iterations; D.length < I; ) {
                        g && m.update(g), g = m.update(v).finalize(y), m.reset();
                        for (var C = 1; C < T; C++)
                          g = m.finalize(g), m.reset();
                        w.concat(g);
                      }
                      return w.sigBytes = I * 4, w;
                    }
                  });
                  r.EvpKDF = function(a, v, y) {
                    return h.create(y).compute(a, v);
                  };
                }(), o.EvpKDF;
              });
            }
          ),
          /***/
          3902: (
            /***/
            function(u, d, t) {
              t(10853), t(33290), function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.CipherParams, l = n.enc, c = l.Hex, h = n.format;
                  h.Hex = {
                    /**
                     * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
                     *
                     * @param {CipherParams} cipherParams The cipher params object.
                     *
                     * @return {string} The hexadecimally encoded string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
                     */
                    stringify: function(v) {
                      return v.ciphertext.toString(c);
                    },
                    /**
                     * Converts a hexadecimally encoded ciphertext string to a cipher params object.
                     *
                     * @param {string} input The hexadecimally encoded string.
                     *
                     * @return {CipherParams} The cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
                     */
                    parse: function(v) {
                      var y = c.parse(v);
                      return f.create({
                        ciphertext: y
                      });
                    }
                  };
                }(), o.format.Hex;
              });
            }
          ),
          /***/
          5577: (
            /***/
            function(u, d, t) {
              t(55862), function(o, r) {
                u.exports = r(t(53264));
              }(void 0, function(o) {
                (function() {
                  var r = o, n = r.lib, i = n.Base, f = r.enc, l = f.Utf8, c = r.algo;
                  c.HMAC = i.extend({
                    /**
                     * Initializes a newly created HMAC.
                     *
                     * @param {Hasher} hasher The hash algorithm to use.
                     * @param {WordArray|string} key The secret key.
                     *
                     * @example
                     *
                     *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
                     */
                    init: function(a, v) {
                      a = this._hasher = new a.init(), typeof v == "string" && (v = l.parse(v));
                      var y = a.blockSize, g = y * 4;
                      v.sigBytes > g && (v = a.finalize(v)), v.clamp();
                      for (var e = this._oKey = v.clone(), m = this._iKey = v.clone(), w = e.words, D = m.words, I = 0; I < y; I++)
                        w[I] ^= 1549556828, D[I] ^= 909522486;
                      e.sigBytes = m.sigBytes = g, this.reset();
                    },
                    /**
                     * Resets this HMAC to its initial state.
                     *
                     * @example
                     *
                     *     hmacHasher.reset();
                     */
                    reset: function() {
                      var a = this._hasher;
                      a.reset(), a.update(this._iKey);
                    },
                    /**
                     * Updates this HMAC with a message.
                     *
                     * @param {WordArray|string} messageUpdate The message to append.
                     *
                     * @return {HMAC} This HMAC instance.
                     *
                     * @example
                     *
                     *     hmacHasher.update('message');
                     *     hmacHasher.update(wordArray);
                     */
                    update: function(a) {
                      return this._hasher.update(a), this;
                    },
                    /**
                     * Finalizes the HMAC computation.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} messageUpdate (Optional) A final message update.
                     *
                     * @return {WordArray} The HMAC.
                     *
                     * @example
                     *
                     *     var hmac = hmacHasher.finalize();
                     *     var hmac = hmacHasher.finalize('message');
                     *     var hmac = hmacHasher.finalize(wordArray);
                     */
                    finalize: function(a) {
                      var v = this._hasher, y = v.finalize(a);
                      v.reset();
                      var g = v.finalize(this._oKey.clone().concat(y));
                      return g;
                    }
                  });
                })();
              });
            }
          ),
          /***/
          35243: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(23204), t(70879), t(44087), t(31946), t(30961), t(57510), t(61977), t(85209), t(11707), t(20595), t(21410), t(11691), t(53601), t(5577), t(75883), t(95194), t(52810), t(90347), t(54032), t(63197), t(38710), t(21123), t(93007), t(7489), t(91695), t(29556), t(68028), t(3902), t(22449), t(77059), t(97690), t(24222), t(79338), t(67646));
              })(void 0, function(o) {
                return o;
              });
            }
          ),
          /***/
          70879: (
            /***/
            function(u, d, t) {
              t(36501), t(10853), t(54883), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(33324), t(71228), t(100), t(51360), t(26770), t(35779), t(31120), t(85569), function(o, r) {
                u.exports = r(t(53264));
              }(void 0, function(o) {
                return function() {
                  if (typeof ArrayBuffer == "function") {
                    var r = o, n = r.lib, i = n.WordArray, f = i.init, l = i.init = function(c) {
                      if (c instanceof ArrayBuffer && (c = new Uint8Array(c)), (c instanceof Int8Array || typeof Uint8ClampedArray < "u" && c instanceof Uint8ClampedArray || c instanceof Int16Array || c instanceof Uint16Array || c instanceof Int32Array || c instanceof Uint32Array || c instanceof Float32Array || c instanceof Float64Array) && (c = new Uint8Array(c.buffer, c.byteOffset, c.byteLength)), c instanceof Uint8Array) {
                        for (var h = c.byteLength, a = [], v = 0; v < h; v++)
                          a[v >>> 2] |= c[v] << 24 - v % 4 * 8;
                        f.call(this, a, h);
                      } else
                        f.apply(this, arguments);
                    };
                    l.prototype = i;
                  }
                }(), o.lib.WordArray;
              });
            }
          ),
          /***/
          57510: (
            /***/
            function(u, d, t) {
              (function(o, r) {
                u.exports = r(t(53264));
              })(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.WordArray, l = i.Hasher, c = n.algo, h = [];
                  (function() {
                    for (var m = 0; m < 64; m++)
                      h[m] = r.abs(r.sin(m + 1)) * 4294967296 | 0;
                  })();
                  var a = c.MD5 = l.extend({
                    _doReset: function() {
                      this._hash = new f.init([1732584193, 4023233417, 2562383102, 271733878]);
                    },
                    _doProcessBlock: function(w, D) {
                      for (var I = 0; I < 16; I++) {
                        var T = D + I, C = w[T];
                        w[T] = (C << 8 | C >>> 24) & 16711935 | (C << 24 | C >>> 8) & 4278255360;
                      }
                      var E = this._hash.words, F = w[D + 0], x = w[D + 1], P = w[D + 2], L = w[D + 3], N = w[D + 4], M = w[D + 5], K = w[D + 6], ut = w[D + 7], J = w[D + 8], rt = w[D + 9], yt = w[D + 10], xt = w[D + 11], Et = w[D + 12], Ft = w[D + 13], Rt = w[D + 14], Ut = w[D + 15], Q = E[0], pt = E[1], ct = E[2], ot = E[3];
                      Q = v(Q, pt, ct, ot, F, 7, h[0]), ot = v(ot, Q, pt, ct, x, 12, h[1]), ct = v(ct, ot, Q, pt, P, 17, h[2]), pt = v(pt, ct, ot, Q, L, 22, h[3]), Q = v(Q, pt, ct, ot, N, 7, h[4]), ot = v(ot, Q, pt, ct, M, 12, h[5]), ct = v(ct, ot, Q, pt, K, 17, h[6]), pt = v(pt, ct, ot, Q, ut, 22, h[7]), Q = v(Q, pt, ct, ot, J, 7, h[8]), ot = v(ot, Q, pt, ct, rt, 12, h[9]), ct = v(ct, ot, Q, pt, yt, 17, h[10]), pt = v(pt, ct, ot, Q, xt, 22, h[11]), Q = v(Q, pt, ct, ot, Et, 7, h[12]), ot = v(ot, Q, pt, ct, Ft, 12, h[13]), ct = v(ct, ot, Q, pt, Rt, 17, h[14]), pt = v(pt, ct, ot, Q, Ut, 22, h[15]), Q = y(Q, pt, ct, ot, x, 5, h[16]), ot = y(ot, Q, pt, ct, K, 9, h[17]), ct = y(ct, ot, Q, pt, xt, 14, h[18]), pt = y(pt, ct, ot, Q, F, 20, h[19]), Q = y(Q, pt, ct, ot, M, 5, h[20]), ot = y(ot, Q, pt, ct, yt, 9, h[21]), ct = y(ct, ot, Q, pt, Ut, 14, h[22]), pt = y(pt, ct, ot, Q, N, 20, h[23]), Q = y(Q, pt, ct, ot, rt, 5, h[24]), ot = y(ot, Q, pt, ct, Rt, 9, h[25]), ct = y(ct, ot, Q, pt, L, 14, h[26]), pt = y(pt, ct, ot, Q, J, 20, h[27]), Q = y(Q, pt, ct, ot, Ft, 5, h[28]), ot = y(ot, Q, pt, ct, P, 9, h[29]), ct = y(ct, ot, Q, pt, ut, 14, h[30]), pt = y(pt, ct, ot, Q, Et, 20, h[31]), Q = g(Q, pt, ct, ot, M, 4, h[32]), ot = g(ot, Q, pt, ct, J, 11, h[33]), ct = g(ct, ot, Q, pt, xt, 16, h[34]), pt = g(pt, ct, ot, Q, Rt, 23, h[35]), Q = g(Q, pt, ct, ot, x, 4, h[36]), ot = g(ot, Q, pt, ct, N, 11, h[37]), ct = g(ct, ot, Q, pt, ut, 16, h[38]), pt = g(pt, ct, ot, Q, yt, 23, h[39]), Q = g(Q, pt, ct, ot, Ft, 4, h[40]), ot = g(ot, Q, pt, ct, F, 11, h[41]), ct = g(ct, ot, Q, pt, L, 16, h[42]), pt = g(pt, ct, ot, Q, K, 23, h[43]), Q = g(Q, pt, ct, ot, rt, 4, h[44]), ot = g(ot, Q, pt, ct, Et, 11, h[45]), ct = g(ct, ot, Q, pt, Ut, 16, h[46]), pt = g(pt, ct, ot, Q, P, 23, h[47]), Q = e(Q, pt, ct, ot, F, 6, h[48]), ot = e(ot, Q, pt, ct, ut, 10, h[49]), ct = e(ct, ot, Q, pt, Rt, 15, h[50]), pt = e(pt, ct, ot, Q, M, 21, h[51]), Q = e(Q, pt, ct, ot, Et, 6, h[52]), ot = e(ot, Q, pt, ct, L, 10, h[53]), ct = e(ct, ot, Q, pt, yt, 15, h[54]), pt = e(pt, ct, ot, Q, x, 21, h[55]), Q = e(Q, pt, ct, ot, J, 6, h[56]), ot = e(ot, Q, pt, ct, Ut, 10, h[57]), ct = e(ct, ot, Q, pt, K, 15, h[58]), pt = e(pt, ct, ot, Q, Ft, 21, h[59]), Q = e(Q, pt, ct, ot, N, 6, h[60]), ot = e(ot, Q, pt, ct, xt, 10, h[61]), ct = e(ct, ot, Q, pt, P, 15, h[62]), pt = e(pt, ct, ot, Q, rt, 21, h[63]), E[0] = E[0] + Q | 0, E[1] = E[1] + pt | 0, E[2] = E[2] + ct | 0, E[3] = E[3] + ot | 0;
                    },
                    _doFinalize: function() {
                      var w = this._data, D = w.words, I = this._nDataBytes * 8, T = w.sigBytes * 8;
                      D[T >>> 5] |= 128 << 24 - T % 32;
                      var C = r.floor(I / 4294967296), E = I;
                      D[(T + 64 >>> 9 << 4) + 15] = (C << 8 | C >>> 24) & 16711935 | (C << 24 | C >>> 8) & 4278255360, D[(T + 64 >>> 9 << 4) + 14] = (E << 8 | E >>> 24) & 16711935 | (E << 24 | E >>> 8) & 4278255360, w.sigBytes = (D.length + 1) * 4, this._process();
                      for (var F = this._hash, x = F.words, P = 0; P < 4; P++) {
                        var L = x[P];
                        x[P] = (L << 8 | L >>> 24) & 16711935 | (L << 24 | L >>> 8) & 4278255360;
                      }
                      return F;
                    },
                    clone: function() {
                      var w = l.clone.call(this);
                      return w._hash = this._hash.clone(), w;
                    }
                  });
                  function v(m, w, D, I, T, C, E) {
                    var F = m + (w & D | ~w & I) + T + E;
                    return (F << C | F >>> 32 - C) + w;
                  }
                  function y(m, w, D, I, T, C, E) {
                    var F = m + (w & I | D & ~I) + T + E;
                    return (F << C | F >>> 32 - C) + w;
                  }
                  function g(m, w, D, I, T, C, E) {
                    var F = m + (w ^ D ^ I) + T + E;
                    return (F << C | F >>> 32 - C) + w;
                  }
                  function e(m, w, D, I, T, C, E) {
                    var F = m + (D ^ (w | ~I)) + T + E;
                    return (F << C | F >>> 32 - C) + w;
                  }
                  n.MD5 = l._createHelper(a), n.HmacMD5 = l._createHmacHelper(a);
                }(Math), o.MD5;
              });
            }
          ),
          /***/
          90347: (
            /***/
            function(u, d, t) {
              t(18821), function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.mode.CFB = function() {
                  var r = o.lib.BlockCipherMode.extend();
                  r.Encryptor = r.extend({
                    processBlock: function(f, l) {
                      var c = this._cipher, h = c.blockSize;
                      n.call(this, f, l, h, c), this._prevBlock = f.slice(l, l + h);
                    }
                  }), r.Decryptor = r.extend({
                    processBlock: function(f, l) {
                      var c = this._cipher, h = c.blockSize, a = f.slice(l, l + h);
                      n.call(this, f, l, h, c), this._prevBlock = a;
                    }
                  });
                  function n(i, f, l, c) {
                    var h, a = this._iv;
                    a ? (h = a.slice(0), this._iv = void 0) : h = this._prevBlock, c.encryptBlock(h, 0);
                    for (var v = 0; v < l; v++)
                      i[f + v] ^= h[v];
                  }
                  return r;
                }(), o.mode.CFB;
              });
            }
          ),
          /***/
          63197: (
            /***/
            function(u, d, t) {
              t(18821), function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                /** @preserve
                 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
                 * derived from CryptoJS.mode.CTR
                 * Jan Hruby jhruby.web@gmail.com
                 */
                return o.mode.CTRGladman = function() {
                  var r = o.lib.BlockCipherMode.extend();
                  function n(l) {
                    if ((l >> 24 & 255) === 255) {
                      var c = l >> 16 & 255, h = l >> 8 & 255, a = l & 255;
                      c === 255 ? (c = 0, h === 255 ? (h = 0, a === 255 ? a = 0 : ++a) : ++h) : ++c, l = 0, l += c << 16, l += h << 8, l += a;
                    } else
                      l += 16777216;
                    return l;
                  }
                  function i(l) {
                    return (l[0] = n(l[0])) === 0 && (l[1] = n(l[1])), l;
                  }
                  var f = r.Encryptor = r.extend({
                    processBlock: function(c, h) {
                      var a = this._cipher, v = a.blockSize, y = this._iv, g = this._counter;
                      y && (g = this._counter = y.slice(0), this._iv = void 0), i(g);
                      var e = g.slice(0);
                      a.encryptBlock(e, 0);
                      for (var m = 0; m < v; m++)
                        c[h + m] ^= e[m];
                    }
                  });
                  return r.Decryptor = f, r;
                }(), o.mode.CTRGladman;
              });
            }
          ),
          /***/
          54032: (
            /***/
            function(u, d, t) {
              t(18821), function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.mode.CTR = function() {
                  var r = o.lib.BlockCipherMode.extend(), n = r.Encryptor = r.extend({
                    processBlock: function(f, l) {
                      var c = this._cipher, h = c.blockSize, a = this._iv, v = this._counter;
                      a && (v = this._counter = a.slice(0), this._iv = void 0);
                      var y = v.slice(0);
                      c.encryptBlock(y, 0), v[h - 1] = v[h - 1] + 1 | 0;
                      for (var g = 0; g < h; g++)
                        f[l + g] ^= y[g];
                    }
                  });
                  return r.Decryptor = n, r;
                }(), o.mode.CTR;
              });
            }
          ),
          /***/
          21123: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              })(void 0, function(o) {
                return o.mode.ECB = function() {
                  var r = o.lib.BlockCipherMode.extend();
                  return r.Encryptor = r.extend({
                    processBlock: function(i, f) {
                      this._cipher.encryptBlock(i, f);
                    }
                  }), r.Decryptor = r.extend({
                    processBlock: function(i, f) {
                      this._cipher.decryptBlock(i, f);
                    }
                  }), r;
                }(), o.mode.ECB;
              });
            }
          ),
          /***/
          38710: (
            /***/
            function(u, d, t) {
              t(18821), function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.mode.OFB = function() {
                  var r = o.lib.BlockCipherMode.extend(), n = r.Encryptor = r.extend({
                    processBlock: function(f, l) {
                      var c = this._cipher, h = c.blockSize, a = this._iv, v = this._keystream;
                      a && (v = this._keystream = a.slice(0), this._iv = void 0), c.encryptBlock(v, 0);
                      for (var y = 0; y < h; y++)
                        f[l + y] ^= v[y];
                    }
                  });
                  return r.Decryptor = n, r;
                }(), o.mode.OFB;
              });
            }
          ),
          /***/
          93007: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              })(void 0, function(o) {
                return o.pad.AnsiX923 = {
                  pad: function(n, i) {
                    var f = n.sigBytes, l = i * 4, c = l - f % l, h = f + c - 1;
                    n.clamp(), n.words[h >>> 2] |= c << 24 - h % 4 * 8, n.sigBytes += c;
                  },
                  unpad: function(n) {
                    var i = n.words[n.sigBytes - 1 >>> 2] & 255;
                    n.sigBytes -= i;
                  }
                }, o.pad.Ansix923;
              });
            }
          ),
          /***/
          7489: (
            /***/
            function(u, d, t) {
              t(55862), function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.pad.Iso10126 = {
                  pad: function(n, i) {
                    var f = i * 4, l = f - n.sigBytes % f;
                    n.concat(o.lib.WordArray.random(l - 1)).concat(o.lib.WordArray.create([l << 24], 1));
                  },
                  unpad: function(n) {
                    var i = n.words[n.sigBytes - 1 >>> 2] & 255;
                    n.sigBytes -= i;
                  }
                }, o.pad.Iso10126;
              });
            }
          ),
          /***/
          91695: (
            /***/
            function(u, d, t) {
              t(55862), function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.pad.Iso97971 = {
                  pad: function(n, i) {
                    n.concat(o.lib.WordArray.create([2147483648], 1)), o.pad.ZeroPadding.pad(n, i);
                  },
                  unpad: function(n) {
                    o.pad.ZeroPadding.unpad(n), n.sigBytes--;
                  }
                }, o.pad.Iso97971;
              });
            }
          ),
          /***/
          68028: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              })(void 0, function(o) {
                return o.pad.NoPadding = {
                  pad: function() {
                  },
                  unpad: function() {
                  }
                }, o.pad.NoPadding;
              });
            }
          ),
          /***/
          29556: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(52810));
              })(void 0, function(o) {
                return o.pad.ZeroPadding = {
                  pad: function(n, i) {
                    var f = i * 4;
                    n.clamp(), n.sigBytes += f - (n.sigBytes % f || f);
                  },
                  unpad: function(n) {
                    for (var i = n.words, f = n.sigBytes - 1, f = n.sigBytes - 1; f >= 0; f--)
                      if (i[f >>> 2] >>> 24 - f % 4 * 8 & 255) {
                        n.sigBytes = f + 1;
                        break;
                      }
                  }
                }, o.pad.ZeroPadding;
              });
            }
          ),
          /***/
          75883: (
            /***/
            function(u, d, t) {
              t(55862), function(o, r, n) {
                u.exports = r(t(53264), t(85209), t(5577));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.Base, f = n.WordArray, l = r.algo, c = l.SHA256, h = l.HMAC, a = l.PBKDF2 = i.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                     * @property {Hasher} hasher The hasher to use. Default: SHA256
                     * @property {number} iterations The number of iterations to perform. Default: 250000
                     */
                    cfg: i.extend({
                      keySize: 128 / 32,
                      hasher: c,
                      iterations: 25e4
                    }),
                    /**
                     * Initializes a newly created key derivation function.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                     *
                     * @example
                     *
                     *     var kdf = CryptoJS.algo.PBKDF2.create();
                     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
                     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
                     */
                    init: function(y) {
                      this.cfg = this.cfg.extend(y);
                    },
                    /**
                     * Computes the Password-Based Key Derivation Function 2.
                     *
                     * @param {WordArray|string} password The password.
                     * @param {WordArray|string} salt A salt.
                     *
                     * @return {WordArray} The derived key.
                     *
                     * @example
                     *
                     *     var key = kdf.compute(password, salt);
                     */
                    compute: function(y, g) {
                      for (var e = this.cfg, m = h.create(e.hasher, y), w = f.create(), D = f.create([1]), I = w.words, T = D.words, C = e.keySize, E = e.iterations; I.length < C; ) {
                        var F = m.update(g).finalize(D);
                        m.reset();
                        for (var x = F.words, P = x.length, L = F, N = 1; N < E; N++) {
                          L = m.finalize(L), m.reset();
                          for (var M = L.words, K = 0; K < P; K++)
                            x[K] ^= M[K];
                        }
                        w.concat(F), T[0]++;
                      }
                      return w.sigBytes = C * 4, w;
                    }
                  });
                  r.PBKDF2 = function(v, y, g) {
                    return a.create(g).compute(v, y);
                  };
                }(), o.PBKDF2;
              });
            }
          ),
          /***/
          79338: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.StreamCipher, f = r.algo, l = [], c = [], h = [], a = f.RabbitLegacy = i.extend({
                    _doReset: function() {
                      var g = this._key.words, e = this.cfg.iv, m = this._X = [g[0], g[3] << 16 | g[2] >>> 16, g[1], g[0] << 16 | g[3] >>> 16, g[2], g[1] << 16 | g[0] >>> 16, g[3], g[2] << 16 | g[1] >>> 16], w = this._C = [g[2] << 16 | g[2] >>> 16, g[0] & 4294901760 | g[1] & 65535, g[3] << 16 | g[3] >>> 16, g[1] & 4294901760 | g[2] & 65535, g[0] << 16 | g[0] >>> 16, g[2] & 4294901760 | g[3] & 65535, g[1] << 16 | g[1] >>> 16, g[3] & 4294901760 | g[0] & 65535];
                      this._b = 0;
                      for (var D = 0; D < 4; D++)
                        v.call(this);
                      for (var D = 0; D < 8; D++)
                        w[D] ^= m[D + 4 & 7];
                      if (e) {
                        var I = e.words, T = I[0], C = I[1], E = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, F = (C << 8 | C >>> 24) & 16711935 | (C << 24 | C >>> 8) & 4278255360, x = E >>> 16 | F & 4294901760, P = F << 16 | E & 65535;
                        w[0] ^= E, w[1] ^= x, w[2] ^= F, w[3] ^= P, w[4] ^= E, w[5] ^= x, w[6] ^= F, w[7] ^= P;
                        for (var D = 0; D < 4; D++)
                          v.call(this);
                      }
                    },
                    _doProcessBlock: function(g, e) {
                      var m = this._X;
                      v.call(this), l[0] = m[0] ^ m[5] >>> 16 ^ m[3] << 16, l[1] = m[2] ^ m[7] >>> 16 ^ m[5] << 16, l[2] = m[4] ^ m[1] >>> 16 ^ m[7] << 16, l[3] = m[6] ^ m[3] >>> 16 ^ m[1] << 16;
                      for (var w = 0; w < 4; w++)
                        l[w] = (l[w] << 8 | l[w] >>> 24) & 16711935 | (l[w] << 24 | l[w] >>> 8) & 4278255360, g[e + w] ^= l[w];
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  function v() {
                    for (var y = this._X, g = this._C, e = 0; e < 8; e++)
                      c[e] = g[e];
                    g[0] = g[0] + 1295307597 + this._b | 0, g[1] = g[1] + 3545052371 + (g[0] >>> 0 < c[0] >>> 0 ? 1 : 0) | 0, g[2] = g[2] + 886263092 + (g[1] >>> 0 < c[1] >>> 0 ? 1 : 0) | 0, g[3] = g[3] + 1295307597 + (g[2] >>> 0 < c[2] >>> 0 ? 1 : 0) | 0, g[4] = g[4] + 3545052371 + (g[3] >>> 0 < c[3] >>> 0 ? 1 : 0) | 0, g[5] = g[5] + 886263092 + (g[4] >>> 0 < c[4] >>> 0 ? 1 : 0) | 0, g[6] = g[6] + 1295307597 + (g[5] >>> 0 < c[5] >>> 0 ? 1 : 0) | 0, g[7] = g[7] + 3545052371 + (g[6] >>> 0 < c[6] >>> 0 ? 1 : 0) | 0, this._b = g[7] >>> 0 < c[7] >>> 0 ? 1 : 0;
                    for (var e = 0; e < 8; e++) {
                      var m = y[e] + g[e], w = m & 65535, D = m >>> 16, I = ((w * w >>> 17) + w * D >>> 15) + D * D, T = ((m & 4294901760) * m | 0) + ((m & 65535) * m | 0);
                      h[e] = I ^ T;
                    }
                    y[0] = h[0] + (h[7] << 16 | h[7] >>> 16) + (h[6] << 16 | h[6] >>> 16) | 0, y[1] = h[1] + (h[0] << 8 | h[0] >>> 24) + h[7] | 0, y[2] = h[2] + (h[1] << 16 | h[1] >>> 16) + (h[0] << 16 | h[0] >>> 16) | 0, y[3] = h[3] + (h[2] << 8 | h[2] >>> 24) + h[1] | 0, y[4] = h[4] + (h[3] << 16 | h[3] >>> 16) + (h[2] << 16 | h[2] >>> 16) | 0, y[5] = h[5] + (h[4] << 8 | h[4] >>> 24) + h[3] | 0, y[6] = h[6] + (h[5] << 16 | h[5] >>> 16) + (h[4] << 16 | h[4] >>> 16) | 0, y[7] = h[7] + (h[6] << 8 | h[6] >>> 24) + h[5] | 0;
                  }
                  r.RabbitLegacy = i._createHelper(a);
                }(), o.RabbitLegacy;
              });
            }
          ),
          /***/
          24222: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.StreamCipher, f = r.algo, l = [], c = [], h = [], a = f.Rabbit = i.extend({
                    _doReset: function() {
                      for (var g = this._key.words, e = this.cfg.iv, m = 0; m < 4; m++)
                        g[m] = (g[m] << 8 | g[m] >>> 24) & 16711935 | (g[m] << 24 | g[m] >>> 8) & 4278255360;
                      var w = this._X = [g[0], g[3] << 16 | g[2] >>> 16, g[1], g[0] << 16 | g[3] >>> 16, g[2], g[1] << 16 | g[0] >>> 16, g[3], g[2] << 16 | g[1] >>> 16], D = this._C = [g[2] << 16 | g[2] >>> 16, g[0] & 4294901760 | g[1] & 65535, g[3] << 16 | g[3] >>> 16, g[1] & 4294901760 | g[2] & 65535, g[0] << 16 | g[0] >>> 16, g[2] & 4294901760 | g[3] & 65535, g[1] << 16 | g[1] >>> 16, g[3] & 4294901760 | g[0] & 65535];
                      this._b = 0;
                      for (var m = 0; m < 4; m++)
                        v.call(this);
                      for (var m = 0; m < 8; m++)
                        D[m] ^= w[m + 4 & 7];
                      if (e) {
                        var I = e.words, T = I[0], C = I[1], E = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, F = (C << 8 | C >>> 24) & 16711935 | (C << 24 | C >>> 8) & 4278255360, x = E >>> 16 | F & 4294901760, P = F << 16 | E & 65535;
                        D[0] ^= E, D[1] ^= x, D[2] ^= F, D[3] ^= P, D[4] ^= E, D[5] ^= x, D[6] ^= F, D[7] ^= P;
                        for (var m = 0; m < 4; m++)
                          v.call(this);
                      }
                    },
                    _doProcessBlock: function(g, e) {
                      var m = this._X;
                      v.call(this), l[0] = m[0] ^ m[5] >>> 16 ^ m[3] << 16, l[1] = m[2] ^ m[7] >>> 16 ^ m[5] << 16, l[2] = m[4] ^ m[1] >>> 16 ^ m[7] << 16, l[3] = m[6] ^ m[3] >>> 16 ^ m[1] << 16;
                      for (var w = 0; w < 4; w++)
                        l[w] = (l[w] << 8 | l[w] >>> 24) & 16711935 | (l[w] << 24 | l[w] >>> 8) & 4278255360, g[e + w] ^= l[w];
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  function v() {
                    for (var y = this._X, g = this._C, e = 0; e < 8; e++)
                      c[e] = g[e];
                    g[0] = g[0] + 1295307597 + this._b | 0, g[1] = g[1] + 3545052371 + (g[0] >>> 0 < c[0] >>> 0 ? 1 : 0) | 0, g[2] = g[2] + 886263092 + (g[1] >>> 0 < c[1] >>> 0 ? 1 : 0) | 0, g[3] = g[3] + 1295307597 + (g[2] >>> 0 < c[2] >>> 0 ? 1 : 0) | 0, g[4] = g[4] + 3545052371 + (g[3] >>> 0 < c[3] >>> 0 ? 1 : 0) | 0, g[5] = g[5] + 886263092 + (g[4] >>> 0 < c[4] >>> 0 ? 1 : 0) | 0, g[6] = g[6] + 1295307597 + (g[5] >>> 0 < c[5] >>> 0 ? 1 : 0) | 0, g[7] = g[7] + 3545052371 + (g[6] >>> 0 < c[6] >>> 0 ? 1 : 0) | 0, this._b = g[7] >>> 0 < c[7] >>> 0 ? 1 : 0;
                    for (var e = 0; e < 8; e++) {
                      var m = y[e] + g[e], w = m & 65535, D = m >>> 16, I = ((w * w >>> 17) + w * D >>> 15) + D * D, T = ((m & 4294901760) * m | 0) + ((m & 65535) * m | 0);
                      h[e] = I ^ T;
                    }
                    y[0] = h[0] + (h[7] << 16 | h[7] >>> 16) + (h[6] << 16 | h[6] >>> 16) | 0, y[1] = h[1] + (h[0] << 8 | h[0] >>> 24) + h[7] | 0, y[2] = h[2] + (h[1] << 16 | h[1] >>> 16) + (h[0] << 16 | h[0] >>> 16) | 0, y[3] = h[3] + (h[2] << 8 | h[2] >>> 24) + h[1] | 0, y[4] = h[4] + (h[3] << 16 | h[3] >>> 16) + (h[2] << 16 | h[2] >>> 16) | 0, y[5] = h[5] + (h[4] << 8 | h[4] >>> 24) + h[3] | 0, y[6] = h[6] + (h[5] << 16 | h[5] >>> 16) + (h[4] << 16 | h[4] >>> 16) | 0, y[7] = h[7] + (h[6] << 8 | h[6] >>> 24) + h[5] | 0;
                  }
                  r.Rabbit = i._createHelper(a);
                }(), o.Rabbit;
              });
            }
          ),
          /***/
          97690: (
            /***/
            function(u, d, t) {
              t(10853), t(35054), function(o, r, n) {
                u.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.StreamCipher, f = r.algo, l = f.RC4 = i.extend({
                    _doReset: function() {
                      for (var v = this._key, y = v.words, g = v.sigBytes, e = this._S = [], m = 0; m < 256; m++)
                        e[m] = m;
                      for (var m = 0, w = 0; m < 256; m++) {
                        var D = m % g, I = y[D >>> 2] >>> 24 - D % 4 * 8 & 255;
                        w = (w + e[m] + I) % 256;
                        var T = e[m];
                        e[m] = e[w], e[w] = T;
                      }
                      this._i = this._j = 0;
                    },
                    _doProcessBlock: function(v, y) {
                      v[y] ^= c.call(this);
                    },
                    keySize: 256 / 32,
                    ivSize: 0
                  });
                  function c() {
                    for (var a = this._S, v = this._i, y = this._j, g = 0, e = 0; e < 4; e++) {
                      v = (v + 1) % 256, y = (y + a[v]) % 256;
                      var m = a[v];
                      a[v] = a[y], a[y] = m, g |= a[(a[v] + a[y]) % 256] << 24 - e * 8;
                    }
                    return this._i = v, this._j = y, g;
                  }
                  r.RC4 = i._createHelper(l);
                  var h = f.RC4Drop = l.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} drop The number of keystream words to drop. Default 192
                     */
                    cfg: l.cfg.extend({
                      drop: 192
                    }),
                    _doReset: function() {
                      l._doReset.call(this);
                      for (var v = this.cfg.drop; v > 0; v--)
                        c.call(this);
                    }
                  });
                  r.RC4Drop = i._createHelper(h);
                }(), o.RC4;
              });
            }
          ),
          /***/
          53601: (
            /***/
            function(u, d, t) {
              (function(o, r) {
                u.exports = r(t(53264));
              })(void 0, function(o) {
                /** @preserve
                (c) 2012 by CÃ©dric Mesnil. All rights reserved.
                	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
                	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                */
                return function(r) {
                  var n = o, i = n.lib, f = i.WordArray, l = i.Hasher, c = n.algo, h = f.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), a = f.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), v = f.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), y = f.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), g = f.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), e = f.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), m = c.RIPEMD160 = l.extend({
                    _doReset: function() {
                      this._hash = f.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function(x, P) {
                      for (var L = 0; L < 16; L++) {
                        var N = P + L, M = x[N];
                        x[N] = (M << 8 | M >>> 24) & 16711935 | (M << 24 | M >>> 8) & 4278255360;
                      }
                      var K = this._hash.words, ut = g.words, J = e.words, rt = h.words, yt = a.words, xt = v.words, Et = y.words, Ft, Rt, Ut, Q, pt, ct, ot, mt, G, Tt;
                      ct = Ft = K[0], ot = Rt = K[1], mt = Ut = K[2], G = Q = K[3], Tt = pt = K[4];
                      for (var z, L = 0; L < 80; L += 1)
                        z = Ft + x[P + rt[L]] | 0, L < 16 ? z += w(Rt, Ut, Q) + ut[0] : L < 32 ? z += D(Rt, Ut, Q) + ut[1] : L < 48 ? z += I(Rt, Ut, Q) + ut[2] : L < 64 ? z += T(Rt, Ut, Q) + ut[3] : z += C(Rt, Ut, Q) + ut[4], z = z | 0, z = E(z, xt[L]), z = z + pt | 0, Ft = pt, pt = Q, Q = E(Ut, 10), Ut = Rt, Rt = z, z = ct + x[P + yt[L]] | 0, L < 16 ? z += C(ot, mt, G) + J[0] : L < 32 ? z += T(ot, mt, G) + J[1] : L < 48 ? z += I(ot, mt, G) + J[2] : L < 64 ? z += D(ot, mt, G) + J[3] : z += w(ot, mt, G) + J[4], z = z | 0, z = E(z, Et[L]), z = z + Tt | 0, ct = Tt, Tt = G, G = E(mt, 10), mt = ot, ot = z;
                      z = K[1] + Ut + G | 0, K[1] = K[2] + Q + Tt | 0, K[2] = K[3] + pt + ct | 0, K[3] = K[4] + Ft + ot | 0, K[4] = K[0] + Rt + mt | 0, K[0] = z;
                    },
                    _doFinalize: function() {
                      var x = this._data, P = x.words, L = this._nDataBytes * 8, N = x.sigBytes * 8;
                      P[N >>> 5] |= 128 << 24 - N % 32, P[(N + 64 >>> 9 << 4) + 14] = (L << 8 | L >>> 24) & 16711935 | (L << 24 | L >>> 8) & 4278255360, x.sigBytes = (P.length + 1) * 4, this._process();
                      for (var M = this._hash, K = M.words, ut = 0; ut < 5; ut++) {
                        var J = K[ut];
                        K[ut] = (J << 8 | J >>> 24) & 16711935 | (J << 24 | J >>> 8) & 4278255360;
                      }
                      return M;
                    },
                    clone: function() {
                      var x = l.clone.call(this);
                      return x._hash = this._hash.clone(), x;
                    }
                  });
                  function w(F, x, P) {
                    return F ^ x ^ P;
                  }
                  function D(F, x, P) {
                    return F & x | ~F & P;
                  }
                  function I(F, x, P) {
                    return (F | ~x) ^ P;
                  }
                  function T(F, x, P) {
                    return F & P | x & ~P;
                  }
                  function C(F, x, P) {
                    return F ^ (x | ~P);
                  }
                  function E(F, x) {
                    return F << x | F >>> 32 - x;
                  }
                  n.RIPEMD160 = l._createHelper(m), n.HmacRIPEMD160 = l._createHmacHelper(m);
                }(), o.RIPEMD160;
              });
            }
          ),
          /***/
          61977: (
            /***/
            function(u, d, t) {
              (function(o, r) {
                u.exports = r(t(53264));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = n.Hasher, l = r.algo, c = [], h = l.SHA1 = f.extend({
                    _doReset: function() {
                      this._hash = new i.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function(v, y) {
                      for (var g = this._hash.words, e = g[0], m = g[1], w = g[2], D = g[3], I = g[4], T = 0; T < 80; T++) {
                        if (T < 16)
                          c[T] = v[y + T] | 0;
                        else {
                          var C = c[T - 3] ^ c[T - 8] ^ c[T - 14] ^ c[T - 16];
                          c[T] = C << 1 | C >>> 31;
                        }
                        var E = (e << 5 | e >>> 27) + I + c[T];
                        T < 20 ? E += (m & w | ~m & D) + 1518500249 : T < 40 ? E += (m ^ w ^ D) + 1859775393 : T < 60 ? E += (m & w | m & D | w & D) - 1894007588 : E += (m ^ w ^ D) - 899497514, I = D, D = w, w = m << 30 | m >>> 2, m = e, e = E;
                      }
                      g[0] = g[0] + e | 0, g[1] = g[1] + m | 0, g[2] = g[2] + w | 0, g[3] = g[3] + D | 0, g[4] = g[4] + I | 0;
                    },
                    _doFinalize: function() {
                      var v = this._data, y = v.words, g = this._nDataBytes * 8, e = v.sigBytes * 8;
                      return y[e >>> 5] |= 128 << 24 - e % 32, y[(e + 64 >>> 9 << 4) + 14] = Math.floor(g / 4294967296), y[(e + 64 >>> 9 << 4) + 15] = g, v.sigBytes = y.length * 4, this._process(), this._hash;
                    },
                    clone: function() {
                      var v = f.clone.call(this);
                      return v._hash = this._hash.clone(), v;
                    }
                  });
                  r.SHA1 = f._createHelper(h), r.HmacSHA1 = f._createHmacHelper(h);
                }(), o.SHA1;
              });
            }
          ),
          /***/
          11707: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(85209));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = r.algo, l = f.SHA256, c = f.SHA224 = l.extend({
                    _doReset: function() {
                      this._hash = new i.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
                    },
                    _doFinalize: function() {
                      var a = l._doFinalize.call(this);
                      return a.sigBytes -= 4, a;
                    }
                  });
                  r.SHA224 = l._createHelper(c), r.HmacSHA224 = l._createHmacHelper(c);
                }(), o.SHA224;
              });
            }
          ),
          /***/
          85209: (
            /***/
            function(u, d, t) {
              t(18821), function(o, r) {
                u.exports = r(t(53264));
              }(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.WordArray, l = i.Hasher, c = n.algo, h = [], a = [];
                  (function() {
                    function g(D) {
                      for (var I = r.sqrt(D), T = 2; T <= I; T++)
                        if (!(D % T))
                          return !1;
                      return !0;
                    }
                    function e(D) {
                      return (D - (D | 0)) * 4294967296 | 0;
                    }
                    for (var m = 2, w = 0; w < 64; )
                      g(m) && (w < 8 && (h[w] = e(r.pow(m, 0.5))), a[w] = e(r.pow(m, 0.3333333333333333)), w++), m++;
                  })();
                  var v = [], y = c.SHA256 = l.extend({
                    _doReset: function() {
                      this._hash = new f.init(h.slice(0));
                    },
                    _doProcessBlock: function(e, m) {
                      for (var w = this._hash.words, D = w[0], I = w[1], T = w[2], C = w[3], E = w[4], F = w[5], x = w[6], P = w[7], L = 0; L < 64; L++) {
                        if (L < 16)
                          v[L] = e[m + L] | 0;
                        else {
                          var N = v[L - 15], M = (N << 25 | N >>> 7) ^ (N << 14 | N >>> 18) ^ N >>> 3, K = v[L - 2], ut = (K << 15 | K >>> 17) ^ (K << 13 | K >>> 19) ^ K >>> 10;
                          v[L] = M + v[L - 7] + ut + v[L - 16];
                        }
                        var J = E & F ^ ~E & x, rt = D & I ^ D & T ^ I & T, yt = (D << 30 | D >>> 2) ^ (D << 19 | D >>> 13) ^ (D << 10 | D >>> 22), xt = (E << 26 | E >>> 6) ^ (E << 21 | E >>> 11) ^ (E << 7 | E >>> 25), Et = P + xt + J + a[L] + v[L], Ft = yt + rt;
                        P = x, x = F, F = E, E = C + Et | 0, C = T, T = I, I = D, D = Et + Ft | 0;
                      }
                      w[0] = w[0] + D | 0, w[1] = w[1] + I | 0, w[2] = w[2] + T | 0, w[3] = w[3] + C | 0, w[4] = w[4] + E | 0, w[5] = w[5] + F | 0, w[6] = w[6] + x | 0, w[7] = w[7] + P | 0;
                    },
                    _doFinalize: function() {
                      var e = this._data, m = e.words, w = this._nDataBytes * 8, D = e.sigBytes * 8;
                      return m[D >>> 5] |= 128 << 24 - D % 32, m[(D + 64 >>> 9 << 4) + 14] = r.floor(w / 4294967296), m[(D + 64 >>> 9 << 4) + 15] = w, e.sigBytes = m.length * 4, this._process(), this._hash;
                    },
                    clone: function() {
                      var e = l.clone.call(this);
                      return e._hash = this._hash.clone(), e;
                    }
                  });
                  n.SHA256 = l._createHelper(y), n.HmacSHA256 = l._createHmacHelper(y);
                }(Math), o.SHA256;
              });
            }
          ),
          /***/
          11691: (
            /***/
            function(u, d, t) {
              t(18821), function(o, r, n) {
                u.exports = r(t(53264), t(23204));
              }(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.WordArray, l = i.Hasher, c = n.x64, h = c.Word, a = n.algo, v = [], y = [], g = [];
                  (function() {
                    for (var w = 1, D = 0, I = 0; I < 24; I++) {
                      v[w + 5 * D] = (I + 1) * (I + 2) / 2 % 64;
                      var T = D % 5, C = (2 * w + 3 * D) % 5;
                      w = T, D = C;
                    }
                    for (var w = 0; w < 5; w++)
                      for (var D = 0; D < 5; D++)
                        y[w + 5 * D] = D + (2 * w + 3 * D) % 5 * 5;
                    for (var E = 1, F = 0; F < 24; F++) {
                      for (var x = 0, P = 0, L = 0; L < 7; L++) {
                        if (E & 1) {
                          var N = (1 << L) - 1;
                          N < 32 ? P ^= 1 << N : x ^= 1 << N - 32;
                        }
                        E & 128 ? E = E << 1 ^ 113 : E <<= 1;
                      }
                      g[F] = h.create(x, P);
                    }
                  })();
                  var e = [];
                  (function() {
                    for (var w = 0; w < 25; w++)
                      e[w] = h.create();
                  })();
                  var m = a.SHA3 = l.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} outputLength
                     *   The desired number of bits in the output hash.
                     *   Only values permitted are: 224, 256, 384, 512.
                     *   Default: 512
                     */
                    cfg: l.cfg.extend({
                      outputLength: 512
                    }),
                    _doReset: function() {
                      for (var D = this._state = [], I = 0; I < 25; I++)
                        D[I] = new h.init();
                      this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
                    },
                    _doProcessBlock: function(D, I) {
                      for (var T = this._state, C = this.blockSize / 2, E = 0; E < C; E++) {
                        var F = D[I + 2 * E], x = D[I + 2 * E + 1];
                        F = (F << 8 | F >>> 24) & 16711935 | (F << 24 | F >>> 8) & 4278255360, x = (x << 8 | x >>> 24) & 16711935 | (x << 24 | x >>> 8) & 4278255360;
                        var P = T[E];
                        P.high ^= x, P.low ^= F;
                      }
                      for (var L = 0; L < 24; L++) {
                        for (var N = 0; N < 5; N++) {
                          for (var M = 0, K = 0, ut = 0; ut < 5; ut++) {
                            var P = T[N + 5 * ut];
                            M ^= P.high, K ^= P.low;
                          }
                          var J = e[N];
                          J.high = M, J.low = K;
                        }
                        for (var N = 0; N < 5; N++)
                          for (var rt = e[(N + 4) % 5], yt = e[(N + 1) % 5], xt = yt.high, Et = yt.low, M = rt.high ^ (xt << 1 | Et >>> 31), K = rt.low ^ (Et << 1 | xt >>> 31), ut = 0; ut < 5; ut++) {
                            var P = T[N + 5 * ut];
                            P.high ^= M, P.low ^= K;
                          }
                        for (var Ft = 1; Ft < 25; Ft++) {
                          var M, K, P = T[Ft], Rt = P.high, Ut = P.low, Q = v[Ft];
                          Q < 32 ? (M = Rt << Q | Ut >>> 32 - Q, K = Ut << Q | Rt >>> 32 - Q) : (M = Ut << Q - 32 | Rt >>> 64 - Q, K = Rt << Q - 32 | Ut >>> 64 - Q);
                          var pt = e[y[Ft]];
                          pt.high = M, pt.low = K;
                        }
                        var ct = e[0], ot = T[0];
                        ct.high = ot.high, ct.low = ot.low;
                        for (var N = 0; N < 5; N++)
                          for (var ut = 0; ut < 5; ut++) {
                            var Ft = N + 5 * ut, P = T[Ft], mt = e[Ft], G = e[(N + 1) % 5 + 5 * ut], Tt = e[(N + 2) % 5 + 5 * ut];
                            P.high = mt.high ^ ~G.high & Tt.high, P.low = mt.low ^ ~G.low & Tt.low;
                          }
                        var P = T[0], z = g[L];
                        P.high ^= z.high, P.low ^= z.low;
                      }
                    },
                    _doFinalize: function() {
                      var D = this._data, I = D.words;
                      this._nDataBytes * 8;
                      var T = D.sigBytes * 8, C = this.blockSize * 32;
                      I[T >>> 5] |= 1 << 24 - T % 32, I[(r.ceil((T + 1) / C) * C >>> 5) - 1] |= 128, D.sigBytes = I.length * 4, this._process();
                      for (var E = this._state, F = this.cfg.outputLength / 8, x = F / 8, P = [], L = 0; L < x; L++) {
                        var N = E[L], M = N.high, K = N.low;
                        M = (M << 8 | M >>> 24) & 16711935 | (M << 24 | M >>> 8) & 4278255360, K = (K << 8 | K >>> 24) & 16711935 | (K << 24 | K >>> 8) & 4278255360, P.push(K), P.push(M);
                      }
                      return new f.init(P, F);
                    },
                    clone: function() {
                      for (var D = l.clone.call(this), I = D._state = this._state.slice(0), T = 0; T < 25; T++)
                        I[T] = I[T].clone();
                      return D;
                    }
                  });
                  n.SHA3 = l._createHelper(m), n.HmacSHA3 = l._createHmacHelper(m);
                }(Math), o.SHA3;
              });
            }
          ),
          /***/
          21410: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(23204), t(20595));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.x64, i = n.Word, f = n.WordArray, l = r.algo, c = l.SHA512, h = l.SHA384 = c.extend({
                    _doReset: function() {
                      this._hash = new f.init([new i.init(3418070365, 3238371032), new i.init(1654270250, 914150663), new i.init(2438529370, 812702999), new i.init(355462360, 4144912697), new i.init(1731405415, 4290775857), new i.init(2394180231, 1750603025), new i.init(3675008525, 1694076839), new i.init(1203062813, 3204075428)]);
                    },
                    _doFinalize: function() {
                      var v = c._doFinalize.call(this);
                      return v.sigBytes -= 16, v;
                    }
                  });
                  r.SHA384 = c._createHelper(h), r.HmacSHA384 = c._createHmacHelper(h);
                }(), o.SHA384;
              });
            }
          ),
          /***/
          20595: (
            /***/
            function(u, d, t) {
              (function(o, r, n) {
                u.exports = r(t(53264), t(23204));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.Hasher, f = r.x64, l = f.Word, c = f.WordArray, h = r.algo;
                  function a() {
                    return l.create.apply(l, arguments);
                  }
                  var v = [a(1116352408, 3609767458), a(1899447441, 602891725), a(3049323471, 3964484399), a(3921009573, 2173295548), a(961987163, 4081628472), a(1508970993, 3053834265), a(2453635748, 2937671579), a(2870763221, 3664609560), a(3624381080, 2734883394), a(310598401, 1164996542), a(607225278, 1323610764), a(1426881987, 3590304994), a(1925078388, 4068182383), a(2162078206, 991336113), a(2614888103, 633803317), a(3248222580, 3479774868), a(3835390401, 2666613458), a(4022224774, 944711139), a(264347078, 2341262773), a(604807628, 2007800933), a(770255983, 1495990901), a(1249150122, 1856431235), a(1555081692, 3175218132), a(1996064986, 2198950837), a(2554220882, 3999719339), a(2821834349, 766784016), a(2952996808, 2566594879), a(3210313671, 3203337956), a(3336571891, 1034457026), a(3584528711, 2466948901), a(113926993, 3758326383), a(338241895, 168717936), a(666307205, 1188179964), a(773529912, 1546045734), a(1294757372, 1522805485), a(1396182291, 2643833823), a(1695183700, 2343527390), a(1986661051, 1014477480), a(2177026350, 1206759142), a(2456956037, 344077627), a(2730485921, 1290863460), a(2820302411, 3158454273), a(3259730800, 3505952657), a(3345764771, 106217008), a(3516065817, 3606008344), a(3600352804, 1432725776), a(4094571909, 1467031594), a(275423344, 851169720), a(430227734, 3100823752), a(506948616, 1363258195), a(659060556, 3750685593), a(883997877, 3785050280), a(958139571, 3318307427), a(1322822218, 3812723403), a(1537002063, 2003034995), a(1747873779, 3602036899), a(1955562222, 1575990012), a(2024104815, 1125592928), a(2227730452, 2716904306), a(2361852424, 442776044), a(2428436474, 593698344), a(2756734187, 3733110249), a(3204031479, 2999351573), a(3329325298, 3815920427), a(3391569614, 3928383900), a(3515267271, 566280711), a(3940187606, 3454069534), a(4118630271, 4000239992), a(116418474, 1914138554), a(174292421, 2731055270), a(289380356, 3203993006), a(460393269, 320620315), a(685471733, 587496836), a(852142971, 1086792851), a(1017036298, 365543100), a(1126000580, 2618297676), a(1288033470, 3409855158), a(1501505948, 4234509866), a(1607167915, 987167468), a(1816402316, 1246189591)], y = [];
                  (function() {
                    for (var e = 0; e < 80; e++)
                      y[e] = a();
                  })();
                  var g = h.SHA512 = i.extend({
                    _doReset: function() {
                      this._hash = new c.init([new l.init(1779033703, 4089235720), new l.init(3144134277, 2227873595), new l.init(1013904242, 4271175723), new l.init(2773480762, 1595750129), new l.init(1359893119, 2917565137), new l.init(2600822924, 725511199), new l.init(528734635, 4215389547), new l.init(1541459225, 327033209)]);
                    },
                    _doProcessBlock: function(m, w) {
                      for (var D = this._hash.words, I = D[0], T = D[1], C = D[2], E = D[3], F = D[4], x = D[5], P = D[6], L = D[7], N = I.high, M = I.low, K = T.high, ut = T.low, J = C.high, rt = C.low, yt = E.high, xt = E.low, Et = F.high, Ft = F.low, Rt = x.high, Ut = x.low, Q = P.high, pt = P.low, ct = L.high, ot = L.low, mt = N, G = M, Tt = K, z = ut, S = J, k = rt, V = yt, it = xt, tt = Et, _ = Ft, At = Rt, Lt = Ut, Yt = Q, Gt = pt, Dt = ct, ae = ot, Ae = 0; Ae < 80; Ae++) {
                        var xe, ce, we = y[Ae];
                        if (Ae < 16)
                          ce = we.high = m[w + Ae * 2] | 0, xe = we.low = m[w + Ae * 2 + 1] | 0;
                        else {
                          var zt = y[Ae - 15], Qt = zt.high, le = zt.low, de = (Qt >>> 1 | le << 31) ^ (Qt >>> 8 | le << 24) ^ Qt >>> 7, be = (le >>> 1 | Qt << 31) ^ (le >>> 8 | Qt << 24) ^ (le >>> 7 | Qt << 25), Pe = y[Ae - 2], Fe = Pe.high, It = Pe.low, fe = (Fe >>> 19 | It << 13) ^ (Fe << 3 | It >>> 29) ^ Fe >>> 6, st = (It >>> 19 | Fe << 13) ^ (It << 3 | Fe >>> 29) ^ (It >>> 6 | Fe << 26), Y = y[Ae - 7], j = Y.high, bt = Y.low, at = y[Ae - 16], Wt = at.high, _t = at.low;
                          xe = be + bt, ce = de + j + (xe >>> 0 < be >>> 0 ? 1 : 0), xe = xe + st, ce = ce + fe + (xe >>> 0 < st >>> 0 ? 1 : 0), xe = xe + _t, ce = ce + Wt + (xe >>> 0 < _t >>> 0 ? 1 : 0), we.high = ce, we.low = xe;
                        }
                        var $ = tt & At ^ ~tt & Yt, Jt = _ & Lt ^ ~_ & Gt, te = mt & Tt ^ mt & S ^ Tt & S, Ct = G & z ^ G & k ^ z & k, Ht = (mt >>> 28 | G << 4) ^ (mt << 30 | G >>> 2) ^ (mt << 25 | G >>> 7), oe = (G >>> 28 | mt << 4) ^ (G << 30 | mt >>> 2) ^ (G << 25 | mt >>> 7), Le = (tt >>> 14 | _ << 18) ^ (tt >>> 18 | _ << 14) ^ (tt << 23 | _ >>> 9), De = (_ >>> 14 | tt << 18) ^ (_ >>> 18 | tt << 14) ^ (_ << 23 | tt >>> 9), ke = v[Ae], Ne = ke.high, rn = ke.low, tr = ae + De, Ze = Dt + Le + (tr >>> 0 < ae >>> 0 ? 1 : 0), tr = tr + Jt, Ze = Ze + $ + (tr >>> 0 < Jt >>> 0 ? 1 : 0), tr = tr + rn, Ze = Ze + Ne + (tr >>> 0 < rn >>> 0 ? 1 : 0), tr = tr + xe, Ze = Ze + ce + (tr >>> 0 < xe >>> 0 ? 1 : 0), br = oe + Ct, Ir = Ht + te + (br >>> 0 < oe >>> 0 ? 1 : 0);
                        Dt = Yt, ae = Gt, Yt = At, Gt = Lt, At = tt, Lt = _, _ = it + tr | 0, tt = V + Ze + (_ >>> 0 < it >>> 0 ? 1 : 0) | 0, V = S, it = k, S = Tt, k = z, Tt = mt, z = G, G = tr + br | 0, mt = Ze + Ir + (G >>> 0 < tr >>> 0 ? 1 : 0) | 0;
                      }
                      M = I.low = M + G, I.high = N + mt + (M >>> 0 < G >>> 0 ? 1 : 0), ut = T.low = ut + z, T.high = K + Tt + (ut >>> 0 < z >>> 0 ? 1 : 0), rt = C.low = rt + k, C.high = J + S + (rt >>> 0 < k >>> 0 ? 1 : 0), xt = E.low = xt + it, E.high = yt + V + (xt >>> 0 < it >>> 0 ? 1 : 0), Ft = F.low = Ft + _, F.high = Et + tt + (Ft >>> 0 < _ >>> 0 ? 1 : 0), Ut = x.low = Ut + Lt, x.high = Rt + At + (Ut >>> 0 < Lt >>> 0 ? 1 : 0), pt = P.low = pt + Gt, P.high = Q + Yt + (pt >>> 0 < Gt >>> 0 ? 1 : 0), ot = L.low = ot + ae, L.high = ct + Dt + (ot >>> 0 < ae >>> 0 ? 1 : 0);
                    },
                    _doFinalize: function() {
                      var m = this._data, w = m.words, D = this._nDataBytes * 8, I = m.sigBytes * 8;
                      w[I >>> 5] |= 128 << 24 - I % 32, w[(I + 128 >>> 10 << 5) + 30] = Math.floor(D / 4294967296), w[(I + 128 >>> 10 << 5) + 31] = D, m.sigBytes = w.length * 4, this._process();
                      var T = this._hash.toX32();
                      return T;
                    },
                    clone: function() {
                      var m = i.clone.call(this);
                      return m._hash = this._hash.clone(), m;
                    },
                    blockSize: 1024 / 32
                  });
                  r.SHA512 = i._createHelper(g), r.HmacSHA512 = i._createHmacHelper(g);
                }(), o.SHA512;
              });
            }
          ),
          /***/
          77059: (
            /***/
            function(u, d, t) {
              t(18821), function(o, r, n) {
                u.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = n.BlockCipher, l = r.algo, c = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], h = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], a = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], v = [{
                    0: 8421888,
                    268435456: 32768,
                    536870912: 8421378,
                    805306368: 2,
                    1073741824: 512,
                    1342177280: 8421890,
                    1610612736: 8389122,
                    1879048192: 8388608,
                    2147483648: 514,
                    2415919104: 8389120,
                    2684354560: 33280,
                    2952790016: 8421376,
                    3221225472: 32770,
                    3489660928: 8388610,
                    3758096384: 0,
                    4026531840: 33282,
                    134217728: 0,
                    402653184: 8421890,
                    671088640: 33282,
                    939524096: 32768,
                    1207959552: 8421888,
                    1476395008: 512,
                    1744830464: 8421378,
                    2013265920: 2,
                    2281701376: 8389120,
                    2550136832: 33280,
                    2818572288: 8421376,
                    3087007744: 8389122,
                    3355443200: 8388610,
                    3623878656: 32770,
                    3892314112: 514,
                    4160749568: 8388608,
                    1: 32768,
                    268435457: 2,
                    536870913: 8421888,
                    805306369: 8388608,
                    1073741825: 8421378,
                    1342177281: 33280,
                    1610612737: 512,
                    1879048193: 8389122,
                    2147483649: 8421890,
                    2415919105: 8421376,
                    2684354561: 8388610,
                    2952790017: 33282,
                    3221225473: 514,
                    3489660929: 8389120,
                    3758096385: 32770,
                    4026531841: 0,
                    134217729: 8421890,
                    402653185: 8421376,
                    671088641: 8388608,
                    939524097: 512,
                    1207959553: 32768,
                    1476395009: 8388610,
                    1744830465: 2,
                    2013265921: 33282,
                    2281701377: 32770,
                    2550136833: 8389122,
                    2818572289: 514,
                    3087007745: 8421888,
                    3355443201: 8389120,
                    3623878657: 0,
                    3892314113: 33280,
                    4160749569: 8421378
                  }, {
                    0: 1074282512,
                    16777216: 16384,
                    33554432: 524288,
                    50331648: 1074266128,
                    67108864: 1073741840,
                    83886080: 1074282496,
                    100663296: 1073758208,
                    117440512: 16,
                    134217728: 540672,
                    150994944: 1073758224,
                    167772160: 1073741824,
                    184549376: 540688,
                    201326592: 524304,
                    218103808: 0,
                    234881024: 16400,
                    251658240: 1074266112,
                    8388608: 1073758208,
                    25165824: 540688,
                    41943040: 16,
                    58720256: 1073758224,
                    75497472: 1074282512,
                    92274688: 1073741824,
                    109051904: 524288,
                    125829120: 1074266128,
                    142606336: 524304,
                    159383552: 0,
                    176160768: 16384,
                    192937984: 1074266112,
                    209715200: 1073741840,
                    226492416: 540672,
                    243269632: 1074282496,
                    260046848: 16400,
                    268435456: 0,
                    285212672: 1074266128,
                    301989888: 1073758224,
                    318767104: 1074282496,
                    335544320: 1074266112,
                    352321536: 16,
                    369098752: 540688,
                    385875968: 16384,
                    402653184: 16400,
                    419430400: 524288,
                    436207616: 524304,
                    452984832: 1073741840,
                    469762048: 540672,
                    486539264: 1073758208,
                    503316480: 1073741824,
                    520093696: 1074282512,
                    276824064: 540688,
                    293601280: 524288,
                    310378496: 1074266112,
                    327155712: 16384,
                    343932928: 1073758208,
                    360710144: 1074282512,
                    377487360: 16,
                    394264576: 1073741824,
                    411041792: 1074282496,
                    427819008: 1073741840,
                    444596224: 1073758224,
                    461373440: 524304,
                    478150656: 0,
                    494927872: 16400,
                    511705088: 1074266128,
                    528482304: 540672
                  }, {
                    0: 260,
                    1048576: 0,
                    2097152: 67109120,
                    3145728: 65796,
                    4194304: 65540,
                    5242880: 67108868,
                    6291456: 67174660,
                    7340032: 67174400,
                    8388608: 67108864,
                    9437184: 67174656,
                    10485760: 65792,
                    11534336: 67174404,
                    12582912: 67109124,
                    13631488: 65536,
                    14680064: 4,
                    15728640: 256,
                    524288: 67174656,
                    1572864: 67174404,
                    2621440: 0,
                    3670016: 67109120,
                    4718592: 67108868,
                    5767168: 65536,
                    6815744: 65540,
                    7864320: 260,
                    8912896: 4,
                    9961472: 256,
                    11010048: 67174400,
                    12058624: 65796,
                    13107200: 65792,
                    14155776: 67109124,
                    15204352: 67174660,
                    16252928: 67108864,
                    16777216: 67174656,
                    17825792: 65540,
                    18874368: 65536,
                    19922944: 67109120,
                    20971520: 256,
                    22020096: 67174660,
                    23068672: 67108868,
                    24117248: 0,
                    25165824: 67109124,
                    26214400: 67108864,
                    27262976: 4,
                    28311552: 65792,
                    29360128: 67174400,
                    30408704: 260,
                    31457280: 65796,
                    32505856: 67174404,
                    17301504: 67108864,
                    18350080: 260,
                    19398656: 67174656,
                    20447232: 0,
                    21495808: 65540,
                    22544384: 67109120,
                    23592960: 256,
                    24641536: 67174404,
                    25690112: 65536,
                    26738688: 67174660,
                    27787264: 65796,
                    28835840: 67108868,
                    29884416: 67109124,
                    30932992: 67174400,
                    31981568: 4,
                    33030144: 65792
                  }, {
                    0: 2151682048,
                    65536: 2147487808,
                    131072: 4198464,
                    196608: 2151677952,
                    262144: 0,
                    327680: 4198400,
                    393216: 2147483712,
                    458752: 4194368,
                    524288: 2147483648,
                    589824: 4194304,
                    655360: 64,
                    720896: 2147487744,
                    786432: 2151678016,
                    851968: 4160,
                    917504: 4096,
                    983040: 2151682112,
                    32768: 2147487808,
                    98304: 64,
                    163840: 2151678016,
                    229376: 2147487744,
                    294912: 4198400,
                    360448: 2151682112,
                    425984: 0,
                    491520: 2151677952,
                    557056: 4096,
                    622592: 2151682048,
                    688128: 4194304,
                    753664: 4160,
                    819200: 2147483648,
                    884736: 4194368,
                    950272: 4198464,
                    1015808: 2147483712,
                    1048576: 4194368,
                    1114112: 4198400,
                    1179648: 2147483712,
                    1245184: 0,
                    1310720: 4160,
                    1376256: 2151678016,
                    1441792: 2151682048,
                    1507328: 2147487808,
                    1572864: 2151682112,
                    1638400: 2147483648,
                    1703936: 2151677952,
                    1769472: 4198464,
                    1835008: 2147487744,
                    1900544: 4194304,
                    1966080: 64,
                    2031616: 4096,
                    1081344: 2151677952,
                    1146880: 2151682112,
                    1212416: 0,
                    1277952: 4198400,
                    1343488: 4194368,
                    1409024: 2147483648,
                    1474560: 2147487808,
                    1540096: 64,
                    1605632: 2147483712,
                    1671168: 4096,
                    1736704: 2147487744,
                    1802240: 2151678016,
                    1867776: 4160,
                    1933312: 2151682048,
                    1998848: 4194304,
                    2064384: 4198464
                  }, {
                    0: 128,
                    4096: 17039360,
                    8192: 262144,
                    12288: 536870912,
                    16384: 537133184,
                    20480: 16777344,
                    24576: 553648256,
                    28672: 262272,
                    32768: 16777216,
                    36864: 537133056,
                    40960: 536871040,
                    45056: 553910400,
                    49152: 553910272,
                    53248: 0,
                    57344: 17039488,
                    61440: 553648128,
                    2048: 17039488,
                    6144: 553648256,
                    10240: 128,
                    14336: 17039360,
                    18432: 262144,
                    22528: 537133184,
                    26624: 553910272,
                    30720: 536870912,
                    34816: 537133056,
                    38912: 0,
                    43008: 553910400,
                    47104: 16777344,
                    51200: 536871040,
                    55296: 553648128,
                    59392: 16777216,
                    63488: 262272,
                    65536: 262144,
                    69632: 128,
                    73728: 536870912,
                    77824: 553648256,
                    81920: 16777344,
                    86016: 553910272,
                    90112: 537133184,
                    94208: 16777216,
                    98304: 553910400,
                    102400: 553648128,
                    106496: 17039360,
                    110592: 537133056,
                    114688: 262272,
                    118784: 536871040,
                    122880: 0,
                    126976: 17039488,
                    67584: 553648256,
                    71680: 16777216,
                    75776: 17039360,
                    79872: 537133184,
                    83968: 536870912,
                    88064: 17039488,
                    92160: 128,
                    96256: 553910272,
                    100352: 262272,
                    104448: 553910400,
                    108544: 0,
                    112640: 553648128,
                    116736: 16777344,
                    120832: 262144,
                    124928: 537133056,
                    129024: 536871040
                  }, {
                    0: 268435464,
                    256: 8192,
                    512: 270532608,
                    768: 270540808,
                    1024: 268443648,
                    1280: 2097152,
                    1536: 2097160,
                    1792: 268435456,
                    2048: 0,
                    2304: 268443656,
                    2560: 2105344,
                    2816: 8,
                    3072: 270532616,
                    3328: 2105352,
                    3584: 8200,
                    3840: 270540800,
                    128: 270532608,
                    384: 270540808,
                    640: 8,
                    896: 2097152,
                    1152: 2105352,
                    1408: 268435464,
                    1664: 268443648,
                    1920: 8200,
                    2176: 2097160,
                    2432: 8192,
                    2688: 268443656,
                    2944: 270532616,
                    3200: 0,
                    3456: 270540800,
                    3712: 2105344,
                    3968: 268435456,
                    4096: 268443648,
                    4352: 270532616,
                    4608: 270540808,
                    4864: 8200,
                    5120: 2097152,
                    5376: 268435456,
                    5632: 268435464,
                    5888: 2105344,
                    6144: 2105352,
                    6400: 0,
                    6656: 8,
                    6912: 270532608,
                    7168: 8192,
                    7424: 268443656,
                    7680: 270540800,
                    7936: 2097160,
                    4224: 8,
                    4480: 2105344,
                    4736: 2097152,
                    4992: 268435464,
                    5248: 268443648,
                    5504: 8200,
                    5760: 270540808,
                    6016: 270532608,
                    6272: 270540800,
                    6528: 270532616,
                    6784: 8192,
                    7040: 2105352,
                    7296: 2097160,
                    7552: 0,
                    7808: 268435456,
                    8064: 268443656
                  }, {
                    0: 1048576,
                    16: 33555457,
                    32: 1024,
                    48: 1049601,
                    64: 34604033,
                    80: 0,
                    96: 1,
                    112: 34603009,
                    128: 33555456,
                    144: 1048577,
                    160: 33554433,
                    176: 34604032,
                    192: 34603008,
                    208: 1025,
                    224: 1049600,
                    240: 33554432,
                    8: 34603009,
                    24: 0,
                    40: 33555457,
                    56: 34604032,
                    72: 1048576,
                    88: 33554433,
                    104: 33554432,
                    120: 1025,
                    136: 1049601,
                    152: 33555456,
                    168: 34603008,
                    184: 1048577,
                    200: 1024,
                    216: 34604033,
                    232: 1,
                    248: 1049600,
                    256: 33554432,
                    272: 1048576,
                    288: 33555457,
                    304: 34603009,
                    320: 1048577,
                    336: 33555456,
                    352: 34604032,
                    368: 1049601,
                    384: 1025,
                    400: 34604033,
                    416: 1049600,
                    432: 1,
                    448: 0,
                    464: 34603008,
                    480: 33554433,
                    496: 1024,
                    264: 1049600,
                    280: 33555457,
                    296: 34603009,
                    312: 1,
                    328: 33554432,
                    344: 1048576,
                    360: 1025,
                    376: 34604032,
                    392: 33554433,
                    408: 34603008,
                    424: 0,
                    440: 34604033,
                    456: 1049601,
                    472: 1024,
                    488: 33555456,
                    504: 1048577
                  }, {
                    0: 134219808,
                    1: 131072,
                    2: 134217728,
                    3: 32,
                    4: 131104,
                    5: 134350880,
                    6: 134350848,
                    7: 2048,
                    8: 134348800,
                    9: 134219776,
                    10: 133120,
                    11: 134348832,
                    12: 2080,
                    13: 0,
                    14: 134217760,
                    15: 133152,
                    2147483648: 2048,
                    2147483649: 134350880,
                    2147483650: 134219808,
                    2147483651: 134217728,
                    2147483652: 134348800,
                    2147483653: 133120,
                    2147483654: 133152,
                    2147483655: 32,
                    2147483656: 134217760,
                    2147483657: 2080,
                    2147483658: 131104,
                    2147483659: 134350848,
                    2147483660: 0,
                    2147483661: 134348832,
                    2147483662: 134219776,
                    2147483663: 131072,
                    16: 133152,
                    17: 134350848,
                    18: 32,
                    19: 2048,
                    20: 134219776,
                    21: 134217760,
                    22: 134348832,
                    23: 131072,
                    24: 0,
                    25: 131104,
                    26: 134348800,
                    27: 134219808,
                    28: 134350880,
                    29: 133120,
                    30: 2080,
                    31: 134217728,
                    2147483664: 131072,
                    2147483665: 2048,
                    2147483666: 134348832,
                    2147483667: 133152,
                    2147483668: 32,
                    2147483669: 134348800,
                    2147483670: 134217728,
                    2147483671: 134219808,
                    2147483672: 134350880,
                    2147483673: 134217760,
                    2147483674: 134219776,
                    2147483675: 0,
                    2147483676: 133120,
                    2147483677: 2080,
                    2147483678: 131104,
                    2147483679: 134350848
                  }], y = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], g = l.DES = f.extend({
                    _doReset: function() {
                      for (var I = this._key, T = I.words, C = [], E = 0; E < 56; E++) {
                        var F = c[E] - 1;
                        C[E] = T[F >>> 5] >>> 31 - F % 32 & 1;
                      }
                      for (var x = this._subKeys = [], P = 0; P < 16; P++) {
                        for (var L = x[P] = [], N = a[P], E = 0; E < 24; E++)
                          L[E / 6 | 0] |= C[(h[E] - 1 + N) % 28] << 31 - E % 6, L[4 + (E / 6 | 0)] |= C[28 + (h[E + 24] - 1 + N) % 28] << 31 - E % 6;
                        L[0] = L[0] << 1 | L[0] >>> 31;
                        for (var E = 1; E < 7; E++)
                          L[E] = L[E] >>> (E - 1) * 4 + 3;
                        L[7] = L[7] << 5 | L[7] >>> 27;
                      }
                      for (var M = this._invSubKeys = [], E = 0; E < 16; E++)
                        M[E] = x[15 - E];
                    },
                    encryptBlock: function(I, T) {
                      this._doCryptBlock(I, T, this._subKeys);
                    },
                    decryptBlock: function(I, T) {
                      this._doCryptBlock(I, T, this._invSubKeys);
                    },
                    _doCryptBlock: function(I, T, C) {
                      this._lBlock = I[T], this._rBlock = I[T + 1], e.call(this, 4, 252645135), e.call(this, 16, 65535), m.call(this, 2, 858993459), m.call(this, 8, 16711935), e.call(this, 1, 1431655765);
                      for (var E = 0; E < 16; E++) {
                        for (var F = C[E], x = this._lBlock, P = this._rBlock, L = 0, N = 0; N < 8; N++)
                          L |= v[N][((P ^ F[N]) & y[N]) >>> 0];
                        this._lBlock = P, this._rBlock = x ^ L;
                      }
                      var M = this._lBlock;
                      this._lBlock = this._rBlock, this._rBlock = M, e.call(this, 1, 1431655765), m.call(this, 8, 16711935), m.call(this, 2, 858993459), e.call(this, 16, 65535), e.call(this, 4, 252645135), I[T] = this._lBlock, I[T + 1] = this._rBlock;
                    },
                    keySize: 64 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                  });
                  function e(D, I) {
                    var T = (this._lBlock >>> D ^ this._rBlock) & I;
                    this._rBlock ^= T, this._lBlock ^= T << D;
                  }
                  function m(D, I) {
                    var T = (this._rBlock >>> D ^ this._lBlock) & I;
                    this._lBlock ^= T, this._rBlock ^= T << D;
                  }
                  r.DES = f._createHelper(g);
                  var w = l.TripleDES = f.extend({
                    _doReset: function() {
                      var I = this._key, T = I.words;
                      if (T.length !== 2 && T.length !== 4 && T.length < 6)
                        throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                      var C = T.slice(0, 2), E = T.length < 4 ? T.slice(0, 2) : T.slice(2, 4), F = T.length < 6 ? T.slice(0, 2) : T.slice(4, 6);
                      this._des1 = g.createEncryptor(i.create(C)), this._des2 = g.createEncryptor(i.create(E)), this._des3 = g.createEncryptor(i.create(F));
                    },
                    encryptBlock: function(I, T) {
                      this._des1.encryptBlock(I, T), this._des2.decryptBlock(I, T), this._des3.encryptBlock(I, T);
                    },
                    decryptBlock: function(I, T) {
                      this._des3.decryptBlock(I, T), this._des2.encryptBlock(I, T), this._des1.decryptBlock(I, T);
                    },
                    keySize: 192 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                  });
                  r.TripleDES = f._createHelper(w);
                }(), o.TripleDES;
              });
            }
          ),
          /***/
          23204: (
            /***/
            function(u, d, t) {
              t(18821), function(o, r) {
                u.exports = r(t(53264));
              }(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.Base, l = i.WordArray, c = n.x64 = {};
                  c.Word = f.extend({
                    /**
                     * Initializes a newly created 64-bit word.
                     *
                     * @param {number} high The high 32 bits.
                     * @param {number} low The low 32 bits.
                     *
                     * @example
                     *
                     *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
                     */
                    init: function(a, v) {
                      this.high = a, this.low = v;
                    }
                    /**
                     * Bitwise NOTs this word.
                     *
                     * @return {X64Word} A new x64-Word object after negating.
                     *
                     * @example
                     *
                     *     var negated = x64Word.not();
                     */
                    // not: function () {
                    // var high = ~this.high;
                    // var low = ~this.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise ANDs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to AND with this word.
                     *
                     * @return {X64Word} A new x64-Word object after ANDing.
                     *
                     * @example
                     *
                     *     var anded = x64Word.and(anotherX64Word);
                     */
                    // and: function (word) {
                    // var high = this.high & word.high;
                    // var low = this.low & word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise ORs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to OR with this word.
                     *
                     * @return {X64Word} A new x64-Word object after ORing.
                     *
                     * @example
                     *
                     *     var ored = x64Word.or(anotherX64Word);
                     */
                    // or: function (word) {
                    // var high = this.high | word.high;
                    // var low = this.low | word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise XORs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to XOR with this word.
                     *
                     * @return {X64Word} A new x64-Word object after XORing.
                     *
                     * @example
                     *
                     *     var xored = x64Word.xor(anotherX64Word);
                     */
                    // xor: function (word) {
                    // var high = this.high ^ word.high;
                    // var low = this.low ^ word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Shifts this word n bits to the left.
                     *
                     * @param {number} n The number of bits to shift.
                     *
                     * @return {X64Word} A new x64-Word object after shifting.
                     *
                     * @example
                     *
                     *     var shifted = x64Word.shiftL(25);
                     */
                    // shiftL: function (n) {
                    // if (n < 32) {
                    // var high = (this.high << n) | (this.low >>> (32 - n));
                    // var low = this.low << n;
                    // } else {
                    // var high = this.low << (n - 32);
                    // var low = 0;
                    // }
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Shifts this word n bits to the right.
                     *
                     * @param {number} n The number of bits to shift.
                     *
                     * @return {X64Word} A new x64-Word object after shifting.
                     *
                     * @example
                     *
                     *     var shifted = x64Word.shiftR(7);
                     */
                    // shiftR: function (n) {
                    // if (n < 32) {
                    // var low = (this.low >>> n) | (this.high << (32 - n));
                    // var high = this.high >>> n;
                    // } else {
                    // var low = this.high >>> (n - 32);
                    // var high = 0;
                    // }
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Rotates this word n bits to the left.
                     *
                     * @param {number} n The number of bits to rotate.
                     *
                     * @return {X64Word} A new x64-Word object after rotating.
                     *
                     * @example
                     *
                     *     var rotated = x64Word.rotL(25);
                     */
                    // rotL: function (n) {
                    // return this.shiftL(n).or(this.shiftR(64 - n));
                    // },
                    /**
                     * Rotates this word n bits to the right.
                     *
                     * @param {number} n The number of bits to rotate.
                     *
                     * @return {X64Word} A new x64-Word object after rotating.
                     *
                     * @example
                     *
                     *     var rotated = x64Word.rotR(7);
                     */
                    // rotR: function (n) {
                    // return this.shiftR(n).or(this.shiftL(64 - n));
                    // },
                    /**
                     * Adds this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to add with this word.
                     *
                     * @return {X64Word} A new x64-Word object after adding.
                     *
                     * @example
                     *
                     *     var added = x64Word.add(anotherX64Word);
                     */
                    // add: function (word) {
                    // var low = (this.low + word.low) | 0;
                    // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
                    // var high = (this.high + word.high + carry) | 0;
                    // return X64Word.create(high, low);
                    // }
                  }), c.WordArray = f.extend({
                    /**
                     * Initializes a newly created word array.
                     *
                     * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create();
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create([
                     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                     *     ]);
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create([
                     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                     *     ], 10);
                     */
                    init: function(a, v) {
                      a = this.words = a || [], v != r ? this.sigBytes = v : this.sigBytes = a.length * 8;
                    },
                    /**
                     * Converts this 64-bit word array to a 32-bit word array.
                     *
                     * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
                     *
                     * @example
                     *
                     *     var x32WordArray = x64WordArray.toX32();
                     */
                    toX32: function() {
                      for (var a = this.words, v = a.length, y = [], g = 0; g < v; g++) {
                        var e = a[g];
                        y.push(e.high), y.push(e.low);
                      }
                      return l.create(y, this.sigBytes);
                    },
                    /**
                     * Creates a copy of this word array.
                     *
                     * @return {X64WordArray} The clone.
                     *
                     * @example
                     *
                     *     var clone = x64WordArray.clone();
                     */
                    clone: function() {
                      for (var a = f.clone.call(this), v = a.words = this.words.slice(0), y = v.length, g = 0; g < y; g++)
                        v[g] = v[g].clone();
                      return a;
                    }
                  });
                }(), o;
              });
            }
          ),
          /***/
          41966: (
            /***/
            function(u, d, t) {
              t(52729), t(33694), t(44063), t(62031), t(56908), t(6208), t(54994), t(35054), t(33290), t(4845), t(39275), t(75668), t(61928), t(54883), t(10853), t(45007), t(68995), t(26364), t(86632), t(18821);
              function o(h, a) {
                var v = typeof Symbol < "u" && h[Symbol.iterator] || h["@@iterator"];
                if (v)
                  return (v = v.call(h)).next.bind(v);
                if (Array.isArray(h) || (v = r(h)) || a && h && typeof h.length == "number") {
                  v && (h = v);
                  var y = 0;
                  return function() {
                    return y >= h.length ? { done: !0 } : { done: !1, value: h[y++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function r(h, a) {
                if (h) {
                  if (typeof h == "string")
                    return n(h, a);
                  var v = Object.prototype.toString.call(h).slice(8, -1);
                  if (v === "Object" && h.constructor && (v = h.constructor.name), v === "Map" || v === "Set")
                    return Array.from(h);
                  if (v === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(v))
                    return n(h, a);
                }
              }
              function n(h, a) {
                (a == null || a > h.length) && (a = h.length);
                for (var v = 0, y = new Array(a); v < a; v++)
                  y[v] = h[v];
                return y;
              }
              function i() {
                /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
                i = function() {
                  return a;
                };
                var h, a = {}, v = Object.prototype, y = v.hasOwnProperty, g = Object.defineProperty || function(ot, mt, G) {
                  ot[mt] = G.value;
                }, e = typeof Symbol == "function" ? Symbol : {}, m = e.iterator || "@@iterator", w = e.asyncIterator || "@@asyncIterator", D = e.toStringTag || "@@toStringTag";
                function I(ot, mt, G) {
                  return Object.defineProperty(ot, mt, { value: G, enumerable: !0, configurable: !0, writable: !0 }), ot[mt];
                }
                try {
                  I({}, "");
                } catch {
                  I = function(G, Tt, z) {
                    return G[Tt] = z;
                  };
                }
                function T(ot, mt, G, Tt) {
                  var z = mt && mt.prototype instanceof N ? mt : N, S = Object.create(z.prototype), k = new pt(Tt || []);
                  return g(S, "_invoke", { value: Ft(ot, G, k) }), S;
                }
                function C(ot, mt, G) {
                  try {
                    return { type: "normal", arg: ot.call(mt, G) };
                  } catch (Tt) {
                    return { type: "throw", arg: Tt };
                  }
                }
                a.wrap = T;
                var E = "suspendedStart", F = "suspendedYield", x = "executing", P = "completed", L = {};
                function N() {
                }
                function M() {
                }
                function K() {
                }
                var ut = {};
                I(ut, m, function() {
                  return this;
                });
                var J = Object.getPrototypeOf, rt = J && J(J(ct([])));
                rt && rt !== v && y.call(rt, m) && (ut = rt);
                var yt = K.prototype = N.prototype = Object.create(ut);
                function xt(ot) {
                  ["next", "throw", "return"].forEach(function(mt) {
                    I(ot, mt, function(G) {
                      return this._invoke(mt, G);
                    });
                  });
                }
                function Et(ot, mt) {
                  function G(z, S, k, V) {
                    var it = C(ot[z], ot, S);
                    if (it.type !== "throw") {
                      var tt = it.arg, _ = tt.value;
                      return _ && typeof _ == "object" && y.call(_, "__await") ? mt.resolve(_.__await).then(function(At) {
                        G("next", At, k, V);
                      }, function(At) {
                        G("throw", At, k, V);
                      }) : mt.resolve(_).then(function(At) {
                        tt.value = At, k(tt);
                      }, function(At) {
                        return G("throw", At, k, V);
                      });
                    }
                    V(it.arg);
                  }
                  var Tt;
                  g(this, "_invoke", { value: function(S, k) {
                    function V() {
                      return new mt(function(it, tt) {
                        G(S, k, it, tt);
                      });
                    }
                    return Tt = Tt ? Tt.then(V, V) : V();
                  } });
                }
                function Ft(ot, mt, G) {
                  var Tt = E;
                  return function(z, S) {
                    if (Tt === x)
                      throw new Error("Generator is already running");
                    if (Tt === P) {
                      if (z === "throw")
                        throw S;
                      return { value: h, done: !0 };
                    }
                    for (G.method = z, G.arg = S; ; ) {
                      var k = G.delegate;
                      if (k) {
                        var V = Rt(k, G);
                        if (V) {
                          if (V === L)
                            continue;
                          return V;
                        }
                      }
                      if (G.method === "next")
                        G.sent = G._sent = G.arg;
                      else if (G.method === "throw") {
                        if (Tt === E)
                          throw Tt = P, G.arg;
                        G.dispatchException(G.arg);
                      } else
                        G.method === "return" && G.abrupt("return", G.arg);
                      Tt = x;
                      var it = C(ot, mt, G);
                      if (it.type === "normal") {
                        if (Tt = G.done ? P : F, it.arg === L)
                          continue;
                        return { value: it.arg, done: G.done };
                      }
                      it.type === "throw" && (Tt = P, G.method = "throw", G.arg = it.arg);
                    }
                  };
                }
                function Rt(ot, mt) {
                  var G = mt.method, Tt = ot.iterator[G];
                  if (Tt === h)
                    return mt.delegate = null, G === "throw" && ot.iterator.return && (mt.method = "return", mt.arg = h, Rt(ot, mt), mt.method === "throw") || G !== "return" && (mt.method = "throw", mt.arg = new TypeError("The iterator does not provide a '" + G + "' method")), L;
                  var z = C(Tt, ot.iterator, mt.arg);
                  if (z.type === "throw")
                    return mt.method = "throw", mt.arg = z.arg, mt.delegate = null, L;
                  var S = z.arg;
                  return S ? S.done ? (mt[ot.resultName] = S.value, mt.next = ot.nextLoc, mt.method !== "return" && (mt.method = "next", mt.arg = h), mt.delegate = null, L) : S : (mt.method = "throw", mt.arg = new TypeError("iterator result is not an object"), mt.delegate = null, L);
                }
                function Ut(ot) {
                  var mt = { tryLoc: ot[0] };
                  1 in ot && (mt.catchLoc = ot[1]), 2 in ot && (mt.finallyLoc = ot[2], mt.afterLoc = ot[3]), this.tryEntries.push(mt);
                }
                function Q(ot) {
                  var mt = ot.completion || {};
                  mt.type = "normal", delete mt.arg, ot.completion = mt;
                }
                function pt(ot) {
                  this.tryEntries = [{ tryLoc: "root" }], ot.forEach(Ut, this), this.reset(!0);
                }
                function ct(ot) {
                  if (ot || ot === "") {
                    var mt = ot[m];
                    if (mt)
                      return mt.call(ot);
                    if (typeof ot.next == "function")
                      return ot;
                    if (!isNaN(ot.length)) {
                      var G = -1, Tt = function z() {
                        for (; ++G < ot.length; )
                          if (y.call(ot, G))
                            return z.value = ot[G], z.done = !1, z;
                        return z.value = h, z.done = !0, z;
                      };
                      return Tt.next = Tt;
                    }
                  }
                  throw new TypeError(typeof ot + " is not iterable");
                }
                return M.prototype = K, g(yt, "constructor", { value: K, configurable: !0 }), g(K, "constructor", { value: M, configurable: !0 }), M.displayName = I(K, D, "GeneratorFunction"), a.isGeneratorFunction = function(ot) {
                  var mt = typeof ot == "function" && ot.constructor;
                  return !!mt && (mt === M || (mt.displayName || mt.name) === "GeneratorFunction");
                }, a.mark = function(ot) {
                  return Object.setPrototypeOf ? Object.setPrototypeOf(ot, K) : (ot.__proto__ = K, I(ot, D, "GeneratorFunction")), ot.prototype = Object.create(yt), ot;
                }, a.awrap = function(ot) {
                  return { __await: ot };
                }, xt(Et.prototype), I(Et.prototype, w, function() {
                  return this;
                }), a.AsyncIterator = Et, a.async = function(ot, mt, G, Tt, z) {
                  z === void 0 && (z = Promise);
                  var S = new Et(T(ot, mt, G, Tt), z);
                  return a.isGeneratorFunction(mt) ? S : S.next().then(function(k) {
                    return k.done ? k.value : S.next();
                  });
                }, xt(yt), I(yt, D, "Generator"), I(yt, m, function() {
                  return this;
                }), I(yt, "toString", function() {
                  return "[object Generator]";
                }), a.keys = function(ot) {
                  var mt = Object(ot), G = [];
                  for (var Tt in mt)
                    G.push(Tt);
                  return G.reverse(), function z() {
                    for (; G.length; ) {
                      var S = G.pop();
                      if (S in mt)
                        return z.value = S, z.done = !1, z;
                    }
                    return z.done = !0, z;
                  };
                }, a.values = ct, pt.prototype = { constructor: pt, reset: function(mt) {
                  if (this.prev = 0, this.next = 0, this.sent = this._sent = h, this.done = !1, this.delegate = null, this.method = "next", this.arg = h, this.tryEntries.forEach(Q), !mt)
                    for (var G in this)
                      G.charAt(0) === "t" && y.call(this, G) && !isNaN(+G.slice(1)) && (this[G] = h);
                }, stop: function() {
                  this.done = !0;
                  var mt = this.tryEntries[0].completion;
                  if (mt.type === "throw")
                    throw mt.arg;
                  return this.rval;
                }, dispatchException: function(mt) {
                  if (this.done)
                    throw mt;
                  var G = this;
                  function Tt(tt, _) {
                    return k.type = "throw", k.arg = mt, G.next = tt, _ && (G.method = "next", G.arg = h), !!_;
                  }
                  for (var z = this.tryEntries.length - 1; z >= 0; --z) {
                    var S = this.tryEntries[z], k = S.completion;
                    if (S.tryLoc === "root")
                      return Tt("end");
                    if (S.tryLoc <= this.prev) {
                      var V = y.call(S, "catchLoc"), it = y.call(S, "finallyLoc");
                      if (V && it) {
                        if (this.prev < S.catchLoc)
                          return Tt(S.catchLoc, !0);
                        if (this.prev < S.finallyLoc)
                          return Tt(S.finallyLoc);
                      } else if (V) {
                        if (this.prev < S.catchLoc)
                          return Tt(S.catchLoc, !0);
                      } else {
                        if (!it)
                          throw new Error("try statement without catch or finally");
                        if (this.prev < S.finallyLoc)
                          return Tt(S.finallyLoc);
                      }
                    }
                  }
                }, abrupt: function(mt, G) {
                  for (var Tt = this.tryEntries.length - 1; Tt >= 0; --Tt) {
                    var z = this.tryEntries[Tt];
                    if (z.tryLoc <= this.prev && y.call(z, "finallyLoc") && this.prev < z.finallyLoc) {
                      var S = z;
                      break;
                    }
                  }
                  S && (mt === "break" || mt === "continue") && S.tryLoc <= G && G <= S.finallyLoc && (S = null);
                  var k = S ? S.completion : {};
                  return k.type = mt, k.arg = G, S ? (this.method = "next", this.next = S.finallyLoc, L) : this.complete(k);
                }, complete: function(mt, G) {
                  if (mt.type === "throw")
                    throw mt.arg;
                  return mt.type === "break" || mt.type === "continue" ? this.next = mt.arg : mt.type === "return" ? (this.rval = this.arg = mt.arg, this.method = "return", this.next = "end") : mt.type === "normal" && G && (this.next = G), L;
                }, finish: function(mt) {
                  for (var G = this.tryEntries.length - 1; G >= 0; --G) {
                    var Tt = this.tryEntries[G];
                    if (Tt.finallyLoc === mt)
                      return this.complete(Tt.completion, Tt.afterLoc), Q(Tt), L;
                  }
                }, catch: function(mt) {
                  for (var G = this.tryEntries.length - 1; G >= 0; --G) {
                    var Tt = this.tryEntries[G];
                    if (Tt.tryLoc === mt) {
                      var z = Tt.completion;
                      if (z.type === "throw") {
                        var S = z.arg;
                        Q(Tt);
                      }
                      return S;
                    }
                  }
                  throw new Error("illegal catch attempt");
                }, delegateYield: function(mt, G, Tt) {
                  return this.delegate = { iterator: ct(mt), resultName: G, nextLoc: Tt }, this.method === "next" && (this.arg = h), L;
                } }, a;
              }
              var f = 1, l = 0, c = /* @__PURE__ */ function() {
                function h(v) {
                  this.stateTable = v.stateTable, this.accepting = v.accepting, this.tags = v.tags;
                }
                var a = h.prototype;
                return a.match = function(y) {
                  var g, e = this;
                  return g = {}, g[Symbol.iterator] = /* @__PURE__ */ i().mark(function m() {
                    var w, D, I, T, C, E;
                    return i().wrap(function(x) {
                      for (; ; )
                        switch (x.prev = x.next) {
                          case 0:
                            w = f, D = null, I = null, T = null, C = 0;
                          case 5:
                            if (!(C < y.length)) {
                              x.next = 21;
                              break;
                            }
                            if (E = y[C], T = w, w = e.stateTable[w][E], w !== l) {
                              x.next = 15;
                              break;
                            }
                            if (!(D != null && I != null && I >= D)) {
                              x.next = 13;
                              break;
                            }
                            return x.next = 13, [D, I, e.tags[T]];
                          case 13:
                            w = e.stateTable[f][E], D = null;
                          case 15:
                            w !== l && D == null && (D = C), e.accepting[w] && (I = C), w === l && (w = f);
                          case 18:
                            C++, x.next = 5;
                            break;
                          case 21:
                            if (!(D != null && I != null && I >= D)) {
                              x.next = 24;
                              break;
                            }
                            return x.next = 24, [D, I, e.tags[w]];
                          case 24:
                          case "end":
                            return x.stop();
                        }
                    }, m);
                  }), g;
                }, a.apply = function(y, g) {
                  for (var e = o(this.match(y)), m; !(m = e()).done; )
                    for (var w = m.value, D = w[0], I = w[1], T = w[2], C = o(T), E; !(E = C()).done; ) {
                      var F = E.value;
                      typeof g[F] == "function" && g[F](D, I, y.slice(D, I + 1));
                    }
                }, h;
              }();
              u.exports = c;
            }
          ),
          /***/
          45968: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer;
              t(10853), t(35054), t(18821), t(18183);
              var r = t(52773), n = t(63339);
              u.exports = /* @__PURE__ */ function() {
                i.decode = function(c, h) {
                  return r.readFile(c, function(a, v) {
                    var y = new i(v);
                    return y.decode(function(g) {
                      return h(g);
                    });
                  });
                }, i.load = function(c) {
                  var h = r.readFileSync(c);
                  return new i(h);
                };
                function i(l) {
                  var c;
                  for (this.data = l, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.text = {}; ; ) {
                    var h = this.readUInt32(), a = "";
                    for (c = 0; c < 4; c++)
                      a += String.fromCharCode(this.data[this.pos++]);
                    switch (a) {
                      case "IHDR":
                        this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
                        break;
                      case "PLTE":
                        this.palette = this.read(h);
                        break;
                      case "IDAT":
                        for (c = 0; c < h; c++)
                          this.imgData.push(this.data[this.pos++]);
                        break;
                      case "tRNS":
                        switch (this.transparency = {}, this.colorType) {
                          case 3:
                            this.transparency.indexed = this.read(h);
                            var v = 255 - this.transparency.indexed.length;
                            if (v > 0)
                              for (c = 0; c < v; c++)
                                this.transparency.indexed.push(255);
                            break;
                          case 0:
                            this.transparency.grayscale = this.read(h)[0];
                            break;
                          case 2:
                            this.transparency.rgb = this.read(h);
                            break;
                        }
                        break;
                      case "tEXt":
                        var y = this.read(h), g = y.indexOf(0), e = String.fromCharCode.apply(String, y.slice(0, g));
                        this.text[e] = String.fromCharCode.apply(String, y.slice(g + 1));
                        break;
                      case "IEND":
                        switch (this.colorType) {
                          case 0:
                          case 3:
                          case 4:
                            this.colors = 1;
                            break;
                          case 2:
                          case 6:
                            this.colors = 3;
                            break;
                        }
                        this.hasAlphaChannel = [4, 6].includes(this.colorType);
                        var m = this.colors + (this.hasAlphaChannel ? 1 : 0);
                        switch (this.pixelBitlength = this.bits * m, this.colors) {
                          case 1:
                            this.colorSpace = "DeviceGray";
                            break;
                          case 3:
                            this.colorSpace = "DeviceRGB";
                            break;
                        }
                        this.imgData = new o(this.imgData);
                        return;
                      default:
                        this.pos += h;
                    }
                    if (this.pos += 4, this.pos > this.data.length)
                      throw new Error("Incomplete or corrupt PNG file");
                  }
                }
                var f = i.prototype;
                return f.read = function(c) {
                  for (var h = new Array(c), a = 0; a < c; a++)
                    h[a] = this.data[this.pos++];
                  return h;
                }, f.readUInt32 = function() {
                  var c = this.data[this.pos++] << 24, h = this.data[this.pos++] << 16, a = this.data[this.pos++] << 8, v = this.data[this.pos++];
                  return c | h | a | v;
                }, f.readUInt16 = function() {
                  var c = this.data[this.pos++] << 8, h = this.data[this.pos++];
                  return c | h;
                }, f.decodePixels = function(c) {
                  var h = this;
                  return n.inflate(this.imgData, function(a, v) {
                    if (a)
                      throw a;
                    var y = h.width, g = h.height, e = h.pixelBitlength / 8, m = new o(y * g * e), w = v.length, D = 0;
                    function I(T, C, E, F, x) {
                      x === void 0 && (x = !1);
                      for (var P = Math.ceil((y - T) / E), L = Math.ceil((g - C) / F), N = e * P, M = x ? m : new o(N * L), K = 0, ut = 0; K < L && D < w; ) {
                        var J, rt, yt, xt, Et;
                        switch (v[D++]) {
                          case 0:
                            for (yt = 0; yt < N; yt++)
                              M[ut++] = v[D++];
                            break;
                          case 1:
                            for (yt = 0; yt < N; yt++)
                              J = v[D++], xt = yt < e ? 0 : M[ut - e], M[ut++] = (J + xt) % 256;
                            break;
                          case 2:
                            for (yt = 0; yt < N; yt++)
                              J = v[D++], rt = (yt - yt % e) / e, Et = K && M[(K - 1) * N + rt * e + yt % e], M[ut++] = (Et + J) % 256;
                            break;
                          case 3:
                            for (yt = 0; yt < N; yt++)
                              J = v[D++], rt = (yt - yt % e) / e, xt = yt < e ? 0 : M[ut - e], Et = K && M[(K - 1) * N + rt * e + yt % e], M[ut++] = (J + Math.floor((xt + Et) / 2)) % 256;
                            break;
                          case 4:
                            for (yt = 0; yt < N; yt++) {
                              var Ft, Rt;
                              J = v[D++], rt = (yt - yt % e) / e, xt = yt < e ? 0 : M[ut - e], K === 0 ? Et = Rt = 0 : (Et = M[(K - 1) * N + rt * e + yt % e], Rt = rt && M[(K - 1) * N + (rt - 1) * e + yt % e]);
                              var Ut = xt + Et - Rt, Q = Math.abs(Ut - xt), pt = Math.abs(Ut - Et), ct = Math.abs(Ut - Rt);
                              Q <= pt && Q <= ct ? Ft = xt : pt <= ct ? Ft = Et : Ft = Rt, M[ut++] = (J + Ft) % 256;
                            }
                            break;
                          default:
                            throw new Error("Invalid filter algorithm: " + v[D - 1]);
                        }
                        if (!x) {
                          var ot = ((C + K * F) * y + T) * e, mt = K * N;
                          for (yt = 0; yt < P; yt++) {
                            for (var G = 0; G < e; G++)
                              m[ot++] = M[mt++];
                            ot += (E - 1) * e;
                          }
                        }
                        K++;
                      }
                    }
                    return h.interlaceMethod === 1 ? (I(0, 0, 8, 8), I(4, 0, 8, 8), I(0, 4, 4, 8), I(2, 0, 4, 4), I(0, 2, 2, 4), I(1, 0, 2, 2), I(0, 1, 1, 2)) : I(0, 0, 1, 1, !0), c(m);
                  });
                }, f.decodePalette = function() {
                  for (var c = this.palette, h = c.length, a = this.transparency.indexed || [], v = new o(a.length + h), y = 0, g = 0, e = 0; e < h; e += 3) {
                    var m;
                    v[y++] = c[e], v[y++] = c[e + 1], v[y++] = c[e + 2], v[y++] = (m = a[g++]) != null ? m : 255;
                  }
                  return v;
                }, f.copyToImageData = function(c, h) {
                  var a, v, y = this.colors, g = null, e = this.hasAlphaChannel;
                  this.palette.length && (g = this._decodedPalette || (this._decodedPalette = this.decodePalette()), y = 4, e = !0);
                  var m = c.data || c, w = m.length, D = g || h, I = a = 0;
                  if (y === 1)
                    for (; I < w; ) {
                      v = g ? h[I / 4] * 4 : a;
                      var T = D[v++];
                      m[I++] = T, m[I++] = T, m[I++] = T, m[I++] = e ? D[v++] : 255, a = v;
                    }
                  else
                    for (; I < w; )
                      v = g ? h[I / 4] * 4 : a, m[I++] = D[v++], m[I++] = D[v++], m[I++] = D[v++], m[I++] = e ? D[v++] : 255, a = v;
                }, f.decode = function(c) {
                  var h = this, a = new o(this.width * this.height * 4);
                  return this.decodePixels(function(v) {
                    return h.copyToImageData(a, v), c(a);
                  });
                }, i;
              }();
            }
          ),
          /***/
          85543: (
            /***/
            function(u, d, t) {
              var o = t(82530);
              t(26875), t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(83382);
              var r = t(43060), n = r.Buffer, i = {}, f;
              for (f in r)
                r.hasOwnProperty(f) && (f === "SlowBuffer" || f === "Buffer" || (i[f] = r[f]));
              var l = i.Buffer = {};
              for (f in n)
                n.hasOwnProperty(f) && (f === "allocUnsafe" || f === "allocUnsafeSlow" || (l[f] = n[f]));
              if (i.Buffer.prototype = n.prototype, (!l.from || l.from === Uint8Array.from) && (l.from = function(c, h, a) {
                if (typeof c == "number")
                  throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof c);
                if (c && typeof c.length > "u")
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof c);
                return n(c, h, a);
              }), l.alloc || (l.alloc = function(c, h, a) {
                if (typeof c != "number")
                  throw new TypeError('The "size" argument must be of type number. Received type ' + typeof c);
                if (c < 0 || c >= 2147483648)
                  throw new RangeError('The value "' + c + '" is invalid for option "size"');
                var v = n(c);
                return !h || h.length === 0 ? v.fill(0) : typeof a == "string" ? v.fill(h, a) : v.fill(h), v;
              }), !i.kStringMaxLength)
                try {
                  i.kStringMaxLength = o.binding("buffer").kStringMaxLength;
                } catch {
                }
              i.constants || (i.constants = {
                MAX_LENGTH: i.kMaxLength
              }, i.kStringMaxLength && (i.constants.MAX_STRING_LENGTH = i.kStringMaxLength)), u.exports = i;
            }
          ),
          /***/
          55681: (
            /***/
            function(u, d, t) {
              t(80044), t(26364), t(19701), t(10853), t(80238), t(6208), t(12938), t(16543), t(33142), t(86632), t(80174), t(18821);
              function o(w, D) {
                var I = Object.keys(w);
                if (Object.getOwnPropertySymbols) {
                  var T = Object.getOwnPropertySymbols(w);
                  D && (T = T.filter(function(C) {
                    return Object.getOwnPropertyDescriptor(w, C).enumerable;
                  })), I.push.apply(I, T);
                }
                return I;
              }
              function r(w) {
                for (var D = 1; D < arguments.length; D++) {
                  var I = arguments[D] != null ? arguments[D] : {};
                  D % 2 ? o(Object(I), !0).forEach(function(T) {
                    n(w, T, I[T]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(w, Object.getOwnPropertyDescriptors(I)) : o(Object(I)).forEach(function(T) {
                    Object.defineProperty(w, T, Object.getOwnPropertyDescriptor(I, T));
                  });
                }
                return w;
              }
              function n(w, D, I) {
                return D = c(D), D in w ? Object.defineProperty(w, D, {
                  value: I,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : w[D] = I, w;
              }
              function i(w, D) {
                if (!(w instanceof D))
                  throw new TypeError("Cannot call a class as a function");
              }
              function f(w, D) {
                for (var I = 0; I < D.length; I++) {
                  var T = D[I];
                  T.enumerable = T.enumerable || !1, T.configurable = !0, "value" in T && (T.writable = !0), Object.defineProperty(w, c(T.key), T);
                }
              }
              function l(w, D, I) {
                return D && f(w.prototype, D), I && f(w, I), Object.defineProperty(w, "prototype", {
                  writable: !1
                }), w;
              }
              function c(w) {
                var D = h(w, "string");
                return typeof D == "symbol" ? D : String(D);
              }
              function h(w, D) {
                if (typeof w != "object" || w === null)
                  return w;
                var I = w[Symbol.toPrimitive];
                if (I !== void 0) {
                  var T = I.call(w, D || "default");
                  if (typeof T != "object")
                    return T;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (D === "string" ? String : Number)(w);
              }
              var a = t(43060), v = a.Buffer, y = t(69862), g = y.inspect, e = g && g.custom || "inspect";
              function m(w, D, I) {
                v.prototype.copy.call(w, D, I);
              }
              u.exports = /* @__PURE__ */ function() {
                function w() {
                  i(this, w), this.head = null, this.tail = null, this.length = 0;
                }
                return l(w, [{
                  key: "push",
                  value: function(I) {
                    var T = {
                      data: I,
                      next: null
                    };
                    this.length > 0 ? this.tail.next = T : this.head = T, this.tail = T, ++this.length;
                  }
                }, {
                  key: "unshift",
                  value: function(I) {
                    var T = {
                      data: I,
                      next: this.head
                    };
                    this.length === 0 && (this.tail = T), this.head = T, ++this.length;
                  }
                }, {
                  key: "shift",
                  value: function() {
                    if (this.length !== 0) {
                      var I = this.head.data;
                      return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, I;
                    }
                  }
                }, {
                  key: "clear",
                  value: function() {
                    this.head = this.tail = null, this.length = 0;
                  }
                }, {
                  key: "join",
                  value: function(I) {
                    if (this.length === 0)
                      return "";
                    for (var T = this.head, C = "" + T.data; T = T.next; )
                      C += I + T.data;
                    return C;
                  }
                }, {
                  key: "concat",
                  value: function(I) {
                    if (this.length === 0)
                      return v.alloc(0);
                    for (var T = v.allocUnsafe(I >>> 0), C = this.head, E = 0; C; )
                      m(C.data, T, E), E += C.data.length, C = C.next;
                    return T;
                  }
                  // Consumes a specified amount of bytes or characters from the buffered data.
                }, {
                  key: "consume",
                  value: function(I, T) {
                    var C;
                    return I < this.head.data.length ? (C = this.head.data.slice(0, I), this.head.data = this.head.data.slice(I)) : I === this.head.data.length ? C = this.shift() : C = T ? this._getString(I) : this._getBuffer(I), C;
                  }
                }, {
                  key: "first",
                  value: function() {
                    return this.head.data;
                  }
                  // Consumes a specified amount of characters from the buffered data.
                }, {
                  key: "_getString",
                  value: function(I) {
                    var T = this.head, C = 1, E = T.data;
                    for (I -= E.length; T = T.next; ) {
                      var F = T.data, x = I > F.length ? F.length : I;
                      if (x === F.length ? E += F : E += F.slice(0, I), I -= x, I === 0) {
                        x === F.length ? (++C, T.next ? this.head = T.next : this.head = this.tail = null) : (this.head = T, T.data = F.slice(x));
                        break;
                      }
                      ++C;
                    }
                    return this.length -= C, E;
                  }
                  // Consumes a specified amount of bytes from the buffered data.
                }, {
                  key: "_getBuffer",
                  value: function(I) {
                    var T = v.allocUnsafe(I), C = this.head, E = 1;
                    for (C.data.copy(T), I -= C.data.length; C = C.next; ) {
                      var F = C.data, x = I > F.length ? F.length : I;
                      if (F.copy(T, T.length - I, 0, x), I -= x, I === 0) {
                        x === F.length ? (++E, C.next ? this.head = C.next : this.head = this.tail = null) : (this.head = C, C.data = F.slice(x));
                        break;
                      }
                      ++E;
                    }
                    return this.length -= E, T;
                  }
                  // Make sure the linked list only shows the minimal necessary information.
                }, {
                  key: e,
                  value: function(I, T) {
                    return g(this, r(r({}, T), {}, {
                      // Only inspect one level.
                      depth: 0,
                      // It should not recurse.
                      customInspect: !1
                    }));
                  }
                }]), w;
              }();
            }
          ),
          /***/
          11504: (
            /***/
            function(u, d, t) {
              t(83382);
              var o = t(43060), r = o.Buffer;
              function n(f, l) {
                for (var c in f)
                  l[c] = f[c];
              }
              r.from && r.alloc && r.allocUnsafe && r.allocUnsafeSlow ? u.exports = o : (n(o, d), d.Buffer = i);
              function i(f, l, c) {
                return r(f, l, c);
              }
              n(r, i), i.from = function(f, l, c) {
                if (typeof f == "number")
                  throw new TypeError("Argument must not be a number");
                return r(f, l, c);
              }, i.alloc = function(f, l, c) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                var h = r(f);
                return l !== void 0 ? typeof c == "string" ? h.fill(l, c) : h.fill(l) : h.fill(0), h;
              }, i.allocUnsafe = function(f) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                return r(f);
              }, i.allocUnsafeSlow = function(f) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                return o.SlowBuffer(f);
              };
            }
          ),
          /***/
          67827: (
            /***/
            function(u, d, t) {
              t(18821), t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(35779);
              var o = t(84346), r = t(84962), n = r.swap32LE, i = 6 + 5, f = 5, l = i - f, c = 65536 >> i, h = 1 << l, a = h - 1, v = 2, y = 1 << f, g = y - 1, e = 65536 >> f, m = 1024 >> f, w = e + m, D = w, I = 32, T = D + I, C = 1 << v, E = /* @__PURE__ */ function() {
                function F(P) {
                  var L = typeof P.readUInt32BE == "function" && typeof P.slice == "function";
                  if (L || P instanceof Uint8Array) {
                    var N;
                    if (L)
                      this.highStart = P.readUInt32LE(0), this.errorValue = P.readUInt32LE(4), N = P.readUInt32LE(8), P = P.slice(12);
                    else {
                      var M = new DataView(P.buffer);
                      this.highStart = M.getUint32(0, !0), this.errorValue = M.getUint32(4, !0), N = M.getUint32(8, !0), P = P.subarray(12);
                    }
                    P = o(P, new Uint8Array(N)), P = o(P, new Uint8Array(N)), n(P), this.data = new Uint32Array(P.buffer);
                  } else {
                    var K = P;
                    this.data = K.data, this.highStart = K.highStart, this.errorValue = K.errorValue;
                  }
                }
                var x = F.prototype;
                return x.get = function(L) {
                  var N;
                  return L < 0 || L > 1114111 ? this.errorValue : L < 55296 || L > 56319 && L <= 65535 ? (N = (this.data[L >> f] << v) + (L & g), this.data[N]) : L <= 65535 ? (N = (this.data[e + (L - 55296 >> f)] << v) + (L & g), this.data[N]) : L < this.highStart ? (N = this.data[T - c + (L >> i)], N = this.data[N + (L >> f & a)], N = (N << v) + (L & g), this.data[N]) : this.data[this.data.length - C];
                }, F;
              }();
              u.exports = E;
            }
          ),
          /***/
          84962: (
            /***/
            function(u, d, t) {
              t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(35779);
              var o = new Uint8Array(new Uint32Array([305419896]).buffer)[0] === 18, r = function(l, c, h) {
                var a = l[c];
                l[c] = l[h], l[h] = a;
              }, n = function(l) {
                for (var c = l.length, h = 0; h < c; h += 4)
                  r(l, h, h + 3), r(l, h + 1, h + 2);
              }, i = function(l) {
                o && n(l);
              };
              u.exports = {
                swap32LE: i
              };
            }
          ),
          /***/
          31589: (
            /***/
            function(u, d, t) {
              var o = t(60902);
              u.exports = o;
            }
          ),
          /***/
          60902: (
            /***/
            function(u, d, t) {
              u = t.nmd(u), t(54994), t(80044), t(29897), t(39275), t(75668), t(47639), t(22321), t(18821), t(80174), t(67838), t(55862), t(54883), t(10853), t(68995), t(86125), t(83382);
              var o = function(n, i, f, l, c) {
                var h = {
                  aliceblue: [240, 248, 255],
                  antiquewhite: [250, 235, 215],
                  aqua: [0, 255, 255],
                  aquamarine: [127, 255, 212],
                  azure: [240, 255, 255],
                  beige: [245, 245, 220],
                  bisque: [255, 228, 196],
                  black: [0, 0, 0],
                  blanchedalmond: [255, 235, 205],
                  blue: [0, 0, 255],
                  blueviolet: [138, 43, 226],
                  brown: [165, 42, 42],
                  burlywood: [222, 184, 135],
                  cadetblue: [95, 158, 160],
                  chartreuse: [127, 255, 0],
                  chocolate: [210, 105, 30],
                  coral: [255, 127, 80],
                  cornflowerblue: [100, 149, 237],
                  cornsilk: [255, 248, 220],
                  crimson: [220, 20, 60],
                  cyan: [0, 255, 255],
                  darkblue: [0, 0, 139],
                  darkcyan: [0, 139, 139],
                  darkgoldenrod: [184, 134, 11],
                  darkgray: [169, 169, 169],
                  darkgrey: [169, 169, 169],
                  darkgreen: [0, 100, 0],
                  darkkhaki: [189, 183, 107],
                  darkmagenta: [139, 0, 139],
                  darkolivegreen: [85, 107, 47],
                  darkorange: [255, 140, 0],
                  darkorchid: [153, 50, 204],
                  darkred: [139, 0, 0],
                  darksalmon: [233, 150, 122],
                  darkseagreen: [143, 188, 143],
                  darkslateblue: [72, 61, 139],
                  darkslategray: [47, 79, 79],
                  darkslategrey: [47, 79, 79],
                  darkturquoise: [0, 206, 209],
                  darkviolet: [148, 0, 211],
                  deeppink: [255, 20, 147],
                  deepskyblue: [0, 191, 255],
                  dimgray: [105, 105, 105],
                  dimgrey: [105, 105, 105],
                  dodgerblue: [30, 144, 255],
                  firebrick: [178, 34, 34],
                  floralwhite: [255, 250, 240],
                  forestgreen: [34, 139, 34],
                  fuchsia: [255, 0, 255],
                  gainsboro: [220, 220, 220],
                  ghostwhite: [248, 248, 255],
                  gold: [255, 215, 0],
                  goldenrod: [218, 165, 32],
                  gray: [128, 128, 128],
                  grey: [128, 128, 128],
                  green: [0, 128, 0],
                  greenyellow: [173, 255, 47],
                  honeydew: [240, 255, 240],
                  hotpink: [255, 105, 180],
                  indianred: [205, 92, 92],
                  indigo: [75, 0, 130],
                  ivory: [255, 255, 240],
                  khaki: [240, 230, 140],
                  lavender: [230, 230, 250],
                  lavenderblush: [255, 240, 245],
                  lawngreen: [124, 252, 0],
                  lemonchiffon: [255, 250, 205],
                  lightblue: [173, 216, 230],
                  lightcoral: [240, 128, 128],
                  lightcyan: [224, 255, 255],
                  lightgoldenrodyellow: [250, 250, 210],
                  lightgray: [211, 211, 211],
                  lightgrey: [211, 211, 211],
                  lightgreen: [144, 238, 144],
                  lightpink: [255, 182, 193],
                  lightsalmon: [255, 160, 122],
                  lightseagreen: [32, 178, 170],
                  lightskyblue: [135, 206, 250],
                  lightslategray: [119, 136, 153],
                  lightslategrey: [119, 136, 153],
                  lightsteelblue: [176, 196, 222],
                  lightyellow: [255, 255, 224],
                  lime: [0, 255, 0],
                  limegreen: [50, 205, 50],
                  linen: [250, 240, 230],
                  magenta: [255, 0, 255],
                  maroon: [128, 0, 0],
                  mediumaquamarine: [102, 205, 170],
                  mediumblue: [0, 0, 205],
                  mediumorchid: [186, 85, 211],
                  mediumpurple: [147, 112, 219],
                  mediumseagreen: [60, 179, 113],
                  mediumslateblue: [123, 104, 238],
                  mediumspringgreen: [0, 250, 154],
                  mediumturquoise: [72, 209, 204],
                  mediumvioletred: [199, 21, 133],
                  midnightblue: [25, 25, 112],
                  mintcream: [245, 255, 250],
                  mistyrose: [255, 228, 225],
                  moccasin: [255, 228, 181],
                  navajowhite: [255, 222, 173],
                  navy: [0, 0, 128],
                  oldlace: [253, 245, 230],
                  olive: [128, 128, 0],
                  olivedrab: [107, 142, 35],
                  orange: [255, 165, 0],
                  orangered: [255, 69, 0],
                  orchid: [218, 112, 214],
                  palegoldenrod: [238, 232, 170],
                  palegreen: [152, 251, 152],
                  paleturquoise: [175, 238, 238],
                  palevioletred: [219, 112, 147],
                  papayawhip: [255, 239, 213],
                  peachpuff: [255, 218, 185],
                  peru: [205, 133, 63],
                  pink: [255, 192, 203],
                  plum: [221, 160, 221],
                  powderblue: [176, 224, 230],
                  purple: [128, 0, 128],
                  rebeccapurple: [102, 51, 153],
                  red: [255, 0, 0],
                  rosybrown: [188, 143, 143],
                  royalblue: [65, 105, 225],
                  saddlebrown: [139, 69, 19],
                  salmon: [250, 128, 114],
                  sandybrown: [244, 164, 96],
                  seagreen: [46, 139, 87],
                  seashell: [255, 245, 238],
                  sienna: [160, 82, 45],
                  silver: [192, 192, 192],
                  skyblue: [135, 206, 235],
                  slateblue: [106, 90, 205],
                  slategray: [112, 128, 144],
                  slategrey: [112, 128, 144],
                  snow: [255, 250, 250],
                  springgreen: [0, 255, 127],
                  steelblue: [70, 130, 180],
                  tan: [210, 180, 140],
                  teal: [0, 128, 128],
                  thistle: [216, 191, 216],
                  tomato: [255, 99, 71],
                  turquoise: [64, 224, 208],
                  violet: [238, 130, 238],
                  wheat: [245, 222, 179],
                  white: [255, 255, 255],
                  whitesmoke: [245, 245, 245],
                  yellow: [255, 255, 0]
                }, a = {
                  black: [h.black, 1],
                  white: [h.white, 1],
                  transparent: [h.black, 0]
                }, v = {
                  quot: 34,
                  amp: 38,
                  lt: 60,
                  gt: 62,
                  apos: 39,
                  OElig: 338,
                  oelig: 339,
                  Scaron: 352,
                  scaron: 353,
                  Yuml: 376,
                  circ: 710,
                  tilde: 732,
                  ensp: 8194,
                  emsp: 8195,
                  thinsp: 8201,
                  zwnj: 8204,
                  zwj: 8205,
                  lrm: 8206,
                  rlm: 8207,
                  ndash: 8211,
                  mdash: 8212,
                  lsquo: 8216,
                  rsquo: 8217,
                  sbquo: 8218,
                  ldquo: 8220,
                  rdquo: 8221,
                  bdquo: 8222,
                  dagger: 8224,
                  Dagger: 8225,
                  permil: 8240,
                  lsaquo: 8249,
                  rsaquo: 8250,
                  euro: 8364,
                  nbsp: 160,
                  iexcl: 161,
                  cent: 162,
                  pound: 163,
                  curren: 164,
                  yen: 165,
                  brvbar: 166,
                  sect: 167,
                  uml: 168,
                  copy: 169,
                  ordf: 170,
                  laquo: 171,
                  not: 172,
                  shy: 173,
                  reg: 174,
                  macr: 175,
                  deg: 176,
                  plusmn: 177,
                  sup2: 178,
                  sup3: 179,
                  acute: 180,
                  micro: 181,
                  para: 182,
                  middot: 183,
                  cedil: 184,
                  sup1: 185,
                  ordm: 186,
                  raquo: 187,
                  frac14: 188,
                  frac12: 189,
                  frac34: 190,
                  iquest: 191,
                  Agrave: 192,
                  Aacute: 193,
                  Acirc: 194,
                  Atilde: 195,
                  Auml: 196,
                  Aring: 197,
                  AElig: 198,
                  Ccedil: 199,
                  Egrave: 200,
                  Eacute: 201,
                  Ecirc: 202,
                  Euml: 203,
                  Igrave: 204,
                  Iacute: 205,
                  Icirc: 206,
                  Iuml: 207,
                  ETH: 208,
                  Ntilde: 209,
                  Ograve: 210,
                  Oacute: 211,
                  Ocirc: 212,
                  Otilde: 213,
                  Ouml: 214,
                  times: 215,
                  Oslash: 216,
                  Ugrave: 217,
                  Uacute: 218,
                  Ucirc: 219,
                  Uuml: 220,
                  Yacute: 221,
                  THORN: 222,
                  szlig: 223,
                  agrave: 224,
                  aacute: 225,
                  acirc: 226,
                  atilde: 227,
                  auml: 228,
                  aring: 229,
                  aelig: 230,
                  ccedil: 231,
                  egrave: 232,
                  eacute: 233,
                  ecirc: 234,
                  euml: 235,
                  igrave: 236,
                  iacute: 237,
                  icirc: 238,
                  iuml: 239,
                  eth: 240,
                  ntilde: 241,
                  ograve: 242,
                  oacute: 243,
                  ocirc: 244,
                  otilde: 245,
                  ouml: 246,
                  divide: 247,
                  oslash: 248,
                  ugrave: 249,
                  uacute: 250,
                  ucirc: 251,
                  uuml: 252,
                  yacute: 253,
                  thorn: 254,
                  yuml: 255,
                  fnof: 402,
                  Alpha: 913,
                  Beta: 914,
                  Gamma: 915,
                  Delta: 916,
                  Epsilon: 917,
                  Zeta: 918,
                  Eta: 919,
                  Theta: 920,
                  Iota: 921,
                  Kappa: 922,
                  Lambda: 923,
                  Mu: 924,
                  Nu: 925,
                  Xi: 926,
                  Omicron: 927,
                  Pi: 928,
                  Rho: 929,
                  Sigma: 931,
                  Tau: 932,
                  Upsilon: 933,
                  Phi: 934,
                  Chi: 935,
                  Psi: 936,
                  Omega: 937,
                  alpha: 945,
                  beta: 946,
                  gamma: 947,
                  delta: 948,
                  epsilon: 949,
                  zeta: 950,
                  eta: 951,
                  theta: 952,
                  iota: 953,
                  kappa: 954,
                  lambda: 955,
                  mu: 956,
                  nu: 957,
                  xi: 958,
                  omicron: 959,
                  pi: 960,
                  rho: 961,
                  sigmaf: 962,
                  sigma: 963,
                  tau: 964,
                  upsilon: 965,
                  phi: 966,
                  chi: 967,
                  psi: 968,
                  omega: 969,
                  thetasym: 977,
                  upsih: 978,
                  piv: 982,
                  bull: 8226,
                  hellip: 8230,
                  prime: 8242,
                  Prime: 8243,
                  oline: 8254,
                  frasl: 8260,
                  weierp: 8472,
                  image: 8465,
                  real: 8476,
                  trade: 8482,
                  alefsym: 8501,
                  larr: 8592,
                  uarr: 8593,
                  rarr: 8594,
                  darr: 8595,
                  harr: 8596,
                  crarr: 8629,
                  lArr: 8656,
                  uArr: 8657,
                  rArr: 8658,
                  dArr: 8659,
                  hArr: 8660,
                  forall: 8704,
                  part: 8706,
                  exist: 8707,
                  empty: 8709,
                  nabla: 8711,
                  isin: 8712,
                  notin: 8713,
                  ni: 8715,
                  prod: 8719,
                  sum: 8721,
                  minus: 8722,
                  lowast: 8727,
                  radic: 8730,
                  prop: 8733,
                  infin: 8734,
                  ang: 8736,
                  and: 8743,
                  or: 8744,
                  cap: 8745,
                  cup: 8746,
                  int: 8747,
                  there4: 8756,
                  sim: 8764,
                  cong: 8773,
                  asymp: 8776,
                  ne: 8800,
                  equiv: 8801,
                  le: 8804,
                  ge: 8805,
                  sub: 8834,
                  sup: 8835,
                  nsub: 8836,
                  sube: 8838,
                  supe: 8839,
                  oplus: 8853,
                  otimes: 8855,
                  perp: 8869,
                  sdot: 8901,
                  lceil: 8968,
                  rceil: 8969,
                  lfloor: 8970,
                  rfloor: 8971,
                  lang: 9001,
                  rang: 9002,
                  loz: 9674,
                  spades: 9824,
                  clubs: 9827,
                  hearts: 9829,
                  diams: 9830
                }, y = {
                  A: 7,
                  a: 7,
                  C: 6,
                  c: 6,
                  H: 1,
                  h: 1,
                  L: 2,
                  l: 2,
                  M: 2,
                  m: 2,
                  Q: 4,
                  q: 4,
                  S: 4,
                  s: 4,
                  T: 2,
                  t: 2,
                  V: 1,
                  v: 1,
                  Z: 0,
                  z: 0
                }, g = {
                  A3: !0,
                  A4: !0,
                  a3: !0,
                  a4: !0
                }, e = {
                  color: {
                    inherit: !0,
                    initial: void 0
                  },
                  visibility: {
                    inherit: !0,
                    initial: "visible",
                    values: {
                      hidden: "hidden",
                      collapse: "hidden",
                      visible: "visible"
                    }
                  },
                  fill: {
                    inherit: !0,
                    initial: a.black
                  },
                  stroke: {
                    inherit: !0,
                    initial: "none"
                  },
                  "stop-color": {
                    inherit: !1,
                    initial: a.black
                  },
                  "fill-opacity": {
                    inherit: !0,
                    initial: 1
                  },
                  "stroke-opacity": {
                    inherit: !0,
                    initial: 1
                  },
                  "stop-opacity": {
                    inherit: !1,
                    initial: 1
                  },
                  "fill-rule": {
                    inherit: !0,
                    initial: "nonzero",
                    values: {
                      nonzero: "nonzero",
                      evenodd: "evenodd"
                    }
                  },
                  "clip-rule": {
                    inherit: !0,
                    initial: "nonzero",
                    values: {
                      nonzero: "nonzero",
                      evenodd: "evenodd"
                    }
                  },
                  "stroke-width": {
                    inherit: !0,
                    initial: 1
                  },
                  "stroke-dasharray": {
                    inherit: !0,
                    initial: []
                  },
                  "stroke-dashoffset": {
                    inherit: !0,
                    initial: 0
                  },
                  "stroke-miterlimit": {
                    inherit: !0,
                    initial: 4
                  },
                  "stroke-linejoin": {
                    inherit: !0,
                    initial: "miter",
                    values: {
                      miter: "miter",
                      round: "round",
                      bevel: "bevel"
                    }
                  },
                  "stroke-linecap": {
                    inherit: !0,
                    initial: "butt",
                    values: {
                      butt: "butt",
                      round: "round",
                      square: "square"
                    }
                  },
                  "font-size": {
                    inherit: !0,
                    initial: 16,
                    values: {
                      "xx-small": 9,
                      "x-small": 10,
                      small: 13,
                      medium: 16,
                      large: 18,
                      "x-large": 24,
                      "xx-large": 32
                    }
                  },
                  "font-family": {
                    inherit: !0,
                    initial: "sans-serif"
                  },
                  "font-weight": {
                    inherit: !0,
                    initial: "normal",
                    values: {
                      600: "bold",
                      700: "bold",
                      800: "bold",
                      900: "bold",
                      bold: "bold",
                      bolder: "bold",
                      500: "normal",
                      400: "normal",
                      300: "normal",
                      200: "normal",
                      100: "normal",
                      normal: "normal",
                      lighter: "normal"
                    }
                  },
                  "font-style": {
                    inherit: !0,
                    initial: "normal",
                    values: {
                      italic: "italic",
                      oblique: "italic",
                      normal: "normal"
                    }
                  },
                  "text-anchor": {
                    inherit: !0,
                    initial: "start",
                    values: {
                      start: "start",
                      middle: "middle",
                      end: "end"
                    }
                  },
                  direction: {
                    inherit: !0,
                    initial: "ltr",
                    values: {
                      ltr: "ltr",
                      rtl: "rtl"
                    }
                  },
                  "dominant-baseline": {
                    inherit: !0,
                    initial: "baseline",
                    values: {
                      auto: "baseline",
                      baseline: "baseline",
                      "before-edge": "before-edge",
                      "text-before-edge": "before-edge",
                      middle: "middle",
                      central: "central",
                      "after-edge": "after-edge",
                      "text-after-edge": "after-edge",
                      ideographic: "ideographic",
                      alphabetic: "alphabetic",
                      hanging: "hanging",
                      mathematical: "mathematical"
                    }
                  },
                  "alignment-baseline": {
                    inherit: !1,
                    initial: void 0,
                    values: {
                      auto: "baseline",
                      baseline: "baseline",
                      "before-edge": "before-edge",
                      "text-before-edge": "before-edge",
                      middle: "middle",
                      central: "central",
                      "after-edge": "after-edge",
                      "text-after-edge": "after-edge",
                      ideographic: "ideographic",
                      alphabetic: "alphabetic",
                      hanging: "hanging",
                      mathematical: "mathematical"
                    }
                  },
                  "baseline-shift": {
                    inherit: !0,
                    initial: "baseline",
                    values: {
                      baseline: "baseline",
                      sub: "sub",
                      super: "super"
                    }
                  },
                  "word-spacing": {
                    inherit: !0,
                    initial: 0,
                    values: {
                      normal: 0
                    }
                  },
                  "letter-spacing": {
                    inherit: !0,
                    initial: 0,
                    values: {
                      normal: 0
                    }
                  },
                  "text-decoration": {
                    inherit: !1,
                    initial: "none",
                    values: {
                      none: "none",
                      underline: "underline",
                      overline: "overline",
                      "line-through": "line-through"
                    }
                  },
                  "xml:space": {
                    inherit: !0,
                    initial: "default",
                    css: "white-space",
                    values: {
                      preserve: "preserve",
                      default: "default",
                      pre: "preserve",
                      "pre-line": "preserve",
                      "pre-wrap": "preserve",
                      nowrap: "default"
                    }
                  },
                  "marker-start": {
                    inherit: !0,
                    initial: "none"
                  },
                  "marker-mid": {
                    inherit: !0,
                    initial: "none"
                  },
                  "marker-end": {
                    inherit: !0,
                    initial: "none"
                  },
                  opacity: {
                    inherit: !1,
                    initial: 1
                  },
                  transform: {
                    inherit: !1,
                    initial: [1, 0, 0, 1, 0, 0]
                  },
                  display: {
                    inherit: !1,
                    initial: "inline",
                    values: {
                      none: "none",
                      inline: "inline",
                      block: "inline"
                    }
                  },
                  "clip-path": {
                    inherit: !1,
                    initial: "none"
                  },
                  mask: {
                    inherit: !1,
                    initial: "none"
                  },
                  overflow: {
                    inherit: !1,
                    initial: "hidden",
                    values: {
                      hidden: "hidden",
                      scroll: "hidden",
                      visible: "visible"
                    }
                  }
                };
                function m(Kt) {
                  var Ot = new function() {
                  }();
                  return Ot.name = "G" + (n._groupCount = (n._groupCount || 0) + 1), Ot.resources = n.ref(), Ot.xobj = n.ref({
                    Type: "XObject",
                    Subtype: "Form",
                    FormType: 1,
                    BBox: Kt,
                    Group: {
                      S: "Transparency",
                      CS: "DeviceRGB",
                      I: !0,
                      K: !1
                    },
                    Resources: Ot.resources
                  }), Ot.xobj.write(""), Ot.savedMatrix = n._ctm, Ot.savedPage = n.page, jn.push(Ot), n._ctm = [1, 0, 0, 1, 0, 0], n.page = {
                    width: n.page.width,
                    height: n.page.height,
                    write: function(Bt) {
                      Ot.xobj.write(Bt);
                    },
                    fonts: {},
                    xobjects: {},
                    ext_gstates: {},
                    patterns: {}
                  }, Ot;
                }
                function w(Kt) {
                  if (Kt !== jn.pop())
                    throw "Group not matching";
                  Object.keys(n.page.fonts).length && (Kt.resources.data.Font = n.page.fonts), Object.keys(n.page.xobjects).length && (Kt.resources.data.XObject = n.page.xobjects), Object.keys(n.page.ext_gstates).length && (Kt.resources.data.ExtGState = n.page.ext_gstates), Object.keys(n.page.patterns).length && (Kt.resources.data.Pattern = n.page.patterns), Kt.resources.end(), Kt.xobj.end(), n._ctm = Kt.savedMatrix, n.page = Kt.savedPage;
                }
                function D(Kt) {
                  n.page.xobjects[Kt.name] = Kt.xobj, n.addContent("/" + Kt.name + " Do");
                }
                function I(Kt, Ot) {
                  var re = "M" + (n._maskCount = (n._maskCount || 0) + 1), Bt = n.ref({
                    Type: "ExtGState",
                    CA: 1,
                    ca: 1,
                    BM: "Normal",
                    SMask: {
                      S: "Luminosity",
                      G: Kt.xobj,
                      BC: Ot ? [0, 0, 0] : [1, 1, 1]
                    }
                  });
                  Bt.end(), n.page.ext_gstates[re] = Bt, n.addContent("/" + re + " gs");
                }
                function T(Kt, Ot, re, Bt) {
                  var Nt = new function() {
                  }();
                  return Nt.group = Kt, Nt.dx = Ot, Nt.dy = re, Nt.matrix = Bt || [1, 0, 0, 1, 0, 0], Nt;
                }
                function C(Kt, Ot) {
                  var re = "P" + (n._patternCount = (n._patternCount || 0) + 1), Bt = n.ref({
                    Type: "Pattern",
                    PatternType: 1,
                    PaintType: 1,
                    TilingType: 2,
                    BBox: [0, 0, Kt.dx, Kt.dy],
                    XStep: Kt.dx,
                    YStep: Kt.dy,
                    Matrix: xt(n._ctm, Kt.matrix),
                    Resources: {
                      ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                      XObject: function() {
                        var Nt = {};
                        return Nt[Kt.group.name] = Kt.group.xobj, Nt;
                      }()
                    }
                  });
                  Bt.write("/" + Kt.group.name + " Do"), Bt.end(), n.page.patterns[re] = Bt, Ot ? (n.addContent("/Pattern CS"), n.addContent("/" + re + " SCN")) : (n.addContent("/Pattern cs"), n.addContent("/" + re + " scn"));
                }
                function E(Kt, Ot) {
                  n.page.fonts[Kt.id] || (n.page.fonts[Kt.id] = Kt.ref()), n.addContent("BT").addContent("/" + Kt.id + " " + Ot + " Tf");
                }
                function F(Kt, Ot, re, Bt, Nt, Mt) {
                  n.addContent(G(Kt) + " " + G(Ot) + " " + G(-re) + " " + G(-Bt) + " " + G(Nt) + " " + G(Mt) + " Tm");
                }
                function x(Kt, Ot) {
                  var re = Kt && Ot ? 2 : Ot ? 1 : Kt ? 0 : 3;
                  n.addContent(re + " Tr");
                }
                function P(Kt) {
                  n.addContent("<" + Kt + "> Tj");
                }
                function L() {
                  n.addContent("ET");
                }
                function N(Kt) {
                  Kt[0].constructor.name === "PDFPattern" ? (n.fillOpacity(Kt[1]), C(Kt[0], !1)) : n.fillColor(Kt[0], Kt[1]);
                }
                function M(Kt) {
                  Kt[0].constructor.name === "PDFPattern" ? (n.strokeOpacity(Kt[1]), C(Kt[0], !0)) : n.strokeColor(Kt[0], Kt[1]);
                }
                function K(Kt, Ot, re, Bt, Nt) {
                  var Mt = n.ref({
                    Type: "Annot",
                    Subtype: "Link",
                    Rect: [Kt, Ot, re, Bt],
                    Border: [0, 0, 0],
                    A: {
                      S: "URI",
                      URI: new String(Nt)
                    }
                  });
                  Mt.end(), ze.push(Mt);
                }
                function ut(Kt) {
                  var Ot = function(kt, ie, Zt, me) {
                    this.error = me, this.nodeName = kt, this.nodeValue = Zt, this.nodeType = ie, this.attributes = /* @__PURE__ */ Object.create(null), this.childNodes = [], this.parentNode = null, this.id = "", this.textContent = "", this.classList = [];
                  };
                  Ot.prototype.getAttribute = function(ee) {
                    return this.attributes[ee] != null ? this.attributes[ee] : null;
                  }, Ot.prototype.getElementById = function(ee) {
                    var kt = null;
                    return function ie(Zt) {
                      if (!kt && Zt.nodeType === 1) {
                        Zt.id === ee && (kt = Zt);
                        for (var me = 0; me < Zt.childNodes.length; me++)
                          ie(Zt.childNodes[me]);
                      }
                    }(this), kt;
                  }, Ot.prototype.getElementsByTagName = function(ee) {
                    var kt = [];
                    return function ie(Zt) {
                      if (Zt.nodeType === 1) {
                        Zt.nodeName === ee && kt.push(Zt);
                        for (var me = 0; me < Zt.childNodes.length; me++)
                          ie(Zt.childNodes[me]);
                      }
                    }(this), kt;
                  };
                  for (var re = new xe(Kt.trim()), Bt, Nt, Mt = !1, jt = function ee() {
                    var kt, ie;
                    if (kt = re.match(/^<([\w:.-]+)\s*/, !0)) {
                      for (var Zt = new Ot(kt[1], 1, null, Mt); kt = re.match(/^([\w:.-]+)(?:\s*=\s*"([^"]*)"|\s*=\s*'([^']*)')?\s*/, !0); ) {
                        var me = kt[1], Oe = J(kt[2] || kt[3] || "");
                        Zt.attributes[me] ? (rr('parseXml: duplicate attribute "' + me + '"'), Mt = !0) : (Zt.attributes[me] = Oe, me === "id" && (Zt.id = Oe), me === "class" && (Zt.classList = Oe.split(" ")));
                      }
                      if (re.match(/^>/)) {
                        for (; ie = ee(); )
                          Zt.childNodes.push(ie), ie.parentNode = Zt, Zt.textContent += ie.nodeType === 3 || ie.nodeType === 4 ? ie.nodeValue : ie.textContent;
                        return (kt = re.match(/^<\/([\w:.-]+)\s*>/, !0)) ? (kt[1] === Zt.nodeName || (rr('parseXml: tag not matching, opening "' + Zt.nodeName + '" & closing "' + kt[1] + '"'), Mt = !0), Zt) : (rr('parseXml: tag not matching, opening "' + Zt.nodeName + '" & not closing'), Mt = !0, Zt);
                      } else {
                        if (re.match(/^\/>/))
                          return Zt;
                        rr('parseXml: tag could not be parsed "' + Zt.nodeName + '"'), Mt = !0;
                      }
                    } else {
                      if (kt = re.match(/^<!--[\s\S]*?-->/))
                        return new Ot(null, 8, kt, Mt);
                      if (kt = re.match(/^<\?[\s\S]*?\?>/))
                        return new Ot(null, 7, kt, Mt);
                      if (kt = re.match(/^<!DOCTYPE\s*([\s\S]*?)>/))
                        return new Ot(null, 10, kt, Mt);
                      if (kt = re.match(/^<!\[CDATA\[([\s\S]*?)\]\]>/, !0))
                        return new Ot("#cdata-section", 4, kt[1], Mt);
                      if (kt = re.match(/^([^<]+)/, !0))
                        return new Ot("#text", 3, J(kt[1]), Mt);
                    }
                  }; Nt = jt(); )
                    Nt.nodeType === 1 && !Bt ? Bt = Nt : (Nt.nodeType === 1 || Nt.nodeType === 3 && Nt.nodeValue.trim() !== "") && rr("parseXml: data after document end has been discarded");
                  return re.matchAll() && rr("parseXml: parsing error"), Bt;
                }
                function J(Kt) {
                  return Kt.replace(/&(?:#([0-9]+)|#[xX]([0-9A-Fa-f]+)|([0-9A-Za-z]+));/g, function(Ot, re, Bt, Nt) {
                    return re ? String.fromCharCode(parseInt(re, 10)) : Bt ? String.fromCharCode(parseInt(Bt, 16)) : Nt && v[Nt] ? String.fromCharCode(v[Nt]) : Ot;
                  });
                }
                function rt(Kt) {
                  var Ot, re;
                  return Kt = (Kt || "").trim(), (Ot = h[Kt]) ? re = [Ot.slice(), 1] : (Ot = Kt.match(/^rgba\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9.]+)\s*\)$/i)) ? (Ot[1] = parseInt(Ot[1]), Ot[2] = parseInt(Ot[2]), Ot[3] = parseInt(Ot[3]), Ot[4] = parseFloat(Ot[4]), Ot[1] < 256 && Ot[2] < 256 && Ot[3] < 256 && Ot[4] <= 1 && (re = [Ot.slice(1, 4), Ot[4]])) : (Ot = Kt.match(/^rgb\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)$/i)) ? (Ot[1] = parseInt(Ot[1]), Ot[2] = parseInt(Ot[2]), Ot[3] = parseInt(Ot[3]), Ot[1] < 256 && Ot[2] < 256 && Ot[3] < 256 && (re = [Ot.slice(1, 4), 1])) : (Ot = Kt.match(/^rgb\(\s*([0-9.]+)%\s*,\s*([0-9.]+)%\s*,\s*([0-9.]+)%\s*\)$/i)) ? (Ot[1] = 2.55 * parseFloat(Ot[1]), Ot[2] = 2.55 * parseFloat(Ot[2]), Ot[3] = 2.55 * parseFloat(Ot[3]), Ot[1] < 256 && Ot[2] < 256 && Ot[3] < 256 && (re = [Ot.slice(1, 4), 1])) : (Ot = Kt.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i)) ? re = [[parseInt(Ot[1], 16), parseInt(Ot[2], 16), parseInt(Ot[3], 16)], 1] : (Ot = Kt.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i)) && (re = [[17 * parseInt(Ot[1], 16), 17 * parseInt(Ot[2], 16), 17 * parseInt(Ot[3], 16)], 1]), $r ? $r(re, Kt) : re;
                }
                function yt(Kt, Ot, re) {
                  var Bt = Kt[0].slice(), Nt = Kt[1] * Ot;
                  if (re) {
                    for (var Mt = 0; Mt < Kt.length; Mt++)
                      Bt[Mt] *= Nt;
                    return [Bt, 1];
                  } else
                    return [Bt, Nt];
                }
                function xt() {
                  function Kt(Bt, Nt) {
                    return [Bt[0] * Nt[0] + Bt[2] * Nt[1], Bt[1] * Nt[0] + Bt[3] * Nt[1], Bt[0] * Nt[2] + Bt[2] * Nt[3], Bt[1] * Nt[2] + Bt[3] * Nt[3], Bt[0] * Nt[4] + Bt[2] * Nt[5] + Bt[4], Bt[1] * Nt[4] + Bt[3] * Nt[5] + Bt[5]];
                  }
                  for (var Ot = arguments[0], re = 1; re < arguments.length; re++)
                    Ot = Kt(Ot, arguments[re]);
                  return Ot;
                }
                function Et(Kt, Ot) {
                  return [Ot[0] * Kt[0] + Ot[2] * Kt[1] + Ot[4], Ot[1] * Kt[0] + Ot[3] * Kt[1] + Ot[5]];
                }
                function Ft() {
                  for (var Kt = n._ctm, Ot = jn.length - 1; Ot >= 0; Ot--)
                    Kt = xt(jn[Ot].savedMatrix, Kt);
                  return Kt;
                }
                function Rt() {
                  return new zt().M(0, 0).L(n.page.width, 0).L(n.page.width, n.page.height).L(0, n.page.height).transform(Ut(Ft())).getBoundingBox();
                }
                function Ut(Kt) {
                  var Ot = Kt[0] * Kt[3] - Kt[1] * Kt[2];
                  return [Kt[3] / Ot, -Kt[1] / Ot, -Kt[2] / Ot, Kt[0] / Ot, (Kt[2] * Kt[5] - Kt[3] * Kt[4]) / Ot, (Kt[1] * Kt[4] - Kt[0] * Kt[5]) / Ot];
                }
                function Q(Kt) {
                  var Ot = G(Kt[0]), re = G(Kt[1]), Bt = G(Kt[2]), Nt = G(Kt[3]), Mt = G(Kt[4]), jt = G(Kt[5]);
                  if (mt(Ot * Nt - re * Bt, 0))
                    return [Ot, re, Bt, Nt, Mt, jt];
                }
                function pt(Kt) {
                  var Ot = Kt[2] || 0, re = Kt[1] || 0, Bt = Kt[0] || 0;
                  if (ot(Ot, 0) && ot(re, 0))
                    return [];
                  if (ot(Ot, 0))
                    return [-Bt / re];
                  var Nt = re * re - 4 * Ot * Bt;
                  return mt(Nt, 0) && Nt > 0 ? [(-re + Math.sqrt(Nt)) / (2 * Ot), (-re - Math.sqrt(Nt)) / (2 * Ot)] : ot(Nt, 0) ? [-re / (2 * Ot)] : [];
                }
                function ct(Kt, Ot) {
                  return (Ot[0] || 0) + (Ot[1] || 0) * Kt + (Ot[2] || 0) * Kt * Kt + (Ot[3] || 0) * Kt * Kt * Kt;
                }
                function ot(Kt, Ot) {
                  return Math.abs(Kt - Ot) < 1e-10;
                }
                function mt(Kt, Ot) {
                  return Math.abs(Kt - Ot) >= 1e-10;
                }
                function G(Kt) {
                  return Kt > -1e21 && Kt < 1e21 ? Math.round(Kt * 1e6) / 1e6 : 0;
                }
                function Tt(Kt) {
                  return typeof Kt == "object" && Kt !== null && typeof Kt.length == "number";
                }
                function z(Kt) {
                  for (var Ot = new xe((Kt || "").trim()), re = [1, 0, 0, 1, 0, 0], Bt; Bt = Ot.match(/^([A-Za-z]+)\s*[(]([^(]+)[)]/, !0); ) {
                    for (var Nt = Bt[1], Mt = [], jt = new xe(Bt[2].trim()), ee = void 0; ee = jt.matchNumber(); )
                      Mt.push(Number(ee)), jt.matchSeparator();
                    if (Nt === "matrix" && Mt.length === 6)
                      re = xt(re, [Mt[0], Mt[1], Mt[2], Mt[3], Mt[4], Mt[5]]);
                    else if (Nt === "translate" && Mt.length === 2)
                      re = xt(re, [1, 0, 0, 1, Mt[0], Mt[1]]);
                    else if (Nt === "translate" && Mt.length === 1)
                      re = xt(re, [1, 0, 0, 1, Mt[0], 0]);
                    else if (Nt === "scale" && Mt.length === 2)
                      re = xt(re, [Mt[0], 0, 0, Mt[1], 0, 0]);
                    else if (Nt === "scale" && Mt.length === 1)
                      re = xt(re, [Mt[0], 0, 0, Mt[0], 0, 0]);
                    else if (Nt === "rotate" && Mt.length === 3) {
                      var kt = Mt[0] * Math.PI / 180;
                      re = xt(re, [1, 0, 0, 1, Mt[1], Mt[2]], [Math.cos(kt), Math.sin(kt), -Math.sin(kt), Math.cos(kt), 0, 0], [1, 0, 0, 1, -Mt[1], -Mt[2]]);
                    } else if (Nt === "rotate" && Mt.length === 1) {
                      var ie = Mt[0] * Math.PI / 180;
                      re = xt(re, [Math.cos(ie), Math.sin(ie), -Math.sin(ie), Math.cos(ie), 0, 0]);
                    } else if (Nt === "skewX" && Mt.length === 1) {
                      var Zt = Mt[0] * Math.PI / 180;
                      re = xt(re, [1, 0, Math.tan(Zt), 1, 0, 0]);
                    } else if (Nt === "skewY" && Mt.length === 1) {
                      var me = Mt[0] * Math.PI / 180;
                      re = xt(re, [1, Math.tan(me), 0, 1, 0, 0]);
                    } else
                      return;
                    Ot.matchSeparator();
                  }
                  if (!Ot.matchAll())
                    return re;
                }
                function S(Kt, Ot, re, Bt, Nt, Mt) {
                  var jt = (Kt || "").trim().match(/^(none)$|^x(Min|Mid|Max)Y(Min|Mid|Max)(?:\s+(meet|slice))?$/) || [], ee = jt[1] || jt[4] || "meet", kt = jt[2] || "Mid", ie = jt[3] || "Mid", Zt = Ot / Bt, me = re / Nt, Oe = {
                    Min: 0,
                    Mid: 0.5,
                    Max: 1
                  }[kt] - (Mt || 0), Be = {
                    Min: 0,
                    Mid: 0.5,
                    Max: 1
                  }[ie] - (Mt || 0);
                  return ee === "slice" ? me = Zt = Math.max(Zt, me) : ee === "meet" && (me = Zt = Math.min(Zt, me)), [Zt, 0, 0, me, Oe * (Ot - Bt * Zt), Be * (re - Nt * me)];
                }
                function k(Kt) {
                  var Ot = /* @__PURE__ */ Object.create(null);
                  Kt = (Kt || "").trim().split(/;/);
                  for (var re = 0; re < Kt.length; re++) {
                    var Bt = (Kt[re].split(":")[0] || "").trim(), Nt = (Kt[re].split(":")[1] || "").trim();
                    Bt && (Ot[Bt] = Nt);
                  }
                  if (Ot.marker && (Ot["marker-start"] || (Ot["marker-start"] = Ot.marker), Ot["marker-mid"] || (Ot["marker-mid"] = Ot.marker), Ot["marker-end"] || (Ot["marker-end"] = Ot.marker)), Ot.font) {
                    for (var Mt = null, jt = null, ee = "normal", kt = "normal", ie = "normal", Zt = Ot.font.split(/\s+/), me = 0; me < Zt.length; me++)
                      switch (Zt[me]) {
                        case "normal":
                          break;
                        case "italic":
                        case "oblique":
                          ee = Zt[me];
                          break;
                        case "small-caps":
                          ie = Zt[me];
                          break;
                        case "bold":
                        case "bolder":
                        case "lighter":
                        case "100":
                        case "200":
                        case "300":
                        case "400":
                        case "500":
                        case "600":
                        case "700":
                        case "800":
                        case "900":
                          kt = Zt[me];
                          break;
                        default:
                          jt ? Mt ? Mt += " " + Zt[me] : Mt = Zt[me] : jt = Zt[me].split("/")[0];
                          break;
                      }
                    Ot["font-style"] || (Ot["font-style"] = ee), Ot["font-variant"] || (Ot["font-variant"] = ie), Ot["font-weight"] || (Ot["font-weight"] = kt), Ot["font-size"] || (Ot["font-size"] = jt), Ot["font-family"] || (Ot["font-family"] = Mt);
                  }
                  return Ot;
                }
                function V(Kt) {
                  for (var Ot = Kt.split(/(?=[.#])/g), re = [], Bt = [], Nt = [], Mt, jt = 0; jt < Ot.length; jt++)
                    if (Mt = Ot[jt].match(/^[#]([_A-Za-z0-9-]+)$/))
                      re.push(Mt[1]);
                    else if (Mt = Ot[jt].match(/^[.]([_A-Za-z0-9-]+)$/))
                      Bt.push(Mt[1]);
                    else if (Mt = Ot[jt].match(/^([_A-Za-z0-9-]+)$/))
                      Nt.push(Mt[1]);
                    else if (Ot[jt] !== "*")
                      return;
                  return {
                    tags: Nt,
                    ids: re,
                    classes: Bt,
                    specificity: re.length * 1e4 + Bt.length * 100 + Nt.length
                  };
                }
                function it(Kt) {
                  for (var Ot = new xe(Kt.trim()), re = [], Bt; Bt = Ot.match(/^\s*([^\{\}]*?)\s*\{([^\{\}]*?)\}/, !0); )
                    for (var Nt = Bt[1].split(/\s*,\s*/g), Mt = k(Bt[2]), jt = 0; jt < Nt.length; jt++) {
                      var ee = V(Nt[jt]);
                      ee && re.push({
                        selector: ee,
                        css: Mt
                      });
                    }
                  return re;
                }
                function tt(Kt, Ot) {
                  if (Kt.nodeType !== 1)
                    return !1;
                  for (var re = 0; re < Ot.tags.length; re++)
                    if (Ot.tags[re] !== Kt.nodeName)
                      return !1;
                  for (var Bt = 0; Bt < Ot.ids.length; Bt++)
                    if (Ot.ids[Bt] !== Kt.id)
                      return !1;
                  for (var Nt = 0; Nt < Ot.classes.length; Nt++)
                    if (Kt.classList.indexOf(Ot.classes[Nt]) === -1)
                      return !1;
                  return !0;
                }
                function _(Kt) {
                  for (var Ot = /* @__PURE__ */ Object.create(null), re = /* @__PURE__ */ Object.create(null), Bt = 0; Bt < Qe.length; Bt++) {
                    var Nt = Qe[Bt];
                    if (tt(Kt, Nt.selector))
                      for (var Mt in Nt.css)
                        re[Mt] > Nt.selector.specificity || (Ot[Mt] = Nt.css[Mt], re[Mt] = Nt.selector.specificity);
                  }
                  return Ot;
                }
                function At(Kt, Ot) {
                  return Kt.concat(Ot.slice(Kt.length));
                }
                function Lt(Kt, Ot) {
                  return Math.max(Kt.ascender, (Kt.bbox[3] || Kt.bbox.maxY) * (Kt.scale || 1)) * Ot / 1e3;
                }
                function Yt(Kt, Ot) {
                  return Math.min(Kt.descender, (Kt.bbox[1] || Kt.bbox.minY) * (Kt.scale || 1)) * Ot / 1e3;
                }
                function Gt(Kt, Ot) {
                  return (Kt.xHeight || 0.5 * (Kt.ascender - Kt.descender)) * Ot / 1e3;
                }
                function Dt(Kt, Ot, re, Bt) {
                  var Nt, Mt;
                  switch (re) {
                    case "middle":
                      Nt = 0.5 * Gt(Kt, Ot);
                      break;
                    case "central":
                      Nt = 0.5 * (Yt(Kt, Ot) + Lt(Kt, Ot));
                      break;
                    case "after-edge":
                    case "text-after-edge":
                      Nt = Yt(Kt, Ot);
                      break;
                    case "alphabetic":
                    case "auto":
                    case "baseline":
                      Nt = 0;
                      break;
                    case "mathematical":
                      Nt = 0.5 * Lt(Kt, Ot);
                      break;
                    case "hanging":
                      Nt = 0.8 * Lt(Kt, Ot);
                      break;
                    case "before-edge":
                    case "text-before-edge":
                      Nt = Lt(Kt, Ot);
                      break;
                    default:
                      Nt = 0;
                      break;
                  }
                  switch (Bt) {
                    case "baseline":
                      Mt = 0;
                      break;
                    case "super":
                      Mt = 0.6 * Ot;
                      break;
                    case "sub":
                      Mt = -0.6 * Ot;
                      break;
                    default:
                      Mt = Bt;
                      break;
                  }
                  return Nt - Mt;
                }
                function ae(Kt, Ot, re) {
                  for (var Bt = Kt.encode("" + re), Nt = Bt[0], Mt = Bt[1], jt = [], ee = 0; ee < Nt.length; ee++) {
                    var kt = Kt.unicode ? Kt.unicode[parseInt(Nt[ee], 16)] : [re.charCodeAt(ee)];
                    jt.push({
                      glyph: Nt[ee],
                      unicode: kt,
                      width: Mt[ee].advanceWidth * Ot / 1e3,
                      xOffset: Mt[ee].xOffset * Ot / 1e3,
                      yOffset: Mt[ee].yOffset * Ot / 1e3,
                      xAdvance: Mt[ee].xAdvance * Ot / 1e3,
                      yAdvance: Mt[ee].yAdvance * Ot / 1e3
                    });
                  }
                  return jt;
                }
                function Ae(Kt, Ot) {
                  switch (Kt.nodeName) {
                    case "use":
                      return new Pe(Kt, Ot);
                    case "symbol":
                      return new Fe(Kt, Ot);
                    case "g":
                      return new It(Kt, Ot);
                    case "a":
                      return new fe(Kt, Ot);
                    case "svg":
                      return new st(Kt, Ot);
                    case "image":
                      return new Y(Kt, Ot);
                    case "rect":
                      return new Wt(Kt, Ot);
                    case "circle":
                      return new _t(Kt, Ot);
                    case "ellipse":
                      return new $(Kt, Ot);
                    case "line":
                      return new Jt(Kt, Ot);
                    case "polyline":
                      return new te(Kt, Ot);
                    case "polygon":
                      return new Ct(Kt, Ot);
                    case "path":
                      return new Ht(Kt, Ot);
                    case "text":
                      return new Ze(Kt, Ot);
                    case "tspan":
                      return new rn(Kt, Ot);
                    case "textPath":
                      return new tr(Kt, Ot);
                    case "#text":
                    case "#cdata-section":
                      return new Ne(Kt);
                    default:
                      return new Qt(Kt, Ot);
                  }
                }
                var xe = function(Ot) {
                  this.match = function(re, Bt) {
                    var Nt = Ot.match(re);
                    if (!(!Nt || Nt.index !== 0))
                      return Ot = Ot.substring(Nt[0].length), Bt ? Nt : Nt[0];
                  }, this.matchSeparator = function() {
                    return this.match(/^(?:\s*,\s*|\s*|)/);
                  }, this.matchSpace = function() {
                    return this.match(/^(?:\s*)/);
                  }, this.matchLengthUnit = function() {
                    return this.match(/^(?:px|pt|cm|mm|in|pc|em|ex|%|)/);
                  }, this.matchNumber = function() {
                    return this.match(/^(?:[-+]?(?:[0-9]+[.][0-9]+|[0-9]+[.]|[.][0-9]+|[0-9]+)(?:[eE][-+]?[0-9]+)?)/);
                  }, this.matchAll = function() {
                    return this.match(/^[\s\S]+/);
                  };
                }, ce = function(Ot, re, Bt, Nt, Mt, jt, ee, kt) {
                  for (var ie = 6 * Hn, Zt = [Ot, -3 * Ot + 3 * Bt, 3 * Ot - 6 * Bt + 3 * Mt, -Ot + 3 * Bt - 3 * Mt + ee], me = [re, -3 * re + 3 * Nt, 3 * re - 6 * Nt + 3 * jt, -re + 3 * Nt - 3 * jt + kt], Oe = [-3 * Ot + 3 * Bt, 6 * Ot - 12 * Bt + 6 * Mt, -3 * Ot + 9 * Bt - 9 * Mt + 3 * ee], Be = [-3 * re + 3 * Nt, 6 * re - 12 * Nt + 6 * jt, -3 * re + 9 * Nt - 9 * jt + 3 * kt], je = [0], Je = 1; Je <= ie; Je++) {
                    var nr = (Je - 0.5) / ie, ve = ct(nr, Oe) / ie, Re = ct(nr, Be) / ie, $e = Math.sqrt(ve * ve + Re * Re);
                    je[Je] = je[Je - 1] + $e;
                  }
                  this.totalLength = je[ie], this.startPoint = [Ot, re, ot(Ot, Bt) && ot(re, Nt) ? Math.atan2(jt - Nt, Mt - Bt) : Math.atan2(Nt - re, Bt - Ot)], this.endPoint = [ee, kt, ot(Mt, ee) && ot(jt, kt) ? Math.atan2(jt - Nt, Mt - Bt) : Math.atan2(kt - jt, ee - Mt)], this.getBoundingBox = function() {
                    var We, ar = ct(0, Zt), Ye = ct(0, me), cr = ct(1, Zt), ir = ct(1, me);
                    ar > cr && (We = cr, cr = ar, ar = We), Ye > ir && (We = ir, ir = Ye, Ye = We);
                    for (var Ar = pt(Oe), kr = 0; kr < Ar.length; kr++)
                      if (Ar[kr] >= 0 && Ar[kr] <= 1) {
                        var Dr = ct(Ar[kr], Zt);
                        Dr < ar && (ar = Dr), Dr > cr && (cr = Dr);
                      }
                    for (var Tr = pt(Be), Or = 0; Or < Tr.length; Or++)
                      if (Tr[Or] >= 0 && Tr[Or] <= 1) {
                        var _r = ct(Tr[Or], me);
                        _r < Ye && (Ye = _r), _r > ir && (ir = _r);
                      }
                    return [ar, Ye, cr, ir];
                  }, this.getPointAtLength = function(We) {
                    if (ot(We, 0))
                      return this.startPoint;
                    if (ot(We, this.totalLength))
                      return this.endPoint;
                    if (!(We < 0 || We > this.totalLength))
                      for (var ar = 1; ar <= ie; ar++) {
                        var Ye = je[ar - 1], cr = je[ar];
                        if (Ye <= We && We <= cr) {
                          var ir = (ar - (cr - We) / (cr - Ye)) / ie, Ar = ct(ir, Zt), kr = ct(ir, me), Dr = ct(ir, Oe), Tr = ct(ir, Be);
                          return [Ar, kr, Math.atan2(Tr, Dr)];
                        }
                      }
                  };
                }, we = function(Ot, re, Bt, Nt) {
                  this.totalLength = Math.sqrt((Bt - Ot) * (Bt - Ot) + (Nt - re) * (Nt - re)), this.startPoint = [Ot, re, Math.atan2(Nt - re, Bt - Ot)], this.endPoint = [Bt, Nt, Math.atan2(Nt - re, Bt - Ot)], this.getBoundingBox = function() {
                    return [Math.min(this.startPoint[0], this.endPoint[0]), Math.min(this.startPoint[1], this.endPoint[1]), Math.max(this.startPoint[0], this.endPoint[0]), Math.max(this.startPoint[1], this.endPoint[1])];
                  }, this.getPointAtLength = function(Mt) {
                    if (Mt >= 0 && Mt <= this.totalLength) {
                      var jt = Mt / this.totalLength || 0, ee = this.startPoint[0] + jt * (this.endPoint[0] - this.startPoint[0]), kt = this.startPoint[1] + jt * (this.endPoint[1] - this.startPoint[1]);
                      return [ee, kt, this.startPoint[2]];
                    }
                  };
                }, zt = function Kt() {
                  this.pathCommands = [], this.pathSegments = [], this.startPoint = null, this.endPoint = null, this.totalLength = 0;
                  var Ot = 0, re = 0, Bt = 0, Nt = 0, Mt, jt, ee;
                  this.move = function(kt, ie) {
                    return Ot = Bt = kt, re = Nt = ie, null;
                  }, this.line = function(kt, ie) {
                    var Zt = new we(Bt, Nt, kt, ie);
                    return Bt = kt, Nt = ie, Zt;
                  }, this.curve = function(kt, ie, Zt, me, Oe, Be) {
                    var je = new ce(Bt, Nt, kt, ie, Zt, me, Oe, Be);
                    return Bt = Oe, Nt = Be, je;
                  }, this.close = function() {
                    var kt = new we(Bt, Nt, Ot, re);
                    return Bt = Ot, Nt = re, kt;
                  }, this.addCommand = function(kt) {
                    this.pathCommands.push(kt);
                    var ie = this[kt[0]].apply(this, kt.slice(3));
                    ie && (ie.hasStart = kt[1], ie.hasEnd = kt[2], this.startPoint = this.startPoint || ie.startPoint, this.endPoint = ie.endPoint, this.pathSegments.push(ie), this.totalLength += ie.totalLength);
                  }, this.M = function(kt, ie) {
                    return this.addCommand(["move", !0, !0, kt, ie]), Mt = "M", this;
                  }, this.m = function(kt, ie) {
                    return this.M(Bt + kt, Nt + ie);
                  }, this.Z = this.z = function() {
                    return this.addCommand(["close", !0, !0]), Mt = "Z", this;
                  }, this.L = function(kt, ie) {
                    return this.addCommand(["line", !0, !0, kt, ie]), Mt = "L", this;
                  }, this.l = function(kt, ie) {
                    return this.L(Bt + kt, Nt + ie);
                  }, this.H = function(kt) {
                    return this.L(kt, Nt);
                  }, this.h = function(kt) {
                    return this.L(Bt + kt, Nt);
                  }, this.V = function(kt) {
                    return this.L(Bt, kt);
                  }, this.v = function(kt) {
                    return this.L(Bt, Nt + kt);
                  }, this.C = function(kt, ie, Zt, me, Oe, Be) {
                    return this.addCommand(["curve", !0, !0, kt, ie, Zt, me, Oe, Be]), Mt = "C", jt = Zt, ee = me, this;
                  }, this.c = function(kt, ie, Zt, me, Oe, Be) {
                    return this.C(Bt + kt, Nt + ie, Bt + Zt, Nt + me, Bt + Oe, Nt + Be);
                  }, this.S = function(kt, ie, Zt, me) {
                    return this.C(Bt + (Mt === "C" ? Bt - jt : 0), Nt + (Mt === "C" ? Nt - ee : 0), kt, ie, Zt, me);
                  }, this.s = function(kt, ie, Zt, me) {
                    return this.C(Bt + (Mt === "C" ? Bt - jt : 0), Nt + (Mt === "C" ? Nt - ee : 0), Bt + kt, Nt + ie, Bt + Zt, Nt + me);
                  }, this.Q = function(kt, ie, Zt, me) {
                    var Oe = Bt + 0.6666666666666666 * (kt - Bt), Be = Nt + 2 / 3 * (ie - Nt), je = Zt + 2 / 3 * (kt - Zt), Je = me + 2 / 3 * (ie - me);
                    return this.addCommand(["curve", !0, !0, Oe, Be, je, Je, Zt, me]), Mt = "Q", jt = kt, ee = ie, this;
                  }, this.q = function(kt, ie, Zt, me) {
                    return this.Q(Bt + kt, Nt + ie, Bt + Zt, Nt + me);
                  }, this.T = function(kt, ie) {
                    return this.Q(Bt + (Mt === "Q" ? Bt - jt : 0), Nt + (Mt === "Q" ? Nt - ee : 0), kt, ie);
                  }, this.t = function(kt, ie) {
                    return this.Q(Bt + (Mt === "Q" ? Bt - jt : 0), Nt + (Mt === "Q" ? Nt - ee : 0), Bt + kt, Nt + ie);
                  }, this.A = function(kt, ie, Zt, me, Oe, Be, je) {
                    if (ot(kt, 0) || ot(ie, 0))
                      this.addCommand(["line", !0, !0, Be, je]);
                    else {
                      Zt = Zt * (Math.PI / 180), kt = Math.abs(kt), ie = Math.abs(ie), me = 1 * !!me, Oe = 1 * !!Oe;
                      var Je = Math.cos(Zt) * (Bt - Be) / 2 + Math.sin(Zt) * (Nt - je) / 2, nr = Math.cos(Zt) * (Nt - je) / 2 - Math.sin(Zt) * (Bt - Be) / 2, ve = Je * Je / (kt * kt) + nr * nr / (ie * ie);
                      ve > 1 && (kt *= Math.sqrt(ve), ie *= Math.sqrt(ve));
                      var Re = Math.sqrt(Math.max(0, kt * kt * ie * ie - kt * kt * nr * nr - ie * ie * Je * Je) / (kt * kt * nr * nr + ie * ie * Je * Je)), $e = (me === Oe ? -1 : 1) * Re * kt * nr / ie, We = (me === Oe ? 1 : -1) * Re * ie * Je / kt, ar = Math.cos(Zt) * $e - Math.sin(Zt) * We + (Bt + Be) / 2, Ye = Math.sin(Zt) * $e + Math.cos(Zt) * We + (Nt + je) / 2, cr = Math.atan2((nr - We) / ie, (Je - $e) / kt), ir = Math.atan2((-nr - We) / ie, (-Je - $e) / kt);
                      Oe === 0 && ir - cr > 0 ? ir -= 2 * Math.PI : Oe === 1 && ir - cr < 0 && (ir += 2 * Math.PI);
                      for (var Ar = Math.ceil(Math.abs(ir - cr) / (Math.PI / Hn)), kr = 0; kr < Ar; kr++) {
                        var Dr = cr + kr * (ir - cr) / Ar, Tr = cr + (kr + 1) * (ir - cr) / Ar, Or = 4 / 3 * Math.tan((Tr - Dr) / 4), _r = ar + Math.cos(Zt) * kt * (Math.cos(Dr) - Or * Math.sin(Dr)) - Math.sin(Zt) * ie * (Math.sin(Dr) + Or * Math.cos(Dr)), En = Ye + Math.sin(Zt) * kt * (Math.cos(Dr) - Or * Math.sin(Dr)) + Math.cos(Zt) * ie * (Math.sin(Dr) + Or * Math.cos(Dr)), an = ar + Math.cos(Zt) * kt * (Math.cos(Tr) + Or * Math.sin(Tr)) - Math.sin(Zt) * ie * (Math.sin(Tr) - Or * Math.cos(Tr)), bn = Ye + Math.sin(Zt) * kt * (Math.cos(Tr) + Or * Math.sin(Tr)) + Math.cos(Zt) * ie * (Math.sin(Tr) - Or * Math.cos(Tr)), Dn = ar + Math.cos(Zt) * kt * Math.cos(Tr) - Math.sin(Zt) * ie * Math.sin(Tr), on = Ye + Math.sin(Zt) * kt * Math.cos(Tr) + Math.cos(Zt) * ie * Math.sin(Tr);
                        this.addCommand(["curve", kr === 0, kr === Ar - 1, _r, En, an, bn, Dn, on]);
                      }
                    }
                    return Mt = "A", this;
                  }, this.a = function(kt, ie, Zt, me, Oe, Be, je) {
                    return this.A(kt, ie, Zt, me, Oe, Bt + Be, Nt + je);
                  }, this.path = function(kt) {
                    for (var ie, Zt, me, Oe = new xe((kt || "").trim()); ie = Oe.match(/^[astvzqmhlcASTVZQMHLC]/); ) {
                      Oe.matchSeparator();
                      for (var Be = []; Zt = g[ie + Be.length] ? Oe.match(/^[01]/) : Oe.matchNumber(); )
                        Oe.matchSeparator(), Be.length === y[ie] && (this[ie].apply(this, Be), Be = [], ie === "M" ? ie = "L" : ie === "m" && (ie = "l")), Be.push(Number(Zt));
                      if (Be.length === y[ie])
                        this[ie].apply(this, Be);
                      else {
                        rr("SvgPath: command " + ie + " with " + Be.length + " numbers");
                        return;
                      }
                    }
                    return (me = Oe.matchAll()) && rr("SvgPath: unexpected string " + me), this;
                  }, this.getBoundingBox = function() {
                    var kt = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
                    function ie(me) {
                      me[0] < kt[0] && (kt[0] = me[0]), me[2] > kt[2] && (kt[2] = me[2]), me[1] < kt[1] && (kt[1] = me[1]), me[3] > kt[3] && (kt[3] = me[3]);
                    }
                    for (var Zt = 0; Zt < this.pathSegments.length; Zt++)
                      ie(this.pathSegments[Zt].getBoundingBox());
                    return kt[0] === 1 / 0 && (kt[0] = 0), kt[1] === 1 / 0 && (kt[1] = 0), kt[2] === -1 / 0 && (kt[2] = 0), kt[3] === -1 / 0 && (kt[3] = 0), kt;
                  }, this.getPointAtLength = function(kt) {
                    if (kt >= 0 && kt <= this.totalLength) {
                      for (var ie, Zt = 0; Zt < this.pathSegments.length; Zt++) {
                        if (ie = this.pathSegments[Zt].getPointAtLength(kt))
                          return ie;
                        kt -= this.pathSegments[Zt].totalLength;
                      }
                      return this.endPoint;
                    }
                  }, this.transform = function(kt) {
                    this.pathSegments = [], this.startPoint = null, this.endPoint = null, this.totalLength = 0;
                    for (var ie = 0; ie < this.pathCommands.length; ie++) {
                      for (var Zt = this.pathCommands.shift(), me = 3; me < Zt.length; me += 2) {
                        var Oe = Et([Zt[me], Zt[me + 1]], kt);
                        Zt[me] = Oe[0], Zt[me + 1] = Oe[1];
                      }
                      this.addCommand(Zt);
                    }
                    return this;
                  }, this.mergeShape = function(kt) {
                    for (var ie = 0; ie < kt.pathCommands.length; ie++)
                      this.addCommand(kt.pathCommands[ie].slice());
                    return this;
                  }, this.clone = function() {
                    return new Kt().mergeShape(this);
                  }, this.insertInDocument = function() {
                    for (var kt = 0; kt < this.pathCommands.length; kt++) {
                      var ie = this.pathCommands[kt][0], Zt = this.pathCommands[kt].slice(3);
                      switch (ie) {
                        case "move":
                          n.moveTo(Zt[0], Zt[1]);
                          break;
                        case "line":
                          n.lineTo(Zt[0], Zt[1]);
                          break;
                        case "curve":
                          n.bezierCurveTo(Zt[0], Zt[1], Zt[2], Zt[3], Zt[4], Zt[5]);
                          break;
                        case "close":
                          n.closePath();
                          break;
                      }
                    }
                  }, this.getSubPaths = function() {
                    for (var kt = [], ie = new Kt(), Zt = 0; Zt < this.pathCommands.length; Zt++) {
                      var me = this.pathCommands[Zt], Oe = this.pathCommands[Zt][0];
                      Oe === "move" && Zt !== 0 && (kt.push(ie), ie = new Kt()), ie.addCommand(me);
                    }
                    return kt.push(ie), kt;
                  }, this.getMarkers = function() {
                    for (var kt = [], ie = this.getSubPaths(), Zt = 0; Zt < ie.length; Zt++) {
                      for (var me = ie[Zt], Oe = [], Be = 0; Be < me.pathSegments.length; Be++) {
                        var je = me.pathSegments[Be];
                        if (mt(je.totalLength, 0) || Be === 0 || Be === me.pathSegments.length - 1) {
                          if (je.hasStart) {
                            var Je = je.getPointAtLength(0), nr = Oe.pop();
                            nr && (Je[2] = 0.5 * (nr[2] + Je[2])), Oe.push(Je);
                          }
                          if (je.hasEnd) {
                            var ve = je.getPointAtLength(je.totalLength);
                            Oe.push(ve);
                          }
                        }
                      }
                      kt = kt.concat(Oe);
                    }
                    return kt;
                  };
                }, Qt = function(Ot, re) {
                  var Bt = /* @__PURE__ */ Object.create(null), Nt = null;
                  this.name = Ot.nodeName, this.isOuterElement = Ot === i || !Ot.parentNode, this.inherits = re || (this.isOuterElement ? null : Ae(Ot.parentNode, null)), this.stack = this.inherits ? this.inherits.stack.concat(Ot) : [Ot], this.style = k(typeof Ot.getAttribute == "function" && Ot.getAttribute("style")), this.css = Mn ? getComputedStyle(Ot) : _(Ot), this.allowedChildren = [], this.attr = function(Mt) {
                    if (typeof Ot.getAttribute == "function")
                      return Ot.getAttribute(Mt);
                  }, this.resolveUrl = function(Mt) {
                    var jt = (Mt || "").match(/^\s*(?:url\("(.*)#(.*)"\)|url\('(.*)#(.*)'\)|url\((.*)#(.*)\)|(.*)#(.*))\s*$/) || [], ee = jt[1] || jt[3] || jt[5] || jt[7], kt = jt[2] || jt[4] || jt[6] || jt[8];
                    if (kt) {
                      if (!ee) {
                        var ie = i.getElementById(kt);
                        if (ie) {
                          if (this.stack.indexOf(ie) === -1)
                            return ie;
                          rr('SVGtoPDF: loop of circular references for id "' + kt + '"');
                          return;
                        }
                      }
                      if (Wr) {
                        var Zt = Ue[ee];
                        if (!Zt) {
                          Zt = Wr(ee), Tt(Zt) || (Zt = [Zt]);
                          for (var me = 0; me < Zt.length; me++)
                            typeof Zt[me] == "string" && (Zt[me] = ut(Zt[me]));
                          Ue[ee] = Zt;
                        }
                        for (var Oe = 0; Oe < Zt.length; Oe++) {
                          var Be = Zt[Oe].getElementById(kt);
                          if (Be) {
                            if (this.stack.indexOf(Be) === -1)
                              return Be;
                            rr('SVGtoPDF: loop of circular references for id "' + ee + "#" + kt + '"');
                            return;
                          }
                        }
                      }
                    }
                  }, this.computeUnits = function(Mt, jt, ee, kt) {
                    return jt === "%" ? parseFloat(Mt) / 100 * (kt || ee != null ? ee : this.getViewport()) : jt === "ex" || jt === "em" ? Mt * {
                      em: 1,
                      ex: 0.5
                    }[jt] * (kt ? ee : this.get("font-size")) : Mt * {
                      "": 1,
                      px: 1,
                      pt: 96 / 72,
                      cm: 96 / 2.54,
                      mm: 96 / 25.4,
                      in: 96,
                      pc: 96 / 6
                    }[jt];
                  }, this.computeLength = function(Mt, jt, ee, kt) {
                    var ie = new xe((Mt || "").trim()), Zt, me;
                    return typeof (Zt = ie.matchNumber()) == "string" && typeof (me = ie.matchLengthUnit()) == "string" && !ie.matchAll() ? this.computeUnits(Zt, me, jt, kt) : ee;
                  }, this.computeLengthList = function(Mt, jt, ee) {
                    for (var kt = new xe((Mt || "").trim()), ie = [], Zt, me; typeof (Zt = kt.matchNumber()) == "string" && typeof (me = kt.matchLengthUnit()) == "string"; )
                      ie.push(this.computeUnits(Zt, me, jt)), kt.matchSeparator();
                    if (!(ee && kt.matchAll()))
                      return ie;
                  }, this.getLength = function(Mt, jt, ee) {
                    return this.computeLength(this.attr(Mt), jt, ee);
                  }, this.getLengthList = function(Mt, jt) {
                    return this.computeLengthList(this.attr(Mt), jt);
                  }, this.getUrl = function(Mt) {
                    return this.resolveUrl(this.attr(Mt));
                  }, this.getNumberList = function(Mt) {
                    for (var jt = new xe((this.attr(Mt) || "").trim()), ee = [], kt; kt = jt.matchNumber(); )
                      ee.push(Number(kt)), jt.matchSeparator();
                    return ee.error = jt.matchAll(), ee;
                  }, this.getViewbox = function(Mt, jt) {
                    var ee = this.getNumberList(Mt);
                    return ee.length === 4 && ee[2] >= 0 && ee[3] >= 0 ? ee : jt;
                  }, this.getPercent = function(Mt, jt) {
                    var ee = this.attr(Mt), kt = new xe((ee || "").trim()), ie = kt.matchNumber();
                    return !ie || (kt.match("%") && (ie *= 0.01), kt.matchAll()) ? jt : Math.max(0, Math.min(1, ie));
                  }, this.chooseValue = function(Mt) {
                    for (var jt = 0; jt < arguments.length; jt++)
                      if (arguments[jt] != null && arguments[jt] === arguments[jt])
                        return arguments[jt];
                    return arguments[arguments.length - 1];
                  }, this.get = function(Mt) {
                    if (Bt[Mt] !== void 0)
                      return Bt[Mt];
                    for (var jt = e[Mt] || {}, ee, kt, ie = 0; ie < 3; ie++) {
                      switch (ie) {
                        case 0:
                          Mt !== "transform" && (ee = this.css[jt.css || Mt]);
                          break;
                        case 1:
                          ee = this.style[Mt];
                          break;
                        case 2:
                          ee = this.attr(Mt);
                          break;
                      }
                      if (ee === "inherit" && (kt = this.inherits ? this.inherits.get(Mt) : jt.initial, kt != null) || jt.values != null && (kt = jt.values[ee], kt != null))
                        return Bt[Mt] = kt;
                      if (ee != null) {
                        var Zt = void 0;
                        switch (Mt) {
                          case "font-size":
                            kt = this.computeLength(ee, this.inherits ? this.inherits.get(Mt) : jt.initial, void 0, !0);
                            break;
                          case "baseline-shift":
                            kt = this.computeLength(ee, this.get("font-size"));
                            break;
                          case "font-family":
                            kt = ee || void 0;
                            break;
                          case "opacity":
                          case "stroke-opacity":
                          case "fill-opacity":
                          case "stop-opacity":
                            Zt = parseFloat(ee), isNaN(Zt) || (kt = Math.max(0, Math.min(1, Zt)));
                            break;
                          case "transform":
                            kt = z(ee);
                            break;
                          case "stroke-dasharray":
                            if (ee === "none")
                              kt = [];
                            else if (Zt = this.computeLengthList(ee, this.getViewport(), !0)) {
                              for (var me = 0, Oe = !1, Be = 0; Be < Zt.length; Be++)
                                Zt[Be] < 0 && (Oe = !0), me += Zt[Be];
                              Oe || (Zt.length % 2 === 1 && (Zt = Zt.concat(Zt)), kt = me === 0 ? [] : Zt);
                            }
                            break;
                          case "color":
                            ee === "none" || ee === "transparent" ? kt = "none" : kt = rt(ee);
                            break;
                          case "fill":
                          case "stroke":
                            if (ee === "none" || ee === "transparent")
                              kt = "none";
                            else if (ee === "currentColor")
                              kt = this.get("color");
                            else {
                              if (Zt = rt(ee))
                                return Zt;
                              if (Zt = (ee || "").split(" ")) {
                                var je = this.resolveUrl(Zt[0]), Je = rt(Zt[1]);
                                je == null ? kt = Je : je.nodeName === "linearGradient" || je.nodeName === "radialGradient" ? kt = new bt(je, null, Je) : je.nodeName === "pattern" ? kt = new j(je, null, Je) : kt = Je;
                              }
                            }
                            break;
                          case "stop-color":
                            ee === "none" || ee === "transparent" ? kt = "none" : ee === "currentColor" ? kt = this.get("color") : kt = rt(ee);
                            break;
                          case "marker-start":
                          case "marker-mid":
                          case "marker-end":
                          case "clip-path":
                          case "mask":
                            ee === "none" ? kt = "none" : kt = this.resolveUrl(ee);
                            break;
                          case "stroke-width":
                            Zt = this.computeLength(ee, this.getViewport()), Zt != null && Zt >= 0 && (kt = Zt);
                            break;
                          case "stroke-miterlimit":
                            Zt = parseFloat(ee), Zt != null && Zt >= 1 && (kt = Zt);
                            break;
                          case "word-spacing":
                          case "letter-spacing":
                            kt = this.computeLength(ee, this.getViewport());
                            break;
                          case "stroke-dashoffset":
                            if (kt = this.computeLength(ee, this.getViewport()), kt != null && kt < 0)
                              for (var nr = this.get("stroke-dasharray"), ve = 0; ve < nr.length; ve++)
                                kt += nr[ve];
                            break;
                        }
                        if (kt != null)
                          return Bt[Mt] = kt;
                      }
                    }
                    return Bt[Mt] = jt.inherit && this.inherits ? this.inherits.get(Mt) : jt.initial;
                  }, this.getChildren = function() {
                    if (Nt != null)
                      return Nt;
                    for (var Mt = [], jt = 0; jt < Ot.childNodes.length; jt++) {
                      var ee = Ot.childNodes[jt];
                      !ee.error && this.allowedChildren.indexOf(ee.nodeName) !== -1 && Mt.push(Ae(ee, this));
                    }
                    return Nt = Mt;
                  }, this.getParentVWidth = function() {
                    return this.inherits ? this.inherits.getVWidth() : Ir;
                  }, this.getParentVHeight = function() {
                    return this.inherits ? this.inherits.getVHeight() : Zr;
                  }, this.getParentViewport = function() {
                    return Math.sqrt(0.5 * this.getParentVWidth() * this.getParentVWidth() + 0.5 * this.getParentVHeight() * this.getParentVHeight());
                  }, this.getVWidth = function() {
                    return this.getParentVWidth();
                  }, this.getVHeight = function() {
                    return this.getParentVHeight();
                  }, this.getViewport = function() {
                    return Math.sqrt(0.5 * this.getVWidth() * this.getVWidth() + 0.5 * this.getVHeight() * this.getVHeight());
                  }, this.getBoundingBox = function() {
                    var Mt = this.getBoundingShape();
                    return Mt.getBoundingBox();
                  };
                }, le = function(Ot, re) {
                  Qt.call(this, Ot, re), this.transform = function() {
                    n.transform.apply(n, this.getTransformation());
                  }, this.clip = function() {
                    if (this.get("clip-path") !== "none") {
                      var Bt = new Le(this.get("clip-path"), null);
                      return Bt.useMask(this.getBoundingBox()), !0;
                    }
                  }, this.mask = function() {
                    if (this.get("mask") !== "none") {
                      var Bt = new De(this.get("mask"), null);
                      return Bt.useMask(this.getBoundingBox()), !0;
                    }
                  }, this.getFill = function(Bt, Nt) {
                    var Mt = this.get("opacity"), jt = this.get("fill"), ee = this.get("fill-opacity");
                    if (Bt)
                      return a.white;
                    if (jt !== "none" && Mt && ee)
                      return jt instanceof bt || jt instanceof j ? jt.getPaint(this.getBoundingBox(), ee * Mt, Bt, Nt) : yt(jt, ee * Mt, Nt);
                  }, this.getStroke = function(Bt, Nt) {
                    var Mt = this.get("opacity"), jt = this.get("stroke"), ee = this.get("stroke-opacity");
                    if (!(Bt || ot(this.get("stroke-width"), 0)) && jt !== "none" && Mt && ee)
                      return jt instanceof bt || jt instanceof j ? jt.getPaint(this.getBoundingBox(), ee * Mt, Bt, Nt) : yt(jt, ee * Mt, Nt);
                  };
                }, de = function(Ot, re) {
                  le.call(this, Ot, re), this.allowedChildren = ["use", "g", "a", "svg", "image", "rect", "circle", "ellipse", "line", "polyline", "polygon", "path", "text"], this.getBoundingShape = function() {
                    for (var Bt = new zt(), Nt = this.getChildren(), Mt = 0; Mt < Nt.length; Mt++)
                      if (Nt[Mt].get("display") !== "none" && typeof Nt[Mt].getBoundingShape == "function") {
                        var jt = Nt[Mt].getBoundingShape().clone();
                        typeof Nt[Mt].getTransformation == "function" && jt.transform(Nt[Mt].getTransformation()), Bt.mergeShape(jt);
                      }
                    return Bt;
                  }, this.drawChildren = function(Bt, Nt) {
                    for (var Mt = this.getChildren(), jt = 0; jt < Mt.length; jt++)
                      Mt[jt].get("display") !== "none" && typeof Mt[jt].drawInDocument == "function" && Mt[jt].drawInDocument(Bt, Nt);
                  };
                }, be = function(Ot, re) {
                  de.call(this, Ot, re), this.drawContent = function(Bt, Nt) {
                    this.transform();
                    var Mt = this.clip(), jt = this.mask(), ee;
                    (this.get("opacity") < 1 || Mt || jt) && !Bt && (ee = m(Rt())), this.drawChildren(Bt, Nt), ee && (w(ee), n.fillOpacity(this.get("opacity")), D(ee));
                  };
                }, Pe = function(Ot, re) {
                  be.call(this, Ot, re);
                  var Bt = this.getLength("x", this.getVWidth(), 0), Nt = this.getLength("y", this.getVHeight(), 0), Mt = this.getUrl("href") || this.getUrl("xlink:href");
                  Mt && (Mt = Ae(Mt, this)), this.getChildren = function() {
                    return Mt ? [Mt] : [];
                  }, this.drawInDocument = function(jt, ee) {
                    n.save(), this.drawContent(jt, ee), n.restore();
                  }, this.getTransformation = function() {
                    return xt(this.get("transform"), [1, 0, 0, 1, Bt, Nt]);
                  };
                }, Fe = function(Ot, re) {
                  be.call(this, Ot, re);
                  var Bt = this.getLength("width", this.getParentVWidth(), this.getParentVWidth()), Nt = this.getLength("height", this.getParentVHeight(), this.getParentVHeight());
                  re instanceof Pe && (Bt = re.getLength("width", re.getParentVWidth(), Bt), Nt = re.getLength("height", re.getParentVHeight(), Nt));
                  var Mt = (this.attr("preserveAspectRatio") || "").trim(), jt = this.getViewbox("viewBox", [0, 0, Bt, Nt]);
                  this.getVWidth = function() {
                    return jt[2];
                  }, this.getVHeight = function() {
                    return jt[3];
                  }, this.drawInDocument = function(ee, kt) {
                    n.save(), this.drawContent(ee, kt), n.restore();
                  }, this.getTransformation = function() {
                    return xt(S(Mt, Bt, Nt, jt[2], jt[3]), [1, 0, 0, 1, -jt[0], -jt[1]]);
                  };
                }, It = function(Ot, re) {
                  be.call(this, Ot, re), this.drawInDocument = function(Bt, Nt) {
                    n.save(), this.link && !Bt && !Nt && this.addLink(), this.drawContent(Bt, Nt), n.restore();
                  }, this.getTransformation = function() {
                    return this.get("transform");
                  };
                }, fe = function(Ot, re) {
                  re && re.isText ? (rn.call(this, Ot, re), this.allowedChildren = ["textPath", "tspan", "#text", "#cdata-section", "a"]) : It.call(this, Ot, re), this.link = this.attr("href") || this.attr("xlink:href"), this.addLink = function() {
                    if (this.link.match(/^(?:[a-z][a-z0-9+.-]*:|\/\/)?/i) && this.getChildren().length) {
                      var Bt = this.getBoundingShape().transform(Ft()).getBoundingBox();
                      K(Bt[0], Bt[1], Bt[2], Bt[3], this.link);
                    }
                  };
                }, st = function(Ot, re) {
                  be.call(this, Ot, re);
                  var Bt = this.getLength("width", this.getParentVWidth(), this.getParentVWidth()), Nt = this.getLength("height", this.getParentVHeight(), this.getParentVHeight()), Mt = this.getLength("x", this.getParentVWidth(), 0), jt = this.getLength("y", this.getParentVHeight(), 0);
                  re instanceof Pe && (Bt = re.getLength("width", re.getParentVWidth(), Bt), Nt = re.getLength("height", re.getParentVHeight(), Nt));
                  var ee = this.attr("preserveAspectRatio"), kt = this.getViewbox("viewBox", [0, 0, Bt, Nt]);
                  this.isOuterElement && Cn && (Mt = jt = 0, Bt = Ir, Nt = Zr, ee = Cn), this.getVWidth = function() {
                    return kt[2];
                  }, this.getVHeight = function() {
                    return kt[3];
                  }, this.drawInDocument = function(ie, Zt) {
                    n.save(), this.get("overflow") === "hidden" && (new zt().M(Mt, jt).L(Mt + Bt, jt).L(Mt + Bt, jt + Nt).L(Mt, jt + Nt).Z().transform(this.get("transform")).insertInDocument(), n.clip()), this.drawContent(ie, Zt), n.restore();
                  }, this.getTransformation = function() {
                    return xt(this.get("transform"), [1, 0, 0, 1, Mt, jt], S(ee, Bt, Nt, kt[2], kt[3]), [1, 0, 0, 1, -kt[0], -kt[1]]);
                  };
                }, Y = function(Ot, re) {
                  le.call(this, Ot, re);
                  var Bt = Mr(this.attr("href") || this.attr("xlink:href") || ""), Nt = this.getLength("x", this.getVWidth(), 0), Mt = this.getLength("y", this.getVHeight(), 0), jt = this.getLength("width", this.getVWidth(), "auto"), ee = this.getLength("height", this.getVHeight(), "auto"), kt;
                  try {
                    kt = n.openImage(Bt);
                  } catch {
                    rr('SVGElemImage: failed to open image "' + Bt + '" in PDFKit');
                  }
                  kt && (jt === "auto" && ee !== "auto" ? jt = ee * kt.width / kt.height : ee === "auto" && jt !== "auto" ? ee = jt * kt.height / kt.width : jt === "auto" && ee === "auto" && (jt = kt.width, ee = kt.height)), (jt === "auto" || jt < 0) && (jt = 0), (ee === "auto" || ee < 0) && (ee = 0), this.getTransformation = function() {
                    return this.get("transform");
                  }, this.getBoundingShape = function() {
                    return new zt().M(Nt, Mt).L(Nt + jt, Mt).M(Nt + jt, Mt + ee).L(Nt, Mt + ee);
                  }, this.drawInDocument = function(ie, Zt) {
                    this.get("visibility") === "hidden" || !kt || (n.save(), this.transform(), this.get("overflow") === "hidden" && n.rect(Nt, Mt, jt, ee).clip(), this.clip(), this.mask(), n.translate(Nt, Mt), n.transform.apply(n, S(this.attr("preserveAspectRatio"), jt, ee, kt ? kt.width : jt, kt ? kt.height : ee)), ie ? (n.rect(0, 0, kt.width, kt.height), N(a.white).fill()) : (n.fillOpacity(this.get("opacity")), n.image(kt, 0, 0)), n.restore());
                  };
                }, j = function Kt(Ot, re, Bt) {
                  de.call(this, Ot, re), this.ref = function() {
                    var jt = this.getUrl("href") || this.getUrl("xlink:href");
                    if (jt && jt.nodeName === Ot.nodeName)
                      return new Kt(jt, re, Bt);
                  }.call(this);
                  var Nt = this.attr;
                  this.attr = function(jt) {
                    var ee = Nt.call(this, jt);
                    return ee != null || jt === "href" || jt === "xlink:href" ? ee : this.ref ? this.ref.attr(jt) : null;
                  };
                  var Mt = this.getChildren;
                  this.getChildren = function() {
                    var jt = Mt.call(this);
                    return jt.length > 0 ? jt : this.ref ? this.ref.getChildren() : [];
                  }, this.getPaint = function(jt, ee, kt, ie) {
                    var Zt = this.attr("patternUnits") !== "userSpaceOnUse", me = this.attr("patternContentUnits") === "objectBoundingBox", Oe = this.getLength("x", Zt ? 1 : this.getParentVWidth(), 0), Be = this.getLength("y", Zt ? 1 : this.getParentVHeight(), 0), je = this.getLength("width", Zt ? 1 : this.getParentVWidth(), 0), Je = this.getLength("height", Zt ? 1 : this.getParentVHeight(), 0);
                    me && !Zt ? (Oe = (Oe - jt[0]) / (jt[2] - jt[0]) || 0, Be = (Be - jt[1]) / (jt[3] - jt[1]) || 0, je = je / (jt[2] - jt[0]) || 0, Je = Je / (jt[3] - jt[1]) || 0) : !me && Zt && (Oe = jt[0] + Oe * (jt[2] - jt[0]), Be = jt[1] + Be * (jt[3] - jt[1]), je = je * (jt[2] - jt[0]), Je = Je * (jt[3] - jt[1]));
                    var nr = this.getViewbox("viewBox", [0, 0, je, Je]), ve = (this.attr("preserveAspectRatio") || "").trim(), Re = xt(S(ve, je, Je, nr[2], nr[3], 0), [1, 0, 0, 1, -nr[0], -nr[1]]), $e = z(this.attr("patternTransform"));
                    if (me && ($e = xt([jt[2] - jt[0], 0, 0, jt[3] - jt[1], jt[0], jt[1]], $e)), $e = xt($e, [1, 0, 0, 1, Oe, Be]), ($e = Q($e)) && (Re = Q(Re)) && (je = G(je)) && (Je = G(Je))) {
                      var We = m([0, 0, je, Je]);
                      return n.transform.apply(n, Re), this.drawChildren(kt, ie), w(We), [T(We, je, Je, $e), ee];
                    } else
                      return Bt ? [Bt[0], Bt[1] * ee] : void 0;
                  }, this.getVWidth = function() {
                    var jt = this.attr("patternUnits") !== "userSpaceOnUse", ee = this.getLength("width", jt ? 1 : this.getParentVWidth(), 0);
                    return this.getViewbox("viewBox", [0, 0, ee, 0])[2];
                  }, this.getVHeight = function() {
                    var jt = this.attr("patternUnits") !== "userSpaceOnUse", ee = this.getLength("height", jt ? 1 : this.getParentVHeight(), 0);
                    return this.getViewbox("viewBox", [0, 0, 0, ee])[3];
                  };
                }, bt = function Kt(Ot, re, Bt) {
                  Qt.call(this, Ot, re), this.allowedChildren = ["stop"], this.ref = function() {
                    var jt = this.getUrl("href") || this.getUrl("xlink:href");
                    if (jt && jt.nodeName === Ot.nodeName)
                      return new Kt(jt, re, Bt);
                  }.call(this);
                  var Nt = this.attr;
                  this.attr = function(jt) {
                    var ee = Nt.call(this, jt);
                    return ee != null || jt === "href" || jt === "xlink:href" ? ee : this.ref ? this.ref.attr(jt) : null;
                  };
                  var Mt = this.getChildren;
                  this.getChildren = function() {
                    var jt = Mt.call(this);
                    return jt.length > 0 ? jt : this.ref ? this.ref.getChildren() : [];
                  }, this.getPaint = function(jt, ee, kt, ie) {
                    var Zt = this.getChildren();
                    if (Zt.length !== 0) {
                      if (Zt.length === 1) {
                        var me = Zt[0], Oe = me.get("stop-color");
                        return Oe === "none" ? void 0 : yt(Oe, me.get("stop-opacity") * ee, ie);
                      }
                      var Be = this.attr("gradientUnits") !== "userSpaceOnUse", je = z(this.attr("gradientTransform")), Je = this.attr("spreadMethod"), nr, ve, Re, $e, We, ar, Ye = 0, cr = 0, ir = 1;
                      if (Be && (je = xt([jt[2] - jt[0], 0, 0, jt[3] - jt[1], jt[0], jt[1]], je)), je = Q(je)) {
                        if (this.name === "linearGradient")
                          ve = this.getLength("x1", Be ? 1 : this.getVWidth(), 0), Re = this.getLength("x2", Be ? 1 : this.getVWidth(), Be ? 1 : this.getVWidth()), $e = this.getLength("y1", Be ? 1 : this.getVHeight(), 0), We = this.getLength("y2", Be ? 1 : this.getVHeight(), 0);
                        else {
                          Re = this.getLength("cx", Be ? 1 : this.getVWidth(), Be ? 0.5 : 0.5 * this.getVWidth()), We = this.getLength("cy", Be ? 1 : this.getVHeight(), Be ? 0.5 : 0.5 * this.getVHeight()), ar = this.getLength("r", Be ? 1 : this.getViewport(), Be ? 0.5 : 0.5 * this.getViewport()), ve = this.getLength("fx", Be ? 1 : this.getVWidth(), Re), $e = this.getLength("fy", Be ? 1 : this.getVHeight(), We), ar < 0 && rr("SvgElemGradient: negative r value");
                          var Ar = Math.sqrt(Math.pow(Re - ve, 2) + Math.pow(We - $e, 2)), kr = 1;
                          Ar > ar && (kr = ar / Ar, ve = Re + (ve - Re) * kr, $e = We + ($e - We) * kr), ar = Math.max(ar, Ar * kr * (1 + 1e-6));
                        }
                        if (Je === "reflect" || Je === "repeat") {
                          var Dr = Ut(je), Tr = Et([jt[0], jt[1]], Dr), Or = Et([jt[2], jt[1]], Dr), _r = Et([jt[2], jt[3]], Dr), En = Et([jt[0], jt[3]], Dr);
                          this.name === "linearGradient" ? (Ye = Math.max((Tr[0] - Re) * (Re - ve) + (Tr[1] - We) * (We - $e), (Or[0] - Re) * (Re - ve) + (Or[1] - We) * (We - $e), (_r[0] - Re) * (Re - ve) + (_r[1] - We) * (We - $e), (En[0] - Re) * (Re - ve) + (En[1] - We) * (We - $e)) / (Math.pow(Re - ve, 2) + Math.pow(We - $e, 2)), cr = Math.max((Tr[0] - ve) * (ve - Re) + (Tr[1] - $e) * ($e - We), (Or[0] - ve) * (ve - Re) + (Or[1] - $e) * ($e - We), (_r[0] - ve) * (ve - Re) + (_r[1] - $e) * ($e - We), (En[0] - ve) * (ve - Re) + (En[1] - $e) * ($e - We)) / (Math.pow(Re - ve, 2) + Math.pow(We - $e, 2))) : Ye = Math.sqrt(Math.max(Math.pow(Tr[0] - Re, 2) + Math.pow(Tr[1] - We, 2), Math.pow(Or[0] - Re, 2) + Math.pow(Or[1] - We, 2), Math.pow(_r[0] - Re, 2) + Math.pow(_r[1] - We, 2), Math.pow(En[0] - Re, 2) + Math.pow(En[1] - We, 2))) / ar - 1, Ye = Math.ceil(Ye + 0.5), cr = Math.ceil(cr + 0.5), ir = cr + 1 + Ye;
                        }
                        this.name === "linearGradient" ? nr = n.linearGradient(ve - cr * (Re - ve), $e - cr * (We - $e), Re + Ye * (Re - ve), We + Ye * (We - $e)) : nr = n.radialGradient(ve, $e, 0, Re, We, ar + Ye * ar);
                        for (var an = 0; an < ir; an++)
                          for (var bn = 0, Dn = Je !== "reflect" || (an - cr) % 2 === 0, on = 0; on < Zt.length; on++) {
                            var cn = Zt[Dn ? on : Zt.length - 1 - on], ln = cn.get("stop-color");
                            ln === "none" && (ln = a.transparent), ln = yt(ln, cn.get("stop-opacity") * ee, ie), bn = Math.max(bn, Dn ? cn.getPercent("offset", 0) : 1 - cn.getPercent("offset", 0)), on === 0 && ln[0].length === 4 && (nr._colorSpace = "DeviceCMYK"), on === 0 && bn > 0 && nr.stop((an + 0) / ir, ln[0], ln[1]), nr.stop((an + bn) / (Ye + cr + 1), ln[0], ln[1]), on === Zt.length - 1 && bn < 1 && nr.stop((an + 1) / ir, ln[0], ln[1]);
                          }
                        return nr.setTransform.apply(nr, je), [nr, 1];
                      } else
                        return Bt ? [Bt[0], Bt[1] * ee] : void 0;
                    }
                  };
                }, at = function(Ot, re) {
                  le.call(this, Ot, re), this.dashScale = 1, this.getBoundingShape = function() {
                    return this.shape;
                  }, this.getTransformation = function() {
                    return this.get("transform");
                  }, this.drawInDocument = function(Bt, Nt) {
                    if (!(this.get("visibility") === "hidden" || !this.shape)) {
                      if (n.save(), this.transform(), this.clip(), Bt)
                        this.shape.insertInDocument(), N(a.white), n.fill(this.get("clip-rule"));
                      else {
                        var Mt = this.mask(), jt;
                        Mt && (jt = m(Rt()));
                        var ee = this.shape.getSubPaths(), kt = this.getFill(Bt, Nt), ie = this.getStroke(Bt, Nt), Zt = this.get("stroke-width"), me = this.get("stroke-linecap");
                        if (kt || ie) {
                          if (kt && N(kt), ie) {
                            for (var Oe = 0; Oe < ee.length; Oe++)
                              if (ot(ee[Oe].totalLength, 0) && (me === "square" || me === "round") && Zt > 0 && ee[Oe].startPoint && ee[Oe].startPoint.length > 1) {
                                var Be = ee[Oe].startPoint[0], je = ee[Oe].startPoint[1];
                                N(ie), me === "square" ? n.rect(Be - 0.5 * Zt, je - 0.5 * Zt, Zt, Zt) : me === "round" && n.circle(Be, je, 0.5 * Zt), n.fill();
                              }
                            var Je = this.get("stroke-dasharray"), nr = this.get("stroke-dashoffset");
                            if (mt(this.dashScale, 1)) {
                              for (var ve = 0; ve < Je.length; ve++)
                                Je[ve] *= this.dashScale;
                              nr *= this.dashScale;
                            }
                            M(ie), n.lineWidth(Zt).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(me).dash(Je, {
                              phase: nr
                            });
                          }
                          for (var Re = 0; Re < ee.length; Re++)
                            ee[Re].totalLength > 0 && ee[Re].insertInDocument();
                          kt && ie ? n.fillAndStroke(this.get("fill-rule")) : kt ? n.fill(this.get("fill-rule")) : ie && n.stroke();
                        }
                        var $e = this.get("marker-start"), We = this.get("marker-mid"), ar = this.get("marker-end");
                        if ($e !== "none" || We !== "none" || ar !== "none") {
                          var Ye = this.shape.getMarkers();
                          if ($e !== "none") {
                            var cr = new oe($e, null);
                            cr.drawMarker(!1, Nt, Ye[0], Zt);
                          }
                          if (We !== "none")
                            for (var ir = 1; ir < Ye.length - 1; ir++) {
                              var Ar = new oe(We, null);
                              Ar.drawMarker(!1, Nt, Ye[ir], Zt);
                            }
                          if (ar !== "none") {
                            var kr = new oe(ar, null);
                            kr.drawMarker(!1, Nt, Ye[Ye.length - 1], Zt);
                          }
                        }
                        jt && (w(jt), D(jt));
                      }
                      n.restore();
                    }
                  };
                }, Wt = function(Ot, re) {
                  at.call(this, Ot, re);
                  var Bt = this.getLength("x", this.getVWidth(), 0), Nt = this.getLength("y", this.getVHeight(), 0), Mt = this.getLength("width", this.getVWidth(), 0), jt = this.getLength("height", this.getVHeight(), 0), ee = this.getLength("rx", this.getVWidth()), kt = this.getLength("ry", this.getVHeight());
                  ee === void 0 && kt === void 0 ? ee = kt = 0 : ee === void 0 && kt !== void 0 ? ee = kt : ee !== void 0 && kt === void 0 && (kt = ee), Mt > 0 && jt > 0 ? ee && kt ? (ee = Math.min(ee, 0.5 * Mt), kt = Math.min(kt, 0.5 * jt), this.shape = new zt().M(Bt + ee, Nt).L(Bt + Mt - ee, Nt).A(ee, kt, 0, 0, 1, Bt + Mt, Nt + kt).L(Bt + Mt, Nt + jt - kt).A(ee, kt, 0, 0, 1, Bt + Mt - ee, Nt + jt).L(Bt + ee, Nt + jt).A(ee, kt, 0, 0, 1, Bt, Nt + jt - kt).L(Bt, Nt + kt).A(ee, kt, 0, 0, 1, Bt + ee, Nt).Z()) : this.shape = new zt().M(Bt, Nt).L(Bt + Mt, Nt).L(Bt + Mt, Nt + jt).L(Bt, Nt + jt).Z() : this.shape = new zt();
                }, _t = function(Ot, re) {
                  at.call(this, Ot, re);
                  var Bt = this.getLength("cx", this.getVWidth(), 0), Nt = this.getLength("cy", this.getVHeight(), 0), Mt = this.getLength("r", this.getViewport(), 0);
                  Mt > 0 ? this.shape = new zt().M(Bt + Mt, Nt).A(Mt, Mt, 0, 0, 1, Bt - Mt, Nt).A(Mt, Mt, 0, 0, 1, Bt + Mt, Nt).Z() : this.shape = new zt();
                }, $ = function(Ot, re) {
                  at.call(this, Ot, re);
                  var Bt = this.getLength("cx", this.getVWidth(), 0), Nt = this.getLength("cy", this.getVHeight(), 0), Mt = this.getLength("rx", this.getVWidth(), 0), jt = this.getLength("ry", this.getVHeight(), 0);
                  Mt > 0 && jt > 0 ? this.shape = new zt().M(Bt + Mt, Nt).A(Mt, jt, 0, 0, 1, Bt - Mt, Nt).A(Mt, jt, 0, 0, 1, Bt + Mt, Nt).Z() : this.shape = new zt();
                }, Jt = function(Ot, re) {
                  at.call(this, Ot, re);
                  var Bt = this.getLength("x1", this.getVWidth(), 0), Nt = this.getLength("y1", this.getVHeight(), 0), Mt = this.getLength("x2", this.getVWidth(), 0), jt = this.getLength("y2", this.getVHeight(), 0);
                  this.shape = new zt().M(Bt, Nt).L(Mt, jt);
                }, te = function(Ot, re) {
                  at.call(this, Ot, re);
                  var Bt = this.getNumberList("points");
                  this.shape = new zt();
                  for (var Nt = 0; Nt < Bt.length - 1; Nt += 2)
                    Nt === 0 ? this.shape.M(Bt[Nt], Bt[Nt + 1]) : this.shape.L(Bt[Nt], Bt[Nt + 1]);
                  Bt.error && rr("SvgElemPolygon: unexpected string " + Bt.error), Bt.length % 2 === 1 && rr("SvgElemPolyline: uneven number of coordinates");
                }, Ct = function(Ot, re) {
                  at.call(this, Ot, re);
                  var Bt = this.getNumberList("points");
                  this.shape = new zt();
                  for (var Nt = 0; Nt < Bt.length - 1; Nt += 2)
                    Nt === 0 ? this.shape.M(Bt[Nt], Bt[Nt + 1]) : this.shape.L(Bt[Nt], Bt[Nt + 1]);
                  this.shape.Z(), Bt.error && rr("SvgElemPolygon: unexpected string " + Bt.error), Bt.length % 2 === 1 && rr("SvgElemPolygon: uneven number of coordinates");
                }, Ht = function(Ot, re) {
                  at.call(this, Ot, re), this.shape = new zt().path(this.attr("d"));
                  var Bt = this.getLength("pathLength", this.getViewport());
                  this.pathLength = Bt > 0 ? Bt : void 0, this.dashScale = this.pathLength !== void 0 ? this.shape.totalLength / this.pathLength : 1;
                }, oe = function(Ot, re) {
                  de.call(this, Ot, re);
                  var Bt = this.getLength("markerWidth", this.getParentVWidth(), 3), Nt = this.getLength("markerHeight", this.getParentVHeight(), 3), Mt = this.getViewbox("viewBox", [0, 0, Bt, Nt]);
                  this.getVWidth = function() {
                    return Mt[2];
                  }, this.getVHeight = function() {
                    return Mt[3];
                  }, this.drawMarker = function(jt, ee, kt, ie) {
                    n.save();
                    var Zt = this.attr("orient"), me = this.attr("markerUnits"), Oe = Zt === "auto" ? kt[2] : (parseFloat(Zt) || 0) * Math.PI / 180, Be = me === "userSpaceOnUse" ? 1 : ie;
                    n.transform(Math.cos(Oe) * Be, Math.sin(Oe) * Be, -Math.sin(Oe) * Be, Math.cos(Oe) * Be, kt[0], kt[1]);
                    var je = this.getLength("refX", this.getVWidth(), 0), Je = this.getLength("refY", this.getVHeight(), 0), nr = S(this.attr("preserveAspectRatio"), Bt, Nt, Mt[2], Mt[3], 0.5);
                    this.get("overflow") === "hidden" && n.rect(nr[0] * (Mt[0] + Mt[2] / 2 - je) - Bt / 2, nr[3] * (Mt[1] + Mt[3] / 2 - Je) - Nt / 2, Bt, Nt).clip(), n.transform.apply(n, nr), n.translate(-je, -Je);
                    var ve;
                    this.get("opacity") < 1 && !jt && (ve = m(Rt())), this.drawChildren(jt, ee), ve && (w(ve), n.fillOpacity(this.get("opacity")), D(ve)), n.restore();
                  };
                }, Le = function(Ot, re) {
                  de.call(this, Ot, re), this.useMask = function(Bt) {
                    var Nt = m(Rt());
                    n.save(), this.attr("clipPathUnits") === "objectBoundingBox" && n.transform(Bt[2] - Bt[0], 0, 0, Bt[3] - Bt[1], Bt[0], Bt[1]), this.clip(), this.drawChildren(!0, !1), n.restore(), w(Nt), I(Nt, !0);
                  };
                }, De = function(Ot, re) {
                  de.call(this, Ot, re), this.useMask = function(Bt) {
                    var Nt = m(Rt());
                    n.save();
                    var Mt, jt, ee, kt;
                    this.attr("maskUnits") === "userSpaceOnUse" ? (Mt = this.getLength("x", this.getVWidth(), -0.1 * (Bt[2] - Bt[0]) + Bt[0]), jt = this.getLength("y", this.getVHeight(), -0.1 * (Bt[3] - Bt[1]) + Bt[1]), ee = this.getLength("width", this.getVWidth(), 1.2 * (Bt[2] - Bt[0])), kt = this.getLength("height", this.getVHeight(), 1.2 * (Bt[3] - Bt[1]))) : (Mt = this.getLength("x", this.getVWidth(), -0.1) * (Bt[2] - Bt[0]) + Bt[0], jt = this.getLength("y", this.getVHeight(), -0.1) * (Bt[3] - Bt[1]) + Bt[1], ee = this.getLength("width", this.getVWidth(), 1.2) * (Bt[2] - Bt[0]), kt = this.getLength("height", this.getVHeight(), 1.2) * (Bt[3] - Bt[1])), n.rect(Mt, jt, ee, kt).clip(), this.attr("maskContentUnits") === "objectBoundingBox" && n.transform(Bt[2] - Bt[0], 0, 0, Bt[3] - Bt[1], Bt[0], Bt[1]), this.clip(), this.drawChildren(!1, !0), n.restore(), w(Nt), I(Nt, !0);
                  };
                }, ke = function(Ot, re) {
                  le.call(this, Ot, re), this.allowedChildren = ["tspan", "#text", "#cdata-section", "a"], this.isText = !0, this.getBoundingShape = function() {
                    for (var Bt = new zt(), Nt = 0; Nt < this._pos.length; Nt++) {
                      var Mt = this._pos[Nt];
                      if (!Mt.hidden) {
                        var jt = Mt.ascent * Math.sin(Mt.rotate), ee = -Mt.ascent * Math.cos(Mt.rotate), kt = Mt.descent * Math.sin(Mt.rotate), ie = -Mt.descent * Math.cos(Mt.rotate), Zt = Mt.width * Math.cos(Mt.rotate), me = Mt.width * Math.sin(Mt.rotate);
                        Bt.M(Mt.x + jt, Mt.y + ee).L(Mt.x + jt + Zt, Mt.y + ee + me).M(Mt.x + kt + Zt, Mt.y + ie + me).L(Mt.x + kt, Mt.y + ie);
                      }
                    }
                    return Bt;
                  }, this.drawTextInDocument = function(Bt, Nt) {
                    this.link && !Bt && !Nt && this.addLink(), this.get("text-decoration") === "underline" && this.decorate(0.05 * this._font.size, -0.075 * this._font.size, Bt, Nt), this.get("text-decoration") === "overline" && this.decorate(0.05 * this._font.size, Lt(this._font.font, this._font.size) + 0.075 * this._font.size, Bt, Nt);
                    var Mt = this.getFill(Bt, Nt), jt = this.getStroke(Bt, Nt), ee = this.get("stroke-width");
                    this._font.fauxBold && (jt ? ee += this._font.size * 0.03 : (jt = Mt, ee = this._font.size * 0.03));
                    for (var kt = this.getChildren(), ie = 0; ie < kt.length; ie++) {
                      var Zt = kt[ie];
                      switch (Zt.name) {
                        case "tspan":
                        case "textPath":
                        case "a":
                          Zt.get("display") !== "none" && Zt.drawTextInDocument(Bt, Nt);
                          break;
                        case "#text":
                        case "#cdata-section":
                          if (this.get("visibility") === "hidden")
                            continue;
                          if (Mt || jt || Bt) {
                            Mt && N(Mt), jt && ee && (M(jt), n.lineWidth(ee).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(this.get("stroke-linecap")).dash(this.get("stroke-dasharray"), {
                              phase: this.get("stroke-dashoffset")
                            })), E(this._font.font, this._font.size), x(!!Mt, !!jt);
                            for (var me = 0, Oe = Zt._pos; me < Oe.length; me++)
                              if (!Oe[me].hidden && mt(Oe[me].width, 0)) {
                                var Be = Math.cos(Oe[me].rotate), je = Math.sin(Oe[me].rotate), Je = this._font.fauxItalic ? -0.25 : 0;
                                F(Be * Oe[me].scale, je * Oe[me].scale, Be * Je - je, je * Je + Be, Oe[me].x, Oe[me].y), P(Oe[me].glyph);
                              }
                            L();
                          }
                          break;
                      }
                    }
                    this.get("text-decoration") === "line-through" && this.decorate(0.05 * this._font.size, 0.5 * (Lt(this._font.font, this._font.size) + Yt(this._font.font, this._font.size)), Bt, Nt);
                  }, this.decorate = function(Bt, Nt, Mt, jt) {
                    var ee = this.getFill(Mt, jt), kt = this.getStroke(Mt, jt);
                    ee && N(ee), kt && (M(kt), n.lineWidth(this.get("stroke-width")).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(this.get("stroke-linecap")).dash(this.get("stroke-dasharray"), {
                      phase: this.get("stroke-dashoffset")
                    }));
                    for (var ie = 0, Zt = this._pos; ie < Zt.length; ie++)
                      if (!Zt[ie].hidden && mt(Zt[ie].width, 0)) {
                        var me = (Nt + Bt / 2) * Math.sin(Zt[ie].rotate), Oe = -(Nt + Bt / 2) * Math.cos(Zt[ie].rotate), Be = (Nt - Bt / 2) * Math.sin(Zt[ie].rotate), je = -(Nt - Bt / 2) * Math.cos(Zt[ie].rotate), Je = Zt[ie].width * Math.cos(Zt[ie].rotate), nr = Zt[ie].width * Math.sin(Zt[ie].rotate);
                        new zt().M(Zt[ie].x + me, Zt[ie].y + Oe).L(Zt[ie].x + me + Je, Zt[ie].y + Oe + nr).L(Zt[ie].x + Be + Je, Zt[ie].y + je + nr).L(Zt[ie].x + Be, Zt[ie].y + je).Z().insertInDocument(), ee && kt ? n.fillAndStroke() : ee ? n.fill() : kt && n.stroke();
                      }
                  };
                }, Ne = function(Ot, re) {
                  this.name = Ot.nodeName, this.textContent = Ot.nodeValue;
                }, rn = function(Ot, re) {
                  ke.call(this, Ot, re);
                }, tr = function(Ot, re) {
                  ke.call(this, Ot, re);
                  var Bt;
                  if ((Bt = this.attr("path")) && Bt.trim() !== "") {
                    var Nt = this.getLength("pathLength", this.getViewport());
                    this.pathObject = new zt().path(Bt), this.pathLength = Nt > 0 ? Nt : this.pathObject.totalLength, this.pathScale = this.pathObject.totalLength / this.pathLength;
                  } else if ((Bt = this.getUrl("href") || this.getUrl("xlink:href")) && Bt.nodeName === "path") {
                    var Mt = new Ht(Bt, this);
                    this.pathObject = Mt.shape.clone().transform(Mt.get("transform")), this.pathLength = this.chooseValue(Mt.pathLength, this.pathObject.totalLength), this.pathScale = this.pathObject.totalLength / this.pathLength;
                  }
                }, Ze = function(Ot, re) {
                  ke.call(this, Ot, re), this.allowedChildren = ["textPath", "tspan", "#text", "#cdata-section", "a"], function(Bt) {
                    var Nt = "", Mt = Ot.textContent, jt = [], ee = [], kt, ie, Zt = 0, me = 0;
                    function Oe() {
                      if (ee.length)
                        for (var ve = ee[ee.length - 1], Re = ee[0], $e = ve.x + ve.width - Re.x, We = {
                          startltr: 0,
                          middleltr: 0.5,
                          endltr: 1,
                          startrtl: 1,
                          middlertl: 0.5,
                          endrtl: 0
                        }[kt + ie] * $e || 0, ar = 0; ar < ee.length; ar++)
                          ee[ar].x -= We;
                      ee = [];
                    }
                    function Be(ve, Re, $e) {
                      var We = ve[0], ar = ve[ve.length - 1], Ye = We.x, cr = ar.x + ar.width;
                      if ($e) {
                        var ir = Re / (cr - Ye);
                        if (ir > 0 && ir < 1 / 0)
                          for (var Ar = 0; Ar < ve.length; Ar++)
                            ve[Ar].x = Ye + ir * (ve[Ar].x - Ye), ve[Ar].scale *= ir, ve[Ar].width *= ir;
                      } else if (ve.length >= 2)
                        for (var kr = (Re - (cr - Ye)) / (ve.length - 1), Dr = 0; Dr < ve.length; Dr++)
                          ve[Dr].x += Dr * kr;
                      Zt += Re - (cr - Ye);
                    }
                    function je(ve, Re) {
                      ve._x = At(ve.getLengthList("x", ve.getVWidth()), Re ? Re._x.slice(Re._pos.length) : []), ve._y = At(ve.getLengthList("y", ve.getVHeight()), Re ? Re._y.slice(Re._pos.length) : []), ve._dx = At(ve.getLengthList("dx", ve.getVWidth()), Re ? Re._dx.slice(Re._pos.length) : []), ve._dy = At(ve.getLengthList("dy", ve.getVHeight()), Re ? Re._dy.slice(Re._pos.length) : []), ve._rot = At(ve.getNumberList("rotate"), Re ? Re._rot.slice(Re._pos.length) : []), ve._defRot = ve.chooseValue(ve._rot[ve._rot.length - 1], Re && Re._defRot, 0), ve.name === "textPath" && (ve._y = []);
                      var $e = {
                        fauxItalic: !1,
                        fauxBold: !1
                      }, We = nn(ve.get("font-family"), ve.get("font-weight") === "bold", ve.get("font-style") === "italic", $e);
                      try {
                        n.font(We);
                      } catch {
                        rr('SVGElemText: failed to open font "' + We + '" in PDFKit');
                      }
                      ve._pos = [], ve._index = 0, ve._font = {
                        font: n._font,
                        size: ve.get("font-size"),
                        fauxItalic: $e.fauxItalic,
                        fauxBold: $e.fauxBold
                      };
                      var ar = ve.getLength("textLength", ve.getVWidth(), void 0), Ye = ve.attr("lengthAdjust") === "spacingAndGlyphs", cr = ve.get("word-spacing"), ir = ve.get("letter-spacing"), Ar = ve.get("text-anchor"), kr = ve.get("direction"), Dr = Dt(ve._font.font, ve._font.size, ve.get("alignment-baseline") || ve.get("dominant-baseline"), ve.get("baseline-shift"));
                      ve.name === "textPath" && (Oe(), Zt = me = 0);
                      for (var Tr = ve.getChildren(), Or = 0; Or < Tr.length; Or++) {
                        var _r = Tr[Or];
                        switch (_r.name) {
                          case "tspan":
                          case "textPath":
                          case "a":
                            je(_r, ve);
                            break;
                          case "#text":
                          case "#cdata-section":
                            var En = _r.textContent, an = En, bn = void 0;
                            _r._font = ve._font, _r._pos = [], Mt = Mt.substring(En.length), ve.get("xml:space") === "preserve" ? an = an.replace(/[\s]/g, " ") : (an = an.replace(/[\s]+/g, " "), Nt.match(/[\s]$|^$/) && (an = an.replace(/^[\s]/, "")), Mt.match(/^[\s]*$/) && (an = an.replace(/[\s]$/, ""))), Nt += En, cr === 0 ? bn = [an] : bn = an.split(/(\s)/);
                            for (var Dn = 0; Dn < bn.length; Dn++) {
                              for (var on = ae(ve._font.font, ve._font.size, bn[Dn]), cn = 0; cn < on.length; cn++) {
                                var ln = ve._index, Ya = ve._x[ln], oa = ve._y[ln], Ka = ve._dx[ln], Ja = ve._dy[ln], Ma = ve._rot[ln], sa = !(Dn === 0 && cn === 0);
                                Ya !== void 0 && (sa = !1, Oe(), Zt = Ya), oa !== void 0 && (sa = !1, Oe(), me = oa), Ka !== void 0 && (sa = !1, Zt += Ka), Ja !== void 0 && (sa = !1, me += Ja), (Ma !== void 0 || ve._defRot !== 0) && (sa = !1);
                                var ka = {
                                  glyph: on[cn].glyph,
                                  rotate: Math.PI / 180 * ve.chooseValue(Ma, ve._defRot),
                                  x: Zt + on[cn].xOffset,
                                  y: me + Dr + on[cn].yOffset,
                                  width: on[cn].width,
                                  ascent: Lt(ve._font.font, ve._font.size),
                                  descent: Yt(ve._font.font, ve._font.size),
                                  scale: 1,
                                  hidden: !1,
                                  continuous: sa
                                };
                                ee.push(ka), _r._pos.push(ka), ve._pos.push(ka), ve._index += on[cn].unicode.length, ee.length === 1 && (kt = Ar, ie = kr), Zt += on[cn].xAdvance + ir, me += on[cn].yAdvance;
                              }
                              bn[Dn] === " " && (Zt += cr);
                            }
                            break;
                          default:
                            Mt = Mt.substring(_r.textContent.length);
                        }
                      }
                      if (ar && ve._pos.length && Be(ve._pos, ar, Ye), (ve.name === "textPath" || ve.name === "text") && Oe(), ve.name === "textPath") {
                        jt.push(ve);
                        var pa = ve.pathObject;
                        pa && (Zt = pa.endPoint[0], me = pa.endPoint[1]);
                      }
                      Re && (Re._pos = Re._pos.concat(ve._pos), Re._index += ve._index);
                    }
                    function Je(ve) {
                      var Re = ve.pathObject, $e = ve.pathLength, We = ve.pathScale;
                      if (Re)
                        for (var ar = ve.getLength("startOffset", $e, 0), Ye = 0; Ye < ve._pos.length; Ye++) {
                          var cr = ar + ve._pos[Ye].x + 0.5 * ve._pos[Ye].width;
                          if (cr > $e || cr < 0)
                            ve._pos[Ye].hidden = !0;
                          else {
                            var ir = Re.getPointAtLength(cr * We);
                            mt(We, 1) && (ve._pos[Ye].scale *= We, ve._pos[Ye].width *= We), ve._pos[Ye].x = ir[0] - 0.5 * ve._pos[Ye].width * Math.cos(ir[2]) - ve._pos[Ye].y * Math.sin(ir[2]), ve._pos[Ye].y = ir[1] - 0.5 * ve._pos[Ye].width * Math.sin(ir[2]) + ve._pos[Ye].y * Math.cos(ir[2]), ve._pos[Ye].rotate = ir[2] + ve._pos[Ye].rotate, ve._pos[Ye].continuous = !1;
                          }
                        }
                      else
                        for (var Ar = 0; Ar < ve._pos.length; Ar++)
                          ve._pos[Ar].hidden = !0;
                    }
                    je(Bt, null);
                    for (var nr = 0; nr < jt.length; nr++)
                      Je(jt[nr]);
                  }(this), this.getTransformation = function() {
                    return this.get("transform");
                  }, this.drawInDocument = function(Bt, Nt) {
                    n.save(), this.transform(), this.clip();
                    var Mt = this.mask(), jt;
                    Mt && (jt = m(Rt())), this.drawTextInDocument(Bt, Nt), jt && (w(jt), D(jt)), n.restore();
                  };
                };
                c = c || {};
                var br = c.assumePt ? 1 : 72 / 96, Ir = (c.width || n.page.width) / br, Zr = (c.height || n.page.height) / br, Cn = c.preserveAspectRatio || null, Mn = c.useCSS && typeof SVGElement < "u" && i instanceof SVGElement && typeof getComputedStyle == "function", rr = c.warningCallback, nn = c.fontCallback, Mr = c.imageCallback, $r = c.colorCallback, Wr = c.documentCallback, Hn = Math.ceil(Math.max(1, c.precision)) || 3, jn = [], Ue = {}, ze = [], Qe = [];
                if (typeof rr != "function" && (rr = function(Ot) {
                  typeof console !== void 0 && typeof console.warn == "function" && console.warn(Ot);
                }), typeof nn != "function" && (nn = function(Ot, re, Bt, Nt) {
                  if (re && Bt) {
                    if (n._registeredFonts.hasOwnProperty(Ot + "-BoldItalic"))
                      return Ot + "-BoldItalic";
                    if (n._registeredFonts.hasOwnProperty(Ot + "-Italic"))
                      return Nt.fauxBold = !0, Ot + "-Italic";
                    if (n._registeredFonts.hasOwnProperty(Ot + "-Bold"))
                      return Nt.fauxItalic = !0, Ot + "-Bold";
                    if (n._registeredFonts.hasOwnProperty(Ot))
                      return Nt.fauxBold = !0, Nt.fauxItalic = !0, Ot;
                  }
                  if (re && !Bt) {
                    if (n._registeredFonts.hasOwnProperty(Ot + "-Bold"))
                      return Ot + "-Bold";
                    if (n._registeredFonts.hasOwnProperty(Ot))
                      return Nt.fauxBold = !0, Ot;
                  }
                  if (!re && Bt) {
                    if (n._registeredFonts.hasOwnProperty(Ot + "-Italic"))
                      return Ot + "-Italic";
                    if (n._registeredFonts.hasOwnProperty(Ot))
                      return Nt.fauxItalic = !0, Ot;
                  }
                  if (!re && !Bt && n._registeredFonts.hasOwnProperty(Ot))
                    return Ot;
                  if (Ot.match(/(?:^|,)\s*serif\s*$/)) {
                    if (re && Bt)
                      return "Times-BoldItalic";
                    if (re && !Bt)
                      return "Times-Bold";
                    if (!re && Bt)
                      return "Times-Italic";
                    if (!re && !Bt)
                      return "Times-Roman";
                  } else if (Ot.match(/(?:^|,)\s*monospace\s*$/)) {
                    if (re && Bt)
                      return "Courier-BoldOblique";
                    if (re && !Bt)
                      return "Courier-Bold";
                    if (!re && Bt)
                      return "Courier-Oblique";
                    if (!re && !Bt)
                      return "Courier";
                  } else {
                    if (Ot.match(/(?:^|,)\s*sans-serif\s*$/), re && Bt)
                      return "Helvetica-BoldOblique";
                    if (re && !Bt)
                      return "Helvetica-Bold";
                    if (!re && Bt)
                      return "Helvetica-Oblique";
                    if (!re && !Bt)
                      return "Helvetica";
                  }
                }), typeof Mr != "function" && (Mr = function(Ot) {
                  return Ot.replace(/\s+/g, "");
                }), typeof $r != "function")
                  $r = null;
                else
                  for (var ur in a) {
                    var xn = $r(a[ur]);
                    a[ur][0] = xn[0], a[ur][1] = xn[1];
                  }
                if (typeof Wr != "function" && (Wr = null), typeof i == "string" && (i = ut(i)), i) {
                  for (var wn = i.getElementsByTagName("style"), Yn = 0; Yn < wn.length; Yn++)
                    Qe = Qe.concat(it(wn[Yn].textContent));
                  var va = Ae(i, null);
                  if (typeof va.drawInDocument == "function") {
                    c.useCSS && !Mn && rr("SVGtoPDF: useCSS option can only be used for SVG *elements* in compatible browsers");
                    var Kn = n._fillColor;
                    n.save().translate(f || 0, l || 0).scale(br), va.drawInDocument();
                    for (var Jn = 0; Jn < ze.length; Jn++)
                      n.page.annotations.push(ze[Jn]);
                    n.restore(), n._fillColor = Kn;
                  } else
                    rr("SVGtoPDF: this element can't be rendered directly: " + i.nodeName);
                } else
                  rr("SVGtoPDF: the input does not look like a valid SVG");
              };
              u && typeof u.exports < "u" && (u.exports = o);
            }
          ),
          /***/
          83036: (
            /***/
            function(u, d, t) {
              var o = "/", r = t(43060).Buffer;
              Object.defineProperty(d, "__esModule", {
                value: !0
              }), d.default = void 0, t(80044), t(26364), t(19701), t(10853), t(80238), t(6208), t(12938), t(56908), t(54130), t(33290), t(86632), t(61928), t(54883), t(45007), t(68995), t(4845), t(18821), t(54994), t(39275), t(55281), t(55862), t(85005), t(22321), t(73214), t(18481), t(66923), t(12798), t(18183), t(14686), t(80174), t(67838), t(75668), t(67666), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(36501), t(83382), t(33130), t(29897), t(86125), t(54902), t(35054);
              var n = v(t(20202)), i = v(t(63339)), f = v(t(35243)), l = v(t(89233)), c = t(5939), h = v(t(46982)), a = v(t(45968));
              function v(wt) {
                return wt && wt.__esModule ? wt : { default: wt };
              }
              var y = t(52773);
              function g(wt, Z) {
                if (!(wt instanceof Z))
                  throw new TypeError("Cannot call a class as a function");
              }
              function e(wt, Z) {
                for (var W = 0; W < Z.length; W++) {
                  var nt = Z[W];
                  nt.enumerable = nt.enumerable || !1, nt.configurable = !0, "value" in nt && (nt.writable = !0), Object.defineProperty(wt, nt.key, nt);
                }
              }
              function m(wt, Z, W) {
                return Z && e(wt.prototype, Z), W && e(wt, W), wt;
              }
              function w(wt, Z, W) {
                return Z in wt ? Object.defineProperty(wt, Z, {
                  value: W,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : wt[Z] = W, wt;
              }
              function D(wt, Z) {
                var W = Object.keys(wt);
                if (Object.getOwnPropertySymbols) {
                  var nt = Object.getOwnPropertySymbols(wt);
                  Z && (nt = nt.filter(function(q) {
                    return Object.getOwnPropertyDescriptor(wt, q).enumerable;
                  })), W.push.apply(W, nt);
                }
                return W;
              }
              function I(wt) {
                for (var Z = 1; Z < arguments.length; Z++) {
                  var W = arguments[Z] != null ? arguments[Z] : {};
                  Z % 2 ? D(Object(W), !0).forEach(function(nt) {
                    w(wt, nt, W[nt]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(wt, Object.getOwnPropertyDescriptors(W)) : D(Object(W)).forEach(function(nt) {
                    Object.defineProperty(wt, nt, Object.getOwnPropertyDescriptor(W, nt));
                  });
                }
                return wt;
              }
              function T(wt, Z) {
                if (typeof Z != "function" && Z !== null)
                  throw new TypeError("Super expression must either be null or a function");
                wt.prototype = Object.create(Z && Z.prototype, {
                  constructor: {
                    value: wt,
                    writable: !0,
                    configurable: !0
                  }
                }), Z && E(wt, Z);
              }
              function C(wt) {
                return C = Object.setPrototypeOf ? Object.getPrototypeOf : function(W) {
                  return W.__proto__ || Object.getPrototypeOf(W);
                }, C(wt);
              }
              function E(wt, Z) {
                return E = Object.setPrototypeOf || function(nt, q) {
                  return nt.__proto__ = q, nt;
                }, E(wt, Z);
              }
              function F() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                  })), !0;
                } catch {
                  return !1;
                }
              }
              function x(wt) {
                if (wt === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return wt;
              }
              function P(wt, Z) {
                return Z && (typeof Z == "object" || typeof Z == "function") ? Z : x(wt);
              }
              function L(wt) {
                var Z = F();
                return function() {
                  var nt = C(wt), q;
                  if (Z) {
                    var gt = C(this).constructor;
                    q = Reflect.construct(nt, arguments, gt);
                  } else
                    q = nt.apply(this, arguments);
                  return P(this, q);
                };
              }
              function N(wt, Z) {
                return ut(wt) || rt(wt, Z) || yt(wt, Z) || Ft();
              }
              function M(wt) {
                return K(wt) || J(wt) || yt(wt) || Et();
              }
              function K(wt) {
                if (Array.isArray(wt))
                  return xt(wt);
              }
              function ut(wt) {
                if (Array.isArray(wt))
                  return wt;
              }
              function J(wt) {
                if (typeof Symbol < "u" && Symbol.iterator in Object(wt))
                  return Array.from(wt);
              }
              function rt(wt, Z) {
                if (!(typeof Symbol > "u" || !(Symbol.iterator in Object(wt)))) {
                  var W = [], nt = !0, q = !1, gt = void 0;
                  try {
                    for (var St = wt[Symbol.iterator](), qt; !(nt = (qt = St.next()).done) && (W.push(qt.value), !(Z && W.length === Z)); nt = !0)
                      ;
                  } catch (ne) {
                    q = !0, gt = ne;
                  } finally {
                    try {
                      !nt && St.return != null && St.return();
                    } finally {
                      if (q)
                        throw gt;
                    }
                  }
                  return W;
                }
              }
              function yt(wt, Z) {
                if (wt) {
                  if (typeof wt == "string")
                    return xt(wt, Z);
                  var W = Object.prototype.toString.call(wt).slice(8, -1);
                  if (W === "Object" && wt.constructor && (W = wt.constructor.name), W === "Map" || W === "Set")
                    return Array.from(wt);
                  if (W === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(W))
                    return xt(wt, Z);
                }
              }
              function xt(wt, Z) {
                (Z == null || Z > wt.length) && (Z = wt.length);
                for (var W = 0, nt = new Array(Z); W < Z; W++)
                  nt[W] = wt[W];
                return nt;
              }
              function Et() {
                throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function Ft() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function Rt(wt, Z) {
                var W;
                if (typeof Symbol > "u" || wt[Symbol.iterator] == null) {
                  if (Array.isArray(wt) || (W = yt(wt)) || Z && wt && typeof wt.length == "number") {
                    W && (wt = W);
                    var nt = 0, q = function() {
                    };
                    return {
                      s: q,
                      n: function() {
                        return nt >= wt.length ? {
                          done: !0
                        } : {
                          done: !1,
                          value: wt[nt++]
                        };
                      },
                      e: function(he) {
                        throw he;
                      },
                      f: q
                    };
                  }
                  throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                }
                var gt = !0, St = !1, qt;
                return {
                  s: function() {
                    W = wt[Symbol.iterator]();
                  },
                  n: function() {
                    var he = W.next();
                    return gt = he.done, he;
                  },
                  e: function(he) {
                    St = !0, qt = he;
                  },
                  f: function() {
                    try {
                      !gt && W.return != null && W.return();
                    } finally {
                      if (St)
                        throw qt;
                    }
                  }
                };
              }
              var Ut = /* @__PURE__ */ function() {
                function wt() {
                  g(this, wt);
                }
                return m(wt, [{
                  key: "toString",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }]), wt;
              }(), Q = /* @__PURE__ */ function() {
                function wt() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                  g(this, wt), this._items = {}, this.limits = typeof Z.limits == "boolean" ? Z.limits : !0;
                }
                return m(wt, [{
                  key: "add",
                  value: function(W, nt) {
                    return this._items[W] = nt;
                  }
                }, {
                  key: "get",
                  value: function(W) {
                    return this._items[W];
                  }
                }, {
                  key: "toString",
                  value: function() {
                    var W = this, nt = Object.keys(this._items).sort(function(ye, Se) {
                      return W._compareKeys(ye, Se);
                    }), q = ["<<"];
                    if (this.limits && nt.length > 1) {
                      var gt = nt[0], St = nt[nt.length - 1];
                      q.push("  /Limits ".concat(G.convert([this._dataForKey(gt), this._dataForKey(St)])));
                    }
                    q.push("  /".concat(this._keysName(), " ["));
                    var qt = Rt(nt), ne;
                    try {
                      for (qt.s(); !(ne = qt.n()).done; ) {
                        var he = ne.value;
                        q.push("    ".concat(G.convert(this._dataForKey(he)), " ").concat(G.convert(this._items[he])));
                      }
                    } catch (ye) {
                      qt.e(ye);
                    } finally {
                      qt.f();
                    }
                    return q.push("]"), q.push(">>"), q.join(`
`);
                  }
                }, {
                  key: "_compareKeys",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "_dataForKey",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }]), wt;
              }(), pt = function(Z, W) {
                return (Array(W + 1).join("0") + Z).slice(-W);
              }, ct = /[\n\r\t\b\f()\\]/g, ot = {
                "\n": "\\n",
                "\r": "\\r",
                "	": "\\t",
                "\b": "\\b",
                "\f": "\\f",
                "\\": "\\\\",
                "(": "\\(",
                ")": "\\)"
              }, mt = function(Z) {
                var W = Z.length;
                if (W & 1)
                  throw new Error("Buffer length must be even");
                for (var nt = 0, q = W - 1; nt < q; nt += 2) {
                  var gt = Z[nt];
                  Z[nt] = Z[nt + 1], Z[nt + 1] = gt;
                }
                return Z;
              }, G = /* @__PURE__ */ function() {
                function wt() {
                  g(this, wt);
                }
                return m(wt, null, [{
                  key: "convert",
                  value: function(W) {
                    var nt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                    if (typeof W == "string")
                      return "/".concat(W);
                    if (W instanceof String) {
                      for (var q = W, gt = !1, St = 0, qt = q.length; St < qt; St++)
                        if (q.charCodeAt(St) > 127) {
                          gt = !0;
                          break;
                        }
                      var ne;
                      return gt ? ne = mt(r.from("\uFEFF".concat(q), "utf16le")) : ne = r.from(q.valueOf(), "ascii"), nt ? q = nt(ne).toString("binary") : q = ne.toString("binary"), q = q.replace(ct, function(Ge) {
                        return ot[Ge];
                      }), "(".concat(q, ")");
                    } else {
                      if (r.isBuffer(W))
                        return "<".concat(W.toString("hex"), ">");
                      if (W instanceof Ut || W instanceof Q)
                        return W.toString();
                      if (W instanceof Date) {
                        var he = "D:".concat(pt(W.getUTCFullYear(), 4)) + pt(W.getUTCMonth() + 1, 2) + pt(W.getUTCDate(), 2) + pt(W.getUTCHours(), 2) + pt(W.getUTCMinutes(), 2) + pt(W.getUTCSeconds(), 2) + "Z";
                        return nt && (he = nt(r.from(he, "ascii")).toString("binary"), he = he.replace(ct, function(Ge) {
                          return ot[Ge];
                        })), "(".concat(he, ")");
                      } else if (Array.isArray(W)) {
                        var ye = W.map(function(Ge) {
                          return wt.convert(Ge, nt);
                        }).join(" ");
                        return "[".concat(ye, "]");
                      } else if ({}.toString.call(W) === "[object Object]") {
                        var Se = ["<<"];
                        for (var Ce in W) {
                          var Ie = W[Ce];
                          Se.push("/".concat(Ce, " ").concat(wt.convert(Ie, nt)));
                        }
                        return Se.push(">>"), Se.join(`
`);
                      } else
                        return typeof W == "number" ? wt.number(W) : "".concat(W);
                    }
                  }
                }, {
                  key: "number",
                  value: function(W) {
                    if (W > -1e21 && W < 1e21)
                      return Math.round(W * 1e6) / 1e6;
                    throw new Error("unsupported number: ".concat(W));
                  }
                }]), wt;
              }(), Tt = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W(nt, q) {
                  var gt, St = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  return g(this, W), gt = Z.call(this), gt.document = nt, gt.id = q, gt.data = St, gt.gen = 0, gt.compress = gt.document.compress && !gt.data.Filter, gt.uncompressedLength = 0, gt.buffer = [], gt;
                }
                return m(W, [{
                  key: "write",
                  value: function(q) {
                    if (r.isBuffer(q) || (q = r.from(q + `
`, "binary")), this.uncompressedLength += q.length, this.data.Length == null && (this.data.Length = 0), this.buffer.push(q), this.data.Length += q.length, this.compress)
                      return this.data.Filter = "FlateDecode";
                  }
                }, {
                  key: "end",
                  value: function(q) {
                    return q && this.write(q), this.finalize();
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    this.offset = this.document._offset;
                    var q = this.document._security ? this.document._security.getEncryptFn(this.id, this.gen) : null;
                    this.buffer.length && (this.buffer = r.concat(this.buffer), this.compress && (this.buffer = i.default.deflateSync(this.buffer)), q && (this.buffer = q(this.buffer)), this.data.Length = this.buffer.length), this.document._write("".concat(this.id, " ").concat(this.gen, " obj")), this.document._write(G.convert(this.data, q)), this.buffer.length && (this.document._write("stream"), this.document._write(this.buffer), this.buffer = [], this.document._write(`
endstream`)), this.document._write("endobj"), this.document._refEnd(this);
                  }
                }, {
                  key: "toString",
                  value: function() {
                    return "".concat(this.id, " ").concat(this.gen, " R");
                  }
                }]), W;
              }(Ut), z = {
                top: 72,
                left: 72,
                bottom: 72,
                right: 72
              }, S = {
                "4A0": [4767.87, 6740.79],
                "2A0": [3370.39, 4767.87],
                A0: [2383.94, 3370.39],
                A1: [1683.78, 2383.94],
                A2: [1190.55, 1683.78],
                A3: [841.89, 1190.55],
                A4: [595.28, 841.89],
                A5: [419.53, 595.28],
                A6: [297.64, 419.53],
                A7: [209.76, 297.64],
                A8: [147.4, 209.76],
                A9: [104.88, 147.4],
                A10: [73.7, 104.88],
                B0: [2834.65, 4008.19],
                B1: [2004.09, 2834.65],
                B2: [1417.32, 2004.09],
                B3: [1000.63, 1417.32],
                B4: [708.66, 1000.63],
                B5: [498.9, 708.66],
                B6: [354.33, 498.9],
                B7: [249.45, 354.33],
                B8: [175.75, 249.45],
                B9: [124.72, 175.75],
                B10: [87.87, 124.72],
                C0: [2599.37, 3676.54],
                C1: [1836.85, 2599.37],
                C2: [1298.27, 1836.85],
                C3: [918.43, 1298.27],
                C4: [649.13, 918.43],
                C5: [459.21, 649.13],
                C6: [323.15, 459.21],
                C7: [229.61, 323.15],
                C8: [161.57, 229.61],
                C9: [113.39, 161.57],
                C10: [79.37, 113.39],
                RA0: [2437.8, 3458.27],
                RA1: [1729.13, 2437.8],
                RA2: [1218.9, 1729.13],
                RA3: [864.57, 1218.9],
                RA4: [609.45, 864.57],
                SRA0: [2551.18, 3628.35],
                SRA1: [1814.17, 2551.18],
                SRA2: [1275.59, 1814.17],
                SRA3: [907.09, 1275.59],
                SRA4: [637.8, 907.09],
                EXECUTIVE: [521.86, 756],
                FOLIO: [612, 936],
                LEGAL: [612, 1008],
                LETTER: [612, 792],
                TABLOID: [792, 1224]
              }, k = /* @__PURE__ */ function() {
                function wt(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  g(this, wt), this.document = Z, this.size = W.size || "letter", this.layout = W.layout || "portrait", typeof W.margin == "number" ? this.margins = {
                    top: W.margin,
                    left: W.margin,
                    bottom: W.margin,
                    right: W.margin
                  } : this.margins = W.margins || z;
                  var nt = Array.isArray(this.size) ? this.size : S[this.size.toUpperCase()];
                  this.width = nt[this.layout === "portrait" ? 0 : 1], this.height = nt[this.layout === "portrait" ? 1 : 0], this.content = this.document.ref(), this.resources = this.document.ref({
                    ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"]
                  }), this.dictionary = this.document.ref({
                    Type: "Page",
                    Parent: this.document._root.data.Pages,
                    MediaBox: [0, 0, this.width, this.height],
                    Contents: this.content,
                    Resources: this.resources
                  }), this.markings = [];
                }
                return m(wt, [{
                  key: "maxY",
                  value: function() {
                    return this.height - this.margins.bottom;
                  }
                }, {
                  key: "write",
                  value: function(W) {
                    return this.content.write(W);
                  }
                }, {
                  key: "end",
                  value: function() {
                    return this.dictionary.end(), this.resources.end(), this.content.end();
                  }
                }, {
                  key: "fonts",
                  get: function() {
                    var W = this.resources.data;
                    return W.Font != null ? W.Font : W.Font = {};
                  }
                }, {
                  key: "xobjects",
                  get: function() {
                    var W = this.resources.data;
                    return W.XObject != null ? W.XObject : W.XObject = {};
                  }
                }, {
                  key: "ext_gstates",
                  get: function() {
                    var W = this.resources.data;
                    return W.ExtGState != null ? W.ExtGState : W.ExtGState = {};
                  }
                }, {
                  key: "patterns",
                  get: function() {
                    var W = this.resources.data;
                    return W.Pattern != null ? W.Pattern : W.Pattern = {};
                  }
                }, {
                  key: "colorSpaces",
                  get: function() {
                    var W = this.resources.data;
                    return W.ColorSpace || (W.ColorSpace = {});
                  }
                }, {
                  key: "annotations",
                  get: function() {
                    var W = this.dictionary.data;
                    return W.Annots != null ? W.Annots : W.Annots = [];
                  }
                }, {
                  key: "structParentTreeKey",
                  get: function() {
                    var W = this.dictionary.data;
                    return W.StructParents != null ? W.StructParents : W.StructParents = this.document.createStructParentTreeNextKey();
                  }
                }]), wt;
              }(), V = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W() {
                  return g(this, W), Z.apply(this, arguments);
                }
                return m(W, [{
                  key: "_compareKeys",
                  value: function(q, gt) {
                    return q.localeCompare(gt);
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    return "Names";
                  }
                }, {
                  key: "_dataForKey",
                  value: function(q) {
                    return new String(q);
                  }
                }]), W;
              }(Q);
              function it(wt, Z) {
                if (wt < Z[0])
                  return !1;
                for (var W = 0, nt = Z.length / 2; W <= nt; ) {
                  var q = Math.floor((W + nt) / 2), gt = q * 2;
                  if (wt >= Z[gt] && wt <= Z[gt + 1])
                    return !0;
                  wt > Z[gt + 1] ? W = q + 1 : nt = q - 1;
                }
                return !1;
              }
              var tt = [545, 545, 564, 591, 686, 687, 751, 767, 848, 863, 880, 883, 886, 889, 891, 893, 895, 899, 907, 907, 909, 909, 930, 930, 975, 975, 1015, 1023, 1159, 1159, 1231, 1231, 1270, 1271, 1274, 1279, 1296, 1328, 1367, 1368, 1376, 1376, 1416, 1416, 1419, 1424, 1442, 1442, 1466, 1466, 1477, 1487, 1515, 1519, 1525, 1547, 1549, 1562, 1564, 1566, 1568, 1568, 1595, 1599, 1622, 1631, 1774, 1775, 1791, 1791, 1806, 1806, 1837, 1839, 1867, 1919, 1970, 2304, 2308, 2308, 2362, 2363, 2382, 2383, 2389, 2391, 2417, 2432, 2436, 2436, 2445, 2446, 2449, 2450, 2473, 2473, 2481, 2481, 2483, 2485, 2490, 2491, 2493, 2493, 2501, 2502, 2505, 2506, 2510, 2518, 2520, 2523, 2526, 2526, 2532, 2533, 2555, 2561, 2563, 2564, 2571, 2574, 2577, 2578, 2601, 2601, 2609, 2609, 2612, 2612, 2615, 2615, 2618, 2619, 2621, 2621, 2627, 2630, 2633, 2634, 2638, 2648, 2653, 2653, 2655, 2661, 2677, 2688, 2692, 2692, 2700, 2700, 2702, 2702, 2706, 2706, 2729, 2729, 2737, 2737, 2740, 2740, 2746, 2747, 2758, 2758, 2762, 2762, 2766, 2767, 2769, 2783, 2785, 2789, 2800, 2816, 2820, 2820, 2829, 2830, 2833, 2834, 2857, 2857, 2865, 2865, 2868, 2869, 2874, 2875, 2884, 2886, 2889, 2890, 2894, 2901, 2904, 2907, 2910, 2910, 2914, 2917, 2929, 2945, 2948, 2948, 2955, 2957, 2961, 2961, 2966, 2968, 2971, 2971, 2973, 2973, 2976, 2978, 2981, 2983, 2987, 2989, 2998, 2998, 3002, 3005, 3011, 3013, 3017, 3017, 3022, 3030, 3032, 3046, 3059, 3072, 3076, 3076, 3085, 3085, 3089, 3089, 3113, 3113, 3124, 3124, 3130, 3133, 3141, 3141, 3145, 3145, 3150, 3156, 3159, 3167, 3170, 3173, 3184, 3201, 3204, 3204, 3213, 3213, 3217, 3217, 3241, 3241, 3252, 3252, 3258, 3261, 3269, 3269, 3273, 3273, 3278, 3284, 3287, 3293, 3295, 3295, 3298, 3301, 3312, 3329, 3332, 3332, 3341, 3341, 3345, 3345, 3369, 3369, 3386, 3389, 3396, 3397, 3401, 3401, 3406, 3414, 3416, 3423, 3426, 3429, 3440, 3457, 3460, 3460, 3479, 3481, 3506, 3506, 3516, 3516, 3518, 3519, 3527, 3529, 3531, 3534, 3541, 3541, 3543, 3543, 3552, 3569, 3573, 3584, 3643, 3646, 3676, 3712, 3715, 3715, 3717, 3718, 3721, 3721, 3723, 3724, 3726, 3731, 3736, 3736, 3744, 3744, 3748, 3748, 3750, 3750, 3752, 3753, 3756, 3756, 3770, 3770, 3774, 3775, 3781, 3781, 3783, 3783, 3790, 3791, 3802, 3803, 3806, 3839, 3912, 3912, 3947, 3952, 3980, 3983, 3992, 3992, 4029, 4029, 4045, 4046, 4048, 4095, 4130, 4130, 4136, 4136, 4139, 4139, 4147, 4149, 4154, 4159, 4186, 4255, 4294, 4303, 4345, 4346, 4348, 4351, 4442, 4446, 4515, 4519, 4602, 4607, 4615, 4615, 4679, 4679, 4681, 4681, 4686, 4687, 4695, 4695, 4697, 4697, 4702, 4703, 4743, 4743, 4745, 4745, 4750, 4751, 4783, 4783, 4785, 4785, 4790, 4791, 4799, 4799, 4801, 4801, 4806, 4807, 4815, 4815, 4823, 4823, 4847, 4847, 4879, 4879, 4881, 4881, 4886, 4887, 4895, 4895, 4935, 4935, 4955, 4960, 4989, 5023, 5109, 5120, 5751, 5759, 5789, 5791, 5873, 5887, 5901, 5901, 5909, 5919, 5943, 5951, 5972, 5983, 5997, 5997, 6001, 6001, 6004, 6015, 6109, 6111, 6122, 6143, 6159, 6159, 6170, 6175, 6264, 6271, 6314, 7679, 7836, 7839, 7930, 7935, 7958, 7959, 7966, 7967, 8006, 8007, 8014, 8015, 8024, 8024, 8026, 8026, 8028, 8028, 8030, 8030, 8062, 8063, 8117, 8117, 8133, 8133, 8148, 8149, 8156, 8156, 8176, 8177, 8181, 8181, 8191, 8191, 8275, 8278, 8280, 8286, 8292, 8297, 8306, 8307, 8335, 8351, 8370, 8399, 8427, 8447, 8507, 8508, 8524, 8530, 8580, 8591, 9167, 9215, 9255, 9279, 9291, 9311, 9471, 9471, 9748, 9749, 9752, 9752, 9854, 9855, 9866, 9984, 9989, 9989, 9994, 9995, 10024, 10024, 10060, 10060, 10062, 10062, 10067, 10069, 10071, 10071, 10079, 10080, 10133, 10135, 10160, 10160, 10175, 10191, 10220, 10223, 11008, 11903, 11930, 11930, 12020, 12031, 12246, 12271, 12284, 12287, 12352, 12352, 12439, 12440, 12544, 12548, 12589, 12592, 12687, 12687, 12728, 12783, 12829, 12831, 12868, 12880, 12924, 12926, 13004, 13007, 13055, 13055, 13175, 13178, 13278, 13279, 13311, 13311, 19894, 19967, 40870, 40959, 42125, 42127, 42183, 44031, 55204, 55295, 64046, 64047, 64107, 64255, 64263, 64274, 64280, 64284, 64311, 64311, 64317, 64317, 64319, 64319, 64322, 64322, 64325, 64325, 64434, 64466, 64832, 64847, 64912, 64913, 64968, 64975, 65021, 65023, 65040, 65055, 65060, 65071, 65095, 65096, 65107, 65107, 65127, 65127, 65132, 65135, 65141, 65141, 65277, 65278, 65280, 65280, 65471, 65473, 65480, 65481, 65488, 65489, 65496, 65497, 65501, 65503, 65511, 65511, 65519, 65528, 65536, 66303, 66335, 66335, 66340, 66351, 66379, 66559, 66598, 66599, 66638, 118783, 119030, 119039, 119079, 119081, 119262, 119807, 119893, 119893, 119965, 119965, 119968, 119969, 119971, 119972, 119975, 119976, 119981, 119981, 119994, 119994, 119996, 119996, 120001, 120001, 120004, 120004, 120070, 120070, 120075, 120076, 120085, 120085, 120093, 120093, 120122, 120122, 120127, 120127, 120133, 120133, 120135, 120137, 120145, 120145, 120484, 120487, 120778, 120781, 120832, 131069, 173783, 194559, 195102, 196605, 196608, 262141, 262144, 327677, 327680, 393213, 393216, 458749, 458752, 524285, 524288, 589821, 589824, 655357, 655360, 720893, 720896, 786429, 786432, 851965, 851968, 917501, 917504, 917504, 917506, 917535, 917632, 983037], _ = function(Z) {
                return it(Z, tt);
              }, At = [173, 173, 847, 847, 6150, 6150, 6155, 6155, 6156, 6156, 6157, 6157, 8203, 8203, 8204, 8204, 8205, 8205, 8288, 8288, 65024, 65024, 65025, 65025, 65026, 65026, 65027, 65027, 65028, 65028, 65029, 65029, 65030, 65030, 65031, 65031, 65032, 65032, 65033, 65033, 65034, 65034, 65035, 65035, 65036, 65036, 65037, 65037, 65038, 65038, 65039, 65039, 65279, 65279], Lt = function(Z) {
                return it(Z, At);
              }, Yt = [
                160,
                160,
                5760,
                5760,
                8192,
                8192,
                8193,
                8193,
                8194,
                8194,
                8195,
                8195,
                8196,
                8196,
                8197,
                8197,
                8198,
                8198,
                8199,
                8199,
                8200,
                8200,
                8201,
                8201,
                8202,
                8202,
                8203,
                8203,
                8239,
                8239,
                8287,
                8287,
                12288,
                12288
                /* IDEOGRAPHIC SPACE */
              ], Gt = function(Z) {
                return it(Z, Yt);
              }, Dt = [
                /**
                 * C.2.2 Non-ASCII control characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.2
                 */
                128,
                159,
                1757,
                1757,
                1807,
                1807,
                6158,
                6158,
                8204,
                8204,
                8205,
                8205,
                8232,
                8232,
                8233,
                8233,
                8288,
                8288,
                8289,
                8289,
                8290,
                8290,
                8291,
                8291,
                8298,
                8303,
                65279,
                65279,
                65529,
                65532,
                119155,
                119162
                /* [MUSICAL CONTROL CHARACTERS] */
              ], ae = [
                /**
                 * C.4 Non-character code points
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.4
                 */
                64976,
                65007,
                65534,
                65535,
                131070,
                131071,
                196606,
                196607,
                262142,
                262143,
                327678,
                327679,
                393214,
                393215,
                458750,
                458751,
                524286,
                524287,
                589822,
                589823,
                655358,
                655359,
                720894,
                720895,
                786430,
                786431,
                851966,
                851967,
                917502,
                917503,
                983038,
                983039,
                1114110,
                1114111
                /* [NONCHARACTER CODE POINTS] */
              ], Ae = [
                /**
                 * C.2.1 ASCII control characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.1
                 */
                0,
                31,
                127,
                127,
                /**
                 * C.8 Change display properties or are deprecated
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.8
                 */
                832,
                832,
                833,
                833,
                8206,
                8206,
                8207,
                8207,
                8234,
                8234,
                8235,
                8235,
                8236,
                8236,
                8237,
                8237,
                8238,
                8238,
                8298,
                8298,
                8299,
                8299,
                8300,
                8300,
                8301,
                8301,
                8302,
                8302,
                8303,
                8303,
                /**
                 * C.7 Inappropriate for canonical representation
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.7
                 */
                12272,
                12283,
                /**
                 * C.5 Surrogate codes
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.5
                 */
                55296,
                57343,
                /**
                 * C.3 Private use
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3
                 */
                57344,
                63743,
                /**
                 * C.6 Inappropriate for plain text
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.6
                 */
                65529,
                65529,
                65530,
                65530,
                65531,
                65531,
                65532,
                65532,
                65533,
                65533,
                /**
                 * C.9 Tagging characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.9
                 */
                917505,
                917505,
                917536,
                917631,
                /**
                 * C.3 Private use
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3
                 */
                983040,
                1048573,
                1048576,
                1114109
                /* [PRIVATE USE, PLANE 16] */
              ], xe = function(Z) {
                return it(Z, Yt) || it(Z, Ae) || it(Z, Dt) || it(Z, ae);
              }, ce = [1470, 1470, 1472, 1472, 1475, 1475, 1488, 1514, 1520, 1524, 1563, 1563, 1567, 1567, 1569, 1594, 1600, 1610, 1645, 1647, 1649, 1749, 1757, 1757, 1765, 1766, 1786, 1790, 1792, 1805, 1808, 1808, 1810, 1836, 1920, 1957, 1969, 1969, 8207, 8207, 64285, 64285, 64287, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65020, 65136, 65140, 65142, 65276], we = function(Z) {
                return it(Z, ce);
              }, zt = [65, 90, 97, 122, 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 544, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736, 740, 750, 750, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 1013, 1024, 1154, 1162, 1230, 1232, 1269, 1272, 1273, 1280, 1295, 1329, 1366, 1369, 1375, 1377, 1415, 1417, 1417, 2307, 2307, 2309, 2361, 2365, 2368, 2377, 2380, 2384, 2384, 2392, 2401, 2404, 2416, 2434, 2435, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2494, 2496, 2503, 2504, 2507, 2508, 2519, 2519, 2524, 2525, 2527, 2529, 2534, 2545, 2548, 2554, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2622, 2624, 2649, 2652, 2654, 2654, 2662, 2671, 2674, 2676, 2691, 2691, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2752, 2761, 2761, 2763, 2764, 2768, 2768, 2784, 2784, 2790, 2799, 2818, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870, 2873, 2877, 2878, 2880, 2880, 2887, 2888, 2891, 2892, 2903, 2903, 2908, 2909, 2911, 2913, 2918, 2928, 2947, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3006, 3007, 3009, 3010, 3014, 3016, 3018, 3020, 3031, 3031, 3047, 3058, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3137, 3140, 3168, 3169, 3174, 3183, 3202, 3203, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3262, 3262, 3264, 3268, 3271, 3272, 3274, 3275, 3285, 3286, 3294, 3294, 3296, 3297, 3302, 3311, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3390, 3392, 3398, 3400, 3402, 3404, 3415, 3415, 3424, 3425, 3430, 3439, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3535, 3537, 3544, 3551, 3570, 3572, 3585, 3632, 3634, 3635, 3648, 3654, 3663, 3675, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3792, 3801, 3804, 3805, 3840, 3863, 3866, 3892, 3894, 3894, 3896, 3896, 3902, 3911, 3913, 3946, 3967, 3967, 3973, 3973, 3976, 3979, 4030, 4037, 4039, 4044, 4047, 4047, 4096, 4129, 4131, 4135, 4137, 4138, 4140, 4140, 4145, 4145, 4152, 4152, 4160, 4183, 4256, 4293, 4304, 4344, 4347, 4347, 4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 4961, 4988, 5024, 5108, 5121, 5750, 5761, 5786, 5792, 5872, 5888, 5900, 5902, 5905, 5920, 5937, 5941, 5942, 5952, 5969, 5984, 5996, 5998, 6e3, 6016, 6070, 6078, 6085, 6087, 6088, 6100, 6106, 6108, 6108, 6112, 6121, 6160, 6169, 6176, 6263, 6272, 6312, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8206, 8206, 8305, 8305, 8319, 8319, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8509, 8511, 8517, 8521, 8544, 8579, 9014, 9082, 9109, 9109, 9372, 9449, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12588, 12593, 12686, 12688, 12727, 12784, 12828, 12832, 12867, 12896, 12923, 12927, 12976, 12992, 13003, 13008, 13054, 13056, 13174, 13179, 13277, 13280, 13310, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 55296, 64045, 64048, 64106, 64256, 64262, 64275, 64279, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, 66304, 66334, 66336, 66339, 66352, 66378, 66560, 66597, 66600, 66637, 118784, 119029, 119040, 119078, 119082, 119142, 119146, 119154, 119171, 119172, 119180, 119209, 119214, 119261, 119808, 119892, 119894, 119964, 119966, 119967, 119970, 119970, 119973, 119974, 119977, 119980, 119982, 119993, 119995, 119995, 119997, 12e4, 120002, 120003, 120005, 120069, 120071, 120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126, 120128, 120132, 120134, 120134, 120138, 120144, 120146, 120483, 120488, 120777, 131072, 173782, 194560, 195101, 983040, 1048573, 1048576, 1114109], Qt = function(Z) {
                return it(Z, zt);
              }, le = Gt, de = Lt, be = function(Z) {
                return Z.codePointAt(0);
              }, Pe = function(Z) {
                return Z[0];
              }, Fe = function(Z) {
                return Z[Z.length - 1];
              };
              function It(wt) {
                for (var Z = [], W = wt.length, nt = 0; nt < W; nt += 1) {
                  var q = wt.charCodeAt(nt);
                  if (q >= 55296 && q <= 56319 && W > nt + 1) {
                    var gt = wt.charCodeAt(nt + 1);
                    if (gt >= 56320 && gt <= 57343) {
                      Z.push((q - 55296) * 1024 + gt - 56320 + 65536), nt += 1;
                      continue;
                    }
                  }
                  Z.push(q);
                }
                return Z;
              }
              function fe(wt) {
                var Z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                if (typeof wt != "string")
                  throw new TypeError("Expected string.");
                if (wt.length === 0)
                  return "";
                var W = It(wt).map(function(Se) {
                  return le(Se) ? 32 : Se;
                }).filter(function(Se) {
                  return !de(Se);
                }), nt = String.fromCodePoint.apply(null, W).normalize("NFKC"), q = It(nt), gt = q.some(xe);
                if (gt)
                  throw new Error("Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3");
                if (Z.allowUnassigned !== !0) {
                  var St = q.some(_);
                  if (St)
                    throw new Error("Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5");
                }
                var qt = q.some(we), ne = q.some(Qt);
                if (qt && ne)
                  throw new Error("String must not contain RandALCat and LCat at the same time, see https://tools.ietf.org/html/rfc3454#section-6");
                var he = we(be(Pe(nt))), ye = we(be(Fe(nt)));
                if (qt && !(he && ye))
                  throw new Error("Bidirectional RandALCat character must be the first and the last character of the string, see https://tools.ietf.org/html/rfc3454#section-6");
                return nt;
              }
              var st = /* @__PURE__ */ function() {
                m(wt, null, [{
                  key: "generateFileID",
                  value: function() {
                    var W = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, nt = "".concat(W.CreationDate.getTime(), `
`);
                    for (var q in W)
                      W.hasOwnProperty(q) && (nt += "".concat(q, ": ").concat(W[q].valueOf(), `
`));
                    return Ne(f.default.MD5(nt));
                  }
                }, {
                  key: "generateRandomWordArray",
                  value: function(W) {
                    return f.default.lib.WordArray.random(W);
                  }
                }, {
                  key: "create",
                  value: function(W) {
                    var nt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                    return !nt.ownerPassword && !nt.userPassword ? null : new wt(W, nt);
                  }
                }]);
                function wt(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  if (g(this, wt), !W.ownerPassword && !W.userPassword)
                    throw new Error("None of owner password and user password is defined.");
                  this.document = Z, this._setupEncryption(W);
                }
                return m(wt, [{
                  key: "_setupEncryption",
                  value: function(W) {
                    switch (W.pdfVersion) {
                      case "1.4":
                      case "1.5":
                        this.version = 2;
                        break;
                      case "1.6":
                      case "1.7":
                        this.version = 4;
                        break;
                      case "1.7ext3":
                        this.version = 5;
                        break;
                      default:
                        this.version = 1;
                        break;
                    }
                    var nt = {
                      Filter: "Standard"
                    };
                    switch (this.version) {
                      case 1:
                      case 2:
                      case 4:
                        this._setupEncryptionV1V2V4(this.version, nt, W);
                        break;
                      case 5:
                        this._setupEncryptionV5(nt, W);
                        break;
                    }
                    this.dictionary = this.document.ref(nt);
                  }
                }, {
                  key: "_setupEncryptionV1V2V4",
                  value: function(W, nt, q) {
                    var gt, St;
                    switch (W) {
                      case 1:
                        gt = 2, this.keyBits = 40, St = Y(q.permissions);
                        break;
                      case 2:
                        gt = 3, this.keyBits = 128, St = j(q.permissions);
                        break;
                      case 4:
                        gt = 4, this.keyBits = 128, St = j(q.permissions);
                        break;
                    }
                    var qt = Le(q.userPassword), ne = q.ownerPassword ? Le(q.ownerPassword) : qt, he = Wt(gt, this.keyBits, qt, ne);
                    this.encryptionKey = _t(gt, this.keyBits, this.document._id, qt, he, St);
                    var ye;
                    gt === 2 ? ye = bt(this.encryptionKey) : ye = at(this.document._id, this.encryptionKey), nt.V = W, W >= 2 && (nt.Length = this.keyBits), W === 4 && (nt.CF = {
                      StdCF: {
                        AuthEvent: "DocOpen",
                        CFM: "AESV2",
                        Length: this.keyBits / 8
                      }
                    }, nt.StmF = "StdCF", nt.StrF = "StdCF"), nt.R = gt, nt.O = Ne(he), nt.U = Ne(ye), nt.P = St;
                  }
                }, {
                  key: "_setupEncryptionV5",
                  value: function(W, nt) {
                    this.keyBits = 256;
                    var q = j(nt.permissions), gt = De(nt.userPassword), St = nt.ownerPassword ? De(nt.ownerPassword) : gt;
                    this.encryptionKey = Ht(wt.generateRandomWordArray);
                    var qt = $(gt, wt.generateRandomWordArray), ne = f.default.lib.WordArray.create(qt.words.slice(10, 12), 8), he = Jt(gt, ne, this.encryptionKey), ye = te(St, qt, wt.generateRandomWordArray), Se = f.default.lib.WordArray.create(ye.words.slice(10, 12), 8), Ce = Ct(St, Se, qt, this.encryptionKey), Ie = oe(q, this.encryptionKey, wt.generateRandomWordArray);
                    W.V = 5, W.Length = this.keyBits, W.CF = {
                      StdCF: {
                        AuthEvent: "DocOpen",
                        CFM: "AESV3",
                        Length: this.keyBits / 8
                      }
                    }, W.StmF = "StdCF", W.StrF = "StdCF", W.R = 5, W.O = Ne(ye), W.OE = Ne(Ce), W.U = Ne(qt), W.UE = Ne(he), W.P = q, W.Perms = Ne(Ie);
                  }
                }, {
                  key: "getEncryptFn",
                  value: function(W, nt) {
                    var q;
                    if (this.version < 5 && (q = this.encryptionKey.clone().concat(f.default.lib.WordArray.create([(W & 255) << 24 | (W & 65280) << 8 | W >> 8 & 65280 | nt & 255, (nt & 65280) << 16], 5))), this.version === 1 || this.version === 2) {
                      var gt = f.default.MD5(q);
                      return gt.sigBytes = Math.min(16, this.keyBits / 8 + 5), function(he) {
                        return Ne(f.default.RC4.encrypt(f.default.lib.WordArray.create(he), gt).ciphertext);
                      };
                    }
                    var St;
                    this.version === 4 ? St = f.default.MD5(q.concat(f.default.lib.WordArray.create([1933667412], 4))) : St = this.encryptionKey;
                    var qt = wt.generateRandomWordArray(16), ne = {
                      mode: f.default.mode.CBC,
                      padding: f.default.pad.Pkcs7,
                      iv: qt
                    };
                    return function(he) {
                      return Ne(qt.clone().concat(f.default.AES.encrypt(f.default.lib.WordArray.create(he), St, ne).ciphertext));
                    };
                  }
                }, {
                  key: "end",
                  value: function() {
                    this.dictionary.end();
                  }
                }]), wt;
              }();
              function Y() {
                var wt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = -64;
                return wt.printing && (Z |= 4), wt.modifying && (Z |= 8), wt.copying && (Z |= 16), wt.annotating && (Z |= 32), Z;
              }
              function j() {
                var wt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = -3904;
                return wt.printing === "lowResolution" && (Z |= 4), wt.printing === "highResolution" && (Z |= 2052), wt.modifying && (Z |= 8), wt.copying && (Z |= 16), wt.annotating && (Z |= 32), wt.fillingForms && (Z |= 256), wt.contentAccessibility && (Z |= 512), wt.documentAssembly && (Z |= 1024), Z;
              }
              function bt(wt) {
                return f.default.RC4.encrypt(Le(), wt).ciphertext;
              }
              function at(wt, Z) {
                for (var W = Z.clone(), nt = f.default.MD5(Le().concat(f.default.lib.WordArray.create(wt))), q = 0; q < 20; q++) {
                  for (var gt = Math.ceil(W.sigBytes / 4), St = 0; St < gt; St++)
                    W.words[St] = Z.words[St] ^ (q | q << 8 | q << 16 | q << 24);
                  nt = f.default.RC4.encrypt(nt, W).ciphertext;
                }
                return nt.concat(f.default.lib.WordArray.create(null, 16));
              }
              function Wt(wt, Z, W, nt) {
                for (var q = nt, gt = wt >= 3 ? 51 : 1, St = 0; St < gt; St++)
                  q = f.default.MD5(q);
                var qt = q.clone();
                qt.sigBytes = Z / 8;
                var ne = W;
                gt = wt >= 3 ? 20 : 1;
                for (var he = 0; he < gt; he++) {
                  for (var ye = Math.ceil(qt.sigBytes / 4), Se = 0; Se < ye; Se++)
                    qt.words[Se] = q.words[Se] ^ (he | he << 8 | he << 16 | he << 24);
                  ne = f.default.RC4.encrypt(ne, qt).ciphertext;
                }
                return ne;
              }
              function _t(wt, Z, W, nt, q, gt) {
                for (var St = nt.clone().concat(q).concat(f.default.lib.WordArray.create([ke(gt)], 4)).concat(f.default.lib.WordArray.create(W)), qt = wt >= 3 ? 51 : 1, ne = 0; ne < qt; ne++)
                  St = f.default.MD5(St), St.sigBytes = Z / 8;
                return St;
              }
              function $(wt, Z) {
                var W = Z(8), nt = Z(8);
                return f.default.SHA256(wt.clone().concat(W)).concat(W).concat(nt);
              }
              function Jt(wt, Z, W) {
                var nt = f.default.SHA256(wt.clone().concat(Z)), q = {
                  mode: f.default.mode.CBC,
                  padding: f.default.pad.NoPadding,
                  iv: f.default.lib.WordArray.create(null, 16)
                };
                return f.default.AES.encrypt(W, nt, q).ciphertext;
              }
              function te(wt, Z, W) {
                var nt = W(8), q = W(8);
                return f.default.SHA256(wt.clone().concat(nt).concat(Z)).concat(nt).concat(q);
              }
              function Ct(wt, Z, W, nt) {
                var q = f.default.SHA256(wt.clone().concat(Z).concat(W)), gt = {
                  mode: f.default.mode.CBC,
                  padding: f.default.pad.NoPadding,
                  iv: f.default.lib.WordArray.create(null, 16)
                };
                return f.default.AES.encrypt(nt, q, gt).ciphertext;
              }
              function Ht(wt) {
                return wt(32);
              }
              function oe(wt, Z, W) {
                var nt = f.default.lib.WordArray.create([ke(wt), 4294967295, 1415668834], 12).concat(W(4)), q = {
                  mode: f.default.mode.ECB,
                  padding: f.default.pad.NoPadding
                };
                return f.default.AES.encrypt(nt, Z, q).ciphertext;
              }
              function Le() {
                for (var wt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", Z = r.alloc(32), W = wt.length, nt = 0; nt < W && nt < 32; ) {
                  var q = wt.charCodeAt(nt);
                  if (q > 255)
                    throw new Error("Password contains one or more invalid characters.");
                  Z[nt] = q, nt++;
                }
                for (; nt < 32; )
                  Z[nt] = rn[nt - W], nt++;
                return f.default.lib.WordArray.create(Z);
              }
              function De() {
                var wt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
                wt = unescape(encodeURIComponent(fe(wt)));
                for (var Z = Math.min(127, wt.length), W = r.alloc(Z), nt = 0; nt < Z; nt++)
                  W[nt] = wt.charCodeAt(nt);
                return f.default.lib.WordArray.create(W);
              }
              function ke(wt) {
                return (wt & 255) << 24 | (wt & 65280) << 8 | wt >> 8 & 65280 | wt >> 24 & 255;
              }
              function Ne(wt) {
                for (var Z = [], W = 0; W < wt.sigBytes; W++)
                  Z.push(wt.words[Math.floor(W / 4)] >> 8 * (3 - W % 4) & 255);
                return r.from(Z);
              }
              var rn = [40, 191, 78, 94, 78, 117, 138, 65, 100, 0, 78, 86, 255, 250, 1, 8, 46, 46, 0, 182, 208, 104, 62, 128, 47, 12, 169, 254, 100, 83, 105, 122], tr = G.number, Ze = /* @__PURE__ */ function() {
                function wt(Z) {
                  g(this, wt), this.doc = Z, this.stops = [], this.embedded = !1, this.transform = [1, 0, 0, 1, 0, 0];
                }
                return m(wt, [{
                  key: "stop",
                  value: function(W, nt, q) {
                    if (q == null && (q = 1), nt = this.doc._normalizeColor(nt), this.stops.length === 0)
                      if (nt.length === 3)
                        this._colorSpace = "DeviceRGB";
                      else if (nt.length === 4)
                        this._colorSpace = "DeviceCMYK";
                      else if (nt.length === 1)
                        this._colorSpace = "DeviceGray";
                      else
                        throw new Error("Unknown color space");
                    else if (this._colorSpace === "DeviceRGB" && nt.length !== 3 || this._colorSpace === "DeviceCMYK" && nt.length !== 4 || this._colorSpace === "DeviceGray" && nt.length !== 1)
                      throw new Error("All gradient stops must use the same color space");
                    return q = Math.max(0, Math.min(1, q)), this.stops.push([W, nt, q]), this;
                  }
                }, {
                  key: "setTransform",
                  value: function(W, nt, q, gt, St, qt) {
                    return this.transform = [W, nt, q, gt, St, qt], this;
                  }
                }, {
                  key: "embed",
                  value: function(W) {
                    var nt, q = this.stops.length;
                    if (q !== 0) {
                      this.embedded = !0, this.matrix = W;
                      var gt = this.stops[q - 1];
                      gt[0] < 1 && this.stops.push([1, gt[1], gt[2]]);
                      for (var St = [], qt = [], ne = [], he = 0; he < q - 1; he++)
                        qt.push(0, 1), he + 2 !== q && St.push(this.stops[he + 1][0]), nt = this.doc.ref({
                          FunctionType: 2,
                          Domain: [0, 1],
                          C0: this.stops[he + 0][1],
                          C1: this.stops[he + 1][1],
                          N: 1
                        }), ne.push(nt), nt.end();
                      q === 1 ? nt = ne[0] : (nt = this.doc.ref({
                        FunctionType: 3,
                        // stitching function
                        Domain: [0, 1],
                        Functions: ne,
                        Bounds: St,
                        Encode: qt
                      }), nt.end()), this.id = "Sh".concat(++this.doc._gradCount);
                      var ye = this.shader(nt);
                      ye.end();
                      var Se = this.doc.ref({
                        Type: "Pattern",
                        PatternType: 2,
                        Shading: ye,
                        Matrix: this.matrix.map(tr)
                      });
                      if (Se.end(), this.stops.some(function(yr) {
                        return yr[2] < 1;
                      })) {
                        var Ce = this.opacityGradient();
                        Ce._colorSpace = "DeviceGray";
                        var Ie = Rt(this.stops), Ge;
                        try {
                          for (Ie.s(); !(Ge = Ie.n()).done; ) {
                            var Ve = Ge.value;
                            Ce.stop(Ve[0], [Ve[2]]);
                          }
                        } catch (yr) {
                          Ie.e(yr);
                        } finally {
                          Ie.f();
                        }
                        Ce = Ce.embed(this.matrix);
                        var qe = [0, 0, this.doc.page.width, this.doc.page.height], lr = this.doc.ref({
                          Type: "XObject",
                          Subtype: "Form",
                          FormType: 1,
                          BBox: qe,
                          Group: {
                            Type: "Group",
                            S: "Transparency",
                            CS: "DeviceGray"
                          },
                          Resources: {
                            ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                            Pattern: {
                              Sh1: Ce
                            }
                          }
                        });
                        lr.write("/Pattern cs /Sh1 scn"), lr.end("".concat(qe.join(" "), " re f"));
                        var Fr = this.doc.ref({
                          Type: "ExtGState",
                          SMask: {
                            Type: "Mask",
                            S: "Luminosity",
                            G: lr
                          }
                        });
                        Fr.end();
                        var qr = this.doc.ref({
                          Type: "Pattern",
                          PatternType: 1,
                          PaintType: 1,
                          TilingType: 2,
                          BBox: qe,
                          XStep: qe[2],
                          YStep: qe[3],
                          Resources: {
                            ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                            Pattern: {
                              Sh1: Se
                            },
                            ExtGState: {
                              Gs1: Fr
                            }
                          }
                        });
                        qr.write("/Gs1 gs /Pattern cs /Sh1 scn"), qr.end("".concat(qe.join(" "), " re f")), this.doc.page.patterns[this.id] = qr;
                      } else
                        this.doc.page.patterns[this.id] = Se;
                      return Se;
                    }
                  }
                }, {
                  key: "apply",
                  value: function(W) {
                    var nt = N(this.doc._ctm, 6), q = nt[0], gt = nt[1], St = nt[2], qt = nt[3], ne = nt[4], he = nt[5], ye = N(this.transform, 6), Se = ye[0], Ce = ye[1], Ie = ye[2], Ge = ye[3], Ve = ye[4], qe = ye[5], lr = [q * Se + St * Ce, gt * Se + qt * Ce, q * Ie + St * Ge, gt * Ie + qt * Ge, q * Ve + St * qe + ne, gt * Ve + qt * qe + he];
                    (!this.embedded || lr.join(" ") !== this.matrix.join(" ")) && this.embed(lr), this.doc._setColorSpace("Pattern", W);
                    var Fr = W ? "SCN" : "scn";
                    return this.doc.addContent("/".concat(this.id, " ").concat(Fr));
                  }
                }]), wt;
              }(), br = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W(nt, q, gt, St, qt) {
                  var ne;
                  return g(this, W), ne = Z.call(this, nt), ne.x1 = q, ne.y1 = gt, ne.x2 = St, ne.y2 = qt, ne;
                }
                return m(W, [{
                  key: "shader",
                  value: function(q) {
                    return this.doc.ref({
                      ShadingType: 2,
                      ColorSpace: this._colorSpace,
                      Coords: [this.x1, this.y1, this.x2, this.y2],
                      Function: q,
                      Extend: [!0, !0]
                    });
                  }
                }, {
                  key: "opacityGradient",
                  value: function() {
                    return new W(this.doc, this.x1, this.y1, this.x2, this.y2);
                  }
                }]), W;
              }(Ze), Ir = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W(nt, q, gt, St, qt, ne, he) {
                  var ye;
                  return g(this, W), ye = Z.call(this, nt), ye.doc = nt, ye.x1 = q, ye.y1 = gt, ye.r1 = St, ye.x2 = qt, ye.y2 = ne, ye.r2 = he, ye;
                }
                return m(W, [{
                  key: "shader",
                  value: function(q) {
                    return this.doc.ref({
                      ShadingType: 3,
                      ColorSpace: this._colorSpace,
                      Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],
                      Function: q,
                      Extend: [!0, !0]
                    });
                  }
                }, {
                  key: "opacityGradient",
                  value: function() {
                    return new W(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);
                  }
                }]), W;
              }(Ze), Zr = {
                PDFGradient: Ze,
                PDFLinearGradient: br,
                PDFRadialGradient: Ir
              }, Cn = ["DeviceCMYK", "DeviceRGB"], Mn = /* @__PURE__ */ function() {
                function wt(Z, W, nt, q, gt) {
                  g(this, wt), this.doc = Z, this.bBox = W, this.xStep = nt, this.yStep = q, this.stream = gt;
                }
                return m(wt, [{
                  key: "createPattern",
                  value: function() {
                    var W = this.doc.ref();
                    W.end();
                    var nt = N(this.doc._ctm, 6), q = nt[0], gt = nt[1], St = nt[2], qt = nt[3], ne = nt[4], he = nt[5], ye = 1, Se = 0, Ce = 0, Ie = 1, Ge = 0, Ve = 0, qe = [q * ye + St * Se, gt * ye + qt * Se, q * Ce + St * Ie, gt * Ce + qt * Ie, q * Ge + St * Ve + ne, gt * Ge + qt * Ve + he], lr = this.doc.ref({
                      Type: "Pattern",
                      PatternType: 1,
                      // tiling
                      PaintType: 2,
                      // 1-colored, 2-uncolored
                      TilingType: 2,
                      // 2-no distortion
                      BBox: this.bBox,
                      XStep: this.xStep,
                      YStep: this.yStep,
                      Matrix: qe.map(function(Fr) {
                        return +Fr.toFixed(5);
                      }),
                      Resources: W
                    });
                    return lr.end(this.stream), lr;
                  }
                }, {
                  key: "embedPatternColorSpaces",
                  value: function() {
                    var W = this;
                    Cn.forEach(function(nt) {
                      var q = W.getPatternColorSpaceId(nt);
                      if (!W.doc.page.colorSpaces[q]) {
                        var gt = W.doc.ref(["Pattern", nt]);
                        gt.end(), W.doc.page.colorSpaces[q] = gt;
                      }
                    });
                  }
                }, {
                  key: "getPatternColorSpaceId",
                  value: function(W) {
                    return "CsP".concat(W);
                  }
                }, {
                  key: "embed",
                  value: function() {
                    this.id || (this.doc._patternCount = this.doc._patternCount + 1, this.id = "P" + this.doc._patternCount, this.pattern = this.createPattern()), this.doc.page.patterns[this.id] || (this.doc.page.patterns[this.id] = this.pattern);
                  }
                }, {
                  key: "apply",
                  value: function(W, nt) {
                    this.embedPatternColorSpaces(), this.embed();
                    var q = this.doc._normalizeColor(nt);
                    if (!q)
                      throw Error("invalid pattern color. (value: ".concat(nt, ")"));
                    var gt = this.getPatternColorSpaceId(this.doc._getColorSpace(q));
                    this.doc._setColorSpace(gt, W);
                    var St = W ? "SCN" : "scn";
                    return this.doc.addContent("".concat(q.join(" "), " /").concat(this.id, " ").concat(St));
                  }
                }]), wt;
              }(), rr = {
                PDFTilingPattern: Mn
              }, nn = Zr.PDFGradient, Mr = Zr.PDFLinearGradient, $r = Zr.PDFRadialGradient, Wr = rr.PDFTilingPattern, Hn = {
                initColor: function() {
                  return this._opacityRegistry = {}, this._opacityCount = 0, this._patternCount = 0, this._gradCount = 0;
                },
                _normalizeColor: function(Z) {
                  if (typeof Z == "string")
                    if (Z.charAt(0) === "#") {
                      Z.length === 4 && (Z = Z.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, "#$1$1$2$2$3$3"));
                      var W = parseInt(Z.slice(1), 16);
                      Z = [W >> 16, W >> 8 & 255, W & 255];
                    } else
                      jn[Z] && (Z = jn[Z]);
                  return Array.isArray(Z) ? (Z.length === 3 ? Z = Z.map(function(nt) {
                    return nt / 255;
                  }) : Z.length === 4 && (Z = Z.map(function(nt) {
                    return nt / 100;
                  })), Z) : null;
                },
                _setColor: function(Z, W) {
                  return Z instanceof nn ? (Z.apply(W), !0) : Array.isArray(Z) && Z[0] instanceof Wr ? (Z[0].apply(W, Z[1]), !0) : this._setColorCore(Z, W);
                },
                _setColorCore: function(Z, W) {
                  if (Z = this._normalizeColor(Z), !Z)
                    return !1;
                  var nt = W ? "SCN" : "scn", q = this._getColorSpace(Z);
                  return this._setColorSpace(q, W), Z = Z.join(" "), this.addContent("".concat(Z, " ").concat(nt)), !0;
                },
                _setColorSpace: function(Z, W) {
                  var nt = W ? "CS" : "cs";
                  return this.addContent("/".concat(Z, " ").concat(nt));
                },
                _getColorSpace: function(Z) {
                  return Z.length === 4 ? "DeviceCMYK" : "DeviceRGB";
                },
                fillColor: function(Z, W) {
                  var nt = this._setColor(Z, !1);
                  return nt && this.fillOpacity(W), this._fillColor = [Z, W], this;
                },
                strokeColor: function(Z, W) {
                  var nt = this._setColor(Z, !0);
                  return nt && this.strokeOpacity(W), this;
                },
                opacity: function(Z) {
                  return this._doOpacity(Z, Z), this;
                },
                fillOpacity: function(Z) {
                  return this._doOpacity(Z, null), this;
                },
                strokeOpacity: function(Z) {
                  return this._doOpacity(null, Z), this;
                },
                _doOpacity: function(Z, W) {
                  var nt, q;
                  if (!(Z == null && W == null)) {
                    Z != null && (Z = Math.max(0, Math.min(1, Z))), W != null && (W = Math.max(0, Math.min(1, W)));
                    var gt = "".concat(Z, "_").concat(W);
                    if (this._opacityRegistry[gt]) {
                      var St = N(this._opacityRegistry[gt], 2);
                      nt = St[0], q = St[1];
                    } else {
                      nt = {
                        Type: "ExtGState"
                      }, Z != null && (nt.ca = Z), W != null && (nt.CA = W), nt = this.ref(nt), nt.end();
                      var qt = ++this._opacityCount;
                      q = "Gs".concat(qt), this._opacityRegistry[gt] = [nt, q];
                    }
                    return this.page.ext_gstates[q] = nt, this.addContent("/".concat(q, " gs"));
                  }
                },
                linearGradient: function(Z, W, nt, q) {
                  return new Mr(this, Z, W, nt, q);
                },
                radialGradient: function(Z, W, nt, q, gt, St) {
                  return new $r(this, Z, W, nt, q, gt, St);
                },
                pattern: function(Z, W, nt, q) {
                  return new Wr(this, Z, W, nt, q);
                }
              }, jn = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                grey: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
              }, Ue, ze, Qe, ur, xn, wn;
              Ue = ze = Qe = ur = xn = wn = 0;
              var Yn = {
                A: 7,
                a: 7,
                C: 6,
                c: 6,
                H: 1,
                h: 1,
                L: 2,
                l: 2,
                M: 2,
                m: 2,
                Q: 4,
                q: 4,
                S: 4,
                s: 4,
                T: 2,
                t: 2,
                V: 1,
                v: 1,
                Z: 0,
                z: 0
              }, va = function(Z) {
                var W, nt = [], q = [], gt = "", St = !1, qt = 0, ne = Rt(Z), he;
                try {
                  for (ne.s(); !(he = ne.n()).done; ) {
                    var ye = he.value;
                    if (Yn[ye] != null)
                      qt = Yn[ye], W && (gt.length > 0 && (q[q.length] = +gt), nt[nt.length] = {
                        cmd: W,
                        args: q
                      }, q = [], gt = "", St = !1), W = ye;
                    else if ([" ", ","].includes(ye) || ye === "-" && gt.length > 0 && gt[gt.length - 1] !== "e" || ye === "." && St) {
                      if (gt.length === 0)
                        continue;
                      q.length === qt ? (nt[nt.length] = {
                        cmd: W,
                        args: q
                      }, q = [+gt], W === "M" && (W = "L"), W === "m" && (W = "l")) : q[q.length] = +gt, St = ye === ".", gt = ["-", "."].includes(ye) ? ye : "";
                    } else
                      gt += ye, ye === "." && (St = !0);
                  }
                } catch (Se) {
                  ne.e(Se);
                } finally {
                  ne.f();
                }
                return gt.length > 0 && (q.length === qt ? (nt[nt.length] = {
                  cmd: W,
                  args: q
                }, q = [+gt], W === "M" && (W = "L"), W === "m" && (W = "l")) : q[q.length] = +gt), nt[nt.length] = {
                  cmd: W,
                  args: q
                }, nt;
              }, Kn = function(Z, W) {
                Ue = ze = Qe = ur = xn = wn = 0;
                for (var nt = 0; nt < Z.length; nt++) {
                  var q = Z[nt];
                  typeof Jn[q.cmd] == "function" && Jn[q.cmd](W, q.args);
                }
              }, Jn = {
                M: function(Z, W) {
                  return Ue = W[0], ze = W[1], Qe = ur = null, xn = Ue, wn = ze, Z.moveTo(Ue, ze);
                },
                m: function(Z, W) {
                  return Ue += W[0], ze += W[1], Qe = ur = null, xn = Ue, wn = ze, Z.moveTo(Ue, ze);
                },
                C: function(Z, W) {
                  return Ue = W[4], ze = W[5], Qe = W[2], ur = W[3], Z.bezierCurveTo.apply(Z, M(W));
                },
                c: function(Z, W) {
                  return Z.bezierCurveTo(W[0] + Ue, W[1] + ze, W[2] + Ue, W[3] + ze, W[4] + Ue, W[5] + ze), Qe = Ue + W[2], ur = ze + W[3], Ue += W[4], ze += W[5];
                },
                S: function(Z, W) {
                  return Qe === null && (Qe = Ue, ur = ze), Z.bezierCurveTo(Ue - (Qe - Ue), ze - (ur - ze), W[0], W[1], W[2], W[3]), Qe = W[0], ur = W[1], Ue = W[2], ze = W[3];
                },
                s: function(Z, W) {
                  return Qe === null && (Qe = Ue, ur = ze), Z.bezierCurveTo(Ue - (Qe - Ue), ze - (ur - ze), Ue + W[0], ze + W[1], Ue + W[2], ze + W[3]), Qe = Ue + W[0], ur = ze + W[1], Ue += W[2], ze += W[3];
                },
                Q: function(Z, W) {
                  return Qe = W[0], ur = W[1], Ue = W[2], ze = W[3], Z.quadraticCurveTo(W[0], W[1], Ue, ze);
                },
                q: function(Z, W) {
                  return Z.quadraticCurveTo(W[0] + Ue, W[1] + ze, W[2] + Ue, W[3] + ze), Qe = Ue + W[0], ur = ze + W[1], Ue += W[2], ze += W[3];
                },
                T: function(Z, W) {
                  return Qe === null ? (Qe = Ue, ur = ze) : (Qe = Ue - (Qe - Ue), ur = ze - (ur - ze)), Z.quadraticCurveTo(Qe, ur, W[0], W[1]), Qe = Ue - (Qe - Ue), ur = ze - (ur - ze), Ue = W[0], ze = W[1];
                },
                t: function(Z, W) {
                  return Qe === null ? (Qe = Ue, ur = ze) : (Qe = Ue - (Qe - Ue), ur = ze - (ur - ze)), Z.quadraticCurveTo(Qe, ur, Ue + W[0], ze + W[1]), Ue += W[0], ze += W[1];
                },
                A: function(Z, W) {
                  return Kt(Z, Ue, ze, W), Ue = W[5], ze = W[6];
                },
                a: function(Z, W) {
                  return W[5] += Ue, W[6] += ze, Kt(Z, Ue, ze, W), Ue = W[5], ze = W[6];
                },
                L: function(Z, W) {
                  return Ue = W[0], ze = W[1], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                l: function(Z, W) {
                  return Ue += W[0], ze += W[1], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                H: function(Z, W) {
                  return Ue = W[0], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                h: function(Z, W) {
                  return Ue += W[0], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                V: function(Z, W) {
                  return ze = W[0], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                v: function(Z, W) {
                  return ze += W[0], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                Z: function(Z) {
                  return Z.closePath(), Ue = xn, ze = wn;
                },
                z: function(Z) {
                  return Z.closePath(), Ue = xn, ze = wn;
                }
              }, Kt = function(Z, W, nt, q) {
                var gt = N(q, 7), St = gt[0], qt = gt[1], ne = gt[2], he = gt[3], ye = gt[4], Se = gt[5], Ce = gt[6], Ie = Ot(Se, Ce, St, qt, he, ye, ne, W, nt), Ge = Rt(Ie), Ve;
                try {
                  for (Ge.s(); !(Ve = Ge.n()).done; ) {
                    var qe = Ve.value, lr = re.apply(void 0, M(qe));
                    Z.bezierCurveTo.apply(Z, M(lr));
                  }
                } catch (Fr) {
                  Ge.e(Fr);
                } finally {
                  Ge.f();
                }
              }, Ot = function(Z, W, nt, q, gt, St, qt, ne, he) {
                var ye = qt * (Math.PI / 180), Se = Math.sin(ye), Ce = Math.cos(ye);
                nt = Math.abs(nt), q = Math.abs(q), Qe = Ce * (ne - Z) * 0.5 + Se * (he - W) * 0.5, ur = Ce * (he - W) * 0.5 - Se * (ne - Z) * 0.5;
                var Ie = Qe * Qe / (nt * nt) + ur * ur / (q * q);
                Ie > 1 && (Ie = Math.sqrt(Ie), nt *= Ie, q *= Ie);
                var Ge = Ce / nt, Ve = Se / nt, qe = -Se / q, lr = Ce / q, Fr = Ge * ne + Ve * he, qr = qe * ne + lr * he, yr = Ge * Z + Ve * W, Yr = qe * Z + lr * W, gn = (yr - Fr) * (yr - Fr) + (Yr - qr) * (Yr - qr), Kr = 1 / gn - 0.25;
                Kr < 0 && (Kr = 0);
                var yn = Math.sqrt(Kr);
                St === gt && (yn = -yn);
                var Tn = 0.5 * (Fr + yr) - yn * (Yr - qr), fa = 0.5 * (qr + Yr) + yn * (yr - Fr), ea = Math.atan2(qr - fa, Fr - Tn), di = Math.atan2(Yr - fa, yr - Tn), ra = di - ea;
                ra < 0 && St === 1 ? ra += 2 * Math.PI : ra > 0 && St === 0 && (ra -= 2 * Math.PI);
                for (var ga = Math.ceil(Math.abs(ra / (Math.PI * 0.5 + 1e-3))), la = [], ua = 0; ua < ga; ua++) {
                  var Qn = ea + ua * ra / ga, vi = ea + (ua + 1) * ra / ga;
                  la[ua] = [Tn, fa, Qn, vi, nt, q, Se, Ce];
                }
                return la;
              }, re = function(Z, W, nt, q, gt, St, qt, ne) {
                var he = ne * gt, ye = -qt * St, Se = qt * gt, Ce = ne * St, Ie = 0.5 * (q - nt), Ge = 8 / 3 * Math.sin(Ie * 0.5) * Math.sin(Ie * 0.5) / Math.sin(Ie), Ve = Z + Math.cos(nt) - Ge * Math.sin(nt), qe = W + Math.sin(nt) + Ge * Math.cos(nt), lr = Z + Math.cos(q), Fr = W + Math.sin(q), qr = lr + Ge * Math.sin(q), yr = Fr - Ge * Math.cos(q);
                return [he * Ve + ye * qe, Se * Ve + Ce * qe, he * qr + ye * yr, Se * qr + Ce * yr, he * lr + ye * Fr, Se * lr + Ce * Fr];
              }, Bt = /* @__PURE__ */ function() {
                function wt() {
                  g(this, wt);
                }
                return m(wt, null, [{
                  key: "apply",
                  value: function(W, nt) {
                    var q = va(nt);
                    Kn(q, W);
                  }
                }]), wt;
              }(), Nt = G.number, Mt = 4 * ((Math.sqrt(2) - 1) / 3), jt = {
                initVector: function() {
                  return this._ctm = [1, 0, 0, 1, 0, 0], this._ctmStack = [];
                },
                save: function() {
                  return this._ctmStack.push(this._ctm.slice()), this.addContent("q");
                },
                restore: function() {
                  return this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0], this.addContent("Q");
                },
                closePath: function() {
                  return this.addContent("h");
                },
                lineWidth: function(Z) {
                  return this.addContent("".concat(Nt(Z), " w"));
                },
                _CAP_STYLES: {
                  BUTT: 0,
                  ROUND: 1,
                  SQUARE: 2
                },
                lineCap: function(Z) {
                  return typeof Z == "string" && (Z = this._CAP_STYLES[Z.toUpperCase()]), this.addContent("".concat(Z, " J"));
                },
                _JOIN_STYLES: {
                  MITER: 0,
                  ROUND: 1,
                  BEVEL: 2
                },
                lineJoin: function(Z) {
                  return typeof Z == "string" && (Z = this._JOIN_STYLES[Z.toUpperCase()]), this.addContent("".concat(Z, " j"));
                },
                miterLimit: function(Z) {
                  return this.addContent("".concat(Nt(Z), " M"));
                },
                dash: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, nt = Z;
                  Array.isArray(Z) || (Z = [Z, W.space || Z]);
                  var q = Z.every(function(gt) {
                    return Number.isFinite(gt) && gt > 0;
                  });
                  if (!q)
                    throw new Error("dash(".concat(JSON.stringify(nt), ", ").concat(JSON.stringify(W), ") invalid, lengths must be numeric and greater than zero"));
                  return Z = Z.map(Nt).join(" "), this.addContent("[".concat(Z, "] ").concat(Nt(W.phase || 0), " d"));
                },
                undash: function() {
                  return this.addContent("[] 0 d");
                },
                moveTo: function(Z, W) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(W), " m"));
                },
                lineTo: function(Z, W) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(W), " l"));
                },
                bezierCurveTo: function(Z, W, nt, q, gt, St) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(W), " ").concat(Nt(nt), " ").concat(Nt(q), " ").concat(Nt(gt), " ").concat(Nt(St), " c"));
                },
                quadraticCurveTo: function(Z, W, nt, q) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(W), " ").concat(Nt(nt), " ").concat(Nt(q), " v"));
                },
                rect: function(Z, W, nt, q) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(W), " ").concat(Nt(nt), " ").concat(Nt(q), " re"));
                },
                roundedRect: function(Z, W, nt, q, gt) {
                  gt == null && (gt = 0), gt = Math.min(gt, 0.5 * nt, 0.5 * q);
                  var St = gt * (1 - Mt);
                  return this.moveTo(Z + gt, W), this.lineTo(Z + nt - gt, W), this.bezierCurveTo(Z + nt - St, W, Z + nt, W + St, Z + nt, W + gt), this.lineTo(Z + nt, W + q - gt), this.bezierCurveTo(Z + nt, W + q - St, Z + nt - St, W + q, Z + nt - gt, W + q), this.lineTo(Z + gt, W + q), this.bezierCurveTo(Z + St, W + q, Z, W + q - St, Z, W + q - gt), this.lineTo(Z, W + gt), this.bezierCurveTo(Z, W + St, Z + St, W, Z + gt, W), this.closePath();
                },
                ellipse: function(Z, W, nt, q) {
                  q == null && (q = nt), Z -= nt, W -= q;
                  var gt = nt * Mt, St = q * Mt, qt = Z + nt * 2, ne = W + q * 2, he = Z + nt, ye = W + q;
                  return this.moveTo(Z, ye), this.bezierCurveTo(Z, ye - St, he - gt, W, he, W), this.bezierCurveTo(he + gt, W, qt, ye - St, qt, ye), this.bezierCurveTo(qt, ye + St, he + gt, ne, he, ne), this.bezierCurveTo(he - gt, ne, Z, ye + St, Z, ye), this.closePath();
                },
                circle: function(Z, W, nt) {
                  return this.ellipse(Z, W, nt);
                },
                arc: function(Z, W, nt, q, gt, St) {
                  St == null && (St = !1);
                  var qt = 2 * Math.PI, ne = 0.5 * Math.PI, he = gt - q;
                  if (Math.abs(he) > qt)
                    he = qt;
                  else if (he !== 0 && St !== he < 0) {
                    var ye = St ? -1 : 1;
                    he = ye * qt + he;
                  }
                  var Se = Math.ceil(Math.abs(he) / ne), Ce = he / Se, Ie = Ce / ne * Mt * nt, Ge = q, Ve = -Math.sin(Ge) * Ie, qe = Math.cos(Ge) * Ie, lr = Z + Math.cos(Ge) * nt, Fr = W + Math.sin(Ge) * nt;
                  this.moveTo(lr, Fr);
                  for (var qr = 0; qr < Se; qr++) {
                    var yr = lr + Ve, Yr = Fr + qe;
                    Ge += Ce, lr = Z + Math.cos(Ge) * nt, Fr = W + Math.sin(Ge) * nt, Ve = -Math.sin(Ge) * Ie, qe = Math.cos(Ge) * Ie;
                    var gn = lr - Ve, Kr = Fr - qe;
                    this.bezierCurveTo(yr, Yr, gn, Kr, lr, Fr);
                  }
                  return this;
                },
                polygon: function() {
                  for (var Z = arguments.length, W = new Array(Z), nt = 0; nt < Z; nt++)
                    W[nt] = arguments[nt];
                  this.moveTo.apply(this, M(W.shift() || []));
                  for (var q = 0, gt = W; q < gt.length; q++) {
                    var St = gt[q];
                    this.lineTo.apply(this, M(St || []));
                  }
                  return this.closePath();
                },
                path: function(Z) {
                  return Bt.apply(this, Z), this;
                },
                _windingRule: function(Z) {
                  return /even-?odd/.test(Z) ? "*" : "";
                },
                fill: function(Z, W) {
                  return /(even-?odd)|(non-?zero)/.test(Z) && (W = Z, Z = null), Z && this.fillColor(Z), this.addContent("f".concat(this._windingRule(W)));
                },
                stroke: function(Z) {
                  return Z && this.strokeColor(Z), this.addContent("S");
                },
                fillAndStroke: function(Z, W, nt) {
                  W == null && (W = Z);
                  var q = /(even-?odd)|(non-?zero)/;
                  return q.test(Z) && (nt = Z, Z = null), q.test(W) && (nt = W, W = Z), Z && (this.fillColor(Z), this.strokeColor(W)), this.addContent("B".concat(this._windingRule(nt)));
                },
                clip: function(Z) {
                  return this.addContent("W".concat(this._windingRule(Z), " n"));
                },
                transform: function(Z, W, nt, q, gt, St) {
                  var qt = this._ctm, ne = N(qt, 6), he = ne[0], ye = ne[1], Se = ne[2], Ce = ne[3], Ie = ne[4], Ge = ne[5];
                  qt[0] = he * Z + Se * W, qt[1] = ye * Z + Ce * W, qt[2] = he * nt + Se * q, qt[3] = ye * nt + Ce * q, qt[4] = he * gt + Se * St + Ie, qt[5] = ye * gt + Ce * St + Ge;
                  var Ve = [Z, W, nt, q, gt, St].map(function(qe) {
                    return Nt(qe);
                  }).join(" ");
                  return this.addContent("".concat(Ve, " cm"));
                },
                translate: function(Z, W) {
                  return this.transform(1, 0, 0, 1, Z, W);
                },
                rotate: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, nt, q = Z * Math.PI / 180, gt = Math.cos(q), St = Math.sin(q), qt = nt = 0;
                  if (W.origin != null) {
                    var ne = N(W.origin, 2);
                    qt = ne[0], nt = ne[1];
                    var he = qt * gt - nt * St, ye = qt * St + nt * gt;
                    qt -= he, nt -= ye;
                  }
                  return this.transform(gt, St, -St, gt, qt, nt);
                },
                scale: function(Z, W) {
                  var nt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, q;
                  W == null && (W = Z), typeof W == "object" && (nt = W, W = Z);
                  var gt = q = 0;
                  if (nt.origin != null) {
                    var St = N(nt.origin, 2);
                    gt = St[0], q = St[1], gt -= Z * gt, q -= W * q;
                  }
                  return this.transform(Z, 0, 0, W, gt, q);
                }
              }, ee = {
                402: 131,
                8211: 150,
                8212: 151,
                8216: 145,
                8217: 146,
                8218: 130,
                8220: 147,
                8221: 148,
                8222: 132,
                8224: 134,
                8225: 135,
                8226: 149,
                8230: 133,
                8364: 128,
                8240: 137,
                8249: 139,
                8250: 155,
                710: 136,
                8482: 153,
                338: 140,
                339: 156,
                732: 152,
                352: 138,
                353: 154,
                376: 159,
                381: 142,
                382: 158
              }, kt = `.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
  
space         exclam         quotedbl       numbersign
dollar        percent        ampersand      quotesingle
parenleft     parenright     asterisk       plus
comma         hyphen         period         slash
zero          one            two            three
four          five           six            seven
eight         nine           colon          semicolon
less          equal          greater        question
  
at            A              B              C
D             E              F              G
H             I              J              K
L             M              N              O
P             Q              R              S
T             U              V              W
X             Y              Z              bracketleft
backslash     bracketright   asciicircum    underscore
  
grave         a              b              c
d             e              f              g
h             i              j              k
l             m              n              o
p             q              r              s
t             u              v              w
x             y              z              braceleft
bar           braceright     asciitilde     .notdef
  
Euro          .notdef        quotesinglbase florin
quotedblbase  ellipsis       dagger         daggerdbl
circumflex    perthousand    Scaron         guilsinglleft
OE            .notdef        Zcaron         .notdef
.notdef       quoteleft      quoteright     quotedblleft
quotedblright bullet         endash         emdash
tilde         trademark      scaron         guilsinglright
oe            .notdef        zcaron         ydieresis
  
space         exclamdown     cent           sterling
currency      yen            brokenbar      section
dieresis      copyright      ordfeminine    guillemotleft
logicalnot    hyphen         registered     macron
degree        plusminus      twosuperior    threesuperior
acute         mu             paragraph      periodcentered
cedilla       onesuperior    ordmasculine   guillemotright
onequarter    onehalf        threequarters  questiondown
  
Agrave        Aacute         Acircumflex    Atilde
Adieresis     Aring          AE             Ccedilla
Egrave        Eacute         Ecircumflex    Edieresis
Igrave        Iacute         Icircumflex    Idieresis
Eth           Ntilde         Ograve         Oacute
Ocircumflex   Otilde         Odieresis      multiply
Oslash        Ugrave         Uacute         Ucircumflex
Udieresis     Yacute         Thorn          germandbls
  
agrave        aacute         acircumflex    atilde
adieresis     aring          ae             ccedilla
egrave        eacute         ecircumflex    edieresis
igrave        iacute         icircumflex    idieresis
eth           ntilde         ograve         oacute
ocircumflex   otilde         odieresis      divide
oslash        ugrave         uacute         ucircumflex
udieresis     yacute         thorn          ydieresis`.split(/\s+/), ie = /* @__PURE__ */ function() {
                m(wt, null, [{
                  key: "open",
                  value: function(W) {
                    return new wt(y.readFileSync(W, "utf8"));
                  }
                }]);
                function wt(Z) {
                  g(this, wt), this.contents = Z, this.attributes = {}, this.glyphWidths = {}, this.boundingBoxes = {}, this.kernPairs = {}, this.parse(), this.charWidths = new Array(256);
                  for (var W = 0; W <= 255; W++)
                    this.charWidths[W] = this.glyphWidths[kt[W]];
                  this.bbox = this.attributes.FontBBox.split(/\s+/).map(function(nt) {
                    return +nt;
                  }), this.ascender = +(this.attributes.Ascender || 0), this.descender = +(this.attributes.Descender || 0), this.xHeight = +(this.attributes.XHeight || 0), this.capHeight = +(this.attributes.CapHeight || 0), this.lineGap = this.bbox[3] - this.bbox[1] - (this.ascender - this.descender);
                }
                return m(wt, [{
                  key: "parse",
                  value: function() {
                    var W = "", nt = Rt(this.contents.split(`
`)), q;
                    try {
                      for (nt.s(); !(q = nt.n()).done; ) {
                        var gt = q.value, St, qt;
                        if (St = gt.match(/^Start(\w+)/)) {
                          W = St[1];
                          continue;
                        } else if (St = gt.match(/^End(\w+)/)) {
                          W = "";
                          continue;
                        }
                        switch (W) {
                          case "FontMetrics":
                            St = gt.match(/(^\w+)\s+(.*)/);
                            var ne = St[1], he = St[2];
                            (qt = this.attributes[ne]) ? (Array.isArray(qt) || (qt = this.attributes[ne] = [qt]), qt.push(he)) : this.attributes[ne] = he;
                            break;
                          case "CharMetrics":
                            if (!/^CH?\s/.test(gt))
                              continue;
                            var ye = gt.match(/\bN\s+(\.?\w+)\s*;/)[1];
                            this.glyphWidths[ye] = +gt.match(/\bWX\s+(\d+)\s*;/)[1];
                            break;
                          case "KernPairs":
                            St = gt.match(/^KPX\s+(\.?\w+)\s+(\.?\w+)\s+(-?\d+)/), St && (this.kernPairs[St[1] + "\0" + St[2]] = parseInt(St[3]));
                            break;
                        }
                      }
                    } catch (Se) {
                      nt.e(Se);
                    } finally {
                      nt.f();
                    }
                  }
                }, {
                  key: "encodeText",
                  value: function(W) {
                    for (var nt = [], q = 0, gt = W.length; q < gt; q++) {
                      var St = W.charCodeAt(q);
                      St = ee[St] || St, nt.push(St.toString(16));
                    }
                    return nt;
                  }
                }, {
                  key: "glyphsForString",
                  value: function(W) {
                    for (var nt = [], q = 0, gt = W.length; q < gt; q++) {
                      var St = W.charCodeAt(q);
                      nt.push(this.characterToGlyph(St));
                    }
                    return nt;
                  }
                }, {
                  key: "characterToGlyph",
                  value: function(W) {
                    return kt[ee[W] || W] || ".notdef";
                  }
                }, {
                  key: "widthOfGlyph",
                  value: function(W) {
                    return this.glyphWidths[W] || 0;
                  }
                }, {
                  key: "getKernPair",
                  value: function(W, nt) {
                    return this.kernPairs[W + "\0" + nt] || 0;
                  }
                }, {
                  key: "advancesForGlyphs",
                  value: function(W) {
                    for (var nt = [], q = 0; q < W.length; q++) {
                      var gt = W[q], St = W[q + 1];
                      nt.push(this.widthOfGlyph(gt) + this.getKernPair(gt, St));
                    }
                    return nt;
                  }
                }]), wt;
              }(), Zt = /* @__PURE__ */ function() {
                function wt() {
                  g(this, wt);
                }
                return m(wt, [{
                  key: "encode",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "widthOfString",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "ref",
                  value: function() {
                    return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    if (!(this.embedded || this.dictionary == null))
                      return this.embed(), this.embedded = !0;
                  }
                }, {
                  key: "embed",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "lineHeight",
                  value: function(W, nt) {
                    nt == null && (nt = !1);
                    var q = nt ? this.lineGap : 0;
                    return (this.ascender + q - this.descender) / 1e3 * W;
                  }
                }]), wt;
              }(), me = {
                Courier: function() {
                  return y.readFileSync(o + "/data/Courier.afm", "utf8");
                },
                "Courier-Bold": function() {
                  return y.readFileSync(o + "/data/Courier-Bold.afm", "utf8");
                },
                "Courier-Oblique": function() {
                  return y.readFileSync(o + "/data/Courier-Oblique.afm", "utf8");
                },
                "Courier-BoldOblique": function() {
                  return y.readFileSync(o + "/data/Courier-BoldOblique.afm", "utf8");
                },
                Helvetica: function() {
                  return y.readFileSync(o + "/data/Helvetica.afm", "utf8");
                },
                "Helvetica-Bold": function() {
                  return y.readFileSync(o + "/data/Helvetica-Bold.afm", "utf8");
                },
                "Helvetica-Oblique": function() {
                  return y.readFileSync(o + "/data/Helvetica-Oblique.afm", "utf8");
                },
                "Helvetica-BoldOblique": function() {
                  return y.readFileSync(o + "/data/Helvetica-BoldOblique.afm", "utf8");
                },
                "Times-Roman": function() {
                  return y.readFileSync(o + "/data/Times-Roman.afm", "utf8");
                },
                "Times-Bold": function() {
                  return y.readFileSync(o + "/data/Times-Bold.afm", "utf8");
                },
                "Times-Italic": function() {
                  return y.readFileSync(o + "/data/Times-Italic.afm", "utf8");
                },
                "Times-BoldItalic": function() {
                  return y.readFileSync(o + "/data/Times-BoldItalic.afm", "utf8");
                },
                Symbol: function() {
                  return y.readFileSync(o + "/data/Symbol.afm", "utf8");
                },
                ZapfDingbats: function() {
                  return y.readFileSync(o + "/data/ZapfDingbats.afm", "utf8");
                }
              }, Oe = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W(nt, q, gt) {
                  var St;
                  g(this, W), St = Z.call(this), St.document = nt, St.name = q, St.id = gt, St.font = new ie(me[St.name]());
                  var qt = St.font;
                  return St.ascender = qt.ascender, St.descender = qt.descender, St.bbox = qt.bbox, St.lineGap = qt.lineGap, St.xHeight = qt.xHeight, St.capHeight = qt.capHeight, St;
                }
                return m(W, [{
                  key: "embed",
                  value: function() {
                    return this.dictionary.data = {
                      Type: "Font",
                      BaseFont: this.name,
                      Subtype: "Type1",
                      Encoding: "WinAnsiEncoding"
                    }, this.dictionary.end();
                  }
                }, {
                  key: "encode",
                  value: function(q) {
                    for (var gt = this.font.encodeText(q), St = this.font.glyphsForString("".concat(q)), qt = this.font.advancesForGlyphs(St), ne = [], he = 0; he < St.length; he++) {
                      var ye = St[he];
                      ne.push({
                        xAdvance: qt[he],
                        yAdvance: 0,
                        xOffset: 0,
                        yOffset: 0,
                        advanceWidth: this.font.widthOfGlyph(ye)
                      });
                    }
                    return [gt, ne];
                  }
                }, {
                  key: "widthOfString",
                  value: function(q, gt) {
                    var St = this.font.glyphsForString("".concat(q)), qt = this.font.advancesForGlyphs(St), ne = 0, he = Rt(qt), ye;
                    try {
                      for (he.s(); !(ye = he.n()).done; ) {
                        var Se = ye.value;
                        ne += Se;
                      }
                    } catch (Ie) {
                      he.e(Ie);
                    } finally {
                      he.f();
                    }
                    var Ce = gt / 1e3;
                    return ne * Ce;
                  }
                }], [{
                  key: "isStandardFont",
                  value: function(q) {
                    return q in me;
                  }
                }]), W;
              }(Zt), Be = function(Z) {
                return "0000".concat(Z.toString(16)).slice(-4);
              }, je = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W(nt, q, gt) {
                  var St;
                  return g(this, W), St = Z.call(this), St.document = nt, St.font = q, St.id = gt, St.subset = St.font.createSubset(), St.unicode = [[0]], St.widths = [St.font.getGlyph(0).advanceWidth], St.name = St.font.postscriptName, St.scale = 1e3 / St.font.unitsPerEm, St.ascender = St.font.ascent * St.scale, St.descender = St.font.descent * St.scale, St.xHeight = St.font.xHeight * St.scale, St.capHeight = St.font.capHeight * St.scale, St.lineGap = St.font.lineGap * St.scale, St.bbox = St.font.bbox, nt.options.fontLayoutCache !== !1 && (St.layoutCache = /* @__PURE__ */ Object.create(null)), St;
                }
                return m(W, [{
                  key: "layoutRun",
                  value: function(q, gt) {
                    for (var St = this.font.layout(q, gt), qt = 0; qt < St.positions.length; qt++) {
                      var ne = St.positions[qt];
                      for (var he in ne)
                        ne[he] *= this.scale;
                      ne.advanceWidth = St.glyphs[qt].advanceWidth * this.scale;
                    }
                    return St;
                  }
                }, {
                  key: "layoutCached",
                  value: function(q) {
                    if (!this.layoutCache)
                      return this.layoutRun(q);
                    var gt;
                    if (gt = this.layoutCache[q])
                      return gt;
                    var St = this.layoutRun(q);
                    return this.layoutCache[q] = St, St;
                  }
                }, {
                  key: "layout",
                  value: function(q, gt, St) {
                    if (gt)
                      return this.layoutRun(q, gt);
                    for (var qt = St ? null : [], ne = St ? null : [], he = 0, ye = 0, Se = 0; Se <= q.length; ) {
                      var Ce;
                      if (Se === q.length && ye < Se || (Ce = q.charAt(Se), [" ", "	"].includes(Ce))) {
                        var Ie = this.layoutCached(q.slice(ye, ++Se));
                        St || (qt = qt.concat(Ie.glyphs), ne = ne.concat(Ie.positions)), he += Ie.advanceWidth, ye = Se;
                      } else
                        Se++;
                    }
                    return {
                      glyphs: qt,
                      positions: ne,
                      advanceWidth: he
                    };
                  }
                }, {
                  key: "encode",
                  value: function(q, gt) {
                    for (var St = this.layout(q, gt), qt = St.glyphs, ne = St.positions, he = [], ye = 0; ye < qt.length; ye++) {
                      var Se = qt[ye], Ce = this.subset.includeGlyph(Se.id);
                      he.push("0000".concat(Ce.toString(16)).slice(-4)), this.widths[Ce] == null && (this.widths[Ce] = Se.advanceWidth * this.scale), this.unicode[Ce] == null && (this.unicode[Ce] = Se.codePoints);
                    }
                    return [he, ne];
                  }
                }, {
                  key: "widthOfString",
                  value: function(q, gt, St) {
                    var qt = this.layout(q, St, !0).advanceWidth, ne = gt / 1e3;
                    return qt * ne;
                  }
                }, {
                  key: "embed",
                  value: function() {
                    var q = this, gt = this.subset.cff != null, St = this.document.ref();
                    gt && (St.data.Subtype = "CIDFontType0C"), this.subset.encodeStream().on("data", function(lr) {
                      return St.write(lr);
                    }).on("end", function() {
                      return St.end();
                    });
                    var qt = ((this.font["OS/2"] != null ? this.font["OS/2"].sFamilyClass : void 0) || 0) >> 8, ne = 0;
                    this.font.post.isFixedPitch && (ne |= 1), 1 <= qt && qt <= 7 && (ne |= 2), ne |= 4, qt === 10 && (ne |= 8), this.font.head.macStyle.italic && (ne |= 64);
                    var he = [1, 2, 3, 4, 5, 6].map(function(lr) {
                      return String.fromCharCode((q.id.charCodeAt(lr) || 73) + 17);
                    }).join(""), ye = he + "+" + this.font.postscriptName, Se = this.font.bbox, Ce = this.document.ref({
                      Type: "FontDescriptor",
                      FontName: ye,
                      Flags: ne,
                      FontBBox: [Se.minX * this.scale, Se.minY * this.scale, Se.maxX * this.scale, Se.maxY * this.scale],
                      ItalicAngle: this.font.italicAngle,
                      Ascent: this.ascender,
                      Descent: this.descender,
                      CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,
                      XHeight: (this.font.xHeight || 0) * this.scale,
                      StemV: 0
                    });
                    if (gt ? Ce.data.FontFile3 = St : Ce.data.FontFile2 = St, this.document.subset) {
                      var Ie = r.from("FFFFFFFFC0", "hex"), Ge = this.document.ref();
                      Ge.write(Ie), Ge.end(), Ce.data.CIDSet = Ge;
                    }
                    Ce.end();
                    var Ve = {
                      Type: "Font",
                      Subtype: "CIDFontType0",
                      BaseFont: ye,
                      CIDSystemInfo: {
                        Registry: new String("Adobe"),
                        Ordering: new String("Identity"),
                        Supplement: 0
                      },
                      FontDescriptor: Ce,
                      W: [0, this.widths]
                    };
                    gt || (Ve.Subtype = "CIDFontType2", Ve.CIDToGIDMap = "Identity");
                    var qe = this.document.ref(Ve);
                    return qe.end(), this.dictionary.data = {
                      Type: "Font",
                      Subtype: "Type0",
                      BaseFont: ye,
                      Encoding: "Identity-H",
                      DescendantFonts: [qe],
                      ToUnicode: this.toUnicodeCmap()
                    }, this.dictionary.end();
                  }
                  // Maps the glyph ids encoded in the PDF back to unicode strings
                  // Because of ligature substitutions and the like, there may be one or more
                  // unicode characters represented by each glyph.
                }, {
                  key: "toUnicodeCmap",
                  value: function() {
                    var q = this.document.ref(), gt = [], St = Rt(this.unicode), qt;
                    try {
                      for (St.s(); !(qt = St.n()).done; ) {
                        var ne = qt.value, he = [], ye = Rt(ne), Se;
                        try {
                          for (ye.s(); !(Se = ye.n()).done; ) {
                            var Ce = Se.value;
                            Ce > 65535 && (Ce -= 65536, he.push(Be(Ce >>> 10 & 1023 | 55296)), Ce = 56320 | Ce & 1023), he.push(Be(Ce));
                          }
                        } catch (Ie) {
                          ye.e(Ie);
                        } finally {
                          ye.f();
                        }
                        gt.push("<".concat(he.join(" "), ">"));
                      }
                    } catch (Ie) {
                      St.e(Ie);
                    } finally {
                      St.f();
                    }
                    return q.end(`/CIDInit /ProcSet findresource begin
12 dict begin
begincmap
/CIDSystemInfo <<
  /Registry (Adobe)
  /Ordering (UCS)
  /Supplement 0
>> def
/CMapName /Adobe-Identity-UCS def
/CMapType 2 def
1 begincodespacerange
<0000><ffff>
endcodespacerange
1 beginbfrange
<0000> <`.concat(Be(gt.length - 1), "> [").concat(gt.join(" "), `]
endbfrange
endcmap
CMapName currentdict /CMap defineresource pop
end
end`)), q;
                  }
                }]), W;
              }(Zt), Je = /* @__PURE__ */ function() {
                function wt() {
                  g(this, wt);
                }
                return m(wt, null, [{
                  key: "open",
                  value: function(W, nt, q, gt) {
                    var St;
                    if (typeof nt == "string") {
                      if (Oe.isStandardFont(nt))
                        return new Oe(W, nt, gt);
                      nt = y.readFileSync(nt);
                    }
                    if (r.isBuffer(nt) ? St = l.default.create(nt, q) : nt instanceof Uint8Array ? St = l.default.create(r.from(nt), q) : nt instanceof ArrayBuffer && (St = l.default.create(r.from(new Uint8Array(nt)), q)), St == null)
                      throw new Error("Not a supported font format or standard PDF font.");
                    return new je(W, St, gt);
                  }
                }]), wt;
              }(), nr = {
                initFonts: function() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Helvetica";
                  this._fontFamilies = {}, this._fontCount = 0, this._fontSize = 12, this._font = null, this._registeredFonts = {}, Z && this.font(Z);
                },
                font: function(Z, W, nt) {
                  var q, gt;
                  if (typeof W == "number" && (nt = W, W = null), typeof Z == "string" && this._registeredFonts[Z]) {
                    q = Z;
                    var St = this._registeredFonts[Z];
                    Z = St.src, W = St.family;
                  } else
                    q = W || Z, typeof q != "string" && (q = null);
                  if (nt != null && this.fontSize(nt), gt = this._fontFamilies[q])
                    return this._font = gt, this;
                  var qt = "F".concat(++this._fontCount);
                  return this._font = Je.open(this, Z, W, qt), (gt = this._fontFamilies[this._font.name]) ? (this._font = gt, this) : (q && (this._fontFamilies[q] = this._font), this._font.name && (this._fontFamilies[this._font.name] = this._font), this);
                },
                fontSize: function(Z) {
                  return this._fontSize = Z, this;
                },
                currentLineHeight: function(Z) {
                  return Z == null && (Z = !1), this._font.lineHeight(this._fontSize, Z);
                },
                registerFont: function(Z, W, nt) {
                  return this._registeredFonts[Z] = {
                    src: W,
                    family: nt
                  }, this;
                }
              }, ve = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W(nt, q) {
                  var gt;
                  return g(this, W), gt = Z.call(this), gt.document = nt, gt.indent = q.indent || 0, gt.characterSpacing = q.characterSpacing || 0, gt.wordSpacing = q.wordSpacing === 0, gt.columns = q.columns || 1, gt.columnGap = q.columnGap != null ? q.columnGap : 18, gt.lineWidth = (q.width - gt.columnGap * (gt.columns - 1)) / gt.columns, gt.spaceLeft = gt.lineWidth, gt.startX = gt.document.x, gt.startY = gt.document.y, gt.column = 1, gt.ellipsis = q.ellipsis, gt.continuedX = 0, gt.features = q.features, q.height != null ? (gt.height = q.height, gt.maxY = gt.startY + q.height) : gt.maxY = gt.document.page.maxY(), gt.on("firstLine", function(St) {
                    var qt = gt.continuedX || gt.indent;
                    return gt.document.x += qt, gt.lineWidth -= qt, gt.once("line", function() {
                      if (gt.document.x -= qt, gt.lineWidth += qt, St.continued && !gt.continuedX && (gt.continuedX = gt.indent), !St.continued)
                        return gt.continuedX = 0;
                    });
                  }), gt.on("lastLine", function(St) {
                    var qt = St.align;
                    return qt === "justify" && (St.align = "left"), gt.lastLine = !0, gt.once("line", function() {
                      return gt.document.y += St.paragraphGap || 0, St.align = qt, gt.lastLine = !1;
                    });
                  }), gt;
                }
                return m(W, [{
                  key: "wordWidth",
                  value: function(q) {
                    return this.document.widthOfString(q, this) + this.characterSpacing + this.wordSpacing;
                  }
                }, {
                  key: "eachWord",
                  value: function(q, gt) {
                    for (var St, qt = new h.default(q), ne = null, he = /* @__PURE__ */ Object.create(null); St = qt.nextBreak(); ) {
                      var ye, Se = q.slice(ne?.position || 0, St.position), Ce = he[Se] != null ? he[Se] : he[Se] = this.wordWidth(Se);
                      if (Ce > this.lineWidth + this.continuedX)
                        for (var Ie = ne, Ge = {}; Se.length; ) {
                          var Ve, qe;
                          Ce > this.spaceLeft ? (Ve = Math.ceil(this.spaceLeft / (Ce / Se.length)), Ce = this.wordWidth(Se.slice(0, Ve)), qe = Ce <= this.spaceLeft && Ve < Se.length) : Ve = Se.length;
                          for (var lr = Ce > this.spaceLeft && Ve > 0; lr || qe; )
                            lr ? (Ce = this.wordWidth(Se.slice(0, --Ve)), lr = Ce > this.spaceLeft && Ve > 0) : (Ce = this.wordWidth(Se.slice(0, ++Ve)), lr = Ce > this.spaceLeft && Ve > 0, qe = Ce <= this.spaceLeft && Ve < Se.length);
                          if (Ve === 0 && this.spaceLeft === this.lineWidth && (Ve = 1), Ge.required = St.required || Ve < Se.length, ye = gt(Se.slice(0, Ve), Ce, Ge, Ie), Ie = {
                            required: !1
                          }, Se = Se.slice(Ve), Ce = this.wordWidth(Se), ye === !1)
                            break;
                        }
                      else
                        ye = gt(Se, Ce, St, ne);
                      if (ye === !1)
                        break;
                      ne = St;
                    }
                  }
                }, {
                  key: "wrap",
                  value: function(q, gt) {
                    var St = this;
                    gt.indent != null && (this.indent = gt.indent), gt.characterSpacing != null && (this.characterSpacing = gt.characterSpacing), gt.wordSpacing != null && (this.wordSpacing = gt.wordSpacing), gt.ellipsis != null && (this.ellipsis = gt.ellipsis);
                    var qt = this.document.y + this.document.currentLineHeight(!0);
                    (this.document.y > this.maxY || qt > this.maxY) && this.nextSection();
                    var ne = "", he = 0, ye = 0, Se = 0, Ce = this.document.y, Ie = function() {
                      return gt.textWidth = he + St.wordSpacing * (ye - 1), gt.wordCount = ye, gt.lineWidth = St.lineWidth, Ce = St.document.y, St.emit("line", ne, gt, St), Se++;
                    };
                    return this.emit("sectionStart", gt, this), this.eachWord(q, function(Ge, Ve, qe, lr) {
                      if ((lr == null || lr.required) && (St.emit("firstLine", gt, St), St.spaceLeft = St.lineWidth), Ve <= St.spaceLeft && (ne += Ge, he += Ve, ye++), qe.required || Ve > St.spaceLeft) {
                        var Fr = St.document.currentLineHeight(!0);
                        if (St.height != null && St.ellipsis && St.document.y + Fr * 2 > St.maxY && St.column >= St.columns) {
                          for (St.ellipsis === !0 && (St.ellipsis = "â¦"), ne = ne.replace(/\s+$/, ""), he = St.wordWidth(ne + St.ellipsis); ne && he > St.lineWidth; )
                            ne = ne.slice(0, -1).replace(/\s+$/, ""), he = St.wordWidth(ne + St.ellipsis);
                          he <= St.lineWidth && (ne = ne + St.ellipsis), he = St.wordWidth(ne);
                        }
                        if (qe.required && (Ve > St.spaceLeft && (Ie(), ne = Ge, he = Ve, ye = 1), St.emit("lastLine", gt, St)), Ie(), St.document.y + Fr > St.maxY) {
                          var qr = St.nextSection();
                          if (!qr)
                            return ye = 0, ne = "", !1;
                        }
                        return qe.required ? (St.spaceLeft = St.lineWidth, ne = "", he = 0, ye = 0) : (St.spaceLeft = St.lineWidth - Ve, ne = Ge, he = Ve, ye = 1);
                      } else
                        return St.spaceLeft -= Ve;
                    }), ye > 0 && (this.emit("lastLine", gt, this), Ie()), this.emit("sectionEnd", gt, this), gt.continued === !0 ? (Se > 1 && (this.continuedX = 0), this.continuedX += gt.textWidth || 0, this.document.y = Ce) : this.document.x = this.startX;
                  }
                }, {
                  key: "nextSection",
                  value: function(q) {
                    if (this.emit("sectionEnd", q, this), ++this.column > this.columns) {
                      if (this.height != null)
                        return !1;
                      if (this.document.continueOnNewPage(), this.column = 1, this.startY = this.document.page.margins.top, this.maxY = this.document.page.maxY(), this.document.x = this.startX, this.document._fillColor) {
                        var gt;
                        (gt = this.document).fillColor.apply(gt, M(this.document._fillColor));
                      }
                      this.emit("pageBreak", q, this);
                    } else
                      this.document.x += this.lineWidth + this.columnGap, this.document.y = this.startY, this.emit("columnBreak", q, this);
                    return this.emit("sectionStart", q, this), !0;
                  }
                }]), W;
              }(c.EventEmitter), Re = G.number, $e = {
                initText: function() {
                  return this._line = this._line.bind(this), this.x = 0, this.y = 0, this._lineGap = 0;
                },
                lineGap: function(Z) {
                  return this._lineGap = Z, this;
                },
                moveDown: function(Z) {
                  return Z == null && (Z = 1), this.y += this.currentLineHeight(!0) * Z + this._lineGap, this;
                },
                moveUp: function(Z) {
                  return Z == null && (Z = 1), this.y -= this.currentLineHeight(!0) * Z + this._lineGap, this;
                },
                _text: function(Z, W, nt, q, gt) {
                  var St = this;
                  q = this._initOptions(W, nt, q), Z = Z == null ? "" : "".concat(Z), q.wordSpacing && (Z = Z.replace(/\s{2,}/g, " "));
                  var qt = function() {
                    q.structParent && q.structParent.add(St.struct(q.structType || "P", [St.markStructureContent(q.structType || "P")]));
                  };
                  if (q.width) {
                    var ne = this._wrapper;
                    ne || (ne = new ve(this, q), ne.on("line", gt), ne.on("firstLine", qt)), this._wrapper = q.continued ? ne : null, this._textOptions = q.continued ? q : null, ne.wrap(Z, q);
                  } else {
                    var he = Rt(Z.split(`
`)), ye;
                    try {
                      for (he.s(); !(ye = he.n()).done; ) {
                        var Se = ye.value;
                        qt(), gt(Se, q);
                      }
                    } catch (Ce) {
                      he.e(Ce);
                    } finally {
                      he.f();
                    }
                  }
                  return this;
                },
                text: function(Z, W, nt, q) {
                  return this._text(Z, W, nt, q, this._line);
                },
                widthOfString: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  return this._font.widthOfString(Z, this._fontSize, W.features) + (W.characterSpacing || 0) * (Z.length - 1);
                },
                heightOfString: function(Z, W) {
                  var nt = this, q = this.x, gt = this.y;
                  W = this._initOptions(W), W.height = 1 / 0;
                  var St = W.lineGap || this._lineGap || 0;
                  this._text(Z, this.x, this.y, W, function() {
                    return nt.y += nt.currentLineHeight(!0) + St;
                  });
                  var qt = this.y - gt;
                  return this.x = q, this.y = gt, qt;
                },
                list: function(Z, W, nt, q, gt) {
                  var St = this;
                  q = this._initOptions(W, nt, q);
                  var qt = q.listType || "bullet", ne = Math.round(this._font.ascender / 1e3 * this._fontSize), he = ne / 2, ye = q.bulletRadius || ne / 3, Se = q.textIndent || (qt === "bullet" ? ye * 5 : ne * 2), Ce = q.bulletIndent || (qt === "bullet" ? ye * 8 : ne * 2), Ie = 1, Ge = [], Ve = [], qe = [], lr = function yr(Yr) {
                    for (var gn = 1, Kr = 0; Kr < Yr.length; Kr++) {
                      var yn = Yr[Kr];
                      Array.isArray(yn) ? (Ie++, yr(yn), Ie--) : (Ge.push(yn), Ve.push(Ie), qt !== "bullet" && qe.push(gn++));
                    }
                  };
                  lr(Z);
                  var Fr = function(Yr) {
                    switch (qt) {
                      case "numbered":
                        return "".concat(Yr, ".");
                      case "lettered":
                        var gn = String.fromCharCode((Yr - 1) % 26 + 65), Kr = Math.floor((Yr - 1) / 26 + 1), yn = Array(Kr + 1).join(gn);
                        return "".concat(yn, ".");
                    }
                  };
                  gt = new ve(this, q), gt.on("line", this._line), Ie = 1;
                  var qr = 0;
                  return gt.on("firstLine", function() {
                    var yr, Yr, gn, Kr;
                    if (q.structParent)
                      if (q.structTypes) {
                        var yn = N(q.structTypes, 3);
                        Yr = yn[0], gn = yn[1], Kr = yn[2];
                      } else
                        Yr = "LI", gn = "Lbl", Kr = "LBody";
                    Yr ? (yr = St.struct(Yr), q.structParent.add(yr)) : q.structParent && (yr = q.structParent);
                    var Tn;
                    if ((Tn = Ve[qr++]) !== Ie) {
                      var fa = Ce * (Tn - Ie);
                      St.x += fa, gt.lineWidth -= fa, Ie = Tn;
                    }
                    switch (yr && (gn || Kr) && yr.add(St.struct(gn || Kr, [St.markStructureContent(gn || Kr)])), qt) {
                      case "bullet":
                        St.circle(St.x - Se + ye, St.y + he, ye), St.fill();
                        break;
                      case "numbered":
                      case "lettered":
                        var ea = Fr(qe[qr - 1]);
                        St._fragment(ea, St.x - Se, St.y, q);
                        break;
                    }
                    yr && gn && Kr && yr.add(St.struct(Kr, [St.markStructureContent(Kr)])), yr && yr !== q.structParent && yr.end();
                  }), gt.on("sectionStart", function() {
                    var yr = Se + Ce * (Ie - 1);
                    return St.x += yr, gt.lineWidth -= yr;
                  }), gt.on("sectionEnd", function() {
                    var yr = Se + Ce * (Ie - 1);
                    return St.x -= yr, gt.lineWidth += yr;
                  }), gt.wrap(Ge.join(`
`), q), this;
                },
                _initOptions: function() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, W = arguments.length > 1 ? arguments[1] : void 0, nt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  typeof Z == "object" && (nt = Z, Z = null);
                  var q = Object.assign({}, nt);
                  if (this._textOptions)
                    for (var gt in this._textOptions) {
                      var St = this._textOptions[gt];
                      gt !== "continued" && q[gt] === void 0 && (q[gt] = St);
                    }
                  return Z != null && (this.x = Z), W != null && (this.y = W), q.lineBreak !== !1 && (q.width == null && (q.width = this.page.width - this.x - this.page.margins.right), q.width = Math.max(q.width, 0)), q.columns || (q.columns = 0), q.columnGap == null && (q.columnGap = 18), q;
                },
                _line: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, nt = arguments.length > 2 ? arguments[2] : void 0;
                  this._fragment(Z, this.x, this.y, W);
                  var q = W.lineGap || this._lineGap || 0;
                  return nt ? this.y += this.currentLineHeight(!0) + q : this.x += this.widthOfString(Z);
                },
                _fragment: function(Z, W, nt, q) {
                  var gt = this, St, qt, ne, he, ye, Se;
                  if (Z = "".concat(Z).replace(/\n/g, ""), Z.length !== 0) {
                    var Ce = q.align || "left", Ie = q.wordSpacing || 0, Ge = q.characterSpacing || 0;
                    if (q.width)
                      switch (Ce) {
                        case "right":
                          ye = this.widthOfString(Z.replace(/\s+$/, ""), q), W += q.lineWidth - ye;
                          break;
                        case "center":
                          W += q.lineWidth / 2 - q.textWidth / 2;
                          break;
                        case "justify":
                          Se = Z.trim().split(/\s+/), ye = this.widthOfString(Z.replace(/\s+/g, ""), q);
                          var Ve = this.widthOfString(" ") + Ge;
                          Ie = Math.max(0, (q.lineWidth - ye) / Math.max(1, Se.length - 1) - Ve);
                          break;
                      }
                    if (typeof q.baseline == "number")
                      St = -q.baseline;
                    else {
                      switch (q.baseline) {
                        case "svg-middle":
                          St = 0.5 * this._font.xHeight;
                          break;
                        case "middle":
                        case "svg-central":
                          St = 0.5 * (this._font.descender + this._font.ascender);
                          break;
                        case "bottom":
                        case "ideographic":
                          St = this._font.descender;
                          break;
                        case "alphabetic":
                          St = 0;
                          break;
                        case "mathematical":
                          St = 0.5 * this._font.ascender;
                          break;
                        case "hanging":
                          St = 0.8 * this._font.ascender;
                          break;
                        case "top":
                          St = this._font.ascender;
                          break;
                        default:
                          St = this._font.ascender;
                      }
                      St = St / 1e3 * this._fontSize;
                    }
                    var qe = q.textWidth + Ie * (q.wordCount - 1) + Ge * (Z.length - 1);
                    if (q.link != null && this.link(W, nt, qe, this.currentLineHeight(), q.link), q.goTo != null && this.goTo(W, nt, qe, this.currentLineHeight(), q.goTo), q.destination != null && this.addNamedDestination(q.destination, "XYZ", W, nt, null), q.underline) {
                      this.save(), q.stroke || this.strokeColor.apply(this, M(this._fillColor || []));
                      var lr = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
                      this.lineWidth(lr);
                      var Fr = nt + this.currentLineHeight() - lr;
                      this.moveTo(W, Fr), this.lineTo(W + qe, Fr), this.stroke(), this.restore();
                    }
                    if (q.strike) {
                      this.save(), q.stroke || this.strokeColor.apply(this, M(this._fillColor || []));
                      var qr = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
                      this.lineWidth(qr);
                      var yr = nt + this.currentLineHeight() / 2;
                      this.moveTo(W, yr), this.lineTo(W + qe, yr), this.stroke(), this.restore();
                    }
                    if (this.save(), q.oblique) {
                      var Yr;
                      typeof q.oblique == "number" ? Yr = -Math.tan(q.oblique * Math.PI / 180) : Yr = -0.25, this.transform(1, 0, 0, 1, W, nt), this.transform(1, 0, Yr, 1, -Yr * St, 0), this.transform(1, 0, 0, 1, -W, -nt);
                    }
                    this.transform(1, 0, 0, -1, 0, this.page.height), nt = this.page.height - nt - St, this.page.fonts[this._font.id] == null && (this.page.fonts[this._font.id] = this._font.ref()), this.addContent("BT"), this.addContent("1 0 0 1 ".concat(Re(W), " ").concat(Re(nt), " Tm")), this.addContent("/".concat(this._font.id, " ").concat(Re(this._fontSize), " Tf"));
                    var gn = q.fill && q.stroke ? 2 : q.stroke ? 1 : 0;
                    if (gn && this.addContent("".concat(gn, " Tr")), Ge && this.addContent("".concat(Re(Ge), " Tc")), Ie) {
                      Se = Z.trim().split(/\s+/), Ie += this.widthOfString(" ") + Ge, Ie *= 1e3 / this._fontSize, qt = [], he = [];
                      var Kr = Rt(Se), yn;
                      try {
                        for (Kr.s(); !(yn = Kr.n()).done; ) {
                          var Tn = yn.value, fa = this._font.encode(Tn, q.features), ea = N(fa, 2), di = ea[0], ra = ea[1];
                          qt = qt.concat(di), he = he.concat(ra);
                          var ga = {}, la = he[he.length - 1];
                          for (var ua in la) {
                            var Qn = la[ua];
                            ga[ua] = Qn;
                          }
                          ga.xAdvance += Ie, he[he.length - 1] = ga;
                        }
                      } catch (bi) {
                        Kr.e(bi);
                      } finally {
                        Kr.f();
                      }
                    } else {
                      var vi = this._font.encode(Z, q.features), pi = N(vi, 2);
                      qt = pi[0], he = pi[1];
                    }
                    var gi = this._fontSize / 1e3, Qa = [], yi = 0, mi = !1, Zi = function(ya) {
                      if (yi < ya) {
                        var Xo = qt.slice(yi, ya).join(""), Zo = he[ya - 1].xAdvance - he[ya - 1].advanceWidth;
                        Qa.push("<".concat(Xo, "> ").concat(Re(-Zo)));
                      }
                      return yi = ya;
                    }, xi = function(ya) {
                      if (Zi(ya), Qa.length > 0)
                        return gt.addContent("[".concat(Qa.join(" "), "] TJ")), Qa.length = 0;
                    };
                    for (ne = 0; ne < he.length; ne++) {
                      var na = he[ne];
                      na.xOffset || na.yOffset ? (xi(ne), this.addContent("1 0 0 1 ".concat(Re(W + na.xOffset * gi), " ").concat(Re(nt + na.yOffset * gi), " Tm")), xi(ne + 1), mi = !0) : (mi && (this.addContent("1 0 0 1 ".concat(Re(W), " ").concat(Re(nt), " Tm")), mi = !1), na.xAdvance - na.advanceWidth !== 0 && Zi(ne + 1)), W += na.xAdvance * gi;
                    }
                    return xi(ne), this.addContent("ET"), this.restore();
                  }
                }
              }, We = [65472, 65473, 65474, 65475, 65477, 65478, 65479, 65480, 65481, 65482, 65483, 65484, 65485, 65486, 65487], ar = {
                1: "DeviceGray",
                3: "DeviceRGB",
                4: "DeviceCMYK"
              }, Ye = /* @__PURE__ */ function() {
                function wt(Z, W) {
                  g(this, wt);
                  var nt;
                  if (this.data = Z, this.label = W, this.data.readUInt16BE(0) !== 65496)
                    throw "SOI not found in JPEG";
                  for (var q = 2; q < this.data.length && (nt = this.data.readUInt16BE(q), q += 2, !We.includes(nt)); )
                    q += this.data.readUInt16BE(q);
                  if (!We.includes(nt))
                    throw "Invalid JPEG.";
                  q += 2, this.bits = this.data[q++], this.height = this.data.readUInt16BE(q), q += 2, this.width = this.data.readUInt16BE(q), q += 2;
                  var gt = this.data[q++];
                  this.colorSpace = ar[gt], this.obj = null;
                }
                return m(wt, [{
                  key: "embed",
                  value: function(W) {
                    if (!this.obj)
                      return this.obj = W.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        BitsPerComponent: this.bits,
                        Width: this.width,
                        Height: this.height,
                        ColorSpace: this.colorSpace,
                        Filter: "DCTDecode"
                      }), this.colorSpace === "DeviceCMYK" && (this.obj.data.Decode = [1, 0, 1, 0, 1, 0, 1, 0]), this.obj.end(this.data), this.data = null;
                  }
                }]), wt;
              }(), cr = /* @__PURE__ */ function() {
                function wt(Z, W) {
                  g(this, wt), this.label = W, this.image = new a.default(Z), this.width = this.image.width, this.height = this.image.height, this.imgData = this.image.imgData, this.obj = null;
                }
                return m(wt, [{
                  key: "embed",
                  value: function(W) {
                    var nt = !1;
                    if (this.document = W, !this.obj) {
                      var q = this.image.hasAlphaChannel, gt = this.image.interlaceMethod === 1;
                      if (this.obj = this.document.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        BitsPerComponent: q ? 8 : this.image.bits,
                        Width: this.width,
                        Height: this.height,
                        Filter: "FlateDecode"
                      }), !q) {
                        var St = this.document.ref({
                          Predictor: gt ? 1 : 15,
                          Colors: this.image.colors,
                          BitsPerComponent: this.image.bits,
                          Columns: this.width
                        });
                        this.obj.data.DecodeParms = St, St.end();
                      }
                      if (this.image.palette.length === 0)
                        this.obj.data.ColorSpace = this.image.colorSpace;
                      else {
                        var qt = this.document.ref();
                        qt.end(r.from(this.image.palette)), this.obj.data.ColorSpace = ["Indexed", "DeviceRGB", this.image.palette.length / 3 - 1, qt];
                      }
                      if (this.image.transparency.grayscale != null) {
                        var ne = this.image.transparency.grayscale;
                        this.obj.data.Mask = [ne, ne];
                      } else if (this.image.transparency.rgb) {
                        var he = this.image.transparency.rgb, ye = [], Se = Rt(he), Ce;
                        try {
                          for (Se.s(); !(Ce = Se.n()).done; ) {
                            var Ie = Ce.value;
                            ye.push(Ie, Ie);
                          }
                        } catch (Ge) {
                          Se.e(Ge);
                        } finally {
                          Se.f();
                        }
                        this.obj.data.Mask = ye;
                      } else {
                        if (this.image.transparency.indexed)
                          return nt = !0, this.loadIndexedAlphaChannel();
                        if (q)
                          return nt = !0, this.splitAlphaChannel();
                      }
                      if (gt && !nt)
                        return this.decodeData();
                      this.finalize();
                    }
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    if (this.alphaChannel) {
                      var W = this.document.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        Height: this.height,
                        Width: this.width,
                        BitsPerComponent: 8,
                        Filter: "FlateDecode",
                        ColorSpace: "DeviceGray",
                        Decode: [0, 1]
                      });
                      W.end(this.alphaChannel), this.obj.data.SMask = W;
                    }
                    return this.obj.end(this.imgData), this.image = null, this.imgData = null;
                  }
                }, {
                  key: "splitAlphaChannel",
                  value: function() {
                    var W = this;
                    return this.image.decodePixels(function(nt) {
                      for (var q, gt, St = W.image.colors, qt = W.width * W.height, ne = r.alloc(qt * St), he = r.alloc(qt), ye = gt = q = 0, Se = nt.length, Ce = W.image.bits === 16 ? 1 : 0; ye < Se; ) {
                        for (var Ie = 0; Ie < St; Ie++)
                          ne[gt++] = nt[ye++], ye += Ce;
                        he[q++] = nt[ye++], ye += Ce;
                      }
                      return W.imgData = i.default.deflateSync(ne), W.alphaChannel = i.default.deflateSync(he), W.finalize();
                    });
                  }
                }, {
                  key: "loadIndexedAlphaChannel",
                  value: function() {
                    var W = this, nt = this.image.transparency.indexed;
                    return this.image.decodePixels(function(q) {
                      for (var gt = r.alloc(W.width * W.height), St = 0, qt = 0, ne = q.length; qt < ne; qt++)
                        gt[St++] = nt[q[qt]];
                      return W.alphaChannel = i.default.deflateSync(gt), W.finalize();
                    });
                  }
                }, {
                  key: "decodeData",
                  value: function() {
                    var W = this;
                    this.image.decodePixels(function(nt) {
                      W.imgData = i.default.deflateSync(nt), W.finalize();
                    });
                  }
                }]), wt;
              }(), ir = /* @__PURE__ */ function() {
                function wt() {
                  g(this, wt);
                }
                return m(wt, null, [{
                  key: "open",
                  value: function(W, nt) {
                    var q;
                    if (r.isBuffer(W))
                      q = W;
                    else if (W instanceof ArrayBuffer)
                      q = r.from(new Uint8Array(W));
                    else {
                      var gt;
                      if (gt = /^data:.+;base64,(.*)$/.exec(W))
                        q = r.from(gt[1], "base64");
                      else if (q = y.readFileSync(W), !q)
                        return;
                    }
                    if (q[0] === 255 && q[1] === 216)
                      return new Ye(q, nt);
                    if (q[0] === 137 && q.toString("ascii", 1, 4) === "PNG")
                      return new cr(q, nt);
                    throw new Error("Unknown image format.");
                  }
                }]), wt;
              }(), Ar = {
                initImages: function() {
                  return this._imageRegistry = {}, this._imageCount = 0;
                },
                image: function(Z, W, nt) {
                  var q = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, gt, St, qt, ne, he, ye, Se;
                  typeof W == "object" && (q = W, W = null), W = (ye = W ?? q.x) != null ? ye : this.x, nt = (Se = nt ?? q.y) != null ? Se : this.y, typeof Z == "string" && (ne = this._imageRegistry[Z]), ne || (Z.width && Z.height ? ne = Z : ne = this.openImage(Z)), ne.obj || ne.embed(this), this.page.xobjects[ne.label] == null && (this.page.xobjects[ne.label] = ne.obj);
                  var Ce = q.width || ne.width, Ie = q.height || ne.height;
                  if (q.width && !q.height) {
                    var Ge = Ce / ne.width;
                    Ce = ne.width * Ge, Ie = ne.height * Ge;
                  } else if (q.height && !q.width) {
                    var Ve = Ie / ne.height;
                    Ce = ne.width * Ve, Ie = ne.height * Ve;
                  } else if (q.scale)
                    Ce = ne.width * q.scale, Ie = ne.height * q.scale;
                  else if (q.fit) {
                    var qe = N(q.fit, 2);
                    qt = qe[0], gt = qe[1], St = qt / gt, he = ne.width / ne.height, he > St ? (Ce = qt, Ie = qt / he) : (Ie = gt, Ce = gt * he);
                  } else if (q.cover) {
                    var lr = N(q.cover, 2);
                    qt = lr[0], gt = lr[1], St = qt / gt, he = ne.width / ne.height, he > St ? (Ie = gt, Ce = gt * he) : (Ce = qt, Ie = qt / he);
                  }
                  return (q.fit || q.cover) && (q.align === "center" ? W = W + qt / 2 - Ce / 2 : q.align === "right" && (W = W + qt - Ce), q.valign === "center" ? nt = nt + gt / 2 - Ie / 2 : q.valign === "bottom" && (nt = nt + gt - Ie)), q.link != null && this.link(W, nt, Ce, Ie, q.link), q.goTo != null && this.goTo(W, nt, Ce, Ie, q.goTo), q.destination != null && this.addNamedDestination(q.destination, "XYZ", W, nt, null), this.y === nt && (this.y += Ie), this.save(), this.transform(Ce, 0, 0, -Ie, W, nt + Ie), this.addContent("/".concat(ne.label, " Do")), this.restore(), this;
                },
                openImage: function(Z) {
                  var W;
                  return typeof Z == "string" && (W = this._imageRegistry[Z]), W || (W = ir.open(Z, "I".concat(++this._imageCount)), typeof Z == "string" && (this._imageRegistry[Z] = W)), W;
                }
              }, kr = {
                annotate: function(Z, W, nt, q, gt) {
                  gt.Type = "Annot", gt.Rect = this._convertRect(Z, W, nt, q), gt.Border = [0, 0, 0], gt.Subtype === "Link" && typeof gt.F > "u" && (gt.F = 4), gt.Subtype !== "Link" && gt.C == null && (gt.C = this._normalizeColor(gt.color || [0, 0, 0])), delete gt.color, typeof gt.Dest == "string" && (gt.Dest = new String(gt.Dest));
                  for (var St in gt) {
                    var qt = gt[St];
                    gt[St[0].toUpperCase() + St.slice(1)] = qt;
                  }
                  var ne = this.ref(gt);
                  return this.page.annotations.push(ne), ne.end(), this;
                },
                note: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return St.Subtype = "Text", St.Contents = new String(gt), St.Name = "Comment", St.color == null && (St.color = [243, 223, 92]), this.annotate(Z, W, nt, q, St);
                },
                goTo: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return St.Subtype = "Link", St.A = this.ref({
                    S: "GoTo",
                    D: new String(gt)
                  }), St.A.end(), this.annotate(Z, W, nt, q, St);
                },
                link: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  if (St.Subtype = "Link", typeof gt == "number") {
                    var qt = this._root.data.Pages.data;
                    if (gt >= 0 && gt < qt.Kids.length)
                      St.A = this.ref({
                        S: "GoTo",
                        D: [qt.Kids[gt], "XYZ", null, null, null]
                      }), St.A.end();
                    else
                      throw new Error("The document has no page ".concat(gt));
                  } else
                    St.A = this.ref({
                      S: "URI",
                      URI: new String(gt)
                    }), St.A.end();
                  return this.annotate(Z, W, nt, q, St);
                },
                _markup: function(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, St = this._convertRect(Z, W, nt, q), qt = N(St, 4), ne = qt[0], he = qt[1], ye = qt[2], Se = qt[3];
                  return gt.QuadPoints = [ne, Se, ye, Se, ne, he, ye, he], gt.Contents = new String(), this.annotate(Z, W, nt, q, gt);
                },
                highlight: function(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return gt.Subtype = "Highlight", gt.color == null && (gt.color = [241, 238, 148]), this._markup(Z, W, nt, q, gt);
                },
                underline: function(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return gt.Subtype = "Underline", this._markup(Z, W, nt, q, gt);
                },
                strike: function(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return gt.Subtype = "StrikeOut", this._markup(Z, W, nt, q, gt);
                },
                lineAnnotation: function(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return gt.Subtype = "Line", gt.Contents = new String(), gt.L = [Z, this.page.height - W, nt, this.page.height - q], this.annotate(Z, W, nt, q, gt);
                },
                rectAnnotation: function(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return gt.Subtype = "Square", gt.Contents = new String(), this.annotate(Z, W, nt, q, gt);
                },
                ellipseAnnotation: function(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return gt.Subtype = "Circle", gt.Contents = new String(), this.annotate(Z, W, nt, q, gt);
                },
                textAnnotation: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return St.Subtype = "FreeText", St.Contents = new String(gt), St.DA = new String(), this.annotate(Z, W, nt, q, St);
                },
                fileAnnotation: function(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {}, qt = this.file(gt.src, Object.assign({
                    hidden: !0
                  }, gt));
                  return St.Subtype = "FileAttachment", St.FS = qt, St.Contents ? St.Contents = new String(St.Contents) : qt.data.Desc && (St.Contents = qt.data.Desc), this.annotate(Z, W, nt, q, St);
                },
                _convertRect: function(Z, W, nt, q) {
                  var gt = W;
                  W += q;
                  var St = Z + nt, qt = N(this._ctm, 6), ne = qt[0], he = qt[1], ye = qt[2], Se = qt[3], Ce = qt[4], Ie = qt[5];
                  return Z = ne * Z + ye * W + Ce, W = he * Z + Se * W + Ie, St = ne * St + ye * gt + Ce, gt = he * St + Se * gt + Ie, [Z, W, St, gt];
                }
              }, Dr = /* @__PURE__ */ function() {
                function wt(Z, W, nt, q) {
                  var gt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
                    expanded: !1
                  };
                  g(this, wt), this.document = Z, this.options = gt, this.outlineData = {}, q !== null && (this.outlineData.Dest = [q.dictionary, "Fit"]), W !== null && (this.outlineData.Parent = W), nt !== null && (this.outlineData.Title = new String(nt)), this.dictionary = this.document.ref(this.outlineData), this.children = [];
                }
                return m(wt, [{
                  key: "addItem",
                  value: function(W) {
                    var nt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                      expanded: !1
                    }, q = new wt(this.document, this.dictionary, W, this.document.page, nt);
                    return this.children.push(q), q;
                  }
                }, {
                  key: "endOutline",
                  value: function() {
                    if (this.children.length > 0) {
                      this.options.expanded && (this.outlineData.Count = this.children.length);
                      var W = this.children[0], nt = this.children[this.children.length - 1];
                      this.outlineData.First = W.dictionary, this.outlineData.Last = nt.dictionary;
                      for (var q = 0, gt = this.children.length; q < gt; q++) {
                        var St = this.children[q];
                        q > 0 && (St.outlineData.Prev = this.children[q - 1].dictionary), q < this.children.length - 1 && (St.outlineData.Next = this.children[q + 1].dictionary), St.endOutline();
                      }
                    }
                    return this.dictionary.end();
                  }
                }]), wt;
              }(), Tr = {
                initOutline: function() {
                  return this.outline = new Dr(this, null, null, null);
                },
                endOutline: function() {
                  if (this.outline.endOutline(), this.outline.children.length > 0)
                    return this._root.data.Outlines = this.outline.dictionary, this._root.data.PageMode = "UseOutlines";
                }
              }, Or = /* @__PURE__ */ function() {
                function wt(Z, W) {
                  g(this, wt), this.refs = [{
                    pageRef: Z,
                    mcid: W
                  }];
                }
                return m(wt, [{
                  key: "push",
                  value: function(W) {
                    var nt = this;
                    W.refs.forEach(function(q) {
                      return nt.refs.push(q);
                    });
                  }
                }]), wt;
              }(), _r = /* @__PURE__ */ function() {
                function wt(Z, W) {
                  var nt = this, q = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, gt = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
                  g(this, wt), this.document = Z, this._attached = !1, this._ended = !1, this._flushed = !1, this.dictionary = Z.ref({
                    // Type: "StructElem",
                    S: W
                  });
                  var St = this.dictionary.data;
                  (Array.isArray(q) || this._isValidChild(q)) && (gt = q, q = {}), typeof q.title < "u" && (St.T = new String(q.title)), typeof q.lang < "u" && (St.Lang = new String(q.lang)), typeof q.alt < "u" && (St.Alt = new String(q.alt)), typeof q.expanded < "u" && (St.E = new String(q.expanded)), typeof q.actual < "u" && (St.ActualText = new String(q.actual)), this._children = [], gt && (Array.isArray(gt) || (gt = [gt]), gt.forEach(function(qt) {
                    return nt.add(qt);
                  }), this.end());
                }
                return m(wt, [{
                  key: "add",
                  value: function(W) {
                    if (this._ended)
                      throw new Error("Cannot add child to already-ended structure element");
                    if (!this._isValidChild(W))
                      throw new Error("Invalid structure element child");
                    return W instanceof wt && (W.setParent(this.dictionary), this._attached && W.setAttached()), W instanceof Or && this._addContentToParentTree(W), typeof W == "function" && this._attached && (W = this._contentForClosure(W)), this._children.push(W), this;
                  }
                }, {
                  key: "_addContentToParentTree",
                  value: function(W) {
                    var nt = this;
                    W.refs.forEach(function(q) {
                      var gt = q.pageRef, St = q.mcid, qt = nt.document.getStructParentTree().get(gt.data.StructParents);
                      qt[St] = nt.dictionary;
                    });
                  }
                }, {
                  key: "setParent",
                  value: function(W) {
                    if (this.dictionary.data.P)
                      throw new Error("Structure element added to more than one parent");
                    this.dictionary.data.P = W, this._flush();
                  }
                }, {
                  key: "setAttached",
                  value: function() {
                    var W = this;
                    this._attached || (this._children.forEach(function(nt, q) {
                      nt instanceof wt && nt.setAttached(), typeof nt == "function" && (W._children[q] = W._contentForClosure(nt));
                    }), this._attached = !0, this._flush());
                  }
                }, {
                  key: "end",
                  value: function() {
                    this._ended || (this._children.filter(function(W) {
                      return W instanceof wt;
                    }).forEach(function(W) {
                      return W.end();
                    }), this._ended = !0, this._flush());
                  }
                }, {
                  key: "_isValidChild",
                  value: function(W) {
                    return W instanceof wt || W instanceof Or || typeof W == "function";
                  }
                }, {
                  key: "_contentForClosure",
                  value: function(W) {
                    var nt = this.document.markStructureContent(this.dictionary.data.S);
                    return W(), this.document.endMarkedContent(), this._addContentToParentTree(nt), nt;
                  }
                }, {
                  key: "_isFlushable",
                  value: function() {
                    return !this.dictionary.data.P || !this._ended ? !1 : this._children.every(function(W) {
                      return typeof W == "function" ? !1 : W instanceof wt ? W._isFlushable() : !0;
                    });
                  }
                }, {
                  key: "_flush",
                  value: function() {
                    var W = this;
                    this._flushed || !this._isFlushable() || (this.dictionary.data.K = [], this._children.forEach(function(nt) {
                      return W._flushChild(nt);
                    }), this.dictionary.end(), this._children = [], this.dictionary.data.K = null, this._flushed = !0);
                  }
                }, {
                  key: "_flushChild",
                  value: function(W) {
                    var nt = this;
                    W instanceof wt && this.dictionary.data.K.push(W.dictionary), W instanceof Or && W.refs.forEach(function(q) {
                      var gt = q.pageRef, St = q.mcid;
                      nt.dictionary.data.Pg || (nt.dictionary.data.Pg = gt), nt.dictionary.data.Pg === gt ? nt.dictionary.data.K.push(St) : nt.dictionary.data.K.push({
                        Type: "MCR",
                        Pg: gt,
                        MCID: St
                      });
                    });
                  }
                }]), wt;
              }(), En = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W() {
                  return g(this, W), Z.apply(this, arguments);
                }
                return m(W, [{
                  key: "_compareKeys",
                  value: function(q, gt) {
                    return parseInt(q) - parseInt(gt);
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    return "Nums";
                  }
                }, {
                  key: "_dataForKey",
                  value: function(q) {
                    return parseInt(q);
                  }
                }]), W;
              }(Q), an = {
                initMarkings: function(Z) {
                  this.structChildren = [], Z.tagged && (this.getMarkInfoDictionary().data.Marked = !0, this.getStructTreeRoot());
                },
                markContent: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                  if (Z === "Artifact" || W && W.mcid) {
                    var nt = 0;
                    for (this.page.markings.forEach(function(gt) {
                      (nt || gt.structContent || gt.tag === "Artifact") && nt++;
                    }); nt--; )
                      this.endMarkedContent();
                  }
                  if (!W)
                    return this.page.markings.push({
                      tag: Z
                    }), this.addContent("/".concat(Z, " BMC")), this;
                  this.page.markings.push({
                    tag: Z,
                    options: W
                  });
                  var q = {};
                  return typeof W.mcid < "u" && (q.MCID = W.mcid), Z === "Artifact" && (typeof W.type == "string" && (q.Type = W.type), Array.isArray(W.bbox) && (q.BBox = [W.bbox[0], this.page.height - W.bbox[3], W.bbox[2], this.page.height - W.bbox[1]]), Array.isArray(W.attached) && W.attached.every(function(gt) {
                    return typeof gt == "string";
                  }) && (q.Attached = W.attached)), Z === "Span" && (W.lang && (q.Lang = new String(W.lang)), W.alt && (q.Alt = new String(W.alt)), W.expanded && (q.E = new String(W.expanded)), W.actual && (q.ActualText = new String(W.actual))), this.addContent("/".concat(Z, " ").concat(G.convert(q), " BDC")), this;
                },
                markStructureContent: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, nt = this.getStructParentTree().get(this.page.structParentTreeKey), q = nt.length;
                  nt.push(null), this.markContent(Z, I(I({}, W), {}, {
                    mcid: q
                  }));
                  var gt = new Or(this.page.dictionary, q);
                  return this.page.markings.slice(-1)[0].structContent = gt, gt;
                },
                endMarkedContent: function() {
                  return this.page.markings.pop(), this.addContent("EMC"), this;
                },
                struct: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, nt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
                  return new _r(this, Z, W, nt);
                },
                addStructure: function(Z) {
                  var W = this.getStructTreeRoot();
                  return Z.setParent(W), Z.setAttached(), this.structChildren.push(Z), W.data.K || (W.data.K = []), W.data.K.push(Z.dictionary), this;
                },
                initPageMarkings: function(Z) {
                  var W = this;
                  Z.forEach(function(nt) {
                    if (nt.structContent) {
                      var q = nt.structContent, gt = W.markStructureContent(nt.tag, nt.options);
                      q.push(gt), W.page.markings.slice(-1)[0].structContent = q;
                    } else
                      W.markContent(nt.tag, nt.options);
                  });
                },
                endPageMarkings: function(Z) {
                  var W = Z.markings;
                  return W.forEach(function() {
                    return Z.write("EMC");
                  }), Z.markings = [], W;
                },
                getMarkInfoDictionary: function() {
                  return this._root.data.MarkInfo || (this._root.data.MarkInfo = this.ref({})), this._root.data.MarkInfo;
                },
                getStructTreeRoot: function() {
                  return this._root.data.StructTreeRoot || (this._root.data.StructTreeRoot = this.ref({
                    Type: "StructTreeRoot",
                    ParentTree: new En(),
                    ParentTreeNextKey: 0
                  })), this._root.data.StructTreeRoot;
                },
                getStructParentTree: function() {
                  return this.getStructTreeRoot().data.ParentTree;
                },
                createStructParentTreeNextKey: function() {
                  this.getMarkInfoDictionary();
                  var Z = this.getStructTreeRoot(), W = Z.data.ParentTreeNextKey++;
                  return Z.data.ParentTree.add(W, []), W;
                },
                endMarkings: function() {
                  var Z = this._root.data.StructTreeRoot;
                  Z && (Z.end(), this.structChildren.forEach(function(W) {
                    return W.end();
                  })), this._root.data.MarkInfo && this._root.data.MarkInfo.end();
                }
              }, bn = {
                readOnly: 1,
                required: 2,
                noExport: 4,
                multiline: 4096,
                password: 8192,
                toggleToOffButton: 16384,
                radioButton: 32768,
                pushButton: 65536,
                combo: 131072,
                edit: 262144,
                sort: 524288,
                multiSelect: 2097152,
                noSpell: 4194304
              }, Dn = {
                left: 0,
                center: 1,
                right: 2
              }, on = {
                value: "V",
                defaultValue: "DV"
              }, cn = {
                zip: "0",
                zipPlus4: "1",
                zip4: "1",
                phone: "2",
                ssn: "3"
              }, ln = {
                number: {
                  nDec: 0,
                  sepComma: !1,
                  negStyle: "MinusBlack",
                  currency: "",
                  currencyPrepend: !0
                },
                percent: {
                  nDec: 0,
                  sepComma: !1
                }
              }, Ya = {
                /**
                 * Must call if adding AcroForms to a document. Must also call font() before
                 * this method to set the default font.
                 */
                initForm: function() {
                  if (!this._font)
                    throw new Error("Must set a font before calling initForm method");
                  this._acroform = {
                    fonts: {},
                    defaultFont: this._font.name
                  }, this._acroform.fonts[this._font.id] = this._font.ref();
                  var Z = {
                    Fields: [],
                    NeedAppearances: !0,
                    DA: new String("/".concat(this._font.id, " 0 Tf 0 g")),
                    DR: {
                      Font: {}
                    }
                  };
                  Z.DR.Font[this._font.id] = this._font.ref();
                  var W = this.ref(Z);
                  return this._root.data.AcroForm = W, this;
                },
                /**
                 * Called automatically by document.js
                 */
                endAcroForm: function() {
                  var Z = this;
                  if (this._root.data.AcroForm) {
                    if (!Object.keys(this._acroform.fonts).length && !this._acroform.defaultFont)
                      throw new Error("No fonts specified for PDF form");
                    var W = this._root.data.AcroForm.data.DR.Font;
                    Object.keys(this._acroform.fonts).forEach(function(nt) {
                      W[nt] = Z._acroform.fonts[nt];
                    }), this._root.data.AcroForm.data.Fields.forEach(function(nt) {
                      Z._endChild(nt);
                    }), this._root.data.AcroForm.end();
                  }
                  return this;
                },
                _endChild: function(Z) {
                  var W = this;
                  return Array.isArray(Z.data.Kids) && (Z.data.Kids.forEach(function(nt) {
                    W._endChild(nt);
                  }), Z.end()), this;
                },
                /**
                 * Creates and adds a form field to the document. Form fields are intermediate
                 * nodes in a PDF form that are used to specify form name heirarchy and form
                 * value defaults.
                 * @param {string} name - field name (T attribute in field dictionary)
                 * @param {object} options  - other attributes to include in field dictionary
                 */
                formField: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, nt = this._fieldDict(Z, null, W), q = this.ref(nt);
                  return this._addToParent(q), q;
                },
                /**
                 * Creates and adds a Form Annotation to the document. Form annotations are
                 * called Widget annotations internally within a PDF file.
                 * @param {string} name - form field name (T attribute of widget annotation
                 * dictionary)
                 * @param {number} x
                 * @param {number} y
                 * @param {number} w
                 * @param {number} h
                 * @param {object} options
                 */
                formAnnotation: function(Z, W, nt, q, gt, St) {
                  var qt = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : {}, ne = this._fieldDict(Z, W, qt);
                  ne.Subtype = "Widget", ne.F === void 0 && (ne.F = 4), this.annotate(nt, q, gt, St, ne);
                  var he = this.page.annotations[this.page.annotations.length - 1];
                  return this._addToParent(he);
                },
                formText: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "text", W, nt, q, gt, St);
                },
                formPushButton: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "pushButton", W, nt, q, gt, St);
                },
                formCombo: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "combo", W, nt, q, gt, St);
                },
                formList: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "list", W, nt, q, gt, St);
                },
                formRadioButton: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "radioButton", W, nt, q, gt, St);
                },
                formCheckbox: function(Z, W, nt, q, gt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "checkbox", W, nt, q, gt, St);
                },
                _addToParent: function(Z) {
                  var W = Z.data.Parent;
                  return W ? (W.data.Kids || (W.data.Kids = []), W.data.Kids.push(Z)) : this._root.data.AcroForm.data.Fields.push(Z), this;
                },
                _fieldDict: function(Z, W) {
                  var nt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  if (!this._acroform)
                    throw new Error("Call document.initForms() method before adding form elements to document");
                  var q = Object.assign({}, nt);
                  return W !== null && (q = this._resolveType(W, nt)), q = this._resolveFlags(q), q = this._resolveJustify(q), q = this._resolveFont(q), q = this._resolveStrings(q), q = this._resolveColors(q), q = this._resolveFormat(q), q.T = new String(Z), q.parent && (q.Parent = q.parent, delete q.parent), q;
                },
                _resolveType: function(Z, W) {
                  if (Z === "text")
                    W.FT = "Tx";
                  else if (Z === "pushButton")
                    W.FT = "Btn", W.pushButton = !0;
                  else if (Z === "radioButton")
                    W.FT = "Btn", W.radioButton = !0;
                  else if (Z === "checkbox")
                    W.FT = "Btn";
                  else if (Z === "combo")
                    W.FT = "Ch", W.combo = !0;
                  else if (Z === "list")
                    W.FT = "Ch";
                  else
                    throw new Error("Invalid form annotation type '".concat(Z, "'"));
                  return W;
                },
                _resolveFormat: function(Z) {
                  var W = Z.format;
                  if (W && W.type) {
                    var nt, q, gt = "";
                    if (cn[W.type] !== void 0)
                      nt = "AFSpecial_Keystroke", q = "AFSpecial_Format", gt = cn[W.type];
                    else {
                      var St = W.type.charAt(0).toUpperCase() + W.type.slice(1);
                      if (nt = "AF".concat(St, "_Keystroke"), q = "AF".concat(St, "_Format"), W.type === "date")
                        nt += "Ex", gt = String(W.param);
                      else if (W.type === "time")
                        gt = String(W.param);
                      else if (W.type === "number") {
                        var qt = Object.assign({}, ln.number, W);
                        gt = String([String(qt.nDec), qt.sepComma ? "0" : "1", '"' + qt.negStyle + '"', "null", '"' + qt.currency + '"', String(qt.currencyPrepend)].join(","));
                      } else if (W.type === "percent") {
                        var ne = Object.assign({}, ln.percent, W);
                        gt = String([String(ne.nDec), ne.sepComma ? "0" : "1"].join(","));
                      }
                    }
                    Z.AA = Z.AA ? Z.AA : {}, Z.AA.K = {
                      S: "JavaScript",
                      JS: new String("".concat(nt, "(").concat(gt, ");"))
                    }, Z.AA.F = {
                      S: "JavaScript",
                      JS: new String("".concat(q, "(").concat(gt, ");"))
                    };
                  }
                  return delete Z.format, Z;
                },
                _resolveColors: function(Z) {
                  var W = this._normalizeColor(Z.backgroundColor);
                  return W && (Z.MK || (Z.MK = {}), Z.MK.BG = W), W = this._normalizeColor(Z.borderColor), W && (Z.MK || (Z.MK = {}), Z.MK.BC = W), delete Z.backgroundColor, delete Z.borderColor, Z;
                },
                _resolveFlags: function(Z) {
                  var W = 0;
                  return Object.keys(Z).forEach(function(nt) {
                    bn[nt] && (W |= bn[nt], delete Z[nt]);
                  }), W !== 0 && (Z.Ff = Z.Ff ? Z.Ff : 0, Z.Ff |= W), Z;
                },
                _resolveJustify: function(Z) {
                  var W = 0;
                  return Z.align !== void 0 && (typeof Dn[Z.align] == "number" && (W = Dn[Z.align]), delete Z.align), W !== 0 && (Z.Q = W), Z;
                },
                _resolveFont: function(Z) {
                  if (this._acroform.fonts[this._font.id] === null && (this._acroform.fonts[this._font.id] = this._font.ref()), this._acroform.defaultFont !== this._font.name) {
                    Z.DR = {
                      Font: {}
                    };
                    var W = Z.fontSize || 0;
                    Z.DR.Font[this._font.id] = this._font.ref(), Z.DA = new String("/".concat(this._font.id, " ").concat(W, " Tf 0 g"));
                  }
                  return Z;
                },
                _resolveStrings: function(Z) {
                  var W = [];
                  function nt(q) {
                    if (Array.isArray(q))
                      for (var gt = 0; gt < q.length; gt++)
                        typeof q[gt] == "string" ? W.push(new String(q[gt])) : W.push(q[gt]);
                  }
                  return nt(Z.Opt), Z.select && (nt(Z.select), delete Z.select), W.length && (Z.Opt = W), Object.keys(on).forEach(function(q) {
                    Z[q] !== void 0 && (Z[on[q]] = Z[q], delete Z[q]);
                  }), ["V", "DV"].forEach(function(q) {
                    typeof Z[q] == "string" && (Z[q] = new String(Z[q]));
                  }), Z.MK && Z.MK.CA && (Z.MK.CA = new String(Z.MK.CA)), Z.label && (Z.MK = Z.MK ? Z.MK : {}, Z.MK.CA = new String(Z.label), delete Z.label), Z;
                }
              }, oa = {
                /**
                 * Embed contents of `src` in PDF
                 * @param {Buffer | ArrayBuffer | string} src input Buffer, ArrayBuffer, base64 encoded string or path to file
                 * @param {object} options
                 *  * options.name: filename to be shown in PDF, will use `src` if none set
                 *  * options.type: filetype to be shown in PDF
                 *  * options.description: description to be shown in PDF
                 *  * options.hidden: if true, do not add attachment to EmbeddedFiles dictionary. Useful for file attachment annotations
                 *  * options.creationDate: override creation date
                 *  * options.modifiedDate: override modified date
                 * @returns filespec reference
                 */
                file: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  W.name = W.name || Z;
                  var nt = {
                    Type: "EmbeddedFile",
                    Params: {}
                  }, q;
                  if (!Z)
                    throw new Error("No src specified");
                  if (r.isBuffer(Z))
                    q = Z;
                  else if (Z instanceof ArrayBuffer)
                    q = r.from(new Uint8Array(Z));
                  else {
                    var gt;
                    if (gt = /^data:(.*);base64,(.*)$/.exec(Z))
                      gt[1] && (nt.Subtype = gt[1].replace("/", "#2F")), q = r.from(gt[2], "base64");
                    else {
                      if (q = y.readFileSync(Z), !q)
                        throw new Error("Could not read contents of file at filepath ".concat(Z));
                      var St = y.statSync(Z), qt = St.birthtime, ne = St.ctime;
                      nt.Params.CreationDate = qt, nt.Params.ModDate = ne;
                    }
                  }
                  W.creationDate instanceof Date && (nt.Params.CreationDate = W.creationDate), W.modifiedDate instanceof Date && (nt.Params.ModDate = W.modifiedDate), W.type && (nt.Subtype = W.type.replace("/", "#2F"));
                  var he = f.default.MD5(f.default.lib.WordArray.create(new Uint8Array(q)));
                  nt.Params.CheckSum = new String(he), nt.Params.Size = q.byteLength;
                  var ye;
                  this._fileRegistry || (this._fileRegistry = {});
                  var Se = this._fileRegistry[W.name];
                  Se && Ka(nt, Se) ? ye = Se.ref : (ye = this.ref(nt), ye.end(q), this._fileRegistry[W.name] = I(I({}, nt), {}, {
                    ref: ye
                  }));
                  var Ce = {
                    Type: "Filespec",
                    F: new String(W.name),
                    EF: {
                      F: ye
                    },
                    UF: new String(W.name)
                  };
                  W.description && (Ce.Desc = new String(W.description));
                  var Ie = this.ref(Ce);
                  return Ie.end(), W.hidden || this.addNamedEmbeddedFile(W.name, Ie), Ie;
                }
              };
              function Ka(wt, Z) {
                return wt.Subtype === Z.Subtype && wt.Params.CheckSum.toString() === Z.Params.CheckSum.toString() && wt.Params.Size === Z.Params.Size && wt.Params.CreationDate === Z.Params.CreationDate && wt.Params.ModDate === Z.Params.ModDate;
              }
              var Ja = {
                initPDFA: function(Z) {
                  Z.charAt(Z.length - 3) === "-" ? (this.subset_conformance = Z.charAt(Z.length - 1).toUpperCase(), this.subset = parseInt(Z.charAt(Z.length - 2))) : (this.subset_conformance = "B", this.subset = parseInt(Z.charAt(Z.length - 1)));
                },
                endSubset: function() {
                  this._addPdfaMetadata();
                  var Z = "".concat(o, "/data/sRGB_IEC61966_2_1.icc"), W = "".concat(o, "/../color_profiles/sRGB_IEC61966_2_1.icc");
                  this._addColorOutputIntent(y.existsSync(Z) ? Z : W);
                },
                _addColorOutputIntent: function(Z) {
                  var W = y.readFileSync(Z), nt = this.ref({
                    Length: W.length,
                    N: 3
                  });
                  nt.write(W), nt.end();
                  var q = this.ref({
                    Type: "OutputIntent",
                    S: "GTS_PDFA1",
                    Info: new String("sRGB IEC61966-2.1"),
                    OutputConditionIdentifier: new String("sRGB IEC61966-2.1"),
                    DestOutputProfile: nt
                  });
                  q.end(), this._root.data.OutputIntents = [q];
                },
                _getPdfaid: function() {
                  return `
        <rdf:Description xmlns:pdfaid="http://www.aiim.org/pdfa/ns/id/" rdf:about="">
            <pdfaid:part>`.concat(this.subset, `</pdfaid:part>
            <pdfaid:conformance>`).concat(this.subset_conformance, `</pdfaid:conformance>
        </rdf:Description>
        `);
                },
                _addPdfaMetadata: function() {
                  this.appendXML(this._getPdfaid());
                }
              }, Ma = {
                _importSubset: function(Z) {
                  Object.assign(this, Z);
                },
                initSubset: function(Z) {
                  switch (Z.subset) {
                    case "PDF/A-1":
                    case "PDF/A-1a":
                    case "PDF/A-1b":
                    case "PDF/A-2":
                    case "PDF/A-2a":
                    case "PDF/A-2b":
                    case "PDF/A-3":
                    case "PDF/A-3a":
                    case "PDF/A-3b":
                      this._importSubset(Ja), this.initPDFA(Z.subset);
                      break;
                  }
                }
              }, sa = /* @__PURE__ */ function() {
                function wt() {
                  g(this, wt), this._metadata = `
        <?xpacket begin="\uFEFF" id="W5M0MpCehiHzreSzNTczkc9d"?>
            <x:xmpmeta xmlns:x="adobe:ns:meta/">
                <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
        `;
                }
                return m(wt, [{
                  key: "_closeTags",
                  value: function() {
                    this._metadata = this._metadata.concat(`
                </rdf:RDF>
            </x:xmpmeta>
        <?xpacket end="w"?>
        `);
                  }
                }, {
                  key: "append",
                  value: function(W) {
                    var nt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
                    this._metadata = this._metadata.concat(W), nt && (this._metadata = this._metadata.concat(`
`));
                  }
                }, {
                  key: "getXML",
                  value: function() {
                    return this._metadata;
                  }
                }, {
                  key: "getLength",
                  value: function() {
                    return this._metadata.length;
                  }
                }, {
                  key: "end",
                  value: function() {
                    this._closeTags(), this._metadata = this._metadata.trim();
                  }
                }]), wt;
              }(), ka = {
                initMetadata: function() {
                  this.metadata = new sa();
                },
                appendXML: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
                  this.metadata.append(Z, W);
                },
                _addInfo: function() {
                  this.appendXML(`
        <rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
            <xmp:CreateDate>`.concat(this.info.CreationDate.toISOString().split(".")[0] + "Z", `</xmp:CreateDate>
            <xmp:CreatorTool>`).concat(this.info.Creator, `</xmp:CreatorTool>
        </rdf:Description>
        `)), (this.info.Title || this.info.Author || this.info.Subject) && (this.appendXML(`
            <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">
            `), this.info.Title && this.appendXML(`
                <dc:title>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">`.concat(this.info.Title, `</rdf:li>
                    </rdf:Alt>
                </dc:title>
                `)), this.info.Author && this.appendXML(`
                <dc:creator>
                    <rdf:Seq>
                        <rdf:li>`.concat(this.info.Author, `</rdf:li>
                    </rdf:Seq>
                </dc:creator>
                `)), this.info.Subject && this.appendXML(`
                <dc:description>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">`.concat(this.info.Subject, `</rdf:li>
                    </rdf:Alt>
                </dc:description>
                `)), this.appendXML(`
            </rdf:Description>
            `)), this.appendXML(`
        <rdf:Description rdf:about="" xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
            <pdf:Producer>`.concat(this.info.Creator, "</pdf:Producer>"), !1), this.info.Keywords && this.appendXML(`
            <pdf:Keywords>`.concat(this.info.Keywords, "</pdf:Keywords>"), !1), this.appendXML(`
        </rdf:Description>
        `);
                },
                endMetadata: function() {
                  this._addInfo(), this.metadata.end(), this.version != 1.3 && (this.metadataRef = this.ref({
                    length: this.metadata.getLength(),
                    Type: "Metadata",
                    Subtype: "XML"
                  }), this.metadataRef.compress = !1, this.metadataRef.write(r.from(this.metadata.getXML(), "utf-8")), this.metadataRef.end(), this._root.data.Metadata = this.metadataRef);
                }
              }, pa = /* @__PURE__ */ function(wt) {
                T(W, wt);
                var Z = L(W);
                function W() {
                  var nt, q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                  switch (g(this, W), nt = Z.call(this, q), nt.options = q, q.pdfVersion) {
                    case "1.4":
                      nt.version = 1.4;
                      break;
                    case "1.5":
                      nt.version = 1.5;
                      break;
                    case "1.6":
                      nt.version = 1.6;
                      break;
                    case "1.7":
                    case "1.7ext3":
                      nt.version = 1.7;
                      break;
                    default:
                      nt.version = 1.3;
                      break;
                  }
                  nt.compress = nt.options.compress != null ? nt.options.compress : !0, nt._pageBuffer = [], nt._pageBufferStart = 0, nt._offsets = [], nt._waiting = 0, nt._ended = !1, nt._offset = 0;
                  var gt = nt.ref({
                    Type: "Pages",
                    Count: 0,
                    Kids: []
                  }), St = nt.ref({
                    Dests: new V()
                  });
                  if (nt._root = nt.ref({
                    Type: "Catalog",
                    Pages: gt,
                    Names: St
                  }), nt.options.lang && (nt._root.data.Lang = new String(nt.options.lang)), nt.page = null, nt.initMetadata(), nt.initColor(), nt.initVector(), nt.initFonts(q.font), nt.initText(), nt.initImages(), nt.initOutline(), nt.initMarkings(q), nt.initSubset(q), nt.info = {
                    Producer: "PDFKit",
                    Creator: "PDFKit",
                    CreationDate: /* @__PURE__ */ new Date()
                  }, nt.options.info)
                    for (var qt in nt.options.info) {
                      var ne = nt.options.info[qt];
                      nt.info[qt] = ne;
                    }
                  return nt.options.displayTitle && (nt._root.data.ViewerPreferences = nt.ref({
                    DisplayDocTitle: !0
                  })), nt._id = st.generateFileID(nt.info), nt._security = st.create(x(nt), q), nt._write("%PDF-".concat(nt.version)), nt._write("%Ã¿Ã¿Ã¿Ã¿"), nt.options.autoFirstPage !== !1 && nt.addPage(), nt;
                }
                return m(W, [{
                  key: "addPage",
                  value: function(q) {
                    q == null && (q = this.options), this.options.bufferPages || this.flushPages(), this.page = new k(this, q), this._pageBuffer.push(this.page);
                    var gt = this._root.data.Pages.data;
                    return gt.Kids.push(this.page.dictionary), gt.Count++, this.x = this.page.margins.left, this.y = this.page.margins.top, this._ctm = [1, 0, 0, 1, 0, 0], this.transform(1, 0, 0, -1, 0, this.page.height), this.emit("pageAdded"), this;
                  }
                }, {
                  key: "continueOnNewPage",
                  value: function(q) {
                    var gt = this.endPageMarkings(this.page);
                    return this.addPage(q), this.initPageMarkings(gt), this;
                  }
                }, {
                  key: "bufferedPageRange",
                  value: function() {
                    return {
                      start: this._pageBufferStart,
                      count: this._pageBuffer.length
                    };
                  }
                }, {
                  key: "switchToPage",
                  value: function(q) {
                    var gt;
                    if (!(gt = this._pageBuffer[q - this._pageBufferStart]))
                      throw new Error("switchToPage(".concat(q, ") out of bounds, current buffer covers pages ").concat(this._pageBufferStart, " to ").concat(this._pageBufferStart + this._pageBuffer.length - 1));
                    return this.page = gt;
                  }
                }, {
                  key: "flushPages",
                  value: function() {
                    var q = this._pageBuffer;
                    this._pageBuffer = [], this._pageBufferStart += q.length;
                    var gt = Rt(q), St;
                    try {
                      for (gt.s(); !(St = gt.n()).done; ) {
                        var qt = St.value;
                        this.endPageMarkings(qt), qt.end();
                      }
                    } catch (ne) {
                      gt.e(ne);
                    } finally {
                      gt.f();
                    }
                  }
                }, {
                  key: "addNamedDestination",
                  value: function(q) {
                    for (var gt = arguments.length, St = new Array(gt > 1 ? gt - 1 : 0), qt = 1; qt < gt; qt++)
                      St[qt - 1] = arguments[qt];
                    St.length === 0 && (St = ["XYZ", null, null, null]), St[0] === "XYZ" && St[2] !== null && (St[2] = this.page.height - St[2]), St.unshift(this.page.dictionary), this._root.data.Names.data.Dests.add(q, St);
                  }
                }, {
                  key: "addNamedEmbeddedFile",
                  value: function(q, gt) {
                    this._root.data.Names.data.EmbeddedFiles || (this._root.data.Names.data.EmbeddedFiles = new V({
                      limits: !1
                    })), this._root.data.Names.data.EmbeddedFiles.add(q, gt);
                  }
                }, {
                  key: "addNamedJavaScript",
                  value: function(q, gt) {
                    this._root.data.Names.data.JavaScript || (this._root.data.Names.data.JavaScript = new V());
                    var St = {
                      JS: new String(gt),
                      S: "JavaScript"
                    };
                    this._root.data.Names.data.JavaScript.add(q, St);
                  }
                }, {
                  key: "ref",
                  value: function(q) {
                    var gt = new Tt(this, this._offsets.length + 1, q);
                    return this._offsets.push(null), this._waiting++, gt;
                  }
                }, {
                  key: "_read",
                  value: function() {
                  }
                  // do nothing, but this method is required by node
                }, {
                  key: "_write",
                  value: function(q) {
                    return r.isBuffer(q) || (q = r.from(q + `
`, "binary")), this.push(q), this._offset += q.length;
                  }
                }, {
                  key: "addContent",
                  value: function(q) {
                    return this.page.write(q), this;
                  }
                }, {
                  key: "_refEnd",
                  value: function(q) {
                    if (this._offsets[q.id - 1] = q.offset, --this._waiting === 0 && this._ended)
                      return this._finalize(), this._ended = !1;
                  }
                }, {
                  key: "write",
                  value: function(q, gt) {
                    var St = new Error("PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream.");
                    return console.warn(St.stack), this.pipe(y.createWriteStream(q)), this.end(), this.once("end", gt);
                  }
                }, {
                  key: "end",
                  value: function() {
                    this.flushPages(), this._info = this.ref();
                    for (var q in this.info) {
                      var gt = this.info[q];
                      typeof gt == "string" && (gt = new String(gt));
                      var St = this.ref(gt);
                      St.end(), this._info.data[q] = St;
                    }
                    this._info.end();
                    for (var qt in this._fontFamilies) {
                      var ne = this._fontFamilies[qt];
                      ne.finalize();
                    }
                    return this.endOutline(), this.endMarkings(), this.subset && this.endSubset(), this.endMetadata(), this._root.end(), this._root.data.Pages.end(), this._root.data.Names.end(), this.endAcroForm(), this._root.data.ViewerPreferences && this._root.data.ViewerPreferences.end(), this._security && this._security.end(), this._waiting === 0 ? this._finalize() : this._ended = !0;
                  }
                }, {
                  key: "_finalize",
                  value: function() {
                    var q = this._offset;
                    this._write("xref"), this._write("0 ".concat(this._offsets.length + 1)), this._write("0000000000 65535 f ");
                    var gt = Rt(this._offsets), St;
                    try {
                      for (gt.s(); !(St = gt.n()).done; ) {
                        var qt = St.value;
                        qt = "0000000000".concat(qt).slice(-10), this._write(qt + " 00000 n ");
                      }
                    } catch (he) {
                      gt.e(he);
                    } finally {
                      gt.f();
                    }
                    var ne = {
                      Size: this._offsets.length + 1,
                      Root: this._root,
                      Info: this._info,
                      ID: [this._id, this._id]
                    };
                    return this._security && (ne.Encrypt = this._security.dictionary), this._write("trailer"), this._write(G.convert(ne)), this._write("startxref"), this._write("".concat(q)), this._write("%%EOF"), this.push(null);
                  }
                }, {
                  key: "toString",
                  value: function() {
                    return "[object PDFDocument]";
                  }
                }]), W;
              }(n.default.Readable), On = function(Z) {
                Object.assign(pa.prototype, Z);
              };
              On(ka), On(Hn), On(jt), On(nr), On($e), On(Ar), On(kr), On(Tr), On(an), On(Ya), On(oa), On(Ma), pa.LineWrapper = ve, d.default = pa;
            }
          ),
          /***/
          26949: (
            /***/
            function(u, d, t) {
              var o = t(82669), r = t(88706), n = r;
              typeof n.pdfMake > "u" && (n.pdfMake = o), u.exports = o;
            }
          ),
          /***/
          76118: (
            /***/
            function(u, d, t) {
              var o = t(82530);
              function r(S) {
                "@babel/helpers - typeof";
                return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(k) {
                  return typeof k;
                } : function(k) {
                  return k && typeof Symbol == "function" && k.constructor === Symbol && k !== Symbol.prototype ? "symbol" : typeof k;
                }, r(S);
              }
              function n(S, k) {
                for (var V = 0; V < k.length; V++) {
                  var it = k[V];
                  it.enumerable = it.enumerable || !1, it.configurable = !0, "value" in it && (it.writable = !0), Object.defineProperty(S, f(it.key), it);
                }
              }
              function i(S, k, V) {
                return k && n(S.prototype, k), V && n(S, V), Object.defineProperty(S, "prototype", { writable: !1 }), S;
              }
              function f(S) {
                var k = l(S, "string");
                return r(k) === "symbol" ? k : String(k);
              }
              function l(S, k) {
                if (r(S) !== "object" || S === null)
                  return S;
                var V = S[Symbol.toPrimitive];
                if (V !== void 0) {
                  var it = V.call(S, k || "default");
                  if (r(it) !== "object")
                    return it;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (k === "string" ? String : Number)(S);
              }
              function c(S, k) {
                if (!(S instanceof k))
                  throw new TypeError("Cannot call a class as a function");
              }
              var h = t(78619), a = h.codes, v = a.ERR_AMBIGUOUS_ARGUMENT, y = a.ERR_INVALID_ARG_TYPE, g = a.ERR_INVALID_ARG_VALUE, e = a.ERR_INVALID_RETURN_VALUE, m = a.ERR_MISSING_ARGS, w = t(66979), D = t(85663), I = D.inspect, T = t(85663).types, C = T.isPromise, E = T.isRegExp, F = t(10293)(), x = t(25280)(), P = t(97615)("RegExp.prototype.test"), L, N;
              function M() {
                var S = t(61667);
                L = S.isDeepEqual, N = S.isDeepStrictEqual;
              }
              var K = !1, ut = u.exports = Et, J = {};
              function rt(S) {
                throw S.message instanceof Error ? S.message : new w(S);
              }
              function yt(S, k, V, it, tt) {
                var _ = arguments.length, At;
                if (_ === 0)
                  At = "Failed";
                else if (_ === 1)
                  V = S, S = void 0;
                else {
                  if (K === !1) {
                    K = !0;
                    var Lt = o.emitWarning ? o.emitWarning : console.warn.bind(console);
                    Lt("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094");
                  }
                  _ === 2 && (it = "!=");
                }
                if (V instanceof Error)
                  throw V;
                var Yt = {
                  actual: S,
                  expected: k,
                  operator: it === void 0 ? "fail" : it,
                  stackStartFn: tt || yt
                };
                V !== void 0 && (Yt.message = V);
                var Gt = new w(Yt);
                throw At && (Gt.message = At, Gt.generatedMessage = !0), Gt;
              }
              ut.fail = yt, ut.AssertionError = w;
              function xt(S, k, V, it) {
                if (!V) {
                  var tt = !1;
                  if (k === 0)
                    tt = !0, it = "No value argument passed to `assert.ok()`";
                  else if (it instanceof Error)
                    throw it;
                  var _ = new w({
                    actual: V,
                    expected: !0,
                    message: it,
                    operator: "==",
                    stackStartFn: S
                  });
                  throw _.generatedMessage = tt, _;
                }
              }
              function Et() {
                for (var S = arguments.length, k = new Array(S), V = 0; V < S; V++)
                  k[V] = arguments[V];
                xt.apply(void 0, [Et, k.length].concat(k));
              }
              ut.ok = Et, ut.equal = function S(k, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                k != V && rt({
                  actual: k,
                  expected: V,
                  message: it,
                  operator: "==",
                  stackStartFn: S
                });
              }, ut.notEqual = function S(k, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                k == V && rt({
                  actual: k,
                  expected: V,
                  message: it,
                  operator: "!=",
                  stackStartFn: S
                });
              }, ut.deepEqual = function S(k, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                L === void 0 && M(), L(k, V) || rt({
                  actual: k,
                  expected: V,
                  message: it,
                  operator: "deepEqual",
                  stackStartFn: S
                });
              }, ut.notDeepEqual = function S(k, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                L === void 0 && M(), L(k, V) && rt({
                  actual: k,
                  expected: V,
                  message: it,
                  operator: "notDeepEqual",
                  stackStartFn: S
                });
              }, ut.deepStrictEqual = function S(k, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                L === void 0 && M(), N(k, V) || rt({
                  actual: k,
                  expected: V,
                  message: it,
                  operator: "deepStrictEqual",
                  stackStartFn: S
                });
              }, ut.notDeepStrictEqual = Ft;
              function Ft(S, k, V) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                L === void 0 && M(), N(S, k) && rt({
                  actual: S,
                  expected: k,
                  message: V,
                  operator: "notDeepStrictEqual",
                  stackStartFn: Ft
                });
              }
              ut.strictEqual = function S(k, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                x(k, V) || rt({
                  actual: k,
                  expected: V,
                  message: it,
                  operator: "strictEqual",
                  stackStartFn: S
                });
              }, ut.notStrictEqual = function S(k, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                x(k, V) && rt({
                  actual: k,
                  expected: V,
                  message: it,
                  operator: "notStrictEqual",
                  stackStartFn: S
                });
              };
              var Rt = /* @__PURE__ */ i(function S(k, V, it) {
                var tt = this;
                c(this, S), V.forEach(function(_) {
                  _ in k && (it !== void 0 && typeof it[_] == "string" && E(k[_]) && P(k[_], it[_]) ? tt[_] = it[_] : tt[_] = k[_]);
                });
              });
              function Ut(S, k, V, it, tt, _) {
                if (!(V in S) || !N(S[V], k[V])) {
                  if (!it) {
                    var At = new Rt(S, tt), Lt = new Rt(k, tt, S), Yt = new w({
                      actual: At,
                      expected: Lt,
                      operator: "deepStrictEqual",
                      stackStartFn: _
                    });
                    throw Yt.actual = S, Yt.expected = k, Yt.operator = _.name, Yt;
                  }
                  rt({
                    actual: S,
                    expected: k,
                    message: it,
                    operator: _.name,
                    stackStartFn: _
                  });
                }
              }
              function Q(S, k, V, it) {
                if (typeof k != "function") {
                  if (E(k))
                    return P(k, S);
                  if (arguments.length === 2)
                    throw new y("expected", ["Function", "RegExp"], k);
                  if (r(S) !== "object" || S === null) {
                    var tt = new w({
                      actual: S,
                      expected: k,
                      message: V,
                      operator: "deepStrictEqual",
                      stackStartFn: it
                    });
                    throw tt.operator = it.name, tt;
                  }
                  var _ = Object.keys(k);
                  if (k instanceof Error)
                    _.push("name", "message");
                  else if (_.length === 0)
                    throw new g("error", k, "may not be an empty object");
                  return L === void 0 && M(), _.forEach(function(At) {
                    typeof S[At] == "string" && E(k[At]) && P(k[At], S[At]) || Ut(S, k, At, V, _, it);
                  }), !0;
                }
                return k.prototype !== void 0 && S instanceof k ? !0 : Error.isPrototypeOf(k) ? !1 : k.call({}, S) === !0;
              }
              function pt(S) {
                if (typeof S != "function")
                  throw new y("fn", "Function", S);
                try {
                  S();
                } catch (k) {
                  return k;
                }
                return J;
              }
              function ct(S) {
                return C(S) || S !== null && r(S) === "object" && typeof S.then == "function" && typeof S.catch == "function";
              }
              function ot(S) {
                return Promise.resolve().then(function() {
                  var k;
                  if (typeof S == "function") {
                    if (k = S(), !ct(k))
                      throw new e("instance of Promise", "promiseFn", k);
                  } else if (ct(S))
                    k = S;
                  else
                    throw new y("promiseFn", ["Function", "Promise"], S);
                  return Promise.resolve().then(function() {
                    return k;
                  }).then(function() {
                    return J;
                  }).catch(function(V) {
                    return V;
                  });
                });
              }
              function mt(S, k, V, it) {
                if (typeof V == "string") {
                  if (arguments.length === 4)
                    throw new y("error", ["Object", "Error", "Function", "RegExp"], V);
                  if (r(k) === "object" && k !== null) {
                    if (k.message === V)
                      throw new v("error/message", 'The error message "'.concat(k.message, '" is identical to the message.'));
                  } else if (k === V)
                    throw new v("error/message", 'The error "'.concat(k, '" is identical to the message.'));
                  it = V, V = void 0;
                } else if (V != null && r(V) !== "object" && typeof V != "function")
                  throw new y("error", ["Object", "Error", "Function", "RegExp"], V);
                if (k === J) {
                  var tt = "";
                  V && V.name && (tt += " (".concat(V.name, ")")), tt += it ? ": ".concat(it) : ".";
                  var _ = S.name === "rejects" ? "rejection" : "exception";
                  rt({
                    actual: void 0,
                    expected: V,
                    operator: S.name,
                    message: "Missing expected ".concat(_).concat(tt),
                    stackStartFn: S
                  });
                }
                if (V && !Q(k, V, it, S))
                  throw k;
              }
              function G(S, k, V, it) {
                if (k !== J) {
                  if (typeof V == "string" && (it = V, V = void 0), !V || Q(k, V)) {
                    var tt = it ? ": ".concat(it) : ".", _ = S.name === "doesNotReject" ? "rejection" : "exception";
                    rt({
                      actual: k,
                      expected: V,
                      operator: S.name,
                      message: "Got unwanted ".concat(_).concat(tt, `
`) + 'Actual message: "'.concat(k && k.message, '"'),
                      stackStartFn: S
                    });
                  }
                  throw k;
                }
              }
              ut.throws = function S(k) {
                for (var V = arguments.length, it = new Array(V > 1 ? V - 1 : 0), tt = 1; tt < V; tt++)
                  it[tt - 1] = arguments[tt];
                mt.apply(void 0, [S, pt(k)].concat(it));
              }, ut.rejects = function S(k) {
                for (var V = arguments.length, it = new Array(V > 1 ? V - 1 : 0), tt = 1; tt < V; tt++)
                  it[tt - 1] = arguments[tt];
                return ot(k).then(function(_) {
                  return mt.apply(void 0, [S, _].concat(it));
                });
              }, ut.doesNotThrow = function S(k) {
                for (var V = arguments.length, it = new Array(V > 1 ? V - 1 : 0), tt = 1; tt < V; tt++)
                  it[tt - 1] = arguments[tt];
                G.apply(void 0, [S, pt(k)].concat(it));
              }, ut.doesNotReject = function S(k) {
                for (var V = arguments.length, it = new Array(V > 1 ? V - 1 : 0), tt = 1; tt < V; tt++)
                  it[tt - 1] = arguments[tt];
                return ot(k).then(function(_) {
                  return G.apply(void 0, [S, _].concat(it));
                });
              }, ut.ifError = function S(k) {
                if (k != null) {
                  var V = "ifError got unwanted exception: ";
                  r(k) === "object" && typeof k.message == "string" ? k.message.length === 0 && k.constructor ? V += k.constructor.name : V += k.message : V += I(k);
                  var it = new w({
                    actual: k,
                    expected: null,
                    operator: "ifError",
                    message: V,
                    stackStartFn: S
                  }), tt = k.stack;
                  if (typeof tt == "string") {
                    var _ = tt.split(`
`);
                    _.shift();
                    for (var At = it.stack.split(`
`), Lt = 0; Lt < _.length; Lt++) {
                      var Yt = At.indexOf(_[Lt]);
                      if (Yt !== -1) {
                        At = At.slice(0, Yt);
                        break;
                      }
                    }
                    it.stack = "".concat(At.join(`
`), `
`).concat(_.join(`
`));
                  }
                  throw it;
                }
              };
              function Tt(S, k, V, it, tt) {
                if (!E(k))
                  throw new y("regexp", "RegExp", k);
                var _ = tt === "match";
                if (typeof S != "string" || P(k, S) !== _) {
                  if (V instanceof Error)
                    throw V;
                  var At = !V;
                  V = V || (typeof S != "string" ? 'The "string" argument must be of type string. Received type ' + "".concat(r(S), " (").concat(I(S), ")") : (_ ? "The input did not match the regular expression " : "The input was expected to not match the regular expression ") + "".concat(I(k), `. Input:

`).concat(I(S), `
`));
                  var Lt = new w({
                    actual: S,
                    expected: k,
                    message: V,
                    operator: tt,
                    stackStartFn: it
                  });
                  throw Lt.generatedMessage = At, Lt;
                }
              }
              ut.match = function S(k, V, it) {
                Tt(k, V, it, S, "match");
              }, ut.doesNotMatch = function S(k, V, it) {
                Tt(k, V, it, S, "doesNotMatch");
              };
              function z() {
                for (var S = arguments.length, k = new Array(S), V = 0; V < S; V++)
                  k[V] = arguments[V];
                xt.apply(void 0, [z, k.length].concat(k));
              }
              ut.strict = F(z, ut, {
                equal: ut.strictEqual,
                deepEqual: ut.deepStrictEqual,
                notEqual: ut.notStrictEqual,
                notDeepEqual: ut.notDeepStrictEqual
              }), ut.strict.strict = ut.strict;
            }
          ),
          /***/
          66979: (
            /***/
            function(u, d, t) {
              var o = t(82530);
              function r(Q, pt) {
                var ct = Object.keys(Q);
                if (Object.getOwnPropertySymbols) {
                  var ot = Object.getOwnPropertySymbols(Q);
                  pt && (ot = ot.filter(function(mt) {
                    return Object.getOwnPropertyDescriptor(Q, mt).enumerable;
                  })), ct.push.apply(ct, ot);
                }
                return ct;
              }
              function n(Q) {
                for (var pt = 1; pt < arguments.length; pt++) {
                  var ct = arguments[pt] != null ? arguments[pt] : {};
                  pt % 2 ? r(Object(ct), !0).forEach(function(ot) {
                    i(Q, ot, ct[ot]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Q, Object.getOwnPropertyDescriptors(ct)) : r(Object(ct)).forEach(function(ot) {
                    Object.defineProperty(Q, ot, Object.getOwnPropertyDescriptor(ct, ot));
                  });
                }
                return Q;
              }
              function i(Q, pt, ct) {
                return pt = h(pt), pt in Q ? Object.defineProperty(Q, pt, { value: ct, enumerable: !0, configurable: !0, writable: !0 }) : Q[pt] = ct, Q;
              }
              function f(Q, pt) {
                if (!(Q instanceof pt))
                  throw new TypeError("Cannot call a class as a function");
              }
              function l(Q, pt) {
                for (var ct = 0; ct < pt.length; ct++) {
                  var ot = pt[ct];
                  ot.enumerable = ot.enumerable || !1, ot.configurable = !0, "value" in ot && (ot.writable = !0), Object.defineProperty(Q, h(ot.key), ot);
                }
              }
              function c(Q, pt, ct) {
                return pt && l(Q.prototype, pt), ct && l(Q, ct), Object.defineProperty(Q, "prototype", { writable: !1 }), Q;
              }
              function h(Q) {
                var pt = a(Q, "string");
                return E(pt) === "symbol" ? pt : String(pt);
              }
              function a(Q, pt) {
                if (E(Q) !== "object" || Q === null)
                  return Q;
                var ct = Q[Symbol.toPrimitive];
                if (ct !== void 0) {
                  var ot = ct.call(Q, pt || "default");
                  if (E(ot) !== "object")
                    return ot;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (pt === "string" ? String : Number)(Q);
              }
              function v(Q, pt) {
                if (typeof pt != "function" && pt !== null)
                  throw new TypeError("Super expression must either be null or a function");
                Q.prototype = Object.create(pt && pt.prototype, { constructor: { value: Q, writable: !0, configurable: !0 } }), Object.defineProperty(Q, "prototype", { writable: !1 }), pt && T(Q, pt);
              }
              function y(Q) {
                var pt = D();
                return function() {
                  var ot = C(Q), mt;
                  if (pt) {
                    var G = C(this).constructor;
                    mt = Reflect.construct(ot, arguments, G);
                  } else
                    mt = ot.apply(this, arguments);
                  return g(this, mt);
                };
              }
              function g(Q, pt) {
                if (pt && (E(pt) === "object" || typeof pt == "function"))
                  return pt;
                if (pt !== void 0)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return e(Q);
              }
              function e(Q) {
                if (Q === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return Q;
              }
              function m(Q) {
                var pt = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
                return m = function(ot) {
                  if (ot === null || !I(ot))
                    return ot;
                  if (typeof ot != "function")
                    throw new TypeError("Super expression must either be null or a function");
                  if (typeof pt < "u") {
                    if (pt.has(ot))
                      return pt.get(ot);
                    pt.set(ot, mt);
                  }
                  function mt() {
                    return w(ot, arguments, C(this).constructor);
                  }
                  return mt.prototype = Object.create(ot.prototype, { constructor: { value: mt, enumerable: !1, writable: !0, configurable: !0 } }), T(mt, ot);
                }, m(Q);
              }
              function w(Q, pt, ct) {
                return D() ? w = Reflect.construct.bind() : w = function(mt, G, Tt) {
                  var z = [null];
                  z.push.apply(z, G);
                  var S = Function.bind.apply(mt, z), k = new S();
                  return Tt && T(k, Tt.prototype), k;
                }, w.apply(null, arguments);
              }
              function D() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), !0;
                } catch {
                  return !1;
                }
              }
              function I(Q) {
                return Function.toString.call(Q).indexOf("[native code]") !== -1;
              }
              function T(Q, pt) {
                return T = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(ot, mt) {
                  return ot.__proto__ = mt, ot;
                }, T(Q, pt);
              }
              function C(Q) {
                return C = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ct) {
                  return ct.__proto__ || Object.getPrototypeOf(ct);
                }, C(Q);
              }
              function E(Q) {
                "@babel/helpers - typeof";
                return E = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(pt) {
                  return typeof pt;
                } : function(pt) {
                  return pt && typeof Symbol == "function" && pt.constructor === Symbol && pt !== Symbol.prototype ? "symbol" : typeof pt;
                }, E(Q);
              }
              var F = t(85663), x = F.inspect, P = t(78619), L = P.codes.ERR_INVALID_ARG_TYPE;
              function N(Q, pt, ct) {
                return (ct === void 0 || ct > Q.length) && (ct = Q.length), Q.substring(ct - pt.length, ct) === pt;
              }
              function M(Q, pt) {
                if (pt = Math.floor(pt), Q.length == 0 || pt == 0)
                  return "";
                var ct = Q.length * pt;
                for (pt = Math.floor(Math.log(pt) / Math.log(2)); pt; )
                  Q += Q, pt--;
                return Q += Q.substring(0, ct - Q.length), Q;
              }
              var K = "", ut = "", J = "", rt = "", yt = {
                deepStrictEqual: "Expected values to be strictly deep-equal:",
                strictEqual: "Expected values to be strictly equal:",
                strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
                deepEqual: "Expected values to be loosely deep-equal:",
                equal: "Expected values to be loosely equal:",
                notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
                notStrictEqual: 'Expected "actual" to be strictly unequal to:',
                notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
                notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
                notEqual: 'Expected "actual" to be loosely unequal to:',
                notIdentical: "Values identical but not reference-equal:"
              }, xt = 10;
              function Et(Q) {
                var pt = Object.keys(Q), ct = Object.create(Object.getPrototypeOf(Q));
                return pt.forEach(function(ot) {
                  ct[ot] = Q[ot];
                }), Object.defineProperty(ct, "message", {
                  value: Q.message
                }), ct;
              }
              function Ft(Q) {
                return x(Q, {
                  compact: !1,
                  customInspect: !1,
                  depth: 1e3,
                  maxArrayLength: 1 / 0,
                  // Assert compares only enumerable properties (with a few exceptions).
                  showHidden: !1,
                  // Having a long line as error is better than wrapping the line for
                  // comparison for now.
                  // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we
                  // have meta information about the inspected properties (i.e., know where
                  // in what line the property starts and ends).
                  breakLength: 1 / 0,
                  // Assert does not detect proxies currently.
                  showProxy: !1,
                  sorted: !0,
                  // Inspect getters as we also check them when comparing entries.
                  getters: !0
                });
              }
              function Rt(Q, pt, ct) {
                var ot = "", mt = "", G = 0, Tt = "", z = !1, S = Ft(Q), k = S.split(`
`), V = Ft(pt).split(`
`), it = 0, tt = "";
                if (ct === "strictEqual" && E(Q) === "object" && E(pt) === "object" && Q !== null && pt !== null && (ct = "strictEqualObject"), k.length === 1 && V.length === 1 && k[0] !== V[0]) {
                  var _ = k[0].length + V[0].length;
                  if (_ <= xt) {
                    if ((E(Q) !== "object" || Q === null) && (E(pt) !== "object" || pt === null) && (Q !== 0 || pt !== 0))
                      return "".concat(yt[ct], `

`) + "".concat(k[0], " !== ").concat(V[0], `
`);
                  } else if (ct !== "strictEqualObject") {
                    var At = o.stderr && o.stderr.isTTY ? o.stderr.columns : 80;
                    if (_ < At) {
                      for (; k[0][it] === V[0][it]; )
                        it++;
                      it > 2 && (tt = `
  `.concat(M(" ", it), "^"), it = 0);
                    }
                  }
                }
                for (var Lt = k[k.length - 1], Yt = V[V.length - 1]; Lt === Yt && (it++ < 2 ? Tt = `
  `.concat(Lt).concat(Tt) : ot = Lt, k.pop(), V.pop(), !(k.length === 0 || V.length === 0)); )
                  Lt = k[k.length - 1], Yt = V[V.length - 1];
                var Gt = Math.max(k.length, V.length);
                if (Gt === 0) {
                  var Dt = S.split(`
`);
                  if (Dt.length > 30)
                    for (Dt[26] = "".concat(K, "...").concat(rt); Dt.length > 27; )
                      Dt.pop();
                  return "".concat(yt.notIdentical, `

`).concat(Dt.join(`
`), `
`);
                }
                it > 3 && (Tt = `
`.concat(K, "...").concat(rt).concat(Tt), z = !0), ot !== "" && (Tt = `
  `.concat(ot).concat(Tt), ot = "");
                var ae = 0, Ae = yt[ct] + `
`.concat(ut, "+ actual").concat(rt, " ").concat(J, "- expected").concat(rt), xe = " ".concat(K, "...").concat(rt, " Lines skipped");
                for (it = 0; it < Gt; it++) {
                  var ce = it - G;
                  if (k.length < it + 1)
                    ce > 1 && it > 2 && (ce > 4 ? (mt += `
`.concat(K, "...").concat(rt), z = !0) : ce > 3 && (mt += `
  `.concat(V[it - 2]), ae++), mt += `
  `.concat(V[it - 1]), ae++), G = it, ot += `
`.concat(J, "-").concat(rt, " ").concat(V[it]), ae++;
                  else if (V.length < it + 1)
                    ce > 1 && it > 2 && (ce > 4 ? (mt += `
`.concat(K, "...").concat(rt), z = !0) : ce > 3 && (mt += `
  `.concat(k[it - 2]), ae++), mt += `
  `.concat(k[it - 1]), ae++), G = it, mt += `
`.concat(ut, "+").concat(rt, " ").concat(k[it]), ae++;
                  else {
                    var we = V[it], zt = k[it], Qt = zt !== we && (!N(zt, ",") || zt.slice(0, -1) !== we);
                    Qt && N(we, ",") && we.slice(0, -1) === zt && (Qt = !1, zt += ","), Qt ? (ce > 1 && it > 2 && (ce > 4 ? (mt += `
`.concat(K, "...").concat(rt), z = !0) : ce > 3 && (mt += `
  `.concat(k[it - 2]), ae++), mt += `
  `.concat(k[it - 1]), ae++), G = it, mt += `
`.concat(ut, "+").concat(rt, " ").concat(zt), ot += `
`.concat(J, "-").concat(rt, " ").concat(we), ae += 2) : (mt += ot, ot = "", (ce === 1 || it === 0) && (mt += `
  `.concat(zt), ae++));
                  }
                  if (ae > 20 && it < Gt - 2)
                    return "".concat(Ae).concat(xe, `
`).concat(mt, `
`).concat(K, "...").concat(rt).concat(ot, `
`) + "".concat(K, "...").concat(rt);
                }
                return "".concat(Ae).concat(z ? xe : "", `
`).concat(mt).concat(ot).concat(Tt).concat(tt);
              }
              var Ut = /* @__PURE__ */ function(Q, pt) {
                v(ot, Q);
                var ct = y(ot);
                function ot(mt) {
                  var G;
                  if (f(this, ot), E(mt) !== "object" || mt === null)
                    throw new L("options", "Object", mt);
                  var Tt = mt.message, z = mt.operator, S = mt.stackStartFn, k = mt.actual, V = mt.expected, it = Error.stackTraceLimit;
                  if (Error.stackTraceLimit = 0, Tt != null)
                    G = ct.call(this, String(Tt));
                  else if (o.stderr && o.stderr.isTTY && (o.stderr && o.stderr.getColorDepth && o.stderr.getColorDepth() !== 1 ? (K = "\x1B[34m", ut = "\x1B[32m", rt = "\x1B[39m", J = "\x1B[31m") : (K = "", ut = "", rt = "", J = "")), E(k) === "object" && k !== null && E(V) === "object" && V !== null && "stack" in k && k instanceof Error && "stack" in V && V instanceof Error && (k = Et(k), V = Et(V)), z === "deepStrictEqual" || z === "strictEqual")
                    G = ct.call(this, Rt(k, V, z));
                  else if (z === "notDeepStrictEqual" || z === "notStrictEqual") {
                    var tt = yt[z], _ = Ft(k).split(`
`);
                    if (z === "notStrictEqual" && E(k) === "object" && k !== null && (tt = yt.notStrictEqualObject), _.length > 30)
                      for (_[26] = "".concat(K, "...").concat(rt); _.length > 27; )
                        _.pop();
                    _.length === 1 ? G = ct.call(this, "".concat(tt, " ").concat(_[0])) : G = ct.call(this, "".concat(tt, `

`).concat(_.join(`
`), `
`));
                  } else {
                    var At = Ft(k), Lt = "", Yt = yt[z];
                    z === "notDeepEqual" || z === "notEqual" ? (At = "".concat(yt[z], `

`).concat(At), At.length > 1024 && (At = "".concat(At.slice(0, 1021), "..."))) : (Lt = "".concat(Ft(V)), At.length > 512 && (At = "".concat(At.slice(0, 509), "...")), Lt.length > 512 && (Lt = "".concat(Lt.slice(0, 509), "...")), z === "deepEqual" || z === "equal" ? At = "".concat(Yt, `

`).concat(At, `

should equal

`) : Lt = " ".concat(z, " ").concat(Lt)), G = ct.call(this, "".concat(At).concat(Lt));
                  }
                  return Error.stackTraceLimit = it, G.generatedMessage = !Tt, Object.defineProperty(e(G), "name", {
                    value: "AssertionError [ERR_ASSERTION]",
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                  }), G.code = "ERR_ASSERTION", G.actual = k, G.expected = V, G.operator = z, Error.captureStackTrace && Error.captureStackTrace(e(G), S), G.stack, G.name = "AssertionError", g(G);
                }
                return c(ot, [{
                  key: "toString",
                  value: function() {
                    return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
                  }
                }, {
                  key: pt,
                  value: function(G, Tt) {
                    return x(this, n(n({}, Tt), {}, {
                      customInspect: !1,
                      depth: 0
                    }));
                  }
                }]), ot;
              }(/* @__PURE__ */ m(Error), x.custom);
              u.exports = Ut;
            }
          ),
          /***/
          78619: (
            /***/
            function(u, d, t) {
              function o(x) {
                "@babel/helpers - typeof";
                return o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(P) {
                  return typeof P;
                } : function(P) {
                  return P && typeof Symbol == "function" && P.constructor === Symbol && P !== Symbol.prototype ? "symbol" : typeof P;
                }, o(x);
              }
              function r(x, P) {
                for (var L = 0; L < P.length; L++) {
                  var N = P[L];
                  N.enumerable = N.enumerable || !1, N.configurable = !0, "value" in N && (N.writable = !0), Object.defineProperty(x, i(N.key), N);
                }
              }
              function n(x, P, L) {
                return P && r(x.prototype, P), L && r(x, L), Object.defineProperty(x, "prototype", { writable: !1 }), x;
              }
              function i(x) {
                var P = f(x, "string");
                return o(P) === "symbol" ? P : String(P);
              }
              function f(x, P) {
                if (o(x) !== "object" || x === null)
                  return x;
                var L = x[Symbol.toPrimitive];
                if (L !== void 0) {
                  var N = L.call(x, P || "default");
                  if (o(N) !== "object")
                    return N;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (P === "string" ? String : Number)(x);
              }
              function l(x, P) {
                if (!(x instanceof P))
                  throw new TypeError("Cannot call a class as a function");
              }
              function c(x, P) {
                if (typeof P != "function" && P !== null)
                  throw new TypeError("Super expression must either be null or a function");
                x.prototype = Object.create(P && P.prototype, { constructor: { value: x, writable: !0, configurable: !0 } }), Object.defineProperty(x, "prototype", { writable: !1 }), P && h(x, P);
              }
              function h(x, P) {
                return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, M) {
                  return N.__proto__ = M, N;
                }, h(x, P);
              }
              function a(x) {
                var P = g();
                return function() {
                  var N = e(x), M;
                  if (P) {
                    var K = e(this).constructor;
                    M = Reflect.construct(N, arguments, K);
                  } else
                    M = N.apply(this, arguments);
                  return v(this, M);
                };
              }
              function v(x, P) {
                if (P && (o(P) === "object" || typeof P == "function"))
                  return P;
                if (P !== void 0)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return y(x);
              }
              function y(x) {
                if (x === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return x;
              }
              function g() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), !0;
                } catch {
                  return !1;
                }
              }
              function e(x) {
                return e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(L) {
                  return L.__proto__ || Object.getPrototypeOf(L);
                }, e(x);
              }
              var m = {}, w, D;
              function I(x, P, L) {
                L || (L = Error);
                function N(K, ut, J) {
                  return typeof P == "string" ? P : P(K, ut, J);
                }
                var M = /* @__PURE__ */ function(K) {
                  c(J, K);
                  var ut = a(J);
                  function J(rt, yt, xt) {
                    var Et;
                    return l(this, J), Et = ut.call(this, N(rt, yt, xt)), Et.code = x, Et;
                  }
                  return n(J);
                }(L);
                m[x] = M;
              }
              function T(x, P) {
                if (Array.isArray(x)) {
                  var L = x.length;
                  return x = x.map(function(N) {
                    return String(N);
                  }), L > 2 ? "one of ".concat(P, " ").concat(x.slice(0, L - 1).join(", "), ", or ") + x[L - 1] : L === 2 ? "one of ".concat(P, " ").concat(x[0], " or ").concat(x[1]) : "of ".concat(P, " ").concat(x[0]);
                } else
                  return "of ".concat(P, " ").concat(String(x));
              }
              function C(x, P, L) {
                return x.substr(!L || L < 0 ? 0 : +L, P.length) === P;
              }
              function E(x, P, L) {
                return (L === void 0 || L > x.length) && (L = x.length), x.substring(L - P.length, L) === P;
              }
              function F(x, P, L) {
                return typeof L != "number" && (L = 0), L + P.length > x.length ? !1 : x.indexOf(P, L) !== -1;
              }
              I("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), I("ERR_INVALID_ARG_TYPE", function(x, P, L) {
                w === void 0 && (w = t(76118)), w(typeof x == "string", "'name' must be a string");
                var N;
                typeof P == "string" && C(P, "not ") ? (N = "must not be", P = P.replace(/^not /, "")) : N = "must be";
                var M;
                if (E(x, " argument"))
                  M = "The ".concat(x, " ").concat(N, " ").concat(T(P, "type"));
                else {
                  var K = F(x, ".") ? "property" : "argument";
                  M = 'The "'.concat(x, '" ').concat(K, " ").concat(N, " ").concat(T(P, "type"));
                }
                return M += ". Received type ".concat(o(L)), M;
              }, TypeError), I("ERR_INVALID_ARG_VALUE", function(x, P) {
                var L = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "is invalid";
                D === void 0 && (D = t(85663));
                var N = D.inspect(P);
                return N.length > 128 && (N = "".concat(N.slice(0, 128), "...")), "The argument '".concat(x, "' ").concat(L, ". Received ").concat(N);
              }, TypeError), I("ERR_INVALID_RETURN_VALUE", function(x, P, L) {
                var N;
                return L && L.constructor && L.constructor.name ? N = "instance of ".concat(L.constructor.name) : N = "type ".concat(o(L)), "Expected ".concat(x, ' to be returned from the "').concat(P, '"') + " function but got ".concat(N, ".");
              }, TypeError), I("ERR_MISSING_ARGS", function() {
                for (var x = arguments.length, P = new Array(x), L = 0; L < x; L++)
                  P[L] = arguments[L];
                w === void 0 && (w = t(76118)), w(P.length > 0, "At least one arg needs to be specified");
                var N = "The ", M = P.length;
                switch (P = P.map(function(K) {
                  return '"'.concat(K, '"');
                }), M) {
                  case 1:
                    N += "".concat(P[0], " argument");
                    break;
                  case 2:
                    N += "".concat(P[0], " and ").concat(P[1], " arguments");
                    break;
                  default:
                    N += P.slice(0, M - 1).join(", "), N += ", and ".concat(P[M - 1], " arguments");
                    break;
                }
                return "".concat(N, " must be specified");
              }, TypeError), u.exports.codes = m;
            }
          ),
          /***/
          61667: (
            /***/
            function(u, d, t) {
              function o(zt, Qt) {
                return l(zt) || f(zt, Qt) || n(zt, Qt) || r();
              }
              function r() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function n(zt, Qt) {
                if (zt) {
                  if (typeof zt == "string")
                    return i(zt, Qt);
                  var le = Object.prototype.toString.call(zt).slice(8, -1);
                  if (le === "Object" && zt.constructor && (le = zt.constructor.name), le === "Map" || le === "Set")
                    return Array.from(zt);
                  if (le === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(le))
                    return i(zt, Qt);
                }
              }
              function i(zt, Qt) {
                (Qt == null || Qt > zt.length) && (Qt = zt.length);
                for (var le = 0, de = new Array(Qt); le < Qt; le++)
                  de[le] = zt[le];
                return de;
              }
              function f(zt, Qt) {
                var le = zt == null ? null : typeof Symbol < "u" && zt[Symbol.iterator] || zt["@@iterator"];
                if (le != null) {
                  var de, be, Pe, Fe, It = [], fe = !0, st = !1;
                  try {
                    if (Pe = (le = le.call(zt)).next, Qt === 0) {
                      if (Object(le) !== le)
                        return;
                      fe = !1;
                    } else
                      for (; !(fe = (de = Pe.call(le)).done) && (It.push(de.value), It.length !== Qt); fe = !0)
                        ;
                  } catch (Y) {
                    st = !0, be = Y;
                  } finally {
                    try {
                      if (!fe && le.return != null && (Fe = le.return(), Object(Fe) !== Fe))
                        return;
                    } finally {
                      if (st)
                        throw be;
                    }
                  }
                  return It;
                }
              }
              function l(zt) {
                if (Array.isArray(zt))
                  return zt;
              }
              function c(zt) {
                "@babel/helpers - typeof";
                return c = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Qt) {
                  return typeof Qt;
                } : function(Qt) {
                  return Qt && typeof Symbol == "function" && Qt.constructor === Symbol && Qt !== Symbol.prototype ? "symbol" : typeof Qt;
                }, c(zt);
              }
              var h = /a/g.flags !== void 0, a = function(Qt) {
                var le = [];
                return Qt.forEach(function(de) {
                  return le.push(de);
                }), le;
              }, v = function(Qt) {
                var le = [];
                return Qt.forEach(function(de, be) {
                  return le.push([be, de]);
                }), le;
              }, y = Object.is ? Object.is : t(7402), g = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
                return [];
              }, e = Number.isNaN ? Number.isNaN : t(98622);
              function m(zt) {
                return zt.call.bind(zt);
              }
              var w = m(Object.prototype.hasOwnProperty), D = m(Object.prototype.propertyIsEnumerable), I = m(Object.prototype.toString), T = t(85663).types, C = T.isAnyArrayBuffer, E = T.isArrayBufferView, F = T.isDate, x = T.isMap, P = T.isRegExp, L = T.isSet, N = T.isNativeError, M = T.isBoxedPrimitive, K = T.isNumberObject, ut = T.isStringObject, J = T.isBooleanObject, rt = T.isBigIntObject, yt = T.isSymbolObject, xt = T.isFloat32Array, Et = T.isFloat64Array;
              function Ft(zt) {
                if (zt.length === 0 || zt.length > 10)
                  return !0;
                for (var Qt = 0; Qt < zt.length; Qt++) {
                  var le = zt.charCodeAt(Qt);
                  if (le < 48 || le > 57)
                    return !0;
                }
                return zt.length === 10 && zt >= Math.pow(2, 32);
              }
              function Rt(zt) {
                return Object.keys(zt).filter(Ft).concat(g(zt).filter(Object.prototype.propertyIsEnumerable.bind(zt)));
              }
              /*!
               * The buffer module from node.js, for the browser.
               *
               * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
               * @license  MIT
               */
              function Ut(zt, Qt) {
                if (zt === Qt)
                  return 0;
                for (var le = zt.length, de = Qt.length, be = 0, Pe = Math.min(le, de); be < Pe; ++be)
                  if (zt[be] !== Qt[be]) {
                    le = zt[be], de = Qt[be];
                    break;
                  }
                return le < de ? -1 : de < le ? 1 : 0;
              }
              var Q = !0, pt = !1, ct = 0, ot = 1, mt = 2, G = 3;
              function Tt(zt, Qt) {
                return h ? zt.source === Qt.source && zt.flags === Qt.flags : RegExp.prototype.toString.call(zt) === RegExp.prototype.toString.call(Qt);
              }
              function z(zt, Qt) {
                if (zt.byteLength !== Qt.byteLength)
                  return !1;
                for (var le = 0; le < zt.byteLength; le++)
                  if (zt[le] !== Qt[le])
                    return !1;
                return !0;
              }
              function S(zt, Qt) {
                return zt.byteLength !== Qt.byteLength ? !1 : Ut(new Uint8Array(zt.buffer, zt.byteOffset, zt.byteLength), new Uint8Array(Qt.buffer, Qt.byteOffset, Qt.byteLength)) === 0;
              }
              function k(zt, Qt) {
                return zt.byteLength === Qt.byteLength && Ut(new Uint8Array(zt), new Uint8Array(Qt)) === 0;
              }
              function V(zt, Qt) {
                return K(zt) ? K(Qt) && y(Number.prototype.valueOf.call(zt), Number.prototype.valueOf.call(Qt)) : ut(zt) ? ut(Qt) && String.prototype.valueOf.call(zt) === String.prototype.valueOf.call(Qt) : J(zt) ? J(Qt) && Boolean.prototype.valueOf.call(zt) === Boolean.prototype.valueOf.call(Qt) : rt(zt) ? rt(Qt) && BigInt.prototype.valueOf.call(zt) === BigInt.prototype.valueOf.call(Qt) : yt(Qt) && Symbol.prototype.valueOf.call(zt) === Symbol.prototype.valueOf.call(Qt);
              }
              function it(zt, Qt, le, de) {
                if (zt === Qt)
                  return zt !== 0 ? !0 : le ? y(zt, Qt) : !0;
                if (le) {
                  if (c(zt) !== "object")
                    return typeof zt == "number" && e(zt) && e(Qt);
                  if (c(Qt) !== "object" || zt === null || Qt === null || Object.getPrototypeOf(zt) !== Object.getPrototypeOf(Qt))
                    return !1;
                } else {
                  if (zt === null || c(zt) !== "object")
                    return Qt === null || c(Qt) !== "object" ? zt == Qt : !1;
                  if (Qt === null || c(Qt) !== "object")
                    return !1;
                }
                var be = I(zt), Pe = I(Qt);
                if (be !== Pe)
                  return !1;
                if (Array.isArray(zt)) {
                  if (zt.length !== Qt.length)
                    return !1;
                  var Fe = Rt(zt), It = Rt(Qt);
                  return Fe.length !== It.length ? !1 : _(zt, Qt, le, de, ot, Fe);
                }
                if (be === "[object Object]" && (!x(zt) && x(Qt) || !L(zt) && L(Qt)))
                  return !1;
                if (F(zt)) {
                  if (!F(Qt) || Date.prototype.getTime.call(zt) !== Date.prototype.getTime.call(Qt))
                    return !1;
                } else if (P(zt)) {
                  if (!P(Qt) || !Tt(zt, Qt))
                    return !1;
                } else if (N(zt) || zt instanceof Error) {
                  if (zt.message !== Qt.message || zt.name !== Qt.name)
                    return !1;
                } else if (E(zt)) {
                  if (!le && (xt(zt) || Et(zt))) {
                    if (!z(zt, Qt))
                      return !1;
                  } else if (!S(zt, Qt))
                    return !1;
                  var fe = Rt(zt), st = Rt(Qt);
                  return fe.length !== st.length ? !1 : _(zt, Qt, le, de, ct, fe);
                } else {
                  if (L(zt))
                    return !L(Qt) || zt.size !== Qt.size ? !1 : _(zt, Qt, le, de, mt);
                  if (x(zt))
                    return !x(Qt) || zt.size !== Qt.size ? !1 : _(zt, Qt, le, de, G);
                  if (C(zt)) {
                    if (!k(zt, Qt))
                      return !1;
                  } else if (M(zt) && !V(zt, Qt))
                    return !1;
                }
                return _(zt, Qt, le, de, ct);
              }
              function tt(zt, Qt) {
                return Qt.filter(function(le) {
                  return D(zt, le);
                });
              }
              function _(zt, Qt, le, de, be, Pe) {
                if (arguments.length === 5) {
                  Pe = Object.keys(zt);
                  var Fe = Object.keys(Qt);
                  if (Pe.length !== Fe.length)
                    return !1;
                }
                for (var It = 0; It < Pe.length; It++)
                  if (!w(Qt, Pe[It]))
                    return !1;
                if (le && arguments.length === 5) {
                  var fe = g(zt);
                  if (fe.length !== 0) {
                    var st = 0;
                    for (It = 0; It < fe.length; It++) {
                      var Y = fe[It];
                      if (D(zt, Y)) {
                        if (!D(Qt, Y))
                          return !1;
                        Pe.push(Y), st++;
                      } else if (D(Qt, Y))
                        return !1;
                    }
                    var j = g(Qt);
                    if (fe.length !== j.length && tt(Qt, j).length !== st)
                      return !1;
                  } else {
                    var bt = g(Qt);
                    if (bt.length !== 0 && tt(Qt, bt).length !== 0)
                      return !1;
                  }
                }
                if (Pe.length === 0 && (be === ct || be === ot && zt.length === 0 || zt.size === 0))
                  return !0;
                if (de === void 0)
                  de = {
                    val1: /* @__PURE__ */ new Map(),
                    val2: /* @__PURE__ */ new Map(),
                    position: 0
                  };
                else {
                  var at = de.val1.get(zt);
                  if (at !== void 0) {
                    var Wt = de.val2.get(Qt);
                    if (Wt !== void 0)
                      return at === Wt;
                  }
                  de.position++;
                }
                de.val1.set(zt, de.position), de.val2.set(Qt, de.position);
                var _t = xe(zt, Qt, le, Pe, de, be);
                return de.val1.delete(zt), de.val2.delete(Qt), _t;
              }
              function At(zt, Qt, le, de) {
                for (var be = a(zt), Pe = 0; Pe < be.length; Pe++) {
                  var Fe = be[Pe];
                  if (it(Qt, Fe, le, de))
                    return zt.delete(Fe), !0;
                }
                return !1;
              }
              function Lt(zt) {
                switch (c(zt)) {
                  case "undefined":
                    return null;
                  case "object":
                    return;
                  case "symbol":
                    return !1;
                  case "string":
                    zt = +zt;
                  case "number":
                    if (e(zt))
                      return !1;
                }
                return !0;
              }
              function Yt(zt, Qt, le) {
                var de = Lt(le);
                return de ?? (Qt.has(de) && !zt.has(de));
              }
              function Gt(zt, Qt, le, de, be) {
                var Pe = Lt(le);
                if (Pe != null)
                  return Pe;
                var Fe = Qt.get(Pe);
                return Fe === void 0 && !Qt.has(Pe) || !it(de, Fe, !1, be) ? !1 : !zt.has(Pe) && it(de, Fe, !1, be);
              }
              function Dt(zt, Qt, le, de) {
                for (var be = null, Pe = a(zt), Fe = 0; Fe < Pe.length; Fe++) {
                  var It = Pe[Fe];
                  if (c(It) === "object" && It !== null)
                    be === null && (be = /* @__PURE__ */ new Set()), be.add(It);
                  else if (!Qt.has(It)) {
                    if (le || !Yt(zt, Qt, It))
                      return !1;
                    be === null && (be = /* @__PURE__ */ new Set()), be.add(It);
                  }
                }
                if (be !== null) {
                  for (var fe = a(Qt), st = 0; st < fe.length; st++) {
                    var Y = fe[st];
                    if (c(Y) === "object" && Y !== null) {
                      if (!At(be, Y, le, de))
                        return !1;
                    } else if (!le && !zt.has(Y) && !At(be, Y, le, de))
                      return !1;
                  }
                  return be.size === 0;
                }
                return !0;
              }
              function ae(zt, Qt, le, de, be, Pe) {
                for (var Fe = a(zt), It = 0; It < Fe.length; It++) {
                  var fe = Fe[It];
                  if (it(le, fe, be, Pe) && it(de, Qt.get(fe), be, Pe))
                    return zt.delete(fe), !0;
                }
                return !1;
              }
              function Ae(zt, Qt, le, de) {
                for (var be = null, Pe = v(zt), Fe = 0; Fe < Pe.length; Fe++) {
                  var It = o(Pe[Fe], 2), fe = It[0], st = It[1];
                  if (c(fe) === "object" && fe !== null)
                    be === null && (be = /* @__PURE__ */ new Set()), be.add(fe);
                  else {
                    var Y = Qt.get(fe);
                    if (Y === void 0 && !Qt.has(fe) || !it(st, Y, le, de)) {
                      if (le || !Gt(zt, Qt, fe, st, de))
                        return !1;
                      be === null && (be = /* @__PURE__ */ new Set()), be.add(fe);
                    }
                  }
                }
                if (be !== null) {
                  for (var j = v(Qt), bt = 0; bt < j.length; bt++) {
                    var at = o(j[bt], 2), Wt = at[0], _t = at[1];
                    if (c(Wt) === "object" && Wt !== null) {
                      if (!ae(be, zt, Wt, _t, le, de))
                        return !1;
                    } else if (!le && (!zt.has(Wt) || !it(zt.get(Wt), _t, !1, de)) && !ae(be, zt, Wt, _t, !1, de))
                      return !1;
                  }
                  return be.size === 0;
                }
                return !0;
              }
              function xe(zt, Qt, le, de, be, Pe) {
                var Fe = 0;
                if (Pe === mt) {
                  if (!Dt(zt, Qt, le, be))
                    return !1;
                } else if (Pe === G) {
                  if (!Ae(zt, Qt, le, be))
                    return !1;
                } else if (Pe === ot)
                  for (; Fe < zt.length; Fe++)
                    if (w(zt, Fe)) {
                      if (!w(Qt, Fe) || !it(zt[Fe], Qt[Fe], le, be))
                        return !1;
                    } else {
                      if (w(Qt, Fe))
                        return !1;
                      for (var It = Object.keys(zt); Fe < It.length; Fe++) {
                        var fe = It[Fe];
                        if (!w(Qt, fe) || !it(zt[fe], Qt[fe], le, be))
                          return !1;
                      }
                      return It.length === Object.keys(Qt).length;
                    }
                for (Fe = 0; Fe < de.length; Fe++) {
                  var st = de[Fe];
                  if (!it(zt[st], Qt[st], le, be))
                    return !1;
                }
                return !0;
              }
              function ce(zt, Qt) {
                return it(zt, Qt, pt);
              }
              function we(zt, Qt) {
                return it(zt, Qt, Q);
              }
              u.exports = {
                isDeepEqual: ce,
                isDeepStrictEqual: we
              };
            }
          ),
          /***/
          5155: (
            /***/
            function(u, d) {
              d.byteLength = c, d.toByteArray = a, d.fromByteArray = g;
              for (var t = [], o = [], r = typeof Uint8Array < "u" ? Uint8Array : Array, n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, f = n.length; i < f; ++i)
                t[i] = n[i], o[n.charCodeAt(i)] = i;
              o["-".charCodeAt(0)] = 62, o["_".charCodeAt(0)] = 63;
              function l(e) {
                var m = e.length;
                if (m % 4 > 0)
                  throw new Error("Invalid string. Length must be a multiple of 4");
                var w = e.indexOf("=");
                w === -1 && (w = m);
                var D = w === m ? 0 : 4 - w % 4;
                return [w, D];
              }
              function c(e) {
                var m = l(e), w = m[0], D = m[1];
                return (w + D) * 3 / 4 - D;
              }
              function h(e, m, w) {
                return (m + w) * 3 / 4 - w;
              }
              function a(e) {
                var m, w = l(e), D = w[0], I = w[1], T = new r(h(e, D, I)), C = 0, E = I > 0 ? D - 4 : D, F;
                for (F = 0; F < E; F += 4)
                  m = o[e.charCodeAt(F)] << 18 | o[e.charCodeAt(F + 1)] << 12 | o[e.charCodeAt(F + 2)] << 6 | o[e.charCodeAt(F + 3)], T[C++] = m >> 16 & 255, T[C++] = m >> 8 & 255, T[C++] = m & 255;
                return I === 2 && (m = o[e.charCodeAt(F)] << 2 | o[e.charCodeAt(F + 1)] >> 4, T[C++] = m & 255), I === 1 && (m = o[e.charCodeAt(F)] << 10 | o[e.charCodeAt(F + 1)] << 4 | o[e.charCodeAt(F + 2)] >> 2, T[C++] = m >> 8 & 255, T[C++] = m & 255), T;
              }
              function v(e) {
                return t[e >> 18 & 63] + t[e >> 12 & 63] + t[e >> 6 & 63] + t[e & 63];
              }
              function y(e, m, w) {
                for (var D, I = [], T = m; T < w; T += 3)
                  D = (e[T] << 16 & 16711680) + (e[T + 1] << 8 & 65280) + (e[T + 2] & 255), I.push(v(D));
                return I.join("");
              }
              function g(e) {
                for (var m, w = e.length, D = w % 3, I = [], T = 16383, C = 0, E = w - D; C < E; C += T)
                  I.push(y(
                    e,
                    C,
                    C + T > E ? E : C + T
                  ));
                return D === 1 ? (m = e[w - 1], I.push(
                  t[m >> 2] + t[m << 4 & 63] + "=="
                )) : D === 2 && (m = (e[w - 2] << 8) + e[w - 1], I.push(
                  t[m >> 10] + t[m >> 4 & 63] + t[m << 2 & 63] + "="
                )), I.join("");
              }
            }
          ),
          /***/
          56887: (
            /***/
            function(u) {
              var d = 4096, t = 2 * d + 32, o = 2 * d - 1, r = new Uint32Array([
                0,
                1,
                3,
                7,
                15,
                31,
                63,
                127,
                255,
                511,
                1023,
                2047,
                4095,
                8191,
                16383,
                32767,
                65535,
                131071,
                262143,
                524287,
                1048575,
                2097151,
                4194303,
                8388607,
                16777215
              ]);
              function n(i) {
                this.buf_ = new Uint8Array(t), this.input_ = i, this.reset();
              }
              n.READ_SIZE = d, n.IBUF_MASK = o, n.prototype.reset = function() {
                this.buf_ptr_ = 0, this.val_ = 0, this.pos_ = 0, this.bit_pos_ = 0, this.bit_end_pos_ = 0, this.eos_ = 0, this.readMoreInput();
                for (var i = 0; i < 4; i++)
                  this.val_ |= this.buf_[this.pos_] << 8 * i, ++this.pos_;
                return this.bit_end_pos_ > 0;
              }, n.prototype.readMoreInput = function() {
                if (!(this.bit_end_pos_ > 256))
                  if (this.eos_) {
                    if (this.bit_pos_ > this.bit_end_pos_)
                      throw new Error("Unexpected end of input " + this.bit_pos_ + " " + this.bit_end_pos_);
                  } else {
                    var i = this.buf_ptr_, f = this.input_.read(this.buf_, i, d);
                    if (f < 0)
                      throw new Error("Unexpected end of input");
                    if (f < d) {
                      this.eos_ = 1;
                      for (var l = 0; l < 32; l++)
                        this.buf_[i + f + l] = 0;
                    }
                    if (i === 0) {
                      for (var l = 0; l < 32; l++)
                        this.buf_[(d << 1) + l] = this.buf_[l];
                      this.buf_ptr_ = d;
                    } else
                      this.buf_ptr_ = 0;
                    this.bit_end_pos_ += f << 3;
                  }
              }, n.prototype.fillBitWindow = function() {
                for (; this.bit_pos_ >= 8; )
                  this.val_ >>>= 8, this.val_ |= this.buf_[this.pos_ & o] << 24, ++this.pos_, this.bit_pos_ = this.bit_pos_ - 8 >>> 0, this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;
              }, n.prototype.readBits = function(i) {
                32 - this.bit_pos_ < i && this.fillBitWindow();
                var f = this.val_ >>> this.bit_pos_ & r[i];
                return this.bit_pos_ += i, f;
              }, u.exports = n;
            }
          ),
          /***/
          52150: (
            /***/
            function(u, d) {
              d.lookup = new Uint8Array([
                /* CONTEXT_UTF8, last byte. */
                /* ASCII range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                4,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                8,
                12,
                16,
                12,
                12,
                20,
                12,
                16,
                24,
                28,
                12,
                12,
                32,
                12,
                36,
                12,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                32,
                32,
                24,
                40,
                28,
                12,
                12,
                48,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                24,
                12,
                28,
                12,
                12,
                12,
                56,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                24,
                12,
                28,
                12,
                0,
                /* UTF8 continuation byte range. */
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                /* UTF8 lead byte range. */
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                /* CONTEXT_UTF8 second last byte. */
                /* ASCII range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                1,
                1,
                1,
                1,
                0,
                /* UTF8 continuation byte range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                /* UTF8 lead byte range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                /* CONTEXT_SIGNED, second last byte. */
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                7,
                /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */
                0,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                56,
                /* CONTEXT_LSB6, last byte. */
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                /* CONTEXT_MSB6, last byte. */
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                6,
                6,
                6,
                6,
                7,
                7,
                7,
                7,
                8,
                8,
                8,
                8,
                9,
                9,
                9,
                9,
                10,
                10,
                10,
                10,
                11,
                11,
                11,
                11,
                12,
                12,
                12,
                12,
                13,
                13,
                13,
                13,
                14,
                14,
                14,
                14,
                15,
                15,
                15,
                15,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                22,
                22,
                22,
                22,
                23,
                23,
                23,
                23,
                24,
                24,
                24,
                24,
                25,
                25,
                25,
                25,
                26,
                26,
                26,
                26,
                27,
                27,
                27,
                27,
                28,
                28,
                28,
                28,
                29,
                29,
                29,
                29,
                30,
                30,
                30,
                30,
                31,
                31,
                31,
                31,
                32,
                32,
                32,
                32,
                33,
                33,
                33,
                33,
                34,
                34,
                34,
                34,
                35,
                35,
                35,
                35,
                36,
                36,
                36,
                36,
                37,
                37,
                37,
                37,
                38,
                38,
                38,
                38,
                39,
                39,
                39,
                39,
                40,
                40,
                40,
                40,
                41,
                41,
                41,
                41,
                42,
                42,
                42,
                42,
                43,
                43,
                43,
                43,
                44,
                44,
                44,
                44,
                45,
                45,
                45,
                45,
                46,
                46,
                46,
                46,
                47,
                47,
                47,
                47,
                48,
                48,
                48,
                48,
                49,
                49,
                49,
                49,
                50,
                50,
                50,
                50,
                51,
                51,
                51,
                51,
                52,
                52,
                52,
                52,
                53,
                53,
                53,
                53,
                54,
                54,
                54,
                54,
                55,
                55,
                55,
                55,
                56,
                56,
                56,
                56,
                57,
                57,
                57,
                57,
                58,
                58,
                58,
                58,
                59,
                59,
                59,
                59,
                60,
                60,
                60,
                60,
                61,
                61,
                61,
                61,
                62,
                62,
                62,
                62,
                63,
                63,
                63,
                63,
                /* CONTEXT_{M,L}SB6, second last byte, */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ]), d.lookupOffsets = new Uint16Array([
                /* CONTEXT_LSB6 */
                1024,
                1536,
                /* CONTEXT_MSB6 */
                1280,
                1536,
                /* CONTEXT_UTF8 */
                0,
                256,
                /* CONTEXT_SIGNED */
                768,
                512
              ]);
            }
          ),
          /***/
          17217: (
            /***/
            function(u, d, t) {
              var o = t(46170).g, r = t(46170).j, n = t(56887), i = t(50227), f = t(33535).h, l = t(33535).g, c = t(52150), h = t(4008), a = t(22906), v = 8, y = 16, g = 256, e = 704, m = 26, w = 6, D = 2, I = 8, T = 255, C = 1080, E = 18, F = new Uint8Array([
                1,
                2,
                3,
                4,
                0,
                5,
                17,
                6,
                16,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]), x = 16, P = new Uint8Array([
                3,
                2,
                1,
                0,
                3,
                3,
                3,
                3,
                3,
                3,
                2,
                2,
                2,
                2,
                2,
                2
              ]), L = new Int8Array([
                0,
                0,
                0,
                0,
                -1,
                1,
                -2,
                2,
                -3,
                3,
                -1,
                1,
                -2,
                2,
                -3,
                3
              ]), N = new Uint16Array([
                256,
                402,
                436,
                468,
                500,
                534,
                566,
                598,
                630,
                662,
                694,
                726,
                758,
                790,
                822,
                854,
                886,
                920,
                952,
                984,
                1016,
                1048,
                1080
              ]);
              function M(S) {
                var k;
                return S.readBits(1) === 0 ? 16 : (k = S.readBits(3), k > 0 ? 17 + k : (k = S.readBits(3), k > 0 ? 8 + k : 17));
              }
              function K(S) {
                if (S.readBits(1)) {
                  var k = S.readBits(3);
                  return k === 0 ? 1 : S.readBits(k) + (1 << k);
                }
                return 0;
              }
              function ut() {
                this.meta_block_length = 0, this.input_end = 0, this.is_uncompressed = 0, this.is_metadata = !1;
              }
              function J(S) {
                var k = new ut(), V, it, tt;
                if (k.input_end = S.readBits(1), k.input_end && S.readBits(1))
                  return k;
                if (V = S.readBits(2) + 4, V === 7) {
                  if (k.is_metadata = !0, S.readBits(1) !== 0)
                    throw new Error("Invalid reserved bit");
                  if (it = S.readBits(2), it === 0)
                    return k;
                  for (tt = 0; tt < it; tt++) {
                    var _ = S.readBits(8);
                    if (tt + 1 === it && it > 1 && _ === 0)
                      throw new Error("Invalid size byte");
                    k.meta_block_length |= _ << tt * 8;
                  }
                } else
                  for (tt = 0; tt < V; ++tt) {
                    var At = S.readBits(4);
                    if (tt + 1 === V && V > 4 && At === 0)
                      throw new Error("Invalid size nibble");
                    k.meta_block_length |= At << tt * 4;
                  }
                return ++k.meta_block_length, !k.input_end && !k.is_metadata && (k.is_uncompressed = S.readBits(1)), k;
              }
              function rt(S, k, V) {
                var it;
                return V.fillBitWindow(), k += V.val_ >>> V.bit_pos_ & T, it = S[k].bits - I, it > 0 && (V.bit_pos_ += I, k += S[k].value, k += V.val_ >>> V.bit_pos_ & (1 << it) - 1), V.bit_pos_ += S[k].bits, S[k].value;
              }
              function yt(S, k, V, it) {
                for (var tt = 0, _ = v, At = 0, Lt = 0, Yt = 32768, Gt = [], Dt = 0; Dt < 32; Dt++)
                  Gt.push(new f(0, 0));
                for (l(Gt, 0, 5, S, E); tt < k && Yt > 0; ) {
                  var ae = 0, Ae;
                  if (it.readMoreInput(), it.fillBitWindow(), ae += it.val_ >>> it.bit_pos_ & 31, it.bit_pos_ += Gt[ae].bits, Ae = Gt[ae].value & 255, Ae < y)
                    At = 0, V[tt++] = Ae, Ae !== 0 && (_ = Ae, Yt -= 32768 >> Ae);
                  else {
                    var xe = Ae - 14, ce, we, zt = 0;
                    if (Ae === y && (zt = _), Lt !== zt && (At = 0, Lt = zt), ce = At, At > 0 && (At -= 2, At <<= xe), At += it.readBits(xe) + 3, we = At - ce, tt + we > k)
                      throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");
                    for (var Qt = 0; Qt < we; Qt++)
                      V[tt + Qt] = Lt;
                    tt += we, Lt !== 0 && (Yt -= we << 15 - Lt);
                  }
                }
                if (Yt !== 0)
                  throw new Error("[ReadHuffmanCodeLengths] space = " + Yt);
                for (; tt < k; tt++)
                  V[tt] = 0;
              }
              function xt(S, k, V, it) {
                var tt = 0, _, At = new Uint8Array(S);
                if (it.readMoreInput(), _ = it.readBits(2), _ === 1) {
                  for (var Lt, Yt = S - 1, Gt = 0, Dt = new Int32Array(4), ae = it.readBits(2) + 1; Yt; )
                    Yt >>= 1, ++Gt;
                  for (Lt = 0; Lt < ae; ++Lt)
                    Dt[Lt] = it.readBits(Gt) % S, At[Dt[Lt]] = 2;
                  switch (At[Dt[0]] = 1, ae) {
                    case 1:
                      break;
                    case 3:
                      if (Dt[0] === Dt[1] || Dt[0] === Dt[2] || Dt[1] === Dt[2])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      break;
                    case 2:
                      if (Dt[0] === Dt[1])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      At[Dt[1]] = 1;
                      break;
                    case 4:
                      if (Dt[0] === Dt[1] || Dt[0] === Dt[2] || Dt[0] === Dt[3] || Dt[1] === Dt[2] || Dt[1] === Dt[3] || Dt[2] === Dt[3])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      it.readBits(1) ? (At[Dt[2]] = 3, At[Dt[3]] = 3) : At[Dt[0]] = 2;
                      break;
                  }
                } else {
                  var Lt, Ae = new Uint8Array(E), xe = 32, ce = 0, we = [
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(3, 2),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(4, 1),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(3, 2),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(4, 5)
                  ];
                  for (Lt = _; Lt < E && xe > 0; ++Lt) {
                    var zt = F[Lt], Qt = 0, le;
                    it.fillBitWindow(), Qt += it.val_ >>> it.bit_pos_ & 15, it.bit_pos_ += we[Qt].bits, le = we[Qt].value, Ae[zt] = le, le !== 0 && (xe -= 32 >> le, ++ce);
                  }
                  if (!(ce === 1 || xe === 0))
                    throw new Error("[ReadHuffmanCode] invalid num_codes or space");
                  yt(Ae, S, At, it);
                }
                if (tt = l(k, V, I, At, S), tt === 0)
                  throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");
                return tt;
              }
              function Et(S, k, V) {
                var it, tt;
                return it = rt(S, k, V), tt = h.kBlockLengthPrefixCode[it].nbits, h.kBlockLengthPrefixCode[it].offset + V.readBits(tt);
              }
              function Ft(S, k, V) {
                var it;
                return S < x ? (V += P[S], V &= 3, it = k[V] + L[S]) : it = S - x + 1, it;
              }
              function Rt(S, k) {
                for (var V = S[k], it = k; it; --it)
                  S[it] = S[it - 1];
                S[0] = V;
              }
              function Ut(S, k) {
                var V = new Uint8Array(256), it;
                for (it = 0; it < 256; ++it)
                  V[it] = it;
                for (it = 0; it < k; ++it) {
                  var tt = S[it];
                  S[it] = V[tt], tt && Rt(V, tt);
                }
              }
              function Q(S, k) {
                this.alphabet_size = S, this.num_htrees = k, this.codes = new Array(k + k * N[S + 31 >>> 5]), this.htrees = new Uint32Array(k);
              }
              Q.prototype.decode = function(S) {
                var k, V, it = 0;
                for (k = 0; k < this.num_htrees; ++k)
                  this.htrees[k] = it, V = xt(this.alphabet_size, this.codes, it, S), it += V;
              };
              function pt(S, k) {
                var V = { num_htrees: null, context_map: null }, it, tt = 0, _, At;
                k.readMoreInput();
                var Lt = V.num_htrees = K(k) + 1, Yt = V.context_map = new Uint8Array(S);
                if (Lt <= 1)
                  return V;
                for (it = k.readBits(1), it && (tt = k.readBits(4) + 1), _ = [], At = 0; At < C; At++)
                  _[At] = new f(0, 0);
                for (xt(Lt + tt, _, 0, k), At = 0; At < S; ) {
                  var Gt;
                  if (k.readMoreInput(), Gt = rt(_, 0, k), Gt === 0)
                    Yt[At] = 0, ++At;
                  else if (Gt <= tt)
                    for (var Dt = 1 + (1 << Gt) + k.readBits(Gt); --Dt; ) {
                      if (At >= S)
                        throw new Error("[DecodeContextMap] i >= context_map_size");
                      Yt[At] = 0, ++At;
                    }
                  else
                    Yt[At] = Gt - tt, ++At;
                }
                return k.readBits(1) && Ut(Yt, S), V;
              }
              function ct(S, k, V, it, tt, _, At) {
                var Lt = V * 2, Yt = V, Gt = rt(k, V * C, At), Dt;
                Gt === 0 ? Dt = tt[Lt + (_[Yt] & 1)] : Gt === 1 ? Dt = tt[Lt + (_[Yt] - 1 & 1)] + 1 : Dt = Gt - 2, Dt >= S && (Dt -= S), it[V] = Dt, tt[Lt + (_[Yt] & 1)] = Dt, ++_[Yt];
              }
              function ot(S, k, V, it, tt, _) {
                var At = tt + 1, Lt = V & tt, Yt = _.pos_ & n.IBUF_MASK, Gt;
                if (k < 8 || _.bit_pos_ + (k << 3) < _.bit_end_pos_) {
                  for (; k-- > 0; )
                    _.readMoreInput(), it[Lt++] = _.readBits(8), Lt === At && (S.write(it, At), Lt = 0);
                  return;
                }
                if (_.bit_end_pos_ < 32)
                  throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");
                for (; _.bit_pos_ < 32; )
                  it[Lt] = _.val_ >>> _.bit_pos_, _.bit_pos_ += 8, ++Lt, --k;
                if (Gt = _.bit_end_pos_ - _.bit_pos_ >> 3, Yt + Gt > n.IBUF_MASK) {
                  for (var Dt = n.IBUF_MASK + 1 - Yt, ae = 0; ae < Dt; ae++)
                    it[Lt + ae] = _.buf_[Yt + ae];
                  Gt -= Dt, Lt += Dt, k -= Dt, Yt = 0;
                }
                for (var ae = 0; ae < Gt; ae++)
                  it[Lt + ae] = _.buf_[Yt + ae];
                if (Lt += Gt, k -= Gt, Lt >= At) {
                  S.write(it, At), Lt -= At;
                  for (var ae = 0; ae < Lt; ae++)
                    it[ae] = it[At + ae];
                }
                for (; Lt + k >= At; ) {
                  if (Gt = At - Lt, _.input_.read(it, Lt, Gt) < Gt)
                    throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                  S.write(it, At), k -= Gt, Lt = 0;
                }
                if (_.input_.read(it, Lt, k) < k)
                  throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                _.reset();
              }
              function mt(S) {
                var k = S.bit_pos_ + 7 & -8, V = S.readBits(k - S.bit_pos_);
                return V == 0;
              }
              function G(S) {
                var k = new o(S), V = new n(k);
                M(V);
                var it = J(V);
                return it.meta_block_length;
              }
              function Tt(S, k) {
                var V = new o(S);
                k == null && (k = G(S));
                var it = new Uint8Array(k), tt = new r(it);
                return z(V, tt), tt.pos < tt.buffer.length && (tt.buffer = tt.buffer.subarray(0, tt.pos)), tt.buffer;
              }
              d.BrotliDecompressBuffer = Tt;
              function z(S, k) {
                var V, it = 0, tt = 0, _ = 0, At, Lt = 0, Yt, Gt, Dt, ae, Ae = [16, 15, 11, 4], xe = 0, ce = 0, we = 0, zt = [new Q(0, 0), new Q(0, 0), new Q(0, 0)], Qt, le, de, be = 128 + n.READ_SIZE;
                de = new n(S), _ = M(de), At = (1 << _) - 16, Yt = 1 << _, Gt = Yt - 1, Dt = new Uint8Array(Yt + be + i.maxDictionaryWordLength), ae = Yt, Qt = [], le = [];
                for (var Pe = 0; Pe < 3 * C; Pe++)
                  Qt[Pe] = new f(0, 0), le[Pe] = new f(0, 0);
                for (; !tt; ) {
                  var Fe = 0, It, fe = [1 << 28, 1 << 28, 1 << 28], st = [0], Y = [1, 1, 1], j = [0, 1, 0, 1, 0, 1], bt = [0], at, Wt, _t, $, Jt = null, te = null, Ct, Ht = null, oe, Le = 0, De = null, ke = 0, Ne = 0, rn = null, tr = 0, Ze = 0, br = 0, Ir, Zr;
                  for (V = 0; V < 3; ++V)
                    zt[V].codes = null, zt[V].htrees = null;
                  de.readMoreInput();
                  var Cn = J(de);
                  if (Fe = Cn.meta_block_length, it + Fe > k.buffer.length) {
                    var Mn = new Uint8Array(it + Fe);
                    Mn.set(k.buffer), k.buffer = Mn;
                  }
                  if (tt = Cn.input_end, It = Cn.is_uncompressed, Cn.is_metadata) {
                    for (mt(de); Fe > 0; --Fe)
                      de.readMoreInput(), de.readBits(8);
                    continue;
                  }
                  if (Fe !== 0) {
                    if (It) {
                      de.bit_pos_ = de.bit_pos_ + 7 & -8, ot(
                        k,
                        Fe,
                        it,
                        Dt,
                        Gt,
                        de
                      ), it += Fe;
                      continue;
                    }
                    for (V = 0; V < 3; ++V)
                      Y[V] = K(de) + 1, Y[V] >= 2 && (xt(Y[V] + 2, Qt, V * C, de), xt(m, le, V * C, de), fe[V] = Et(le, V * C, de), bt[V] = 1);
                    for (de.readMoreInput(), at = de.readBits(2), Wt = x + (de.readBits(4) << at), _t = (1 << at) - 1, $ = Wt + (48 << at), te = new Uint8Array(Y[0]), V = 0; V < Y[0]; ++V)
                      de.readMoreInput(), te[V] = de.readBits(2) << 1;
                    var rr = pt(Y[0] << w, de);
                    Ct = rr.num_htrees, Jt = rr.context_map;
                    var nn = pt(Y[2] << D, de);
                    for (oe = nn.num_htrees, Ht = nn.context_map, zt[0] = new Q(g, Ct), zt[1] = new Q(e, Y[1]), zt[2] = new Q($, oe), V = 0; V < 3; ++V)
                      zt[V].decode(de);
                    for (De = 0, rn = 0, Ir = te[st[0]], Ze = c.lookupOffsets[Ir], br = c.lookupOffsets[Ir + 1], Zr = zt[1].htrees[0]; Fe > 0; ) {
                      var Mr, $r, Wr, Hn, jn, Ue, ze, Qe, ur, xn, wn;
                      for (de.readMoreInput(), fe[1] === 0 && (ct(
                        Y[1],
                        Qt,
                        1,
                        st,
                        j,
                        bt,
                        de
                      ), fe[1] = Et(le, C, de), Zr = zt[1].htrees[st[1]]), --fe[1], Mr = rt(zt[1].codes, Zr, de), $r = Mr >> 6, $r >= 2 ? ($r -= 2, ze = -1) : ze = 0, Wr = h.kInsertRangeLut[$r] + (Mr >> 3 & 7), Hn = h.kCopyRangeLut[$r] + (Mr & 7), jn = h.kInsertLengthPrefixCode[Wr].offset + de.readBits(h.kInsertLengthPrefixCode[Wr].nbits), Ue = h.kCopyLengthPrefixCode[Hn].offset + de.readBits(h.kCopyLengthPrefixCode[Hn].nbits), ce = Dt[it - 1 & Gt], we = Dt[it - 2 & Gt], xn = 0; xn < jn; ++xn)
                        de.readMoreInput(), fe[0] === 0 && (ct(
                          Y[0],
                          Qt,
                          0,
                          st,
                          j,
                          bt,
                          de
                        ), fe[0] = Et(le, 0, de), Le = st[0] << w, De = Le, Ir = te[st[0]], Ze = c.lookupOffsets[Ir], br = c.lookupOffsets[Ir + 1]), ur = c.lookup[Ze + ce] | c.lookup[br + we], ke = Jt[De + ur], --fe[0], we = ce, ce = rt(zt[0].codes, zt[0].htrees[ke], de), Dt[it & Gt] = ce, (it & Gt) === Gt && k.write(Dt, Yt), ++it;
                      if (Fe -= jn, Fe <= 0)
                        break;
                      if (ze < 0) {
                        var ur;
                        if (de.readMoreInput(), fe[2] === 0 && (ct(
                          Y[2],
                          Qt,
                          2,
                          st,
                          j,
                          bt,
                          de
                        ), fe[2] = Et(le, 2 * C, de), Ne = st[2] << D, rn = Ne), --fe[2], ur = (Ue > 4 ? 3 : Ue - 2) & 255, tr = Ht[rn + ur], ze = rt(zt[2].codes, zt[2].htrees[tr], de), ze >= Wt) {
                          var Yn, va, Kn;
                          ze -= Wt, va = ze & _t, ze >>= at, Yn = (ze >> 1) + 1, Kn = (2 + (ze & 1) << Yn) - 4, ze = Wt + (Kn + de.readBits(Yn) << at) + va;
                        }
                      }
                      if (Qe = Ft(ze, Ae, xe), Qe < 0)
                        throw new Error("[BrotliDecompress] invalid distance");
                      if (it < At && Lt !== At ? Lt = it : Lt = At, wn = it & Gt, Qe > Lt)
                        if (Ue >= i.minDictionaryWordLength && Ue <= i.maxDictionaryWordLength) {
                          var Kn = i.offsetsByLength[Ue], Jn = Qe - Lt - 1, Kt = i.sizeBitsByLength[Ue], Ot = (1 << Kt) - 1, re = Jn & Ot, Bt = Jn >> Kt;
                          if (Kn += re * Ue, Bt < a.kNumTransforms) {
                            var Nt = a.transformDictionaryWord(Dt, wn, Kn, Ue, Bt);
                            if (wn += Nt, it += Nt, Fe -= Nt, wn >= ae) {
                              k.write(Dt, Yt);
                              for (var Mt = 0; Mt < wn - ae; Mt++)
                                Dt[Mt] = Dt[ae + Mt];
                            }
                          } else
                            throw new Error("Invalid backward reference. pos: " + it + " distance: " + Qe + " len: " + Ue + " bytes left: " + Fe);
                        } else
                          throw new Error("Invalid backward reference. pos: " + it + " distance: " + Qe + " len: " + Ue + " bytes left: " + Fe);
                      else {
                        if (ze > 0 && (Ae[xe & 3] = Qe, ++xe), Ue > Fe)
                          throw new Error("Invalid backward reference. pos: " + it + " distance: " + Qe + " len: " + Ue + " bytes left: " + Fe);
                        for (xn = 0; xn < Ue; ++xn)
                          Dt[it & Gt] = Dt[it - Qe & Gt], (it & Gt) === Gt && k.write(Dt, Yt), ++it, --Fe;
                      }
                      ce = Dt[it - 1 & Gt], we = Dt[it - 2 & Gt];
                    }
                    it &= 1073741823;
                  }
                }
                k.write(Dt, it & Gt);
              }
              i.init();
            }
          ),
          /***/
          99373: (
            /***/
            function(u, d, t) {
              var o = t(5155);
              d.init = function() {
                var r = t(17217).BrotliDecompressBuffer, n = o.toByteArray(t(13019));
                return r(n);
              };
            }
          ),
          /***/
          13019: (
            /***/
            function(u) {
              u.exports = "";
            }
          ),
          /***/
          50227: (
            /***/
            function(u, d, t) {
              var o = t(99373);
              d.init = function() {
                d.dictionary = o.init();
              }, d.offsetsByLength = new Uint32Array([
                0,
                0,
                0,
                0,
                0,
                4096,
                9216,
                21504,
                35840,
                44032,
                53248,
                63488,
                74752,
                87040,
                93696,
                100864,
                104704,
                106752,
                108928,
                113536,
                115968,
                118528,
                119872,
                121280,
                122016
              ]), d.sizeBitsByLength = new Uint8Array([
                0,
                0,
                0,
                0,
                10,
                10,
                11,
                11,
                10,
                10,
                10,
                10,
                10,
                9,
                9,
                8,
                7,
                7,
                8,
                7,
                7,
                6,
                6,
                5,
                5
              ]), d.minDictionaryWordLength = 4, d.maxDictionaryWordLength = 24;
            }
          ),
          /***/
          33535: (
            /***/
            function(u, d) {
              function t(f, l) {
                this.bits = f, this.value = l;
              }
              d.h = t;
              var o = 15;
              function r(f, l) {
                for (var c = 1 << l - 1; f & c; )
                  c >>= 1;
                return (f & c - 1) + c;
              }
              function n(f, l, c, h, a) {
                do
                  h -= c, f[l + h] = new t(a.bits, a.value);
                while (h > 0);
              }
              function i(f, l, c) {
                for (var h = 1 << l - c; l < o && (h -= f[l], !(h <= 0)); )
                  ++l, h <<= 1;
                return l - c;
              }
              d.g = function(f, l, c, h, a) {
                var v = l, y, g, e, m, w, D, I, T, C, E, F, x = new Int32Array(o + 1), P = new Int32Array(o + 1);
                for (F = new Int32Array(a), e = 0; e < a; e++)
                  x[h[e]]++;
                for (P[1] = 0, g = 1; g < o; g++)
                  P[g + 1] = P[g] + x[g];
                for (e = 0; e < a; e++)
                  h[e] !== 0 && (F[P[h[e]]++] = e);
                if (T = c, C = 1 << T, E = C, P[o] === 1) {
                  for (m = 0; m < E; ++m)
                    f[l + m] = new t(0, F[0] & 65535);
                  return E;
                }
                for (m = 0, e = 0, g = 1, w = 2; g <= c; ++g, w <<= 1)
                  for (; x[g] > 0; --x[g])
                    y = new t(g & 255, F[e++] & 65535), n(f, l + m, w, C, y), m = r(m, g);
                for (I = E - 1, D = -1, g = c + 1, w = 2; g <= o; ++g, w <<= 1)
                  for (; x[g] > 0; --x[g])
                    (m & I) !== D && (l += C, T = i(x, g, c), C = 1 << T, E += C, D = m & I, f[v + D] = new t(T + c & 255, l - v - D & 65535)), y = new t(g - c & 255, F[e++] & 65535), n(f, l + (m >> c), w, C, y), m = r(m, g);
                return E;
              };
            }
          ),
          /***/
          4008: (
            /***/
            function(u, d) {
              function t(o, r) {
                this.offset = o, this.nbits = r;
              }
              d.kBlockLengthPrefixCode = [
                new t(1, 2),
                new t(5, 2),
                new t(9, 2),
                new t(13, 2),
                new t(17, 3),
                new t(25, 3),
                new t(33, 3),
                new t(41, 3),
                new t(49, 4),
                new t(65, 4),
                new t(81, 4),
                new t(97, 4),
                new t(113, 5),
                new t(145, 5),
                new t(177, 5),
                new t(209, 5),
                new t(241, 6),
                new t(305, 6),
                new t(369, 7),
                new t(497, 8),
                new t(753, 9),
                new t(1265, 10),
                new t(2289, 11),
                new t(4337, 12),
                new t(8433, 13),
                new t(16625, 24)
              ], d.kInsertLengthPrefixCode = [
                new t(0, 0),
                new t(1, 0),
                new t(2, 0),
                new t(3, 0),
                new t(4, 0),
                new t(5, 0),
                new t(6, 1),
                new t(8, 1),
                new t(10, 2),
                new t(14, 2),
                new t(18, 3),
                new t(26, 3),
                new t(34, 4),
                new t(50, 4),
                new t(66, 5),
                new t(98, 5),
                new t(130, 6),
                new t(194, 7),
                new t(322, 8),
                new t(578, 9),
                new t(1090, 10),
                new t(2114, 12),
                new t(6210, 14),
                new t(22594, 24)
              ], d.kCopyLengthPrefixCode = [
                new t(2, 0),
                new t(3, 0),
                new t(4, 0),
                new t(5, 0),
                new t(6, 0),
                new t(7, 0),
                new t(8, 0),
                new t(9, 0),
                new t(10, 1),
                new t(12, 1),
                new t(14, 2),
                new t(18, 2),
                new t(22, 3),
                new t(30, 3),
                new t(38, 4),
                new t(54, 4),
                new t(70, 5),
                new t(102, 5),
                new t(134, 6),
                new t(198, 7),
                new t(326, 8),
                new t(582, 9),
                new t(1094, 10),
                new t(2118, 24)
              ], d.kInsertRangeLut = [
                0,
                0,
                8,
                8,
                0,
                16,
                8,
                16,
                16
              ], d.kCopyRangeLut = [
                0,
                8,
                0,
                8,
                16,
                0,
                16,
                8,
                16
              ];
            }
          ),
          /***/
          46170: (
            /***/
            function(u, d) {
              function t(r) {
                this.buffer = r, this.pos = 0;
              }
              t.prototype.read = function(r, n, i) {
                this.pos + i > this.buffer.length && (i = this.buffer.length - this.pos);
                for (var f = 0; f < i; f++)
                  r[n + f] = this.buffer[this.pos + f];
                return this.pos += i, i;
              }, d.g = t;
              function o(r) {
                this.buffer = r, this.pos = 0;
              }
              o.prototype.write = function(r, n) {
                if (this.pos + n > this.buffer.length)
                  throw new Error("Output buffer is not large enough");
                return this.buffer.set(r.subarray(0, n), this.pos), this.pos += n, n;
              }, d.j = o;
            }
          ),
          /***/
          22906: (
            /***/
            function(u, d, t) {
              var o = t(50227), r = 0, n = 1, i = 2, f = 3, l = 4, c = 5, h = 6, a = 7, v = 8, y = 9, g = 10, e = 11, m = 12, w = 13, D = 14, I = 15, T = 16, C = 17, E = 18, F = 20;
              function x(N, M, K) {
                this.prefix = new Uint8Array(N.length), this.transform = M, this.suffix = new Uint8Array(K.length);
                for (var ut = 0; ut < N.length; ut++)
                  this.prefix[ut] = N.charCodeAt(ut);
                for (var ut = 0; ut < K.length; ut++)
                  this.suffix[ut] = K.charCodeAt(ut);
              }
              var P = [
                new x("", r, ""),
                new x("", r, " "),
                new x(" ", r, " "),
                new x("", m, ""),
                new x("", g, " "),
                new x("", r, " the "),
                new x(" ", r, ""),
                new x("s ", r, " "),
                new x("", r, " of "),
                new x("", g, ""),
                new x("", r, " and "),
                new x("", w, ""),
                new x("", n, ""),
                new x(", ", r, " "),
                new x("", r, ", "),
                new x(" ", g, " "),
                new x("", r, " in "),
                new x("", r, " to "),
                new x("e ", r, " "),
                new x("", r, '"'),
                new x("", r, "."),
                new x("", r, '">'),
                new x("", r, `
`),
                new x("", f, ""),
                new x("", r, "]"),
                new x("", r, " for "),
                new x("", D, ""),
                new x("", i, ""),
                new x("", r, " a "),
                new x("", r, " that "),
                new x(" ", g, ""),
                new x("", r, ". "),
                new x(".", r, ""),
                new x(" ", r, ", "),
                new x("", I, ""),
                new x("", r, " with "),
                new x("", r, "'"),
                new x("", r, " from "),
                new x("", r, " by "),
                new x("", T, ""),
                new x("", C, ""),
                new x(" the ", r, ""),
                new x("", l, ""),
                new x("", r, ". The "),
                new x("", e, ""),
                new x("", r, " on "),
                new x("", r, " as "),
                new x("", r, " is "),
                new x("", a, ""),
                new x("", n, "ing "),
                new x("", r, `
	`),
                new x("", r, ":"),
                new x(" ", r, ". "),
                new x("", r, "ed "),
                new x("", F, ""),
                new x("", E, ""),
                new x("", h, ""),
                new x("", r, "("),
                new x("", g, ", "),
                new x("", v, ""),
                new x("", r, " at "),
                new x("", r, "ly "),
                new x(" the ", r, " of "),
                new x("", c, ""),
                new x("", y, ""),
                new x(" ", g, ", "),
                new x("", g, '"'),
                new x(".", r, "("),
                new x("", e, " "),
                new x("", g, '">'),
                new x("", r, '="'),
                new x(" ", r, "."),
                new x(".com/", r, ""),
                new x(" the ", r, " of the "),
                new x("", g, "'"),
                new x("", r, ". This "),
                new x("", r, ","),
                new x(".", r, " "),
                new x("", g, "("),
                new x("", g, "."),
                new x("", r, " not "),
                new x(" ", r, '="'),
                new x("", r, "er "),
                new x(" ", e, " "),
                new x("", r, "al "),
                new x(" ", e, ""),
                new x("", r, "='"),
                new x("", e, '"'),
                new x("", g, ". "),
                new x(" ", r, "("),
                new x("", r, "ful "),
                new x(" ", g, ". "),
                new x("", r, "ive "),
                new x("", r, "less "),
                new x("", e, "'"),
                new x("", r, "est "),
                new x(" ", g, "."),
                new x("", e, '">'),
                new x(" ", r, "='"),
                new x("", g, ","),
                new x("", r, "ize "),
                new x("", e, "."),
                new x("ÃÂ ", r, ""),
                new x(" ", r, ","),
                new x("", g, '="'),
                new x("", e, '="'),
                new x("", r, "ous "),
                new x("", e, ", "),
                new x("", g, "='"),
                new x(" ", g, ","),
                new x(" ", e, '="'),
                new x(" ", e, ", "),
                new x("", e, ","),
                new x("", e, "("),
                new x("", e, ". "),
                new x(" ", e, "."),
                new x("", e, "='"),
                new x(" ", e, ". "),
                new x(" ", g, '="'),
                new x(" ", e, "='"),
                new x(" ", g, "='")
              ];
              d.kTransforms = P, d.kNumTransforms = P.length;
              function L(N, M) {
                return N[M] < 192 ? (N[M] >= 97 && N[M] <= 122 && (N[M] ^= 32), 1) : N[M] < 224 ? (N[M + 1] ^= 32, 2) : (N[M + 2] ^= 5, 3);
              }
              d.transformDictionaryWord = function(N, M, K, ut, J) {
                var rt = P[J].prefix, yt = P[J].suffix, xt = P[J].transform, Et = xt < m ? 0 : xt - (m - 1), Ft = 0, Rt = M, Ut;
                Et > ut && (Et = ut);
                for (var Q = 0; Q < rt.length; )
                  N[M++] = rt[Q++];
                for (K += Et, ut -= Et, xt <= y && (ut -= xt), Ft = 0; Ft < ut; Ft++)
                  N[M++] = o.dictionary[K + Ft];
                if (Ut = M - ut, xt === g)
                  L(N, Ut);
                else if (xt === e)
                  for (; ut > 0; ) {
                    var pt = L(N, Ut);
                    Ut += pt, ut -= pt;
                  }
                for (var ct = 0; ct < yt.length; )
                  N[M++] = yt[ct++];
                return M - Rt;
              };
            }
          ),
          /***/
          49435: (
            /***/
            function(u, d, t) {
              u.exports = t(17217).BrotliDecompressBuffer;
            }
          ),
          /***/
          30539: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer, r = t(82530), n = t(76118), i = t(28755), f = t(24349), l = t(3386), c = t(40549);
              for (var h in c)
                d[h] = c[h];
              d.NONE = 0, d.DEFLATE = 1, d.INFLATE = 2, d.GZIP = 3, d.GUNZIP = 4, d.DEFLATERAW = 5, d.INFLATERAW = 6, d.UNZIP = 7;
              var a = 31, v = 139;
              function y(g) {
                if (typeof g != "number" || g < d.DEFLATE || g > d.UNZIP)
                  throw new TypeError("Bad argument");
                this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = !1, this.level = 0, this.memLevel = 0, this.mode = g, this.strategy = 0, this.windowBits = 0, this.write_in_progress = !1, this.pending_close = !1, this.gzip_id_bytes_read = 0;
              }
              y.prototype.close = function() {
                if (this.write_in_progress) {
                  this.pending_close = !0;
                  return;
                }
                this.pending_close = !1, n(this.init_done, "close before init"), n(this.mode <= d.UNZIP), this.mode === d.DEFLATE || this.mode === d.GZIP || this.mode === d.DEFLATERAW ? f.deflateEnd(this.strm) : (this.mode === d.INFLATE || this.mode === d.GUNZIP || this.mode === d.INFLATERAW || this.mode === d.UNZIP) && l.inflateEnd(this.strm), this.mode = d.NONE, this.dictionary = null;
              }, y.prototype.write = function(g, e, m, w, D, I, T) {
                return this._write(!0, g, e, m, w, D, I, T);
              }, y.prototype.writeSync = function(g, e, m, w, D, I, T) {
                return this._write(!1, g, e, m, w, D, I, T);
              }, y.prototype._write = function(g, e, m, w, D, I, T, C) {
                if (n.equal(arguments.length, 8), n(this.init_done, "write before init"), n(this.mode !== d.NONE, "already finalized"), n.equal(!1, this.write_in_progress, "write already in progress"), n.equal(!1, this.pending_close, "close is pending"), this.write_in_progress = !0, n.equal(!1, e === void 0, "must provide flush value"), this.write_in_progress = !0, e !== d.Z_NO_FLUSH && e !== d.Z_PARTIAL_FLUSH && e !== d.Z_SYNC_FLUSH && e !== d.Z_FULL_FLUSH && e !== d.Z_FINISH && e !== d.Z_BLOCK)
                  throw new Error("Invalid flush value");
                if (m == null && (m = o.alloc(0), D = 0, w = 0), this.strm.avail_in = D, this.strm.input = m, this.strm.next_in = w, this.strm.avail_out = C, this.strm.output = I, this.strm.next_out = T, this.flush = e, !g)
                  return this._process(), this._checkError() ? this._afterSync() : void 0;
                var E = this;
                return r.nextTick(function() {
                  E._process(), E._after();
                }), this;
              }, y.prototype._afterSync = function() {
                var g = this.strm.avail_out, e = this.strm.avail_in;
                return this.write_in_progress = !1, [e, g];
              }, y.prototype._process = function() {
                var g = null;
                switch (this.mode) {
                  case d.DEFLATE:
                  case d.GZIP:
                  case d.DEFLATERAW:
                    this.err = f.deflate(this.strm, this.flush);
                    break;
                  case d.UNZIP:
                    switch (this.strm.avail_in > 0 && (g = this.strm.next_in), this.gzip_id_bytes_read) {
                      case 0:
                        if (g === null)
                          break;
                        if (this.strm.input[g] === a) {
                          if (this.gzip_id_bytes_read = 1, g++, this.strm.avail_in === 1)
                            break;
                        } else {
                          this.mode = d.INFLATE;
                          break;
                        }
                      case 1:
                        if (g === null)
                          break;
                        this.strm.input[g] === v ? (this.gzip_id_bytes_read = 2, this.mode = d.GUNZIP) : this.mode = d.INFLATE;
                        break;
                      default:
                        throw new Error("invalid number of gzip magic number bytes read");
                    }
                  case d.INFLATE:
                  case d.GUNZIP:
                  case d.INFLATERAW:
                    for (this.err = l.inflate(
                      this.strm,
                      this.flush
                      // If data was encoded with dictionary
                    ), this.err === d.Z_NEED_DICT && this.dictionary && (this.err = l.inflateSetDictionary(this.strm, this.dictionary), this.err === d.Z_OK ? this.err = l.inflate(this.strm, this.flush) : this.err === d.Z_DATA_ERROR && (this.err = d.Z_NEED_DICT)); this.strm.avail_in > 0 && this.mode === d.GUNZIP && this.err === d.Z_STREAM_END && this.strm.next_in[0] !== 0; )
                      this.reset(), this.err = l.inflate(this.strm, this.flush);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
              }, y.prototype._checkError = function() {
                switch (this.err) {
                  case d.Z_OK:
                  case d.Z_BUF_ERROR:
                    if (this.strm.avail_out !== 0 && this.flush === d.Z_FINISH)
                      return this._error("unexpected end of file"), !1;
                    break;
                  case d.Z_STREAM_END:
                    break;
                  case d.Z_NEED_DICT:
                    return this.dictionary == null ? this._error("Missing dictionary") : this._error("Bad dictionary"), !1;
                  default:
                    return this._error("Zlib error"), !1;
                }
                return !0;
              }, y.prototype._after = function() {
                if (this._checkError()) {
                  var g = this.strm.avail_out, e = this.strm.avail_in;
                  this.write_in_progress = !1, this.callback(e, g), this.pending_close && this.close();
                }
              }, y.prototype._error = function(g) {
                this.strm.msg && (g = this.strm.msg), this.onerror(
                  g,
                  this.err
                  // no hope of rescue.
                ), this.write_in_progress = !1, this.pending_close && this.close();
              }, y.prototype.init = function(g, e, m, w, D) {
                n(arguments.length === 4 || arguments.length === 5, "init(windowBits, level, memLevel, strategy, [dictionary])"), n(g >= 8 && g <= 15, "invalid windowBits"), n(e >= -1 && e <= 9, "invalid compression level"), n(m >= 1 && m <= 9, "invalid memlevel"), n(w === d.Z_FILTERED || w === d.Z_HUFFMAN_ONLY || w === d.Z_RLE || w === d.Z_FIXED || w === d.Z_DEFAULT_STRATEGY, "invalid strategy"), this._init(e, g, m, w, D), this._setDictionary();
              }, y.prototype.params = function() {
                throw new Error("deflateParams Not supported");
              }, y.prototype.reset = function() {
                this._reset(), this._setDictionary();
              }, y.prototype._init = function(g, e, m, w, D) {
                switch (this.level = g, this.windowBits = e, this.memLevel = m, this.strategy = w, this.flush = d.Z_NO_FLUSH, this.err = d.Z_OK, (this.mode === d.GZIP || this.mode === d.GUNZIP) && (this.windowBits += 16), this.mode === d.UNZIP && (this.windowBits += 32), (this.mode === d.DEFLATERAW || this.mode === d.INFLATERAW) && (this.windowBits = -1 * this.windowBits), this.strm = new i(), this.mode) {
                  case d.DEFLATE:
                  case d.GZIP:
                  case d.DEFLATERAW:
                    this.err = f.deflateInit2(this.strm, this.level, d.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
                    break;
                  case d.INFLATE:
                  case d.GUNZIP:
                  case d.INFLATERAW:
                  case d.UNZIP:
                    this.err = l.inflateInit2(this.strm, this.windowBits);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
                this.err !== d.Z_OK && this._error("Init error"), this.dictionary = D, this.write_in_progress = !1, this.init_done = !0;
              }, y.prototype._setDictionary = function() {
                if (this.dictionary != null) {
                  switch (this.err = d.Z_OK, this.mode) {
                    case d.DEFLATE:
                    case d.DEFLATERAW:
                      this.err = f.deflateSetDictionary(this.strm, this.dictionary);
                      break;
                  }
                  this.err !== d.Z_OK && this._error("Failed to set dictionary");
                }
              }, y.prototype._reset = function() {
                switch (this.err = d.Z_OK, this.mode) {
                  case d.DEFLATE:
                  case d.DEFLATERAW:
                  case d.GZIP:
                    this.err = f.deflateReset(this.strm);
                    break;
                  case d.INFLATE:
                  case d.INFLATERAW:
                  case d.GUNZIP:
                    this.err = l.inflateReset(this.strm);
                    break;
                }
                this.err !== d.Z_OK && this._error("Failed to reset stream");
              }, d.Zlib = y;
            }
          ),
          /***/
          63339: (
            /***/
            function(u, d, t) {
              var o = t(82530), r = t(43060).Buffer, n = t(20202).Transform, i = t(30539), f = t(85663), l = t(76118).ok, c = t(43060).kMaxLength, h = "Cannot create final Buffer. It would be larger than 0x" + c.toString(16) + " bytes";
              i.Z_MIN_WINDOWBITS = 8, i.Z_MAX_WINDOWBITS = 15, i.Z_DEFAULT_WINDOWBITS = 15, i.Z_MIN_CHUNK = 64, i.Z_MAX_CHUNK = 1 / 0, i.Z_DEFAULT_CHUNK = 16384, i.Z_MIN_MEMLEVEL = 1, i.Z_MAX_MEMLEVEL = 9, i.Z_DEFAULT_MEMLEVEL = 8, i.Z_MIN_LEVEL = -1, i.Z_MAX_LEVEL = 9, i.Z_DEFAULT_LEVEL = i.Z_DEFAULT_COMPRESSION;
              for (var a = Object.keys(i), v = 0; v < a.length; v++) {
                var y = a[v];
                y.match(/^Z/) && Object.defineProperty(d, y, {
                  enumerable: !0,
                  value: i[y],
                  writable: !1
                });
              }
              for (var g = {
                Z_OK: i.Z_OK,
                Z_STREAM_END: i.Z_STREAM_END,
                Z_NEED_DICT: i.Z_NEED_DICT,
                Z_ERRNO: i.Z_ERRNO,
                Z_STREAM_ERROR: i.Z_STREAM_ERROR,
                Z_DATA_ERROR: i.Z_DATA_ERROR,
                Z_MEM_ERROR: i.Z_MEM_ERROR,
                Z_BUF_ERROR: i.Z_BUF_ERROR,
                Z_VERSION_ERROR: i.Z_VERSION_ERROR
              }, e = Object.keys(g), m = 0; m < e.length; m++) {
                var w = e[m];
                g[g[w]] = w;
              }
              Object.defineProperty(d, "codes", {
                enumerable: !0,
                value: Object.freeze(g),
                writable: !1
              }), d.Deflate = T, d.Inflate = C, d.Gzip = E, d.Gunzip = F, d.DeflateRaw = x, d.InflateRaw = P, d.Unzip = L, d.createDeflate = function(J) {
                return new T(J);
              }, d.createInflate = function(J) {
                return new C(J);
              }, d.createDeflateRaw = function(J) {
                return new x(J);
              }, d.createInflateRaw = function(J) {
                return new P(J);
              }, d.createGzip = function(J) {
                return new E(J);
              }, d.createGunzip = function(J) {
                return new F(J);
              }, d.createUnzip = function(J) {
                return new L(J);
              }, d.deflate = function(J, rt, yt) {
                return typeof rt == "function" && (yt = rt, rt = {}), D(new T(rt), J, yt);
              }, d.deflateSync = function(J, rt) {
                return I(new T(rt), J);
              }, d.gzip = function(J, rt, yt) {
                return typeof rt == "function" && (yt = rt, rt = {}), D(new E(rt), J, yt);
              }, d.gzipSync = function(J, rt) {
                return I(new E(rt), J);
              }, d.deflateRaw = function(J, rt, yt) {
                return typeof rt == "function" && (yt = rt, rt = {}), D(new x(rt), J, yt);
              }, d.deflateRawSync = function(J, rt) {
                return I(new x(rt), J);
              }, d.unzip = function(J, rt, yt) {
                return typeof rt == "function" && (yt = rt, rt = {}), D(new L(rt), J, yt);
              }, d.unzipSync = function(J, rt) {
                return I(new L(rt), J);
              }, d.inflate = function(J, rt, yt) {
                return typeof rt == "function" && (yt = rt, rt = {}), D(new C(rt), J, yt);
              }, d.inflateSync = function(J, rt) {
                return I(new C(rt), J);
              }, d.gunzip = function(J, rt, yt) {
                return typeof rt == "function" && (yt = rt, rt = {}), D(new F(rt), J, yt);
              }, d.gunzipSync = function(J, rt) {
                return I(new F(rt), J);
              }, d.inflateRaw = function(J, rt, yt) {
                return typeof rt == "function" && (yt = rt, rt = {}), D(new P(rt), J, yt);
              }, d.inflateRawSync = function(J, rt) {
                return I(new P(rt), J);
              };
              function D(J, rt, yt) {
                var xt = [], Et = 0;
                J.on("error", Rt), J.on("end", Ut), J.end(rt), Ft();
                function Ft() {
                  for (var Q; (Q = J.read()) !== null; )
                    xt.push(Q), Et += Q.length;
                  J.once("readable", Ft);
                }
                function Rt(Q) {
                  J.removeListener("end", Ut), J.removeListener("readable", Ft), yt(Q);
                }
                function Ut() {
                  var Q, pt = null;
                  Et >= c ? pt = new RangeError(h) : Q = r.concat(xt, Et), xt = [], J.close(), yt(pt, Q);
                }
              }
              function I(J, rt) {
                if (typeof rt == "string" && (rt = r.from(rt)), !r.isBuffer(rt))
                  throw new TypeError("Not a string or buffer");
                var yt = J._finishFlushFlag;
                return J._processChunk(rt, yt);
              }
              function T(J) {
                if (!(this instanceof T))
                  return new T(J);
                M.call(this, J, i.DEFLATE);
              }
              function C(J) {
                if (!(this instanceof C))
                  return new C(J);
                M.call(this, J, i.INFLATE);
              }
              function E(J) {
                if (!(this instanceof E))
                  return new E(J);
                M.call(this, J, i.GZIP);
              }
              function F(J) {
                if (!(this instanceof F))
                  return new F(J);
                M.call(this, J, i.GUNZIP);
              }
              function x(J) {
                if (!(this instanceof x))
                  return new x(J);
                M.call(this, J, i.DEFLATERAW);
              }
              function P(J) {
                if (!(this instanceof P))
                  return new P(J);
                M.call(this, J, i.INFLATERAW);
              }
              function L(J) {
                if (!(this instanceof L))
                  return new L(J);
                M.call(this, J, i.UNZIP);
              }
              function N(J) {
                return J === i.Z_NO_FLUSH || J === i.Z_PARTIAL_FLUSH || J === i.Z_SYNC_FLUSH || J === i.Z_FULL_FLUSH || J === i.Z_FINISH || J === i.Z_BLOCK;
              }
              function M(J, rt) {
                var yt = this;
                if (this._opts = J = J || {}, this._chunkSize = J.chunkSize || d.Z_DEFAULT_CHUNK, n.call(this, J), J.flush && !N(J.flush))
                  throw new Error("Invalid flush flag: " + J.flush);
                if (J.finishFlush && !N(J.finishFlush))
                  throw new Error("Invalid flush flag: " + J.finishFlush);
                if (this._flushFlag = J.flush || i.Z_NO_FLUSH, this._finishFlushFlag = typeof J.finishFlush < "u" ? J.finishFlush : i.Z_FINISH, J.chunkSize && (J.chunkSize < d.Z_MIN_CHUNK || J.chunkSize > d.Z_MAX_CHUNK))
                  throw new Error("Invalid chunk size: " + J.chunkSize);
                if (J.windowBits && (J.windowBits < d.Z_MIN_WINDOWBITS || J.windowBits > d.Z_MAX_WINDOWBITS))
                  throw new Error("Invalid windowBits: " + J.windowBits);
                if (J.level && (J.level < d.Z_MIN_LEVEL || J.level > d.Z_MAX_LEVEL))
                  throw new Error("Invalid compression level: " + J.level);
                if (J.memLevel && (J.memLevel < d.Z_MIN_MEMLEVEL || J.memLevel > d.Z_MAX_MEMLEVEL))
                  throw new Error("Invalid memLevel: " + J.memLevel);
                if (J.strategy && J.strategy != d.Z_FILTERED && J.strategy != d.Z_HUFFMAN_ONLY && J.strategy != d.Z_RLE && J.strategy != d.Z_FIXED && J.strategy != d.Z_DEFAULT_STRATEGY)
                  throw new Error("Invalid strategy: " + J.strategy);
                if (J.dictionary && !r.isBuffer(J.dictionary))
                  throw new Error("Invalid dictionary: it should be a Buffer instance");
                this._handle = new i.Zlib(rt);
                var xt = this;
                this._hadError = !1, this._handle.onerror = function(Rt, Ut) {
                  K(xt), xt._hadError = !0;
                  var Q = new Error(Rt);
                  Q.errno = Ut, Q.code = d.codes[Ut], xt.emit("error", Q);
                };
                var Et = d.Z_DEFAULT_COMPRESSION;
                typeof J.level == "number" && (Et = J.level);
                var Ft = d.Z_DEFAULT_STRATEGY;
                typeof J.strategy == "number" && (Ft = J.strategy), this._handle.init(J.windowBits || d.Z_DEFAULT_WINDOWBITS, Et, J.memLevel || d.Z_DEFAULT_MEMLEVEL, Ft, J.dictionary), this._buffer = r.allocUnsafe(this._chunkSize), this._offset = 0, this._level = Et, this._strategy = Ft, this.once("end", this.close), Object.defineProperty(this, "_closed", {
                  get: function() {
                    return !yt._handle;
                  },
                  configurable: !0,
                  enumerable: !0
                });
              }
              f.inherits(M, n), M.prototype.params = function(J, rt, yt) {
                if (J < d.Z_MIN_LEVEL || J > d.Z_MAX_LEVEL)
                  throw new RangeError("Invalid compression level: " + J);
                if (rt != d.Z_FILTERED && rt != d.Z_HUFFMAN_ONLY && rt != d.Z_RLE && rt != d.Z_FIXED && rt != d.Z_DEFAULT_STRATEGY)
                  throw new TypeError("Invalid strategy: " + rt);
                if (this._level !== J || this._strategy !== rt) {
                  var xt = this;
                  this.flush(i.Z_SYNC_FLUSH, function() {
                    l(xt._handle, "zlib binding closed"), xt._handle.params(J, rt), xt._hadError || (xt._level = J, xt._strategy = rt, yt && yt());
                  });
                } else
                  o.nextTick(yt);
              }, M.prototype.reset = function() {
                return l(this._handle, "zlib binding closed"), this._handle.reset();
              }, M.prototype._flush = function(J) {
                this._transform(r.alloc(0), "", J);
              }, M.prototype.flush = function(J, rt) {
                var yt = this, xt = this._writableState;
                (typeof J == "function" || J === void 0 && !rt) && (rt = J, J = i.Z_FULL_FLUSH), xt.ended ? rt && o.nextTick(rt) : xt.ending ? rt && this.once("end", rt) : xt.needDrain ? rt && this.once("drain", function() {
                  return yt.flush(J, rt);
                }) : (this._flushFlag = J, this.write(r.alloc(0), "", rt));
              }, M.prototype.close = function(J) {
                K(this, J), o.nextTick(ut, this);
              };
              function K(J, rt) {
                rt && o.nextTick(rt), J._handle && (J._handle.close(), J._handle = null);
              }
              function ut(J) {
                J.emit("close");
              }
              M.prototype._transform = function(J, rt, yt) {
                var xt, Et = this._writableState, Ft = Et.ending || Et.ended, Rt = Ft && (!J || Et.length === J.length);
                if (J !== null && !r.isBuffer(J))
                  return yt(new Error("invalid input"));
                if (!this._handle)
                  return yt(new Error("zlib binding closed"));
                Rt ? xt = this._finishFlushFlag : (xt = this._flushFlag, J.length >= Et.length && (this._flushFlag = this._opts.flush || i.Z_NO_FLUSH)), this._processChunk(J, xt, yt);
              }, M.prototype._processChunk = function(J, rt, yt) {
                var xt = J && J.length, Et = this._chunkSize - this._offset, Ft = 0, Rt = this, Ut = typeof yt == "function";
                if (!Ut) {
                  var Q = [], pt = 0, ct;
                  this.on("error", function(z) {
                    ct = z;
                  }), l(this._handle, "zlib binding closed");
                  do
                    var ot = this._handle.writeSync(
                      rt,
                      J,
                      // in
                      Ft,
                      // in_off
                      xt,
                      // in_len
                      this._buffer,
                      // out
                      this._offset,
                      //out_off
                      Et
                    );
                  while (!this._hadError && Tt(ot[0], ot[1]));
                  if (this._hadError)
                    throw ct;
                  if (pt >= c)
                    throw K(this), new RangeError(h);
                  var mt = r.concat(Q, pt);
                  return K(this), mt;
                }
                l(this._handle, "zlib binding closed");
                var G = this._handle.write(
                  rt,
                  J,
                  // in
                  Ft,
                  // in_off
                  xt,
                  // in_len
                  this._buffer,
                  // out
                  this._offset,
                  //out_off
                  Et
                );
                G.buffer = J, G.callback = Tt;
                function Tt(z, S) {
                  if (this && (this.buffer = null, this.callback = null), !Rt._hadError) {
                    var k = Et - S;
                    if (l(k >= 0, "have should not go down"), k > 0) {
                      var V = Rt._buffer.slice(Rt._offset, Rt._offset + k);
                      Rt._offset += k, Ut ? Rt.push(V) : (Q.push(V), pt += V.length);
                    }
                    if ((S === 0 || Rt._offset >= Rt._chunkSize) && (Et = Rt._chunkSize, Rt._offset = 0, Rt._buffer = r.allocUnsafe(Rt._chunkSize)), S === 0) {
                      if (Ft += xt - z, xt = z, !Ut)
                        return !0;
                      var it = Rt._handle.write(rt, J, Ft, xt, Rt._buffer, Rt._offset, Rt._chunkSize);
                      it.callback = Tt, it.buffer = J;
                      return;
                    }
                    if (!Ut)
                      return !1;
                    yt();
                  }
                }
              }, f.inherits(T, M), f.inherits(C, M), f.inherits(E, M), f.inherits(F, M), f.inherits(x, M), f.inherits(P, M), f.inherits(L, M);
            }
          ),
          /***/
          97615: (
            /***/
            function(u, d, t) {
              var o = t(31801), r = t(12550), n = r(o("String.prototype.indexOf"));
              u.exports = function(f, l) {
                var c = o(f, !!l);
                return typeof c == "function" && n(f, ".prototype.") > -1 ? r(c) : c;
              };
            }
          ),
          /***/
          12550: (
            /***/
            function(u, d, t) {
              var o = t(21930), r = t(31801), n = t(34521), i = r("%TypeError%"), f = r("%Function.prototype.apply%"), l = r("%Function.prototype.call%"), c = r("%Reflect.apply%", !0) || o.call(l, f), h = r("%Object.defineProperty%", !0), a = r("%Math.max%");
              if (h)
                try {
                  h({}, "a", { value: 1 });
                } catch {
                  h = null;
                }
              u.exports = function(g) {
                if (typeof g != "function")
                  throw new i("a function is required");
                var e = c(o, l, arguments);
                return n(
                  e,
                  1 + a(0, g.length - (arguments.length - 1)),
                  !0
                );
              };
              var v = function() {
                return c(o, f, arguments);
              };
              h ? h(u.exports, "apply", { value: v }) : u.exports.apply = v;
            }
          ),
          /***/
          72986: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer, r = function() {
                function n(a, v, y, g) {
                  typeof v == "object" && (y = v.depth, g = v.prototype, v.filter, v = v.circular);
                  var e = [], m = [], w = typeof o < "u";
                  typeof v > "u" && (v = !0), typeof y > "u" && (y = 1 / 0);
                  function D(I, T) {
                    if (I === null)
                      return null;
                    if (T == 0)
                      return I;
                    var C, E;
                    if (typeof I != "object")
                      return I;
                    if (n.__isArray(I))
                      C = [];
                    else if (n.__isRegExp(I))
                      C = new RegExp(I.source, h(I)), I.lastIndex && (C.lastIndex = I.lastIndex);
                    else if (n.__isDate(I))
                      C = new Date(I.getTime());
                    else {
                      if (w && o.isBuffer(I))
                        return o.allocUnsafe ? C = o.allocUnsafe(I.length) : C = new o(I.length), I.copy(C), C;
                      typeof g > "u" ? (E = Object.getPrototypeOf(I), C = Object.create(E)) : (C = Object.create(g), E = g);
                    }
                    if (v) {
                      var F = e.indexOf(I);
                      if (F != -1)
                        return m[F];
                      e.push(I), m.push(C);
                    }
                    for (var x in I) {
                      var P;
                      E && (P = Object.getOwnPropertyDescriptor(E, x)), !(P && P.set == null) && (C[x] = D(I[x], T - 1));
                    }
                    return C;
                  }
                  return D(a, y);
                }
                n.clonePrototype = function(v) {
                  if (v === null)
                    return null;
                  var y = function() {
                  };
                  return y.prototype = v, new y();
                };
                function i(a) {
                  return Object.prototype.toString.call(a);
                }
                n.__objToStr = i;
                function f(a) {
                  return typeof a == "object" && i(a) === "[object Date]";
                }
                n.__isDate = f;
                function l(a) {
                  return typeof a == "object" && i(a) === "[object Array]";
                }
                n.__isArray = l;
                function c(a) {
                  return typeof a == "object" && i(a) === "[object RegExp]";
                }
                n.__isRegExp = c;
                function h(a) {
                  var v = "";
                  return a.global && (v += "g"), a.ignoreCase && (v += "i"), a.multiline && (v += "m"), v;
                }
                return n.__getRegExpFlags = h, n;
              }();
              u.exports && (u.exports = r);
            }
          ),
          /***/
          67367: (
            /***/
            function(u, d, t) {
              t(19457);
              var o = t(67290);
              u.exports = o.Object.values;
            }
          ),
          /***/
          55047: (
            /***/
            function(u, d, t) {
              t(55739), t(54883), t(10853), t(35054), t(12382), t(487), t(27138), t(45007);
              var o = t(67290);
              u.exports = o.Promise;
            }
          ),
          /***/
          46121: (
            /***/
            function(u, d, t) {
              var o = t(80623);
              t(85506), t(38634), t(8108), t(67298), u.exports = o;
            }
          ),
          /***/
          97676: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(75277), n = t(28768), i = o.TypeError;
              u.exports = function(f) {
                if (r(f))
                  return f;
                throw i(n(f) + " is not a function");
              };
            }
          ),
          /***/
          43327: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(31536), n = t(28768), i = o.TypeError;
              u.exports = function(f) {
                if (r(f))
                  return f;
                throw i(n(f) + " is not a constructor");
              };
            }
          ),
          /***/
          75017: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(75277), n = o.String, i = o.TypeError;
              u.exports = function(f) {
                if (typeof f == "object" || r(f))
                  return f;
                throw i("Can't set " + n(f) + " as a prototype");
              };
            }
          ),
          /***/
          6677: (
            /***/
            function(u, d, t) {
              var o = t(52280), r = t(51569), n = t(86385), i = o("unscopables"), f = Array.prototype;
              f[i] == null && n.f(f, i, {
                configurable: !0,
                value: r(null)
              }), u.exports = function(l) {
                f[i][l] = !0;
              };
            }
          ),
          /***/
          13350: (
            /***/
            function(u, d, t) {
              var o = t(91140).charAt;
              u.exports = function(r, n, i) {
                return n + (i ? o(r, n).length : 1);
              };
            }
          ),
          /***/
          9519: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(32010), n = o.TypeError;
              u.exports = function(i, f) {
                if (r(f, i))
                  return i;
                throw n("Incorrect invocation");
              };
            }
          ),
          /***/
          83875: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(52786), n = o.String, i = o.TypeError;
              u.exports = function(f) {
                if (r(f))
                  return f;
                throw i(n(f) + " is not an object");
              };
            }
          ),
          /***/
          28794: (
            /***/
            function(u, d, t) {
              var o = t(30744), r = t(32565), n = t(47046), i = Math.min;
              u.exports = [].copyWithin || function(l, c) {
                var h = o(this), a = n(h), v = r(l, a), y = r(c, a), g = arguments.length > 2 ? arguments[2] : void 0, e = i((g === void 0 ? a : r(g, a)) - y, a - v), m = 1;
                for (y < v && v < y + e && (m = -1, y += e - 1, v += e - 1); e-- > 0; )
                  y in h ? h[v] = h[y] : delete h[v], v += m, y += m;
                return h;
              };
            }
          ),
          /***/
          55522: (
            /***/
            function(u, d, t) {
              var o = t(30744), r = t(32565), n = t(47046);
              u.exports = function(f) {
                for (var l = o(this), c = n(l), h = arguments.length, a = r(h > 1 ? arguments[1] : void 0, c), v = h > 2 ? arguments[2] : void 0, y = v === void 0 ? c : r(v, c); y > a; )
                  l[a++] = f;
                return l;
              };
            }
          ),
          /***/
          20379: (
            /***/
            function(u, d, t) {
              var o = t(68671).forEach, r = t(54324), n = r("forEach");
              u.exports = n ? [].forEach : function(f) {
                return o(this, f, arguments.length > 1 ? arguments[1] : void 0);
              };
            }
          ),
          /***/
          65626: (
            /***/
            function(u) {
              u.exports = function(d, t) {
                for (var o = 0, r = t.length, n = new d(r); r > o; )
                  n[o] = t[o++];
                return n;
              };
            }
          ),
          /***/
          84899: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(98166), n = t(79611), i = t(30744), f = t(9637), l = t(68089), c = t(31536), h = t(47046), a = t(35039), v = t(11805), y = t(77193), g = o.Array;
              u.exports = function(m) {
                var w = i(m), D = c(this), I = arguments.length, T = I > 1 ? arguments[1] : void 0, C = T !== void 0;
                C && (T = r(T, I > 2 ? arguments[2] : void 0));
                var E = y(w), F = 0, x, P, L, N, M, K;
                if (E && !(this == g && l(E)))
                  for (N = v(w, E), M = N.next, P = D ? new this() : []; !(L = n(M, N)).done; F++)
                    K = C ? f(N, T, [L.value, F], !0) : L.value, a(P, F, K);
                else
                  for (x = h(w), P = D ? new this(x) : g(x); x > F; F++)
                    K = C ? T(w[F], F) : w[F], a(P, F, K);
                return P.length = F, P;
              };
            }
          ),
          /***/
          37190: (
            /***/
            function(u, d, t) {
              var o = t(29580), r = t(32565), n = t(47046), i = function(f) {
                return function(l, c, h) {
                  var a = o(l), v = n(a), y = r(h, v), g;
                  if (f && c != c) {
                    for (; v > y; )
                      if (g = a[y++], g != g)
                        return !0;
                  } else
                    for (; v > y; y++)
                      if ((f || y in a) && a[y] === c)
                        return f || y || 0;
                  return !f && -1;
                };
              };
              u.exports = {
                // `Array.prototype.includes` method
                // https://tc39.es/ecma262/#sec-array.prototype.includes
                includes: i(!0),
                // `Array.prototype.indexOf` method
                // https://tc39.es/ecma262/#sec-array.prototype.indexof
                indexOf: i(!1)
              };
            }
          ),
          /***/
          68671: (
            /***/
            function(u, d, t) {
              var o = t(98166), r = t(88697), n = t(78609), i = t(30744), f = t(47046), l = t(80150), c = r([].push), h = function(a) {
                var v = a == 1, y = a == 2, g = a == 3, e = a == 4, m = a == 6, w = a == 7, D = a == 5 || m;
                return function(I, T, C, E) {
                  for (var F = i(I), x = n(F), P = o(T, C), L = f(x), N = 0, M = E || l, K = v ? M(I, L) : y || w ? M(I, 0) : void 0, ut, J; L > N; N++)
                    if ((D || N in x) && (ut = x[N], J = P(ut, N, F), a))
                      if (v)
                        K[N] = J;
                      else if (J)
                        switch (a) {
                          case 3:
                            return !0;
                          case 5:
                            return ut;
                          case 6:
                            return N;
                          case 2:
                            c(K, ut);
                        }
                      else
                        switch (a) {
                          case 4:
                            return !1;
                          case 7:
                            c(K, ut);
                        }
                  return m ? -1 : g || e ? e : K;
                };
              };
              u.exports = {
                // `Array.prototype.forEach` method
                // https://tc39.es/ecma262/#sec-array.prototype.foreach
                forEach: h(0),
                // `Array.prototype.map` method
                // https://tc39.es/ecma262/#sec-array.prototype.map
                map: h(1),
                // `Array.prototype.filter` method
                // https://tc39.es/ecma262/#sec-array.prototype.filter
                filter: h(2),
                // `Array.prototype.some` method
                // https://tc39.es/ecma262/#sec-array.prototype.some
                some: h(3),
                // `Array.prototype.every` method
                // https://tc39.es/ecma262/#sec-array.prototype.every
                every: h(4),
                // `Array.prototype.find` method
                // https://tc39.es/ecma262/#sec-array.prototype.find
                find: h(5),
                // `Array.prototype.findIndex` method
                // https://tc39.es/ecma262/#sec-array.prototype.findIndex
                findIndex: h(6),
                // `Array.prototype.filterReject` method
                // https://github.com/tc39/proposal-array-filtering
                filterReject: h(7)
              };
            }
          ),
          /***/
          27837: (
            /***/
            function(u, d, t) {
              var o = t(63530), r = t(29580), n = t(14229), i = t(47046), f = t(54324), l = Math.min, c = [].lastIndexOf, h = !!c && 1 / [1].lastIndexOf(1, -0) < 0, a = f("lastIndexOf"), v = h || !a;
              u.exports = v ? function(g) {
                if (h)
                  return o(c, this, arguments) || 0;
                var e = r(this), m = i(e), w = m - 1;
                for (arguments.length > 1 && (w = l(w, n(arguments[1]))), w < 0 && (w = m + w); w >= 0; w--)
                  if (w in e && e[w] === g)
                    return w || 0;
                return -1;
              } : c;
            }
          ),
          /***/
          82091: (
            /***/
            function(u, d, t) {
              var o = t(79044), r = t(52280), n = t(11197), i = r("species");
              u.exports = function(f) {
                return n >= 51 || !o(function() {
                  var l = [], c = l.constructor = {};
                  return c[i] = function() {
                    return { foo: 1 };
                  }, l[f](Boolean).foo !== 1;
                });
              };
            }
          ),
          /***/
          54324: (
            /***/
            function(u, d, t) {
              var o = t(79044);
              u.exports = function(r, n) {
                var i = [][r];
                return !!i && o(function() {
                  i.call(null, n || function() {
                    throw 1;
                  }, 1);
                });
              };
            }
          ),
          /***/
          86596: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(97676), n = t(30744), i = t(78609), f = t(47046), l = o.TypeError, c = function(h) {
                return function(a, v, y, g) {
                  r(v);
                  var e = n(a), m = i(e), w = f(e), D = h ? w - 1 : 0, I = h ? -1 : 1;
                  if (y < 2)
                    for (; ; ) {
                      if (D in m) {
                        g = m[D], D += I;
                        break;
                      }
                      if (D += I, h ? D < 0 : w <= D)
                        throw l("Reduce of empty array with no initial value");
                    }
                  for (; h ? D >= 0 : w > D; D += I)
                    D in m && (g = v(g, m[D], D, e));
                  return g;
                };
              };
              u.exports = {
                // `Array.prototype.reduce` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduce
                left: c(!1),
                // `Array.prototype.reduceRight` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduceright
                right: c(!0)
              };
            }
          ),
          /***/
          15629: (
            /***/
            function(u, d, t) {
              var o = t(88697);
              u.exports = o([].slice);
            }
          ),
          /***/
          2013: (
            /***/
            function(u, d, t) {
              var o = t(15629), r = Math.floor, n = function(l, c) {
                var h = l.length, a = r(h / 2);
                return h < 8 ? i(l, c) : f(
                  l,
                  n(o(l, 0, a), c),
                  n(o(l, a), c),
                  c
                );
              }, i = function(l, c) {
                for (var h = l.length, a = 1, v, y; a < h; ) {
                  for (y = a, v = l[a]; y && c(l[y - 1], v) > 0; )
                    l[y] = l[--y];
                  y !== a++ && (l[y] = v);
                }
                return l;
              }, f = function(l, c, h, a) {
                for (var v = c.length, y = h.length, g = 0, e = 0; g < v || e < y; )
                  l[g + e] = g < v && e < y ? a(c[g], h[e]) <= 0 ? c[g++] : h[e++] : g < v ? c[g++] : h[e++];
                return l;
              };
              u.exports = n;
            }
          ),
          /***/
          30765: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(71982), n = t(31536), i = t(52786), f = t(52280), l = f("species"), c = o.Array;
              u.exports = function(h) {
                var a;
                return r(h) && (a = h.constructor, n(a) && (a === c || r(a.prototype)) ? a = void 0 : i(a) && (a = a[l], a === null && (a = void 0))), a === void 0 ? c : a;
              };
            }
          ),
          /***/
          80150: (
            /***/
            function(u, d, t) {
              var o = t(30765);
              u.exports = function(r, n) {
                return new (o(r))(n === 0 ? 0 : n);
              };
            }
          ),
          /***/
          9637: (
            /***/
            function(u, d, t) {
              var o = t(83875), r = t(18744);
              u.exports = function(n, i, f, l) {
                try {
                  return l ? i(o(f)[0], f[1]) : i(f);
                } catch (c) {
                  r(n, "throw", c);
                }
              };
            }
          ),
          /***/
          8662: (
            /***/
            function(u, d, t) {
              var o = t(52280), r = o("iterator"), n = !1;
              try {
                var i = 0, f = {
                  next: function() {
                    return { done: !!i++ };
                  },
                  return: function() {
                    n = !0;
                  }
                };
                f[r] = function() {
                  return this;
                }, Array.from(f, function() {
                  throw 2;
                });
              } catch {
              }
              u.exports = function(l, c) {
                if (!c && !n)
                  return !1;
                var h = !1;
                try {
                  var a = {};
                  a[r] = function() {
                    return {
                      next: function() {
                        return { done: h = !0 };
                      }
                    };
                  }, l(a);
                } catch {
                }
                return h;
              };
            }
          ),
          /***/
          79159: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = o({}.toString), n = o("".slice);
              u.exports = function(i) {
                return n(r(i), 8, -1);
              };
            }
          ),
          /***/
          36994: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(57301), n = t(75277), i = t(79159), f = t(52280), l = f("toStringTag"), c = o.Object, h = i(function() {
                return arguments;
              }()) == "Arguments", a = function(v, y) {
                try {
                  return v[y];
                } catch {
                }
              };
              u.exports = r ? i : function(v) {
                var y, g, e;
                return v === void 0 ? "Undefined" : v === null ? "Null" : typeof (g = a(y = c(v), l)) == "string" ? g : h ? i(y) : (e = i(y)) == "Object" && n(y.callee) ? "Arguments" : e;
              };
            }
          ),
          /***/
          8457: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(15629), n = o("".replace), i = o("".split), f = o([].join), l = function(v) {
                return String(Error(v).stack);
              }("zxcasd"), c = /\n\s*at [^:]*:[^\n]*/, h = c.test(l), a = /@[^\n]*\n/.test(l) && !/zxcasd/.test(l);
              u.exports = function(v, y) {
                if (typeof v != "string")
                  return v;
                if (h)
                  for (; y--; )
                    v = n(v, c, "");
                else if (a)
                  return f(r(i(v, `
`), y), `
`);
                return v;
              };
            }
          ),
          /***/
          33513: (
            /***/
            function(u, d, t) {
              var o = t(86385).f, r = t(51569), n = t(7592), i = t(98166), f = t(9519), l = t(5166), c = t(61495), h = t(57323), a = t(7493), v = t(44296).fastKey, y = t(20821), g = y.set, e = y.getterFor;
              u.exports = {
                getConstructor: function(m, w, D, I) {
                  var T = m(function(P, L) {
                    f(P, C), g(P, {
                      type: w,
                      index: r(null),
                      first: void 0,
                      last: void 0,
                      size: 0
                    }), a || (P.size = 0), L != null && l(L, P[I], { that: P, AS_ENTRIES: D });
                  }), C = T.prototype, E = e(w), F = function(P, L, N) {
                    var M = E(P), K = x(P, L), ut, J;
                    return K ? K.value = N : (M.last = K = {
                      index: J = v(L, !0),
                      key: L,
                      value: N,
                      previous: ut = M.last,
                      next: void 0,
                      removed: !1
                    }, M.first || (M.first = K), ut && (ut.next = K), a ? M.size++ : P.size++, J !== "F" && (M.index[J] = K)), P;
                  }, x = function(P, L) {
                    var N = E(P), M = v(L), K;
                    if (M !== "F")
                      return N.index[M];
                    for (K = N.first; K; K = K.next)
                      if (K.key == L)
                        return K;
                  };
                  return n(C, {
                    // `{ Map, Set }.prototype.clear()` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.clear
                    // https://tc39.es/ecma262/#sec-set.prototype.clear
                    clear: function() {
                      for (var L = this, N = E(L), M = N.index, K = N.first; K; )
                        K.removed = !0, K.previous && (K.previous = K.previous.next = void 0), delete M[K.index], K = K.next;
                      N.first = N.last = void 0, a ? N.size = 0 : L.size = 0;
                    },
                    // `{ Map, Set }.prototype.delete(key)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.delete
                    // https://tc39.es/ecma262/#sec-set.prototype.delete
                    delete: function(P) {
                      var L = this, N = E(L), M = x(L, P);
                      if (M) {
                        var K = M.next, ut = M.previous;
                        delete N.index[M.index], M.removed = !0, ut && (ut.next = K), K && (K.previous = ut), N.first == M && (N.first = K), N.last == M && (N.last = ut), a ? N.size-- : L.size--;
                      }
                      return !!M;
                    },
                    // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.foreach
                    // https://tc39.es/ecma262/#sec-set.prototype.foreach
                    forEach: function(L) {
                      for (var N = E(this), M = i(L, arguments.length > 1 ? arguments[1] : void 0), K; K = K ? K.next : N.first; )
                        for (M(K.value, K.key, this); K && K.removed; )
                          K = K.previous;
                    },
                    // `{ Map, Set}.prototype.has(key)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.has
                    // https://tc39.es/ecma262/#sec-set.prototype.has
                    has: function(L) {
                      return !!x(this, L);
                    }
                  }), n(C, D ? {
                    // `Map.prototype.get(key)` method
                    // https://tc39.es/ecma262/#sec-map.prototype.get
                    get: function(L) {
                      var N = x(this, L);
                      return N && N.value;
                    },
                    // `Map.prototype.set(key, value)` method
                    // https://tc39.es/ecma262/#sec-map.prototype.set
                    set: function(L, N) {
                      return F(this, L === 0 ? 0 : L, N);
                    }
                  } : {
                    // `Set.prototype.add(value)` method
                    // https://tc39.es/ecma262/#sec-set.prototype.add
                    add: function(L) {
                      return F(this, L = L === 0 ? 0 : L, L);
                    }
                  }), a && o(C, "size", {
                    get: function() {
                      return E(this).size;
                    }
                  }), T;
                },
                setStrong: function(m, w, D) {
                  var I = w + " Iterator", T = e(w), C = e(I);
                  c(m, w, function(E, F) {
                    g(this, {
                      type: I,
                      target: E,
                      state: T(E),
                      kind: F,
                      last: void 0
                    });
                  }, function() {
                    for (var E = C(this), F = E.kind, x = E.last; x && x.removed; )
                      x = x.previous;
                    return !E.target || !(E.last = x = x ? x.next : E.state.first) ? (E.target = void 0, { value: void 0, done: !0 }) : F == "keys" ? { value: x.key, done: !1 } : F == "values" ? { value: x.value, done: !1 } : { value: [x.key, x.value], done: !1 };
                  }, D ? "entries" : "values", !D, !0), h(w);
                }
              };
            }
          ),
          /***/
          9121: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(88697), i = t(86291), f = t(35974), l = t(44296), c = t(5166), h = t(9519), a = t(75277), v = t(52786), y = t(79044), g = t(8662), e = t(60878), m = t(59250);
              u.exports = function(w, D, I) {
                var T = w.indexOf("Map") !== -1, C = w.indexOf("Weak") !== -1, E = T ? "set" : "add", F = r[w], x = F && F.prototype, P = F, L = {}, N = function(xt) {
                  var Et = n(x[xt]);
                  f(
                    x,
                    xt,
                    xt == "add" ? function(Rt) {
                      return Et(this, Rt === 0 ? 0 : Rt), this;
                    } : xt == "delete" ? function(Ft) {
                      return C && !v(Ft) ? !1 : Et(this, Ft === 0 ? 0 : Ft);
                    } : xt == "get" ? function(Rt) {
                      return C && !v(Rt) ? void 0 : Et(this, Rt === 0 ? 0 : Rt);
                    } : xt == "has" ? function(Rt) {
                      return C && !v(Rt) ? !1 : Et(this, Rt === 0 ? 0 : Rt);
                    } : function(Rt, Ut) {
                      return Et(this, Rt === 0 ? 0 : Rt, Ut), this;
                    }
                  );
                }, M = i(
                  w,
                  !a(F) || !(C || x.forEach && !y(function() {
                    new F().entries().next();
                  }))
                );
                if (M)
                  P = I.getConstructor(D, w, T, E), l.enable();
                else if (i(w, !0)) {
                  var K = new P(), ut = K[E](C ? {} : -0, 1) != K, J = y(function() {
                    K.has(1);
                  }), rt = g(function(xt) {
                    new F(xt);
                  }), yt = !C && y(function() {
                    for (var xt = new F(), Et = 5; Et--; )
                      xt[E](Et, Et);
                    return !xt.has(-0);
                  });
                  rt || (P = D(function(xt, Et) {
                    h(xt, x);
                    var Ft = m(new F(), xt, P);
                    return Et != null && c(Et, Ft[E], { that: Ft, AS_ENTRIES: T }), Ft;
                  }), P.prototype = x, x.constructor = P), (J || yt) && (N("delete"), N("has"), T && N("get")), (yt || ut) && N(E), C && x.clear && delete x.clear;
                }
                return L[w] = P, o({ global: !0, forced: P != F }, L), e(P, w), C || I.setStrong(P, w, T), P;
              };
            }
          ),
          /***/
          73870: (
            /***/
            function(u, d, t) {
              var o = t(24792), r = t(31561), n = t(66012), i = t(86385);
              u.exports = function(f, l) {
                for (var c = r(l), h = i.f, a = n.f, v = 0; v < c.length; v++) {
                  var y = c[v];
                  o(f, y) || h(f, y, a(l, y));
                }
              };
            }
          ),
          /***/
          15454: (
            /***/
            function(u, d, t) {
              var o = t(52280), r = o("match");
              u.exports = function(n) {
                var i = /./;
                try {
                  "/./"[n](i);
                } catch {
                  try {
                    return i[r] = !1, "/./"[n](i);
                  } catch {
                  }
                }
                return !1;
              };
            }
          ),
          /***/
          25115: (
            /***/
            function(u, d, t) {
              var o = t(79044);
              u.exports = !o(function() {
                function r() {
                }
                return r.prototype.constructor = null, Object.getPrototypeOf(new r()) !== r.prototype;
              });
            }
          ),
          /***/
          75304: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(96411), n = t(28967), i = /"/g, f = o("".replace);
              u.exports = function(l, c, h, a) {
                var v = n(r(l)), y = "<" + c;
                return h !== "" && (y += " " + h + '="' + f(n(a), i, "&quot;") + '"'), y + ">" + v + "</" + c + ">";
              };
            }
          ),
          /***/
          6181: (
            /***/
            function(u, d, t) {
              var o = t(97022).IteratorPrototype, r = t(51569), n = t(69199), i = t(60878), f = t(44818), l = function() {
                return this;
              };
              u.exports = function(c, h, a) {
                var v = h + " Iterator";
                return c.prototype = r(o, { next: n(1, a) }), i(c, v, !1, !0), f[v] = l, c;
              };
            }
          ),
          /***/
          45899: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(86385), n = t(69199);
              u.exports = o ? function(i, f, l) {
                return r.f(i, f, n(1, l));
              } : function(i, f, l) {
                return i[f] = l, i;
              };
            }
          ),
          /***/
          69199: (
            /***/
            function(u) {
              u.exports = function(d, t) {
                return {
                  enumerable: !(d & 1),
                  configurable: !(d & 2),
                  writable: !(d & 4),
                  value: t
                };
              };
            }
          ),
          /***/
          35039: (
            /***/
            function(u, d, t) {
              var o = t(383), r = t(86385), n = t(69199);
              u.exports = function(i, f, l) {
                var c = o(f);
                c in i ? r.f(i, c, n(0, l)) : i[c] = l;
              };
            }
          ),
          /***/
          67707: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(83875), n = t(17141), i = o.TypeError;
              u.exports = function(f) {
                if (r(this), f === "string" || f === "default")
                  f = "string";
                else if (f !== "number")
                  throw i("Incorrect hint");
                return n(this, f);
              };
            }
          ),
          /***/
          61495: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(79611), n = t(21178), i = t(55316), f = t(75277), l = t(6181), c = t(12654), h = t(22412), a = t(60878), v = t(45899), y = t(35974), g = t(52280), e = t(44818), m = t(97022), w = i.PROPER, D = i.CONFIGURABLE, I = m.IteratorPrototype, T = m.BUGGY_SAFARI_ITERATORS, C = g("iterator"), E = "keys", F = "values", x = "entries", P = function() {
                return this;
              };
              u.exports = function(L, N, M, K, ut, J, rt) {
                l(M, N, K);
                var yt = function(mt) {
                  if (mt === ut && Ut)
                    return Ut;
                  if (!T && mt in Ft)
                    return Ft[mt];
                  switch (mt) {
                    case E:
                      return function() {
                        return new M(this, mt);
                      };
                    case F:
                      return function() {
                        return new M(this, mt);
                      };
                    case x:
                      return function() {
                        return new M(this, mt);
                      };
                  }
                  return function() {
                    return new M(this);
                  };
                }, xt = N + " Iterator", Et = !1, Ft = L.prototype, Rt = Ft[C] || Ft["@@iterator"] || ut && Ft[ut], Ut = !T && Rt || yt(ut), Q = N == "Array" && Ft.entries || Rt, pt, ct, ot;
                if (Q && (pt = c(Q.call(new L())), pt !== Object.prototype && pt.next && (!n && c(pt) !== I && (h ? h(pt, I) : f(pt[C]) || y(pt, C, P)), a(pt, xt, !0, !0), n && (e[xt] = P))), w && ut == F && Rt && Rt.name !== F && (!n && D ? v(Ft, "name", F) : (Et = !0, Ut = function() {
                  return r(Rt, this);
                })), ut)
                  if (ct = {
                    values: yt(F),
                    keys: J ? Ut : yt(E),
                    entries: yt(x)
                  }, rt)
                    for (ot in ct)
                      (T || Et || !(ot in Ft)) && y(Ft, ot, ct[ot]);
                  else
                    o({ target: N, proto: !0, forced: T || Et }, ct);
                return (!n || rt) && Ft[C] !== Ut && y(Ft, C, Ut, { name: ut }), e[N] = Ut, ct;
              };
            }
          ),
          /***/
          68308: (
            /***/
            function(u, d, t) {
              var o = t(67290), r = t(24792), n = t(20127), i = t(86385).f;
              u.exports = function(f) {
                var l = o.Symbol || (o.Symbol = {});
                r(l, f) || i(l, f, {
                  value: n.f(f)
                });
              };
            }
          ),
          /***/
          7493: (
            /***/
            function(u, d, t) {
              var o = t(79044);
              u.exports = !o(function() {
                return Object.defineProperty({}, 1, { get: function() {
                  return 7;
                } })[1] != 7;
              });
            }
          ),
          /***/
          92750: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(52786), n = o.document, i = r(n) && r(n.createElement);
              u.exports = function(f) {
                return i ? n.createElement(f) : {};
              };
            }
          ),
          /***/
          12848: (
            /***/
            function(u) {
              u.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
              };
            }
          ),
          /***/
          79189: (
            /***/
            function(u, d, t) {
              var o = t(92750), r = o("span").classList, n = r && r.constructor && r.constructor.prototype;
              u.exports = n === Object.prototype ? void 0 : n;
            }
          ),
          /***/
          34631: (
            /***/
            function(u, d, t) {
              var o = t(82647), r = o.match(/firefox\/(\d+)/i);
              u.exports = !!r && +r[1];
            }
          ),
          /***/
          47923: (
            /***/
            function(u) {
              u.exports = typeof window == "object";
            }
          ),
          /***/
          80442: (
            /***/
            function(u, d, t) {
              var o = t(82647);
              u.exports = /MSIE|Trident/.test(o);
            }
          ),
          /***/
          55357: (
            /***/
            function(u, d, t) {
              var o = t(82647), r = t(98363);
              u.exports = /ipad|iphone|ipod/i.test(o) && r.Pebble !== void 0;
            }
          ),
          /***/
          53121: (
            /***/
            function(u, d, t) {
              var o = t(82647);
              u.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(o);
            }
          ),
          /***/
          93921: (
            /***/
            function(u, d, t) {
              var o = t(79159), r = t(98363);
              u.exports = o(r.process) == "process";
            }
          ),
          /***/
          14402: (
            /***/
            function(u, d, t) {
              var o = t(82647);
              u.exports = /web0s(?!.*chrome)/i.test(o);
            }
          ),
          /***/
          82647: (
            /***/
            function(u, d, t) {
              var o = t(22773);
              u.exports = o("navigator", "userAgent") || "";
            }
          ),
          /***/
          11197: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(82647), n = o.process, i = o.Deno, f = n && n.versions || i && i.version, l = f && f.v8, c, h;
              l && (c = l.split("."), h = c[0] > 0 && c[0] < 4 ? 1 : +(c[0] + c[1])), !h && r && (c = r.match(/Edge\/(\d+)/), (!c || c[1] >= 74) && (c = r.match(/Chrome\/(\d+)/), c && (h = +c[1]))), u.exports = h;
            }
          ),
          /***/
          76929: (
            /***/
            function(u, d, t) {
              var o = t(82647), r = o.match(/AppleWebKit\/(\d+)\./);
              u.exports = !!r && +r[1];
            }
          ),
          /***/
          48869: (
            /***/
            function(u) {
              u.exports = [
                "constructor",
                "hasOwnProperty",
                "isPrototypeOf",
                "propertyIsEnumerable",
                "toLocaleString",
                "toString",
                "valueOf"
              ];
            }
          ),
          /***/
          67679: (
            /***/
            function(u, d, t) {
              var o = t(79044), r = t(69199);
              u.exports = !o(function() {
                var n = Error("a");
                return "stack" in n ? (Object.defineProperty(n, "stack", r(1, 7)), n.stack !== 7) : !0;
              });
            }
          ),
          /***/
          19882: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(66012).f, n = t(45899), i = t(35974), f = t(51621), l = t(73870), c = t(86291);
              u.exports = function(h, a) {
                var v = h.target, y = h.global, g = h.stat, e, m, w, D, I, T;
                if (y ? m = o : g ? m = o[v] || f(v, {}) : m = (o[v] || {}).prototype, m)
                  for (w in a) {
                    if (I = a[w], h.noTargetGet ? (T = r(m, w), D = T && T.value) : D = m[w], e = c(y ? w : v + (g ? "." : "#") + w, h.forced), !e && D !== void 0) {
                      if (typeof I == typeof D)
                        continue;
                      l(I, D);
                    }
                    (h.sham || D && D.sham) && n(I, "sham", !0), i(m, w, I, h);
                  }
              };
            }
          ),
          /***/
          79044: (
            /***/
            function(u) {
              u.exports = function(d) {
                try {
                  return !!d();
                } catch {
                  return !0;
                }
              };
            }
          ),
          /***/
          81492: (
            /***/
            function(u, d, t) {
              t(39275);
              var o = t(88697), r = t(35974), n = t(99749), i = t(79044), f = t(52280), l = t(45899), c = f("species"), h = RegExp.prototype;
              u.exports = function(a, v, y, g) {
                var e = f(a), m = !i(function() {
                  var T = {};
                  return T[e] = function() {
                    return 7;
                  }, ""[a](T) != 7;
                }), w = m && !i(function() {
                  var T = !1, C = /a/;
                  return a === "split" && (C = {}, C.constructor = {}, C.constructor[c] = function() {
                    return C;
                  }, C.flags = "", C[e] = /./[e]), C.exec = function() {
                    return T = !0, null;
                  }, C[e](""), !T;
                });
                if (!m || !w || y) {
                  var D = o(/./[e]), I = v(e, ""[a], function(T, C, E, F, x) {
                    var P = o(T), L = C.exec;
                    return L === n || L === h.exec ? m && !x ? { done: !0, value: D(C, E, F) } : { done: !0, value: P(E, C, F) } : { done: !1 };
                  });
                  r(String.prototype, a, I[0]), r(h, e, I[1]);
                }
                g && l(h[e], "sham", !0);
              };
            }
          ),
          /***/
          51207: (
            /***/
            function(u, d, t) {
              var o = t(79044);
              u.exports = !o(function() {
                return Object.isExtensible(Object.preventExtensions({}));
              });
            }
          ),
          /***/
          63530: (
            /***/
            function(u) {
              var d = Function.prototype, t = d.apply, o = d.bind, r = d.call;
              u.exports = typeof Reflect == "object" && Reflect.apply || (o ? r.bind(t) : function() {
                return r.apply(t, arguments);
              });
            }
          ),
          /***/
          98166: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(97676), n = o(o.bind);
              u.exports = function(i, f) {
                return r(i), f === void 0 ? i : n ? n(i, f) : function() {
                  return i.apply(f, arguments);
                };
              };
            }
          ),
          /***/
          52381: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(88697), n = t(97676), i = t(52786), f = t(24792), l = t(15629), c = o.Function, h = r([].concat), a = r([].join), v = {}, y = function(g, e, m) {
                if (!f(v, e)) {
                  for (var w = [], D = 0; D < e; D++)
                    w[D] = "a[" + D + "]";
                  v[e] = c("C,a", "return new C(" + a(w, ",") + ")");
                }
                return v[e](g, m);
              };
              u.exports = c.bind || function(e) {
                var m = n(this), w = m.prototype, D = l(arguments, 1), I = function() {
                  var C = h(D, l(arguments));
                  return this instanceof I ? y(m, C.length, C) : m.apply(e, C);
                };
                return i(w) && (I.prototype = w), I;
              };
            }
          ),
          /***/
          79611: (
            /***/
            function(u) {
              var d = Function.prototype.call;
              u.exports = d.bind ? d.bind(d) : function() {
                return d.apply(d, arguments);
              };
            }
          ),
          /***/
          55316: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(24792), n = Function.prototype, i = o && Object.getOwnPropertyDescriptor, f = r(n, "name"), l = f && function() {
              }.name === "something", c = f && (!o || o && i(n, "name").configurable);
              u.exports = {
                EXISTS: f,
                PROPER: l,
                CONFIGURABLE: c
              };
            }
          ),
          /***/
          88697: (
            /***/
            function(u) {
              var d = Function.prototype, t = d.bind, o = d.call, r = t && t.bind(o);
              u.exports = t ? function(n) {
                return n && r(o, n);
              } : function(n) {
                return n && function() {
                  return o.apply(n, arguments);
                };
              };
            }
          ),
          /***/
          22773: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(75277), n = function(i) {
                return r(i) ? i : void 0;
              };
              u.exports = function(i, f) {
                return arguments.length < 2 ? n(o[i]) : o[i] && o[i][f];
              };
            }
          ),
          /***/
          77193: (
            /***/
            function(u, d, t) {
              var o = t(36994), r = t(97219), n = t(44818), i = t(52280), f = i("iterator");
              u.exports = function(l) {
                if (l != null)
                  return r(l, f) || r(l, "@@iterator") || n[o(l)];
              };
            }
          ),
          /***/
          11805: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(79611), n = t(97676), i = t(83875), f = t(28768), l = t(77193), c = o.TypeError;
              u.exports = function(h, a) {
                var v = arguments.length < 2 ? l(h) : a;
                if (n(v))
                  return i(r(v, h));
                throw c(f(h) + " is not iterable");
              };
            }
          ),
          /***/
          97219: (
            /***/
            function(u, d, t) {
              var o = t(97676);
              u.exports = function(r, n) {
                var i = r[n];
                return i == null ? void 0 : o(i);
              };
            }
          ),
          /***/
          81373: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(30744), n = Math.floor, i = o("".charAt), f = o("".replace), l = o("".slice), c = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, h = /\$([$&'`]|\d{1,2})/g;
              u.exports = function(a, v, y, g, e, m) {
                var w = y + a.length, D = g.length, I = h;
                return e !== void 0 && (e = r(e), I = c), f(m, I, function(T, C) {
                  var E;
                  switch (i(C, 0)) {
                    case "$":
                      return "$";
                    case "&":
                      return a;
                    case "`":
                      return l(v, 0, y);
                    case "'":
                      return l(v, w);
                    case "<":
                      E = e[l(C, 1, -1)];
                      break;
                    default:
                      var F = +C;
                      if (F === 0)
                        return T;
                      if (F > D) {
                        var x = n(F / 10);
                        return x === 0 ? T : x <= D ? g[x - 1] === void 0 ? i(C, 1) : g[x - 1] + i(C, 1) : T;
                      }
                      E = g[F - 1];
                  }
                  return E === void 0 ? "" : E;
                });
              };
            }
          ),
          /***/
          98363: (
            /***/
            function(u, d, t) {
              var o = function(r) {
                return r && r.Math == Math && r;
              };
              u.exports = // eslint-disable-next-line es/no-global-this -- safe
              o(typeof globalThis == "object" && globalThis) || o(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
              o(typeof self == "object" && self) || o(typeof t.g == "object" && t.g) || // eslint-disable-next-line no-new-func -- fallback
              function() {
                return this;
              }() || Function("return this")();
            }
          ),
          /***/
          24792: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(30744), n = o({}.hasOwnProperty);
              u.exports = Object.hasOwn || function(f, l) {
                return n(r(f), l);
              };
            }
          ),
          /***/
          47505: (
            /***/
            function(u) {
              u.exports = {};
            }
          ),
          /***/
          46271: (
            /***/
            function(u, d, t) {
              var o = t(98363);
              u.exports = function(r, n) {
                var i = o.console;
                i && i.error && (arguments.length == 1 ? i.error(r) : i.error(r, n));
              };
            }
          ),
          /***/
          47055: (
            /***/
            function(u, d, t) {
              var o = t(22773);
              u.exports = o("document", "documentElement");
            }
          ),
          /***/
          67548: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(79044), n = t(92750);
              u.exports = !o && !r(function() {
                return Object.defineProperty(n("div"), "a", {
                  get: function() {
                    return 7;
                  }
                }).a != 7;
              });
            }
          ),
          /***/
          45489: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = o.Array, n = Math.abs, i = Math.pow, f = Math.floor, l = Math.log, c = Math.LN2, h = function(v, y, g) {
                var e = r(g), m = g * 8 - y - 1, w = (1 << m) - 1, D = w >> 1, I = y === 23 ? i(2, -24) - i(2, -77) : 0, T = v < 0 || v === 0 && 1 / v < 0 ? 1 : 0, C = 0, E, F, x;
                for (v = n(v), v != v || v === 1 / 0 ? (F = v != v ? 1 : 0, E = w) : (E = f(l(v) / c), v * (x = i(2, -E)) < 1 && (E--, x *= 2), E + D >= 1 ? v += I / x : v += I * i(2, 1 - D), v * x >= 2 && (E++, x /= 2), E + D >= w ? (F = 0, E = w) : E + D >= 1 ? (F = (v * x - 1) * i(2, y), E = E + D) : (F = v * i(2, D - 1) * i(2, y), E = 0)); y >= 8; e[C++] = F & 255, F /= 256, y -= 8)
                  ;
                for (E = E << y | F, m += y; m > 0; e[C++] = E & 255, E /= 256, m -= 8)
                  ;
                return e[--C] |= T * 128, e;
              }, a = function(v, y) {
                var g = v.length, e = g * 8 - y - 1, m = (1 << e) - 1, w = m >> 1, D = e - 7, I = g - 1, T = v[I--], C = T & 127, E;
                for (T >>= 7; D > 0; C = C * 256 + v[I], I--, D -= 8)
                  ;
                for (E = C & (1 << -D) - 1, C >>= -D, D += y; D > 0; E = E * 256 + v[I], I--, D -= 8)
                  ;
                if (C === 0)
                  C = 1 - w;
                else {
                  if (C === m)
                    return E ? NaN : T ? -1 / 0 : 1 / 0;
                  E = E + i(2, y), C = C - w;
                }
                return (T ? -1 : 1) * E * i(2, C - y);
              };
              u.exports = {
                pack: h,
                unpack: a
              };
            }
          ),
          /***/
          78609: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(88697), n = t(79044), i = t(79159), f = o.Object, l = r("".split);
              u.exports = n(function() {
                return !f("z").propertyIsEnumerable(0);
              }) ? function(c) {
                return i(c) == "String" ? l(c, "") : f(c);
              } : f;
            }
          ),
          /***/
          59250: (
            /***/
            function(u, d, t) {
              var o = t(75277), r = t(52786), n = t(22412);
              u.exports = function(i, f, l) {
                var c, h;
                return (
                  // it can work only with native `setPrototypeOf`
                  n && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
                  o(c = f.constructor) && c !== l && r(h = c.prototype) && h !== l.prototype && n(i, h), i
                );
              };
            }
          ),
          /***/
          56429: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(75277), n = t(49415), i = o(Function.toString);
              r(n.inspectSource) || (n.inspectSource = function(f) {
                return i(f);
              }), u.exports = n.inspectSource;
            }
          ),
          /***/
          58323: (
            /***/
            function(u, d, t) {
              var o = t(52786), r = t(45899);
              u.exports = function(n, i) {
                o(i) && "cause" in i && r(n, "cause", i.cause);
              };
            }
          ),
          /***/
          44296: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(88697), n = t(47505), i = t(52786), f = t(24792), l = t(86385).f, c = t(87994), h = t(74938), a = t(34524), v = t(51207), y = !1, g = a("meta"), e = 0, m = Object.isExtensible || function() {
                return !0;
              }, w = function(F) {
                l(F, g, { value: {
                  objectID: "O" + e++,
                  // object ID
                  weakData: {}
                  // weak collections IDs
                } });
              }, D = function(F, x) {
                if (!i(F))
                  return typeof F == "symbol" ? F : (typeof F == "string" ? "S" : "P") + F;
                if (!f(F, g)) {
                  if (!m(F))
                    return "F";
                  if (!x)
                    return "E";
                  w(F);
                }
                return F[g].objectID;
              }, I = function(F, x) {
                if (!f(F, g)) {
                  if (!m(F))
                    return !0;
                  if (!x)
                    return !1;
                  w(F);
                }
                return F[g].weakData;
              }, T = function(F) {
                return v && y && m(F) && !f(F, g) && w(F), F;
              }, C = function() {
                E.enable = function() {
                }, y = !0;
                var F = c.f, x = r([].splice), P = {};
                P[g] = 1, F(P).length && (c.f = function(L) {
                  for (var N = F(L), M = 0, K = N.length; M < K; M++)
                    if (N[M] === g) {
                      x(N, M, 1);
                      break;
                    }
                  return N;
                }, o({ target: "Object", stat: !0, forced: !0 }, {
                  getOwnPropertyNames: h.f
                }));
              }, E = u.exports = {
                enable: C,
                fastKey: D,
                getWeakData: I,
                onFreeze: T
              };
              n[g] = !0;
            }
          ),
          /***/
          20821: (
            /***/
            function(u, d, t) {
              var o = t(36830), r = t(98363), n = t(88697), i = t(52786), f = t(45899), l = t(24792), c = t(49415), h = t(50466), a = t(47505), v = "Object already initialized", y = r.TypeError, g = r.WeakMap, e, m, w, D = function(P) {
                return w(P) ? m(P) : e(P, {});
              }, I = function(P) {
                return function(L) {
                  var N;
                  if (!i(L) || (N = m(L)).type !== P)
                    throw y("Incompatible receiver, " + P + " required");
                  return N;
                };
              };
              if (o || c.state) {
                var T = c.state || (c.state = new g()), C = n(T.get), E = n(T.has), F = n(T.set);
                e = function(P, L) {
                  if (E(T, P))
                    throw new y(v);
                  return L.facade = P, F(T, P, L), L;
                }, m = function(P) {
                  return C(T, P) || {};
                }, w = function(P) {
                  return E(T, P);
                };
              } else {
                var x = h("state");
                a[x] = !0, e = function(P, L) {
                  if (l(P, x))
                    throw new y(v);
                  return L.facade = P, f(P, x, L), L;
                }, m = function(P) {
                  return l(P, x) ? P[x] : {};
                }, w = function(P) {
                  return l(P, x);
                };
              }
              u.exports = {
                set: e,
                get: m,
                has: w,
                enforce: D,
                getterFor: I
              };
            }
          ),
          /***/
          68089: (
            /***/
            function(u, d, t) {
              var o = t(52280), r = t(44818), n = o("iterator"), i = Array.prototype;
              u.exports = function(f) {
                return f !== void 0 && (r.Array === f || i[n] === f);
              };
            }
          ),
          /***/
          71982: (
            /***/
            function(u, d, t) {
              var o = t(79159);
              u.exports = Array.isArray || function(n) {
                return o(n) == "Array";
              };
            }
          ),
          /***/
          75277: (
            /***/
            function(u) {
              u.exports = function(d) {
                return typeof d == "function";
              };
            }
          ),
          /***/
          31536: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(79044), n = t(75277), i = t(36994), f = t(22773), l = t(56429), c = function() {
              }, h = [], a = f("Reflect", "construct"), v = /^\s*(?:class|function)\b/, y = o(v.exec), g = !v.exec(c), e = function(w) {
                if (!n(w))
                  return !1;
                try {
                  return a(c, h, w), !0;
                } catch {
                  return !1;
                }
              }, m = function(w) {
                if (!n(w))
                  return !1;
                switch (i(w)) {
                  case "AsyncFunction":
                  case "GeneratorFunction":
                  case "AsyncGeneratorFunction":
                    return !1;
                }
                return g || !!y(v, l(w));
              };
              u.exports = !a || r(function() {
                var w;
                return e(e.call) || !e(Object) || !e(function() {
                  w = !0;
                }) || w;
              }) ? m : e;
            }
          ),
          /***/
          86291: (
            /***/
            function(u, d, t) {
              var o = t(79044), r = t(75277), n = /#|\.prototype\./, i = function(a, v) {
                var y = l[f(a)];
                return y == h ? !0 : y == c ? !1 : r(v) ? o(v) : !!v;
              }, f = i.normalize = function(a) {
                return String(a).replace(n, ".").toLowerCase();
              }, l = i.data = {}, c = i.NATIVE = "N", h = i.POLYFILL = "P";
              u.exports = i;
            }
          ),
          /***/
          57507: (
            /***/
            function(u, d, t) {
              var o = t(52786), r = Math.floor;
              u.exports = Number.isInteger || function(i) {
                return !o(i) && isFinite(i) && r(i) === i;
              };
            }
          ),
          /***/
          52786: (
            /***/
            function(u, d, t) {
              var o = t(75277);
              u.exports = function(r) {
                return typeof r == "object" ? r !== null : o(r);
              };
            }
          ),
          /***/
          21178: (
            /***/
            function(u) {
              u.exports = !1;
            }
          ),
          /***/
          42622: (
            /***/
            function(u, d, t) {
              var o = t(52786), r = t(79159), n = t(52280), i = n("match");
              u.exports = function(f) {
                var l;
                return o(f) && ((l = f[i]) !== void 0 ? !!l : r(f) == "RegExp");
              };
            }
          ),
          /***/
          66681: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(22773), n = t(75277), i = t(32010), f = t(189), l = o.Object;
              u.exports = f ? function(c) {
                return typeof c == "symbol";
              } : function(c) {
                var h = r("Symbol");
                return n(h) && i(h.prototype, l(c));
              };
            }
          ),
          /***/
          5166: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(98166), n = t(79611), i = t(83875), f = t(28768), l = t(68089), c = t(47046), h = t(32010), a = t(11805), v = t(77193), y = t(18744), g = o.TypeError, e = function(w, D) {
                this.stopped = w, this.result = D;
              }, m = e.prototype;
              u.exports = function(w, D, I) {
                var T = I && I.that, C = !!(I && I.AS_ENTRIES), E = !!(I && I.IS_ITERATOR), F = !!(I && I.INTERRUPTED), x = r(D, T), P, L, N, M, K, ut, J, rt = function(xt) {
                  return P && y(P, "normal", xt), new e(!0, xt);
                }, yt = function(xt) {
                  return C ? (i(xt), F ? x(xt[0], xt[1], rt) : x(xt[0], xt[1])) : F ? x(xt, rt) : x(xt);
                };
                if (E)
                  P = w;
                else {
                  if (L = v(w), !L)
                    throw g(f(w) + " is not iterable");
                  if (l(L)) {
                    for (N = 0, M = c(w); M > N; N++)
                      if (K = yt(w[N]), K && h(m, K))
                        return K;
                    return new e(!1);
                  }
                  P = a(w, L);
                }
                for (ut = P.next; !(J = n(ut, P)).done; ) {
                  try {
                    K = yt(J.value);
                  } catch (xt) {
                    y(P, "throw", xt);
                  }
                  if (typeof K == "object" && K && h(m, K))
                    return K;
                }
                return new e(!1);
              };
            }
          ),
          /***/
          18744: (
            /***/
            function(u, d, t) {
              var o = t(79611), r = t(83875), n = t(97219);
              u.exports = function(i, f, l) {
                var c, h;
                r(i);
                try {
                  if (c = n(i, "return"), !c) {
                    if (f === "throw")
                      throw l;
                    return l;
                  }
                  c = o(c, i);
                } catch (a) {
                  h = !0, c = a;
                }
                if (f === "throw")
                  throw l;
                if (h)
                  throw c;
                return r(c), l;
              };
            }
          ),
          /***/
          97022: (
            /***/
            function(u, d, t) {
              var o = t(79044), r = t(75277), n = t(51569), i = t(12654), f = t(35974), l = t(52280), c = t(21178), h = l("iterator"), a = !1, v, y, g;
              [].keys && (g = [].keys(), "next" in g ? (y = i(i(g)), y !== Object.prototype && (v = y)) : a = !0);
              var e = v == null || o(function() {
                var m = {};
                return v[h].call(m) !== m;
              });
              e ? v = {} : c && (v = n(v)), r(v[h]) || f(v, h, function() {
                return this;
              }), u.exports = {
                IteratorPrototype: v,
                BUGGY_SAFARI_ITERATORS: a
              };
            }
          ),
          /***/
          44818: (
            /***/
            function(u) {
              u.exports = {};
            }
          ),
          /***/
          47046: (
            /***/
            function(u, d, t) {
              var o = t(35108);
              u.exports = function(r) {
                return o(r.length);
              };
            }
          ),
          /***/
          71800: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(98166), n = t(66012).f, i = t(84643).set, f = t(53121), l = t(55357), c = t(14402), h = t(93921), a = o.MutationObserver || o.WebKitMutationObserver, v = o.document, y = o.process, g = o.Promise, e = n(o, "queueMicrotask"), m = e && e.value, w, D, I, T, C, E, F, x;
              m || (w = function() {
                var P, L;
                for (h && (P = y.domain) && P.exit(); D; ) {
                  L = D.fn, D = D.next;
                  try {
                    L();
                  } catch (N) {
                    throw D ? T() : I = void 0, N;
                  }
                }
                I = void 0, P && P.enter();
              }, !f && !h && !c && a && v ? (C = !0, E = v.createTextNode(""), new a(w).observe(E, { characterData: !0 }), T = function() {
                E.data = C = !C;
              }) : !l && g && g.resolve ? (F = g.resolve(void 0), F.constructor = g, x = r(F.then, F), T = function() {
                x(w);
              }) : h ? T = function() {
                y.nextTick(w);
              } : (i = r(i, o), T = function() {
                i(w);
              })), u.exports = m || function(P) {
                var L = { fn: P, next: void 0 };
                I && (I.next = L), D || (D = L, T()), I = L;
              };
            }
          ),
          /***/
          58369: (
            /***/
            function(u, d, t) {
              var o = t(98363);
              u.exports = o.Promise;
            }
          ),
          /***/
          3850: (
            /***/
            function(u, d, t) {
              var o = t(11197), r = t(79044);
              u.exports = !!Object.getOwnPropertySymbols && !r(function() {
                var n = Symbol();
                return !String(n) || !(Object(n) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
                !Symbol.sham && o && o < 41;
              });
            }
          ),
          /***/
          36830: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(75277), n = t(56429), i = o.WeakMap;
              u.exports = r(i) && /native code/.test(n(i));
            }
          ),
          /***/
          29269: (
            /***/
            function(u, d, t) {
              var o = t(97676), r = function(n) {
                var i, f;
                this.promise = new n(function(l, c) {
                  if (i !== void 0 || f !== void 0)
                    throw TypeError("Bad Promise constructor");
                  i = l, f = c;
                }), this.resolve = o(i), this.reject = o(f);
              };
              u.exports.f = function(n) {
                return new r(n);
              };
            }
          ),
          /***/
          654: (
            /***/
            function(u, d, t) {
              var o = t(28967);
              u.exports = function(r, n) {
                return r === void 0 ? arguments.length < 2 ? "" : n : o(r);
              };
            }
          ),
          /***/
          21049: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(42622), n = o.TypeError;
              u.exports = function(i) {
                if (r(i))
                  throw n("The method doesn't accept regular expressions");
                return i;
              };
            }
          ),
          /***/
          5310: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = o.isFinite;
              u.exports = Number.isFinite || function(i) {
                return typeof i == "number" && r(i);
              };
            }
          ),
          /***/
          45856: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(88697), n = t(79611), i = t(79044), f = t(60667), l = t(89612), c = t(81513), h = t(30744), a = t(78609), v = Object.assign, y = Object.defineProperty, g = r([].concat);
              u.exports = !v || i(function() {
                if (o && v({ b: 1 }, v(y({}, "a", {
                  enumerable: !0,
                  get: function() {
                    y(this, "b", {
                      value: 3,
                      enumerable: !1
                    });
                  }
                }), { b: 2 })).b !== 1)
                  return !0;
                var e = {}, m = {}, w = Symbol(), D = "abcdefghijklmnopqrst";
                return e[w] = 7, D.split("").forEach(function(I) {
                  m[I] = I;
                }), v({}, e)[w] != 7 || f(v({}, m)).join("") != D;
              }) ? function(m, w) {
                for (var D = h(m), I = arguments.length, T = 1, C = l.f, E = c.f; I > T; )
                  for (var F = a(arguments[T++]), x = C ? g(f(F), C(F)) : f(F), P = x.length, L = 0, N; P > L; )
                    N = x[L++], (!o || n(E, F, N)) && (D[N] = F[N]);
                return D;
              } : v;
            }
          ),
          /***/
          51569: (
            /***/
            function(u, d, t) {
              var o = t(83875), r = t(17840), n = t(48869), i = t(47505), f = t(47055), l = t(92750), c = t(50466), h = ">", a = "<", v = "prototype", y = "script", g = c("IE_PROTO"), e = function() {
              }, m = function(C) {
                return a + y + h + C + a + "/" + y + h;
              }, w = function(C) {
                C.write(m("")), C.close();
                var E = C.parentWindow.Object;
                return C = null, E;
              }, D = function() {
                var C = l("iframe"), E = "java" + y + ":", F;
                return C.style.display = "none", f.appendChild(C), C.src = String(E), F = C.contentWindow.document, F.open(), F.write(m("document.F=Object")), F.close(), F.F;
              }, I, T = function() {
                try {
                  I = new ActiveXObject("htmlfile");
                } catch {
                }
                T = typeof document < "u" ? document.domain && I ? w(I) : D() : w(I);
                for (var C = n.length; C--; )
                  delete T[v][n[C]];
                return T();
              };
              i[g] = !0, u.exports = Object.create || function(E, F) {
                var x;
                return E !== null ? (e[v] = o(E), x = new e(), e[v] = null, x[g] = E) : x = T(), F === void 0 ? x : r(x, F);
              };
            }
          ),
          /***/
          17840: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(86385), n = t(83875), i = t(29580), f = t(60667);
              u.exports = o ? Object.defineProperties : function(c, h) {
                n(c);
                for (var a = i(h), v = f(h), y = v.length, g = 0, e; y > g; )
                  r.f(c, e = v[g++], a[e]);
                return c;
              };
            }
          ),
          /***/
          86385: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(7493), n = t(67548), i = t(83875), f = t(383), l = o.TypeError, c = Object.defineProperty;
              d.f = r ? c : function(a, v, y) {
                if (i(a), v = f(v), i(y), n)
                  try {
                    return c(a, v, y);
                  } catch {
                  }
                if ("get" in y || "set" in y)
                  throw l("Accessors not supported");
                return "value" in y && (a[v] = y.value), a;
              };
            }
          ),
          /***/
          66012: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(79611), n = t(81513), i = t(69199), f = t(29580), l = t(383), c = t(24792), h = t(67548), a = Object.getOwnPropertyDescriptor;
              d.f = o ? a : function(y, g) {
                if (y = f(y), g = l(g), h)
                  try {
                    return a(y, g);
                  } catch {
                  }
                if (c(y, g))
                  return i(!r(n.f, y, g), y[g]);
              };
            }
          ),
          /***/
          74938: (
            /***/
            function(u, d, t) {
              var o = t(79159), r = t(29580), n = t(87994).f, i = t(15629), f = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], l = function(c) {
                try {
                  return n(c);
                } catch {
                  return i(f);
                }
              };
              u.exports.f = function(h) {
                return f && o(h) == "Window" ? l(h) : n(r(h));
              };
            }
          ),
          /***/
          87994: (
            /***/
            function(u, d, t) {
              var o = t(18794), r = t(48869), n = r.concat("length", "prototype");
              d.f = Object.getOwnPropertyNames || function(f) {
                return o(f, n);
              };
            }
          ),
          /***/
          89612: (
            /***/
            function(u, d) {
              d.f = Object.getOwnPropertySymbols;
            }
          ),
          /***/
          12654: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(24792), n = t(75277), i = t(30744), f = t(50466), l = t(25115), c = f("IE_PROTO"), h = o.Object, a = h.prototype;
              u.exports = l ? h.getPrototypeOf : function(v) {
                var y = i(v);
                if (r(y, c))
                  return y[c];
                var g = y.constructor;
                return n(g) && y instanceof g ? g.prototype : y instanceof h ? a : null;
              };
            }
          ),
          /***/
          32010: (
            /***/
            function(u, d, t) {
              var o = t(88697);
              u.exports = o({}.isPrototypeOf);
            }
          ),
          /***/
          18794: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(24792), n = t(29580), i = t(37190).indexOf, f = t(47505), l = o([].push);
              u.exports = function(c, h) {
                var a = n(c), v = 0, y = [], g;
                for (g in a)
                  !r(f, g) && r(a, g) && l(y, g);
                for (; h.length > v; )
                  r(a, g = h[v++]) && (~i(y, g) || l(y, g));
                return y;
              };
            }
          ),
          /***/
          60667: (
            /***/
            function(u, d, t) {
              var o = t(18794), r = t(48869);
              u.exports = Object.keys || function(i) {
                return o(i, r);
              };
            }
          ),
          /***/
          81513: (
            /***/
            function(u, d) {
              var t = {}.propertyIsEnumerable, o = Object.getOwnPropertyDescriptor, r = o && !t.call({ 1: 2 }, 1);
              d.f = r ? function(i) {
                var f = o(this, i);
                return !!f && f.enumerable;
              } : t;
            }
          ),
          /***/
          22412: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(83875), n = t(75017);
              u.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                var i = !1, f = {}, l;
                try {
                  l = o(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set), l(f, []), i = f instanceof Array;
                } catch {
                }
                return function(h, a) {
                  return r(h), n(a), i ? l(h, a) : h.__proto__ = a, h;
                };
              }() : void 0);
            }
          ),
          /***/
          8765: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(88697), n = t(60667), i = t(29580), f = t(81513).f, l = r(f), c = r([].push), h = function(a) {
                return function(v) {
                  for (var y = i(v), g = n(y), e = g.length, m = 0, w = [], D; e > m; )
                    D = g[m++], (!o || l(y, D)) && c(w, a ? [D, y[D]] : y[D]);
                  return w;
                };
              };
              u.exports = {
                // `Object.entries` method
                // https://tc39.es/ecma262/#sec-object.entries
                entries: h(!0),
                // `Object.values` method
                // https://tc39.es/ecma262/#sec-object.values
                values: h(!1)
              };
            }
          ),
          /***/
          36699: (
            /***/
            function(u, d, t) {
              var o = t(57301), r = t(36994);
              u.exports = o ? {}.toString : function() {
                return "[object " + r(this) + "]";
              };
            }
          ),
          /***/
          17141: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(79611), n = t(75277), i = t(52786), f = o.TypeError;
              u.exports = function(l, c) {
                var h, a;
                if (c === "string" && n(h = l.toString) && !i(a = r(h, l)) || n(h = l.valueOf) && !i(a = r(h, l)) || c !== "string" && n(h = l.toString) && !i(a = r(h, l)))
                  return a;
                throw f("Can't convert object to primitive value");
              };
            }
          ),
          /***/
          31561: (
            /***/
            function(u, d, t) {
              var o = t(22773), r = t(88697), n = t(87994), i = t(89612), f = t(83875), l = r([].concat);
              u.exports = o("Reflect", "ownKeys") || function(h) {
                var a = n.f(f(h)), v = i.f;
                return v ? l(a, v(h)) : a;
              };
            }
          ),
          /***/
          67290: (
            /***/
            function(u, d, t) {
              var o = t(98363);
              u.exports = o;
            }
          ),
          /***/
          74443: (
            /***/
            function(u) {
              u.exports = function(d) {
                try {
                  return { error: !1, value: d() };
                } catch (t) {
                  return { error: !0, value: t };
                }
              };
            }
          ),
          /***/
          11621: (
            /***/
            function(u, d, t) {
              var o = t(83875), r = t(52786), n = t(29269);
              u.exports = function(i, f) {
                if (o(i), r(f) && f.constructor === i)
                  return f;
                var l = n.f(i), c = l.resolve;
                return c(f), l.promise;
              };
            }
          ),
          /***/
          7592: (
            /***/
            function(u, d, t) {
              var o = t(35974);
              u.exports = function(r, n, i) {
                for (var f in n)
                  o(r, f, n[f], i);
                return r;
              };
            }
          ),
          /***/
          35974: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(75277), n = t(24792), i = t(45899), f = t(51621), l = t(56429), c = t(20821), h = t(55316).CONFIGURABLE, a = c.get, v = c.enforce, y = String(String).split("String");
              (u.exports = function(g, e, m, w) {
                var D = w ? !!w.unsafe : !1, I = w ? !!w.enumerable : !1, T = w ? !!w.noTargetGet : !1, C = w && w.name !== void 0 ? w.name : e, E;
                if (r(m) && (String(C).slice(0, 7) === "Symbol(" && (C = "[" + String(C).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!n(m, "name") || h && m.name !== C) && i(m, "name", C), E = v(m), E.source || (E.source = y.join(typeof C == "string" ? C : ""))), g === o) {
                  I ? g[e] = m : f(e, m);
                  return;
                } else
                  D ? !T && g[e] && (I = !0) : delete g[e];
                I ? g[e] = m : i(g, e, m);
              })(Function.prototype, "toString", function() {
                return r(this) && a(this).source || l(this);
              });
            }
          ),
          /***/
          94088: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(79611), n = t(83875), i = t(75277), f = t(79159), l = t(99749), c = o.TypeError;
              u.exports = function(h, a) {
                var v = h.exec;
                if (i(v)) {
                  var y = r(v, h, a);
                  return y !== null && n(y), y;
                }
                if (f(h) === "RegExp")
                  return r(l, h, a);
                throw c("RegExp#exec called on incompatible receiver");
              };
            }
          ),
          /***/
          99749: (
            /***/
            function(u, d, t) {
              var o = t(79611), r = t(88697), n = t(28967), i = t(58083), f = t(97047), l = t(53580), c = t(51569), h = t(20821).get, a = t(41669), v = t(1638), y = l("native-string-replace", String.prototype.replace), g = RegExp.prototype.exec, e = g, m = r("".charAt), w = r("".indexOf), D = r("".replace), I = r("".slice), T = function() {
                var x = /a/, P = /b*/g;
                return o(g, x, "a"), o(g, P, "a"), x.lastIndex !== 0 || P.lastIndex !== 0;
              }(), C = f.UNSUPPORTED_Y || f.BROKEN_CARET, E = /()??/.exec("")[1] !== void 0, F = T || E || C || a || v;
              F && (e = function(P) {
                var L = this, N = h(L), M = n(P), K = N.raw, ut, J, rt, yt, xt, Et, Ft;
                if (K)
                  return K.lastIndex = L.lastIndex, ut = o(e, K, M), L.lastIndex = K.lastIndex, ut;
                var Rt = N.groups, Ut = C && L.sticky, Q = o(i, L), pt = L.source, ct = 0, ot = M;
                if (Ut && (Q = D(Q, "y", ""), w(Q, "g") === -1 && (Q += "g"), ot = I(M, L.lastIndex), L.lastIndex > 0 && (!L.multiline || L.multiline && m(M, L.lastIndex - 1) !== `
`) && (pt = "(?: " + pt + ")", ot = " " + ot, ct++), J = new RegExp("^(?:" + pt + ")", Q)), E && (J = new RegExp("^" + pt + "$(?!\\s)", Q)), T && (rt = L.lastIndex), yt = o(g, Ut ? J : L, ot), Ut ? yt ? (yt.input = I(yt.input, ct), yt[0] = I(yt[0], ct), yt.index = L.lastIndex, L.lastIndex += yt[0].length) : L.lastIndex = 0 : T && yt && (L.lastIndex = L.global ? yt.index + yt[0].length : rt), E && yt && yt.length > 1 && o(y, yt[0], J, function() {
                  for (xt = 1; xt < arguments.length - 2; xt++)
                    arguments[xt] === void 0 && (yt[xt] = void 0);
                }), yt && Rt)
                  for (yt.groups = Et = c(null), xt = 0; xt < Rt.length; xt++)
                    Ft = Rt[xt], Et[Ft[0]] = yt[Ft[1]];
                return yt;
              }), u.exports = e;
            }
          ),
          /***/
          58083: (
            /***/
            function(u, d, t) {
              var o = t(83875);
              u.exports = function() {
                var r = o(this), n = "";
                return r.global && (n += "g"), r.ignoreCase && (n += "i"), r.multiline && (n += "m"), r.dotAll && (n += "s"), r.unicode && (n += "u"), r.sticky && (n += "y"), n;
              };
            }
          ),
          /***/
          97047: (
            /***/
            function(u, d, t) {
              var o = t(79044), r = t(98363), n = r.RegExp;
              d.UNSUPPORTED_Y = o(function() {
                var i = n("a", "y");
                return i.lastIndex = 2, i.exec("abcd") != null;
              }), d.BROKEN_CARET = o(function() {
                var i = n("^r", "gy");
                return i.lastIndex = 2, i.exec("str") != null;
              });
            }
          ),
          /***/
          41669: (
            /***/
            function(u, d, t) {
              var o = t(79044), r = t(98363), n = r.RegExp;
              u.exports = o(function() {
                var i = n(".", "s");
                return !(i.dotAll && i.exec(`
`) && i.flags === "s");
              });
            }
          ),
          /***/
          1638: (
            /***/
            function(u, d, t) {
              var o = t(79044), r = t(98363), n = r.RegExp;
              u.exports = o(function() {
                var i = n("(?<a>b)", "g");
                return i.exec("b").groups.a !== "b" || "b".replace(i, "$<a>c") !== "bc";
              });
            }
          ),
          /***/
          96411: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = o.TypeError;
              u.exports = function(n) {
                if (n == null)
                  throw r("Can't call method on " + n);
                return n;
              };
            }
          ),
          /***/
          51621: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = Object.defineProperty;
              u.exports = function(n, i) {
                try {
                  r(o, n, { value: i, configurable: !0, writable: !0 });
                } catch {
                  o[n] = i;
                }
                return i;
              };
            }
          ),
          /***/
          57323: (
            /***/
            function(u, d, t) {
              var o = t(22773), r = t(86385), n = t(52280), i = t(7493), f = n("species");
              u.exports = function(l) {
                var c = o(l), h = r.f;
                i && c && !c[f] && h(c, f, {
                  configurable: !0,
                  get: function() {
                    return this;
                  }
                });
              };
            }
          ),
          /***/
          60878: (
            /***/
            function(u, d, t) {
              var o = t(86385).f, r = t(24792), n = t(52280), i = n("toStringTag");
              u.exports = function(f, l, c) {
                f && !r(f = c ? f : f.prototype, i) && o(f, i, { configurable: !0, value: l });
              };
            }
          ),
          /***/
          50466: (
            /***/
            function(u, d, t) {
              var o = t(53580), r = t(34524), n = o("keys");
              u.exports = function(i) {
                return n[i] || (n[i] = r(i));
              };
            }
          ),
          /***/
          49415: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(51621), n = "__core-js_shared__", i = o[n] || r(n, {});
              u.exports = i;
            }
          ),
          /***/
          53580: (
            /***/
            function(u, d, t) {
              var o = t(21178), r = t(49415);
              (u.exports = function(n, i) {
                return r[n] || (r[n] = i !== void 0 ? i : {});
              })("versions", []).push({
                version: "3.19.0",
                mode: o ? "pure" : "global",
                copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)"
              });
            }
          ),
          /***/
          7270: (
            /***/
            function(u, d, t) {
              var o = t(83875), r = t(43327), n = t(52280), i = n("species");
              u.exports = function(f, l) {
                var c = o(f).constructor, h;
                return c === void 0 || (h = o(c)[i]) == null ? l : r(h);
              };
            }
          ),
          /***/
          13881: (
            /***/
            function(u, d, t) {
              var o = t(79044);
              u.exports = function(r) {
                return o(function() {
                  var n = ""[r]('"');
                  return n !== n.toLowerCase() || n.split('"').length > 3;
                });
              };
            }
          ),
          /***/
          91140: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(14229), n = t(28967), i = t(96411), f = o("".charAt), l = o("".charCodeAt), c = o("".slice), h = function(a) {
                return function(v, y) {
                  var g = n(i(v)), e = r(y), m = g.length, w, D;
                  return e < 0 || e >= m ? a ? "" : void 0 : (w = l(g, e), w < 55296 || w > 56319 || e + 1 === m || (D = l(g, e + 1)) < 56320 || D > 57343 ? a ? f(g, e) : w : a ? c(g, e, e + 2) : (w - 55296 << 10) + (D - 56320) + 65536);
                };
              };
              u.exports = {
                // `String.prototype.codePointAt` method
                // https://tc39.es/ecma262/#sec-string.prototype.codepointat
                codeAt: h(!1),
                // `String.prototype.at` method
                // https://github.com/mathiasbynens/String.prototype.at
                charAt: h(!0)
              };
            }
          ),
          /***/
          26031: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(14229), n = t(28967), i = t(96411), f = o.RangeError;
              u.exports = function(c) {
                var h = n(i(this)), a = "", v = r(c);
                if (v < 0 || v == 1 / 0)
                  throw f("Wrong number of repetitions");
                for (; v > 0; (v >>>= 1) && (h += h))
                  v & 1 && (a += h);
                return a;
              };
            }
          ),
          /***/
          68487: (
            /***/
            function(u, d, t) {
              var o = t(55316).PROPER, r = t(79044), n = t(2569), i = "âÂá ";
              u.exports = function(f) {
                return r(function() {
                  return !!n[f]() || i[f]() !== i || o && n[f].name !== f;
                });
              };
            }
          ),
          /***/
          10287: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(96411), n = t(28967), i = t(2569), f = o("".replace), l = "[" + i + "]", c = RegExp("^" + l + l + "*"), h = RegExp(l + l + "*$"), a = function(v) {
                return function(y) {
                  var g = n(r(y));
                  return v & 1 && (g = f(g, c, "")), v & 2 && (g = f(g, h, "")), g;
                };
              };
              u.exports = {
                // `String.prototype.{ trimLeft, trimStart }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimstart
                start: a(1),
                // `String.prototype.{ trimRight, trimEnd }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimend
                end: a(2),
                // `String.prototype.trim` method
                // https://tc39.es/ecma262/#sec-string.prototype.trim
                trim: a(3)
              };
            }
          ),
          /***/
          84643: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(63530), n = t(98166), i = t(75277), f = t(24792), l = t(79044), c = t(47055), h = t(15629), a = t(92750), v = t(53121), y = t(93921), g = o.setImmediate, e = o.clearImmediate, m = o.process, w = o.Dispatch, D = o.Function, I = o.MessageChannel, T = o.String, C = 0, E = {}, F = "onreadystatechange", x, P, L, N;
              try {
                x = o.location;
              } catch {
              }
              var M = function(rt) {
                if (f(E, rt)) {
                  var yt = E[rt];
                  delete E[rt], yt();
                }
              }, K = function(rt) {
                return function() {
                  M(rt);
                };
              }, ut = function(rt) {
                M(rt.data);
              }, J = function(rt) {
                o.postMessage(T(rt), x.protocol + "//" + x.host);
              };
              (!g || !e) && (g = function(yt) {
                var xt = h(arguments, 1);
                return E[++C] = function() {
                  r(i(yt) ? yt : D(yt), void 0, xt);
                }, P(C), C;
              }, e = function(yt) {
                delete E[yt];
              }, y ? P = function(rt) {
                m.nextTick(K(rt));
              } : w && w.now ? P = function(rt) {
                w.now(K(rt));
              } : I && !v ? (L = new I(), N = L.port2, L.port1.onmessage = ut, P = n(N.postMessage, N)) : o.addEventListener && i(o.postMessage) && !o.importScripts && x && x.protocol !== "file:" && !l(J) ? (P = J, o.addEventListener("message", ut, !1)) : F in a("script") ? P = function(rt) {
                c.appendChild(a("script"))[F] = function() {
                  c.removeChild(this), M(rt);
                };
              } : P = function(rt) {
                setTimeout(K(rt), 0);
              }), u.exports = {
                set: g,
                clear: e
              };
            }
          ),
          /***/
          41655: (
            /***/
            function(u, d, t) {
              var o = t(88697);
              u.exports = o(1 .valueOf);
            }
          ),
          /***/
          32565: (
            /***/
            function(u, d, t) {
              var o = t(14229), r = Math.max, n = Math.min;
              u.exports = function(i, f) {
                var l = o(i);
                return l < 0 ? r(l + f, 0) : n(l, f);
              };
            }
          ),
          /***/
          27302: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(14229), n = t(35108), i = o.RangeError;
              u.exports = function(f) {
                if (f === void 0)
                  return 0;
                var l = r(f), c = n(l);
                if (l !== c)
                  throw i("Wrong length or index");
                return c;
              };
            }
          ),
          /***/
          29580: (
            /***/
            function(u, d, t) {
              var o = t(78609), r = t(96411);
              u.exports = function(n) {
                return o(r(n));
              };
            }
          ),
          /***/
          14229: (
            /***/
            function(u) {
              var d = Math.ceil, t = Math.floor;
              u.exports = function(o) {
                var r = +o;
                return r !== r || r === 0 ? 0 : (r > 0 ? t : d)(r);
              };
            }
          ),
          /***/
          35108: (
            /***/
            function(u, d, t) {
              var o = t(14229), r = Math.min;
              u.exports = function(n) {
                return n > 0 ? r(o(n), 9007199254740991) : 0;
              };
            }
          ),
          /***/
          30744: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(96411), n = o.Object;
              u.exports = function(i) {
                return n(r(i));
              };
            }
          ),
          /***/
          65758: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(83786), n = o.RangeError;
              u.exports = function(i, f) {
                var l = r(i);
                if (l % f)
                  throw n("Wrong offset");
                return l;
              };
            }
          ),
          /***/
          83786: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(14229), n = o.RangeError;
              u.exports = function(i) {
                var f = r(i);
                if (f < 0)
                  throw n("The argument can't be less than 0");
                return f;
              };
            }
          ),
          /***/
          21893: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(79611), n = t(52786), i = t(66681), f = t(97219), l = t(17141), c = t(52280), h = o.TypeError, a = c("toPrimitive");
              u.exports = function(v, y) {
                if (!n(v) || i(v))
                  return v;
                var g = f(v, a), e;
                if (g) {
                  if (y === void 0 && (y = "default"), e = r(g, v, y), !n(e) || i(e))
                    return e;
                  throw h("Can't convert object to primitive value");
                }
                return y === void 0 && (y = "number"), l(v, y);
              };
            }
          ),
          /***/
          383: (
            /***/
            function(u, d, t) {
              var o = t(21893), r = t(66681);
              u.exports = function(n) {
                var i = o(n, "string");
                return r(i) ? i : i + "";
              };
            }
          ),
          /***/
          57301: (
            /***/
            function(u, d, t) {
              var o = t(52280), r = o("toStringTag"), n = {};
              n[r] = "z", u.exports = String(n) === "[object z]";
            }
          ),
          /***/
          28967: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(36994), n = o.String;
              u.exports = function(i) {
                if (r(i) === "Symbol")
                  throw TypeError("Cannot convert a Symbol value to a string");
                return n(i);
              };
            }
          ),
          /***/
          28768: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = o.String;
              u.exports = function(n) {
                try {
                  return r(n);
                } catch {
                  return "Object";
                }
              };
            }
          ),
          /***/
          26764: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(79611), i = t(7493), f = t(63231), l = t(32590), c = t(74510), h = t(9519), a = t(69199), v = t(45899), y = t(57507), g = t(35108), e = t(27302), m = t(65758), w = t(383), D = t(24792), I = t(36994), T = t(52786), C = t(66681), E = t(51569), F = t(32010), x = t(22412), P = t(87994).f, L = t(66503), N = t(68671).forEach, M = t(57323), K = t(86385), ut = t(66012), J = t(20821), rt = t(59250), yt = J.get, xt = J.set, Et = K.f, Ft = ut.f, Rt = Math.round, Ut = r.RangeError, Q = c.ArrayBuffer, pt = Q.prototype, ct = c.DataView, ot = l.NATIVE_ARRAY_BUFFER_VIEWS, mt = l.TYPED_ARRAY_CONSTRUCTOR, G = l.TYPED_ARRAY_TAG, Tt = l.TypedArray, z = l.TypedArrayPrototype, S = l.aTypedArrayConstructor, k = l.isTypedArray, V = "BYTES_PER_ELEMENT", it = "Wrong length", tt = function(Dt, ae) {
                S(Dt);
                for (var Ae = 0, xe = ae.length, ce = new Dt(xe); xe > Ae; )
                  ce[Ae] = ae[Ae++];
                return ce;
              }, _ = function(Dt, ae) {
                Et(Dt, ae, { get: function() {
                  return yt(this)[ae];
                } });
              }, At = function(Dt) {
                var ae;
                return F(pt, Dt) || (ae = I(Dt)) == "ArrayBuffer" || ae == "SharedArrayBuffer";
              }, Lt = function(Dt, ae) {
                return k(Dt) && !C(ae) && ae in Dt && y(+ae) && ae >= 0;
              }, Yt = function(ae, Ae) {
                return Ae = w(Ae), Lt(ae, Ae) ? a(2, ae[Ae]) : Ft(ae, Ae);
              }, Gt = function(ae, Ae, xe) {
                return Ae = w(Ae), Lt(ae, Ae) && T(xe) && D(xe, "value") && !D(xe, "get") && !D(xe, "set") && !xe.configurable && (!D(xe, "writable") || xe.writable) && (!D(xe, "enumerable") || xe.enumerable) ? (ae[Ae] = xe.value, ae) : Et(ae, Ae, xe);
              };
              i ? (ot || (ut.f = Yt, K.f = Gt, _(z, "buffer"), _(z, "byteOffset"), _(z, "byteLength"), _(z, "length")), o({ target: "Object", stat: !0, forced: !ot }, {
                getOwnPropertyDescriptor: Yt,
                defineProperty: Gt
              }), u.exports = function(Dt, ae, Ae) {
                var xe = Dt.match(/\d+$/)[0] / 8, ce = Dt + (Ae ? "Clamped" : "") + "Array", we = "get" + Dt, zt = "set" + Dt, Qt = r[ce], le = Qt, de = le && le.prototype, be = {}, Pe = function(fe, st) {
                  var Y = yt(fe);
                  return Y.view[we](st * xe + Y.byteOffset, !0);
                }, Fe = function(fe, st, Y) {
                  var j = yt(fe);
                  Ae && (Y = (Y = Rt(Y)) < 0 ? 0 : Y > 255 ? 255 : Y & 255), j.view[zt](st * xe + j.byteOffset, Y, !0);
                }, It = function(fe, st) {
                  Et(fe, st, {
                    get: function() {
                      return Pe(this, st);
                    },
                    set: function(Y) {
                      return Fe(this, st, Y);
                    },
                    enumerable: !0
                  });
                };
                ot ? f && (le = ae(function(fe, st, Y, j) {
                  return h(fe, de), rt(function() {
                    return T(st) ? At(st) ? j !== void 0 ? new Qt(st, m(Y, xe), j) : Y !== void 0 ? new Qt(st, m(Y, xe)) : new Qt(st) : k(st) ? tt(le, st) : n(L, le, st) : new Qt(e(st));
                  }(), fe, le);
                }), x && x(le, Tt), N(P(Qt), function(fe) {
                  fe in le || v(le, fe, Qt[fe]);
                }), le.prototype = de) : (le = ae(function(fe, st, Y, j) {
                  h(fe, de);
                  var bt = 0, at = 0, Wt, _t, $;
                  if (!T(st))
                    $ = e(st), _t = $ * xe, Wt = new Q(_t);
                  else if (At(st)) {
                    Wt = st, at = m(Y, xe);
                    var Jt = st.byteLength;
                    if (j === void 0) {
                      if (Jt % xe || (_t = Jt - at, _t < 0))
                        throw Ut(it);
                    } else if (_t = g(j) * xe, _t + at > Jt)
                      throw Ut(it);
                    $ = _t / xe;
                  } else
                    return k(st) ? tt(le, st) : n(L, le, st);
                  for (xt(fe, {
                    buffer: Wt,
                    byteOffset: at,
                    byteLength: _t,
                    length: $,
                    view: new ct(Wt)
                  }); bt < $; )
                    It(fe, bt++);
                }), x && x(le, Tt), de = le.prototype = E(z)), de.constructor !== le && v(de, "constructor", le), v(de, mt, le), G && v(de, G, ce), be[ce] = le, o({
                  global: !0,
                  forced: le != Qt,
                  sham: !ot
                }, be), V in le || v(le, V, xe), V in de || v(de, V, xe), M(ce);
              }) : u.exports = function() {
              };
            }
          ),
          /***/
          63231: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(79044), n = t(8662), i = t(32590).NATIVE_ARRAY_BUFFER_VIEWS, f = o.ArrayBuffer, l = o.Int8Array;
              u.exports = !i || !r(function() {
                l(1);
              }) || !r(function() {
                new l(-1);
              }) || !n(function(c) {
                new l(), new l(null), new l(1.5), new l(c);
              }, !0) || r(function() {
                return new l(new f(2), 1, void 0).length !== 1;
              });
            }
          ),
          /***/
          53687: (
            /***/
            function(u, d, t) {
              var o = t(65626), r = t(36107);
              u.exports = function(n, i) {
                return o(r(n), i);
              };
            }
          ),
          /***/
          66503: (
            /***/
            function(u, d, t) {
              var o = t(98166), r = t(79611), n = t(43327), i = t(30744), f = t(47046), l = t(11805), c = t(77193), h = t(68089), a = t(32590).aTypedArrayConstructor;
              u.exports = function(y) {
                var g = n(this), e = i(y), m = arguments.length, w = m > 1 ? arguments[1] : void 0, D = w !== void 0, I = c(e), T, C, E, F, x, P;
                if (I && !h(I))
                  for (x = l(e, I), P = x.next, e = []; !(F = r(P, x)).done; )
                    e.push(F.value);
                for (D && m > 2 && (w = o(w, arguments[2])), C = f(e), E = new (a(g))(C), T = 0; C > T; T++)
                  E[T] = D ? w(e[T], T) : e[T];
                return E;
              };
            }
          ),
          /***/
          36107: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(7270), n = o.TYPED_ARRAY_CONSTRUCTOR, i = o.aTypedArrayConstructor;
              u.exports = function(f) {
                return i(r(f, f[n]));
              };
            }
          ),
          /***/
          34524: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = 0, n = Math.random(), i = o(1 .toString);
              u.exports = function(f) {
                return "Symbol(" + (f === void 0 ? "" : f) + ")_" + i(++r + n, 36);
              };
            }
          ),
          /***/
          189: (
            /***/
            function(u, d, t) {
              var o = t(3850);
              u.exports = o && !Symbol.sham && typeof Symbol.iterator == "symbol";
            }
          ),
          /***/
          20127: (
            /***/
            function(u, d, t) {
              var o = t(52280);
              d.f = o;
            }
          ),
          /***/
          52280: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(53580), n = t(24792), i = t(34524), f = t(3850), l = t(189), c = r("wks"), h = o.Symbol, a = h && h.for, v = l ? h : h && h.withoutSetter || i;
              u.exports = function(y) {
                if (!n(c, y) || !(f || typeof c[y] == "string")) {
                  var g = "Symbol." + y;
                  f && n(h, y) ? c[y] = h[y] : l && a ? c[y] = a(g) : c[y] = v(g);
                }
                return c[y];
              };
            }
          ),
          /***/
          2569: (
            /***/
            function(u) {
              u.exports = `	
\v\f\r Â áââââââââââââ¯âã\u2028\u2029\uFEFF`;
            }
          ),
          /***/
          55739: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(32010), i = t(12654), f = t(22412), l = t(73870), c = t(51569), h = t(45899), a = t(69199), v = t(8457), y = t(58323), g = t(5166), e = t(654), m = t(67679), w = r.Error, D = [].push, I = function(E, F) {
                var x = n(T, this) ? this : c(T), P = arguments.length > 2 ? arguments[2] : void 0;
                f && (x = f(new w(void 0), i(x))), h(x, "message", e(F, "")), m && h(x, "stack", v(x.stack, 1)), y(x, P);
                var L = [];
                return g(E, D, { that: L }), h(x, "errors", L), x;
              };
              f ? f(I, w) : l(I, w);
              var T = I.prototype = c(w.prototype, {
                constructor: a(1, I),
                message: a(1, ""),
                name: a(1, "AggregateError")
              });
              o({ global: !0 }, {
                AggregateError: I
              });
            }
          ),
          /***/
          55862: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(79044), i = t(71982), f = t(52786), l = t(30744), c = t(47046), h = t(35039), a = t(80150), v = t(82091), y = t(52280), g = t(11197), e = y("isConcatSpreadable"), m = 9007199254740991, w = "Maximum allowed index exceeded", D = r.TypeError, I = g >= 51 || !n(function() {
                var F = [];
                return F[e] = !1, F.concat()[0] !== F;
              }), T = v("concat"), C = function(F) {
                if (!f(F))
                  return !1;
                var x = F[e];
                return x !== void 0 ? !!x : i(F);
              }, E = !I || !T;
              o({ target: "Array", proto: !0, forced: E }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                concat: function(x) {
                  var P = l(this), L = a(P, 0), N = 0, M, K, ut, J, rt;
                  for (M = -1, ut = arguments.length; M < ut; M++)
                    if (rt = M === -1 ? P : arguments[M], C(rt)) {
                      if (J = c(rt), N + J > m)
                        throw D(w);
                      for (K = 0; K < J; K++, N++)
                        K in rt && h(L, N, rt[K]);
                    } else {
                      if (N >= m)
                        throw D(w);
                      h(L, N++, rt);
                    }
                  return L.length = N, L;
                }
              });
            }
          ),
          /***/
          42833: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(28794), n = t(6677);
              o({ target: "Array", proto: !0 }, {
                copyWithin: r
              }), n("copyWithin");
            }
          ),
          /***/
          83382: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(55522), n = t(6677);
              o({ target: "Array", proto: !0 }, {
                fill: r
              }), n("fill");
            }
          ),
          /***/
          19701: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(68671).filter, n = t(82091), i = n("filter");
              o({ target: "Array", proto: !0, forced: !i }, {
                filter: function(l) {
                  return r(this, l, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          4845: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(84899), n = t(8662), i = !n(function(f) {
                Array.from(f);
              });
              o({ target: "Array", stat: !0, forced: i }, {
                from: r
              });
            }
          ),
          /***/
          18183: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(37190).includes, n = t(6677);
              o({ target: "Array", proto: !0 }, {
                includes: function(f) {
                  return r(this, f, arguments.length > 1 ? arguments[1] : void 0);
                }
              }), n("includes");
            }
          ),
          /***/
          54883: (
            /***/
            function(u, d, t) {
              var o = t(29580), r = t(6677), n = t(44818), i = t(20821), f = t(61495), l = "Array Iterator", c = i.set, h = i.getterFor(l);
              u.exports = f(Array, "Array", function(a, v) {
                c(this, {
                  type: l,
                  target: o(a),
                  // target
                  index: 0,
                  // next index
                  kind: v
                  // kind
                });
              }, function() {
                var a = h(this), v = a.target, y = a.kind, g = a.index++;
                return !v || g >= v.length ? (a.target = void 0, { value: void 0, done: !0 }) : y == "keys" ? { value: g, done: !1 } : y == "values" ? { value: v[g], done: !1 } : { value: [g, v[g]], done: !1 };
              }, "values"), n.Arguments = n.Array, r("keys"), r("values"), r("entries");
            }
          ),
          /***/
          85005: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(88697), n = t(78609), i = t(29580), f = t(54324), l = r([].join), c = n != Object, h = f("join", ",");
              o({ target: "Array", proto: !0, forced: c || !h }, {
                join: function(v) {
                  return l(i(this), v === void 0 ? "," : v);
                }
              });
            }
          ),
          /***/
          73214: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(68671).map, n = t(82091), i = n("map");
              o({ target: "Array", proto: !0, forced: !i }, {
                map: function(l) {
                  return r(this, l, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          18821: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(71982), i = t(31536), f = t(52786), l = t(32565), c = t(47046), h = t(29580), a = t(35039), v = t(52280), y = t(82091), g = t(15629), e = y("slice"), m = v("species"), w = r.Array, D = Math.max;
              o({ target: "Array", proto: !0, forced: !e }, {
                slice: function(T, C) {
                  var E = h(this), F = c(E), x = l(T, F), P = l(C === void 0 ? F : C, F), L, N, M;
                  if (n(E) && (L = E.constructor, i(L) && (L === w || n(L.prototype)) ? L = void 0 : f(L) && (L = L[m], L === null && (L = void 0)), L === w || L === void 0))
                    return g(E, x, P);
                  for (N = new (L === void 0 ? w : L)(D(P - x, 0)), M = 0; x < P; x++, M++)
                    x in E && a(N, M, E[x]);
                  return N.length = M, N;
                }
              });
            }
          ),
          /***/
          55281: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(88697), n = t(97676), i = t(30744), f = t(47046), l = t(28967), c = t(79044), h = t(2013), a = t(54324), v = t(34631), y = t(80442), g = t(11197), e = t(76929), m = [], w = r(m.sort), D = r(m.push), I = c(function() {
                m.sort(void 0);
              }), T = c(function() {
                m.sort(null);
              }), C = a("sort"), E = !c(function() {
                if (g)
                  return g < 70;
                if (!(v && v > 3)) {
                  if (y)
                    return !0;
                  if (e)
                    return e < 603;
                  var P = "", L, N, M, K;
                  for (L = 65; L < 76; L++) {
                    switch (N = String.fromCharCode(L), L) {
                      case 66:
                      case 69:
                      case 70:
                      case 72:
                        M = 3;
                        break;
                      case 68:
                      case 71:
                        M = 4;
                        break;
                      default:
                        M = 2;
                    }
                    for (K = 0; K < 47; K++)
                      m.push({ k: N + K, v: M });
                  }
                  for (m.sort(function(ut, J) {
                    return J.v - ut.v;
                  }), K = 0; K < m.length; K++)
                    N = m[K].k.charAt(0), P.charAt(P.length - 1) !== N && (P += N);
                  return P !== "DGBEFHACIJK";
                }
              }), F = I || !T || !C || !E, x = function(P) {
                return function(L, N) {
                  return N === void 0 ? -1 : L === void 0 ? 1 : P !== void 0 ? +P(L, N) || 0 : l(L) > l(N) ? 1 : -1;
                };
              };
              o({ target: "Array", proto: !0, forced: F }, {
                sort: function(L) {
                  L !== void 0 && n(L);
                  var N = i(this);
                  if (E)
                    return L === void 0 ? w(N) : w(N, L);
                  var M = [], K = f(N), ut, J;
                  for (J = 0; J < K; J++)
                    J in N && D(M, N[J]);
                  for (h(M, x(L)), ut = M.length, J = 0; J < ut; )
                    N[J] = M[J++];
                  for (; J < K; )
                    delete N[J++];
                  return N;
                }
              });
            }
          ),
          /***/
          45550: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(32565), i = t(14229), f = t(47046), l = t(30744), c = t(80150), h = t(35039), a = t(82091), v = a("splice"), y = r.TypeError, g = Math.max, e = Math.min, m = 9007199254740991, w = "Maximum allowed length exceeded";
              o({ target: "Array", proto: !0, forced: !v }, {
                splice: function(I, T) {
                  var C = l(this), E = f(C), F = n(I, E), x = arguments.length, P, L, N, M, K, ut;
                  if (x === 0 ? P = L = 0 : x === 1 ? (P = 0, L = E - F) : (P = x - 2, L = e(g(i(T), 0), E - F)), E + P - L > m)
                    throw y(w);
                  for (N = c(C, L), M = 0; M < L; M++)
                    K = F + M, K in C && h(N, M, C[K]);
                  if (N.length = L, P < L) {
                    for (M = F; M < E - L; M++)
                      K = M + L, ut = M + P, K in C ? C[ut] = C[K] : delete C[ut];
                    for (M = E; M > E - L + P; M--)
                      delete C[M - 1];
                  } else if (P > L)
                    for (M = E - L; M > F; M--)
                      K = M + L - 1, ut = M + P - 1, K in C ? C[ut] = C[K] : delete C[ut];
                  for (M = 0; M < P; M++)
                    C[M + F] = arguments[M + 2];
                  return C.length = E - L + P, N;
                }
              });
            }
          ),
          /***/
          33142: (
            /***/
            function(u, d, t) {
              var o = t(24792), r = t(35974), n = t(67707), i = t(52280), f = i("toPrimitive"), l = Date.prototype;
              o(l, f) || r(l, f, n);
            }
          ),
          /***/
          54994: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(55316).EXISTS, n = t(88697), i = t(86385).f, f = Function.prototype, l = n(f.toString), c = /^\s*function ([^ (]*)/, h = n(c.exec), a = "name";
              o && !r && i(f, a, {
                configurable: !0,
                get: function() {
                  try {
                    return h(c, l(this))[1];
                  } catch {
                    return "";
                  }
                }
              });
            }
          ),
          /***/
          62688: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363);
              o({ global: !0 }, {
                globalThis: r
              });
            }
          ),
          /***/
          44063: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(60878);
              r(o.JSON, "JSON", !0);
            }
          ),
          /***/
          30644: (
            /***/
            function(u, d, t) {
              var o = t(9121), r = t(33513);
              o("Map", function(n) {
                return function() {
                  return n(this, arguments.length ? arguments[0] : void 0);
                };
              }, r);
            }
          ),
          /***/
          62031: (
            /***/
            function(u, d, t) {
              var o = t(60878);
              o(Math, "Math", !0);
            }
          ),
          /***/
          80174: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(98363), n = t(88697), i = t(86291), f = t(35974), l = t(24792), c = t(59250), h = t(32010), a = t(66681), v = t(21893), y = t(79044), g = t(87994).f, e = t(66012).f, m = t(86385).f, w = t(41655), D = t(10287).trim, I = "Number", T = r[I], C = T.prototype, E = r.TypeError, F = n("".slice), x = n("".charCodeAt), P = function(J) {
                var rt = v(J, "number");
                return typeof rt == "bigint" ? rt : L(rt);
              }, L = function(J) {
                var rt = v(J, "number"), yt, xt, Et, Ft, Rt, Ut, Q, pt;
                if (a(rt))
                  throw E("Cannot convert a Symbol value to a number");
                if (typeof rt == "string" && rt.length > 2) {
                  if (rt = D(rt), yt = x(rt, 0), yt === 43 || yt === 45) {
                    if (xt = x(rt, 2), xt === 88 || xt === 120)
                      return NaN;
                  } else if (yt === 48) {
                    switch (x(rt, 1)) {
                      case 66:
                      case 98:
                        Et = 2, Ft = 49;
                        break;
                      case 79:
                      case 111:
                        Et = 8, Ft = 55;
                        break;
                      default:
                        return +rt;
                    }
                    for (Rt = F(rt, 2), Ut = Rt.length, Q = 0; Q < Ut; Q++)
                      if (pt = x(Rt, Q), pt < 48 || pt > Ft)
                        return NaN;
                    return parseInt(Rt, Et);
                  }
                }
                return +rt;
              };
              if (i(I, !T(" 0o1") || !T("0b1") || T("+0x1"))) {
                for (var N = function(rt) {
                  var yt = arguments.length < 1 ? 0 : T(P(rt)), xt = this;
                  return h(C, xt) && y(function() {
                    w(xt);
                  }) ? c(Object(yt), xt, N) : yt;
                }, M = o ? g(T) : (
                  // ES3:
                  "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(",")
                ), K = 0, ut; M.length > K; K++)
                  l(T, ut = M[K]) && !l(N, ut) && m(N, ut, e(T, ut));
                N.prototype = C, C.constructor = N, f(r, I, N);
              }
            }
          ),
          /***/
          27013: (
            /***/
            function(u, d, t) {
              var o = t(19882);
              o({ target: "Number", stat: !0 }, {
                EPSILON: Math.pow(2, -52)
              });
            }
          ),
          /***/
          14686: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(5310);
              o({ target: "Number", stat: !0 }, { isFinite: r });
            }
          ),
          /***/
          35727: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(57507);
              o({ target: "Number", stat: !0 }, {
                isInteger: r
              });
            }
          ),
          /***/
          12798: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(88697), i = t(14229), f = t(41655), l = t(26031), c = t(79044), h = r.RangeError, a = r.String, v = Math.floor, y = n(l), g = n("".slice), e = n(1 .toFixed), m = function(E, F, x) {
                return F === 0 ? x : F % 2 === 1 ? m(E, F - 1, x * E) : m(E * E, F / 2, x);
              }, w = function(E) {
                for (var F = 0, x = E; x >= 4096; )
                  F += 12, x /= 4096;
                for (; x >= 2; )
                  F += 1, x /= 2;
                return F;
              }, D = function(E, F, x) {
                for (var P = -1, L = x; ++P < 6; )
                  L += F * E[P], E[P] = L % 1e7, L = v(L / 1e7);
              }, I = function(E, F) {
                for (var x = 6, P = 0; --x >= 0; )
                  P += E[x], E[x] = v(P / F), P = P % F * 1e7;
              }, T = function(E) {
                for (var F = 6, x = ""; --F >= 0; )
                  if (x !== "" || F === 0 || E[F] !== 0) {
                    var P = a(E[F]);
                    x = x === "" ? P : x + y("0", 7 - P.length) + P;
                  }
                return x;
              }, C = c(function() {
                return e(8e-5, 3) !== "0.000" || e(0.9, 0) !== "1" || e(1.255, 2) !== "1.25" || e(1000000000000000100, 0) !== "1000000000000000128";
              }) || !c(function() {
                e({});
              });
              o({ target: "Number", proto: !0, forced: C }, {
                toFixed: function(F) {
                  var x = f(this), P = i(F), L = [0, 0, 0, 0, 0, 0], N = "", M = "0", K, ut, J, rt;
                  if (P < 0 || P > 20)
                    throw h("Incorrect fraction digits");
                  if (x != x)
                    return "NaN";
                  if (x <= -1e21 || x >= 1e21)
                    return a(x);
                  if (x < 0 && (N = "-", x = -x), x > 1e-21)
                    if (K = w(x * m(2, 69, 1)) - 69, ut = K < 0 ? x * m(2, -K, 1) : x / m(2, K, 1), ut *= 4503599627370496, K = 52 - K, K > 0) {
                      for (D(L, 0, ut), J = P; J >= 7; )
                        D(L, 1e7, 0), J -= 7;
                      for (D(L, m(10, J, 1), 0), J = K - 1; J >= 23; )
                        I(L, 8388608), J -= 23;
                      I(L, 1 << J), D(L, 1, 1), I(L, 2), M = T(L);
                    } else
                      D(L, 0, ut), D(L, 1 << -K, 0), M = T(L) + y("0", P);
                  return P > 0 ? (rt = M.length, M = N + (rt <= P ? "0." + y("0", P - rt) + M : g(M, 0, rt - P) + "." + g(M, rt - P))) : M = N + M, M;
                }
              });
            }
          ),
          /***/
          33130: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(45856);
              o({ target: "Object", stat: !0, forced: Object.assign !== r }, {
                assign: r
              });
            }
          ),
          /***/
          63815: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(51207), n = t(79044), i = t(52786), f = t(44296).onFreeze, l = Object.freeze, c = n(function() {
                l(1);
              });
              o({ target: "Object", stat: !0, forced: c, sham: !r }, {
                freeze: function(a) {
                  return l && i(a) ? l(f(a)) : a;
                }
              });
            }
          ),
          /***/
          80238: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(79044), n = t(29580), i = t(66012).f, f = t(7493), l = r(function() {
                i(1);
              }), c = !f || l;
              o({ target: "Object", stat: !0, forced: c, sham: !f }, {
                getOwnPropertyDescriptor: function(a, v) {
                  return i(n(a), v);
                }
              });
            }
          ),
          /***/
          12938: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(7493), n = t(31561), i = t(29580), f = t(66012), l = t(35039);
              o({ target: "Object", stat: !0, sham: !r }, {
                getOwnPropertyDescriptors: function(h) {
                  for (var a = i(h), v = f.f, y = n(a), g = {}, e = 0, m, w; y.length > e; )
                    w = v(a, m = y[e++]), w !== void 0 && l(g, m, w);
                  return g;
                }
              });
            }
          ),
          /***/
          56908: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(79044), n = t(30744), i = t(12654), f = t(25115), l = r(function() {
                i(1);
              });
              o({ target: "Object", stat: !0, forced: l, sham: !f }, {
                getPrototypeOf: function(h) {
                  return i(n(h));
                }
              });
            }
          ),
          /***/
          80044: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(30744), n = t(60667), i = t(79044), f = i(function() {
                n(1);
              });
              o({ target: "Object", stat: !0, forced: f }, {
                keys: function(c) {
                  return n(r(c));
                }
              });
            }
          ),
          /***/
          10853: (
            /***/
            function(u, d, t) {
              var o = t(57301), r = t(35974), n = t(36699);
              o || r(Object.prototype, "toString", n, { unsafe: !0 });
            }
          ),
          /***/
          19457: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(8765).values;
              o({ target: "Object", stat: !0 }, {
                values: function(i) {
                  return r(i);
                }
              });
            }
          ),
          /***/
          12382: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(79611), n = t(97676), i = t(29269), f = t(74443), l = t(5166);
              o({ target: "Promise", stat: !0 }, {
                allSettled: function(h) {
                  var a = this, v = i.f(a), y = v.resolve, g = v.reject, e = f(function() {
                    var m = n(a.resolve), w = [], D = 0, I = 1;
                    l(h, function(T) {
                      var C = D++, E = !1;
                      I++, r(m, a, T).then(function(F) {
                        E || (E = !0, w[C] = { status: "fulfilled", value: F }, --I || y(w));
                      }, function(F) {
                        E || (E = !0, w[C] = { status: "rejected", reason: F }, --I || y(w));
                      });
                    }), --I || y(w);
                  });
                  return e.error && g(e.value), v.promise;
                }
              });
            }
          ),
          /***/
          487: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(97676), n = t(22773), i = t(79611), f = t(29269), l = t(74443), c = t(5166), h = "No one promise resolved";
              o({ target: "Promise", stat: !0 }, {
                any: function(v) {
                  var y = this, g = n("AggregateError"), e = f.f(y), m = e.resolve, w = e.reject, D = l(function() {
                    var I = r(y.resolve), T = [], C = 0, E = 1, F = !1;
                    c(v, function(x) {
                      var P = C++, L = !1;
                      E++, i(I, y, x).then(function(N) {
                        L || F || (F = !0, m(N));
                      }, function(N) {
                        L || F || (L = !0, T[P] = N, --E || w(new g(T, h)));
                      });
                    }), --E || w(new g(T, h));
                  });
                  return D.error && w(D.value), e.promise;
                }
              });
            }
          ),
          /***/
          27138: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(21178), n = t(58369), i = t(79044), f = t(22773), l = t(75277), c = t(7270), h = t(11621), a = t(35974), v = !!n && i(function() {
                n.prototype.finally.call({ then: function() {
                } }, function() {
                });
              });
              if (o({ target: "Promise", proto: !0, real: !0, forced: v }, {
                finally: function(g) {
                  var e = c(this, f("Promise")), m = l(g);
                  return this.then(
                    m ? function(w) {
                      return h(e, g()).then(function() {
                        return w;
                      });
                    } : g,
                    m ? function(w) {
                      return h(e, g()).then(function() {
                        throw w;
                      });
                    } : g
                  );
                }
              }), !r && l(n)) {
                var y = f("Promise").prototype.finally;
                n.prototype.finally !== y && a(n.prototype, "finally", y, { unsafe: !0 });
              }
            }
          ),
          /***/
          35054: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(21178), n = t(98363), i = t(22773), f = t(79611), l = t(58369), c = t(35974), h = t(7592), a = t(22412), v = t(60878), y = t(57323), g = t(97676), e = t(75277), m = t(52786), w = t(9519), D = t(56429), I = t(5166), T = t(8662), C = t(7270), E = t(84643).set, F = t(71800), x = t(11621), P = t(46271), L = t(29269), N = t(74443), M = t(20821), K = t(86291), ut = t(52280), J = t(47923), rt = t(93921), yt = t(11197), xt = ut("species"), Et = "Promise", Ft = M.get, Rt = M.set, Ut = M.getterFor(Et), Q = l && l.prototype, pt = l, ct = Q, ot = n.TypeError, mt = n.document, G = n.process, Tt = L.f, z = Tt, S = !!(mt && mt.createEvent && n.dispatchEvent), k = e(n.PromiseRejectionEvent), V = "unhandledrejection", it = "rejectionhandled", tt = 0, _ = 1, At = 2, Lt = 1, Yt = 2, Gt = !1, Dt, ae, Ae, xe, ce = K(Et, function() {
                var st = D(pt), Y = st !== String(pt);
                if (!Y && yt === 66 || r && !ct.finally)
                  return !0;
                if (yt >= 51 && /native code/.test(st))
                  return !1;
                var j = new pt(function(Wt) {
                  Wt(1);
                }), bt = function(Wt) {
                  Wt(function() {
                  }, function() {
                  });
                }, at = j.constructor = {};
                return at[xt] = bt, Gt = j.then(function() {
                }) instanceof bt, Gt ? !Y && J && !k : !0;
              }), we = ce || !T(function(st) {
                pt.all(st).catch(function() {
                });
              }), zt = function(st) {
                var Y;
                return m(st) && e(Y = st.then) ? Y : !1;
              }, Qt = function(st, Y) {
                if (!st.notified) {
                  st.notified = !0;
                  var j = st.reactions;
                  F(function() {
                    for (var bt = st.value, at = st.state == _, Wt = 0; j.length > Wt; ) {
                      var _t = j[Wt++], $ = at ? _t.ok : _t.fail, Jt = _t.resolve, te = _t.reject, Ct = _t.domain, Ht, oe, Le;
                      try {
                        $ ? (at || (st.rejection === Yt && Pe(st), st.rejection = Lt), $ === !0 ? Ht = bt : (Ct && Ct.enter(), Ht = $(bt), Ct && (Ct.exit(), Le = !0)), Ht === _t.promise ? te(ot("Promise-chain cycle")) : (oe = zt(Ht)) ? f(oe, Ht, Jt, te) : Jt(Ht)) : te(bt);
                      } catch (De) {
                        Ct && !Le && Ct.exit(), te(De);
                      }
                    }
                    st.reactions = [], st.notified = !1, Y && !st.rejection && de(st);
                  });
                }
              }, le = function(st, Y, j) {
                var bt, at;
                S ? (bt = mt.createEvent("Event"), bt.promise = Y, bt.reason = j, bt.initEvent(st, !1, !0), n.dispatchEvent(bt)) : bt = { promise: Y, reason: j }, !k && (at = n["on" + st]) ? at(bt) : st === V && P("Unhandled promise rejection", j);
              }, de = function(st) {
                f(E, n, function() {
                  var Y = st.facade, j = st.value, bt = be(st), at;
                  if (bt && (at = N(function() {
                    rt ? G.emit("unhandledRejection", j, Y) : le(V, Y, j);
                  }), st.rejection = rt || be(st) ? Yt : Lt, at.error))
                    throw at.value;
                });
              }, be = function(st) {
                return st.rejection !== Lt && !st.parent;
              }, Pe = function(st) {
                f(E, n, function() {
                  var Y = st.facade;
                  rt ? G.emit("rejectionHandled", Y) : le(it, Y, st.value);
                });
              }, Fe = function(st, Y, j) {
                return function(bt) {
                  st(Y, bt, j);
                };
              }, It = function(st, Y, j) {
                st.done || (st.done = !0, j && (st = j), st.value = Y, st.state = At, Qt(st, !0));
              }, fe = function(st, Y, j) {
                if (!st.done) {
                  st.done = !0, j && (st = j);
                  try {
                    if (st.facade === Y)
                      throw ot("Promise can't be resolved itself");
                    var bt = zt(Y);
                    bt ? F(function() {
                      var at = { done: !1 };
                      try {
                        f(
                          bt,
                          Y,
                          Fe(fe, at, st),
                          Fe(It, at, st)
                        );
                      } catch (Wt) {
                        It(at, Wt, st);
                      }
                    }) : (st.value = Y, st.state = _, Qt(st, !1));
                  } catch (at) {
                    It({ done: !1 }, at, st);
                  }
                }
              };
              if (ce && (pt = function(Y) {
                w(this, ct), g(Y), f(Dt, this);
                var j = Ft(this);
                try {
                  Y(Fe(fe, j), Fe(It, j));
                } catch (bt) {
                  It(j, bt);
                }
              }, ct = pt.prototype, Dt = function(Y) {
                Rt(this, {
                  type: Et,
                  done: !1,
                  notified: !1,
                  parent: !1,
                  reactions: [],
                  rejection: !1,
                  state: tt,
                  value: void 0
                });
              }, Dt.prototype = h(ct, {
                // `Promise.prototype.then` method
                // https://tc39.es/ecma262/#sec-promise.prototype.then
                then: function(Y, j) {
                  var bt = Ut(this), at = bt.reactions, Wt = Tt(C(this, pt));
                  return Wt.ok = e(Y) ? Y : !0, Wt.fail = e(j) && j, Wt.domain = rt ? G.domain : void 0, bt.parent = !0, at[at.length] = Wt, bt.state != tt && Qt(bt, !1), Wt.promise;
                },
                // `Promise.prototype.catch` method
                // https://tc39.es/ecma262/#sec-promise.prototype.catch
                catch: function(st) {
                  return this.then(void 0, st);
                }
              }), ae = function() {
                var st = new Dt(), Y = Ft(st);
                this.promise = st, this.resolve = Fe(fe, Y), this.reject = Fe(It, Y);
              }, L.f = Tt = function(st) {
                return st === pt || st === Ae ? new ae(st) : z(st);
              }, !r && e(l) && Q !== Object.prototype)) {
                xe = Q.then, Gt || (c(Q, "then", function(Y, j) {
                  var bt = this;
                  return new pt(function(at, Wt) {
                    f(xe, bt, at, Wt);
                  }).then(Y, j);
                }, { unsafe: !0 }), c(Q, "catch", ct.catch, { unsafe: !0 }));
                try {
                  delete Q.constructor;
                } catch {
                }
                a && a(Q, ct);
              }
              o({ global: !0, wrap: !0, forced: ce }, {
                Promise: pt
              }), v(pt, Et, !1, !0), y(Et), Ae = i(Et), o({ target: Et, stat: !0, forced: ce }, {
                // `Promise.reject` method
                // https://tc39.es/ecma262/#sec-promise.reject
                reject: function(Y) {
                  var j = Tt(this);
                  return f(j.reject, void 0, Y), j.promise;
                }
              }), o({ target: Et, stat: !0, forced: r || ce }, {
                // `Promise.resolve` method
                // https://tc39.es/ecma262/#sec-promise.resolve
                resolve: function(Y) {
                  return x(r && this === Ae ? pt : this, Y);
                }
              }), o({ target: Et, stat: !0, forced: we }, {
                // `Promise.all` method
                // https://tc39.es/ecma262/#sec-promise.all
                all: function(Y) {
                  var j = this, bt = Tt(j), at = bt.resolve, Wt = bt.reject, _t = N(function() {
                    var $ = g(j.resolve), Jt = [], te = 0, Ct = 1;
                    I(Y, function(Ht) {
                      var oe = te++, Le = !1;
                      Ct++, f($, j, Ht).then(function(De) {
                        Le || (Le = !0, Jt[oe] = De, --Ct || at(Jt));
                      }, Wt);
                    }), --Ct || at(Jt);
                  });
                  return _t.error && Wt(_t.value), bt.promise;
                },
                // `Promise.race` method
                // https://tc39.es/ecma262/#sec-promise.race
                race: function(Y) {
                  var j = this, bt = Tt(j), at = bt.reject, Wt = N(function() {
                    var _t = g(j.resolve);
                    I(Y, function($) {
                      f(_t, j, $).then(bt.resolve, at);
                    });
                  });
                  return Wt.error && at(Wt.value), bt.promise;
                }
              });
            }
          ),
          /***/
          54130: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(22773), n = t(63530), i = t(52381), f = t(43327), l = t(83875), c = t(52786), h = t(51569), a = t(79044), v = r("Reflect", "construct"), y = Object.prototype, g = [].push, e = a(function() {
                function D() {
                }
                return !(v(function() {
                }, [], D) instanceof D);
              }), m = !a(function() {
                v(function() {
                });
              }), w = e || m;
              o({ target: "Reflect", stat: !0, forced: w, sham: w }, {
                construct: function(I, T) {
                  f(I), l(T);
                  var C = arguments.length < 3 ? I : f(arguments[2]);
                  if (m && !e)
                    return v(I, T, C);
                  if (I == C) {
                    switch (T.length) {
                      case 0:
                        return new I();
                      case 1:
                        return new I(T[0]);
                      case 2:
                        return new I(T[0], T[1]);
                      case 3:
                        return new I(T[0], T[1], T[2]);
                      case 4:
                        return new I(T[0], T[1], T[2], T[3]);
                    }
                    var E = [null];
                    return n(g, E, T), new (n(i, I, E))();
                  }
                  var F = C.prototype, x = h(c(F) ? F : y), P = n(I, x, T);
                  return c(P) ? P : x;
                }
              });
            }
          ),
          /***/
          39275: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(99749);
              o({ target: "RegExp", proto: !0, forced: /./.exec !== r }, {
                exec: r
              });
            }
          ),
          /***/
          15158: (
            /***/
            function(u, d, t) {
              var o = t(7493), r = t(86385), n = t(58083), i = t(79044), f = RegExp.prototype, l = o && i(function() {
                return Object.getOwnPropertyDescriptor(f, "flags").get.call({ dotAll: !0, sticky: !0 }) !== "sy";
              });
              l && r.f(f, "flags", {
                configurable: !0,
                get: n
              });
            }
          ),
          /***/
          33290: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(55316).PROPER, n = t(35974), i = t(83875), f = t(32010), l = t(28967), c = t(79044), h = t(58083), a = "toString", v = RegExp.prototype, y = v[a], g = o(h), e = c(function() {
                return y.call({ source: "a", flags: "b" }) != "/a/b";
              }), m = r && y.name != a;
              (e || m) && n(RegExp.prototype, a, function() {
                var D = i(this), I = l(D.source), T = D.flags, C = l(T === void 0 && f(v, D) && !("flags" in v) ? g(D) : T);
                return "/" + I + "/" + C;
              }, { unsafe: !0 });
            }
          ),
          /***/
          99041: (
            /***/
            function(u, d, t) {
              var o = t(9121), r = t(33513);
              o("Set", function(n) {
                return function() {
                  return n(this, arguments.length ? arguments[0] : void 0);
                };
              }, r);
            }
          ),
          /***/
          18481: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(91140).codeAt;
              o({ target: "String", proto: !0 }, {
                codePointAt: function(i) {
                  return r(this, i);
                }
              });
            }
          ),
          /***/
          66923: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(88697), i = t(32565), f = r.RangeError, l = String.fromCharCode, c = String.fromCodePoint, h = n([].join), a = !!c && c.length != 1;
              o({ target: "String", stat: !0, forced: a }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                fromCodePoint: function(y) {
                  for (var g = [], e = arguments.length, m = 0, w; e > m; ) {
                    if (w = +arguments[m++], i(w, 1114111) !== w)
                      throw f(w + " is not a valid code point");
                    g[m] = w < 65536 ? l(w) : l(((w -= 65536) >> 10) + 55296, w % 1024 + 56320);
                  }
                  return h(g, "");
                }
              });
            }
          ),
          /***/
          19985: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(88697), n = t(21049), i = t(96411), f = t(28967), l = t(15454), c = r("".indexOf);
              o({ target: "String", proto: !0, forced: !l("includes") }, {
                includes: function(a) {
                  return !!~c(
                    f(i(this)),
                    f(n(a)),
                    arguments.length > 1 ? arguments[1] : void 0
                  );
                }
              });
            }
          ),
          /***/
          67666: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(75304), n = t(13881);
              o({ target: "String", proto: !0, forced: n("italics") }, {
                italics: function() {
                  return r(this, "i", "", "");
                }
              });
            }
          ),
          /***/
          45007: (
            /***/
            function(u, d, t) {
              var o = t(91140).charAt, r = t(28967), n = t(20821), i = t(61495), f = "String Iterator", l = n.set, c = n.getterFor(f);
              i(String, "String", function(h) {
                l(this, {
                  type: f,
                  string: r(h),
                  index: 0
                });
              }, function() {
                var a = c(this), v = a.string, y = a.index, g;
                return y >= v.length ? { value: void 0, done: !0 } : (g = o(v, y), a.index += g.length, { value: g, done: !1 });
              });
            }
          ),
          /***/
          86125: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(75304), n = t(13881);
              o({ target: "String", proto: !0, forced: n("link") }, {
                link: function(f) {
                  return r(this, "a", "href", f);
                }
              });
            }
          ),
          /***/
          55797: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(79611), i = t(88697), f = t(6181), l = t(96411), c = t(35108), h = t(28967), a = t(83875), v = t(79159), y = t(32010), g = t(42622), e = t(58083), m = t(97219), w = t(35974), D = t(79044), I = t(52280), T = t(7270), C = t(13350), E = t(94088), F = t(20821), x = t(21178), P = I("matchAll"), L = "RegExp String", N = L + " Iterator", M = F.set, K = F.getterFor(N), ut = RegExp.prototype, J = r.TypeError, rt = i(e), yt = i("".indexOf), xt = i("".matchAll), Et = !!xt && !D(function() {
                xt("a", /./);
              }), Ft = f(function(Q, pt, ct, ot) {
                M(this, {
                  type: N,
                  regexp: Q,
                  string: pt,
                  global: ct,
                  unicode: ot,
                  done: !1
                });
              }, L, function() {
                var Q = K(this);
                if (Q.done)
                  return { value: void 0, done: !0 };
                var pt = Q.regexp, ct = Q.string, ot = E(pt, ct);
                return ot === null ? { value: void 0, done: Q.done = !0 } : Q.global ? (h(ot[0]) === "" && (pt.lastIndex = C(ct, c(pt.lastIndex), Q.unicode)), { value: ot, done: !1 }) : (Q.done = !0, { value: ot, done: !1 });
              }), Rt = function(Ut) {
                var Q = a(this), pt = h(Ut), ct, ot, mt, G, Tt, z;
                return ct = T(Q, RegExp), ot = Q.flags, ot === void 0 && y(ut, Q) && !("flags" in ut) && (ot = rt(Q)), mt = ot === void 0 ? "" : h(ot), G = new ct(ct === RegExp ? Q.source : Q, mt), Tt = !!~yt(mt, "g"), z = !!~yt(mt, "u"), G.lastIndex = c(Q.lastIndex), new Ft(G, pt, Tt, z);
              };
              o({ target: "String", proto: !0, forced: Et }, {
                matchAll: function(Q) {
                  var pt = l(this), ct, ot, mt, G;
                  if (Q != null) {
                    if (g(Q) && (ct = h(l(
                      "flags" in ut ? Q.flags : rt(Q)
                    )), !~yt(ct, "g")))
                      throw J("`.matchAll` does not allow non-global regexes");
                    if (Et)
                      return xt(pt, Q);
                    if (mt = m(Q, P), mt === void 0 && x && v(Q) == "RegExp" && (mt = Rt), mt)
                      return n(mt, Q, pt);
                  } else if (Et)
                    return xt(pt, Q);
                  return ot = h(pt), G = new RegExp(Q, "g"), x ? n(Rt, G, ot) : G[P](ot);
                }
              }), x || P in ut || w(ut, P, Rt);
            }
          ),
          /***/
          75668: (
            /***/
            function(u, d, t) {
              var o = t(79611), r = t(81492), n = t(83875), i = t(35108), f = t(28967), l = t(96411), c = t(97219), h = t(13350), a = t(94088);
              r("match", function(v, y, g) {
                return [
                  // `String.prototype.match` method
                  // https://tc39.es/ecma262/#sec-string.prototype.match
                  function(m) {
                    var w = l(this), D = m == null ? void 0 : c(m, v);
                    return D ? o(D, m, w) : new RegExp(m)[v](f(w));
                  },
                  // `RegExp.prototype[@@match]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
                  function(e) {
                    var m = n(this), w = f(e), D = g(y, m, w);
                    if (D.done)
                      return D.value;
                    if (!m.global)
                      return a(m, w);
                    var I = m.unicode;
                    m.lastIndex = 0;
                    for (var T = [], C = 0, E; (E = a(m, w)) !== null; ) {
                      var F = f(E[0]);
                      T[C] = F, F === "" && (m.lastIndex = h(w, i(m.lastIndex), I)), C++;
                    }
                    return C === 0 ? null : T;
                  }
                ];
              });
            }
          ),
          /***/
          84750: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(26031);
              o({ target: "String", proto: !0 }, {
                repeat: r
              });
            }
          ),
          /***/
          22321: (
            /***/
            function(u, d, t) {
              var o = t(63530), r = t(79611), n = t(88697), i = t(81492), f = t(79044), l = t(83875), c = t(75277), h = t(14229), a = t(35108), v = t(28967), y = t(96411), g = t(13350), e = t(97219), m = t(81373), w = t(94088), D = t(52280), I = D("replace"), T = Math.max, C = Math.min, E = n([].concat), F = n([].push), x = n("".indexOf), P = n("".slice), L = function(ut) {
                return ut === void 0 ? ut : String(ut);
              }, N = function() {
                return "a".replace(/./, "$0") === "$0";
              }(), M = function() {
                return /./[I] ? /./[I]("a", "$0") === "" : !1;
              }(), K = !f(function() {
                var ut = /./;
                return ut.exec = function() {
                  var J = [];
                  return J.groups = { a: "7" }, J;
                }, "".replace(ut, "$<a>") !== "7";
              });
              i("replace", function(ut, J, rt) {
                var yt = M ? "$" : "$0";
                return [
                  // `String.prototype.replace` method
                  // https://tc39.es/ecma262/#sec-string.prototype.replace
                  function(Et, Ft) {
                    var Rt = y(this), Ut = Et == null ? void 0 : e(Et, I);
                    return Ut ? r(Ut, Et, Rt, Ft) : r(J, v(Rt), Et, Ft);
                  },
                  // `RegExp.prototype[@@replace]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
                  function(xt, Et) {
                    var Ft = l(this), Rt = v(xt);
                    if (typeof Et == "string" && x(Et, yt) === -1 && x(Et, "$<") === -1) {
                      var Ut = rt(J, Ft, Rt, Et);
                      if (Ut.done)
                        return Ut.value;
                    }
                    var Q = c(Et);
                    Q || (Et = v(Et));
                    var pt = Ft.global;
                    if (pt) {
                      var ct = Ft.unicode;
                      Ft.lastIndex = 0;
                    }
                    for (var ot = []; ; ) {
                      var mt = w(Ft, Rt);
                      if (mt === null || (F(ot, mt), !pt))
                        break;
                      var G = v(mt[0]);
                      G === "" && (Ft.lastIndex = g(Rt, a(Ft.lastIndex), ct));
                    }
                    for (var Tt = "", z = 0, S = 0; S < ot.length; S++) {
                      mt = ot[S];
                      for (var k = v(mt[0]), V = T(C(h(mt.index), Rt.length), 0), it = [], tt = 1; tt < mt.length; tt++)
                        F(it, L(mt[tt]));
                      var _ = mt.groups;
                      if (Q) {
                        var At = E([k], it, V, Rt);
                        _ !== void 0 && F(At, _);
                        var Lt = v(o(Et, void 0, At));
                      } else
                        Lt = m(k, Rt, V, it, _, Et);
                      V >= z && (Tt += P(Rt, z, V) + Lt, z = V + k.length);
                    }
                    return Tt + P(Rt, z);
                  }
                ];
              }, !K || !N || M);
            }
          ),
          /***/
          67838: (
            /***/
            function(u, d, t) {
              var o = t(63530), r = t(79611), n = t(88697), i = t(81492), f = t(42622), l = t(83875), c = t(96411), h = t(7270), a = t(13350), v = t(35108), y = t(28967), g = t(97219), e = t(15629), m = t(94088), w = t(99749), D = t(97047), I = t(79044), T = D.UNSUPPORTED_Y, C = 4294967295, E = Math.min, F = [].push, x = n(/./.exec), P = n(F), L = n("".slice), N = !I(function() {
                var M = /(?:)/, K = M.exec;
                M.exec = function() {
                  return K.apply(this, arguments);
                };
                var ut = "ab".split(M);
                return ut.length !== 2 || ut[0] !== "a" || ut[1] !== "b";
              });
              i("split", function(M, K, ut) {
                var J;
                return "abbc".split(/(b)*/)[1] == "c" || // eslint-disable-next-line regexp/no-empty-group -- required for testing
                "test".split(/(?:)/, -1).length != 4 || "ab".split(/(?:ab)*/).length != 2 || ".".split(/(.?)(.?)/).length != 4 || // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
                ".".split(/()()/).length > 1 || "".split(/.?/).length ? J = function(rt, yt) {
                  var xt = y(c(this)), Et = yt === void 0 ? C : yt >>> 0;
                  if (Et === 0)
                    return [];
                  if (rt === void 0)
                    return [xt];
                  if (!f(rt))
                    return r(K, xt, rt, Et);
                  for (var Ft = [], Rt = (rt.ignoreCase ? "i" : "") + (rt.multiline ? "m" : "") + (rt.unicode ? "u" : "") + (rt.sticky ? "y" : ""), Ut = 0, Q = new RegExp(rt.source, Rt + "g"), pt, ct, ot; (pt = r(w, Q, xt)) && (ct = Q.lastIndex, !(ct > Ut && (P(Ft, L(xt, Ut, pt.index)), pt.length > 1 && pt.index < xt.length && o(F, Ft, e(pt, 1)), ot = pt[0].length, Ut = ct, Ft.length >= Et))); )
                    Q.lastIndex === pt.index && Q.lastIndex++;
                  return Ut === xt.length ? (ot || !x(Q, "")) && P(Ft, "") : P(Ft, L(xt, Ut)), Ft.length > Et ? e(Ft, 0, Et) : Ft;
                } : "0".split(void 0, 0).length ? J = function(rt, yt) {
                  return rt === void 0 && yt === 0 ? [] : r(K, this, rt, yt);
                } : J = K, [
                  // `String.prototype.split` method
                  // https://tc39.es/ecma262/#sec-string.prototype.split
                  function(yt, xt) {
                    var Et = c(this), Ft = yt == null ? void 0 : g(yt, M);
                    return Ft ? r(Ft, yt, Et, xt) : r(J, y(Et), yt, xt);
                  },
                  // `RegExp.prototype[@@split]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
                  //
                  // NOTE: This cannot be properly polyfilled in engines that don't support
                  // the 'y' flag.
                  function(rt, yt) {
                    var xt = l(this), Et = y(rt), Ft = ut(J, xt, Et, yt, J !== K);
                    if (Ft.done)
                      return Ft.value;
                    var Rt = h(xt, RegExp), Ut = xt.unicode, Q = (xt.ignoreCase ? "i" : "") + (xt.multiline ? "m" : "") + (xt.unicode ? "u" : "") + (T ? "g" : "y"), pt = new Rt(T ? "^(?:" + xt.source + ")" : xt, Q), ct = yt === void 0 ? C : yt >>> 0;
                    if (ct === 0)
                      return [];
                    if (Et.length === 0)
                      return m(pt, Et) === null ? [Et] : [];
                    for (var ot = 0, mt = 0, G = []; mt < Et.length; ) {
                      pt.lastIndex = T ? 0 : mt;
                      var Tt = m(pt, T ? L(Et, mt) : Et), z;
                      if (Tt === null || (z = E(v(pt.lastIndex + (T ? mt : 0)), Et.length)) === ot)
                        mt = a(Et, mt, Ut);
                      else {
                        if (P(G, L(Et, ot, mt)), G.length === ct)
                          return G;
                        for (var S = 1; S <= Tt.length - 1; S++)
                          if (P(G, Tt[S]), G.length === ct)
                            return G;
                        mt = ot = z;
                      }
                    }
                    return P(G, L(Et, ot)), G;
                  }
                ];
              }, !N, T);
            }
          ),
          /***/
          54902: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(75304), n = t(13881);
              o({ target: "String", proto: !0, forced: n("strike") }, {
                strike: function() {
                  return r(this, "strike", "", "");
                }
              });
            }
          ),
          /***/
          29897: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(10287).trim, n = t(68487);
              o({ target: "String", proto: !0, forced: n("trim") }, {
                trim: function() {
                  return r(this);
                }
              });
            }
          ),
          /***/
          52729: (
            /***/
            function(u, d, t) {
              var o = t(68308);
              o("asyncIterator");
            }
          ),
          /***/
          86632: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(7493), n = t(98363), i = t(88697), f = t(24792), l = t(75277), c = t(32010), h = t(28967), a = t(86385).f, v = t(73870), y = n.Symbol, g = y && y.prototype;
              if (r && l(y) && (!("description" in g) || // Safari 12 bug
              y().description !== void 0)) {
                var e = {}, m = function() {
                  var x = arguments.length < 1 || arguments[0] === void 0 ? void 0 : h(arguments[0]), P = c(g, this) ? new y(x) : x === void 0 ? y() : y(x);
                  return x === "" && (e[P] = !0), P;
                };
                v(m, y), m.prototype = g, g.constructor = m;
                var w = String(y("test")) == "Symbol(test)", D = i(g.toString), I = i(g.valueOf), T = /^Symbol\((.*)\)[^)]+$/, C = i("".replace), E = i("".slice);
                a(g, "description", {
                  configurable: !0,
                  get: function() {
                    var x = I(this), P = D(x);
                    if (f(e, x))
                      return "";
                    var L = w ? E(P, 7, -1) : C(P, T, "$1");
                    return L === "" ? void 0 : L;
                  }
                }), o({ global: !0, forced: !0 }, {
                  Symbol: m
                });
              }
            }
          ),
          /***/
          61928: (
            /***/
            function(u, d, t) {
              var o = t(68308);
              o("iterator");
            }
          ),
          /***/
          26364: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(98363), n = t(22773), i = t(63530), f = t(79611), l = t(88697), c = t(21178), h = t(7493), a = t(3850), v = t(79044), y = t(24792), g = t(71982), e = t(75277), m = t(52786), w = t(32010), D = t(66681), I = t(83875), T = t(30744), C = t(29580), E = t(383), F = t(28967), x = t(69199), P = t(51569), L = t(60667), N = t(87994), M = t(74938), K = t(89612), ut = t(66012), J = t(86385), rt = t(81513), yt = t(15629), xt = t(35974), Et = t(53580), Ft = t(50466), Rt = t(47505), Ut = t(34524), Q = t(52280), pt = t(20127), ct = t(68308), ot = t(60878), mt = t(20821), G = t(68671).forEach, Tt = Ft("hidden"), z = "Symbol", S = "prototype", k = Q("toPrimitive"), V = mt.set, it = mt.getterFor(z), tt = Object[S], _ = r.Symbol, At = _ && _[S], Lt = r.TypeError, Yt = r.QObject, Gt = n("JSON", "stringify"), Dt = ut.f, ae = J.f, Ae = M.f, xe = rt.f, ce = l([].push), we = Et("symbols"), zt = Et("op-symbols"), Qt = Et("string-to-symbol-registry"), le = Et("symbol-to-string-registry"), de = Et("wks"), be = !Yt || !Yt[S] || !Yt[S].findChild, Pe = h && v(function() {
                return P(ae({}, "a", {
                  get: function() {
                    return ae(this, "a", { value: 7 }).a;
                  }
                })).a != 7;
              }) ? function($, Jt, te) {
                var Ct = Dt(tt, Jt);
                Ct && delete tt[Jt], ae($, Jt, te), Ct && $ !== tt && ae(tt, Jt, Ct);
              } : ae, Fe = function($, Jt) {
                var te = we[$] = P(At);
                return V(te, {
                  type: z,
                  tag: $,
                  description: Jt
                }), h || (te.description = Jt), te;
              }, It = function(Jt, te, Ct) {
                Jt === tt && It(zt, te, Ct), I(Jt);
                var Ht = E(te);
                return I(Ct), y(we, Ht) ? (Ct.enumerable ? (y(Jt, Tt) && Jt[Tt][Ht] && (Jt[Tt][Ht] = !1), Ct = P(Ct, { enumerable: x(0, !1) })) : (y(Jt, Tt) || ae(Jt, Tt, x(1, {})), Jt[Tt][Ht] = !0), Pe(Jt, Ht, Ct)) : ae(Jt, Ht, Ct);
              }, fe = function(Jt, te) {
                I(Jt);
                var Ct = C(te), Ht = L(Ct).concat(at(Ct));
                return G(Ht, function(oe) {
                  (!h || f(Y, Ct, oe)) && It(Jt, oe, Ct[oe]);
                }), Jt;
              }, st = function(Jt, te) {
                return te === void 0 ? P(Jt) : fe(P(Jt), te);
              }, Y = function(Jt) {
                var te = E(Jt), Ct = f(xe, this, te);
                return this === tt && y(we, te) && !y(zt, te) ? !1 : Ct || !y(this, te) || !y(we, te) || y(this, Tt) && this[Tt][te] ? Ct : !0;
              }, j = function(Jt, te) {
                var Ct = C(Jt), Ht = E(te);
                if (!(Ct === tt && y(we, Ht) && !y(zt, Ht))) {
                  var oe = Dt(Ct, Ht);
                  return oe && y(we, Ht) && !(y(Ct, Tt) && Ct[Tt][Ht]) && (oe.enumerable = !0), oe;
                }
              }, bt = function(Jt) {
                var te = Ae(C(Jt)), Ct = [];
                return G(te, function(Ht) {
                  !y(we, Ht) && !y(Rt, Ht) && ce(Ct, Ht);
                }), Ct;
              }, at = function(Jt) {
                var te = Jt === tt, Ct = Ae(te ? zt : C(Jt)), Ht = [];
                return G(Ct, function(oe) {
                  y(we, oe) && (!te || y(tt, oe)) && ce(Ht, we[oe]);
                }), Ht;
              };
              if (a || (_ = function() {
                if (w(At, this))
                  throw Lt("Symbol is not a constructor");
                var Jt = !arguments.length || arguments[0] === void 0 ? void 0 : F(arguments[0]), te = Ut(Jt), Ct = function(Ht) {
                  this === tt && f(Ct, zt, Ht), y(this, Tt) && y(this[Tt], te) && (this[Tt][te] = !1), Pe(this, te, x(1, Ht));
                };
                return h && be && Pe(tt, te, { configurable: !0, set: Ct }), Fe(te, Jt);
              }, At = _[S], xt(At, "toString", function() {
                return it(this).tag;
              }), xt(_, "withoutSetter", function($) {
                return Fe(Ut($), $);
              }), rt.f = Y, J.f = It, ut.f = j, N.f = M.f = bt, K.f = at, pt.f = function($) {
                return Fe(Q($), $);
              }, h && (ae(At, "description", {
                configurable: !0,
                get: function() {
                  return it(this).description;
                }
              }), c || xt(tt, "propertyIsEnumerable", Y, { unsafe: !0 }))), o({ global: !0, wrap: !0, forced: !a, sham: !a }, {
                Symbol: _
              }), G(L(de), function($) {
                ct($);
              }), o({ target: z, stat: !0, forced: !a }, {
                // `Symbol.for` method
                // https://tc39.es/ecma262/#sec-symbol.for
                for: function($) {
                  var Jt = F($);
                  if (y(Qt, Jt))
                    return Qt[Jt];
                  var te = _(Jt);
                  return Qt[Jt] = te, le[te] = Jt, te;
                },
                // `Symbol.keyFor` method
                // https://tc39.es/ecma262/#sec-symbol.keyfor
                keyFor: function(Jt) {
                  if (!D(Jt))
                    throw Lt(Jt + " is not a symbol");
                  if (y(le, Jt))
                    return le[Jt];
                },
                useSetter: function() {
                  be = !0;
                },
                useSimple: function() {
                  be = !1;
                }
              }), o({ target: "Object", stat: !0, forced: !a, sham: !h }, {
                // `Object.create` method
                // https://tc39.es/ecma262/#sec-object.create
                create: st,
                // `Object.defineProperty` method
                // https://tc39.es/ecma262/#sec-object.defineproperty
                defineProperty: It,
                // `Object.defineProperties` method
                // https://tc39.es/ecma262/#sec-object.defineproperties
                defineProperties: fe,
                // `Object.getOwnPropertyDescriptor` method
                // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
                getOwnPropertyDescriptor: j
              }), o({ target: "Object", stat: !0, forced: !a }, {
                // `Object.getOwnPropertyNames` method
                // https://tc39.es/ecma262/#sec-object.getownpropertynames
                getOwnPropertyNames: bt,
                // `Object.getOwnPropertySymbols` method
                // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
                getOwnPropertySymbols: at
              }), o({ target: "Object", stat: !0, forced: v(function() {
                K.f(1);
              }) }, {
                getOwnPropertySymbols: function(Jt) {
                  return K.f(T(Jt));
                }
              }), Gt) {
                var Wt = !a || v(function() {
                  var $ = _();
                  return Gt([$]) != "[null]" || Gt({ a: $ }) != "{}" || Gt(Object($)) != "{}";
                });
                o({ target: "JSON", stat: !0, forced: Wt }, {
                  // eslint-disable-next-line no-unused-vars -- required for `.length`
                  stringify: function(Jt, te, Ct) {
                    var Ht = yt(arguments), oe = te;
                    if (!(!m(te) && Jt === void 0 || D(Jt)))
                      return g(te) || (te = function(Le, De) {
                        if (e(oe) && (De = f(oe, this, Le, De)), !D(De))
                          return De;
                      }), Ht[1] = te, i(Gt, null, Ht);
                  }
                });
              }
              if (!At[k]) {
                var _t = At.valueOf;
                xt(At, k, function($) {
                  return f(_t, this);
                });
              }
              ot(_, z), Rt[Tt] = !0;
            }
          ),
          /***/
          16543: (
            /***/
            function(u, d, t) {
              var o = t(68308);
              o("toPrimitive");
            }
          ),
          /***/
          33694: (
            /***/
            function(u, d, t) {
              var o = t(68308);
              o("toStringTag");
            }
          ),
          /***/
          21358: (
            /***/
            function(u, d, t) {
              var o = t(88697), r = t(32590), n = t(28794), i = o(n), f = r.aTypedArray, l = r.exportTypedArrayMethod;
              l("copyWithin", function(h, a) {
                return i(f(this), h, a, arguments.length > 2 ? arguments[2] : void 0);
              });
            }
          ),
          /***/
          66887: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(68671).every, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("every", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          77353: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(79611), n = t(55522), i = o.aTypedArray, f = o.exportTypedArrayMethod;
              f("fill", function(c) {
                var h = arguments.length;
                return r(
                  n,
                  i(this),
                  c,
                  h > 1 ? arguments[1] : void 0,
                  h > 2 ? arguments[2] : void 0
                );
              });
            }
          ),
          /***/
          6366: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(68671).filter, n = t(53687), i = o.aTypedArray, f = o.exportTypedArrayMethod;
              f("filter", function(c) {
                var h = r(i(this), c, arguments.length > 1 ? arguments[1] : void 0);
                return n(this, h);
              });
            }
          ),
          /***/
          65056: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(68671).findIndex, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("findIndex", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          52372: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(68671).find, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("find", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          31120: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Float32", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          85569: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Float64", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          53677: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(68671).forEach, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("forEach", function(l) {
                r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          26875: (
            /***/
            function(u, d, t) {
              var o = t(63231), r = t(32590).exportTypedArrayStaticMethod, n = t(66503);
              r("from", n, o);
            }
          ),
          /***/
          77355: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(37190).includes, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("includes", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          28784: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(37190).indexOf, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("indexOf", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          100: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Int16", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          26770: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Int32", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          33324: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Int8", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          98554: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(88697), n = t(55316).PROPER, i = t(32590), f = t(54883), l = t(52280), c = l("iterator"), h = o.Uint8Array, a = r(f.values), v = r(f.keys), y = r(f.entries), g = i.aTypedArray, e = i.exportTypedArrayMethod, m = h && h.prototype[c], w = !!m && m.name === "values", D = function() {
                return a(g(this));
              };
              e("entries", function() {
                return y(g(this));
              }), e("keys", function() {
                return v(g(this));
              }), e("values", D, n && !w), e(c, D, n && !w);
            }
          ),
          /***/
          72403: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(88697), n = o.aTypedArray, i = o.exportTypedArrayMethod, f = r([].join);
              i("join", function(c) {
                return f(n(this), c);
              });
            }
          ),
          /***/
          14312: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(63530), n = t(27837), i = o.aTypedArray, f = o.exportTypedArrayMethod;
              f("lastIndexOf", function(c) {
                var h = arguments.length;
                return r(n, i(this), h > 1 ? [c, arguments[1]] : [c]);
              });
            }
          ),
          /***/
          63444: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(68671).map, n = t(36107), i = o.aTypedArray, f = o.exportTypedArrayMethod;
              f("map", function(c) {
                return r(i(this), c, arguments.length > 1 ? arguments[1] : void 0, function(h, a) {
                  return new (n(h))(a);
                });
              });
            }
          ),
          /***/
          36798: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(86596).right, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("reduceRight", function(l) {
                var c = arguments.length;
                return r(n(this), l, c, c > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          40070: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(86596).left, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("reduce", function(l) {
                var c = arguments.length;
                return r(n(this), l, c, c > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          58036: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = o.aTypedArray, n = o.exportTypedArrayMethod, i = Math.floor;
              n("reverse", function() {
                for (var l = this, c = r(l).length, h = i(c / 2), a = 0, v; a < h; )
                  v = l[a], l[a++] = l[--c], l[c] = v;
                return l;
              });
            }
          ),
          /***/
          27578: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(32590), n = t(47046), i = t(65758), f = t(30744), l = t(79044), c = o.RangeError, h = r.aTypedArray, a = r.exportTypedArrayMethod, v = l(function() {
                new Int8Array(1).set({});
              });
              a("set", function(g) {
                h(this);
                var e = i(arguments.length > 1 ? arguments[1] : void 0, 1), m = this.length, w = f(g), D = n(w), I = 0;
                if (D + e > m)
                  throw c("Wrong length");
                for (; I < D; )
                  this[e + I] = w[I++];
              }, v);
            }
          ),
          /***/
          99641: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(36107), n = t(79044), i = t(15629), f = o.aTypedArray, l = o.exportTypedArrayMethod, c = n(function() {
                new Int8Array(1).slice();
              });
              l("slice", function(a, v) {
                for (var y = i(f(this), a, v), g = r(this), e = 0, m = y.length, w = new g(m); m > e; )
                  w[e] = y[e++];
                return w;
              }, c);
            }
          ),
          /***/
          12298: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(68671).some, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("some", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          97306: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(88697), n = t(79044), i = t(97676), f = t(2013), l = t(32590), c = t(34631), h = t(80442), a = t(11197), v = t(76929), y = o.Array, g = l.aTypedArray, e = l.exportTypedArrayMethod, m = o.Uint16Array, w = m && r(m.prototype.sort), D = !!w && !(n(function() {
                w(new m(2), null);
              }) && n(function() {
                w(new m(2), {});
              })), I = !!w && !n(function() {
                if (a)
                  return a < 74;
                if (c)
                  return c < 67;
                if (h)
                  return !0;
                if (v)
                  return v < 602;
                var C = new m(516), E = y(516), F, x;
                for (F = 0; F < 516; F++)
                  x = F % 4, C[F] = 515 - F, E[F] = F - 2 * x + 3;
                for (w(C, function(P, L) {
                  return (P / 4 | 0) - (L / 4 | 0);
                }), F = 0; F < 516; F++)
                  if (C[F] !== E[F])
                    return !0;
              }), T = function(C) {
                return function(E, F) {
                  return C !== void 0 ? +C(E, F) || 0 : F !== F ? -1 : E !== E ? 1 : E === 0 && F === 0 ? 1 / E > 0 && 1 / F < 0 ? 1 : -1 : E > F;
                };
              };
              e("sort", function(E) {
                return E !== void 0 && i(E), I ? w(this, E) : f(g(this), T(E));
              }, !I || D);
            }
          ),
          /***/
          25480: (
            /***/
            function(u, d, t) {
              var o = t(32590), r = t(35108), n = t(32565), i = t(36107), f = o.aTypedArray, l = o.exportTypedArrayMethod;
              l("subarray", function(h, a) {
                var v = f(this), y = v.length, g = n(h, y), e = i(v);
                return new e(
                  v.buffer,
                  v.byteOffset + g * v.BYTES_PER_ELEMENT,
                  r((a === void 0 ? y : n(a, y)) - g)
                );
              });
            }
          ),
          /***/
          14314: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(63530), n = t(32590), i = t(79044), f = t(15629), l = o.Int8Array, c = n.aTypedArray, h = n.exportTypedArrayMethod, a = [].toLocaleString, v = !!l && i(function() {
                a.call(new l(1));
              }), y = i(function() {
                return [1, 2].toLocaleString() != new l([1, 2]).toLocaleString();
              }) || !i(function() {
                l.prototype.toLocaleString.call([1, 2]);
              });
              h("toLocaleString", function() {
                return r(
                  a,
                  v ? f(c(this)) : c(this),
                  f(arguments)
                );
              }, y);
            }
          ),
          /***/
          10572: (
            /***/
            function(u, d, t) {
              var o = t(32590).exportTypedArrayMethod, r = t(79044), n = t(98363), i = t(88697), f = n.Uint8Array, l = f && f.prototype || {}, c = [].toString, h = i([].join);
              r(function() {
                c.call({});
              }) && (c = function() {
                return h(this);
              });
              var a = l.toString != c;
              o("toString", c, a);
            }
          ),
          /***/
          51360: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Uint16", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          35779: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Uint32", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          79627: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Uint8", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          71228: (
            /***/
            function(u, d, t) {
              var o = t(26764);
              o("Uint8", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              }, !0);
            }
          ),
          /***/
          85506: (
            /***/
            function(u, d, t) {
              t(55739);
            }
          ),
          /***/
          4116: (
            /***/
            function(u, d, t) {
              t(62688);
            }
          ),
          /***/
          38634: (
            /***/
            function(u, d, t) {
              t(12382);
            }
          ),
          /***/
          67298: (
            /***/
            function(u, d, t) {
              t(487);
            }
          ),
          /***/
          8108: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(29269), n = t(74443);
              o({ target: "Promise", stat: !0 }, {
                try: function(i) {
                  var f = r.f(this), l = n(i);
                  return (l.error ? f.reject : f.resolve)(l.value), f.promise;
                }
              });
            }
          ),
          /***/
          47639: (
            /***/
            function(u, d, t) {
              t(55797);
            }
          ),
          /***/
          6208: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(12848), n = t(79189), i = t(20379), f = t(45899), l = function(h) {
                if (h && h.forEach !== i)
                  try {
                    f(h, "forEach", i);
                  } catch {
                    h.forEach = i;
                  }
              };
              for (var c in r)
                r[c] && l(o[c] && o[c].prototype);
              l(n);
            }
          ),
          /***/
          68995: (
            /***/
            function(u, d, t) {
              var o = t(98363), r = t(12848), n = t(79189), i = t(54883), f = t(45899), l = t(52280), c = l("iterator"), h = l("toStringTag"), a = i.values, v = function(g, e) {
                if (g) {
                  if (g[c] !== a)
                    try {
                      f(g, c, a);
                    } catch {
                      g[c] = a;
                    }
                  if (g[h] || f(g, h, e), r[e]) {
                    for (var m in i)
                      if (g[m] !== i[m])
                        try {
                          f(g, m, i[m]);
                        } catch {
                          g[m] = i[m];
                        }
                  }
                }
              };
              for (var y in r)
                v(o[y] && o[y].prototype, y);
              v(n, "DOMTokenList");
            }
          ),
          /***/
          87191: (
            /***/
            function(u, d, t) {
              var o = t(19882), r = t(79611);
              o({ target: "URL", proto: !0, enumerable: !0 }, {
                toJSON: function() {
                  return r(URL.prototype.toString, this);
                }
              });
            }
          ),
          /***/
          80623: (
            /***/
            function(u, d, t) {
              var o = t(55047);
              t(68995), u.exports = o;
            }
          ),
          /***/
          27074: (
            /***/
            function(u, d, t) {
              var o = t(806), r = t(77092), n = t(7402), i = t(55278), f = t(80251), l = t(28659), c = Date.prototype.getTime;
              function h(g, e, m) {
                var w = m || {};
                return (w.strict ? n(g, e) : g === e) ? !0 : !g || !e || typeof g != "object" && typeof e != "object" ? w.strict ? n(g, e) : g == e : y(g, e, w);
              }
              function a(g) {
                return g == null;
              }
              function v(g) {
                return !(!g || typeof g != "object" || typeof g.length != "number" || typeof g.copy != "function" || typeof g.slice != "function" || g.length > 0 && typeof g[0] != "number");
              }
              function y(g, e, m) {
                var w, D;
                if (typeof g != typeof e || a(g) || a(e) || g.prototype !== e.prototype || r(g) !== r(e))
                  return !1;
                var I = i(g), T = i(e);
                if (I !== T)
                  return !1;
                if (I || T)
                  return g.source === e.source && f(g) === f(e);
                if (l(g) && l(e))
                  return c.call(g) === c.call(e);
                var C = v(g), E = v(e);
                if (C !== E)
                  return !1;
                if (C || E) {
                  if (g.length !== e.length)
                    return !1;
                  for (w = 0; w < g.length; w++)
                    if (g[w] !== e[w])
                      return !1;
                  return !0;
                }
                if (typeof g != typeof e)
                  return !1;
                try {
                  var F = o(g), x = o(e);
                } catch {
                  return !1;
                }
                if (F.length !== x.length)
                  return !1;
                for (F.sort(), x.sort(), w = F.length - 1; w >= 0; w--)
                  if (F[w] != x[w])
                    return !1;
                for (w = F.length - 1; w >= 0; w--)
                  if (D = F[w], !h(g[D], e[D], m))
                    return !1;
                return !0;
              }
              u.exports = h;
            }
          ),
          /***/
          72656: (
            /***/
            function(u, d, t) {
              var o = t(28198)(), r = t(31801), n = o && r("%Object.defineProperty%", !0);
              if (n)
                try {
                  n({}, "a", { value: 1 });
                } catch {
                  n = !1;
                }
              var i = r("%SyntaxError%"), f = r("%TypeError%"), l = t(93828);
              u.exports = function(h, a, v) {
                if (!h || typeof h != "object" && typeof h != "function")
                  throw new f("`obj` must be an object or a function`");
                if (typeof a != "string" && typeof a != "symbol")
                  throw new f("`property` must be a string or a symbol`");
                if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
                  throw new f("`nonEnumerable`, if provided, must be a boolean or null");
                if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
                  throw new f("`nonWritable`, if provided, must be a boolean or null");
                if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
                  throw new f("`nonConfigurable`, if provided, must be a boolean or null");
                if (arguments.length > 6 && typeof arguments[6] != "boolean")
                  throw new f("`loose`, if provided, must be a boolean");
                var y = arguments.length > 3 ? arguments[3] : null, g = arguments.length > 4 ? arguments[4] : null, e = arguments.length > 5 ? arguments[5] : null, m = arguments.length > 6 ? arguments[6] : !1, w = !!l && l(h, a);
                if (n)
                  n(h, a, {
                    configurable: e === null && w ? w.configurable : !e,
                    enumerable: y === null && w ? w.enumerable : !y,
                    value: v,
                    writable: g === null && w ? w.writable : !g
                  });
                else if (m || !y && !g && !e)
                  h[a] = v;
                else
                  throw new i("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
              };
            }
          ),
          /***/
          19170: (
            /***/
            function(u, d, t) {
              var o = t(806), r = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", n = Object.prototype.toString, i = Array.prototype.concat, f = t(72656), l = function(v) {
                return typeof v == "function" && n.call(v) === "[object Function]";
              }, c = t(28198)(), h = function(v, y, g, e) {
                if (y in v) {
                  if (e === !0) {
                    if (v[y] === g)
                      return;
                  } else if (!l(e) || !e())
                    return;
                }
                c ? f(v, y, g, !0) : f(v, y, g);
              }, a = function(v, y) {
                var g = arguments.length > 2 ? arguments[2] : {}, e = o(y);
                r && (e = i.call(e, Object.getOwnPropertySymbols(y)));
                for (var m = 0; m < e.length; m += 1)
                  h(v, e[m], y[e[m]], g[e[m]]);
              };
              a.supportsDescriptors = !!c, u.exports = a;
            }
          ),
          /***/
          5939: (
            /***/
            function(u) {
              var d = typeof Reflect == "object" ? Reflect : null, t = d && typeof d.apply == "function" ? d.apply : function(E, F, x) {
                return Function.prototype.apply.call(E, F, x);
              }, o;
              d && typeof d.ownKeys == "function" ? o = d.ownKeys : Object.getOwnPropertySymbols ? o = function(E) {
                return Object.getOwnPropertyNames(E).concat(Object.getOwnPropertySymbols(E));
              } : o = function(E) {
                return Object.getOwnPropertyNames(E);
              };
              function r(C) {
                console && console.warn && console.warn(C);
              }
              var n = Number.isNaN || function(E) {
                return E !== E;
              };
              function i() {
                i.init.call(this);
              }
              u.exports = i, u.exports.once = D, i.EventEmitter = i, i.prototype._events = void 0, i.prototype._eventsCount = 0, i.prototype._maxListeners = void 0;
              var f = 10;
              function l(C) {
                if (typeof C != "function")
                  throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof C);
              }
              Object.defineProperty(i, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                  return f;
                },
                set: function(C) {
                  if (typeof C != "number" || C < 0 || n(C))
                    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + C + ".");
                  f = C;
                }
              }), i.init = function() {
                (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
              }, i.prototype.setMaxListeners = function(E) {
                if (typeof E != "number" || E < 0 || n(E))
                  throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + E + ".");
                return this._maxListeners = E, this;
              };
              function c(C) {
                return C._maxListeners === void 0 ? i.defaultMaxListeners : C._maxListeners;
              }
              i.prototype.getMaxListeners = function() {
                return c(this);
              }, i.prototype.emit = function(E) {
                for (var F = [], x = 1; x < arguments.length; x++)
                  F.push(arguments[x]);
                var P = E === "error", L = this._events;
                if (L !== void 0)
                  P = P && L.error === void 0;
                else if (!P)
                  return !1;
                if (P) {
                  var N;
                  if (F.length > 0 && (N = F[0]), N instanceof Error)
                    throw N;
                  var M = new Error("Unhandled error." + (N ? " (" + N.message + ")" : ""));
                  throw M.context = N, M;
                }
                var K = L[E];
                if (K === void 0)
                  return !1;
                if (typeof K == "function")
                  t(K, this, F);
                else
                  for (var ut = K.length, J = e(K, ut), x = 0; x < ut; ++x)
                    t(J[x], this, F);
                return !0;
              };
              function h(C, E, F, x) {
                var P, L, N;
                if (l(F), L = C._events, L === void 0 ? (L = C._events = /* @__PURE__ */ Object.create(null), C._eventsCount = 0) : (L.newListener !== void 0 && (C.emit(
                  "newListener",
                  E,
                  F.listener ? F.listener : F
                ), L = C._events), N = L[E]), N === void 0)
                  N = L[E] = F, ++C._eventsCount;
                else if (typeof N == "function" ? N = L[E] = x ? [F, N] : [N, F] : x ? N.unshift(F) : N.push(F), P = c(C), P > 0 && N.length > P && !N.warned) {
                  N.warned = !0;
                  var M = new Error("Possible EventEmitter memory leak detected. " + N.length + " " + String(E) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                  M.name = "MaxListenersExceededWarning", M.emitter = C, M.type = E, M.count = N.length, r(M);
                }
                return C;
              }
              i.prototype.addListener = function(E, F) {
                return h(this, E, F, !1);
              }, i.prototype.on = i.prototype.addListener, i.prototype.prependListener = function(E, F) {
                return h(this, E, F, !0);
              };
              function a() {
                if (!this.fired)
                  return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
              }
              function v(C, E, F) {
                var x = { fired: !1, wrapFn: void 0, target: C, type: E, listener: F }, P = a.bind(x);
                return P.listener = F, x.wrapFn = P, P;
              }
              i.prototype.once = function(E, F) {
                return l(F), this.on(E, v(this, E, F)), this;
              }, i.prototype.prependOnceListener = function(E, F) {
                return l(F), this.prependListener(E, v(this, E, F)), this;
              }, i.prototype.removeListener = function(E, F) {
                var x, P, L, N, M;
                if (l(F), P = this._events, P === void 0)
                  return this;
                if (x = P[E], x === void 0)
                  return this;
                if (x === F || x.listener === F)
                  --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete P[E], P.removeListener && this.emit("removeListener", E, x.listener || F));
                else if (typeof x != "function") {
                  for (L = -1, N = x.length - 1; N >= 0; N--)
                    if (x[N] === F || x[N].listener === F) {
                      M = x[N].listener, L = N;
                      break;
                    }
                  if (L < 0)
                    return this;
                  L === 0 ? x.shift() : m(x, L), x.length === 1 && (P[E] = x[0]), P.removeListener !== void 0 && this.emit("removeListener", E, M || F);
                }
                return this;
              }, i.prototype.off = i.prototype.removeListener, i.prototype.removeAllListeners = function(E) {
                var F, x, P;
                if (x = this._events, x === void 0)
                  return this;
                if (x.removeListener === void 0)
                  return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : x[E] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete x[E]), this;
                if (arguments.length === 0) {
                  var L = Object.keys(x), N;
                  for (P = 0; P < L.length; ++P)
                    N = L[P], N !== "removeListener" && this.removeAllListeners(N);
                  return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
                }
                if (F = x[E], typeof F == "function")
                  this.removeListener(E, F);
                else if (F !== void 0)
                  for (P = F.length - 1; P >= 0; P--)
                    this.removeListener(E, F[P]);
                return this;
              };
              function y(C, E, F) {
                var x = C._events;
                if (x === void 0)
                  return [];
                var P = x[E];
                return P === void 0 ? [] : typeof P == "function" ? F ? [P.listener || P] : [P] : F ? w(P) : e(P, P.length);
              }
              i.prototype.listeners = function(E) {
                return y(this, E, !0);
              }, i.prototype.rawListeners = function(E) {
                return y(this, E, !1);
              }, i.listenerCount = function(C, E) {
                return typeof C.listenerCount == "function" ? C.listenerCount(E) : g.call(C, E);
              }, i.prototype.listenerCount = g;
              function g(C) {
                var E = this._events;
                if (E !== void 0) {
                  var F = E[C];
                  if (typeof F == "function")
                    return 1;
                  if (F !== void 0)
                    return F.length;
                }
                return 0;
              }
              i.prototype.eventNames = function() {
                return this._eventsCount > 0 ? o(this._events) : [];
              };
              function e(C, E) {
                for (var F = new Array(E), x = 0; x < E; ++x)
                  F[x] = C[x];
                return F;
              }
              function m(C, E) {
                for (; E + 1 < C.length; E++)
                  C[E] = C[E + 1];
                C.pop();
              }
              function w(C) {
                for (var E = new Array(C.length), F = 0; F < E.length; ++F)
                  E[F] = C[F].listener || C[F];
                return E;
              }
              function D(C, E) {
                return new Promise(function(F, x) {
                  function P(N) {
                    C.removeListener(E, L), x(N);
                  }
                  function L() {
                    typeof C.removeListener == "function" && C.removeListener("error", P), F([].slice.call(arguments));
                  }
                  T(C, E, L, { once: !0 }), E !== "error" && I(C, P, { once: !0 });
                });
              }
              function I(C, E, F) {
                typeof C.on == "function" && T(C, "error", E, F);
              }
              function T(C, E, F, x) {
                if (typeof C.on == "function")
                  x.once ? C.once(E, F) : C.on(E, F);
                else if (typeof C.addEventListener == "function")
                  C.addEventListener(E, function P(L) {
                    x.once && C.removeEventListener(E, P), F(L);
                  });
                else
                  throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof C);
              }
            }
          ),
          /***/
          88706: (
            /***/
            function(u, d, t) {
              u.exports = function() {
                if (typeof globalThis == "object")
                  return globalThis;
                var o;
                try {
                  o = this || new Function("return this")();
                } catch {
                  if (typeof window == "object")
                    return window;
                  if (typeof self == "object")
                    return self;
                  if (typeof t.g < "u")
                    return t.g;
                }
                return o;
              }();
            }
          ),
          /***/
          94843: (
            /***/
            function(u, d, t) {
              var o = t(5443), r = Object.prototype.toString, n = Object.prototype.hasOwnProperty, i = function(a, v, y) {
                for (var g = 0, e = a.length; g < e; g++)
                  n.call(a, g) && (y == null ? v(a[g], g, a) : v.call(y, a[g], g, a));
              }, f = function(a, v, y) {
                for (var g = 0, e = a.length; g < e; g++)
                  y == null ? v(a.charAt(g), g, a) : v.call(y, a.charAt(g), g, a);
              }, l = function(a, v, y) {
                for (var g in a)
                  n.call(a, g) && (y == null ? v(a[g], g, a) : v.call(y, a[g], g, a));
              }, c = function(a, v, y) {
                if (!o(v))
                  throw new TypeError("iterator must be a function");
                var g;
                arguments.length >= 3 && (g = y), r.call(a) === "[object Array]" ? i(a, v, g) : typeof a == "string" ? f(a, v, g) : l(a, v, g);
              };
              u.exports = c;
            }
          ),
          /***/
          19930: (
            /***/
            function(u) {
              var d = "Function.prototype.bind called on incompatible ", t = Object.prototype.toString, o = Math.max, r = "[object Function]", n = function(c, h) {
                for (var a = [], v = 0; v < c.length; v += 1)
                  a[v] = c[v];
                for (var y = 0; y < h.length; y += 1)
                  a[y + c.length] = h[y];
                return a;
              }, i = function(c, h) {
                for (var a = [], v = h || 0, y = 0; v < c.length; v += 1, y += 1)
                  a[y] = c[v];
                return a;
              }, f = function(l, c) {
                for (var h = "", a = 0; a < l.length; a += 1)
                  h += l[a], a + 1 < l.length && (h += c);
                return h;
              };
              u.exports = function(c) {
                var h = this;
                if (typeof h != "function" || t.apply(h) !== r)
                  throw new TypeError(d + h);
                for (var a = i(arguments, 1), v, y = function() {
                  if (this instanceof v) {
                    var D = h.apply(
                      this,
                      n(a, arguments)
                    );
                    return Object(D) === D ? D : this;
                  }
                  return h.apply(
                    c,
                    n(a, arguments)
                  );
                }, g = o(0, h.length - a.length), e = [], m = 0; m < g; m++)
                  e[m] = "$" + m;
                if (v = Function("binder", "return function (" + f(e, ",") + "){ return binder.apply(this,arguments); }")(y), h.prototype) {
                  var w = function() {
                  };
                  w.prototype = h.prototype, v.prototype = new w(), w.prototype = null;
                }
                return v;
              };
            }
          ),
          /***/
          21930: (
            /***/
            function(u, d, t) {
              var o = t(19930);
              u.exports = Function.prototype.bind || o;
            }
          ),
          /***/
          87105: (
            /***/
            function(u) {
              var d = function() {
                return typeof function() {
                }.name == "string";
              }, t = Object.getOwnPropertyDescriptor;
              if (t)
                try {
                  t([], "length");
                } catch {
                  t = null;
                }
              d.functionsHaveConfigurableNames = function() {
                if (!d() || !t)
                  return !1;
                var n = t(function() {
                }, "name");
                return !!n && !!n.configurable;
              };
              var o = Function.prototype.bind;
              d.boundFunctionsHaveNames = function() {
                return d() && typeof o == "function" && function() {
                }.bind().name !== "";
              }, u.exports = d;
            }
          ),
          /***/
          31801: (
            /***/
            function(u, d, t) {
              var o, r = SyntaxError, n = Function, i = TypeError, f = function(J) {
                try {
                  return n('"use strict"; return (' + J + ").constructor;")();
                } catch {
                }
              }, l = Object.getOwnPropertyDescriptor;
              if (l)
                try {
                  l({}, "");
                } catch {
                  l = null;
                }
              var c = function() {
                throw new i();
              }, h = l ? function() {
                try {
                  return arguments.callee, c;
                } catch {
                  try {
                    return l(arguments, "callee").get;
                  } catch {
                    return c;
                  }
                }
              }() : c, a = t(99905)(), v = t(11856)(), y = Object.getPrototypeOf || (v ? function(J) {
                return J.__proto__;
              } : null), g = {}, e = typeof Uint8Array > "u" || !y ? o : y(Uint8Array), m = {
                "%AggregateError%": typeof AggregateError > "u" ? o : AggregateError,
                "%Array%": Array,
                "%ArrayBuffer%": typeof ArrayBuffer > "u" ? o : ArrayBuffer,
                "%ArrayIteratorPrototype%": a && y ? y([][Symbol.iterator]()) : o,
                "%AsyncFromSyncIteratorPrototype%": o,
                "%AsyncFunction%": g,
                "%AsyncGenerator%": g,
                "%AsyncGeneratorFunction%": g,
                "%AsyncIteratorPrototype%": g,
                "%Atomics%": typeof Atomics > "u" ? o : Atomics,
                "%BigInt%": typeof BigInt > "u" ? o : BigInt,
                "%BigInt64Array%": typeof BigInt64Array > "u" ? o : BigInt64Array,
                "%BigUint64Array%": typeof BigUint64Array > "u" ? o : BigUint64Array,
                "%Boolean%": Boolean,
                "%DataView%": typeof DataView > "u" ? o : DataView,
                "%Date%": Date,
                "%decodeURI%": decodeURI,
                "%decodeURIComponent%": decodeURIComponent,
                "%encodeURI%": encodeURI,
                "%encodeURIComponent%": encodeURIComponent,
                "%Error%": Error,
                "%eval%": eval,
                // eslint-disable-line no-eval
                "%EvalError%": EvalError,
                "%Float32Array%": typeof Float32Array > "u" ? o : Float32Array,
                "%Float64Array%": typeof Float64Array > "u" ? o : Float64Array,
                "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? o : FinalizationRegistry,
                "%Function%": n,
                "%GeneratorFunction%": g,
                "%Int8Array%": typeof Int8Array > "u" ? o : Int8Array,
                "%Int16Array%": typeof Int16Array > "u" ? o : Int16Array,
                "%Int32Array%": typeof Int32Array > "u" ? o : Int32Array,
                "%isFinite%": isFinite,
                "%isNaN%": isNaN,
                "%IteratorPrototype%": a && y ? y(y([][Symbol.iterator]())) : o,
                "%JSON%": typeof JSON == "object" ? JSON : o,
                "%Map%": typeof Map > "u" ? o : Map,
                "%MapIteratorPrototype%": typeof Map > "u" || !a || !y ? o : y((/* @__PURE__ */ new Map())[Symbol.iterator]()),
                "%Math%": Math,
                "%Number%": Number,
                "%Object%": Object,
                "%parseFloat%": parseFloat,
                "%parseInt%": parseInt,
                "%Promise%": typeof Promise > "u" ? o : Promise,
                "%Proxy%": typeof Proxy > "u" ? o : Proxy,
                "%RangeError%": RangeError,
                "%ReferenceError%": ReferenceError,
                "%Reflect%": typeof Reflect > "u" ? o : Reflect,
                "%RegExp%": RegExp,
                "%Set%": typeof Set > "u" ? o : Set,
                "%SetIteratorPrototype%": typeof Set > "u" || !a || !y ? o : y((/* @__PURE__ */ new Set())[Symbol.iterator]()),
                "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? o : SharedArrayBuffer,
                "%String%": String,
                "%StringIteratorPrototype%": a && y ? y(""[Symbol.iterator]()) : o,
                "%Symbol%": a ? Symbol : o,
                "%SyntaxError%": r,
                "%ThrowTypeError%": h,
                "%TypedArray%": e,
                "%TypeError%": i,
                "%Uint8Array%": typeof Uint8Array > "u" ? o : Uint8Array,
                "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? o : Uint8ClampedArray,
                "%Uint16Array%": typeof Uint16Array > "u" ? o : Uint16Array,
                "%Uint32Array%": typeof Uint32Array > "u" ? o : Uint32Array,
                "%URIError%": URIError,
                "%WeakMap%": typeof WeakMap > "u" ? o : WeakMap,
                "%WeakRef%": typeof WeakRef > "u" ? o : WeakRef,
                "%WeakSet%": typeof WeakSet > "u" ? o : WeakSet
              };
              if (y)
                try {
                  null.error;
                } catch (J) {
                  var w = y(y(J));
                  m["%Error.prototype%"] = w;
                }
              var D = function J(rt) {
                var yt;
                if (rt === "%AsyncFunction%")
                  yt = f("async function () {}");
                else if (rt === "%GeneratorFunction%")
                  yt = f("function* () {}");
                else if (rt === "%AsyncGeneratorFunction%")
                  yt = f("async function* () {}");
                else if (rt === "%AsyncGenerator%") {
                  var xt = J("%AsyncGeneratorFunction%");
                  xt && (yt = xt.prototype);
                } else if (rt === "%AsyncIteratorPrototype%") {
                  var Et = J("%AsyncGenerator%");
                  Et && y && (yt = y(Et.prototype));
                }
                return m[rt] = yt, yt;
              }, I = {
                "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
                "%ArrayPrototype%": ["Array", "prototype"],
                "%ArrayProto_entries%": ["Array", "prototype", "entries"],
                "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
                "%ArrayProto_keys%": ["Array", "prototype", "keys"],
                "%ArrayProto_values%": ["Array", "prototype", "values"],
                "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
                "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
                "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
                "%BooleanPrototype%": ["Boolean", "prototype"],
                "%DataViewPrototype%": ["DataView", "prototype"],
                "%DatePrototype%": ["Date", "prototype"],
                "%ErrorPrototype%": ["Error", "prototype"],
                "%EvalErrorPrototype%": ["EvalError", "prototype"],
                "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
                "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
                "%FunctionPrototype%": ["Function", "prototype"],
                "%Generator%": ["GeneratorFunction", "prototype"],
                "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
                "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
                "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
                "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
                "%JSONParse%": ["JSON", "parse"],
                "%JSONStringify%": ["JSON", "stringify"],
                "%MapPrototype%": ["Map", "prototype"],
                "%NumberPrototype%": ["Number", "prototype"],
                "%ObjectPrototype%": ["Object", "prototype"],
                "%ObjProto_toString%": ["Object", "prototype", "toString"],
                "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
                "%PromisePrototype%": ["Promise", "prototype"],
                "%PromiseProto_then%": ["Promise", "prototype", "then"],
                "%Promise_all%": ["Promise", "all"],
                "%Promise_reject%": ["Promise", "reject"],
                "%Promise_resolve%": ["Promise", "resolve"],
                "%RangeErrorPrototype%": ["RangeError", "prototype"],
                "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
                "%RegExpPrototype%": ["RegExp", "prototype"],
                "%SetPrototype%": ["Set", "prototype"],
                "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
                "%StringPrototype%": ["String", "prototype"],
                "%SymbolPrototype%": ["Symbol", "prototype"],
                "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
                "%TypedArrayPrototype%": ["TypedArray", "prototype"],
                "%TypeErrorPrototype%": ["TypeError", "prototype"],
                "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
                "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
                "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
                "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
                "%URIErrorPrototype%": ["URIError", "prototype"],
                "%WeakMapPrototype%": ["WeakMap", "prototype"],
                "%WeakSetPrototype%": ["WeakSet", "prototype"]
              }, T = t(21930), C = t(89429), E = T.call(Function.call, Array.prototype.concat), F = T.call(Function.apply, Array.prototype.splice), x = T.call(Function.call, String.prototype.replace), P = T.call(Function.call, String.prototype.slice), L = T.call(Function.call, RegExp.prototype.exec), N = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, M = /\\(\\)?/g, K = function(rt) {
                var yt = P(rt, 0, 1), xt = P(rt, -1);
                if (yt === "%" && xt !== "%")
                  throw new r("invalid intrinsic syntax, expected closing `%`");
                if (xt === "%" && yt !== "%")
                  throw new r("invalid intrinsic syntax, expected opening `%`");
                var Et = [];
                return x(rt, N, function(Ft, Rt, Ut, Q) {
                  Et[Et.length] = Ut ? x(Q, M, "$1") : Rt || Ft;
                }), Et;
              }, ut = function(rt, yt) {
                var xt = rt, Et;
                if (C(I, xt) && (Et = I[xt], xt = "%" + Et[0] + "%"), C(m, xt)) {
                  var Ft = m[xt];
                  if (Ft === g && (Ft = D(xt)), typeof Ft > "u" && !yt)
                    throw new i("intrinsic " + rt + " exists, but is not available. Please file an issue!");
                  return {
                    alias: Et,
                    name: xt,
                    value: Ft
                  };
                }
                throw new r("intrinsic " + rt + " does not exist!");
              };
              u.exports = function(rt, yt) {
                if (typeof rt != "string" || rt.length === 0)
                  throw new i("intrinsic name must be a non-empty string");
                if (arguments.length > 1 && typeof yt != "boolean")
                  throw new i('"allowMissing" argument must be a boolean');
                if (L(/^%?[^%]*%?$/, rt) === null)
                  throw new r("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
                var xt = K(rt), Et = xt.length > 0 ? xt[0] : "", Ft = ut("%" + Et + "%", yt), Rt = Ft.name, Ut = Ft.value, Q = !1, pt = Ft.alias;
                pt && (Et = pt[0], F(xt, E([0, 1], pt)));
                for (var ct = 1, ot = !0; ct < xt.length; ct += 1) {
                  var mt = xt[ct], G = P(mt, 0, 1), Tt = P(mt, -1);
                  if ((G === '"' || G === "'" || G === "`" || Tt === '"' || Tt === "'" || Tt === "`") && G !== Tt)
                    throw new r("property names with quotes must have matching quotes");
                  if ((mt === "constructor" || !ot) && (Q = !0), Et += "." + mt, Rt = "%" + Et + "%", C(m, Rt))
                    Ut = m[Rt];
                  else if (Ut != null) {
                    if (!(mt in Ut)) {
                      if (!yt)
                        throw new i("base intrinsic for " + rt + " exists, but the property is not available.");
                      return;
                    }
                    if (l && ct + 1 >= xt.length) {
                      var z = l(Ut, mt);
                      ot = !!z, ot && "get" in z && !("originalValue" in z.get) ? Ut = z.get : Ut = Ut[mt];
                    } else
                      ot = C(Ut, mt), Ut = Ut[mt];
                    ot && !Q && (m[Rt] = Ut);
                  }
                }
                return Ut;
              };
            }
          ),
          /***/
          93828: (
            /***/
            function(u, d, t) {
              var o = t(31801), r = o("%Object.getOwnPropertyDescriptor%", !0);
              if (r)
                try {
                  r([], "length");
                } catch {
                  r = null;
                }
              u.exports = r;
            }
          ),
          /***/
          28198: (
            /***/
            function(u, d, t) {
              var o = t(31801), r = o("%Object.defineProperty%", !0), n = function() {
                if (r)
                  try {
                    return r({}, "a", { value: 1 }), !0;
                  } catch {
                    return !1;
                  }
                return !1;
              };
              n.hasArrayLengthDefineBug = function() {
                if (!n())
                  return null;
                try {
                  return r([], "length", { value: 1 }).length !== 1;
                } catch {
                  return !0;
                }
              }, u.exports = n;
            }
          ),
          /***/
          11856: (
            /***/
            function(u) {
              var d = {
                foo: {}
              }, t = Object;
              u.exports = function() {
                return { __proto__: d }.foo === d.foo && !({ __proto__: null } instanceof t);
              };
            }
          ),
          /***/
          99905: (
            /***/
            function(u, d, t) {
              var o = typeof Symbol < "u" && Symbol, r = t(65682);
              u.exports = function() {
                return typeof o != "function" || typeof Symbol != "function" || typeof o("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : r();
              };
            }
          ),
          /***/
          65682: (
            /***/
            function(u) {
              u.exports = function() {
                if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
                  return !1;
                if (typeof Symbol.iterator == "symbol")
                  return !0;
                var t = {}, o = Symbol("test"), r = Object(o);
                if (typeof o == "string" || Object.prototype.toString.call(o) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]")
                  return !1;
                var n = 42;
                t[o] = n;
                for (o in t)
                  return !1;
                if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0)
                  return !1;
                var i = Object.getOwnPropertySymbols(t);
                if (i.length !== 1 || i[0] !== o || !Object.prototype.propertyIsEnumerable.call(t, o))
                  return !1;
                if (typeof Object.getOwnPropertyDescriptor == "function") {
                  var f = Object.getOwnPropertyDescriptor(t, o);
                  if (f.value !== n || f.enumerable !== !0)
                    return !1;
                }
                return !0;
              };
            }
          ),
          /***/
          44111: (
            /***/
            function(u, d, t) {
              var o = t(65682);
              u.exports = function() {
                return o() && !!Symbol.toStringTag;
              };
            }
          ),
          /***/
          89429: (
            /***/
            function(u, d, t) {
              var o = Function.prototype.call, r = Object.prototype.hasOwnProperty, n = t(21930);
              u.exports = n.call(o, r);
            }
          ),
          /***/
          72959: (
            /***/
            function(u, d, t) {
              var o = t(85543).Buffer;
              d._dbcs = a;
              for (var r = -1, n = -2, i = -10, f = -1e3, l = new Array(256), c = -1, h = 0; h < 256; h++)
                l[h] = r;
              function a(e, m) {
                if (this.encodingName = e.encodingName, !e)
                  throw new Error("DBCS codec is called without the data.");
                if (!e.table)
                  throw new Error("Encoding '" + this.encodingName + "' has no data.");
                var w = e.table();
                this.decodeTables = [], this.decodeTables[0] = l.slice(0), this.decodeTableSeq = [];
                for (var D = 0; D < w.length; D++)
                  this._addDecodeChunk(w[D]);
                if (typeof e.gb18030 == "function") {
                  this.gb18030 = e.gb18030();
                  var I = this.decodeTables.length;
                  this.decodeTables.push(l.slice(0));
                  var T = this.decodeTables.length;
                  this.decodeTables.push(l.slice(0));
                  for (var C = this.decodeTables[0], D = 129; D <= 254; D++)
                    for (var E = this.decodeTables[f - C[D]], F = 48; F <= 57; F++) {
                      if (E[F] === r)
                        E[F] = f - I;
                      else if (E[F] > f)
                        throw new Error("gb18030 decode tables conflict at byte 2");
                      for (var x = this.decodeTables[f - E[F]], P = 129; P <= 254; P++) {
                        if (x[P] === r)
                          x[P] = f - T;
                        else {
                          if (x[P] === f - T)
                            continue;
                          if (x[P] > f)
                            throw new Error("gb18030 decode tables conflict at byte 3");
                        }
                        for (var L = this.decodeTables[f - x[P]], N = 48; N <= 57; N++)
                          L[N] === r && (L[N] = n);
                      }
                    }
                }
                this.defaultCharUnicode = m.defaultCharUnicode, this.encodeTable = [], this.encodeTableSeq = [];
                var M = {};
                if (e.encodeSkipVals)
                  for (var D = 0; D < e.encodeSkipVals.length; D++) {
                    var K = e.encodeSkipVals[D];
                    if (typeof K == "number")
                      M[K] = !0;
                    else
                      for (var F = K.from; F <= K.to; F++)
                        M[F] = !0;
                  }
                if (this._fillEncodeTable(0, 0, M), e.encodeAdd)
                  for (var ut in e.encodeAdd)
                    Object.prototype.hasOwnProperty.call(e.encodeAdd, ut) && this._setEncodeChar(ut.charCodeAt(0), e.encodeAdd[ut]);
                this.defCharSB = this.encodeTable[0][m.defaultCharSingleByte.charCodeAt(0)], this.defCharSB === r && (this.defCharSB = this.encodeTable[0]["?"]), this.defCharSB === r && (this.defCharSB = "?".charCodeAt(0));
              }
              a.prototype.encoder = v, a.prototype.decoder = y, a.prototype._getDecodeTrieNode = function(e) {
                for (var m = []; e > 0; e >>>= 8)
                  m.push(e & 255);
                m.length == 0 && m.push(0);
                for (var w = this.decodeTables[0], D = m.length - 1; D > 0; D--) {
                  var I = w[m[D]];
                  if (I == r)
                    w[m[D]] = f - this.decodeTables.length, this.decodeTables.push(w = l.slice(0));
                  else if (I <= f)
                    w = this.decodeTables[f - I];
                  else
                    throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + e.toString(16));
                }
                return w;
              }, a.prototype._addDecodeChunk = function(e) {
                var m = parseInt(e[0], 16), w = this._getDecodeTrieNode(m);
                m = m & 255;
                for (var D = 1; D < e.length; D++) {
                  var I = e[D];
                  if (typeof I == "string")
                    for (var T = 0; T < I.length; ) {
                      var C = I.charCodeAt(T++);
                      if (55296 <= C && C < 56320) {
                        var E = I.charCodeAt(T++);
                        if (56320 <= E && E < 57344)
                          w[m++] = 65536 + (C - 55296) * 1024 + (E - 56320);
                        else
                          throw new Error("Incorrect surrogate pair in " + this.encodingName + " at chunk " + e[0]);
                      } else if (4080 < C && C <= 4095) {
                        for (var F = 4095 - C + 2, x = [], P = 0; P < F; P++)
                          x.push(I.charCodeAt(T++));
                        w[m++] = i - this.decodeTableSeq.length, this.decodeTableSeq.push(x);
                      } else
                        w[m++] = C;
                    }
                  else if (typeof I == "number")
                    for (var L = w[m - 1] + 1, T = 0; T < I; T++)
                      w[m++] = L++;
                  else
                    throw new Error("Incorrect type '" + typeof I + "' given in " + this.encodingName + " at chunk " + e[0]);
                }
                if (m > 255)
                  throw new Error("Incorrect chunk in " + this.encodingName + " at addr " + e[0] + ": too long" + m);
              }, a.prototype._getEncodeBucket = function(e) {
                var m = e >> 8;
                return this.encodeTable[m] === void 0 && (this.encodeTable[m] = l.slice(0)), this.encodeTable[m];
              }, a.prototype._setEncodeChar = function(e, m) {
                var w = this._getEncodeBucket(e), D = e & 255;
                w[D] <= i ? this.encodeTableSeq[i - w[D]][c] = m : w[D] == r && (w[D] = m);
              }, a.prototype._setEncodeSequence = function(e, m) {
                var w = e[0], D = this._getEncodeBucket(w), I = w & 255, T;
                D[I] <= i ? T = this.encodeTableSeq[i - D[I]] : (T = {}, D[I] !== r && (T[c] = D[I]), D[I] = i - this.encodeTableSeq.length, this.encodeTableSeq.push(T));
                for (var C = 1; C < e.length - 1; C++) {
                  var E = T[w];
                  typeof E == "object" ? T = E : (T = T[w] = {}, E !== void 0 && (T[c] = E));
                }
                w = e[e.length - 1], T[w] = m;
              }, a.prototype._fillEncodeTable = function(e, m, w) {
                for (var D = this.decodeTables[e], I = !1, T = {}, C = 0; C < 256; C++) {
                  var E = D[C], F = m + C;
                  if (!w[F])
                    if (E >= 0)
                      this._setEncodeChar(E, F), I = !0;
                    else if (E <= f) {
                      var x = f - E;
                      if (!T[x]) {
                        var P = F << 8 >>> 0;
                        this._fillEncodeTable(x, P, w) ? I = !0 : T[x] = !0;
                      }
                    } else
                      E <= i && (this._setEncodeSequence(this.decodeTableSeq[i - E], F), I = !0);
                }
                return I;
              };
              function v(e, m) {
                this.leadSurrogate = -1, this.seqObj = void 0, this.encodeTable = m.encodeTable, this.encodeTableSeq = m.encodeTableSeq, this.defaultCharSingleByte = m.defCharSB, this.gb18030 = m.gb18030;
              }
              v.prototype.write = function(e) {
                for (var m = o.alloc(e.length * (this.gb18030 ? 4 : 3)), w = this.leadSurrogate, D = this.seqObj, I = -1, T = 0, C = 0; ; ) {
                  if (I === -1) {
                    if (T == e.length)
                      break;
                    var E = e.charCodeAt(T++);
                  } else {
                    var E = I;
                    I = -1;
                  }
                  if (55296 <= E && E < 57344)
                    if (E < 56320)
                      if (w === -1) {
                        w = E;
                        continue;
                      } else
                        w = E, E = r;
                    else
                      w !== -1 ? (E = 65536 + (w - 55296) * 1024 + (E - 56320), w = -1) : E = r;
                  else
                    w !== -1 && (I = E, E = r, w = -1);
                  var F = r;
                  if (D !== void 0 && E != r) {
                    var x = D[E];
                    if (typeof x == "object") {
                      D = x;
                      continue;
                    } else
                      typeof x == "number" ? F = x : x == null && (x = D[c], x !== void 0 && (F = x, I = E));
                    D = void 0;
                  } else if (E >= 0) {
                    var P = this.encodeTable[E >> 8];
                    if (P !== void 0 && (F = P[E & 255]), F <= i) {
                      D = this.encodeTableSeq[i - F];
                      continue;
                    }
                    if (F == r && this.gb18030) {
                      var L = g(this.gb18030.uChars, E);
                      if (L != -1) {
                        var F = this.gb18030.gbChars[L] + (E - this.gb18030.uChars[L]);
                        m[C++] = 129 + Math.floor(F / 12600), F = F % 12600, m[C++] = 48 + Math.floor(F / 1260), F = F % 1260, m[C++] = 129 + Math.floor(F / 10), F = F % 10, m[C++] = 48 + F;
                        continue;
                      }
                    }
                  }
                  F === r && (F = this.defaultCharSingleByte), F < 256 ? m[C++] = F : F < 65536 ? (m[C++] = F >> 8, m[C++] = F & 255) : F < 16777216 ? (m[C++] = F >> 16, m[C++] = F >> 8 & 255, m[C++] = F & 255) : (m[C++] = F >>> 24, m[C++] = F >>> 16 & 255, m[C++] = F >>> 8 & 255, m[C++] = F & 255);
                }
                return this.seqObj = D, this.leadSurrogate = w, m.slice(0, C);
              }, v.prototype.end = function() {
                if (!(this.leadSurrogate === -1 && this.seqObj === void 0)) {
                  var e = o.alloc(10), m = 0;
                  if (this.seqObj) {
                    var w = this.seqObj[c];
                    w !== void 0 && (w < 256 ? e[m++] = w : (e[m++] = w >> 8, e[m++] = w & 255)), this.seqObj = void 0;
                  }
                  return this.leadSurrogate !== -1 && (e[m++] = this.defaultCharSingleByte, this.leadSurrogate = -1), e.slice(0, m);
                }
              }, v.prototype.findIdx = g;
              function y(e, m) {
                this.nodeIdx = 0, this.prevBytes = [], this.decodeTables = m.decodeTables, this.decodeTableSeq = m.decodeTableSeq, this.defaultCharUnicode = m.defaultCharUnicode, this.gb18030 = m.gb18030;
              }
              y.prototype.write = function(e) {
                for (var m = o.alloc(e.length * 2), w = this.nodeIdx, D = this.prevBytes, I = this.prevBytes.length, T = -this.prevBytes.length, C, E = 0, F = 0; E < e.length; E++) {
                  var x = E >= 0 ? e[E] : D[E + I], C = this.decodeTables[w][x];
                  if (!(C >= 0))
                    if (C === r)
                      C = this.defaultCharUnicode.charCodeAt(0), E = T;
                    else if (C === n) {
                      if (E >= 3)
                        var P = (e[E - 3] - 129) * 12600 + (e[E - 2] - 48) * 1260 + (e[E - 1] - 129) * 10 + (x - 48);
                      else
                        var P = (D[E - 3 + I] - 129) * 12600 + ((E - 2 >= 0 ? e[E - 2] : D[E - 2 + I]) - 48) * 1260 + ((E - 1 >= 0 ? e[E - 1] : D[E - 1 + I]) - 129) * 10 + (x - 48);
                      var L = g(this.gb18030.gbChars, P);
                      C = this.gb18030.uChars[L] + P - this.gb18030.gbChars[L];
                    } else if (C <= f) {
                      w = f - C;
                      continue;
                    } else if (C <= i) {
                      for (var N = this.decodeTableSeq[i - C], M = 0; M < N.length - 1; M++)
                        C = N[M], m[F++] = C & 255, m[F++] = C >> 8;
                      C = N[N.length - 1];
                    } else
                      throw new Error("iconv-lite internal error: invalid decoding table value " + C + " at " + w + "/" + x);
                  if (C >= 65536) {
                    C -= 65536;
                    var K = 55296 | C >> 10;
                    m[F++] = K & 255, m[F++] = K >> 8, C = 56320 | C & 1023;
                  }
                  m[F++] = C & 255, m[F++] = C >> 8, w = 0, T = E + 1;
                }
                return this.nodeIdx = w, this.prevBytes = T >= 0 ? Array.prototype.slice.call(e, T) : D.slice(T + I).concat(Array.prototype.slice.call(e)), m.slice(0, F).toString("ucs2");
              }, y.prototype.end = function() {
                for (var e = ""; this.prevBytes.length > 0; ) {
                  e += this.defaultCharUnicode;
                  var m = this.prevBytes.slice(1);
                  this.prevBytes = [], this.nodeIdx = 0, m.length > 0 && (e += this.write(m));
                }
                return this.prevBytes = [], this.nodeIdx = 0, e;
              };
              function g(e, m) {
                if (e[0] > m)
                  return -1;
                for (var w = 0, D = e.length; w < D - 1; ) {
                  var I = w + (D - w + 1 >> 1);
                  e[I] <= m ? w = I : D = I;
                }
                return w;
              }
            }
          ),
          /***/
          27479: (
            /***/
            function(u, d, t) {
              u.exports = {
                // == Japanese/ShiftJIS ====================================================
                // All japanese encodings are based on JIS X set of standards:
                // JIS X 0201 - Single-byte encoding of ASCII + Â¥ + Kana chars at 0xA1-0xDF.
                // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
                //              Has several variations in 1978, 1983, 1990 and 1997.
                // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
                // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
                //              2 planes, first is superset of 0208, second - revised 0212.
                //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)
                // Byte encodings are:
                //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
                //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
                //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
                //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
                //               0x00-0x7F       - lower part of 0201
                //               0x8E, 0xA1-0xDF - upper part of 0201
                //               (0xA1-0xFE)x2   - 0208 plane (94x94).
                //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
                //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
                //               Used as-is in ISO2022 family.
                //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
                //                0201-1976 Roman, 0208-1978, 0208-1983.
                //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
                //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
                //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
                //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
                //
                // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
                //
                // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html
                shiftjis: {
                  type: "_dbcs",
                  table: function() {
                    return t(27014);
                  },
                  encodeAdd: { "Â¥": 92, "â¾": 126 },
                  encodeSkipVals: [{ from: 60736, to: 63808 }]
                },
                csshiftjis: "shiftjis",
                mskanji: "shiftjis",
                sjis: "shiftjis",
                windows31j: "shiftjis",
                ms31j: "shiftjis",
                xsjis: "shiftjis",
                windows932: "shiftjis",
                ms932: "shiftjis",
                932: "shiftjis",
                cp932: "shiftjis",
                eucjp: {
                  type: "_dbcs",
                  table: function() {
                    return t(31532);
                  },
                  encodeAdd: { "Â¥": 92, "â¾": 126 }
                },
                // TODO: KDDI extension to Shift_JIS
                // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
                // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.
                // == Chinese/GBK ==========================================================
                // http://en.wikipedia.org/wiki/GBK
                // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder
                // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
                gb2312: "cp936",
                gb231280: "cp936",
                gb23121980: "cp936",
                csgb2312: "cp936",
                csiso58gb231280: "cp936",
                euccn: "cp936",
                // Microsoft's CP936 is a subset and approximation of GBK.
                windows936: "cp936",
                ms936: "cp936",
                936: "cp936",
                cp936: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336);
                  }
                },
                // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
                gbk: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336).concat(t(44346));
                  }
                },
                xgbk: "gbk",
                isoir58: "gbk",
                // GB18030 is an algorithmic extension of GBK.
                // Main source: https://www.w3.org/TR/encoding/#gbk-encoder
                // http://icu-project.org/docs/papers/gb18030.html
                // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
                // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
                gb18030: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336).concat(t(44346));
                  },
                  gb18030: function() {
                    return t(36258);
                  },
                  encodeSkipVals: [128],
                  encodeAdd: { "â¬": 41699 }
                },
                chinese: "gb18030",
                // == Korean ===============================================================
                // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
                windows949: "cp949",
                ms949: "cp949",
                949: "cp949",
                cp949: {
                  type: "_dbcs",
                  table: function() {
                    return t(77348);
                  }
                },
                cseuckr: "cp949",
                csksc56011987: "cp949",
                euckr: "cp949",
                isoir149: "cp949",
                korean: "cp949",
                ksc56011987: "cp949",
                ksc56011989: "cp949",
                ksc5601: "cp949",
                // == Big5/Taiwan/Hong Kong ================================================
                // There are lots of tables for Big5 and cp950. Please see the following links for history:
                // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
                // Variations, in roughly number of defined chars:
                //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
                //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
                //  * Big5-2003 (Taiwan standard) almost superset of cp950.
                //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
                //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
                //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
                //    Plus, it has 4 combining sequences.
                //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
                //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
                //    Implementations are not consistent within browsers; sometimes labeled as just big5.
                //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
                //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
                //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
                //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
                //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
                // 
                // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
                // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.
                windows950: "cp950",
                ms950: "cp950",
                950: "cp950",
                cp950: {
                  type: "_dbcs",
                  table: function() {
                    return t(74284);
                  }
                },
                // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
                big5: "big5hkscs",
                big5hkscs: {
                  type: "_dbcs",
                  table: function() {
                    return t(74284).concat(t(63480));
                  },
                  encodeSkipVals: [
                    // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of
                    // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.
                    // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.
                    36457,
                    36463,
                    36478,
                    36523,
                    36532,
                    36557,
                    36560,
                    36695,
                    36713,
                    36718,
                    36811,
                    36862,
                    36973,
                    36986,
                    37060,
                    37084,
                    37105,
                    37311,
                    37551,
                    37552,
                    37553,
                    37554,
                    37585,
                    37959,
                    38090,
                    38361,
                    38652,
                    39285,
                    39798,
                    39800,
                    39803,
                    39878,
                    39902,
                    39916,
                    39926,
                    40002,
                    40019,
                    40034,
                    40040,
                    40043,
                    40055,
                    40124,
                    40125,
                    40144,
                    40279,
                    40282,
                    40388,
                    40431,
                    40443,
                    40617,
                    40687,
                    40701,
                    40800,
                    40907,
                    41079,
                    41180,
                    41183,
                    36812,
                    37576,
                    38468,
                    38637,
                    // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345
                    41636,
                    41637,
                    41639,
                    41638,
                    41676,
                    41678
                  ]
                },
                cnbig5: "big5hkscs",
                csbig5: "big5hkscs",
                xxbig5: "big5hkscs"
              };
            }
          ),
          /***/
          88069: (
            /***/
            function(u, d, t) {
              for (var o = [
                t(95907),
                t(89252),
                t(1710),
                t(92307),
                t(72542),
                t(26518),
                t(34732),
                t(72959),
                t(27479)
              ], r = 0; r < o.length; r++) {
                var n = o[r];
                for (var i in n)
                  Object.prototype.hasOwnProperty.call(n, i) && (d[i] = n[i]);
              }
            }
          ),
          /***/
          95907: (
            /***/
            function(u, d, t) {
              var o = t(85543).Buffer;
              u.exports = {
                // Encodings
                utf8: { type: "_internal", bomAware: !0 },
                cesu8: { type: "_internal", bomAware: !0 },
                unicode11utf8: "utf8",
                ucs2: { type: "_internal", bomAware: !0 },
                utf16le: "ucs2",
                binary: { type: "_internal" },
                base64: { type: "_internal" },
                hex: { type: "_internal" },
                // Codec.
                _internal: r
              };
              function r(a, v) {
                this.enc = a.encodingName, this.bomAware = a.bomAware, this.enc === "base64" ? this.encoder = l : this.enc === "cesu8" && (this.enc = "utf8", this.encoder = c, o.from("eda0bdedb2a9", "hex").toString() !== "ð©" && (this.decoder = h, this.defaultCharUnicode = v.defaultCharUnicode));
              }
              r.prototype.encoder = f, r.prototype.decoder = i;
              var n = t(10301).s;
              n.prototype.end || (n.prototype.end = function() {
              });
              function i(a, v) {
                this.decoder = new n(v.enc);
              }
              i.prototype.write = function(a) {
                return o.isBuffer(a) || (a = o.from(a)), this.decoder.write(a);
              }, i.prototype.end = function() {
                return this.decoder.end();
              };
              function f(a, v) {
                this.enc = v.enc;
              }
              f.prototype.write = function(a) {
                return o.from(a, this.enc);
              }, f.prototype.end = function() {
              };
              function l(a, v) {
                this.prevStr = "";
              }
              l.prototype.write = function(a) {
                a = this.prevStr + a;
                var v = a.length - a.length % 4;
                return this.prevStr = a.slice(v), a = a.slice(0, v), o.from(a, "base64");
              }, l.prototype.end = function() {
                return o.from(this.prevStr, "base64");
              };
              function c(a, v) {
              }
              c.prototype.write = function(a) {
                for (var v = o.alloc(a.length * 3), y = 0, g = 0; g < a.length; g++) {
                  var e = a.charCodeAt(g);
                  e < 128 ? v[y++] = e : e < 2048 ? (v[y++] = 192 + (e >>> 6), v[y++] = 128 + (e & 63)) : (v[y++] = 224 + (e >>> 12), v[y++] = 128 + (e >>> 6 & 63), v[y++] = 128 + (e & 63));
                }
                return v.slice(0, y);
              }, c.prototype.end = function() {
              };
              function h(a, v) {
                this.acc = 0, this.contBytes = 0, this.accBytes = 0, this.defaultCharUnicode = v.defaultCharUnicode;
              }
              h.prototype.write = function(a) {
                for (var v = this.acc, y = this.contBytes, g = this.accBytes, e = "", m = 0; m < a.length; m++) {
                  var w = a[m];
                  (w & 192) !== 128 ? (y > 0 && (e += this.defaultCharUnicode, y = 0), w < 128 ? e += String.fromCharCode(w) : w < 224 ? (v = w & 31, y = 1, g = 1) : w < 240 ? (v = w & 15, y = 2, g = 1) : e += this.defaultCharUnicode) : y > 0 ? (v = v << 6 | w & 63, y--, g++, y === 0 && (g === 2 && v < 128 && v > 0 ? e += this.defaultCharUnicode : g === 3 && v < 2048 ? e += this.defaultCharUnicode : e += String.fromCharCode(v))) : e += this.defaultCharUnicode;
                }
                return this.acc = v, this.contBytes = y, this.accBytes = g, e;
              }, h.prototype.end = function() {
                var a = 0;
                return this.contBytes > 0 && (a += this.defaultCharUnicode), a;
              };
            }
          ),
          /***/
          72542: (
            /***/
            function(u, d, t) {
              var o = t(85543).Buffer;
              d._sbcs = r;
              function r(f, l) {
                if (!f)
                  throw new Error("SBCS codec is called without the data.");
                if (!f.chars || f.chars.length !== 128 && f.chars.length !== 256)
                  throw new Error("Encoding '" + f.type + "' has incorrect 'chars' (must be of len 128 or 256)");
                if (f.chars.length === 128) {
                  for (var c = "", h = 0; h < 128; h++)
                    c += String.fromCharCode(h);
                  f.chars = c + f.chars;
                }
                this.decodeBuf = o.from(f.chars, "ucs2");
                for (var a = o.alloc(65536, l.defaultCharSingleByte.charCodeAt(0)), h = 0; h < f.chars.length; h++)
                  a[f.chars.charCodeAt(h)] = h;
                this.encodeBuf = a;
              }
              r.prototype.encoder = n, r.prototype.decoder = i;
              function n(f, l) {
                this.encodeBuf = l.encodeBuf;
              }
              n.prototype.write = function(f) {
                for (var l = o.alloc(f.length), c = 0; c < f.length; c++)
                  l[c] = this.encodeBuf[f.charCodeAt(c)];
                return l;
              }, n.prototype.end = function() {
              };
              function i(f, l) {
                this.decodeBuf = l.decodeBuf;
              }
              i.prototype.write = function(f) {
                for (var l = this.decodeBuf, c = o.alloc(f.length * 2), h = 0, a = 0, v = 0; v < f.length; v++)
                  h = f[v] * 2, a = v * 2, c[a] = l[h], c[a + 1] = l[h + 1];
                return c.toString("ucs2");
              }, i.prototype.end = function() {
              };
            }
          ),
          /***/
          34732: (
            /***/
            function(u) {
              u.exports = {
                437: "cp437",
                737: "cp737",
                775: "cp775",
                850: "cp850",
                852: "cp852",
                855: "cp855",
                856: "cp856",
                857: "cp857",
                858: "cp858",
                860: "cp860",
                861: "cp861",
                862: "cp862",
                863: "cp863",
                864: "cp864",
                865: "cp865",
                866: "cp866",
                869: "cp869",
                874: "windows874",
                922: "cp922",
                1046: "cp1046",
                1124: "cp1124",
                1125: "cp1125",
                1129: "cp1129",
                1133: "cp1133",
                1161: "cp1161",
                1162: "cp1162",
                1163: "cp1163",
                1250: "windows1250",
                1251: "windows1251",
                1252: "windows1252",
                1253: "windows1253",
                1254: "windows1254",
                1255: "windows1255",
                1256: "windows1256",
                1257: "windows1257",
                1258: "windows1258",
                28591: "iso88591",
                28592: "iso88592",
                28593: "iso88593",
                28594: "iso88594",
                28595: "iso88595",
                28596: "iso88596",
                28597: "iso88597",
                28598: "iso88598",
                28599: "iso88599",
                28600: "iso885910",
                28601: "iso885911",
                28603: "iso885913",
                28604: "iso885914",
                28605: "iso885915",
                28606: "iso885916",
                windows874: {
                  type: "_sbcs",
                  chars: "â¬ï¿½ï¿½ï¿½ï¿½â¦ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                win874: "windows874",
                cp874: "windows874",
                windows1250: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âï¿½ââ¦â â¡ï¿½â°Å â¹ÅÅ¤Å½Å¹ï¿½âââââ¢ââï¿½â¢Å¡âºÅÅ¥Å¾ÅºÂ ËËÅÂ¤ÄÂ¦Â§Â¨Â©ÅÂ«Â¬Â­Â®Å»Â°Â±ËÅÂ´ÂµÂ¶Â·Â¸ÄÅÂ»Ä½ËÄ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"
                },
                win1250: "windows1250",
                cp1250: "windows1250",
                windows1251: {
                  type: "_sbcs",
                  chars: "ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÐÐÐÑâââââ¢ââï¿½â¢ÑâºÑÑÑÑÂ ÐÑÐÂ¤ÒÂ¦Â§ÐÂ©ÐÂ«Â¬Â­Â®ÐÂ°Â±ÐÑÒÂµÂ¶Â·ÑâÑÂ»ÑÐÑÑÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                win1251: "windows1251",
                cp1251: "windows1251",
                windows1252: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½Å½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½Å¾Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                win1252: "windows1252",
                cp1252: "windows1252",
                windows1253: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡ï¿½â°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â ÎÎÂ£Â¤Â¥Â¦Â§Â¨Â©ï¿½Â«Â¬Â­Â®âÂ°Â±Â²Â³ÎÂµÂ¶Â·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"
                },
                win1253: "windows1253",
                cp1253: "windows1253",
                windows1254: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"
                },
                win1254: "windows1254",
                cp1254: "windows1254",
                windows1255: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â Â¡Â¢Â£âªÂ¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾Â¿Ö°Ö±Ö²Ö³Ö´ÖµÖ¶Ö·Ö¸Ö¹ÖºÖ»Ö¼Ö½Ö¾Ö¿×××××°×±×²×³×´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"
                },
                win1255: "windows1255",
                cp1255: "windows1255",
                windows1256: {
                  type: "_sbcs",
                  chars: "â¬Ù¾âÆââ¦â â¡Ëâ°Ù¹â¹ÅÚÚÚÚ¯âââââ¢ââÚ©â¢ÚâºÅââÚºÂ ØÂ¢Â£Â¤Â¥Â¦Â§Â¨Â©Ú¾Â«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ØÂ»Â¼Â½Â¾ØÛØ¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶ÃØ·Ø¸Ø¹ØºÙÙÙÙÃ ÙÃ¢ÙÙÙÙÃ§Ã¨Ã©ÃªÃ«ÙÙÃ®Ã¯ÙÙÙÙÃ´ÙÙÃ·ÙÃ¹ÙÃ»Ã¼ââÛ"
                },
                win1256: "windows1256",
                cp1256: "windows1256",
                windows1257: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âï¿½ââ¦â â¡ï¿½â°ï¿½â¹ï¿½Â¨ËÂ¸ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½Â¯Ëï¿½Â ï¿½Â¢Â£Â¤ï¿½Â¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³Â´ÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾Ë"
                },
                win1257: "windows1257",
                cp1257: "windows1257",
                windows1258: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                win1258: "windows1258",
                cp1258: "windows1258",
                iso88591: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                cp28591: "iso88591",
                iso88592: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄËÅÂ¤Ä½ÅÂ§Â¨Å ÅÅ¤Å¹Â­Å½Å»Â°ÄËÅÂ´Ä¾ÅËÂ¸Å¡ÅÅ¥ÅºËÅ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"
                },
                cp28592: "iso88592",
                iso88593: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Ä¦ËÂ£Â¤ï¿½Ä¤Â§Â¨Ä°ÅÄÄ´Â­ï¿½Å»Â°Ä§Â²Â³Â´ÂµÄ¥Â·Â¸Ä±ÅÄÄµÂ½ï¿½Å¼ÃÃÃï¿½ÃÄÄÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ ÃÃÄÃÃÃÃÅ¬ÅÃÃ Ã¡Ã¢ï¿½Ã¤ÄÄÃ§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ï¿½Ã±Ã²Ã³Ã´Ä¡Ã¶Ã·ÄÃ¹ÃºÃ»Ã¼Å­ÅË"
                },
                cp28593: "iso88593",
                iso88594: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄ¸ÅÂ¤Ä¨Ä»Â§Â¨Å ÄÄ¢Å¦Â­Å½Â¯Â°ÄËÅÂ´Ä©Ä¼ËÂ¸Å¡ÄÄ£Å§ÅÅ¾ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÄªÄÅÅÄ¶ÃÃÃÃÃÅ²ÃÃÃÅ¨ÅªÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ä«ÄÅÅÄ·Ã´ÃµÃ¶Ã·Ã¸Å³ÃºÃ»Ã¼Å©Å«Ë"
                },
                cp28594: "iso88594",
                iso88595: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÐÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÂ§ÑÑ"
                },
                cp28595: "iso88595",
                iso88596: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ï¿½ï¿½Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ØÂ­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Øï¿½ï¿½ï¿½Øï¿½Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·Ø¸Ø¹Øºï¿½ï¿½ï¿½ï¿½ï¿½ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"
                },
                cp28596: "iso88596",
                iso88597: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ââÂ£â¬â¯Â¦Â§Â¨Â©ÍºÂ«Â¬Â­ï¿½âÂ°Â±Â²Â³ÎÎÎÂ·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"
                },
                cp28597: "iso88597",
                iso88598: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½â××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"
                },
                cp28598: "iso88598",
                iso88599: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"
                },
                cp28599: "iso88599",
                iso885910: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÄ¢ÄªÄ¨Ä¶Â§Ä»ÄÅ Å¦Å½Â­ÅªÅÂ°ÄÄÄ£Ä«Ä©Ä·Â·Ä¼ÄÅ¡Å§Å¾âÅ«ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÃÃÅÅÃÃÃÃÅ¨ÃÅ²ÃÃÃÃÃÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ã¯Ã°ÅÅÃ³Ã´ÃµÃ¶Å©Ã¸Å³ÃºÃ»Ã¼Ã½Ã¾Ä¸"
                },
                cp28600: "iso885910",
                iso885911: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                cp28601: "iso885911",
                iso885913: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ âÂ¢Â£Â¤âÂ¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³âÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾â"
                },
                cp28603: "iso885913",
                iso885914: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ á¸á¸Â£ÄÄá¸Â§áºÂ©áºá¸á»²Â­Â®Å¸á¸á¸Ä Ä¡á¹á¹Â¶á¹áºá¹áºá¹ á»³áºáºá¹¡ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ´ÃÃÃÃÃÃá¹ªÃÃÃÃÃÃÅ¶ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÅµÃ±Ã²Ã³Ã´ÃµÃ¶á¹«Ã¸Ã¹ÃºÃ»Ã¼Ã½Å·Ã¿"
                },
                cp28604: "iso885914",
                iso885915: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Å Â§Å¡Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å½ÂµÂ¶Â·Å¾Â¹ÂºÂ»ÅÅÅ¸Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                cp28605: "iso885915",
                iso885916: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÅâ¬âÅ Â§Å¡Â©ÈÂ«Å¹Â­ÅºÅ»Â°Â±ÄÅÅ½âÂ¶Â·Å¾ÄÈÂ»ÅÅÅ¸Å¼ÃÃÃÄÃÄÃÃÃÃÃÃÃÃÃÃÄÅÃÃÃÅÃÅÅ°ÃÃÃÃÄÈÃÃ Ã¡Ã¢ÄÃ¤ÄÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÅÃ²Ã³Ã´ÅÃ¶ÅÅ±Ã¹ÃºÃ»Ã¼ÄÈÃ¿"
                },
                cp28606: "iso885916",
                cp437: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm437: "cp437",
                csibm437: "cp437",
                cp737: {
                  type: "_sbcs",
                  chars: "ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏâââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÏÎ¬Î­Î®ÏÎ¯ÏÏÏÏÎÎÎÎÎÎÎÂ±â¥â¤ÎªÎ«Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm737: "cp737",
                csibm737: "cp737",
                cp775: {
                  type: "_sbcs",
                  chars: "ÄÃ¼Ã©ÄÃ¤Ä£Ã¥ÄÅÄÅÅÄ«Å¹ÃÃÃÃ¦ÃÅÃ¶Ä¢Â¢ÅÅÃÃÃ¸Â£ÃÃÂ¤ÄÄªÃ³Å»Å¼ÅºâÂ¦Â©Â®Â¬Â½Â¼ÅÂ«Â»âââââ¤ÄÄÄÄâ£âââÄ®Å âââ´â¬âââ¼Å²Åªâââ©â¦â ââ¬Å½ÄÄÄÄÄ¯Å¡Å³Å«Å¾âââââââÃÃÅÅÃµÃÂµÅÄ¶Ä·Ä»Ä¼ÅÄÅâÂ­Â±âÂ¾Â¶Â§Ã·âÂ°âÂ·Â¹Â³Â²â Â "
                },
                ibm775: "cp775",
                csibm775: "cp775",
                cp850: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃÄ±ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm850: "cp850",
                csibm850: "cp850",
                cp852: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Å¯ÄÃ§ÅÃ«ÅÅÃ®Å¹ÃÄÃÄ¹ÄºÃ´Ã¶Ä½Ä¾ÅÅÃÃÅ¤Å¥ÅÃÄÃ¡Ã­Ã³ÃºÄÄÅ½Å¾ÄÄÂ¬ÅºÄÅÂ«Â»âââââ¤ÃÃÄÅâ£âââÅ»Å¼âââ´â¬âââ¼ÄÄâââ©â¦â ââ¬Â¤ÄÄÄÃÄÅÃÃÄââââÅ¢Å®âÃÃÃÅÅÅÅ Å¡ÅÃÅÅ°Ã½ÃÅ£Â´Â­ËËËËÂ§Ã·Â¸Â°Â¨ËÅ±ÅÅâ Â "
                },
                ibm852: "cp852",
                csibm852: "cp852",
                cp855: {
                  type: "_sbcs",
                  chars: "ÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐ®ÑÐªÐ°ÐÐ±ÐÑÐ¦Ð´ÐÐµÐÑÐ¤Ð³ÐÂ«Â»âââââ¤ÑÐ¥Ð¸Ðâ£âââÐ¹Ðâââ´â¬âââ¼ÐºÐâââ©â¦â ââ¬Â¤Ð»ÐÐ¼ÐÐ½ÐÐ¾ÐÐ¿ââââÐÑâÐ¯ÑÐ ÑÐ¡ÑÐ¢ÑÐ£Ð¶ÐÐ²ÐÑÐ¬âÂ­ÑÐ«Ð·ÐÑÐ¨ÑÐ­ÑÐ©ÑÐ§Â§â Â "
                },
                ibm855: "cp855",
                csibm855: "cp855",
                cp856: {
                  type: "_sbcs",
                  chars: "××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½Â£ï¿½Ãï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â®Â¬Â½Â¼ï¿½Â«Â»âââââ¤ï¿½ï¿½ï¿½Â©â£âââÂ¢Â¥âââ´â¬âââ¼ï¿½ï¿½âââ©â¦â ââ¬Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ââââÂ¦ï¿½âï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm856: "cp856",
                csibm856: "cp856",
                cp857: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ä±ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ä°ÃÃÃ¸Â£ÃÅÅÃ¡Ã­Ã³ÃºÃ±ÃÄÄÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤ÂºÂªÃÃÃï¿½ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµï¿½ÃÃÃÃÃ¬Ã¿Â¯Â´Â­Â±ï¿½Â¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm857: "cp857",
                csibm857: "cp857",
                cp858: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃâ¬ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm858: "cp858",
                csibm858: "cp858",
                cp860: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã£Ã ÃÃ§ÃªÃÃ¨ÃÃÃ¬ÃÃÃÃÃÃ´ÃµÃ²ÃÃ¹ÃÃÃÂ¢Â£Ãâ§ÃÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿ÃÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm860: "cp860",
                csibm860: "cp860",
                cp861: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨ÃÃ°ÃÃÃÃÃ¦ÃÃ´Ã¶Ã¾Ã»ÃÃ½ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃÃÃÃÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm861: "cp861",
                csibm861: "cp861",
                cp862: {
                  type: "_sbcs",
                  chars: "××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm862: "cp862",
                csibm862: "cp862",
                cp863: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢ÃÃ Â¶Ã§ÃªÃ«Ã¨Ã¯Ã®âÃÂ§ÃÃÃÃ´ÃÃÃ»Ã¹Â¤ÃÃÂ¢Â£ÃÃÆÂ¦Â´Ã³ÃºÂ¨Â¸Â³Â¯ÃâÂ¬Â½Â¼Â¾Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm863: "cp863",
                csibm863: "cp863",
                cp864: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#$Ùª&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~Â°Â·ââââââ¼â¤â¬ââ´ââââÎ²âÏÂ±Â½Â¼âÂ«Â»ï»·ï»¸ï¿½ï¿½ï»»ï»¼ï¿½Â Â­ïºÂ£Â¤ïºï¿½ï¿½ïºïºïºïºØïºïº¡ïº¥Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ï»Øïº±ïºµïº¹ØÂ¢ïºïºïºïºï»ïºïºïºïºïºïºïºïº£ïº§ïº©ïº«ïº­ïº¯ïº³ïº·ïº»ïº¿ï»ï»ï»ï»Â¦Â¬Ã·Ãï»Ùï»ï»ï»ï»ï»£ï»§ï»«ï»­ï»¯ï»³ïº½ï»ï»ï»ï»¡ï¹½Ùï»¥ï»©ï»¬ï»°ï»²ï»ï»ï»µï»¶ï»ï»ï»±â ï¿½`
                },
                ibm864: "cp864",
                csibm864: "cp864",
                cp865: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â¤âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm865: "cp865",
                csibm865: "cp865",
                cp866: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·ââÂ¤â Â "
                },
                ibm866: "cp866",
                csibm866: "cp866",
                cp869: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îï¿½Â·Â¬Â¦ââÎâÎÎÎªÎï¿½ï¿½ÎÎ«Â©ÎÂ²Â³Î¬Â£Î­Î®Î¯ÏÎÏÏÎÎÎÎÎÎÎÂ½ÎÎÂ«Â»âââââ¤ÎÎÎÎâ£âââÎÎâââ´â¬âââ¼Î Î¡âââ©â¦â ââ¬Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³ââââÎ´ÎµâÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÎÂ­Â±ÏÏÏÂ§ÏÎÂ°Â¨ÏÏÎ°Ïâ Â "
                },
                ibm869: "cp869",
                csibm869: "cp869",
                cp922: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®â¾Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ ÃÃÃÃÃÃÃÃÃÃÃÃÃÅ½ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Å¡Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Å¾Ã¿"
                },
                ibm922: "cp922",
                csibm922: "cp922",
                cp1046: {
                  type: "_sbcs",
                  chars: "ïºÃÃ·ï£¶ï£µï£´ï£·ï¹±Ââ ââââââï¹¹ï¹»ï¹½ï¹¿ï¹·ïºï»°ï»³ï»²ï»ï»ï»ï»¶ï»¸ï»ºï»¼Â ï£ºï£¹ï£¸Â¤ï£»ïºïºïºïºïºïº£ØÂ­ïº§ïº³Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ïº·Øïº»ïº¿ï»Øï»Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·ï»Ø¹Øºï»ïºïºïºï»ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï»ï»ï»ï£¼ï»µï»·ï»¹ï»»ï»£ï»§ï»¬ï»©ï¿½"
                },
                ibm1046: "cp1046",
                csibm1046: "cp1046",
                cp1124: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÒÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÒÑÑÑÑÑÑÑÑÑÂ§ÑÑ"
                },
                ibm1124: "cp1124",
                csibm1124: "cp1124",
                cp1125: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÒÒÐÑÐÑÐÑÂ·ââÂ¤â Â "
                },
                ibm1125: "cp1125",
                csibm1125: "cp1125",
                cp1129: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                ibm1129: "cp1129",
                csibm1129: "cp1129",
                cp1133: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ àºàºàºàºàºàºªàºàºàºàºàºàºàºàºàºàºàºàºàºàº¡àº¢àº£àº¥àº§àº«àº­àº®ï¿½ï¿½ï¿½àº¯àº°àº²àº³àº´àºµàº¶àº·àº¸àº¹àº¼àº±àº»àº½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»à»à»ï¿½à»à»â­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»ï¿½ï¿½Â¢Â¬Â¦ï¿½"
                },
                ibm1133: "cp1133",
                csibm1133: "cp1133",
                cp1161: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¹à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºà¹à¹à¹â¬à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â¢Â¬Â¦Â "
                },
                ibm1161: "cp1161",
                csibm1161: "cp1161",
                cp1162: {
                  type: "_sbcs",
                  chars: "â¬ÂÂÂÂâ¦ÂÂÂÂÂÂÂÂÂÂÂâââââ¢ââÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                ibm1162: "cp1162",
                csibm1162: "cp1162",
                cp1163: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                ibm1163: "cp1163",
                csibm1163: "cp1163",
                maccroatian: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Å â¢Â´Â¨â Å½ÃâÂ±â¤â¥âÂµâââÅ¡â«ÂªÂºâ¦Å¾Ã¸Â¿Â¡Â¬âÆâÄÂ«Äâ¦Â ÃÃÃÅÅÄâââââÃ·âï¿½Â©âÂ¤â¹âºÃÂ»âÂ·âââ°ÃÄÃÄÃÃÃÃÃÃÃÄÃÃÃÃÄ±ËËÂ¯ÏÃËÂ¸ÃÃ¦Ë"
                },
                maccyrillic: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°Â¢Â£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµâÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"
                },
                macgreek: {
                  type: "_sbcs",
                  chars: "ÃÂ¹Â²ÃÂ³ÃÃÎÃ Ã¢Ã¤ÎÂ¨Ã§Ã©Ã¨ÃªÃ«Â£â¢Ã®Ã¯â¢Â½â°Ã´Ã¶Â¦Â­Ã¹Ã»Ã¼â ÎÎÎÎÎÎ ÃÂ®Â©Î£ÎªÂ§â Â°ÎÎÂ±â¤â¥Â¥ÎÎÎÎÎÎÎÎ¦Î«Î¨Î©Î¬ÎÂ¬ÎÎ¡âÎ¤Â«Â»â¦Â Î¥Î§ÎÎÅââââââÃ·ÎÎÎÎÎ­Î®Î¯ÏÎÏÎ±Î²ÏÎ´ÎµÏÎ³Î·Î¹Î¾ÎºÎ»Î¼Î½Î¿ÏÏÏÏÏÎ¸ÏÏÏÏÎ¶ÏÏÎÎ°ï¿½"
                },
                maciceland: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼ÃÂ°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤ÃÃ°ÃÃ¾Ã½Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macroman: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macromania: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÄÅâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦ÄÅÂ¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºÅ¢Å£â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macthai: {
                  type: "_sbcs",
                  chars: "Â«Â»â¦ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¢ï¿½â¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸º\uFEFFâââà¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹â¢à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â®Â©ï¿½ï¿½ï¿½ï¿½"
                },
                macturkish: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ÄÄÄ°Ä±ÅÅâ¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃï¿½ËËÂ¯ËËËÂ¸ËËË"
                },
                macukraine: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°ÒÂ£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµÒÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"
                },
                koi8r: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑââââââââââââââ â¡Ðâ¢â£â¤â¥â¦â§â¨â©âªâ«â¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8u: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒââââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒâ¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8ru: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒÑâââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒÐÂ©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8t: {
                  type: "_sbcs",
                  chars: "ÒÒâÒââ¦â â¡ï¿½â°Ò³â¹Ò²Ò·Ò¶ï¿½Òâââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½ï¿½Ó¯Ó®ÑÂ¤Ó£Â¦Â§ï¿½ï¿½ï¿½Â«Â¬Â­Â®ï¿½Â°Â±Â²Ðï¿½Ó¢Â¶Â·ï¿½âï¿½Â»ï¿½ï¿½ï¿½Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                armscii8: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ÖÖ)(Â»Â«â.Õ,-Öâ¦ÕÕÕÔ±Õ¡Ô²Õ¢Ô³Õ£Ô´Õ¤ÔµÕ¥Ô¶Õ¦Ô·Õ§Ô¸Õ¨Ô¹Õ©ÔºÕªÔ»Õ«Ô¼Õ¬Ô½Õ­Ô¾Õ®Ô¿Õ¯ÕÕ°ÕÕ±ÕÕ²ÕÕ³ÕÕ´ÕÕµÕÕ¶ÕÕ·ÕÕ¸ÕÕ¹ÕÕºÕÕ»ÕÕ¼ÕÕ½ÕÕ¾ÕÕ¿ÕÖÕÖÕÖÕÖÕÖÕÖÕÖÕï¿½"
                },
                rk1048: {
                  type: "_sbcs",
                  chars: "ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÒÒºÐÑâââââ¢ââï¿½â¢ÑâºÑÒÒ»ÑÂ Ò°Ò±ÓÂ¤Ó¨Â¦Â§ÐÂ©ÒÂ«Â¬Â­Â®Ò®Â°Â±ÐÑÓ©ÂµÂ¶Â·ÑâÒÂ»ÓÒ¢Ò£Ò¯ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                tcvn: {
                  type: "_sbcs",
                  chars: `\0Ãá»¤á»ªá»¬á»®\x07\b	
\v\f\rá»¨á»°á»²á»¶á»¸Ãá»´\x1B !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~Ãáº¢ÃÃáº áº¶áº¬Ãáººáº¼Ãáº¸á»Ãá»Ä¨Ãá»Ãá»ÃÃá»á»á»á»á» á»á»¢Ãá»¦Å¨Â ÄÃÃÃÆ Æ¯ÄÄÃ¢ÃªÃ´Æ¡Æ°Äáº°ÌÌÌÌÌ£Ã áº£Ã£Ã¡áº¡áº²áº±áº³áºµáº¯áº´áº®áº¦áº¨áºªáº¤á»áº·áº§áº©áº«áº¥áº­Ã¨á»áº»áº½Ã©áº¹á»á»á»áº¿á»Ã¬á»á»áº¾á»Ä©Ã­á»Ã²á»á»ÃµÃ³á»á»á»á»á»á»á»á»á»¡á»á»£Ã¹á»á»§Å©Ãºá»¥á»«á»­á»¯á»©á»±á»³á»·á»¹Ã½á»µá»`
                },
                georgianacademy: {
                  type: "_sbcs",
                  chars: "ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ááááááááááááááááá á¡á¢á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á¯á°á±á²á³á´áµá¶Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                georgianps: {
                  type: "_sbcs",
                  chars: "ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿áááááááá±ááááááá²áááá á¡á¢á³á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á´á¯á°áµÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                pt154: {
                  type: "_sbcs",
                  chars: "ÒÒÓ®Òââ¦Ò¶Ò®Ò²Ò¯Ò Ó¢Ò¢ÒÒºÒ¸Òâââââ¢ââÒ³Ò·Ò¡Ó£Ò£ÒÒ»Ò¹Â ÐÑÐÓ¨ÒÒ°Â§ÐÂ©ÓÂ«Â¬Ó¯Â®ÒÂ°Ò±ÐÑÒÓ©Â¶Â·ÑâÓÂ»ÑÒªÒ«ÒÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                viscii: {
                  type: "_sbcs",
                  chars: `\0áº²áº´áºª\x07\b	
\v\f\rá»¶á»¸\x1Bá»´ !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~áº áº®áº°áº¶áº¤áº¦áº¨áº¬áº¼áº¸áº¾á»á»á»á»á»á»á»á»á»á»¢á»á»á»á»á»á»á»á»¦Å¨á»¤á»²Ãáº¯áº±áº·áº¥áº§áº©áº­áº½áº¹áº¿á»á»á»á»á»á»á»á»á» Æ á»á»á»á»á»°á»¨á»ªá»¬Æ¡á»Æ¯ÃÃÃÃáº¢Äáº³áºµÃÃÃáººÃÃÄ¨á»³Äá»©ÃÃÃáº¡á»·á»«á»­ÃÃá»¹á»µÃá»¡Æ°Ã Ã¡Ã¢Ã£áº£Äá»¯áº«Ã¨Ã©Ãªáº»Ã¬Ã­Ä©á»Äá»±Ã²Ã³Ã´Ãµá»á»á»¥Ã¹ÃºÅ©á»§Ã½á»£á»®`
                },
                iso646cn: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#Â¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½`
                },
                iso646jp: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[Â¥]^_\`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½`
                },
                hproman8: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÃÃÃÃÃÃÃÂ´ËËÂ¨ËÃÃâ¤Â¯ÃÃ½Â°ÃÃ§ÃÃ±Â¡Â¿Â¤Â£Â¥Â§ÆÂ¢Ã¢ÃªÃ´Ã»Ã¡Ã©Ã³ÃºÃ Ã¨Ã²Ã¹Ã¤Ã«Ã¶Ã¼ÃÃ®ÃÃÃ¥Ã­Ã¸Ã¦ÃÃ¬ÃÃÃÃ¯ÃÃÃÃÃ£ÃÃ°ÃÃÃÃÃÃµÅ Å¡ÃÅ¸Ã¿ÃÃ¾Â·ÂµÂ¶Â¾âÂ¼Â½ÂªÂºÂ«â Â»Â±ï¿½"
                },
                macintosh: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                ascii: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"
                },
                tis620: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                }
              };
            }
          ),
          /***/
          26518: (
            /***/
            function(u) {
              u.exports = {
                // Not supported by iconv, not sure why.
                10029: "maccenteuro",
                maccenteuro: {
                  type: "_sbcs",
                  chars: "ÃÄÄÃÄÃÃÃ¡ÄÄÃ¤ÄÄÄÃ©Å¹ÅºÄÃ­ÄÄÄÄÃ³ÄÃ´Ã¶ÃµÃºÄÄÃ¼â Â°ÄÂ£Â§â¢Â¶ÃÂ®Â©â¢ÄÂ¨â Ä£Ä®Ä¯Äªâ¤â¥Ä«Ä¶ââÅÄ»Ä¼Ä½Ä¾Ä¹ÄºÅÅÅÂ¬âÅÅâÂ«Â»â¦Â ÅÅÃÅÅââââââÃ·âÅÅÅÅâ¹âºÅÅÅÅ ââÅ¡ÅÅÃÅ¤Å¥ÃÅ½Å¾ÅªÃÃÅ«Å®ÃÅ¯Å°Å±Å²Å³ÃÃ½Ä·Å»ÅÅ¼Ä¢Ë"
                },
                808: "cp808",
                ibm808: "cp808",
                cp808: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·âââ¬â Â "
                },
                mik: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑââ´â¬âââ¼â£ââââ©â¦â ââ¬ââââââ¤âÂ§âââââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                cp720: {
                  type: "_sbcs",
                  chars: "ÂÂÃ©Ã¢ÂÃ ÂÃ§ÃªÃ«Ã¨Ã¯Ã®ÂÂÂÂÙÙÃ´Â¤ÙÃ»Ã¹Ø¡Ø¢Ø£Ø¤Â£Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµÂ«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââØ¶Ø·Ø¸Ø¹ØºÙÂµÙÙÙÙÙÙÙÙÙâ¡ÙÙÙÙÙÙâÂ°âÂ·ââ¿Â²â Â "
                },
                // Aliases of generated encodings.
                ascii8bit: "ascii",
                usascii: "ascii",
                ansix34: "ascii",
                ansix341968: "ascii",
                ansix341986: "ascii",
                csascii: "ascii",
                cp367: "ascii",
                ibm367: "ascii",
                isoir6: "ascii",
                iso646us: "ascii",
                iso646irv: "ascii",
                us: "ascii",
                latin1: "iso88591",
                latin2: "iso88592",
                latin3: "iso88593",
                latin4: "iso88594",
                latin5: "iso88599",
                latin6: "iso885910",
                latin7: "iso885913",
                latin8: "iso885914",
                latin9: "iso885915",
                latin10: "iso885916",
                csisolatin1: "iso88591",
                csisolatin2: "iso88592",
                csisolatin3: "iso88593",
                csisolatin4: "iso88594",
                csisolatincyrillic: "iso88595",
                csisolatinarabic: "iso88596",
                csisolatingreek: "iso88597",
                csisolatinhebrew: "iso88598",
                csisolatin5: "iso88599",
                csisolatin6: "iso885910",
                l1: "iso88591",
                l2: "iso88592",
                l3: "iso88593",
                l4: "iso88594",
                l5: "iso88599",
                l6: "iso885910",
                l7: "iso885913",
                l8: "iso885914",
                l9: "iso885915",
                l10: "iso885916",
                isoir14: "iso646jp",
                isoir57: "iso646cn",
                isoir100: "iso88591",
                isoir101: "iso88592",
                isoir109: "iso88593",
                isoir110: "iso88594",
                isoir144: "iso88595",
                isoir127: "iso88596",
                isoir126: "iso88597",
                isoir138: "iso88598",
                isoir148: "iso88599",
                isoir157: "iso885910",
                isoir166: "tis620",
                isoir179: "iso885913",
                isoir199: "iso885914",
                isoir203: "iso885915",
                isoir226: "iso885916",
                cp819: "iso88591",
                ibm819: "iso88591",
                cyrillic: "iso88595",
                arabic: "iso88596",
                arabic8: "iso88596",
                ecma114: "iso88596",
                asmo708: "iso88596",
                greek: "iso88597",
                greek8: "iso88597",
                ecma118: "iso88597",
                elot928: "iso88597",
                hebrew: "iso88598",
                hebrew8: "iso88598",
                turkish: "iso88599",
                turkish8: "iso88599",
                thai: "iso885911",
                thai8: "iso885911",
                celtic: "iso885914",
                celtic8: "iso885914",
                isoceltic: "iso885914",
                tis6200: "tis620",
                tis62025291: "tis620",
                tis62025330: "tis620",
                1e4: "macroman",
                10006: "macgreek",
                10007: "maccyrillic",
                10079: "maciceland",
                10081: "macturkish",
                cspc8codepage437: "cp437",
                cspc775baltic: "cp775",
                cspc850multilingual: "cp850",
                cspcp852: "cp852",
                cspc862latinhebrew: "cp862",
                cpgr: "cp869",
                msee: "cp1250",
                mscyrl: "cp1251",
                msansi: "cp1252",
                msgreek: "cp1253",
                msturk: "cp1254",
                mshebr: "cp1255",
                msarab: "cp1256",
                winbaltrim: "cp1257",
                cp20866: "koi8r",
                20866: "koi8r",
                ibm878: "koi8r",
                cskoi8r: "koi8r",
                cp21866: "koi8u",
                21866: "koi8u",
                ibm1168: "koi8u",
                strk10482002: "rk1048",
                tcvn5712: "tcvn",
                tcvn57121: "tcvn",
                gb198880: "iso646cn",
                cn: "iso646cn",
                csiso14jisc6220ro: "iso646jp",
                jisc62201969ro: "iso646jp",
                jp: "iso646jp",
                cshproman8: "hproman8",
                r8: "hproman8",
                roman8: "hproman8",
                xroman8: "hproman8",
                ibm1051: "hproman8",
                mac: "macintosh",
                csmacintosh: "macintosh"
              };
            }
          ),
          /***/
          1710: (
            /***/
            function(u, d, t) {
              var o = t(85543).Buffer;
              d.utf16be = r;
              function r() {
              }
              r.prototype.encoder = n, r.prototype.decoder = i, r.prototype.bomAware = !0;
              function n() {
              }
              n.prototype.write = function(a) {
                for (var v = o.from(a, "ucs2"), y = 0; y < v.length; y += 2) {
                  var g = v[y];
                  v[y] = v[y + 1], v[y + 1] = g;
                }
                return v;
              }, n.prototype.end = function() {
              };
              function i() {
                this.overflowByte = -1;
              }
              i.prototype.write = function(a) {
                if (a.length == 0)
                  return "";
                var v = o.alloc(a.length + 1), y = 0, g = 0;
                for (this.overflowByte !== -1 && (v[0] = a[0], v[1] = this.overflowByte, y = 1, g = 2); y < a.length - 1; y += 2, g += 2)
                  v[g] = a[y + 1], v[g + 1] = a[y];
                return this.overflowByte = y == a.length - 1 ? a[a.length - 1] : -1, v.slice(0, g).toString("ucs2");
              }, i.prototype.end = function() {
                this.overflowByte = -1;
              }, d.utf16 = f;
              function f(a, v) {
                this.iconv = v;
              }
              f.prototype.encoder = l, f.prototype.decoder = c;
              function l(a, v) {
                a = a || {}, a.addBOM === void 0 && (a.addBOM = !0), this.encoder = v.iconv.getEncoder("utf-16le", a);
              }
              l.prototype.write = function(a) {
                return this.encoder.write(a);
              }, l.prototype.end = function() {
                return this.encoder.end();
              };
              function c(a, v) {
                this.decoder = null, this.initialBufs = [], this.initialBufsLen = 0, this.options = a || {}, this.iconv = v.iconv;
              }
              c.prototype.write = function(a) {
                if (!this.decoder) {
                  if (this.initialBufs.push(a), this.initialBufsLen += a.length, this.initialBufsLen < 16)
                    return "";
                  var v = h(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(v, this.options);
                  for (var y = "", g = 0; g < this.initialBufs.length; g++)
                    y += this.decoder.write(this.initialBufs[g]);
                  return this.initialBufs.length = this.initialBufsLen = 0, y;
                }
                return this.decoder.write(a);
              }, c.prototype.end = function() {
                if (!this.decoder) {
                  var a = h(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(a, this.options);
                  for (var v = "", y = 0; y < this.initialBufs.length; y++)
                    v += this.decoder.write(this.initialBufs[y]);
                  var g = this.decoder.end();
                  return g && (v += g), this.initialBufs.length = this.initialBufsLen = 0, v;
                }
                return this.decoder.end();
              };
              function h(a, v) {
                var y = [], g = 0, e = 0, m = 0;
                t:
                  for (var w = 0; w < a.length; w++)
                    for (var D = a[w], I = 0; I < D.length; I++)
                      if (y.push(D[I]), y.length === 2) {
                        if (g === 0) {
                          if (y[0] === 255 && y[1] === 254)
                            return "utf-16le";
                          if (y[0] === 254 && y[1] === 255)
                            return "utf-16be";
                        }
                        if (y[0] === 0 && y[1] !== 0 && m++, y[0] !== 0 && y[1] === 0 && e++, y.length = 0, g++, g >= 100)
                          break t;
                      }
                return m > e ? "utf-16be" : m < e ? "utf-16le" : v || "utf-16le";
              }
            }
          ),
          /***/
          89252: (
            /***/
            function(u, d, t) {
              var o = t(85543).Buffer;
              d._utf32 = r;
              function r(v, y) {
                this.iconv = y, this.bomAware = !0, this.isLE = v.isLE;
              }
              d.utf32le = { type: "_utf32", isLE: !0 }, d.utf32be = { type: "_utf32", isLE: !1 }, d.ucs4le = "utf32le", d.ucs4be = "utf32be", r.prototype.encoder = n, r.prototype.decoder = i;
              function n(v, y) {
                this.isLE = y.isLE, this.highSurrogate = 0;
              }
              n.prototype.write = function(v) {
                for (var y = o.from(v, "ucs2"), g = o.alloc(y.length * 2), e = this.isLE ? g.writeUInt32LE : g.writeUInt32BE, m = 0, w = 0; w < y.length; w += 2) {
                  var D = y.readUInt16LE(w), I = 55296 <= D && D < 56320, T = 56320 <= D && D < 57344;
                  if (this.highSurrogate)
                    if (I || !T)
                      e.call(g, this.highSurrogate, m), m += 4;
                    else {
                      var C = (this.highSurrogate - 55296 << 10 | D - 56320) + 65536;
                      e.call(g, C, m), m += 4, this.highSurrogate = 0;
                      continue;
                    }
                  I ? this.highSurrogate = D : (e.call(g, D, m), m += 4, this.highSurrogate = 0);
                }
                return m < g.length && (g = g.slice(0, m)), g;
              }, n.prototype.end = function() {
                if (this.highSurrogate) {
                  var v = o.alloc(4);
                  return this.isLE ? v.writeUInt32LE(this.highSurrogate, 0) : v.writeUInt32BE(this.highSurrogate, 0), this.highSurrogate = 0, v;
                }
              };
              function i(v, y) {
                this.isLE = y.isLE, this.badChar = y.iconv.defaultCharUnicode.charCodeAt(0), this.overflow = [];
              }
              i.prototype.write = function(v) {
                if (v.length === 0)
                  return "";
                var y = 0, g = 0, e = o.alloc(v.length + 4), m = 0, w = this.isLE, D = this.overflow, I = this.badChar;
                if (D.length > 0) {
                  for (; y < v.length && D.length < 4; y++)
                    D.push(v[y]);
                  D.length === 4 && (w ? g = D[y] | D[y + 1] << 8 | D[y + 2] << 16 | D[y + 3] << 24 : g = D[y + 3] | D[y + 2] << 8 | D[y + 1] << 16 | D[y] << 24, D.length = 0, m = f(e, m, g, I));
                }
                for (; y < v.length - 3; y += 4)
                  w ? g = v[y] | v[y + 1] << 8 | v[y + 2] << 16 | v[y + 3] << 24 : g = v[y + 3] | v[y + 2] << 8 | v[y + 1] << 16 | v[y] << 24, m = f(e, m, g, I);
                for (; y < v.length; y++)
                  D.push(v[y]);
                return e.slice(0, m).toString("ucs2");
              };
              function f(v, y, g, e) {
                if ((g < 0 || g > 1114111) && (g = e), g >= 65536) {
                  g -= 65536;
                  var m = 55296 | g >> 10;
                  v[y++] = m & 255, v[y++] = m >> 8;
                  var g = 56320 | g & 1023;
                }
                return v[y++] = g & 255, v[y++] = g >> 8, y;
              }
              i.prototype.end = function() {
                this.overflow.length = 0;
              }, d.utf32 = l, d.ucs4 = "utf32";
              function l(v, y) {
                this.iconv = y;
              }
              l.prototype.encoder = c, l.prototype.decoder = h;
              function c(v, y) {
                v = v || {}, v.addBOM === void 0 && (v.addBOM = !0), this.encoder = y.iconv.getEncoder(v.defaultEncoding || "utf-32le", v);
              }
              c.prototype.write = function(v) {
                return this.encoder.write(v);
              }, c.prototype.end = function() {
                return this.encoder.end();
              };
              function h(v, y) {
                this.decoder = null, this.initialBufs = [], this.initialBufsLen = 0, this.options = v || {}, this.iconv = y.iconv;
              }
              h.prototype.write = function(v) {
                if (!this.decoder) {
                  if (this.initialBufs.push(v), this.initialBufsLen += v.length, this.initialBufsLen < 32)
                    return "";
                  var y = a(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(y, this.options);
                  for (var g = "", e = 0; e < this.initialBufs.length; e++)
                    g += this.decoder.write(this.initialBufs[e]);
                  return this.initialBufs.length = this.initialBufsLen = 0, g;
                }
                return this.decoder.write(v);
              }, h.prototype.end = function() {
                if (!this.decoder) {
                  var v = a(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(v, this.options);
                  for (var y = "", g = 0; g < this.initialBufs.length; g++)
                    y += this.decoder.write(this.initialBufs[g]);
                  var e = this.decoder.end();
                  return e && (y += e), this.initialBufs.length = this.initialBufsLen = 0, y;
                }
                return this.decoder.end();
              };
              function a(v, y) {
                var g = [], e = 0, m = 0, w = 0, D = 0, I = 0;
                t:
                  for (var T = 0; T < v.length; T++)
                    for (var C = v[T], E = 0; E < C.length; E++)
                      if (g.push(C[E]), g.length === 4) {
                        if (e === 0) {
                          if (g[0] === 255 && g[1] === 254 && g[2] === 0 && g[3] === 0)
                            return "utf-32le";
                          if (g[0] === 0 && g[1] === 0 && g[2] === 254 && g[3] === 255)
                            return "utf-32be";
                        }
                        if ((g[0] !== 0 || g[1] > 16) && w++, (g[3] !== 0 || g[2] > 16) && m++, g[0] === 0 && g[1] === 0 && (g[2] !== 0 || g[3] !== 0) && I++, (g[0] !== 0 || g[1] !== 0) && g[2] === 0 && g[3] === 0 && D++, g.length = 0, e++, e >= 100)
                          break t;
                      }
                return I - w > D - m ? "utf-32be" : I - w < D - m ? "utf-32le" : y || "utf-32le";
              }
            }
          ),
          /***/
          92307: (
            /***/
            function(u, d, t) {
              var o = t(85543).Buffer;
              d.utf7 = r, d.unicode11utf7 = "utf7";
              function r(D, I) {
                this.iconv = I;
              }
              r.prototype.encoder = i, r.prototype.decoder = f, r.prototype.bomAware = !0;
              var n = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;
              function i(D, I) {
                this.iconv = I.iconv;
              }
              i.prototype.write = function(D) {
                return o.from(D.replace(n, function(I) {
                  return "+" + (I === "+" ? "" : this.iconv.encode(I, "utf16-be").toString("base64").replace(/=+$/, "")) + "-";
                }.bind(this)));
              }, i.prototype.end = function() {
              };
              function f(D, I) {
                this.iconv = I.iconv, this.inBase64 = !1, this.base64Accum = "";
              }
              for (var l = /[A-Za-z0-9\/+]/, c = [], h = 0; h < 256; h++)
                c[h] = l.test(String.fromCharCode(h));
              var a = "+".charCodeAt(0), v = "-".charCodeAt(0), y = "&".charCodeAt(0);
              f.prototype.write = function(D) {
                for (var I = "", T = 0, C = this.inBase64, E = this.base64Accum, F = 0; F < D.length; F++)
                  if (!C)
                    D[F] == a && (I += this.iconv.decode(D.slice(T, F), "ascii"), T = F + 1, C = !0);
                  else if (!c[D[F]]) {
                    if (F == T && D[F] == v)
                      I += "+";
                    else {
                      var x = E + this.iconv.decode(D.slice(T, F), "ascii");
                      I += this.iconv.decode(o.from(x, "base64"), "utf16-be");
                    }
                    D[F] != v && F--, T = F + 1, C = !1, E = "";
                  }
                if (!C)
                  I += this.iconv.decode(D.slice(T), "ascii");
                else {
                  var x = E + this.iconv.decode(D.slice(T), "ascii"), P = x.length - x.length % 8;
                  E = x.slice(P), x = x.slice(0, P), I += this.iconv.decode(o.from(x, "base64"), "utf16-be");
                }
                return this.inBase64 = C, this.base64Accum = E, I;
              }, f.prototype.end = function() {
                var D = "";
                return this.inBase64 && this.base64Accum.length > 0 && (D = this.iconv.decode(o.from(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", D;
              }, d.utf7imap = g;
              function g(D, I) {
                this.iconv = I;
              }
              g.prototype.encoder = e, g.prototype.decoder = m, g.prototype.bomAware = !0;
              function e(D, I) {
                this.iconv = I.iconv, this.inBase64 = !1, this.base64Accum = o.alloc(6), this.base64AccumIdx = 0;
              }
              e.prototype.write = function(D) {
                for (var I = this.inBase64, T = this.base64Accum, C = this.base64AccumIdx, E = o.alloc(D.length * 5 + 10), F = 0, x = 0; x < D.length; x++) {
                  var P = D.charCodeAt(x);
                  32 <= P && P <= 126 ? (I && (C > 0 && (F += E.write(T.slice(0, C).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), F), C = 0), E[F++] = v, I = !1), I || (E[F++] = P, P === y && (E[F++] = v))) : (I || (E[F++] = y, I = !0), I && (T[C++] = P >> 8, T[C++] = P & 255, C == T.length && (F += E.write(T.toString("base64").replace(/\//g, ","), F), C = 0)));
                }
                return this.inBase64 = I, this.base64AccumIdx = C, E.slice(0, F);
              }, e.prototype.end = function() {
                var D = o.alloc(10), I = 0;
                return this.inBase64 && (this.base64AccumIdx > 0 && (I += D.write(this.base64Accum.slice(0, this.base64AccumIdx).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), I), this.base64AccumIdx = 0), D[I++] = v, this.inBase64 = !1), D.slice(0, I);
              };
              function m(D, I) {
                this.iconv = I.iconv, this.inBase64 = !1, this.base64Accum = "";
              }
              var w = c.slice();
              w[",".charCodeAt(0)] = !0, m.prototype.write = function(D) {
                for (var I = "", T = 0, C = this.inBase64, E = this.base64Accum, F = 0; F < D.length; F++)
                  if (!C)
                    D[F] == y && (I += this.iconv.decode(D.slice(T, F), "ascii"), T = F + 1, C = !0);
                  else if (!w[D[F]]) {
                    if (F == T && D[F] == v)
                      I += "&";
                    else {
                      var x = E + this.iconv.decode(D.slice(T, F), "ascii").replace(/,/g, "/");
                      I += this.iconv.decode(o.from(x, "base64"), "utf16-be");
                    }
                    D[F] != v && F--, T = F + 1, C = !1, E = "";
                  }
                if (!C)
                  I += this.iconv.decode(D.slice(T), "ascii");
                else {
                  var x = E + this.iconv.decode(D.slice(T), "ascii").replace(/,/g, "/"), P = x.length - x.length % 8;
                  E = x.slice(P), x = x.slice(0, P), I += this.iconv.decode(o.from(x, "base64"), "utf16-be");
                }
                return this.inBase64 = C, this.base64Accum = E, I;
              }, m.prototype.end = function() {
                var D = "";
                return this.inBase64 && this.base64Accum.length > 0 && (D = this.iconv.decode(o.from(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", D;
              };
            }
          ),
          /***/
          59203: (
            /***/
            function(u, d) {
              var t = "\uFEFF";
              d.PrependBOM = o;
              function o(n, i) {
                this.encoder = n, this.addBOM = !0;
              }
              o.prototype.write = function(n) {
                return this.addBOM && (n = t + n, this.addBOM = !1), this.encoder.write(n);
              }, o.prototype.end = function() {
                return this.encoder.end();
              }, d.StripBOM = r;
              function r(n, i) {
                this.decoder = n, this.pass = !1, this.options = i || {};
              }
              r.prototype.write = function(n) {
                var i = this.decoder.write(n);
                return this.pass || !i || (i[0] === t && (i = i.slice(1), typeof this.options.stripBOM == "function" && this.options.stripBOM()), this.pass = !0), i;
              }, r.prototype.end = function() {
                return this.decoder.end();
              };
            }
          ),
          /***/
          32766: (
            /***/
            function(u, d, t) {
              var o = t(85543).Buffer, r = t(59203), n = u.exports;
              n.encodings = null, n.defaultCharUnicode = "ï¿½", n.defaultCharSingleByte = "?", n.encode = function(l, c, h) {
                l = "" + (l || "");
                var a = n.getEncoder(c, h), v = a.write(l), y = a.end();
                return y && y.length > 0 ? o.concat([v, y]) : v;
              }, n.decode = function(l, c, h) {
                typeof l == "string" && (n.skipDecodeWarning || (console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"), n.skipDecodeWarning = !0), l = o.from("" + (l || ""), "binary"));
                var a = n.getDecoder(c, h), v = a.write(l), y = a.end();
                return y ? v + y : v;
              }, n.encodingExists = function(l) {
                try {
                  return n.getCodec(l), !0;
                } catch {
                  return !1;
                }
              }, n.toEncoding = n.encode, n.fromEncoding = n.decode, n._codecDataCache = {}, n.getCodec = function(l) {
                n.encodings || (n.encodings = t(88069));
                for (var c = n._canonicalizeEncoding(l), h = {}; ; ) {
                  var a = n._codecDataCache[c];
                  if (a)
                    return a;
                  var v = n.encodings[c];
                  switch (typeof v) {
                    case "string":
                      c = v;
                      break;
                    case "object":
                      for (var y in v)
                        h[y] = v[y];
                      h.encodingName || (h.encodingName = c), c = v.type;
                      break;
                    case "function":
                      return h.encodingName || (h.encodingName = c), a = new v(h, n), n._codecDataCache[h.encodingName] = a, a;
                    default:
                      throw new Error("Encoding not recognized: '" + l + "' (searched as: '" + c + "')");
                  }
                }
              }, n._canonicalizeEncoding = function(f) {
                return ("" + f).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g, "");
              }, n.getEncoder = function(l, c) {
                var h = n.getCodec(l), a = new h.encoder(c, h);
                return h.bomAware && c && c.addBOM && (a = new r.PrependBOM(a, c)), a;
              }, n.getDecoder = function(l, c) {
                var h = n.getCodec(l), a = new h.decoder(c, h);
                return h.bomAware && !(c && c.stripBOM === !1) && (a = new r.StripBOM(a, c)), a;
              }, n.enableStreamingAPI = function(l) {
                if (!n.supportsStreams) {
                  var c = t(44690)(l);
                  n.IconvLiteEncoderStream = c.IconvLiteEncoderStream, n.IconvLiteDecoderStream = c.IconvLiteDecoderStream, n.encodeStream = function(a, v) {
                    return new n.IconvLiteEncoderStream(n.getEncoder(a, v), v);
                  }, n.decodeStream = function(a, v) {
                    return new n.IconvLiteDecoderStream(n.getDecoder(a, v), v);
                  }, n.supportsStreams = !0;
                }
              };
              var i;
              try {
                i = t(25832);
              } catch {
              }
              i && i.Transform ? n.enableStreamingAPI(i) : n.encodeStream = n.decodeStream = function() {
                throw new Error("iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.");
              };
            }
          ),
          /***/
          44690: (
            /***/
            function(u, d, t) {
              var o = t(85543).Buffer;
              u.exports = function(r) {
                var n = r.Transform;
                function i(l, c) {
                  this.conv = l, c = c || {}, c.decodeStrings = !1, n.call(this, c);
                }
                i.prototype = Object.create(n.prototype, {
                  constructor: { value: i }
                }), i.prototype._transform = function(l, c, h) {
                  if (typeof l != "string")
                    return h(new Error("Iconv encoding stream needs strings as its input."));
                  try {
                    var a = this.conv.write(l);
                    a && a.length && this.push(a), h();
                  } catch (v) {
                    h(v);
                  }
                }, i.prototype._flush = function(l) {
                  try {
                    var c = this.conv.end();
                    c && c.length && this.push(c), l();
                  } catch (h) {
                    l(h);
                  }
                }, i.prototype.collect = function(l) {
                  var c = [];
                  return this.on("error", l), this.on("data", function(h) {
                    c.push(h);
                  }), this.on("end", function() {
                    l(null, o.concat(c));
                  }), this;
                };
                function f(l, c) {
                  this.conv = l, c = c || {}, c.encoding = this.encoding = "utf8", n.call(this, c);
                }
                return f.prototype = Object.create(n.prototype, {
                  constructor: { value: f }
                }), f.prototype._transform = function(l, c, h) {
                  if (!o.isBuffer(l) && !(l instanceof Uint8Array))
                    return h(new Error("Iconv decoding stream needs buffers as its input."));
                  try {
                    var a = this.conv.write(l);
                    a && a.length && this.push(a, this.encoding), h();
                  } catch (v) {
                    h(v);
                  }
                }, f.prototype._flush = function(l) {
                  try {
                    var c = this.conv.end();
                    c && c.length && this.push(c, this.encoding), l();
                  } catch (h) {
                    l(h);
                  }
                }, f.prototype.collect = function(l) {
                  var c = "";
                  return this.on("error", l), this.on("data", function(h) {
                    c += h;
                  }), this.on("end", function() {
                    l(null, c);
                  }), this;
                }, {
                  IconvLiteEncoderStream: i,
                  IconvLiteDecoderStream: f
                };
              };
            }
          ),
          /***/
          74525: (
            /***/
            function(u, d) {
              /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
              d.read = function(t, o, r, n, i) {
                var f, l, c = i * 8 - n - 1, h = (1 << c) - 1, a = h >> 1, v = -7, y = r ? i - 1 : 0, g = r ? -1 : 1, e = t[o + y];
                for (y += g, f = e & (1 << -v) - 1, e >>= -v, v += c; v > 0; f = f * 256 + t[o + y], y += g, v -= 8)
                  ;
                for (l = f & (1 << -v) - 1, f >>= -v, v += n; v > 0; l = l * 256 + t[o + y], y += g, v -= 8)
                  ;
                if (f === 0)
                  f = 1 - a;
                else {
                  if (f === h)
                    return l ? NaN : (e ? -1 : 1) * (1 / 0);
                  l = l + Math.pow(2, n), f = f - a;
                }
                return (e ? -1 : 1) * l * Math.pow(2, f - n);
              }, d.write = function(t, o, r, n, i, f) {
                var l, c, h, a = f * 8 - i - 1, v = (1 << a) - 1, y = v >> 1, g = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, e = n ? 0 : f - 1, m = n ? 1 : -1, w = o < 0 || o === 0 && 1 / o < 0 ? 1 : 0;
                for (o = Math.abs(o), isNaN(o) || o === 1 / 0 ? (c = isNaN(o) ? 1 : 0, l = v) : (l = Math.floor(Math.log(o) / Math.LN2), o * (h = Math.pow(2, -l)) < 1 && (l--, h *= 2), l + y >= 1 ? o += g / h : o += g * Math.pow(2, 1 - y), o * h >= 2 && (l++, h /= 2), l + y >= v ? (c = 0, l = v) : l + y >= 1 ? (c = (o * h - 1) * Math.pow(2, i), l = l + y) : (c = o * Math.pow(2, y - 1) * Math.pow(2, i), l = 0)); i >= 8; t[r + e] = c & 255, e += m, c /= 256, i -= 8)
                  ;
                for (l = l << i | c, a += i; a > 0; t[r + e] = l & 255, e += m, l /= 256, a -= 8)
                  ;
                t[r + e - m] |= w * 128;
              };
            }
          ),
          /***/
          48575: (
            /***/
            function(u) {
              typeof Object.create == "function" ? u.exports = function(t, o) {
                o && (t.super_ = o, t.prototype = Object.create(o.prototype, {
                  constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                  }
                }));
              } : u.exports = function(t, o) {
                if (o) {
                  t.super_ = o;
                  var r = function() {
                  };
                  r.prototype = o.prototype, t.prototype = new r(), t.prototype.constructor = t;
                }
              };
            }
          ),
          /***/
          77092: (
            /***/
            function(u, d, t) {
              var o = t(44111)(), r = t(97615), n = r("Object.prototype.toString"), i = function(h) {
                return o && h && typeof h == "object" && Symbol.toStringTag in h ? !1 : n(h) === "[object Arguments]";
              }, f = function(h) {
                return i(h) ? !0 : h !== null && typeof h == "object" && typeof h.length == "number" && h.length >= 0 && n(h) !== "[object Array]" && n(h.callee) === "[object Function]";
              }, l = function() {
                return i(arguments);
              }();
              i.isLegacyArguments = f, u.exports = l ? i : f;
            }
          ),
          /***/
          5443: (
            /***/
            function(u) {
              var d = Function.prototype.toString, t = typeof Reflect == "object" && Reflect !== null && Reflect.apply, o, r;
              if (typeof t == "function" && typeof Object.defineProperty == "function")
                try {
                  o = Object.defineProperty({}, "length", {
                    get: function() {
                      throw r;
                    }
                  }), r = {}, t(function() {
                    throw 42;
                  }, null, o);
                } catch (I) {
                  I !== r && (t = null);
                }
              else
                t = null;
              var n = /^\s*class\b/, i = function(T) {
                try {
                  var C = d.call(T);
                  return n.test(C);
                } catch {
                  return !1;
                }
              }, f = function(T) {
                try {
                  return i(T) ? !1 : (d.call(T), !0);
                } catch {
                  return !1;
                }
              }, l = Object.prototype.toString, c = "[object Object]", h = "[object Function]", a = "[object GeneratorFunction]", v = "[object HTMLAllCollection]", y = "[object HTML document.all class]", g = "[object HTMLCollection]", e = typeof Symbol == "function" && !!Symbol.toStringTag, m = !(0 in [,]), w = function() {
                return !1;
              };
              if (typeof document == "object") {
                var D = document.all;
                l.call(D) === l.call(document.all) && (w = function(T) {
                  if ((m || !T) && (typeof T > "u" || typeof T == "object"))
                    try {
                      var C = l.call(T);
                      return (C === v || C === y || C === g || C === c) && T("") == null;
                    } catch {
                    }
                  return !1;
                });
              }
              u.exports = t ? function(T) {
                if (w(T))
                  return !0;
                if (!T || typeof T != "function" && typeof T != "object")
                  return !1;
                try {
                  t(T, null, o);
                } catch (C) {
                  if (C !== r)
                    return !1;
                }
                return !i(T) && f(T);
              } : function(T) {
                if (w(T))
                  return !0;
                if (!T || typeof T != "function" && typeof T != "object")
                  return !1;
                if (e)
                  return f(T);
                if (i(T))
                  return !1;
                var C = l.call(T);
                return C !== h && C !== a && !/^\[object HTML/.test(C) ? !1 : f(T);
              };
            }
          ),
          /***/
          28659: (
            /***/
            function(u, d, t) {
              var o = Date.prototype.getDay, r = function(c) {
                try {
                  return o.call(c), !0;
                } catch {
                  return !1;
                }
              }, n = Object.prototype.toString, i = "[object Date]", f = t(44111)();
              u.exports = function(c) {
                return typeof c != "object" || c === null ? !1 : f ? r(c) : n.call(c) === i;
              };
            }
          ),
          /***/
          97427: (
            /***/
            function(u, d, t) {
              var o = Object.prototype.toString, r = Function.prototype.toString, n = /^\s*(?:function)?\*/, i = t(44111)(), f = Object.getPrototypeOf, l = function() {
                if (!i)
                  return !1;
                try {
                  return Function("return function*() {}")();
                } catch {
                }
              }, c;
              u.exports = function(a) {
                if (typeof a != "function")
                  return !1;
                if (n.test(r.call(a)))
                  return !0;
                if (!i) {
                  var v = o.call(a);
                  return v === "[object GeneratorFunction]";
                }
                if (!f)
                  return !1;
                if (typeof c > "u") {
                  var y = l();
                  c = y ? f(y) : !1;
                }
                return f(a) === c;
              };
            }
          ),
          /***/
          82100: (
            /***/
            function(u) {
              u.exports = function(t) {
                return t !== t;
              };
            }
          ),
          /***/
          98622: (
            /***/
            function(u, d, t) {
              var o = t(12550), r = t(19170), n = t(82100), i = t(64358), f = t(6232), l = o(i(), Number);
              r(l, {
                getPolyfill: i,
                implementation: n,
                shim: f
              }), u.exports = l;
            }
          ),
          /***/
          64358: (
            /***/
            function(u, d, t) {
              var o = t(82100);
              u.exports = function() {
                return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : o;
              };
            }
          ),
          /***/
          6232: (
            /***/
            function(u, d, t) {
              var o = t(19170), r = t(64358);
              u.exports = function() {
                var i = r();
                return o(Number, { isNaN: i }, {
                  isNaN: function() {
                    return Number.isNaN !== i;
                  }
                }), i;
              };
            }
          ),
          /***/
          55278: (
            /***/
            function(u, d, t) {
              var o = t(97615), r = t(44111)(), n, i, f, l;
              if (r) {
                n = o("Object.prototype.hasOwnProperty"), i = o("RegExp.prototype.exec"), f = {};
                var c = function() {
                  throw f;
                };
                l = {
                  toString: c,
                  valueOf: c
                }, typeof Symbol.toPrimitive == "symbol" && (l[Symbol.toPrimitive] = c);
              }
              var h = o("Object.prototype.toString"), a = Object.getOwnPropertyDescriptor, v = "[object RegExp]";
              u.exports = r ? function(g) {
                if (!g || typeof g != "object")
                  return !1;
                var e = a(g, "lastIndex"), m = e && n(e, "value");
                if (!m)
                  return !1;
                try {
                  i(g, l);
                } catch (w) {
                  return w === f;
                }
              } : function(g) {
                return !g || typeof g != "object" && typeof g != "function" ? !1 : h(g) === v;
              };
            }
          ),
          /***/
          82527: (
            /***/
            function(u, d, t) {
              var o = t(54010);
              u.exports = function(n) {
                return !!o(n);
              };
            }
          ),
          /***/
          98720: (
            /***/
            function(u) {
              var d = function(t) {
                return t !== t;
              };
              u.exports = function(o, r) {
                return o === 0 && r === 0 ? 1 / o === 1 / r : !!(o === r || d(o) && d(r));
              };
            }
          ),
          /***/
          7402: (
            /***/
            function(u, d, t) {
              var o = t(19170), r = t(12550), n = t(98720), i = t(25280), f = t(49129), l = r(i(), Object);
              o(l, {
                getPolyfill: i,
                implementation: n,
                shim: f
              }), u.exports = l;
            }
          ),
          /***/
          25280: (
            /***/
            function(u, d, t) {
              var o = t(98720);
              u.exports = function() {
                return typeof Object.is == "function" ? Object.is : o;
              };
            }
          ),
          /***/
          49129: (
            /***/
            function(u, d, t) {
              var o = t(25280), r = t(19170);
              u.exports = function() {
                var i = o();
                return r(Object, { is: i }, {
                  is: function() {
                    return Object.is !== i;
                  }
                }), i;
              };
            }
          ),
          /***/
          78383: (
            /***/
            function(u, d, t) {
              var o;
              if (!Object.keys) {
                var r = Object.prototype.hasOwnProperty, n = Object.prototype.toString, i = t(84418), f = Object.prototype.propertyIsEnumerable, l = !f.call({ toString: null }, "toString"), c = f.call(function() {
                }, "prototype"), h = [
                  "toString",
                  "toLocaleString",
                  "valueOf",
                  "hasOwnProperty",
                  "isPrototypeOf",
                  "propertyIsEnumerable",
                  "constructor"
                ], a = function(e) {
                  var m = e.constructor;
                  return m && m.prototype === e;
                }, v = {
                  $applicationCache: !0,
                  $console: !0,
                  $external: !0,
                  $frame: !0,
                  $frameElement: !0,
                  $frames: !0,
                  $innerHeight: !0,
                  $innerWidth: !0,
                  $onmozfullscreenchange: !0,
                  $onmozfullscreenerror: !0,
                  $outerHeight: !0,
                  $outerWidth: !0,
                  $pageXOffset: !0,
                  $pageYOffset: !0,
                  $parent: !0,
                  $scrollLeft: !0,
                  $scrollTop: !0,
                  $scrollX: !0,
                  $scrollY: !0,
                  $self: !0,
                  $webkitIndexedDB: !0,
                  $webkitStorageInfo: !0,
                  $window: !0
                }, y = function() {
                  if (typeof window > "u")
                    return !1;
                  for (var e in window)
                    try {
                      if (!v["$" + e] && r.call(window, e) && window[e] !== null && typeof window[e] == "object")
                        try {
                          a(window[e]);
                        } catch {
                          return !0;
                        }
                    } catch {
                      return !0;
                    }
                  return !1;
                }(), g = function(e) {
                  if (typeof window > "u" || !y)
                    return a(e);
                  try {
                    return a(e);
                  } catch {
                    return !1;
                  }
                };
                o = function(m) {
                  var w = m !== null && typeof m == "object", D = n.call(m) === "[object Function]", I = i(m), T = w && n.call(m) === "[object String]", C = [];
                  if (!w && !D && !I)
                    throw new TypeError("Object.keys called on a non-object");
                  var E = c && D;
                  if (T && m.length > 0 && !r.call(m, 0))
                    for (var F = 0; F < m.length; ++F)
                      C.push(String(F));
                  if (I && m.length > 0)
                    for (var x = 0; x < m.length; ++x)
                      C.push(String(x));
                  else
                    for (var P in m)
                      !(E && P === "prototype") && r.call(m, P) && C.push(String(P));
                  if (l)
                    for (var L = g(m), N = 0; N < h.length; ++N)
                      !(L && h[N] === "constructor") && r.call(m, h[N]) && C.push(h[N]);
                  return C;
                };
              }
              u.exports = o;
            }
          ),
          /***/
          806: (
            /***/
            function(u, d, t) {
              var o = Array.prototype.slice, r = t(84418), n = Object.keys, i = n ? function(c) {
                return n(c);
              } : t(78383), f = Object.keys;
              i.shim = function() {
                if (Object.keys) {
                  var c = function() {
                    var h = Object.keys(arguments);
                    return h && h.length === arguments.length;
                  }(1, 2);
                  c || (Object.keys = function(a) {
                    return r(a) ? f(o.call(a)) : f(a);
                  });
                } else
                  Object.keys = i;
                return Object.keys || i;
              }, u.exports = i;
            }
          ),
          /***/
          84418: (
            /***/
            function(u) {
              var d = Object.prototype.toString;
              u.exports = function(o) {
                var r = d.call(o), n = r === "[object Arguments]";
                return n || (n = r !== "[object Array]" && o !== null && typeof o == "object" && typeof o.length == "number" && o.length >= 0 && d.call(o.callee) === "[object Function]"), n;
              };
            }
          ),
          /***/
          22148: (
            /***/
            function(u, d, t) {
              var o = t(806), r = t(65682)(), n = t(97615), i = Object, f = n("Array.prototype.push"), l = n("Object.prototype.propertyIsEnumerable"), c = r ? Object.getOwnPropertySymbols : null;
              u.exports = function(a, v) {
                if (a == null)
                  throw new TypeError("target must be an object");
                var y = i(a);
                if (arguments.length === 1)
                  return y;
                for (var g = 1; g < arguments.length; ++g) {
                  var e = i(arguments[g]), m = o(e), w = r && (Object.getOwnPropertySymbols || c);
                  if (w)
                    for (var D = w(e), I = 0; I < D.length; ++I) {
                      var T = D[I];
                      l(e, T) && f(m, T);
                    }
                  for (var C = 0; C < m.length; ++C) {
                    var E = m[C];
                    if (l(e, E)) {
                      var F = e[E];
                      y[E] = F;
                    }
                  }
                }
                return y;
              };
            }
          ),
          /***/
          10293: (
            /***/
            function(u, d, t) {
              var o = t(22148), r = function() {
                if (!Object.assign)
                  return !1;
                for (var i = "abcdefghijklmnopqrst", f = i.split(""), l = {}, c = 0; c < f.length; ++c)
                  l[f[c]] = f[c];
                var h = Object.assign({}, l), a = "";
                for (var v in h)
                  a += v;
                return i !== a;
              }, n = function() {
                if (!Object.assign || !Object.preventExtensions)
                  return !1;
                var i = Object.preventExtensions({ 1: 2 });
                try {
                  Object.assign(i, "xy");
                } catch {
                  return i[1] === "y";
                }
                return !1;
              };
              u.exports = function() {
                return !Object.assign || r() || n() ? o : Object.assign;
              };
            }
          ),
          /***/
          69034: (
            /***/
            function(u, d) {
              var t = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
              function o(i, f) {
                return Object.prototype.hasOwnProperty.call(i, f);
              }
              d.assign = function(i) {
                for (var f = Array.prototype.slice.call(arguments, 1); f.length; ) {
                  var l = f.shift();
                  if (l) {
                    if (typeof l != "object")
                      throw new TypeError(l + "must be non-object");
                    for (var c in l)
                      o(l, c) && (i[c] = l[c]);
                  }
                }
                return i;
              }, d.shrinkBuf = function(i, f) {
                return i.length === f ? i : i.subarray ? i.subarray(0, f) : (i.length = f, i);
              };
              var r = {
                arraySet: function(i, f, l, c, h) {
                  if (f.subarray && i.subarray) {
                    i.set(f.subarray(l, l + c), h);
                    return;
                  }
                  for (var a = 0; a < c; a++)
                    i[h + a] = f[l + a];
                },
                // Join array of chunks to single array.
                flattenChunks: function(i) {
                  var f, l, c, h, a, v;
                  for (c = 0, f = 0, l = i.length; f < l; f++)
                    c += i[f].length;
                  for (v = new Uint8Array(c), h = 0, f = 0, l = i.length; f < l; f++)
                    a = i[f], v.set(a, h), h += a.length;
                  return v;
                }
              }, n = {
                arraySet: function(i, f, l, c, h) {
                  for (var a = 0; a < c; a++)
                    i[h + a] = f[l + a];
                },
                // Join array of chunks to single array.
                flattenChunks: function(i) {
                  return [].concat.apply([], i);
                }
              };
              d.setTyped = function(i) {
                i ? (d.Buf8 = Uint8Array, d.Buf16 = Uint16Array, d.Buf32 = Int32Array, d.assign(d, r)) : (d.Buf8 = Array, d.Buf16 = Array, d.Buf32 = Array, d.assign(d, n));
              }, d.setTyped(t);
            }
          ),
          /***/
          51475: (
            /***/
            function(u) {
              function d(t, o, r, n) {
                for (var i = t & 65535 | 0, f = t >>> 16 & 65535 | 0, l = 0; r !== 0; ) {
                  l = r > 2e3 ? 2e3 : r, r -= l;
                  do
                    i = i + o[n++] | 0, f = f + i | 0;
                  while (--l);
                  i %= 65521, f %= 65521;
                }
                return i | f << 16 | 0;
              }
              u.exports = d;
            }
          ),
          /***/
          40549: (
            /***/
            function(u) {
              u.exports = {
                /* Allowed flush values; see deflate() and inflate() below for details */
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                /* Return codes for the compression/decompression functions. Negative values
                * are errors, positive values are used for special but normal events.
                */
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                //Z_MEM_ERROR:     -4,
                Z_BUF_ERROR: -5,
                //Z_VERSION_ERROR: -6,
                /* compression levels */
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                /* Possible values of the data_type field (though see inflate()) */
                Z_BINARY: 0,
                Z_TEXT: 1,
                //Z_ASCII:                1, // = Z_TEXT (deprecated)
                Z_UNKNOWN: 2,
                /* The deflate compression method */
                Z_DEFLATED: 8
                //Z_NULL:                 null // Use -1 or null inline, depending on var type
              };
            }
          ),
          /***/
          38621: (
            /***/
            function(u) {
              function d() {
                for (var r, n = [], i = 0; i < 256; i++) {
                  r = i;
                  for (var f = 0; f < 8; f++)
                    r = r & 1 ? 3988292384 ^ r >>> 1 : r >>> 1;
                  n[i] = r;
                }
                return n;
              }
              var t = d();
              function o(r, n, i, f) {
                var l = t, c = f + i;
                r ^= -1;
                for (var h = f; h < c; h++)
                  r = r >>> 8 ^ l[(r ^ n[h]) & 255];
                return r ^ -1;
              }
              u.exports = o;
            }
          ),
          /***/
          24349: (
            /***/
            function(u, d, t) {
              var o = t(69034), r = t(70376), n = t(51475), i = t(38621), f = t(44594), l = 0, c = 1, h = 3, a = 4, v = 5, y = 0, g = 1, e = -2, m = -3, w = -5, D = -1, I = 1, T = 2, C = 3, E = 4, F = 0, x = 2, P = 8, L = 9, N = 15, M = 8, K = 29, ut = 256, J = ut + 1 + K, rt = 30, yt = 19, xt = 2 * J + 1, Et = 15, Ft = 3, Rt = 258, Ut = Rt + Ft + 1, Q = 32, pt = 42, ct = 69, ot = 73, mt = 91, G = 103, Tt = 113, z = 666, S = 1, k = 2, V = 3, it = 4, tt = 3;
              function _($, Jt) {
                return $.msg = f[Jt], Jt;
              }
              function At($) {
                return ($ << 1) - ($ > 4 ? 9 : 0);
              }
              function Lt($) {
                for (var Jt = $.length; --Jt >= 0; )
                  $[Jt] = 0;
              }
              function Yt($) {
                var Jt = $.state, te = Jt.pending;
                te > $.avail_out && (te = $.avail_out), te !== 0 && (o.arraySet($.output, Jt.pending_buf, Jt.pending_out, te, $.next_out), $.next_out += te, Jt.pending_out += te, $.total_out += te, $.avail_out -= te, Jt.pending -= te, Jt.pending === 0 && (Jt.pending_out = 0));
              }
              function Gt($, Jt) {
                r._tr_flush_block($, $.block_start >= 0 ? $.block_start : -1, $.strstart - $.block_start, Jt), $.block_start = $.strstart, Yt($.strm);
              }
              function Dt($, Jt) {
                $.pending_buf[$.pending++] = Jt;
              }
              function ae($, Jt) {
                $.pending_buf[$.pending++] = Jt >>> 8 & 255, $.pending_buf[$.pending++] = Jt & 255;
              }
              function Ae($, Jt, te, Ct) {
                var Ht = $.avail_in;
                return Ht > Ct && (Ht = Ct), Ht === 0 ? 0 : ($.avail_in -= Ht, o.arraySet(Jt, $.input, $.next_in, Ht, te), $.state.wrap === 1 ? $.adler = n($.adler, Jt, Ht, te) : $.state.wrap === 2 && ($.adler = i($.adler, Jt, Ht, te)), $.next_in += Ht, $.total_in += Ht, Ht);
              }
              function xe($, Jt) {
                var te = $.max_chain_length, Ct = $.strstart, Ht, oe, Le = $.prev_length, De = $.nice_match, ke = $.strstart > $.w_size - Ut ? $.strstart - ($.w_size - Ut) : 0, Ne = $.window, rn = $.w_mask, tr = $.prev, Ze = $.strstart + Rt, br = Ne[Ct + Le - 1], Ir = Ne[Ct + Le];
                $.prev_length >= $.good_match && (te >>= 2), De > $.lookahead && (De = $.lookahead);
                do
                  if (Ht = Jt, !(Ne[Ht + Le] !== Ir || Ne[Ht + Le - 1] !== br || Ne[Ht] !== Ne[Ct] || Ne[++Ht] !== Ne[Ct + 1])) {
                    Ct += 2, Ht++;
                    do
                      ;
                    while (Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ct < Ze);
                    if (oe = Rt - (Ze - Ct), Ct = Ze - Rt, oe > Le) {
                      if ($.match_start = Jt, Le = oe, oe >= De)
                        break;
                      br = Ne[Ct + Le - 1], Ir = Ne[Ct + Le];
                    }
                  }
                while ((Jt = tr[Jt & rn]) > ke && --te !== 0);
                return Le <= $.lookahead ? Le : $.lookahead;
              }
              function ce($) {
                var Jt = $.w_size, te, Ct, Ht, oe, Le;
                do {
                  if (oe = $.window_size - $.lookahead - $.strstart, $.strstart >= Jt + (Jt - Ut)) {
                    o.arraySet($.window, $.window, Jt, Jt, 0), $.match_start -= Jt, $.strstart -= Jt, $.block_start -= Jt, Ct = $.hash_size, te = Ct;
                    do
                      Ht = $.head[--te], $.head[te] = Ht >= Jt ? Ht - Jt : 0;
                    while (--Ct);
                    Ct = Jt, te = Ct;
                    do
                      Ht = $.prev[--te], $.prev[te] = Ht >= Jt ? Ht - Jt : 0;
                    while (--Ct);
                    oe += Jt;
                  }
                  if ($.strm.avail_in === 0)
                    break;
                  if (Ct = Ae($.strm, $.window, $.strstart + $.lookahead, oe), $.lookahead += Ct, $.lookahead + $.insert >= Ft)
                    for (Le = $.strstart - $.insert, $.ins_h = $.window[Le], $.ins_h = ($.ins_h << $.hash_shift ^ $.window[Le + 1]) & $.hash_mask; $.insert && ($.ins_h = ($.ins_h << $.hash_shift ^ $.window[Le + Ft - 1]) & $.hash_mask, $.prev[Le & $.w_mask] = $.head[$.ins_h], $.head[$.ins_h] = Le, Le++, $.insert--, !($.lookahead + $.insert < Ft)); )
                      ;
                } while ($.lookahead < Ut && $.strm.avail_in !== 0);
              }
              function we($, Jt) {
                var te = 65535;
                for (te > $.pending_buf_size - 5 && (te = $.pending_buf_size - 5); ; ) {
                  if ($.lookahead <= 1) {
                    if (ce($), $.lookahead === 0 && Jt === l)
                      return S;
                    if ($.lookahead === 0)
                      break;
                  }
                  $.strstart += $.lookahead, $.lookahead = 0;
                  var Ct = $.block_start + te;
                  if (($.strstart === 0 || $.strstart >= Ct) && ($.lookahead = $.strstart - Ct, $.strstart = Ct, Gt($, !1), $.strm.avail_out === 0) || $.strstart - $.block_start >= $.w_size - Ut && (Gt($, !1), $.strm.avail_out === 0))
                    return S;
                }
                return $.insert = 0, Jt === a ? (Gt($, !0), $.strm.avail_out === 0 ? V : it) : ($.strstart > $.block_start && (Gt($, !1), $.strm.avail_out === 0), S);
              }
              function zt($, Jt) {
                for (var te, Ct; ; ) {
                  if ($.lookahead < Ut) {
                    if (ce($), $.lookahead < Ut && Jt === l)
                      return S;
                    if ($.lookahead === 0)
                      break;
                  }
                  if (te = 0, $.lookahead >= Ft && ($.ins_h = ($.ins_h << $.hash_shift ^ $.window[$.strstart + Ft - 1]) & $.hash_mask, te = $.prev[$.strstart & $.w_mask] = $.head[$.ins_h], $.head[$.ins_h] = $.strstart), te !== 0 && $.strstart - te <= $.w_size - Ut && ($.match_length = xe($, te)), $.match_length >= Ft)
                    if (Ct = r._tr_tally($, $.strstart - $.match_start, $.match_length - Ft), $.lookahead -= $.match_length, $.match_length <= $.max_lazy_match && $.lookahead >= Ft) {
                      $.match_length--;
                      do
                        $.strstart++, $.ins_h = ($.ins_h << $.hash_shift ^ $.window[$.strstart + Ft - 1]) & $.hash_mask, te = $.prev[$.strstart & $.w_mask] = $.head[$.ins_h], $.head[$.ins_h] = $.strstart;
                      while (--$.match_length !== 0);
                      $.strstart++;
                    } else
                      $.strstart += $.match_length, $.match_length = 0, $.ins_h = $.window[$.strstart], $.ins_h = ($.ins_h << $.hash_shift ^ $.window[$.strstart + 1]) & $.hash_mask;
                  else
                    Ct = r._tr_tally($, 0, $.window[$.strstart]), $.lookahead--, $.strstart++;
                  if (Ct && (Gt($, !1), $.strm.avail_out === 0))
                    return S;
                }
                return $.insert = $.strstart < Ft - 1 ? $.strstart : Ft - 1, Jt === a ? (Gt($, !0), $.strm.avail_out === 0 ? V : it) : $.last_lit && (Gt($, !1), $.strm.avail_out === 0) ? S : k;
              }
              function Qt($, Jt) {
                for (var te, Ct, Ht; ; ) {
                  if ($.lookahead < Ut) {
                    if (ce($), $.lookahead < Ut && Jt === l)
                      return S;
                    if ($.lookahead === 0)
                      break;
                  }
                  if (te = 0, $.lookahead >= Ft && ($.ins_h = ($.ins_h << $.hash_shift ^ $.window[$.strstart + Ft - 1]) & $.hash_mask, te = $.prev[$.strstart & $.w_mask] = $.head[$.ins_h], $.head[$.ins_h] = $.strstart), $.prev_length = $.match_length, $.prev_match = $.match_start, $.match_length = Ft - 1, te !== 0 && $.prev_length < $.max_lazy_match && $.strstart - te <= $.w_size - Ut && ($.match_length = xe($, te), $.match_length <= 5 && ($.strategy === I || $.match_length === Ft && $.strstart - $.match_start > 4096) && ($.match_length = Ft - 1)), $.prev_length >= Ft && $.match_length <= $.prev_length) {
                    Ht = $.strstart + $.lookahead - Ft, Ct = r._tr_tally($, $.strstart - 1 - $.prev_match, $.prev_length - Ft), $.lookahead -= $.prev_length - 1, $.prev_length -= 2;
                    do
                      ++$.strstart <= Ht && ($.ins_h = ($.ins_h << $.hash_shift ^ $.window[$.strstart + Ft - 1]) & $.hash_mask, te = $.prev[$.strstart & $.w_mask] = $.head[$.ins_h], $.head[$.ins_h] = $.strstart);
                    while (--$.prev_length !== 0);
                    if ($.match_available = 0, $.match_length = Ft - 1, $.strstart++, Ct && (Gt($, !1), $.strm.avail_out === 0))
                      return S;
                  } else if ($.match_available) {
                    if (Ct = r._tr_tally($, 0, $.window[$.strstart - 1]), Ct && Gt($, !1), $.strstart++, $.lookahead--, $.strm.avail_out === 0)
                      return S;
                  } else
                    $.match_available = 1, $.strstart++, $.lookahead--;
                }
                return $.match_available && (Ct = r._tr_tally($, 0, $.window[$.strstart - 1]), $.match_available = 0), $.insert = $.strstart < Ft - 1 ? $.strstart : Ft - 1, Jt === a ? (Gt($, !0), $.strm.avail_out === 0 ? V : it) : $.last_lit && (Gt($, !1), $.strm.avail_out === 0) ? S : k;
              }
              function le($, Jt) {
                for (var te, Ct, Ht, oe, Le = $.window; ; ) {
                  if ($.lookahead <= Rt) {
                    if (ce($), $.lookahead <= Rt && Jt === l)
                      return S;
                    if ($.lookahead === 0)
                      break;
                  }
                  if ($.match_length = 0, $.lookahead >= Ft && $.strstart > 0 && (Ht = $.strstart - 1, Ct = Le[Ht], Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht])) {
                    oe = $.strstart + Rt;
                    do
                      ;
                    while (Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ht < oe);
                    $.match_length = Rt - (oe - Ht), $.match_length > $.lookahead && ($.match_length = $.lookahead);
                  }
                  if ($.match_length >= Ft ? (te = r._tr_tally($, 1, $.match_length - Ft), $.lookahead -= $.match_length, $.strstart += $.match_length, $.match_length = 0) : (te = r._tr_tally($, 0, $.window[$.strstart]), $.lookahead--, $.strstart++), te && (Gt($, !1), $.strm.avail_out === 0))
                    return S;
                }
                return $.insert = 0, Jt === a ? (Gt($, !0), $.strm.avail_out === 0 ? V : it) : $.last_lit && (Gt($, !1), $.strm.avail_out === 0) ? S : k;
              }
              function de($, Jt) {
                for (var te; ; ) {
                  if ($.lookahead === 0 && (ce($), $.lookahead === 0)) {
                    if (Jt === l)
                      return S;
                    break;
                  }
                  if ($.match_length = 0, te = r._tr_tally($, 0, $.window[$.strstart]), $.lookahead--, $.strstart++, te && (Gt($, !1), $.strm.avail_out === 0))
                    return S;
                }
                return $.insert = 0, Jt === a ? (Gt($, !0), $.strm.avail_out === 0 ? V : it) : $.last_lit && (Gt($, !1), $.strm.avail_out === 0) ? S : k;
              }
              function be($, Jt, te, Ct, Ht) {
                this.good_length = $, this.max_lazy = Jt, this.nice_length = te, this.max_chain = Ct, this.func = Ht;
              }
              var Pe;
              Pe = [
                /*      good lazy nice chain */
                new be(0, 0, 0, 0, we),
                /* 0 store only */
                new be(4, 4, 8, 4, zt),
                /* 1 max speed, no lazy matches */
                new be(4, 5, 16, 8, zt),
                /* 2 */
                new be(4, 6, 32, 32, zt),
                /* 3 */
                new be(4, 4, 16, 16, Qt),
                /* 4 lazy matches */
                new be(8, 16, 32, 32, Qt),
                /* 5 */
                new be(8, 16, 128, 128, Qt),
                /* 6 */
                new be(8, 32, 128, 256, Qt),
                /* 7 */
                new be(32, 128, 258, 1024, Qt),
                /* 8 */
                new be(32, 258, 258, 4096, Qt)
                /* 9 max compression */
              ];
              function Fe($) {
                $.window_size = 2 * $.w_size, Lt($.head), $.max_lazy_match = Pe[$.level].max_lazy, $.good_match = Pe[$.level].good_length, $.nice_match = Pe[$.level].nice_length, $.max_chain_length = Pe[$.level].max_chain, $.strstart = 0, $.block_start = 0, $.lookahead = 0, $.insert = 0, $.match_length = $.prev_length = Ft - 1, $.match_available = 0, $.ins_h = 0;
              }
              function It() {
                this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = P, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new o.Buf16(xt * 2), this.dyn_dtree = new o.Buf16((2 * rt + 1) * 2), this.bl_tree = new o.Buf16((2 * yt + 1) * 2), Lt(this.dyn_ltree), Lt(this.dyn_dtree), Lt(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new o.Buf16(Et + 1), this.heap = new o.Buf16(2 * J + 1), Lt(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new o.Buf16(2 * J + 1), Lt(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
              }
              function fe($) {
                var Jt;
                return !$ || !$.state ? _($, e) : ($.total_in = $.total_out = 0, $.data_type = x, Jt = $.state, Jt.pending = 0, Jt.pending_out = 0, Jt.wrap < 0 && (Jt.wrap = -Jt.wrap), Jt.status = Jt.wrap ? pt : Tt, $.adler = Jt.wrap === 2 ? 0 : 1, Jt.last_flush = l, r._tr_init(Jt), y);
              }
              function st($) {
                var Jt = fe($);
                return Jt === y && Fe($.state), Jt;
              }
              function Y($, Jt) {
                return !$ || !$.state || $.state.wrap !== 2 ? e : ($.state.gzhead = Jt, y);
              }
              function j($, Jt, te, Ct, Ht, oe) {
                if (!$)
                  return e;
                var Le = 1;
                if (Jt === D && (Jt = 6), Ct < 0 ? (Le = 0, Ct = -Ct) : Ct > 15 && (Le = 2, Ct -= 16), Ht < 1 || Ht > L || te !== P || Ct < 8 || Ct > 15 || Jt < 0 || Jt > 9 || oe < 0 || oe > E)
                  return _($, e);
                Ct === 8 && (Ct = 9);
                var De = new It();
                return $.state = De, De.strm = $, De.wrap = Le, De.gzhead = null, De.w_bits = Ct, De.w_size = 1 << De.w_bits, De.w_mask = De.w_size - 1, De.hash_bits = Ht + 7, De.hash_size = 1 << De.hash_bits, De.hash_mask = De.hash_size - 1, De.hash_shift = ~~((De.hash_bits + Ft - 1) / Ft), De.window = new o.Buf8(De.w_size * 2), De.head = new o.Buf16(De.hash_size), De.prev = new o.Buf16(De.w_size), De.lit_bufsize = 1 << Ht + 6, De.pending_buf_size = De.lit_bufsize * 4, De.pending_buf = new o.Buf8(De.pending_buf_size), De.d_buf = 1 * De.lit_bufsize, De.l_buf = 3 * De.lit_bufsize, De.level = Jt, De.strategy = oe, De.method = te, st($);
              }
              function bt($, Jt) {
                return j($, Jt, P, N, M, F);
              }
              function at($, Jt) {
                var te, Ct, Ht, oe;
                if (!$ || !$.state || Jt > v || Jt < 0)
                  return $ ? _($, e) : e;
                if (Ct = $.state, !$.output || !$.input && $.avail_in !== 0 || Ct.status === z && Jt !== a)
                  return _($, $.avail_out === 0 ? w : e);
                if (Ct.strm = $, te = Ct.last_flush, Ct.last_flush = Jt, Ct.status === pt)
                  if (Ct.wrap === 2)
                    $.adler = 0, Dt(Ct, 31), Dt(Ct, 139), Dt(Ct, 8), Ct.gzhead ? (Dt(
                      Ct,
                      (Ct.gzhead.text ? 1 : 0) + (Ct.gzhead.hcrc ? 2 : 0) + (Ct.gzhead.extra ? 4 : 0) + (Ct.gzhead.name ? 8 : 0) + (Ct.gzhead.comment ? 16 : 0)
                    ), Dt(Ct, Ct.gzhead.time & 255), Dt(Ct, Ct.gzhead.time >> 8 & 255), Dt(Ct, Ct.gzhead.time >> 16 & 255), Dt(Ct, Ct.gzhead.time >> 24 & 255), Dt(Ct, Ct.level === 9 ? 2 : Ct.strategy >= T || Ct.level < 2 ? 4 : 0), Dt(Ct, Ct.gzhead.os & 255), Ct.gzhead.extra && Ct.gzhead.extra.length && (Dt(Ct, Ct.gzhead.extra.length & 255), Dt(Ct, Ct.gzhead.extra.length >> 8 & 255)), Ct.gzhead.hcrc && ($.adler = i($.adler, Ct.pending_buf, Ct.pending, 0)), Ct.gzindex = 0, Ct.status = ct) : (Dt(Ct, 0), Dt(Ct, 0), Dt(Ct, 0), Dt(Ct, 0), Dt(Ct, 0), Dt(Ct, Ct.level === 9 ? 2 : Ct.strategy >= T || Ct.level < 2 ? 4 : 0), Dt(Ct, tt), Ct.status = Tt);
                  else {
                    var Le = P + (Ct.w_bits - 8 << 4) << 8, De = -1;
                    Ct.strategy >= T || Ct.level < 2 ? De = 0 : Ct.level < 6 ? De = 1 : Ct.level === 6 ? De = 2 : De = 3, Le |= De << 6, Ct.strstart !== 0 && (Le |= Q), Le += 31 - Le % 31, Ct.status = Tt, ae(Ct, Le), Ct.strstart !== 0 && (ae(Ct, $.adler >>> 16), ae(Ct, $.adler & 65535)), $.adler = 1;
                  }
                if (Ct.status === ct)
                  if (Ct.gzhead.extra) {
                    for (Ht = Ct.pending; Ct.gzindex < (Ct.gzhead.extra.length & 65535) && !(Ct.pending === Ct.pending_buf_size && (Ct.gzhead.hcrc && Ct.pending > Ht && ($.adler = i($.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), Yt($), Ht = Ct.pending, Ct.pending === Ct.pending_buf_size)); )
                      Dt(Ct, Ct.gzhead.extra[Ct.gzindex] & 255), Ct.gzindex++;
                    Ct.gzhead.hcrc && Ct.pending > Ht && ($.adler = i($.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), Ct.gzindex === Ct.gzhead.extra.length && (Ct.gzindex = 0, Ct.status = ot);
                  } else
                    Ct.status = ot;
                if (Ct.status === ot)
                  if (Ct.gzhead.name) {
                    Ht = Ct.pending;
                    do {
                      if (Ct.pending === Ct.pending_buf_size && (Ct.gzhead.hcrc && Ct.pending > Ht && ($.adler = i($.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), Yt($), Ht = Ct.pending, Ct.pending === Ct.pending_buf_size)) {
                        oe = 1;
                        break;
                      }
                      Ct.gzindex < Ct.gzhead.name.length ? oe = Ct.gzhead.name.charCodeAt(Ct.gzindex++) & 255 : oe = 0, Dt(Ct, oe);
                    } while (oe !== 0);
                    Ct.gzhead.hcrc && Ct.pending > Ht && ($.adler = i($.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), oe === 0 && (Ct.gzindex = 0, Ct.status = mt);
                  } else
                    Ct.status = mt;
                if (Ct.status === mt)
                  if (Ct.gzhead.comment) {
                    Ht = Ct.pending;
                    do {
                      if (Ct.pending === Ct.pending_buf_size && (Ct.gzhead.hcrc && Ct.pending > Ht && ($.adler = i($.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), Yt($), Ht = Ct.pending, Ct.pending === Ct.pending_buf_size)) {
                        oe = 1;
                        break;
                      }
                      Ct.gzindex < Ct.gzhead.comment.length ? oe = Ct.gzhead.comment.charCodeAt(Ct.gzindex++) & 255 : oe = 0, Dt(Ct, oe);
                    } while (oe !== 0);
                    Ct.gzhead.hcrc && Ct.pending > Ht && ($.adler = i($.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), oe === 0 && (Ct.status = G);
                  } else
                    Ct.status = G;
                if (Ct.status === G && (Ct.gzhead.hcrc ? (Ct.pending + 2 > Ct.pending_buf_size && Yt($), Ct.pending + 2 <= Ct.pending_buf_size && (Dt(Ct, $.adler & 255), Dt(Ct, $.adler >> 8 & 255), $.adler = 0, Ct.status = Tt)) : Ct.status = Tt), Ct.pending !== 0) {
                  if (Yt($), $.avail_out === 0)
                    return Ct.last_flush = -1, y;
                } else if ($.avail_in === 0 && At(Jt) <= At(te) && Jt !== a)
                  return _($, w);
                if (Ct.status === z && $.avail_in !== 0)
                  return _($, w);
                if ($.avail_in !== 0 || Ct.lookahead !== 0 || Jt !== l && Ct.status !== z) {
                  var ke = Ct.strategy === T ? de(Ct, Jt) : Ct.strategy === C ? le(Ct, Jt) : Pe[Ct.level].func(Ct, Jt);
                  if ((ke === V || ke === it) && (Ct.status = z), ke === S || ke === V)
                    return $.avail_out === 0 && (Ct.last_flush = -1), y;
                  if (ke === k && (Jt === c ? r._tr_align(Ct) : Jt !== v && (r._tr_stored_block(Ct, 0, 0, !1), Jt === h && (Lt(Ct.head), Ct.lookahead === 0 && (Ct.strstart = 0, Ct.block_start = 0, Ct.insert = 0))), Yt($), $.avail_out === 0))
                    return Ct.last_flush = -1, y;
                }
                return Jt !== a ? y : Ct.wrap <= 0 ? g : (Ct.wrap === 2 ? (Dt(Ct, $.adler & 255), Dt(Ct, $.adler >> 8 & 255), Dt(Ct, $.adler >> 16 & 255), Dt(Ct, $.adler >> 24 & 255), Dt(Ct, $.total_in & 255), Dt(Ct, $.total_in >> 8 & 255), Dt(Ct, $.total_in >> 16 & 255), Dt(Ct, $.total_in >> 24 & 255)) : (ae(Ct, $.adler >>> 16), ae(Ct, $.adler & 65535)), Yt($), Ct.wrap > 0 && (Ct.wrap = -Ct.wrap), Ct.pending !== 0 ? y : g);
              }
              function Wt($) {
                var Jt;
                return !$ || !$.state ? e : (Jt = $.state.status, Jt !== pt && Jt !== ct && Jt !== ot && Jt !== mt && Jt !== G && Jt !== Tt && Jt !== z ? _($, e) : ($.state = null, Jt === Tt ? _($, m) : y));
              }
              function _t($, Jt) {
                var te = Jt.length, Ct, Ht, oe, Le, De, ke, Ne, rn;
                if (!$ || !$.state || (Ct = $.state, Le = Ct.wrap, Le === 2 || Le === 1 && Ct.status !== pt || Ct.lookahead))
                  return e;
                for (Le === 1 && ($.adler = n($.adler, Jt, te, 0)), Ct.wrap = 0, te >= Ct.w_size && (Le === 0 && (Lt(Ct.head), Ct.strstart = 0, Ct.block_start = 0, Ct.insert = 0), rn = new o.Buf8(Ct.w_size), o.arraySet(rn, Jt, te - Ct.w_size, Ct.w_size, 0), Jt = rn, te = Ct.w_size), De = $.avail_in, ke = $.next_in, Ne = $.input, $.avail_in = te, $.next_in = 0, $.input = Jt, ce(Ct); Ct.lookahead >= Ft; ) {
                  Ht = Ct.strstart, oe = Ct.lookahead - (Ft - 1);
                  do
                    Ct.ins_h = (Ct.ins_h << Ct.hash_shift ^ Ct.window[Ht + Ft - 1]) & Ct.hash_mask, Ct.prev[Ht & Ct.w_mask] = Ct.head[Ct.ins_h], Ct.head[Ct.ins_h] = Ht, Ht++;
                  while (--oe);
                  Ct.strstart = Ht, Ct.lookahead = Ft - 1, ce(Ct);
                }
                return Ct.strstart += Ct.lookahead, Ct.block_start = Ct.strstart, Ct.insert = Ct.lookahead, Ct.lookahead = 0, Ct.match_length = Ct.prev_length = Ft - 1, Ct.match_available = 0, $.next_in = ke, $.input = Ne, $.avail_in = De, Ct.wrap = Le, y;
              }
              d.deflateInit = bt, d.deflateInit2 = j, d.deflateReset = st, d.deflateResetKeep = fe, d.deflateSetHeader = Y, d.deflate = at, d.deflateEnd = Wt, d.deflateSetDictionary = _t, d.deflateInfo = "pako deflate (from Nodeca project)";
            }
          ),
          /***/
          63394: (
            /***/
            function(u) {
              var d = 30, t = 12;
              u.exports = function(r, n) {
                var i, f, l, c, h, a, v, y, g, e, m, w, D, I, T, C, E, F, x, P, L, N, M, K, ut;
                i = r.state, f = r.next_in, K = r.input, l = f + (r.avail_in - 5), c = r.next_out, ut = r.output, h = c - (n - r.avail_out), a = c + (r.avail_out - 257), v = i.dmax, y = i.wsize, g = i.whave, e = i.wnext, m = i.window, w = i.hold, D = i.bits, I = i.lencode, T = i.distcode, C = (1 << i.lenbits) - 1, E = (1 << i.distbits) - 1;
                t:
                  do {
                    D < 15 && (w += K[f++] << D, D += 8, w += K[f++] << D, D += 8), F = I[w & C];
                    e:
                      for (; ; ) {
                        if (x = F >>> 24, w >>>= x, D -= x, x = F >>> 16 & 255, x === 0)
                          ut[c++] = F & 65535;
                        else if (x & 16) {
                          P = F & 65535, x &= 15, x && (D < x && (w += K[f++] << D, D += 8), P += w & (1 << x) - 1, w >>>= x, D -= x), D < 15 && (w += K[f++] << D, D += 8, w += K[f++] << D, D += 8), F = T[w & E];
                          r:
                            for (; ; ) {
                              if (x = F >>> 24, w >>>= x, D -= x, x = F >>> 16 & 255, x & 16) {
                                if (L = F & 65535, x &= 15, D < x && (w += K[f++] << D, D += 8, D < x && (w += K[f++] << D, D += 8)), L += w & (1 << x) - 1, L > v) {
                                  r.msg = "invalid distance too far back", i.mode = d;
                                  break t;
                                }
                                if (w >>>= x, D -= x, x = c - h, L > x) {
                                  if (x = L - x, x > g && i.sane) {
                                    r.msg = "invalid distance too far back", i.mode = d;
                                    break t;
                                  }
                                  if (N = 0, M = m, e === 0) {
                                    if (N += y - x, x < P) {
                                      P -= x;
                                      do
                                        ut[c++] = m[N++];
                                      while (--x);
                                      N = c - L, M = ut;
                                    }
                                  } else if (e < x) {
                                    if (N += y + e - x, x -= e, x < P) {
                                      P -= x;
                                      do
                                        ut[c++] = m[N++];
                                      while (--x);
                                      if (N = 0, e < P) {
                                        x = e, P -= x;
                                        do
                                          ut[c++] = m[N++];
                                        while (--x);
                                        N = c - L, M = ut;
                                      }
                                    }
                                  } else if (N += e - x, x < P) {
                                    P -= x;
                                    do
                                      ut[c++] = m[N++];
                                    while (--x);
                                    N = c - L, M = ut;
                                  }
                                  for (; P > 2; )
                                    ut[c++] = M[N++], ut[c++] = M[N++], ut[c++] = M[N++], P -= 3;
                                  P && (ut[c++] = M[N++], P > 1 && (ut[c++] = M[N++]));
                                } else {
                                  N = c - L;
                                  do
                                    ut[c++] = ut[N++], ut[c++] = ut[N++], ut[c++] = ut[N++], P -= 3;
                                  while (P > 2);
                                  P && (ut[c++] = ut[N++], P > 1 && (ut[c++] = ut[N++]));
                                }
                              } else if (x & 64) {
                                r.msg = "invalid distance code", i.mode = d;
                                break t;
                              } else {
                                F = T[(F & 65535) + (w & (1 << x) - 1)];
                                continue r;
                              }
                              break;
                            }
                        } else if (x & 64)
                          if (x & 32) {
                            i.mode = t;
                            break t;
                          } else {
                            r.msg = "invalid literal/length code", i.mode = d;
                            break t;
                          }
                        else {
                          F = I[(F & 65535) + (w & (1 << x) - 1)];
                          continue e;
                        }
                        break;
                      }
                  } while (f < l && c < a);
                P = D >> 3, f -= P, D -= P << 3, w &= (1 << D) - 1, r.next_in = f, r.next_out = c, r.avail_in = f < l ? 5 + (l - f) : 5 - (f - l), r.avail_out = c < a ? 257 + (a - c) : 257 - (c - a), i.hold = w, i.bits = D;
              };
            }
          ),
          /***/
          3386: (
            /***/
            function(u, d, t) {
              var o = t(69034), r = t(51475), n = t(38621), i = t(63394), f = t(20598), l = 0, c = 1, h = 2, a = 4, v = 5, y = 6, g = 0, e = 1, m = 2, w = -2, D = -3, I = -4, T = -5, C = 8, E = 1, F = 2, x = 3, P = 4, L = 5, N = 6, M = 7, K = 8, ut = 9, J = 10, rt = 11, yt = 12, xt = 13, Et = 14, Ft = 15, Rt = 16, Ut = 17, Q = 18, pt = 19, ct = 20, ot = 21, mt = 22, G = 23, Tt = 24, z = 25, S = 26, k = 27, V = 28, it = 29, tt = 30, _ = 31, At = 32, Lt = 852, Yt = 592, Gt = 15, Dt = Gt;
              function ae(j) {
                return (j >>> 24 & 255) + (j >>> 8 & 65280) + ((j & 65280) << 8) + ((j & 255) << 24);
              }
              function Ae() {
                this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new o.Buf16(320), this.work = new o.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
              }
              function xe(j) {
                var bt;
                return !j || !j.state ? w : (bt = j.state, j.total_in = j.total_out = bt.total = 0, j.msg = "", bt.wrap && (j.adler = bt.wrap & 1), bt.mode = E, bt.last = 0, bt.havedict = 0, bt.dmax = 32768, bt.head = null, bt.hold = 0, bt.bits = 0, bt.lencode = bt.lendyn = new o.Buf32(Lt), bt.distcode = bt.distdyn = new o.Buf32(Yt), bt.sane = 1, bt.back = -1, g);
              }
              function ce(j) {
                var bt;
                return !j || !j.state ? w : (bt = j.state, bt.wsize = 0, bt.whave = 0, bt.wnext = 0, xe(j));
              }
              function we(j, bt) {
                var at, Wt;
                return !j || !j.state || (Wt = j.state, bt < 0 ? (at = 0, bt = -bt) : (at = (bt >> 4) + 1, bt < 48 && (bt &= 15)), bt && (bt < 8 || bt > 15)) ? w : (Wt.window !== null && Wt.wbits !== bt && (Wt.window = null), Wt.wrap = at, Wt.wbits = bt, ce(j));
              }
              function zt(j, bt) {
                var at, Wt;
                return j ? (Wt = new Ae(), j.state = Wt, Wt.window = null, at = we(j, bt), at !== g && (j.state = null), at) : w;
              }
              function Qt(j) {
                return zt(j, Dt);
              }
              var le = !0, de, be;
              function Pe(j) {
                if (le) {
                  var bt;
                  for (de = new o.Buf32(512), be = new o.Buf32(32), bt = 0; bt < 144; )
                    j.lens[bt++] = 8;
                  for (; bt < 256; )
                    j.lens[bt++] = 9;
                  for (; bt < 280; )
                    j.lens[bt++] = 7;
                  for (; bt < 288; )
                    j.lens[bt++] = 8;
                  for (f(c, j.lens, 0, 288, de, 0, j.work, { bits: 9 }), bt = 0; bt < 32; )
                    j.lens[bt++] = 5;
                  f(h, j.lens, 0, 32, be, 0, j.work, { bits: 5 }), le = !1;
                }
                j.lencode = de, j.lenbits = 9, j.distcode = be, j.distbits = 5;
              }
              function Fe(j, bt, at, Wt) {
                var _t, $ = j.state;
                return $.window === null && ($.wsize = 1 << $.wbits, $.wnext = 0, $.whave = 0, $.window = new o.Buf8($.wsize)), Wt >= $.wsize ? (o.arraySet($.window, bt, at - $.wsize, $.wsize, 0), $.wnext = 0, $.whave = $.wsize) : (_t = $.wsize - $.wnext, _t > Wt && (_t = Wt), o.arraySet($.window, bt, at - Wt, _t, $.wnext), Wt -= _t, Wt ? (o.arraySet($.window, bt, at - Wt, Wt, 0), $.wnext = Wt, $.whave = $.wsize) : ($.wnext += _t, $.wnext === $.wsize && ($.wnext = 0), $.whave < $.wsize && ($.whave += _t))), 0;
              }
              function It(j, bt) {
                var at, Wt, _t, $, Jt, te, Ct, Ht, oe, Le, De, ke, Ne, rn, tr = 0, Ze, br, Ir, Zr, Cn, Mn, rr, nn, Mr = new o.Buf8(4), $r, Wr, Hn = (
                  /* permutation of code lengths */
                  [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
                );
                if (!j || !j.state || !j.output || !j.input && j.avail_in !== 0)
                  return w;
                at = j.state, at.mode === yt && (at.mode = xt), Jt = j.next_out, _t = j.output, Ct = j.avail_out, $ = j.next_in, Wt = j.input, te = j.avail_in, Ht = at.hold, oe = at.bits, Le = te, De = Ct, nn = g;
                t:
                  for (; ; )
                    switch (at.mode) {
                      case E:
                        if (at.wrap === 0) {
                          at.mode = xt;
                          break;
                        }
                        for (; oe < 16; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        if (at.wrap & 2 && Ht === 35615) {
                          at.check = 0, Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, at.check = n(at.check, Mr, 2, 0), Ht = 0, oe = 0, at.mode = F;
                          break;
                        }
                        if (at.flags = 0, at.head && (at.head.done = !1), !(at.wrap & 1) || /* check if zlib header allowed */
                        (((Ht & 255) << 8) + (Ht >> 8)) % 31) {
                          j.msg = "incorrect header check", at.mode = tt;
                          break;
                        }
                        if ((Ht & 15) !== C) {
                          j.msg = "unknown compression method", at.mode = tt;
                          break;
                        }
                        if (Ht >>>= 4, oe -= 4, rr = (Ht & 15) + 8, at.wbits === 0)
                          at.wbits = rr;
                        else if (rr > at.wbits) {
                          j.msg = "invalid window size", at.mode = tt;
                          break;
                        }
                        at.dmax = 1 << rr, j.adler = at.check = 1, at.mode = Ht & 512 ? J : yt, Ht = 0, oe = 0;
                        break;
                      case F:
                        for (; oe < 16; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        if (at.flags = Ht, (at.flags & 255) !== C) {
                          j.msg = "unknown compression method", at.mode = tt;
                          break;
                        }
                        if (at.flags & 57344) {
                          j.msg = "unknown header flags set", at.mode = tt;
                          break;
                        }
                        at.head && (at.head.text = Ht >> 8 & 1), at.flags & 512 && (Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, at.check = n(at.check, Mr, 2, 0)), Ht = 0, oe = 0, at.mode = x;
                      case x:
                        for (; oe < 32; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        at.head && (at.head.time = Ht), at.flags & 512 && (Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, Mr[2] = Ht >>> 16 & 255, Mr[3] = Ht >>> 24 & 255, at.check = n(at.check, Mr, 4, 0)), Ht = 0, oe = 0, at.mode = P;
                      case P:
                        for (; oe < 16; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        at.head && (at.head.xflags = Ht & 255, at.head.os = Ht >> 8), at.flags & 512 && (Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, at.check = n(at.check, Mr, 2, 0)), Ht = 0, oe = 0, at.mode = L;
                      case L:
                        if (at.flags & 1024) {
                          for (; oe < 16; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          at.length = Ht, at.head && (at.head.extra_len = Ht), at.flags & 512 && (Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, at.check = n(at.check, Mr, 2, 0)), Ht = 0, oe = 0;
                        } else
                          at.head && (at.head.extra = null);
                        at.mode = N;
                      case N:
                        if (at.flags & 1024 && (ke = at.length, ke > te && (ke = te), ke && (at.head && (rr = at.head.extra_len - at.length, at.head.extra || (at.head.extra = new Array(at.head.extra_len)), o.arraySet(
                          at.head.extra,
                          Wt,
                          $,
                          // extra field is limited to 65536 bytes
                          // - no need for additional size check
                          ke,
                          /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                          rr
                        )), at.flags & 512 && (at.check = n(at.check, Wt, ke, $)), te -= ke, $ += ke, at.length -= ke), at.length))
                          break t;
                        at.length = 0, at.mode = M;
                      case M:
                        if (at.flags & 2048) {
                          if (te === 0)
                            break t;
                          ke = 0;
                          do
                            rr = Wt[$ + ke++], at.head && rr && at.length < 65536 && (at.head.name += String.fromCharCode(rr));
                          while (rr && ke < te);
                          if (at.flags & 512 && (at.check = n(at.check, Wt, ke, $)), te -= ke, $ += ke, rr)
                            break t;
                        } else
                          at.head && (at.head.name = null);
                        at.length = 0, at.mode = K;
                      case K:
                        if (at.flags & 4096) {
                          if (te === 0)
                            break t;
                          ke = 0;
                          do
                            rr = Wt[$ + ke++], at.head && rr && at.length < 65536 && (at.head.comment += String.fromCharCode(rr));
                          while (rr && ke < te);
                          if (at.flags & 512 && (at.check = n(at.check, Wt, ke, $)), te -= ke, $ += ke, rr)
                            break t;
                        } else
                          at.head && (at.head.comment = null);
                        at.mode = ut;
                      case ut:
                        if (at.flags & 512) {
                          for (; oe < 16; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          if (Ht !== (at.check & 65535)) {
                            j.msg = "header crc mismatch", at.mode = tt;
                            break;
                          }
                          Ht = 0, oe = 0;
                        }
                        at.head && (at.head.hcrc = at.flags >> 9 & 1, at.head.done = !0), j.adler = at.check = 0, at.mode = yt;
                        break;
                      case J:
                        for (; oe < 32; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        j.adler = at.check = ae(Ht), Ht = 0, oe = 0, at.mode = rt;
                      case rt:
                        if (at.havedict === 0)
                          return j.next_out = Jt, j.avail_out = Ct, j.next_in = $, j.avail_in = te, at.hold = Ht, at.bits = oe, m;
                        j.adler = at.check = 1, at.mode = yt;
                      case yt:
                        if (bt === v || bt === y)
                          break t;
                      case xt:
                        if (at.last) {
                          Ht >>>= oe & 7, oe -= oe & 7, at.mode = k;
                          break;
                        }
                        for (; oe < 3; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        switch (at.last = Ht & 1, Ht >>>= 1, oe -= 1, Ht & 3) {
                          case 0:
                            at.mode = Et;
                            break;
                          case 1:
                            if (Pe(at), at.mode = ct, bt === y) {
                              Ht >>>= 2, oe -= 2;
                              break t;
                            }
                            break;
                          case 2:
                            at.mode = Ut;
                            break;
                          case 3:
                            j.msg = "invalid block type", at.mode = tt;
                        }
                        Ht >>>= 2, oe -= 2;
                        break;
                      case Et:
                        for (Ht >>>= oe & 7, oe -= oe & 7; oe < 32; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        if ((Ht & 65535) !== (Ht >>> 16 ^ 65535)) {
                          j.msg = "invalid stored block lengths", at.mode = tt;
                          break;
                        }
                        if (at.length = Ht & 65535, Ht = 0, oe = 0, at.mode = Ft, bt === y)
                          break t;
                      case Ft:
                        at.mode = Rt;
                      case Rt:
                        if (ke = at.length, ke) {
                          if (ke > te && (ke = te), ke > Ct && (ke = Ct), ke === 0)
                            break t;
                          o.arraySet(_t, Wt, $, ke, Jt), te -= ke, $ += ke, Ct -= ke, Jt += ke, at.length -= ke;
                          break;
                        }
                        at.mode = yt;
                        break;
                      case Ut:
                        for (; oe < 14; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        if (at.nlen = (Ht & 31) + 257, Ht >>>= 5, oe -= 5, at.ndist = (Ht & 31) + 1, Ht >>>= 5, oe -= 5, at.ncode = (Ht & 15) + 4, Ht >>>= 4, oe -= 4, at.nlen > 286 || at.ndist > 30) {
                          j.msg = "too many length or distance symbols", at.mode = tt;
                          break;
                        }
                        at.have = 0, at.mode = Q;
                      case Q:
                        for (; at.have < at.ncode; ) {
                          for (; oe < 3; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          at.lens[Hn[at.have++]] = Ht & 7, Ht >>>= 3, oe -= 3;
                        }
                        for (; at.have < 19; )
                          at.lens[Hn[at.have++]] = 0;
                        if (at.lencode = at.lendyn, at.lenbits = 7, $r = { bits: at.lenbits }, nn = f(l, at.lens, 0, 19, at.lencode, 0, at.work, $r), at.lenbits = $r.bits, nn) {
                          j.msg = "invalid code lengths set", at.mode = tt;
                          break;
                        }
                        at.have = 0, at.mode = pt;
                      case pt:
                        for (; at.have < at.nlen + at.ndist; ) {
                          for (; tr = at.lencode[Ht & (1 << at.lenbits) - 1], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Ze <= oe); ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          if (Ir < 16)
                            Ht >>>= Ze, oe -= Ze, at.lens[at.have++] = Ir;
                          else {
                            if (Ir === 16) {
                              for (Wr = Ze + 2; oe < Wr; ) {
                                if (te === 0)
                                  break t;
                                te--, Ht += Wt[$++] << oe, oe += 8;
                              }
                              if (Ht >>>= Ze, oe -= Ze, at.have === 0) {
                                j.msg = "invalid bit length repeat", at.mode = tt;
                                break;
                              }
                              rr = at.lens[at.have - 1], ke = 3 + (Ht & 3), Ht >>>= 2, oe -= 2;
                            } else if (Ir === 17) {
                              for (Wr = Ze + 3; oe < Wr; ) {
                                if (te === 0)
                                  break t;
                                te--, Ht += Wt[$++] << oe, oe += 8;
                              }
                              Ht >>>= Ze, oe -= Ze, rr = 0, ke = 3 + (Ht & 7), Ht >>>= 3, oe -= 3;
                            } else {
                              for (Wr = Ze + 7; oe < Wr; ) {
                                if (te === 0)
                                  break t;
                                te--, Ht += Wt[$++] << oe, oe += 8;
                              }
                              Ht >>>= Ze, oe -= Ze, rr = 0, ke = 11 + (Ht & 127), Ht >>>= 7, oe -= 7;
                            }
                            if (at.have + ke > at.nlen + at.ndist) {
                              j.msg = "invalid bit length repeat", at.mode = tt;
                              break;
                            }
                            for (; ke--; )
                              at.lens[at.have++] = rr;
                          }
                        }
                        if (at.mode === tt)
                          break;
                        if (at.lens[256] === 0) {
                          j.msg = "invalid code -- missing end-of-block", at.mode = tt;
                          break;
                        }
                        if (at.lenbits = 9, $r = { bits: at.lenbits }, nn = f(c, at.lens, 0, at.nlen, at.lencode, 0, at.work, $r), at.lenbits = $r.bits, nn) {
                          j.msg = "invalid literal/lengths set", at.mode = tt;
                          break;
                        }
                        if (at.distbits = 6, at.distcode = at.distdyn, $r = { bits: at.distbits }, nn = f(h, at.lens, at.nlen, at.ndist, at.distcode, 0, at.work, $r), at.distbits = $r.bits, nn) {
                          j.msg = "invalid distances set", at.mode = tt;
                          break;
                        }
                        if (at.mode = ct, bt === y)
                          break t;
                      case ct:
                        at.mode = ot;
                      case ot:
                        if (te >= 6 && Ct >= 258) {
                          j.next_out = Jt, j.avail_out = Ct, j.next_in = $, j.avail_in = te, at.hold = Ht, at.bits = oe, i(j, De), Jt = j.next_out, _t = j.output, Ct = j.avail_out, $ = j.next_in, Wt = j.input, te = j.avail_in, Ht = at.hold, oe = at.bits, at.mode === yt && (at.back = -1);
                          break;
                        }
                        for (at.back = 0; tr = at.lencode[Ht & (1 << at.lenbits) - 1], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Ze <= oe); ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        if (br && !(br & 240)) {
                          for (Zr = Ze, Cn = br, Mn = Ir; tr = at.lencode[Mn + ((Ht & (1 << Zr + Cn) - 1) >> Zr)], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Zr + Ze <= oe); ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          Ht >>>= Zr, oe -= Zr, at.back += Zr;
                        }
                        if (Ht >>>= Ze, oe -= Ze, at.back += Ze, at.length = Ir, br === 0) {
                          at.mode = S;
                          break;
                        }
                        if (br & 32) {
                          at.back = -1, at.mode = yt;
                          break;
                        }
                        if (br & 64) {
                          j.msg = "invalid literal/length code", at.mode = tt;
                          break;
                        }
                        at.extra = br & 15, at.mode = mt;
                      case mt:
                        if (at.extra) {
                          for (Wr = at.extra; oe < Wr; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          at.length += Ht & (1 << at.extra) - 1, Ht >>>= at.extra, oe -= at.extra, at.back += at.extra;
                        }
                        at.was = at.length, at.mode = G;
                      case G:
                        for (; tr = at.distcode[Ht & (1 << at.distbits) - 1], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Ze <= oe); ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[$++] << oe, oe += 8;
                        }
                        if (!(br & 240)) {
                          for (Zr = Ze, Cn = br, Mn = Ir; tr = at.distcode[Mn + ((Ht & (1 << Zr + Cn) - 1) >> Zr)], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Zr + Ze <= oe); ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          Ht >>>= Zr, oe -= Zr, at.back += Zr;
                        }
                        if (Ht >>>= Ze, oe -= Ze, at.back += Ze, br & 64) {
                          j.msg = "invalid distance code", at.mode = tt;
                          break;
                        }
                        at.offset = Ir, at.extra = br & 15, at.mode = Tt;
                      case Tt:
                        if (at.extra) {
                          for (Wr = at.extra; oe < Wr; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          at.offset += Ht & (1 << at.extra) - 1, Ht >>>= at.extra, oe -= at.extra, at.back += at.extra;
                        }
                        if (at.offset > at.dmax) {
                          j.msg = "invalid distance too far back", at.mode = tt;
                          break;
                        }
                        at.mode = z;
                      case z:
                        if (Ct === 0)
                          break t;
                        if (ke = De - Ct, at.offset > ke) {
                          if (ke = at.offset - ke, ke > at.whave && at.sane) {
                            j.msg = "invalid distance too far back", at.mode = tt;
                            break;
                          }
                          ke > at.wnext ? (ke -= at.wnext, Ne = at.wsize - ke) : Ne = at.wnext - ke, ke > at.length && (ke = at.length), rn = at.window;
                        } else
                          rn = _t, Ne = Jt - at.offset, ke = at.length;
                        ke > Ct && (ke = Ct), Ct -= ke, at.length -= ke;
                        do
                          _t[Jt++] = rn[Ne++];
                        while (--ke);
                        at.length === 0 && (at.mode = ot);
                        break;
                      case S:
                        if (Ct === 0)
                          break t;
                        _t[Jt++] = at.length, Ct--, at.mode = ot;
                        break;
                      case k:
                        if (at.wrap) {
                          for (; oe < 32; ) {
                            if (te === 0)
                              break t;
                            te--, Ht |= Wt[$++] << oe, oe += 8;
                          }
                          if (De -= Ct, j.total_out += De, at.total += De, De && (j.adler = at.check = /*UPDATE(state.check, put - _out, _out);*/
                          at.flags ? n(at.check, _t, De, Jt - De) : r(at.check, _t, De, Jt - De)), De = Ct, (at.flags ? Ht : ae(Ht)) !== at.check) {
                            j.msg = "incorrect data check", at.mode = tt;
                            break;
                          }
                          Ht = 0, oe = 0;
                        }
                        at.mode = V;
                      case V:
                        if (at.wrap && at.flags) {
                          for (; oe < 32; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[$++] << oe, oe += 8;
                          }
                          if (Ht !== (at.total & 4294967295)) {
                            j.msg = "incorrect length check", at.mode = tt;
                            break;
                          }
                          Ht = 0, oe = 0;
                        }
                        at.mode = it;
                      case it:
                        nn = e;
                        break t;
                      case tt:
                        nn = D;
                        break t;
                      case _:
                        return I;
                      case At:
                      default:
                        return w;
                    }
                return j.next_out = Jt, j.avail_out = Ct, j.next_in = $, j.avail_in = te, at.hold = Ht, at.bits = oe, (at.wsize || De !== j.avail_out && at.mode < tt && (at.mode < k || bt !== a)) && Fe(j, j.output, j.next_out, De - j.avail_out), Le -= j.avail_in, De -= j.avail_out, j.total_in += Le, j.total_out += De, at.total += De, at.wrap && De && (j.adler = at.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
                at.flags ? n(at.check, _t, De, j.next_out - De) : r(at.check, _t, De, j.next_out - De)), j.data_type = at.bits + (at.last ? 64 : 0) + (at.mode === yt ? 128 : 0) + (at.mode === ct || at.mode === Ft ? 256 : 0), (Le === 0 && De === 0 || bt === a) && nn === g && (nn = T), nn;
              }
              function fe(j) {
                if (!j || !j.state)
                  return w;
                var bt = j.state;
                return bt.window && (bt.window = null), j.state = null, g;
              }
              function st(j, bt) {
                var at;
                return !j || !j.state || (at = j.state, !(at.wrap & 2)) ? w : (at.head = bt, bt.done = !1, g);
              }
              function Y(j, bt) {
                var at = bt.length, Wt, _t, $;
                return !j || !j.state || (Wt = j.state, Wt.wrap !== 0 && Wt.mode !== rt) ? w : Wt.mode === rt && (_t = 1, _t = r(_t, bt, at, 0), _t !== Wt.check) ? D : ($ = Fe(j, bt, at, at), $ ? (Wt.mode = _, I) : (Wt.havedict = 1, g));
              }
              d.inflateReset = ce, d.inflateReset2 = we, d.inflateResetKeep = xe, d.inflateInit = Qt, d.inflateInit2 = zt, d.inflate = It, d.inflateEnd = fe, d.inflateGetHeader = st, d.inflateSetDictionary = Y, d.inflateInfo = "pako inflate (from Nodeca project)";
            }
          ),
          /***/
          20598: (
            /***/
            function(u, d, t) {
              var o = t(69034), r = 15, n = 852, i = 592, f = 0, l = 1, c = 2, h = [
                /* Length codes 257..285 base */
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                13,
                15,
                17,
                19,
                23,
                27,
                31,
                35,
                43,
                51,
                59,
                67,
                83,
                99,
                115,
                131,
                163,
                195,
                227,
                258,
                0,
                0
              ], a = [
                /* Length codes 257..285 extra */
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                16,
                72,
                78
              ], v = [
                /* Distance codes 0..29 base */
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577,
                0,
                0
              ], y = [
                /* Distance codes 0..29 extra */
                16,
                16,
                16,
                16,
                17,
                17,
                18,
                18,
                19,
                19,
                20,
                20,
                21,
                21,
                22,
                22,
                23,
                23,
                24,
                24,
                25,
                25,
                26,
                26,
                27,
                27,
                28,
                28,
                29,
                29,
                64,
                64
              ];
              u.exports = function(e, m, w, D, I, T, C, E) {
                var F = E.bits, x = 0, P = 0, L = 0, N = 0, M = 0, K = 0, ut = 0, J = 0, rt = 0, yt = 0, xt, Et, Ft, Rt, Ut, Q = null, pt = 0, ct, ot = new o.Buf16(r + 1), mt = new o.Buf16(r + 1), G = null, Tt = 0, z, S, k;
                for (x = 0; x <= r; x++)
                  ot[x] = 0;
                for (P = 0; P < D; P++)
                  ot[m[w + P]]++;
                for (M = F, N = r; N >= 1 && ot[N] === 0; N--)
                  ;
                if (M > N && (M = N), N === 0)
                  return I[T++] = 20971520, I[T++] = 20971520, E.bits = 1, 0;
                for (L = 1; L < N && ot[L] === 0; L++)
                  ;
                for (M < L && (M = L), J = 1, x = 1; x <= r; x++)
                  if (J <<= 1, J -= ot[x], J < 0)
                    return -1;
                if (J > 0 && (e === f || N !== 1))
                  return -1;
                for (mt[1] = 0, x = 1; x < r; x++)
                  mt[x + 1] = mt[x] + ot[x];
                for (P = 0; P < D; P++)
                  m[w + P] !== 0 && (C[mt[m[w + P]]++] = P);
                if (e === f ? (Q = G = C, ct = 19) : e === l ? (Q = h, pt -= 257, G = a, Tt -= 257, ct = 256) : (Q = v, G = y, ct = -1), yt = 0, P = 0, x = L, Ut = T, K = M, ut = 0, Ft = -1, rt = 1 << M, Rt = rt - 1, e === l && rt > n || e === c && rt > i)
                  return 1;
                for (; ; ) {
                  z = x - ut, C[P] < ct ? (S = 0, k = C[P]) : C[P] > ct ? (S = G[Tt + C[P]], k = Q[pt + C[P]]) : (S = 96, k = 0), xt = 1 << x - ut, Et = 1 << K, L = Et;
                  do
                    Et -= xt, I[Ut + (yt >> ut) + Et] = z << 24 | S << 16 | k | 0;
                  while (Et !== 0);
                  for (xt = 1 << x - 1; yt & xt; )
                    xt >>= 1;
                  if (xt !== 0 ? (yt &= xt - 1, yt += xt) : yt = 0, P++, --ot[x] === 0) {
                    if (x === N)
                      break;
                    x = m[w + C[P]];
                  }
                  if (x > M && (yt & Rt) !== Ft) {
                    for (ut === 0 && (ut = M), Ut += L, K = x - ut, J = 1 << K; K + ut < N && (J -= ot[K + ut], !(J <= 0)); )
                      K++, J <<= 1;
                    if (rt += 1 << K, e === l && rt > n || e === c && rt > i)
                      return 1;
                    Ft = yt & Rt, I[Ft] = M << 24 | K << 16 | Ut - T | 0;
                  }
                }
                return yt !== 0 && (I[Ut + yt] = x - ut << 24 | 4194304 | 0), E.bits = M, 0;
              };
            }
          ),
          /***/
          44594: (
            /***/
            function(u) {
              u.exports = {
                2: "need dictionary",
                /* Z_NEED_DICT       2  */
                1: "stream end",
                /* Z_STREAM_END      1  */
                0: "",
                /* Z_OK              0  */
                "-1": "file error",
                /* Z_ERRNO         (-1) */
                "-2": "stream error",
                /* Z_STREAM_ERROR  (-2) */
                "-3": "data error",
                /* Z_DATA_ERROR    (-3) */
                "-4": "insufficient memory",
                /* Z_MEM_ERROR     (-4) */
                "-5": "buffer error",
                /* Z_BUF_ERROR     (-5) */
                "-6": "incompatible version"
                /* Z_VERSION_ERROR (-6) */
              };
            }
          ),
          /***/
          70376: (
            /***/
            function(u, d, t) {
              var o = t(69034), r = 4, n = 0, i = 1, f = 2;
              function l(It) {
                for (var fe = It.length; --fe >= 0; )
                  It[fe] = 0;
              }
              var c = 0, h = 1, a = 2, v = 3, y = 258, g = 29, e = 256, m = e + 1 + g, w = 30, D = 19, I = 2 * m + 1, T = 15, C = 16, E = 7, F = 256, x = 16, P = 17, L = 18, N = (
                /* extra bits for each length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
              ), M = (
                /* extra bits for each distance code */
                [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
              ), K = (
                /* extra bits for each bit length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
              ), ut = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], J = 512, rt = new Array((m + 2) * 2);
              l(rt);
              var yt = new Array(w * 2);
              l(yt);
              var xt = new Array(J);
              l(xt);
              var Et = new Array(y - v + 1);
              l(Et);
              var Ft = new Array(g);
              l(Ft);
              var Rt = new Array(w);
              l(Rt);
              function Ut(It, fe, st, Y, j) {
                this.static_tree = It, this.extra_bits = fe, this.extra_base = st, this.elems = Y, this.max_length = j, this.has_stree = It && It.length;
              }
              var Q, pt, ct;
              function ot(It, fe) {
                this.dyn_tree = It, this.max_code = 0, this.stat_desc = fe;
              }
              function mt(It) {
                return It < 256 ? xt[It] : xt[256 + (It >>> 7)];
              }
              function G(It, fe) {
                It.pending_buf[It.pending++] = fe & 255, It.pending_buf[It.pending++] = fe >>> 8 & 255;
              }
              function Tt(It, fe, st) {
                It.bi_valid > C - st ? (It.bi_buf |= fe << It.bi_valid & 65535, G(It, It.bi_buf), It.bi_buf = fe >> C - It.bi_valid, It.bi_valid += st - C) : (It.bi_buf |= fe << It.bi_valid & 65535, It.bi_valid += st);
              }
              function z(It, fe, st) {
                Tt(
                  It,
                  st[fe * 2],
                  st[fe * 2 + 1]
                  /*.Len*/
                );
              }
              function S(It, fe) {
                var st = 0;
                do
                  st |= It & 1, It >>>= 1, st <<= 1;
                while (--fe > 0);
                return st >>> 1;
              }
              function k(It) {
                It.bi_valid === 16 ? (G(It, It.bi_buf), It.bi_buf = 0, It.bi_valid = 0) : It.bi_valid >= 8 && (It.pending_buf[It.pending++] = It.bi_buf & 255, It.bi_buf >>= 8, It.bi_valid -= 8);
              }
              function V(It, fe) {
                var st = fe.dyn_tree, Y = fe.max_code, j = fe.stat_desc.static_tree, bt = fe.stat_desc.has_stree, at = fe.stat_desc.extra_bits, Wt = fe.stat_desc.extra_base, _t = fe.stat_desc.max_length, $, Jt, te, Ct, Ht, oe, Le = 0;
                for (Ct = 0; Ct <= T; Ct++)
                  It.bl_count[Ct] = 0;
                for (st[It.heap[It.heap_max] * 2 + 1] = 0, $ = It.heap_max + 1; $ < I; $++)
                  Jt = It.heap[$], Ct = st[st[Jt * 2 + 1] * 2 + 1] + 1, Ct > _t && (Ct = _t, Le++), st[Jt * 2 + 1] = Ct, !(Jt > Y) && (It.bl_count[Ct]++, Ht = 0, Jt >= Wt && (Ht = at[Jt - Wt]), oe = st[Jt * 2], It.opt_len += oe * (Ct + Ht), bt && (It.static_len += oe * (j[Jt * 2 + 1] + Ht)));
                if (Le !== 0) {
                  do {
                    for (Ct = _t - 1; It.bl_count[Ct] === 0; )
                      Ct--;
                    It.bl_count[Ct]--, It.bl_count[Ct + 1] += 2, It.bl_count[_t]--, Le -= 2;
                  } while (Le > 0);
                  for (Ct = _t; Ct !== 0; Ct--)
                    for (Jt = It.bl_count[Ct]; Jt !== 0; )
                      te = It.heap[--$], !(te > Y) && (st[te * 2 + 1] !== Ct && (It.opt_len += (Ct - st[te * 2 + 1]) * st[te * 2], st[te * 2 + 1] = Ct), Jt--);
                }
              }
              function it(It, fe, st) {
                var Y = new Array(T + 1), j = 0, bt, at;
                for (bt = 1; bt <= T; bt++)
                  Y[bt] = j = j + st[bt - 1] << 1;
                for (at = 0; at <= fe; at++) {
                  var Wt = It[at * 2 + 1];
                  Wt !== 0 && (It[at * 2] = S(Y[Wt]++, Wt));
                }
              }
              function tt() {
                var It, fe, st, Y, j, bt = new Array(T + 1);
                for (st = 0, Y = 0; Y < g - 1; Y++)
                  for (Ft[Y] = st, It = 0; It < 1 << N[Y]; It++)
                    Et[st++] = Y;
                for (Et[st - 1] = Y, j = 0, Y = 0; Y < 16; Y++)
                  for (Rt[Y] = j, It = 0; It < 1 << M[Y]; It++)
                    xt[j++] = Y;
                for (j >>= 7; Y < w; Y++)
                  for (Rt[Y] = j << 7, It = 0; It < 1 << M[Y] - 7; It++)
                    xt[256 + j++] = Y;
                for (fe = 0; fe <= T; fe++)
                  bt[fe] = 0;
                for (It = 0; It <= 143; )
                  rt[It * 2 + 1] = 8, It++, bt[8]++;
                for (; It <= 255; )
                  rt[It * 2 + 1] = 9, It++, bt[9]++;
                for (; It <= 279; )
                  rt[It * 2 + 1] = 7, It++, bt[7]++;
                for (; It <= 287; )
                  rt[It * 2 + 1] = 8, It++, bt[8]++;
                for (it(rt, m + 1, bt), It = 0; It < w; It++)
                  yt[It * 2 + 1] = 5, yt[It * 2] = S(It, 5);
                Q = new Ut(rt, N, e + 1, m, T), pt = new Ut(yt, M, 0, w, T), ct = new Ut(new Array(0), K, 0, D, E);
              }
              function _(It) {
                var fe;
                for (fe = 0; fe < m; fe++)
                  It.dyn_ltree[fe * 2] = 0;
                for (fe = 0; fe < w; fe++)
                  It.dyn_dtree[fe * 2] = 0;
                for (fe = 0; fe < D; fe++)
                  It.bl_tree[fe * 2] = 0;
                It.dyn_ltree[F * 2] = 1, It.opt_len = It.static_len = 0, It.last_lit = It.matches = 0;
              }
              function At(It) {
                It.bi_valid > 8 ? G(It, It.bi_buf) : It.bi_valid > 0 && (It.pending_buf[It.pending++] = It.bi_buf), It.bi_buf = 0, It.bi_valid = 0;
              }
              function Lt(It, fe, st, Y) {
                At(It), Y && (G(It, st), G(It, ~st)), o.arraySet(It.pending_buf, It.window, fe, st, It.pending), It.pending += st;
              }
              function Yt(It, fe, st, Y) {
                var j = fe * 2, bt = st * 2;
                return It[j] < It[bt] || It[j] === It[bt] && Y[fe] <= Y[st];
              }
              function Gt(It, fe, st) {
                for (var Y = It.heap[st], j = st << 1; j <= It.heap_len && (j < It.heap_len && Yt(fe, It.heap[j + 1], It.heap[j], It.depth) && j++, !Yt(fe, Y, It.heap[j], It.depth)); )
                  It.heap[st] = It.heap[j], st = j, j <<= 1;
                It.heap[st] = Y;
              }
              function Dt(It, fe, st) {
                var Y, j, bt = 0, at, Wt;
                if (It.last_lit !== 0)
                  do
                    Y = It.pending_buf[It.d_buf + bt * 2] << 8 | It.pending_buf[It.d_buf + bt * 2 + 1], j = It.pending_buf[It.l_buf + bt], bt++, Y === 0 ? z(It, j, fe) : (at = Et[j], z(It, at + e + 1, fe), Wt = N[at], Wt !== 0 && (j -= Ft[at], Tt(It, j, Wt)), Y--, at = mt(Y), z(It, at, st), Wt = M[at], Wt !== 0 && (Y -= Rt[at], Tt(It, Y, Wt)));
                  while (bt < It.last_lit);
                z(It, F, fe);
              }
              function ae(It, fe) {
                var st = fe.dyn_tree, Y = fe.stat_desc.static_tree, j = fe.stat_desc.has_stree, bt = fe.stat_desc.elems, at, Wt, _t = -1, $;
                for (It.heap_len = 0, It.heap_max = I, at = 0; at < bt; at++)
                  st[at * 2] !== 0 ? (It.heap[++It.heap_len] = _t = at, It.depth[at] = 0) : st[at * 2 + 1] = 0;
                for (; It.heap_len < 2; )
                  $ = It.heap[++It.heap_len] = _t < 2 ? ++_t : 0, st[$ * 2] = 1, It.depth[$] = 0, It.opt_len--, j && (It.static_len -= Y[$ * 2 + 1]);
                for (fe.max_code = _t, at = It.heap_len >> 1; at >= 1; at--)
                  Gt(It, st, at);
                $ = bt;
                do
                  at = It.heap[
                    1
                    /*SMALLEST*/
                  ], It.heap[
                    1
                    /*SMALLEST*/
                  ] = It.heap[It.heap_len--], Gt(
                    It,
                    st,
                    1
                    /*SMALLEST*/
                  ), Wt = It.heap[
                    1
                    /*SMALLEST*/
                  ], It.heap[--It.heap_max] = at, It.heap[--It.heap_max] = Wt, st[$ * 2] = st[at * 2] + st[Wt * 2], It.depth[$] = (It.depth[at] >= It.depth[Wt] ? It.depth[at] : It.depth[Wt]) + 1, st[at * 2 + 1] = st[Wt * 2 + 1] = $, It.heap[
                    1
                    /*SMALLEST*/
                  ] = $++, Gt(
                    It,
                    st,
                    1
                    /*SMALLEST*/
                  );
                while (It.heap_len >= 2);
                It.heap[--It.heap_max] = It.heap[
                  1
                  /*SMALLEST*/
                ], V(It, fe), it(st, _t, It.bl_count);
              }
              function Ae(It, fe, st) {
                var Y, j = -1, bt, at = fe[0 * 2 + 1], Wt = 0, _t = 7, $ = 4;
                for (at === 0 && (_t = 138, $ = 3), fe[(st + 1) * 2 + 1] = 65535, Y = 0; Y <= st; Y++)
                  bt = at, at = fe[(Y + 1) * 2 + 1], !(++Wt < _t && bt === at) && (Wt < $ ? It.bl_tree[bt * 2] += Wt : bt !== 0 ? (bt !== j && It.bl_tree[bt * 2]++, It.bl_tree[x * 2]++) : Wt <= 10 ? It.bl_tree[P * 2]++ : It.bl_tree[L * 2]++, Wt = 0, j = bt, at === 0 ? (_t = 138, $ = 3) : bt === at ? (_t = 6, $ = 3) : (_t = 7, $ = 4));
              }
              function xe(It, fe, st) {
                var Y, j = -1, bt, at = fe[0 * 2 + 1], Wt = 0, _t = 7, $ = 4;
                for (at === 0 && (_t = 138, $ = 3), Y = 0; Y <= st; Y++)
                  if (bt = at, at = fe[(Y + 1) * 2 + 1], !(++Wt < _t && bt === at)) {
                    if (Wt < $)
                      do
                        z(It, bt, It.bl_tree);
                      while (--Wt !== 0);
                    else
                      bt !== 0 ? (bt !== j && (z(It, bt, It.bl_tree), Wt--), z(It, x, It.bl_tree), Tt(It, Wt - 3, 2)) : Wt <= 10 ? (z(It, P, It.bl_tree), Tt(It, Wt - 3, 3)) : (z(It, L, It.bl_tree), Tt(It, Wt - 11, 7));
                    Wt = 0, j = bt, at === 0 ? (_t = 138, $ = 3) : bt === at ? (_t = 6, $ = 3) : (_t = 7, $ = 4);
                  }
              }
              function ce(It) {
                var fe;
                for (Ae(It, It.dyn_ltree, It.l_desc.max_code), Ae(It, It.dyn_dtree, It.d_desc.max_code), ae(It, It.bl_desc), fe = D - 1; fe >= 3 && It.bl_tree[ut[fe] * 2 + 1] === 0; fe--)
                  ;
                return It.opt_len += 3 * (fe + 1) + 5 + 5 + 4, fe;
              }
              function we(It, fe, st, Y) {
                var j;
                for (Tt(It, fe - 257, 5), Tt(It, st - 1, 5), Tt(It, Y - 4, 4), j = 0; j < Y; j++)
                  Tt(It, It.bl_tree[ut[j] * 2 + 1], 3);
                xe(It, It.dyn_ltree, fe - 1), xe(It, It.dyn_dtree, st - 1);
              }
              function zt(It) {
                var fe = 4093624447, st;
                for (st = 0; st <= 31; st++, fe >>>= 1)
                  if (fe & 1 && It.dyn_ltree[st * 2] !== 0)
                    return n;
                if (It.dyn_ltree[18] !== 0 || It.dyn_ltree[20] !== 0 || It.dyn_ltree[26] !== 0)
                  return i;
                for (st = 32; st < e; st++)
                  if (It.dyn_ltree[st * 2] !== 0)
                    return i;
                return n;
              }
              var Qt = !1;
              function le(It) {
                Qt || (tt(), Qt = !0), It.l_desc = new ot(It.dyn_ltree, Q), It.d_desc = new ot(It.dyn_dtree, pt), It.bl_desc = new ot(It.bl_tree, ct), It.bi_buf = 0, It.bi_valid = 0, _(It);
              }
              function de(It, fe, st, Y) {
                Tt(It, (c << 1) + (Y ? 1 : 0), 3), Lt(It, fe, st, !0);
              }
              function be(It) {
                Tt(It, h << 1, 3), z(It, F, rt), k(It);
              }
              function Pe(It, fe, st, Y) {
                var j, bt, at = 0;
                It.level > 0 ? (It.strm.data_type === f && (It.strm.data_type = zt(It)), ae(It, It.l_desc), ae(It, It.d_desc), at = ce(It), j = It.opt_len + 3 + 7 >>> 3, bt = It.static_len + 3 + 7 >>> 3, bt <= j && (j = bt)) : j = bt = st + 5, st + 4 <= j && fe !== -1 ? de(It, fe, st, Y) : It.strategy === r || bt === j ? (Tt(It, (h << 1) + (Y ? 1 : 0), 3), Dt(It, rt, yt)) : (Tt(It, (a << 1) + (Y ? 1 : 0), 3), we(It, It.l_desc.max_code + 1, It.d_desc.max_code + 1, at + 1), Dt(It, It.dyn_ltree, It.dyn_dtree)), _(It), Y && At(It);
              }
              function Fe(It, fe, st) {
                return It.pending_buf[It.d_buf + It.last_lit * 2] = fe >>> 8 & 255, It.pending_buf[It.d_buf + It.last_lit * 2 + 1] = fe & 255, It.pending_buf[It.l_buf + It.last_lit] = st & 255, It.last_lit++, fe === 0 ? It.dyn_ltree[st * 2]++ : (It.matches++, fe--, It.dyn_ltree[(Et[st] + e + 1) * 2]++, It.dyn_dtree[mt(fe) * 2]++), It.last_lit === It.lit_bufsize - 1;
              }
              d._tr_init = le, d._tr_stored_block = de, d._tr_flush_block = Pe, d._tr_tally = Fe, d._tr_align = be;
            }
          ),
          /***/
          28755: (
            /***/
            function(u) {
              function d() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
              }
              u.exports = d;
            }
          ),
          /***/
          82530: (
            /***/
            function(u) {
              var d = u.exports = {}, t, o;
              function r() {
                throw new Error("setTimeout has not been defined");
              }
              function n() {
                throw new Error("clearTimeout has not been defined");
              }
              (function() {
                try {
                  typeof setTimeout == "function" ? t = setTimeout : t = r;
                } catch {
                  t = r;
                }
                try {
                  typeof clearTimeout == "function" ? o = clearTimeout : o = n;
                } catch {
                  o = n;
                }
              })();
              function i(m) {
                if (t === setTimeout)
                  return setTimeout(m, 0);
                if ((t === r || !t) && setTimeout)
                  return t = setTimeout, setTimeout(m, 0);
                try {
                  return t(m, 0);
                } catch {
                  try {
                    return t.call(null, m, 0);
                  } catch {
                    return t.call(this, m, 0);
                  }
                }
              }
              function f(m) {
                if (o === clearTimeout)
                  return clearTimeout(m);
                if ((o === n || !o) && clearTimeout)
                  return o = clearTimeout, clearTimeout(m);
                try {
                  return o(m);
                } catch {
                  try {
                    return o.call(null, m);
                  } catch {
                    return o.call(this, m);
                  }
                }
              }
              var l = [], c = !1, h, a = -1;
              function v() {
                !c || !h || (c = !1, h.length ? l = h.concat(l) : a = -1, l.length && y());
              }
              function y() {
                if (!c) {
                  var m = i(v);
                  c = !0;
                  for (var w = l.length; w; ) {
                    for (h = l, l = []; ++a < w; )
                      h && h[a].run();
                    a = -1, w = l.length;
                  }
                  h = null, c = !1, f(m);
                }
              }
              d.nextTick = function(m) {
                var w = new Array(arguments.length - 1);
                if (arguments.length > 1)
                  for (var D = 1; D < arguments.length; D++)
                    w[D - 1] = arguments[D];
                l.push(new g(m, w)), l.length === 1 && !c && i(y);
              };
              function g(m, w) {
                this.fun = m, this.array = w;
              }
              g.prototype.run = function() {
                this.fun.apply(null, this.array);
              }, d.title = "browser", d.browser = !0, d.env = {}, d.argv = [], d.version = "", d.versions = {};
              function e() {
              }
              d.on = e, d.addListener = e, d.once = e, d.off = e, d.removeListener = e, d.removeAllListeners = e, d.emit = e, d.prependListener = e, d.prependOnceListener = e, d.listeners = function(m) {
                return [];
              }, d.binding = function(m) {
                throw new Error("process.binding is not supported");
              }, d.cwd = function() {
                return "/";
              }, d.chdir = function(m) {
                throw new Error("process.chdir is not supported");
              }, d.umask = function() {
                return 0;
              };
            }
          ),
          /***/
          73994: (
            /***/
            function(u, d, t) {
              var o = t(25021), r = Object, n = TypeError;
              u.exports = o(function() {
                if (this != null && this !== r(this))
                  throw new n("RegExp.prototype.flags getter called on non-object");
                var f = "";
                return this.hasIndices && (f += "d"), this.global && (f += "g"), this.ignoreCase && (f += "i"), this.multiline && (f += "m"), this.dotAll && (f += "s"), this.unicode && (f += "u"), this.unicodeSets && (f += "v"), this.sticky && (f += "y"), f;
              }, "get flags", !0);
            }
          ),
          /***/
          80251: (
            /***/
            function(u, d, t) {
              var o = t(19170), r = t(12550), n = t(73994), i = t(71856), f = t(47278), l = r(i());
              o(l, {
                getPolyfill: i,
                implementation: n,
                shim: f
              }), u.exports = l;
            }
          ),
          /***/
          71856: (
            /***/
            function(u, d, t) {
              var o = t(73994), r = t(19170).supportsDescriptors, n = Object.getOwnPropertyDescriptor;
              u.exports = function() {
                if (r && /a/mig.flags === "gim") {
                  var f = n(RegExp.prototype, "flags");
                  if (f && typeof f.get == "function" && typeof RegExp.prototype.dotAll == "boolean" && typeof RegExp.prototype.hasIndices == "boolean") {
                    var l = "", c = {};
                    if (Object.defineProperty(c, "hasIndices", {
                      get: function() {
                        l += "d";
                      }
                    }), Object.defineProperty(c, "sticky", {
                      get: function() {
                        l += "y";
                      }
                    }), l === "dy")
                      return f.get;
                  }
                }
                return o;
              };
            }
          ),
          /***/
          47278: (
            /***/
            function(u, d, t) {
              var o = t(19170).supportsDescriptors, r = t(71856), n = Object.getOwnPropertyDescriptor, i = Object.defineProperty, f = TypeError, l = Object.getPrototypeOf, c = /a/;
              u.exports = function() {
                if (!o || !l)
                  throw new f("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");
                var a = r(), v = l(c), y = n(v, "flags");
                return (!y || y.get !== a) && i(v, "flags", {
                  configurable: !0,
                  enumerable: !1,
                  get: a
                }), a;
              };
            }
          ),
          /***/
          53407: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer;
              (function(r) {
                r.parser = function(z, S) {
                  return new i(z, S);
                }, r.SAXParser = i, r.SAXStream = y, r.createStream = v, r.MAX_BUFFER_LENGTH = 65536;
                var n = [
                  "comment",
                  "sgmlDecl",
                  "textNode",
                  "tagName",
                  "doctype",
                  "procInstName",
                  "procInstBody",
                  "entity",
                  "attribName",
                  "attribValue",
                  "cdata",
                  "script"
                ];
                r.EVENTS = [
                  "text",
                  "processinginstruction",
                  "sgmldeclaration",
                  "doctype",
                  "comment",
                  "opentagstart",
                  "attribute",
                  "opentag",
                  "closetag",
                  "opencdata",
                  "cdata",
                  "closecdata",
                  "error",
                  "end",
                  "ready",
                  "script",
                  "opennamespace",
                  "closenamespace"
                ];
                function i(z, S) {
                  if (!(this instanceof i))
                    return new i(z, S);
                  var k = this;
                  l(k), k.q = k.c = "", k.bufferCheckPosition = r.MAX_BUFFER_LENGTH, k.opt = S || {}, k.opt.lowercase = k.opt.lowercase || k.opt.lowercasetags, k.looseCase = k.opt.lowercase ? "toLowerCase" : "toUpperCase", k.tags = [], k.closed = k.closedRoot = k.sawRoot = !1, k.tag = k.error = null, k.strict = !!z, k.noscript = !!(z || k.opt.noscript), k.state = M.BEGIN, k.strictEntities = k.opt.strictEntities, k.ENTITIES = k.strictEntities ? Object.create(r.XML_ENTITIES) : Object.create(r.ENTITIES), k.attribList = [], k.opt.xmlns && (k.ns = Object.create(D)), k.trackPosition = k.opt.position !== !1, k.trackPosition && (k.position = k.line = k.column = 0), ut(k, "onready");
                }
                Object.create || (Object.create = function(z) {
                  function S() {
                  }
                  S.prototype = z;
                  var k = new S();
                  return k;
                }), Object.keys || (Object.keys = function(z) {
                  var S = [];
                  for (var k in z)
                    z.hasOwnProperty(k) && S.push(k);
                  return S;
                });
                function f(z) {
                  for (var S = Math.max(r.MAX_BUFFER_LENGTH, 10), k = 0, V = 0, it = n.length; V < it; V++) {
                    var tt = z[n[V]].length;
                    if (tt > S)
                      switch (n[V]) {
                        case "textNode":
                          rt(z);
                          break;
                        case "cdata":
                          J(z, "oncdata", z.cdata), z.cdata = "";
                          break;
                        case "script":
                          J(z, "onscript", z.script), z.script = "";
                          break;
                        default:
                          xt(z, "Max buffer length exceeded: " + n[V]);
                      }
                    k = Math.max(k, tt);
                  }
                  var _ = r.MAX_BUFFER_LENGTH - k;
                  z.bufferCheckPosition = _ + z.position;
                }
                function l(z) {
                  for (var S = 0, k = n.length; S < k; S++)
                    z[n[S]] = "";
                }
                function c(z) {
                  rt(z), z.cdata !== "" && (J(z, "oncdata", z.cdata), z.cdata = ""), z.script !== "" && (J(z, "onscript", z.script), z.script = "");
                }
                i.prototype = {
                  end: function() {
                    Et(this);
                  },
                  write: Tt,
                  resume: function() {
                    return this.error = null, this;
                  },
                  close: function() {
                    return this.write(null);
                  },
                  flush: function() {
                    c(this);
                  }
                };
                var h;
                try {
                  h = t(20202).Stream;
                } catch {
                  h = function() {
                  };
                }
                h || (h = function() {
                });
                var a = r.EVENTS.filter(function(z) {
                  return z !== "error" && z !== "end";
                });
                function v(z, S) {
                  return new y(z, S);
                }
                function y(z, S) {
                  if (!(this instanceof y))
                    return new y(z, S);
                  h.apply(this), this._parser = new i(z, S), this.writable = !0, this.readable = !0;
                  var k = this;
                  this._parser.onend = function() {
                    k.emit("end");
                  }, this._parser.onerror = function(V) {
                    k.emit("error", V), k._parser.error = null;
                  }, this._decoder = null, a.forEach(function(V) {
                    Object.defineProperty(k, "on" + V, {
                      get: function() {
                        return k._parser["on" + V];
                      },
                      set: function(it) {
                        if (!it)
                          return k.removeAllListeners(V), k._parser["on" + V] = it, it;
                        k.on(V, it);
                      },
                      enumerable: !0,
                      configurable: !1
                    });
                  });
                }
                y.prototype = Object.create(h.prototype, {
                  constructor: {
                    value: y
                  }
                }), y.prototype.write = function(z) {
                  if (typeof o == "function" && typeof o.isBuffer == "function" && o.isBuffer(z)) {
                    if (!this._decoder) {
                      var S = t(10301).s;
                      this._decoder = new S("utf8");
                    }
                    z = this._decoder.write(z);
                  }
                  return this._parser.write(z.toString()), this.emit("data", z), !0;
                }, y.prototype.end = function(z) {
                  return z && z.length && this.write(z), this._parser.end(), !0;
                }, y.prototype.on = function(z, S) {
                  var k = this;
                  return !k._parser["on" + z] && a.indexOf(z) !== -1 && (k._parser["on" + z] = function() {
                    var V = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);
                    V.splice(0, 0, z), k.emit.apply(k, V);
                  }), h.prototype.on.call(k, z, S);
                };
                var g = "[CDATA[", e = "DOCTYPE", m = "http://www.w3.org/XML/1998/namespace", w = "http://www.w3.org/2000/xmlns/", D = { xml: m, xmlns: w }, I = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, T = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/, C = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, E = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;
                function F(z) {
                  return z === " " || z === `
` || z === "\r" || z === "	";
                }
                function x(z) {
                  return z === '"' || z === "'";
                }
                function P(z) {
                  return z === ">" || F(z);
                }
                function L(z, S) {
                  return z.test(S);
                }
                function N(z, S) {
                  return !L(z, S);
                }
                var M = 0;
                r.STATE = {
                  BEGIN: M++,
                  // leading byte order mark or whitespace
                  BEGIN_WHITESPACE: M++,
                  // leading whitespace
                  TEXT: M++,
                  // general stuff
                  TEXT_ENTITY: M++,
                  // &amp and such.
                  OPEN_WAKA: M++,
                  // <
                  SGML_DECL: M++,
                  // <!BLARG
                  SGML_DECL_QUOTED: M++,
                  // <!BLARG foo "bar
                  DOCTYPE: M++,
                  // <!DOCTYPE
                  DOCTYPE_QUOTED: M++,
                  // <!DOCTYPE "//blah
                  DOCTYPE_DTD: M++,
                  // <!DOCTYPE "//blah" [ ...
                  DOCTYPE_DTD_QUOTED: M++,
                  // <!DOCTYPE "//blah" [ "foo
                  COMMENT_STARTING: M++,
                  // <!-
                  COMMENT: M++,
                  // <!--
                  COMMENT_ENDING: M++,
                  // <!-- blah -
                  COMMENT_ENDED: M++,
                  // <!-- blah --
                  CDATA: M++,
                  // <![CDATA[ something
                  CDATA_ENDING: M++,
                  // ]
                  CDATA_ENDING_2: M++,
                  // ]]
                  PROC_INST: M++,
                  // <?hi
                  PROC_INST_BODY: M++,
                  // <?hi there
                  PROC_INST_ENDING: M++,
                  // <?hi "there" ?
                  OPEN_TAG: M++,
                  // <strong
                  OPEN_TAG_SLASH: M++,
                  // <strong /
                  ATTRIB: M++,
                  // <a
                  ATTRIB_NAME: M++,
                  // <a foo
                  ATTRIB_NAME_SAW_WHITE: M++,
                  // <a foo _
                  ATTRIB_VALUE: M++,
                  // <a foo=
                  ATTRIB_VALUE_QUOTED: M++,
                  // <a foo="bar
                  ATTRIB_VALUE_CLOSED: M++,
                  // <a foo="bar"
                  ATTRIB_VALUE_UNQUOTED: M++,
                  // <a foo=bar
                  ATTRIB_VALUE_ENTITY_Q: M++,
                  // <foo bar="&quot;"
                  ATTRIB_VALUE_ENTITY_U: M++,
                  // <foo bar=&quot
                  CLOSE_TAG: M++,
                  // </a
                  CLOSE_TAG_SAW_WHITE: M++,
                  // </a   >
                  SCRIPT: M++,
                  // <script> ...
                  SCRIPT_ENDING: M++
                  // <script> ... <
                }, r.XML_ENTITIES = {
                  amp: "&",
                  gt: ">",
                  lt: "<",
                  quot: '"',
                  apos: "'"
                }, r.ENTITIES = {
                  amp: "&",
                  gt: ">",
                  lt: "<",
                  quot: '"',
                  apos: "'",
                  AElig: 198,
                  Aacute: 193,
                  Acirc: 194,
                  Agrave: 192,
                  Aring: 197,
                  Atilde: 195,
                  Auml: 196,
                  Ccedil: 199,
                  ETH: 208,
                  Eacute: 201,
                  Ecirc: 202,
                  Egrave: 200,
                  Euml: 203,
                  Iacute: 205,
                  Icirc: 206,
                  Igrave: 204,
                  Iuml: 207,
                  Ntilde: 209,
                  Oacute: 211,
                  Ocirc: 212,
                  Ograve: 210,
                  Oslash: 216,
                  Otilde: 213,
                  Ouml: 214,
                  THORN: 222,
                  Uacute: 218,
                  Ucirc: 219,
                  Ugrave: 217,
                  Uuml: 220,
                  Yacute: 221,
                  aacute: 225,
                  acirc: 226,
                  aelig: 230,
                  agrave: 224,
                  aring: 229,
                  atilde: 227,
                  auml: 228,
                  ccedil: 231,
                  eacute: 233,
                  ecirc: 234,
                  egrave: 232,
                  eth: 240,
                  euml: 235,
                  iacute: 237,
                  icirc: 238,
                  igrave: 236,
                  iuml: 239,
                  ntilde: 241,
                  oacute: 243,
                  ocirc: 244,
                  ograve: 242,
                  oslash: 248,
                  otilde: 245,
                  ouml: 246,
                  szlig: 223,
                  thorn: 254,
                  uacute: 250,
                  ucirc: 251,
                  ugrave: 249,
                  uuml: 252,
                  yacute: 253,
                  yuml: 255,
                  copy: 169,
                  reg: 174,
                  nbsp: 160,
                  iexcl: 161,
                  cent: 162,
                  pound: 163,
                  curren: 164,
                  yen: 165,
                  brvbar: 166,
                  sect: 167,
                  uml: 168,
                  ordf: 170,
                  laquo: 171,
                  not: 172,
                  shy: 173,
                  macr: 175,
                  deg: 176,
                  plusmn: 177,
                  sup1: 185,
                  sup2: 178,
                  sup3: 179,
                  acute: 180,
                  micro: 181,
                  para: 182,
                  middot: 183,
                  cedil: 184,
                  ordm: 186,
                  raquo: 187,
                  frac14: 188,
                  frac12: 189,
                  frac34: 190,
                  iquest: 191,
                  times: 215,
                  divide: 247,
                  OElig: 338,
                  oelig: 339,
                  Scaron: 352,
                  scaron: 353,
                  Yuml: 376,
                  fnof: 402,
                  circ: 710,
                  tilde: 732,
                  Alpha: 913,
                  Beta: 914,
                  Gamma: 915,
                  Delta: 916,
                  Epsilon: 917,
                  Zeta: 918,
                  Eta: 919,
                  Theta: 920,
                  Iota: 921,
                  Kappa: 922,
                  Lambda: 923,
                  Mu: 924,
                  Nu: 925,
                  Xi: 926,
                  Omicron: 927,
                  Pi: 928,
                  Rho: 929,
                  Sigma: 931,
                  Tau: 932,
                  Upsilon: 933,
                  Phi: 934,
                  Chi: 935,
                  Psi: 936,
                  Omega: 937,
                  alpha: 945,
                  beta: 946,
                  gamma: 947,
                  delta: 948,
                  epsilon: 949,
                  zeta: 950,
                  eta: 951,
                  theta: 952,
                  iota: 953,
                  kappa: 954,
                  lambda: 955,
                  mu: 956,
                  nu: 957,
                  xi: 958,
                  omicron: 959,
                  pi: 960,
                  rho: 961,
                  sigmaf: 962,
                  sigma: 963,
                  tau: 964,
                  upsilon: 965,
                  phi: 966,
                  chi: 967,
                  psi: 968,
                  omega: 969,
                  thetasym: 977,
                  upsih: 978,
                  piv: 982,
                  ensp: 8194,
                  emsp: 8195,
                  thinsp: 8201,
                  zwnj: 8204,
                  zwj: 8205,
                  lrm: 8206,
                  rlm: 8207,
                  ndash: 8211,
                  mdash: 8212,
                  lsquo: 8216,
                  rsquo: 8217,
                  sbquo: 8218,
                  ldquo: 8220,
                  rdquo: 8221,
                  bdquo: 8222,
                  dagger: 8224,
                  Dagger: 8225,
                  bull: 8226,
                  hellip: 8230,
                  permil: 8240,
                  prime: 8242,
                  Prime: 8243,
                  lsaquo: 8249,
                  rsaquo: 8250,
                  oline: 8254,
                  frasl: 8260,
                  euro: 8364,
                  image: 8465,
                  weierp: 8472,
                  real: 8476,
                  trade: 8482,
                  alefsym: 8501,
                  larr: 8592,
                  uarr: 8593,
                  rarr: 8594,
                  darr: 8595,
                  harr: 8596,
                  crarr: 8629,
                  lArr: 8656,
                  uArr: 8657,
                  rArr: 8658,
                  dArr: 8659,
                  hArr: 8660,
                  forall: 8704,
                  part: 8706,
                  exist: 8707,
                  empty: 8709,
                  nabla: 8711,
                  isin: 8712,
                  notin: 8713,
                  ni: 8715,
                  prod: 8719,
                  sum: 8721,
                  minus: 8722,
                  lowast: 8727,
                  radic: 8730,
                  prop: 8733,
                  infin: 8734,
                  ang: 8736,
                  and: 8743,
                  or: 8744,
                  cap: 8745,
                  cup: 8746,
                  int: 8747,
                  there4: 8756,
                  sim: 8764,
                  cong: 8773,
                  asymp: 8776,
                  ne: 8800,
                  equiv: 8801,
                  le: 8804,
                  ge: 8805,
                  sub: 8834,
                  sup: 8835,
                  nsub: 8836,
                  sube: 8838,
                  supe: 8839,
                  oplus: 8853,
                  otimes: 8855,
                  perp: 8869,
                  sdot: 8901,
                  lceil: 8968,
                  rceil: 8969,
                  lfloor: 8970,
                  rfloor: 8971,
                  lang: 9001,
                  rang: 9002,
                  loz: 9674,
                  spades: 9824,
                  clubs: 9827,
                  hearts: 9829,
                  diams: 9830
                }, Object.keys(r.ENTITIES).forEach(function(z) {
                  var S = r.ENTITIES[z], k = typeof S == "number" ? String.fromCharCode(S) : S;
                  r.ENTITIES[z] = k;
                });
                for (var K in r.STATE)
                  r.STATE[r.STATE[K]] = K;
                M = r.STATE;
                function ut(z, S, k) {
                  z[S] && z[S](k);
                }
                function J(z, S, k) {
                  z.textNode && rt(z), ut(z, S, k);
                }
                function rt(z) {
                  z.textNode = yt(z.opt, z.textNode), z.textNode && ut(z, "ontext", z.textNode), z.textNode = "";
                }
                function yt(z, S) {
                  return z.trim && (S = S.trim()), z.normalize && (S = S.replace(/\s+/g, " ")), S;
                }
                function xt(z, S) {
                  return rt(z), z.trackPosition && (S += `
Line: ` + z.line + `
Column: ` + z.column + `
Char: ` + z.c), S = new Error(S), z.error = S, ut(z, "onerror", S), z;
                }
                function Et(z) {
                  return z.sawRoot && !z.closedRoot && Ft(z, "Unclosed root tag"), z.state !== M.BEGIN && z.state !== M.BEGIN_WHITESPACE && z.state !== M.TEXT && xt(z, "Unexpected end"), rt(z), z.c = "", z.closed = !0, ut(z, "onend"), i.call(z, z.strict, z.opt), z;
                }
                function Ft(z, S) {
                  if (typeof z != "object" || !(z instanceof i))
                    throw new Error("bad call to strictFail");
                  z.strict && xt(z, S);
                }
                function Rt(z) {
                  z.strict || (z.tagName = z.tagName[z.looseCase]());
                  var S = z.tags[z.tags.length - 1] || z, k = z.tag = { name: z.tagName, attributes: {} };
                  z.opt.xmlns && (k.ns = S.ns), z.attribList.length = 0, J(z, "onopentagstart", k);
                }
                function Ut(z, S) {
                  var k = z.indexOf(":"), V = k < 0 ? ["", z] : z.split(":"), it = V[0], tt = V[1];
                  return S && z === "xmlns" && (it = "xmlns", tt = ""), { prefix: it, local: tt };
                }
                function Q(z) {
                  if (z.strict || (z.attribName = z.attribName[z.looseCase]()), z.attribList.indexOf(z.attribName) !== -1 || z.tag.attributes.hasOwnProperty(z.attribName)) {
                    z.attribName = z.attribValue = "";
                    return;
                  }
                  if (z.opt.xmlns) {
                    var S = Ut(z.attribName, !0), k = S.prefix, V = S.local;
                    if (k === "xmlns")
                      if (V === "xml" && z.attribValue !== m)
                        Ft(
                          z,
                          "xml: prefix must be bound to " + m + `
Actual: ` + z.attribValue
                        );
                      else if (V === "xmlns" && z.attribValue !== w)
                        Ft(
                          z,
                          "xmlns: prefix must be bound to " + w + `
Actual: ` + z.attribValue
                        );
                      else {
                        var it = z.tag, tt = z.tags[z.tags.length - 1] || z;
                        it.ns === tt.ns && (it.ns = Object.create(tt.ns)), it.ns[V] = z.attribValue;
                      }
                    z.attribList.push([z.attribName, z.attribValue]);
                  } else
                    z.tag.attributes[z.attribName] = z.attribValue, J(z, "onattribute", {
                      name: z.attribName,
                      value: z.attribValue
                    });
                  z.attribName = z.attribValue = "";
                }
                function pt(z, S) {
                  if (z.opt.xmlns) {
                    var k = z.tag, V = Ut(z.tagName);
                    k.prefix = V.prefix, k.local = V.local, k.uri = k.ns[V.prefix] || "", k.prefix && !k.uri && (Ft(z, "Unbound namespace prefix: " + JSON.stringify(z.tagName)), k.uri = V.prefix);
                    var it = z.tags[z.tags.length - 1] || z;
                    k.ns && it.ns !== k.ns && Object.keys(k.ns).forEach(function(ce) {
                      J(z, "onopennamespace", {
                        prefix: ce,
                        uri: k.ns[ce]
                      });
                    });
                    for (var tt = 0, _ = z.attribList.length; tt < _; tt++) {
                      var At = z.attribList[tt], Lt = At[0], Yt = At[1], Gt = Ut(Lt, !0), Dt = Gt.prefix, ae = Gt.local, Ae = Dt === "" ? "" : k.ns[Dt] || "", xe = {
                        name: Lt,
                        value: Yt,
                        prefix: Dt,
                        local: ae,
                        uri: Ae
                      };
                      Dt && Dt !== "xmlns" && !Ae && (Ft(z, "Unbound namespace prefix: " + JSON.stringify(Dt)), xe.uri = Dt), z.tag.attributes[Lt] = xe, J(z, "onattribute", xe);
                    }
                    z.attribList.length = 0;
                  }
                  z.tag.isSelfClosing = !!S, z.sawRoot = !0, z.tags.push(z.tag), J(z, "onopentag", z.tag), S || (!z.noscript && z.tagName.toLowerCase() === "script" ? z.state = M.SCRIPT : z.state = M.TEXT, z.tag = null, z.tagName = ""), z.attribName = z.attribValue = "", z.attribList.length = 0;
                }
                function ct(z) {
                  if (!z.tagName) {
                    Ft(z, "Weird empty close tag."), z.textNode += "</>", z.state = M.TEXT;
                    return;
                  }
                  if (z.script) {
                    if (z.tagName !== "script") {
                      z.script += "</" + z.tagName + ">", z.tagName = "", z.state = M.SCRIPT;
                      return;
                    }
                    J(z, "onscript", z.script), z.script = "";
                  }
                  var S = z.tags.length, k = z.tagName;
                  z.strict || (k = k[z.looseCase]());
                  for (var V = k; S--; ) {
                    var it = z.tags[S];
                    if (it.name !== V)
                      Ft(z, "Unexpected close tag");
                    else
                      break;
                  }
                  if (S < 0) {
                    Ft(z, "Unmatched closing tag: " + z.tagName), z.textNode += "</" + z.tagName + ">", z.state = M.TEXT;
                    return;
                  }
                  z.tagName = k;
                  for (var tt = z.tags.length; tt-- > S; ) {
                    var _ = z.tag = z.tags.pop();
                    z.tagName = z.tag.name, J(z, "onclosetag", z.tagName);
                    var At = {};
                    for (var Lt in _.ns)
                      At[Lt] = _.ns[Lt];
                    var Yt = z.tags[z.tags.length - 1] || z;
                    z.opt.xmlns && _.ns !== Yt.ns && Object.keys(_.ns).forEach(function(Gt) {
                      var Dt = _.ns[Gt];
                      J(z, "onclosenamespace", { prefix: Gt, uri: Dt });
                    });
                  }
                  S === 0 && (z.closedRoot = !0), z.tagName = z.attribValue = z.attribName = "", z.attribList.length = 0, z.state = M.TEXT;
                }
                function ot(z) {
                  var S = z.entity, k = S.toLowerCase(), V, it = "";
                  return z.ENTITIES[S] ? z.ENTITIES[S] : z.ENTITIES[k] ? z.ENTITIES[k] : (S = k, S.charAt(0) === "#" && (S.charAt(1) === "x" ? (S = S.slice(2), V = parseInt(S, 16), it = V.toString(16)) : (S = S.slice(1), V = parseInt(S, 10), it = V.toString(10))), S = S.replace(/^0+/, ""), isNaN(V) || it.toLowerCase() !== S ? (Ft(z, "Invalid character entity"), "&" + z.entity + ";") : String.fromCodePoint(V));
                }
                function mt(z, S) {
                  S === "<" ? (z.state = M.OPEN_WAKA, z.startTagPosition = z.position) : F(S) || (Ft(z, "Non-whitespace before first tag."), z.textNode = S, z.state = M.TEXT);
                }
                function G(z, S) {
                  var k = "";
                  return S < z.length && (k = z.charAt(S)), k;
                }
                function Tt(z) {
                  var S = this;
                  if (this.error)
                    throw this.error;
                  if (S.closed)
                    return xt(
                      S,
                      "Cannot write after close. Assign an onready handler."
                    );
                  if (z === null)
                    return Et(S);
                  typeof z == "object" && (z = z.toString());
                  for (var k = 0, V = ""; V = G(z, k++), S.c = V, !!V; )
                    switch (S.trackPosition && (S.position++, V === `
` ? (S.line++, S.column = 0) : S.column++), S.state) {
                      case M.BEGIN:
                        if (S.state = M.BEGIN_WHITESPACE, V === "\uFEFF")
                          continue;
                        mt(S, V);
                        continue;
                      case M.BEGIN_WHITESPACE:
                        mt(S, V);
                        continue;
                      case M.TEXT:
                        if (S.sawRoot && !S.closedRoot) {
                          for (var it = k - 1; V && V !== "<" && V !== "&"; )
                            V = G(z, k++), V && S.trackPosition && (S.position++, V === `
` ? (S.line++, S.column = 0) : S.column++);
                          S.textNode += z.substring(it, k - 1);
                        }
                        V === "<" && !(S.sawRoot && S.closedRoot && !S.strict) ? (S.state = M.OPEN_WAKA, S.startTagPosition = S.position) : (!F(V) && (!S.sawRoot || S.closedRoot) && Ft(S, "Text data outside of root node."), V === "&" ? S.state = M.TEXT_ENTITY : S.textNode += V);
                        continue;
                      case M.SCRIPT:
                        V === "<" ? S.state = M.SCRIPT_ENDING : S.script += V;
                        continue;
                      case M.SCRIPT_ENDING:
                        V === "/" ? S.state = M.CLOSE_TAG : (S.script += "<" + V, S.state = M.SCRIPT);
                        continue;
                      case M.OPEN_WAKA:
                        if (V === "!")
                          S.state = M.SGML_DECL, S.sgmlDecl = "";
                        else if (!F(V))
                          if (L(I, V))
                            S.state = M.OPEN_TAG, S.tagName = V;
                          else if (V === "/")
                            S.state = M.CLOSE_TAG, S.tagName = "";
                          else if (V === "?")
                            S.state = M.PROC_INST, S.procInstName = S.procInstBody = "";
                          else {
                            if (Ft(S, "Unencoded <"), S.startTagPosition + 1 < S.position) {
                              var tt = S.position - S.startTagPosition;
                              V = new Array(tt).join(" ") + V;
                            }
                            S.textNode += "<" + V, S.state = M.TEXT;
                          }
                        continue;
                      case M.SGML_DECL:
                        (S.sgmlDecl + V).toUpperCase() === g ? (J(S, "onopencdata"), S.state = M.CDATA, S.sgmlDecl = "", S.cdata = "") : S.sgmlDecl + V === "--" ? (S.state = M.COMMENT, S.comment = "", S.sgmlDecl = "") : (S.sgmlDecl + V).toUpperCase() === e ? (S.state = M.DOCTYPE, (S.doctype || S.sawRoot) && Ft(
                          S,
                          "Inappropriately located doctype declaration"
                        ), S.doctype = "", S.sgmlDecl = "") : V === ">" ? (J(S, "onsgmldeclaration", S.sgmlDecl), S.sgmlDecl = "", S.state = M.TEXT) : (x(V) && (S.state = M.SGML_DECL_QUOTED), S.sgmlDecl += V);
                        continue;
                      case M.SGML_DECL_QUOTED:
                        V === S.q && (S.state = M.SGML_DECL, S.q = ""), S.sgmlDecl += V;
                        continue;
                      case M.DOCTYPE:
                        V === ">" ? (S.state = M.TEXT, J(S, "ondoctype", S.doctype), S.doctype = !0) : (S.doctype += V, V === "[" ? S.state = M.DOCTYPE_DTD : x(V) && (S.state = M.DOCTYPE_QUOTED, S.q = V));
                        continue;
                      case M.DOCTYPE_QUOTED:
                        S.doctype += V, V === S.q && (S.q = "", S.state = M.DOCTYPE);
                        continue;
                      case M.DOCTYPE_DTD:
                        S.doctype += V, V === "]" ? S.state = M.DOCTYPE : x(V) && (S.state = M.DOCTYPE_DTD_QUOTED, S.q = V);
                        continue;
                      case M.DOCTYPE_DTD_QUOTED:
                        S.doctype += V, V === S.q && (S.state = M.DOCTYPE_DTD, S.q = "");
                        continue;
                      case M.COMMENT:
                        V === "-" ? S.state = M.COMMENT_ENDING : S.comment += V;
                        continue;
                      case M.COMMENT_ENDING:
                        V === "-" ? (S.state = M.COMMENT_ENDED, S.comment = yt(S.opt, S.comment), S.comment && J(S, "oncomment", S.comment), S.comment = "") : (S.comment += "-" + V, S.state = M.COMMENT);
                        continue;
                      case M.COMMENT_ENDED:
                        V !== ">" ? (Ft(S, "Malformed comment"), S.comment += "--" + V, S.state = M.COMMENT) : S.state = M.TEXT;
                        continue;
                      case M.CDATA:
                        V === "]" ? S.state = M.CDATA_ENDING : S.cdata += V;
                        continue;
                      case M.CDATA_ENDING:
                        V === "]" ? S.state = M.CDATA_ENDING_2 : (S.cdata += "]" + V, S.state = M.CDATA);
                        continue;
                      case M.CDATA_ENDING_2:
                        V === ">" ? (S.cdata && J(S, "oncdata", S.cdata), J(S, "onclosecdata"), S.cdata = "", S.state = M.TEXT) : V === "]" ? S.cdata += "]" : (S.cdata += "]]" + V, S.state = M.CDATA);
                        continue;
                      case M.PROC_INST:
                        V === "?" ? S.state = M.PROC_INST_ENDING : F(V) ? S.state = M.PROC_INST_BODY : S.procInstName += V;
                        continue;
                      case M.PROC_INST_BODY:
                        if (!S.procInstBody && F(V))
                          continue;
                        V === "?" ? S.state = M.PROC_INST_ENDING : S.procInstBody += V;
                        continue;
                      case M.PROC_INST_ENDING:
                        V === ">" ? (J(S, "onprocessinginstruction", {
                          name: S.procInstName,
                          body: S.procInstBody
                        }), S.procInstName = S.procInstBody = "", S.state = M.TEXT) : (S.procInstBody += "?" + V, S.state = M.PROC_INST_BODY);
                        continue;
                      case M.OPEN_TAG:
                        L(T, V) ? S.tagName += V : (Rt(S), V === ">" ? pt(S) : V === "/" ? S.state = M.OPEN_TAG_SLASH : (F(V) || Ft(S, "Invalid character in tag name"), S.state = M.ATTRIB));
                        continue;
                      case M.OPEN_TAG_SLASH:
                        V === ">" ? (pt(S, !0), ct(S)) : (Ft(S, "Forward-slash in opening tag not followed by >"), S.state = M.ATTRIB);
                        continue;
                      case M.ATTRIB:
                        if (F(V))
                          continue;
                        V === ">" ? pt(S) : V === "/" ? S.state = M.OPEN_TAG_SLASH : L(I, V) ? (S.attribName = V, S.attribValue = "", S.state = M.ATTRIB_NAME) : Ft(S, "Invalid attribute name");
                        continue;
                      case M.ATTRIB_NAME:
                        V === "=" ? S.state = M.ATTRIB_VALUE : V === ">" ? (Ft(S, "Attribute without value"), S.attribValue = S.attribName, Q(S), pt(S)) : F(V) ? S.state = M.ATTRIB_NAME_SAW_WHITE : L(T, V) ? S.attribName += V : Ft(S, "Invalid attribute name");
                        continue;
                      case M.ATTRIB_NAME_SAW_WHITE:
                        if (V === "=")
                          S.state = M.ATTRIB_VALUE;
                        else {
                          if (F(V))
                            continue;
                          Ft(S, "Attribute without value"), S.tag.attributes[S.attribName] = "", S.attribValue = "", J(S, "onattribute", {
                            name: S.attribName,
                            value: ""
                          }), S.attribName = "", V === ">" ? pt(S) : L(I, V) ? (S.attribName = V, S.state = M.ATTRIB_NAME) : (Ft(S, "Invalid attribute name"), S.state = M.ATTRIB);
                        }
                        continue;
                      case M.ATTRIB_VALUE:
                        if (F(V))
                          continue;
                        x(V) ? (S.q = V, S.state = M.ATTRIB_VALUE_QUOTED) : (Ft(S, "Unquoted attribute value"), S.state = M.ATTRIB_VALUE_UNQUOTED, S.attribValue = V);
                        continue;
                      case M.ATTRIB_VALUE_QUOTED:
                        if (V !== S.q) {
                          V === "&" ? S.state = M.ATTRIB_VALUE_ENTITY_Q : S.attribValue += V;
                          continue;
                        }
                        Q(S), S.q = "", S.state = M.ATTRIB_VALUE_CLOSED;
                        continue;
                      case M.ATTRIB_VALUE_CLOSED:
                        F(V) ? S.state = M.ATTRIB : V === ">" ? pt(S) : V === "/" ? S.state = M.OPEN_TAG_SLASH : L(I, V) ? (Ft(S, "No whitespace between attributes"), S.attribName = V, S.attribValue = "", S.state = M.ATTRIB_NAME) : Ft(S, "Invalid attribute name");
                        continue;
                      case M.ATTRIB_VALUE_UNQUOTED:
                        if (!P(V)) {
                          V === "&" ? S.state = M.ATTRIB_VALUE_ENTITY_U : S.attribValue += V;
                          continue;
                        }
                        Q(S), V === ">" ? pt(S) : S.state = M.ATTRIB;
                        continue;
                      case M.CLOSE_TAG:
                        if (S.tagName)
                          V === ">" ? ct(S) : L(T, V) ? S.tagName += V : S.script ? (S.script += "</" + S.tagName, S.tagName = "", S.state = M.SCRIPT) : (F(V) || Ft(S, "Invalid tagname in closing tag"), S.state = M.CLOSE_TAG_SAW_WHITE);
                        else {
                          if (F(V))
                            continue;
                          N(I, V) ? S.script ? (S.script += "</" + V, S.state = M.SCRIPT) : Ft(S, "Invalid tagname in closing tag.") : S.tagName = V;
                        }
                        continue;
                      case M.CLOSE_TAG_SAW_WHITE:
                        if (F(V))
                          continue;
                        V === ">" ? ct(S) : Ft(S, "Invalid characters in closing tag");
                        continue;
                      case M.TEXT_ENTITY:
                      case M.ATTRIB_VALUE_ENTITY_Q:
                      case M.ATTRIB_VALUE_ENTITY_U:
                        var _, At;
                        switch (S.state) {
                          case M.TEXT_ENTITY:
                            _ = M.TEXT, At = "textNode";
                            break;
                          case M.ATTRIB_VALUE_ENTITY_Q:
                            _ = M.ATTRIB_VALUE_QUOTED, At = "attribValue";
                            break;
                          case M.ATTRIB_VALUE_ENTITY_U:
                            _ = M.ATTRIB_VALUE_UNQUOTED, At = "attribValue";
                            break;
                        }
                        if (V === ";")
                          if (S.opt.unparsedEntities) {
                            var Lt = ot(S);
                            S.entity = "", S.state = _, S.write(Lt);
                          } else
                            S[At] += ot(S), S.entity = "", S.state = _;
                        else
                          L(S.entity.length ? E : C, V) ? S.entity += V : (Ft(S, "Invalid character in entity name"), S[At] += "&" + S.entity + V, S.entity = "", S.state = _);
                        continue;
                      default:
                        throw new Error(S, "Unknown state: " + S.state);
                    }
                  return S.position >= S.bufferCheckPosition && f(S), S;
                }
                /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */
                String.fromCodePoint || function() {
                  var z = String.fromCharCode, S = Math.floor, k = function() {
                    var V = 16384, it = [], tt, _, At = -1, Lt = arguments.length;
                    if (!Lt)
                      return "";
                    for (var Yt = ""; ++At < Lt; ) {
                      var Gt = Number(arguments[At]);
                      if (!isFinite(Gt) || // `NaN`, `+Infinity`, or `-Infinity`
                      Gt < 0 || // not a valid Unicode code point
                      Gt > 1114111 || // not a valid Unicode code point
                      S(Gt) !== Gt)
                        throw RangeError("Invalid code point: " + Gt);
                      Gt <= 65535 ? it.push(Gt) : (Gt -= 65536, tt = (Gt >> 10) + 55296, _ = Gt % 1024 + 56320, it.push(tt, _)), (At + 1 === Lt || it.length > V) && (Yt += z.apply(null, it), it.length = 0);
                    }
                    return Yt;
                  };
                  Object.defineProperty ? Object.defineProperty(String, "fromCodePoint", {
                    value: k,
                    configurable: !0,
                    writable: !0
                  }) : String.fromCodePoint = k;
                }();
              })(d);
            }
          ),
          /***/
          34521: (
            /***/
            function(u, d, t) {
              var o = t(31801), r = t(72656), n = t(28198)(), i = t(93828), f = o("%TypeError%"), l = o("%Math.floor%");
              u.exports = function(h, a) {
                if (typeof h != "function")
                  throw new f("`fn` is not a function");
                if (typeof a != "number" || a < 0 || a > 4294967295 || l(a) !== a)
                  throw new f("`length` must be a positive 32-bit integer");
                var v = arguments.length > 2 && !!arguments[2], y = !0, g = !0;
                if ("length" in h && i) {
                  var e = i(h, "length");
                  e && !e.configurable && (y = !1), e && !e.writable && (g = !1);
                }
                return (y || g || !v) && (n ? r(h, "length", a, !0, !0) : r(h, "length", a)), h;
              };
            }
          ),
          /***/
          25021: (
            /***/
            function(u, d, t) {
              var o = t(72656), r = t(28198)(), n = t(87105).functionsHaveConfigurableNames(), i = TypeError;
              u.exports = function(l, c) {
                if (typeof l != "function")
                  throw new i("`fn` is not a function");
                var h = arguments.length > 2 && !!arguments[2];
                return (!h || n) && (r ? o(l, "name", c, !0, !0) : o(l, "name", c)), l;
              };
            }
          ),
          /***/
          20202: (
            /***/
            function(u, d, t) {
              u.exports = n;
              var o = t(5939).EventEmitter, r = t(48575);
              r(n, o), n.Readable = t(28193), n.Writable = t(16667), n.Duplex = t(53551), n.Transform = t(10695), n.PassThrough = t(89371), n.finished = t(47549), n.pipeline = t(44858), n.Stream = n;
              function n() {
                o.call(this);
              }
              n.prototype.pipe = function(i, f) {
                var l = this;
                function c(m) {
                  i.writable && i.write(m) === !1 && l.pause && l.pause();
                }
                l.on("data", c);
                function h() {
                  l.readable && l.resume && l.resume();
                }
                i.on("drain", h), !i._isStdio && (!f || f.end !== !1) && (l.on("end", v), l.on("close", y));
                var a = !1;
                function v() {
                  a || (a = !0, i.end());
                }
                function y() {
                  a || (a = !0, typeof i.destroy == "function" && i.destroy());
                }
                function g(m) {
                  if (e(), o.listenerCount(this, "error") === 0)
                    throw m;
                }
                l.on("error", g), i.on("error", g);
                function e() {
                  l.removeListener("data", c), i.removeListener("drain", h), l.removeListener("end", v), l.removeListener("close", y), l.removeListener("error", g), i.removeListener("error", g), l.removeListener("end", e), l.removeListener("close", e), i.removeListener("close", e);
                }
                return l.on("end", e), l.on("close", e), i.on("close", e), i.emit("pipe", l), i;
              };
            }
          ),
          /***/
          75065: (
            /***/
            function(u) {
              function d(l, c) {
                l.prototype = Object.create(c.prototype), l.prototype.constructor = l, l.__proto__ = c;
              }
              var t = {};
              function o(l, c, h) {
                h || (h = Error);
                function a(y, g, e) {
                  return typeof c == "string" ? c : c(y, g, e);
                }
                var v = /* @__PURE__ */ function(y) {
                  d(g, y);
                  function g(e, m, w) {
                    return y.call(this, a(e, m, w)) || this;
                  }
                  return g;
                }(h);
                v.prototype.name = h.name, v.prototype.code = l, t[l] = v;
              }
              function r(l, c) {
                if (Array.isArray(l)) {
                  var h = l.length;
                  return l = l.map(function(a) {
                    return String(a);
                  }), h > 2 ? "one of ".concat(c, " ").concat(l.slice(0, h - 1).join(", "), ", or ") + l[h - 1] : h === 2 ? "one of ".concat(c, " ").concat(l[0], " or ").concat(l[1]) : "of ".concat(c, " ").concat(l[0]);
                } else
                  return "of ".concat(c, " ").concat(String(l));
              }
              function n(l, c, h) {
                return l.substr(!h || h < 0 ? 0 : +h, c.length) === c;
              }
              function i(l, c, h) {
                return (h === void 0 || h > l.length) && (h = l.length), l.substring(h - c.length, h) === c;
              }
              function f(l, c, h) {
                return typeof h != "number" && (h = 0), h + c.length > l.length ? !1 : l.indexOf(c, h) !== -1;
              }
              o("ERR_INVALID_OPT_VALUE", function(l, c) {
                return 'The value "' + c + '" is invalid for option "' + l + '"';
              }, TypeError), o("ERR_INVALID_ARG_TYPE", function(l, c, h) {
                var a;
                typeof c == "string" && n(c, "not ") ? (a = "must not be", c = c.replace(/^not /, "")) : a = "must be";
                var v;
                if (i(l, " argument"))
                  v = "The ".concat(l, " ").concat(a, " ").concat(r(c, "type"));
                else {
                  var y = f(l, ".") ? "property" : "argument";
                  v = 'The "'.concat(l, '" ').concat(y, " ").concat(a, " ").concat(r(c, "type"));
                }
                return v += ". Received type ".concat(typeof h), v;
              }, TypeError), o("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o("ERR_METHOD_NOT_IMPLEMENTED", function(l) {
                return "The " + l + " method is not implemented";
              }), o("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o("ERR_STREAM_DESTROYED", function(l) {
                return "Cannot call " + l + " after a stream was destroyed";
              }), o("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o("ERR_STREAM_WRITE_AFTER_END", "write after end"), o("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o("ERR_UNKNOWN_ENCODING", function(l) {
                return "Unknown encoding: " + l;
              }, TypeError), o("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), u.exports.q = t;
            }
          ),
          /***/
          53551: (
            /***/
            function(u, d, t) {
              var o = t(82530), r = Object.keys || function(y) {
                var g = [];
                for (var e in y)
                  g.push(e);
                return g;
              };
              u.exports = h;
              var n = t(28193), i = t(16667);
              t(48575)(h, n);
              for (var f = r(i.prototype), l = 0; l < f.length; l++) {
                var c = f[l];
                h.prototype[c] || (h.prototype[c] = i.prototype[c]);
              }
              function h(y) {
                if (!(this instanceof h))
                  return new h(y);
                n.call(this, y), i.call(this, y), this.allowHalfOpen = !0, y && (y.readable === !1 && (this.readable = !1), y.writable === !1 && (this.writable = !1), y.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", a)));
              }
              Object.defineProperty(h.prototype, "writableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.highWaterMark;
                }
              }), Object.defineProperty(h.prototype, "writableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState && this._writableState.getBuffer();
                }
              }), Object.defineProperty(h.prototype, "writableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.length;
                }
              });
              function a() {
                this._writableState.ended || o.nextTick(v, this);
              }
              function v(y) {
                y.end();
              }
              Object.defineProperty(h.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
                },
                set: function(g) {
                  this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = g, this._writableState.destroyed = g);
                }
              });
            }
          ),
          /***/
          89371: (
            /***/
            function(u, d, t) {
              u.exports = r;
              var o = t(10695);
              t(48575)(r, o);
              function r(n) {
                if (!(this instanceof r))
                  return new r(n);
                o.call(this, n);
              }
              r.prototype._transform = function(n, i, f) {
                f(null, n);
              };
            }
          ),
          /***/
          28193: (
            /***/
            function(u, d, t) {
              var o = t(82530);
              u.exports = K;
              var r;
              K.ReadableState = M, t(5939).EventEmitter;
              var n = function(_, At) {
                return _.listeners(At).length;
              }, i = t(5908), f = t(43060).Buffer, l = (typeof t.g < "u" ? t.g : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
              };
              function c(tt) {
                return f.from(tt);
              }
              function h(tt) {
                return f.isBuffer(tt) || tt instanceof l;
              }
              var a = t(40964), v;
              a && a.debuglog ? v = a.debuglog("stream") : v = function() {
              };
              var y = t(55681), g = t(89930), e = t(39025), m = e.getHighWaterMark, w = t(75065).q, D = w.ERR_INVALID_ARG_TYPE, I = w.ERR_STREAM_PUSH_AFTER_EOF, T = w.ERR_METHOD_NOT_IMPLEMENTED, C = w.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, E, F, x;
              t(48575)(K, i);
              var P = g.errorOrDestroy, L = ["error", "close", "destroy", "pause", "resume"];
              function N(tt, _, At) {
                if (typeof tt.prependListener == "function")
                  return tt.prependListener(_, At);
                !tt._events || !tt._events[_] ? tt.on(_, At) : Array.isArray(tt._events[_]) ? tt._events[_].unshift(At) : tt._events[_] = [At, tt._events[_]];
              }
              function M(tt, _, At) {
                r = r || t(53551), tt = tt || {}, typeof At != "boolean" && (At = _ instanceof r), this.objectMode = !!tt.objectMode, At && (this.objectMode = this.objectMode || !!tt.readableObjectMode), this.highWaterMark = m(this, tt, "readableHighWaterMark", At), this.buffer = new y(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = tt.emitClose !== !1, this.autoDestroy = !!tt.autoDestroy, this.destroyed = !1, this.defaultEncoding = tt.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, tt.encoding && (E || (E = t(10301).s), this.decoder = new E(tt.encoding), this.encoding = tt.encoding);
              }
              function K(tt) {
                if (r = r || t(53551), !(this instanceof K))
                  return new K(tt);
                var _ = this instanceof r;
                this._readableState = new M(tt, this, _), this.readable = !0, tt && (typeof tt.read == "function" && (this._read = tt.read), typeof tt.destroy == "function" && (this._destroy = tt.destroy)), i.call(this);
              }
              Object.defineProperty(K.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState === void 0 ? !1 : this._readableState.destroyed;
                },
                set: function(_) {
                  this._readableState && (this._readableState.destroyed = _);
                }
              }), K.prototype.destroy = g.destroy, K.prototype._undestroy = g.undestroy, K.prototype._destroy = function(tt, _) {
                _(tt);
              }, K.prototype.push = function(tt, _) {
                var At = this._readableState, Lt;
                return At.objectMode ? Lt = !0 : typeof tt == "string" && (_ = _ || At.defaultEncoding, _ !== At.encoding && (tt = f.from(tt, _), _ = ""), Lt = !0), ut(this, tt, _, !1, Lt);
              }, K.prototype.unshift = function(tt) {
                return ut(this, tt, null, !0, !1);
              };
              function ut(tt, _, At, Lt, Yt) {
                v("readableAddChunk", _);
                var Gt = tt._readableState;
                if (_ === null)
                  Gt.reading = !1, Ft(tt, Gt);
                else {
                  var Dt;
                  if (Yt || (Dt = rt(Gt, _)), Dt)
                    P(tt, Dt);
                  else if (Gt.objectMode || _ && _.length > 0)
                    if (typeof _ != "string" && !Gt.objectMode && Object.getPrototypeOf(_) !== f.prototype && (_ = c(_)), Lt)
                      Gt.endEmitted ? P(tt, new C()) : J(tt, Gt, _, !0);
                    else if (Gt.ended)
                      P(tt, new I());
                    else {
                      if (Gt.destroyed)
                        return !1;
                      Gt.reading = !1, Gt.decoder && !At ? (_ = Gt.decoder.write(_), Gt.objectMode || _.length !== 0 ? J(tt, Gt, _, !1) : Q(tt, Gt)) : J(tt, Gt, _, !1);
                    }
                  else
                    Lt || (Gt.reading = !1, Q(tt, Gt));
                }
                return !Gt.ended && (Gt.length < Gt.highWaterMark || Gt.length === 0);
              }
              function J(tt, _, At, Lt) {
                _.flowing && _.length === 0 && !_.sync ? (_.awaitDrain = 0, tt.emit("data", At)) : (_.length += _.objectMode ? 1 : At.length, Lt ? _.buffer.unshift(At) : _.buffer.push(At), _.needReadable && Rt(tt)), Q(tt, _);
              }
              function rt(tt, _) {
                var At;
                return !h(_) && typeof _ != "string" && _ !== void 0 && !tt.objectMode && (At = new D("chunk", ["string", "Buffer", "Uint8Array"], _)), At;
              }
              K.prototype.isPaused = function() {
                return this._readableState.flowing === !1;
              }, K.prototype.setEncoding = function(tt) {
                E || (E = t(10301).s);
                var _ = new E(tt);
                this._readableState.decoder = _, this._readableState.encoding = this._readableState.decoder.encoding;
                for (var At = this._readableState.buffer.head, Lt = ""; At !== null; )
                  Lt += _.write(At.data), At = At.next;
                return this._readableState.buffer.clear(), Lt !== "" && this._readableState.buffer.push(Lt), this._readableState.length = Lt.length, this;
              };
              var yt = 1073741824;
              function xt(tt) {
                return tt >= yt ? tt = yt : (tt--, tt |= tt >>> 1, tt |= tt >>> 2, tt |= tt >>> 4, tt |= tt >>> 8, tt |= tt >>> 16, tt++), tt;
              }
              function Et(tt, _) {
                return tt <= 0 || _.length === 0 && _.ended ? 0 : _.objectMode ? 1 : tt !== tt ? _.flowing && _.length ? _.buffer.head.data.length : _.length : (tt > _.highWaterMark && (_.highWaterMark = xt(tt)), tt <= _.length ? tt : _.ended ? _.length : (_.needReadable = !0, 0));
              }
              K.prototype.read = function(tt) {
                v("read", tt), tt = parseInt(tt, 10);
                var _ = this._readableState, At = tt;
                if (tt !== 0 && (_.emittedReadable = !1), tt === 0 && _.needReadable && ((_.highWaterMark !== 0 ? _.length >= _.highWaterMark : _.length > 0) || _.ended))
                  return v("read: emitReadable", _.length, _.ended), _.length === 0 && _.ended ? k(this) : Rt(this), null;
                if (tt = Et(tt, _), tt === 0 && _.ended)
                  return _.length === 0 && k(this), null;
                var Lt = _.needReadable;
                v("need readable", Lt), (_.length === 0 || _.length - tt < _.highWaterMark) && (Lt = !0, v("length less than watermark", Lt)), _.ended || _.reading ? (Lt = !1, v("reading or ended", Lt)) : Lt && (v("do read"), _.reading = !0, _.sync = !0, _.length === 0 && (_.needReadable = !0), this._read(_.highWaterMark), _.sync = !1, _.reading || (tt = Et(At, _)));
                var Yt;
                return tt > 0 ? Yt = S(tt, _) : Yt = null, Yt === null ? (_.needReadable = _.length <= _.highWaterMark, tt = 0) : (_.length -= tt, _.awaitDrain = 0), _.length === 0 && (_.ended || (_.needReadable = !0), At !== tt && _.ended && k(this)), Yt !== null && this.emit("data", Yt), Yt;
              };
              function Ft(tt, _) {
                if (v("onEofChunk"), !_.ended) {
                  if (_.decoder) {
                    var At = _.decoder.end();
                    At && At.length && (_.buffer.push(At), _.length += _.objectMode ? 1 : At.length);
                  }
                  _.ended = !0, _.sync ? Rt(tt) : (_.needReadable = !1, _.emittedReadable || (_.emittedReadable = !0, Ut(tt)));
                }
              }
              function Rt(tt) {
                var _ = tt._readableState;
                v("emitReadable", _.needReadable, _.emittedReadable), _.needReadable = !1, _.emittedReadable || (v("emitReadable", _.flowing), _.emittedReadable = !0, o.nextTick(Ut, tt));
              }
              function Ut(tt) {
                var _ = tt._readableState;
                v("emitReadable_", _.destroyed, _.length, _.ended), !_.destroyed && (_.length || _.ended) && (tt.emit("readable"), _.emittedReadable = !1), _.needReadable = !_.flowing && !_.ended && _.length <= _.highWaterMark, z(tt);
              }
              function Q(tt, _) {
                _.readingMore || (_.readingMore = !0, o.nextTick(pt, tt, _));
              }
              function pt(tt, _) {
                for (; !_.reading && !_.ended && (_.length < _.highWaterMark || _.flowing && _.length === 0); ) {
                  var At = _.length;
                  if (v("maybeReadMore read 0"), tt.read(0), At === _.length)
                    break;
                }
                _.readingMore = !1;
              }
              K.prototype._read = function(tt) {
                P(this, new T("_read()"));
              }, K.prototype.pipe = function(tt, _) {
                var At = this, Lt = this._readableState;
                switch (Lt.pipesCount) {
                  case 0:
                    Lt.pipes = tt;
                    break;
                  case 1:
                    Lt.pipes = [Lt.pipes, tt];
                    break;
                  default:
                    Lt.pipes.push(tt);
                    break;
                }
                Lt.pipesCount += 1, v("pipe count=%d opts=%j", Lt.pipesCount, _);
                var Yt = (!_ || _.end !== !1) && tt !== o.stdout && tt !== o.stderr, Gt = Yt ? ae : de;
                Lt.endEmitted ? o.nextTick(Gt) : At.once("end", Gt), tt.on("unpipe", Dt);
                function Dt(be, Pe) {
                  v("onunpipe"), be === At && Pe && Pe.hasUnpiped === !1 && (Pe.hasUnpiped = !0, ce());
                }
                function ae() {
                  v("onend"), tt.end();
                }
                var Ae = ct(At);
                tt.on("drain", Ae);
                var xe = !1;
                function ce() {
                  v("cleanup"), tt.removeListener("close", Qt), tt.removeListener("finish", le), tt.removeListener("drain", Ae), tt.removeListener("error", zt), tt.removeListener("unpipe", Dt), At.removeListener("end", ae), At.removeListener("end", de), At.removeListener("data", we), xe = !0, Lt.awaitDrain && (!tt._writableState || tt._writableState.needDrain) && Ae();
                }
                At.on("data", we);
                function we(be) {
                  v("ondata");
                  var Pe = tt.write(be);
                  v("dest.write", Pe), Pe === !1 && ((Lt.pipesCount === 1 && Lt.pipes === tt || Lt.pipesCount > 1 && it(Lt.pipes, tt) !== -1) && !xe && (v("false write response, pause", Lt.awaitDrain), Lt.awaitDrain++), At.pause());
                }
                function zt(be) {
                  v("onerror", be), de(), tt.removeListener("error", zt), n(tt, "error") === 0 && P(tt, be);
                }
                N(tt, "error", zt);
                function Qt() {
                  tt.removeListener("finish", le), de();
                }
                tt.once("close", Qt);
                function le() {
                  v("onfinish"), tt.removeListener("close", Qt), de();
                }
                tt.once("finish", le);
                function de() {
                  v("unpipe"), At.unpipe(tt);
                }
                return tt.emit("pipe", At), Lt.flowing || (v("pipe resume"), At.resume()), tt;
              };
              function ct(tt) {
                return function() {
                  var At = tt._readableState;
                  v("pipeOnDrain", At.awaitDrain), At.awaitDrain && At.awaitDrain--, At.awaitDrain === 0 && n(tt, "data") && (At.flowing = !0, z(tt));
                };
              }
              K.prototype.unpipe = function(tt) {
                var _ = this._readableState, At = {
                  hasUnpiped: !1
                };
                if (_.pipesCount === 0)
                  return this;
                if (_.pipesCount === 1)
                  return tt && tt !== _.pipes ? this : (tt || (tt = _.pipes), _.pipes = null, _.pipesCount = 0, _.flowing = !1, tt && tt.emit("unpipe", this, At), this);
                if (!tt) {
                  var Lt = _.pipes, Yt = _.pipesCount;
                  _.pipes = null, _.pipesCount = 0, _.flowing = !1;
                  for (var Gt = 0; Gt < Yt; Gt++)
                    Lt[Gt].emit("unpipe", this, {
                      hasUnpiped: !1
                    });
                  return this;
                }
                var Dt = it(_.pipes, tt);
                return Dt === -1 ? this : (_.pipes.splice(Dt, 1), _.pipesCount -= 1, _.pipesCount === 1 && (_.pipes = _.pipes[0]), tt.emit("unpipe", this, At), this);
              }, K.prototype.on = function(tt, _) {
                var At = i.prototype.on.call(this, tt, _), Lt = this._readableState;
                return tt === "data" ? (Lt.readableListening = this.listenerCount("readable") > 0, Lt.flowing !== !1 && this.resume()) : tt === "readable" && !Lt.endEmitted && !Lt.readableListening && (Lt.readableListening = Lt.needReadable = !0, Lt.flowing = !1, Lt.emittedReadable = !1, v("on readable", Lt.length, Lt.reading), Lt.length ? Rt(this) : Lt.reading || o.nextTick(mt, this)), At;
              }, K.prototype.addListener = K.prototype.on, K.prototype.removeListener = function(tt, _) {
                var At = i.prototype.removeListener.call(this, tt, _);
                return tt === "readable" && o.nextTick(ot, this), At;
              }, K.prototype.removeAllListeners = function(tt) {
                var _ = i.prototype.removeAllListeners.apply(this, arguments);
                return (tt === "readable" || tt === void 0) && o.nextTick(ot, this), _;
              };
              function ot(tt) {
                var _ = tt._readableState;
                _.readableListening = tt.listenerCount("readable") > 0, _.resumeScheduled && !_.paused ? _.flowing = !0 : tt.listenerCount("data") > 0 && tt.resume();
              }
              function mt(tt) {
                v("readable nexttick read 0"), tt.read(0);
              }
              K.prototype.resume = function() {
                var tt = this._readableState;
                return tt.flowing || (v("resume"), tt.flowing = !tt.readableListening, G(this, tt)), tt.paused = !1, this;
              };
              function G(tt, _) {
                _.resumeScheduled || (_.resumeScheduled = !0, o.nextTick(Tt, tt, _));
              }
              function Tt(tt, _) {
                v("resume", _.reading), _.reading || tt.read(0), _.resumeScheduled = !1, tt.emit("resume"), z(tt), _.flowing && !_.reading && tt.read(0);
              }
              K.prototype.pause = function() {
                return v("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (v("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
              };
              function z(tt) {
                var _ = tt._readableState;
                for (v("flow", _.flowing); _.flowing && tt.read() !== null; )
                  ;
              }
              K.prototype.wrap = function(tt) {
                var _ = this, At = this._readableState, Lt = !1;
                tt.on("end", function() {
                  if (v("wrapped end"), At.decoder && !At.ended) {
                    var Dt = At.decoder.end();
                    Dt && Dt.length && _.push(Dt);
                  }
                  _.push(null);
                }), tt.on("data", function(Dt) {
                  if (v("wrapped data"), At.decoder && (Dt = At.decoder.write(Dt)), !(At.objectMode && Dt == null) && !(!At.objectMode && (!Dt || !Dt.length))) {
                    var ae = _.push(Dt);
                    ae || (Lt = !0, tt.pause());
                  }
                });
                for (var Yt in tt)
                  this[Yt] === void 0 && typeof tt[Yt] == "function" && (this[Yt] = function(ae) {
                    return function() {
                      return tt[ae].apply(tt, arguments);
                    };
                  }(Yt));
                for (var Gt = 0; Gt < L.length; Gt++)
                  tt.on(L[Gt], this.emit.bind(this, L[Gt]));
                return this._read = function(Dt) {
                  v("wrapped _read", Dt), Lt && (Lt = !1, tt.resume());
                }, this;
              }, typeof Symbol == "function" && (K.prototype[Symbol.asyncIterator] = function() {
                return F === void 0 && (F = t(90933)), F(this);
              }), Object.defineProperty(K.prototype, "readableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.highWaterMark;
                }
              }), Object.defineProperty(K.prototype, "readableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState && this._readableState.buffer;
                }
              }), Object.defineProperty(K.prototype, "readableFlowing", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.flowing;
                },
                set: function(_) {
                  this._readableState && (this._readableState.flowing = _);
                }
              }), K._fromList = S, Object.defineProperty(K.prototype, "readableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.length;
                }
              });
              function S(tt, _) {
                if (_.length === 0)
                  return null;
                var At;
                return _.objectMode ? At = _.buffer.shift() : !tt || tt >= _.length ? (_.decoder ? At = _.buffer.join("") : _.buffer.length === 1 ? At = _.buffer.first() : At = _.buffer.concat(_.length), _.buffer.clear()) : At = _.buffer.consume(tt, _.decoder), At;
              }
              function k(tt) {
                var _ = tt._readableState;
                v("endReadable", _.endEmitted), _.endEmitted || (_.ended = !0, o.nextTick(V, _, tt));
              }
              function V(tt, _) {
                if (v("endReadableNT", tt.endEmitted, tt.length), !tt.endEmitted && tt.length === 0 && (tt.endEmitted = !0, _.readable = !1, _.emit("end"), tt.autoDestroy)) {
                  var At = _._writableState;
                  (!At || At.autoDestroy && At.finished) && _.destroy();
                }
              }
              typeof Symbol == "function" && (K.from = function(tt, _) {
                return x === void 0 && (x = t(24881)), x(K, tt, _);
              });
              function it(tt, _) {
                for (var At = 0, Lt = tt.length; At < Lt; At++)
                  if (tt[At] === _)
                    return At;
                return -1;
              }
            }
          ),
          /***/
          10695: (
            /***/
            function(u, d, t) {
              u.exports = h;
              var o = t(75065).q, r = o.ERR_METHOD_NOT_IMPLEMENTED, n = o.ERR_MULTIPLE_CALLBACK, i = o.ERR_TRANSFORM_ALREADY_TRANSFORMING, f = o.ERR_TRANSFORM_WITH_LENGTH_0, l = t(53551);
              t(48575)(h, l);
              function c(y, g) {
                var e = this._transformState;
                e.transforming = !1;
                var m = e.writecb;
                if (m === null)
                  return this.emit("error", new n());
                e.writechunk = null, e.writecb = null, g != null && this.push(g), m(y);
                var w = this._readableState;
                w.reading = !1, (w.needReadable || w.length < w.highWaterMark) && this._read(w.highWaterMark);
              }
              function h(y) {
                if (!(this instanceof h))
                  return new h(y);
                l.call(this, y), this._transformState = {
                  afterTransform: c.bind(this),
                  needTransform: !1,
                  transforming: !1,
                  writecb: null,
                  writechunk: null,
                  writeencoding: null
                }, this._readableState.needReadable = !0, this._readableState.sync = !1, y && (typeof y.transform == "function" && (this._transform = y.transform), typeof y.flush == "function" && (this._flush = y.flush)), this.on("prefinish", a);
              }
              function a() {
                var y = this;
                typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(g, e) {
                  v(y, g, e);
                }) : v(this, null, null);
              }
              h.prototype.push = function(y, g) {
                return this._transformState.needTransform = !1, l.prototype.push.call(this, y, g);
              }, h.prototype._transform = function(y, g, e) {
                e(new r("_transform()"));
              }, h.prototype._write = function(y, g, e) {
                var m = this._transformState;
                if (m.writecb = e, m.writechunk = y, m.writeencoding = g, !m.transforming) {
                  var w = this._readableState;
                  (m.needTransform || w.needReadable || w.length < w.highWaterMark) && this._read(w.highWaterMark);
                }
              }, h.prototype._read = function(y) {
                var g = this._transformState;
                g.writechunk !== null && !g.transforming ? (g.transforming = !0, this._transform(g.writechunk, g.writeencoding, g.afterTransform)) : g.needTransform = !0;
              }, h.prototype._destroy = function(y, g) {
                l.prototype._destroy.call(this, y, function(e) {
                  g(e);
                });
              };
              function v(y, g, e) {
                if (g)
                  return y.emit("error", g);
                if (e != null && y.push(e), y._writableState.length)
                  throw new f();
                if (y._transformState.transforming)
                  throw new i();
                return y.push(null);
              }
            }
          ),
          /***/
          16667: (
            /***/
            function(u, d, t) {
              var o = t(82530);
              u.exports = M;
              function r(z) {
                var S = this;
                this.next = null, this.entry = null, this.finish = function() {
                  Tt(S, z);
                };
              }
              var n;
              M.WritableState = L;
              var i = {
                deprecate: t(29440)
              }, f = t(5908), l = t(43060).Buffer, c = (typeof t.g < "u" ? t.g : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
              };
              function h(z) {
                return l.from(z);
              }
              function a(z) {
                return l.isBuffer(z) || z instanceof c;
              }
              var v = t(89930), y = t(39025), g = y.getHighWaterMark, e = t(75065).q, m = e.ERR_INVALID_ARG_TYPE, w = e.ERR_METHOD_NOT_IMPLEMENTED, D = e.ERR_MULTIPLE_CALLBACK, I = e.ERR_STREAM_CANNOT_PIPE, T = e.ERR_STREAM_DESTROYED, C = e.ERR_STREAM_NULL_VALUES, E = e.ERR_STREAM_WRITE_AFTER_END, F = e.ERR_UNKNOWN_ENCODING, x = v.errorOrDestroy;
              t(48575)(M, f);
              function P() {
              }
              function L(z, S, k) {
                n = n || t(53551), z = z || {}, typeof k != "boolean" && (k = S instanceof n), this.objectMode = !!z.objectMode, k && (this.objectMode = this.objectMode || !!z.writableObjectMode), this.highWaterMark = g(this, z, "writableHighWaterMark", k), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                var V = z.decodeStrings === !1;
                this.decodeStrings = !V, this.defaultEncoding = z.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(it) {
                  Ft(S, it);
                }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = z.emitClose !== !1, this.autoDestroy = !!z.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new r(this);
              }
              L.prototype.getBuffer = function() {
                for (var S = this.bufferedRequest, k = []; S; )
                  k.push(S), S = S.next;
                return k;
              }, function() {
                try {
                  Object.defineProperty(L.prototype, "buffer", {
                    get: i.deprecate(function() {
                      return this.getBuffer();
                    }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                  });
                } catch {
                }
              }();
              var N;
              typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (N = Function.prototype[Symbol.hasInstance], Object.defineProperty(M, Symbol.hasInstance, {
                value: function(S) {
                  return N.call(this, S) ? !0 : this !== M ? !1 : S && S._writableState instanceof L;
                }
              })) : N = function(S) {
                return S instanceof this;
              };
              function M(z) {
                n = n || t(53551);
                var S = this instanceof n;
                if (!S && !N.call(M, this))
                  return new M(z);
                this._writableState = new L(z, this, S), this.writable = !0, z && (typeof z.write == "function" && (this._write = z.write), typeof z.writev == "function" && (this._writev = z.writev), typeof z.destroy == "function" && (this._destroy = z.destroy), typeof z.final == "function" && (this._final = z.final)), f.call(this);
              }
              M.prototype.pipe = function() {
                x(this, new I());
              };
              function K(z, S) {
                var k = new E();
                x(z, k), o.nextTick(S, k);
              }
              function ut(z, S, k, V) {
                var it;
                return k === null ? it = new C() : typeof k != "string" && !S.objectMode && (it = new m("chunk", ["string", "Buffer"], k)), it ? (x(z, it), o.nextTick(V, it), !1) : !0;
              }
              M.prototype.write = function(z, S, k) {
                var V = this._writableState, it = !1, tt = !V.objectMode && a(z);
                return tt && !l.isBuffer(z) && (z = h(z)), typeof S == "function" && (k = S, S = null), tt ? S = "buffer" : S || (S = V.defaultEncoding), typeof k != "function" && (k = P), V.ending ? K(this, k) : (tt || ut(this, V, z, k)) && (V.pendingcb++, it = rt(this, V, tt, z, S, k)), it;
              }, M.prototype.cork = function() {
                this._writableState.corked++;
              }, M.prototype.uncork = function() {
                var z = this._writableState;
                z.corked && (z.corked--, !z.writing && !z.corked && !z.bufferProcessing && z.bufferedRequest && Q(this, z));
              }, M.prototype.setDefaultEncoding = function(S) {
                if (typeof S == "string" && (S = S.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((S + "").toLowerCase()) > -1))
                  throw new F(S);
                return this._writableState.defaultEncoding = S, this;
              }, Object.defineProperty(M.prototype, "writableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState && this._writableState.getBuffer();
                }
              });
              function J(z, S, k) {
                return !z.objectMode && z.decodeStrings !== !1 && typeof S == "string" && (S = l.from(S, k)), S;
              }
              Object.defineProperty(M.prototype, "writableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.highWaterMark;
                }
              });
              function rt(z, S, k, V, it, tt) {
                if (!k) {
                  var _ = J(S, V, it);
                  V !== _ && (k = !0, it = "buffer", V = _);
                }
                var At = S.objectMode ? 1 : V.length;
                S.length += At;
                var Lt = S.length < S.highWaterMark;
                if (Lt || (S.needDrain = !0), S.writing || S.corked) {
                  var Yt = S.lastBufferedRequest;
                  S.lastBufferedRequest = {
                    chunk: V,
                    encoding: it,
                    isBuf: k,
                    callback: tt,
                    next: null
                  }, Yt ? Yt.next = S.lastBufferedRequest : S.bufferedRequest = S.lastBufferedRequest, S.bufferedRequestCount += 1;
                } else
                  yt(z, S, !1, At, V, it, tt);
                return Lt;
              }
              function yt(z, S, k, V, it, tt, _) {
                S.writelen = V, S.writecb = _, S.writing = !0, S.sync = !0, S.destroyed ? S.onwrite(new T("write")) : k ? z._writev(it, S.onwrite) : z._write(it, tt, S.onwrite), S.sync = !1;
              }
              function xt(z, S, k, V, it) {
                --S.pendingcb, k ? (o.nextTick(it, V), o.nextTick(mt, z, S), z._writableState.errorEmitted = !0, x(z, V)) : (it(V), z._writableState.errorEmitted = !0, x(z, V), mt(z, S));
              }
              function Et(z) {
                z.writing = !1, z.writecb = null, z.length -= z.writelen, z.writelen = 0;
              }
              function Ft(z, S) {
                var k = z._writableState, V = k.sync, it = k.writecb;
                if (typeof it != "function")
                  throw new D();
                if (Et(k), S)
                  xt(z, k, V, S, it);
                else {
                  var tt = pt(k) || z.destroyed;
                  !tt && !k.corked && !k.bufferProcessing && k.bufferedRequest && Q(z, k), V ? o.nextTick(Rt, z, k, tt, it) : Rt(z, k, tt, it);
                }
              }
              function Rt(z, S, k, V) {
                k || Ut(z, S), S.pendingcb--, V(), mt(z, S);
              }
              function Ut(z, S) {
                S.length === 0 && S.needDrain && (S.needDrain = !1, z.emit("drain"));
              }
              function Q(z, S) {
                S.bufferProcessing = !0;
                var k = S.bufferedRequest;
                if (z._writev && k && k.next) {
                  var V = S.bufferedRequestCount, it = new Array(V), tt = S.corkedRequestsFree;
                  tt.entry = k;
                  for (var _ = 0, At = !0; k; )
                    it[_] = k, k.isBuf || (At = !1), k = k.next, _ += 1;
                  it.allBuffers = At, yt(z, S, !0, S.length, it, "", tt.finish), S.pendingcb++, S.lastBufferedRequest = null, tt.next ? (S.corkedRequestsFree = tt.next, tt.next = null) : S.corkedRequestsFree = new r(S), S.bufferedRequestCount = 0;
                } else {
                  for (; k; ) {
                    var Lt = k.chunk, Yt = k.encoding, Gt = k.callback, Dt = S.objectMode ? 1 : Lt.length;
                    if (yt(z, S, !1, Dt, Lt, Yt, Gt), k = k.next, S.bufferedRequestCount--, S.writing)
                      break;
                  }
                  k === null && (S.lastBufferedRequest = null);
                }
                S.bufferedRequest = k, S.bufferProcessing = !1;
              }
              M.prototype._write = function(z, S, k) {
                k(new w("_write()"));
              }, M.prototype._writev = null, M.prototype.end = function(z, S, k) {
                var V = this._writableState;
                return typeof z == "function" ? (k = z, z = null, S = null) : typeof S == "function" && (k = S, S = null), z != null && this.write(z, S), V.corked && (V.corked = 1, this.uncork()), V.ending || G(this, V, k), this;
              }, Object.defineProperty(M.prototype, "writableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.length;
                }
              });
              function pt(z) {
                return z.ending && z.length === 0 && z.bufferedRequest === null && !z.finished && !z.writing;
              }
              function ct(z, S) {
                z._final(function(k) {
                  S.pendingcb--, k && x(z, k), S.prefinished = !0, z.emit("prefinish"), mt(z, S);
                });
              }
              function ot(z, S) {
                !S.prefinished && !S.finalCalled && (typeof z._final == "function" && !S.destroyed ? (S.pendingcb++, S.finalCalled = !0, o.nextTick(ct, z, S)) : (S.prefinished = !0, z.emit("prefinish")));
              }
              function mt(z, S) {
                var k = pt(S);
                if (k && (ot(z, S), S.pendingcb === 0 && (S.finished = !0, z.emit("finish"), S.autoDestroy))) {
                  var V = z._readableState;
                  (!V || V.autoDestroy && V.endEmitted) && z.destroy();
                }
                return k;
              }
              function G(z, S, k) {
                S.ending = !0, mt(z, S), k && (S.finished ? o.nextTick(k) : z.once("finish", k)), S.ended = !0, z.writable = !1;
              }
              function Tt(z, S, k) {
                var V = z.entry;
                for (z.entry = null; V; ) {
                  var it = V.callback;
                  S.pendingcb--, it(k), V = V.next;
                }
                S.corkedRequestsFree.next = z;
              }
              Object.defineProperty(M.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState === void 0 ? !1 : this._writableState.destroyed;
                },
                set: function(S) {
                  this._writableState && (this._writableState.destroyed = S);
                }
              }), M.prototype.destroy = v.destroy, M.prototype._undestroy = v.undestroy, M.prototype._destroy = function(z, S) {
                S(z);
              };
            }
          ),
          /***/
          90933: (
            /***/
            function(u, d, t) {
              var o = t(82530), r;
              function n(F, x, P) {
                return x = i(x), x in F ? Object.defineProperty(F, x, { value: P, enumerable: !0, configurable: !0, writable: !0 }) : F[x] = P, F;
              }
              function i(F) {
                var x = f(F, "string");
                return typeof x == "symbol" ? x : String(x);
              }
              function f(F, x) {
                if (typeof F != "object" || F === null)
                  return F;
                var P = F[Symbol.toPrimitive];
                if (P !== void 0) {
                  var L = P.call(F, x || "default");
                  if (typeof L != "object")
                    return L;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (x === "string" ? String : Number)(F);
              }
              var l = t(47549), c = Symbol("lastResolve"), h = Symbol("lastReject"), a = Symbol("error"), v = Symbol("ended"), y = Symbol("lastPromise"), g = Symbol("handlePromise"), e = Symbol("stream");
              function m(F, x) {
                return {
                  value: F,
                  done: x
                };
              }
              function w(F) {
                var x = F[c];
                if (x !== null) {
                  var P = F[e].read();
                  P !== null && (F[y] = null, F[c] = null, F[h] = null, x(m(P, !1)));
                }
              }
              function D(F) {
                o.nextTick(w, F);
              }
              function I(F, x) {
                return function(P, L) {
                  F.then(function() {
                    if (x[v]) {
                      P(m(void 0, !0));
                      return;
                    }
                    x[g](P, L);
                  }, L);
                };
              }
              var T = Object.getPrototypeOf(function() {
              }), C = Object.setPrototypeOf((r = {
                get stream() {
                  return this[e];
                },
                next: function() {
                  var x = this, P = this[a];
                  if (P !== null)
                    return Promise.reject(P);
                  if (this[v])
                    return Promise.resolve(m(void 0, !0));
                  if (this[e].destroyed)
                    return new Promise(function(K, ut) {
                      o.nextTick(function() {
                        x[a] ? ut(x[a]) : K(m(void 0, !0));
                      });
                    });
                  var L = this[y], N;
                  if (L)
                    N = new Promise(I(L, this));
                  else {
                    var M = this[e].read();
                    if (M !== null)
                      return Promise.resolve(m(M, !1));
                    N = new Promise(this[g]);
                  }
                  return this[y] = N, N;
                }
              }, n(r, Symbol.asyncIterator, function() {
                return this;
              }), n(r, "return", function() {
                var x = this;
                return new Promise(function(P, L) {
                  x[e].destroy(null, function(N) {
                    if (N) {
                      L(N);
                      return;
                    }
                    P(m(void 0, !0));
                  });
                });
              }), r), T), E = function(x) {
                var P, L = Object.create(C, (P = {}, n(P, e, {
                  value: x,
                  writable: !0
                }), n(P, c, {
                  value: null,
                  writable: !0
                }), n(P, h, {
                  value: null,
                  writable: !0
                }), n(P, a, {
                  value: null,
                  writable: !0
                }), n(P, v, {
                  value: x._readableState.endEmitted,
                  writable: !0
                }), n(P, g, {
                  value: function(M, K) {
                    var ut = L[e].read();
                    ut ? (L[y] = null, L[c] = null, L[h] = null, M(m(ut, !1))) : (L[c] = M, L[h] = K);
                  },
                  writable: !0
                }), P));
                return L[y] = null, l(x, function(N) {
                  if (N && N.code !== "ERR_STREAM_PREMATURE_CLOSE") {
                    var M = L[h];
                    M !== null && (L[y] = null, L[c] = null, L[h] = null, M(N)), L[a] = N;
                    return;
                  }
                  var K = L[c];
                  K !== null && (L[y] = null, L[c] = null, L[h] = null, K(m(void 0, !0))), L[v] = !0;
                }), x.on("readable", D.bind(null, L)), L;
              };
              u.exports = E;
            }
          ),
          /***/
          89930: (
            /***/
            function(u, d, t) {
              var o = t(82530);
              function r(h, a) {
                var v = this, y = this._readableState && this._readableState.destroyed, g = this._writableState && this._writableState.destroyed;
                return y || g ? (a ? a(h) : h && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, o.nextTick(l, this, h)) : o.nextTick(l, this, h)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(h || null, function(e) {
                  !a && e ? v._writableState ? v._writableState.errorEmitted ? o.nextTick(i, v) : (v._writableState.errorEmitted = !0, o.nextTick(n, v, e)) : o.nextTick(n, v, e) : a ? (o.nextTick(i, v), a(e)) : o.nextTick(i, v);
                }), this);
              }
              function n(h, a) {
                l(h, a), i(h);
              }
              function i(h) {
                h._writableState && !h._writableState.emitClose || h._readableState && !h._readableState.emitClose || h.emit("close");
              }
              function f() {
                this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
              }
              function l(h, a) {
                h.emit("error", a);
              }
              function c(h, a) {
                var v = h._readableState, y = h._writableState;
                v && v.autoDestroy || y && y.autoDestroy ? h.destroy(a) : h.emit("error", a);
              }
              u.exports = {
                destroy: r,
                undestroy: f,
                errorOrDestroy: c
              };
            }
          ),
          /***/
          47549: (
            /***/
            function(u, d, t) {
              var o = t(75065).q.ERR_STREAM_PREMATURE_CLOSE;
              function r(l) {
                var c = !1;
                return function() {
                  if (!c) {
                    c = !0;
                    for (var h = arguments.length, a = new Array(h), v = 0; v < h; v++)
                      a[v] = arguments[v];
                    l.apply(this, a);
                  }
                };
              }
              function n() {
              }
              function i(l) {
                return l.setHeader && typeof l.abort == "function";
              }
              function f(l, c, h) {
                if (typeof c == "function")
                  return f(l, null, c);
                c || (c = {}), h = r(h || n);
                var a = c.readable || c.readable !== !1 && l.readable, v = c.writable || c.writable !== !1 && l.writable, y = function() {
                  l.writable || e();
                }, g = l._writableState && l._writableState.finished, e = function() {
                  v = !1, g = !0, a || h.call(l);
                }, m = l._readableState && l._readableState.endEmitted, w = function() {
                  a = !1, m = !0, v || h.call(l);
                }, D = function(E) {
                  h.call(l, E);
                }, I = function() {
                  var E;
                  if (a && !m)
                    return (!l._readableState || !l._readableState.ended) && (E = new o()), h.call(l, E);
                  if (v && !g)
                    return (!l._writableState || !l._writableState.ended) && (E = new o()), h.call(l, E);
                }, T = function() {
                  l.req.on("finish", e);
                };
                return i(l) ? (l.on("complete", e), l.on("abort", I), l.req ? T() : l.on("request", T)) : v && !l._writableState && (l.on("end", y), l.on("close", y)), l.on("end", w), l.on("finish", e), c.error !== !1 && l.on("error", D), l.on("close", I), function() {
                  l.removeListener("complete", e), l.removeListener("abort", I), l.removeListener("request", T), l.req && l.req.removeListener("finish", e), l.removeListener("end", y), l.removeListener("close", y), l.removeListener("finish", e), l.removeListener("end", w), l.removeListener("error", D), l.removeListener("close", I);
                };
              }
              u.exports = f;
            }
          ),
          /***/
          24881: (
            /***/
            function(u) {
              u.exports = function() {
                throw new Error("Readable.from is not available in the browser");
              };
            }
          ),
          /***/
          44858: (
            /***/
            function(u, d, t) {
              var o;
              function r(e) {
                var m = !1;
                return function() {
                  m || (m = !0, e.apply(void 0, arguments));
                };
              }
              var n = t(75065).q, i = n.ERR_MISSING_ARGS, f = n.ERR_STREAM_DESTROYED;
              function l(e) {
                if (e)
                  throw e;
              }
              function c(e) {
                return e.setHeader && typeof e.abort == "function";
              }
              function h(e, m, w, D) {
                D = r(D);
                var I = !1;
                e.on("close", function() {
                  I = !0;
                }), o === void 0 && (o = t(47549)), o(e, {
                  readable: m,
                  writable: w
                }, function(C) {
                  if (C)
                    return D(C);
                  I = !0, D();
                });
                var T = !1;
                return function(C) {
                  if (!I && !T) {
                    if (T = !0, c(e))
                      return e.abort();
                    if (typeof e.destroy == "function")
                      return e.destroy();
                    D(C || new f("pipe"));
                  }
                };
              }
              function a(e) {
                e();
              }
              function v(e, m) {
                return e.pipe(m);
              }
              function y(e) {
                return !e.length || typeof e[e.length - 1] != "function" ? l : e.pop();
              }
              function g() {
                for (var e = arguments.length, m = new Array(e), w = 0; w < e; w++)
                  m[w] = arguments[w];
                var D = y(m);
                if (Array.isArray(m[0]) && (m = m[0]), m.length < 2)
                  throw new i("streams");
                var I, T = m.map(function(C, E) {
                  var F = E < m.length - 1, x = E > 0;
                  return h(C, F, x, function(P) {
                    I || (I = P), P && T.forEach(a), !F && (T.forEach(a), D(I));
                  });
                });
                return m.reduce(v);
              }
              u.exports = g;
            }
          ),
          /***/
          39025: (
            /***/
            function(u, d, t) {
              var o = t(75065).q.ERR_INVALID_OPT_VALUE;
              function r(i, f, l) {
                return i.highWaterMark != null ? i.highWaterMark : f ? i[l] : null;
              }
              function n(i, f, l, c) {
                var h = r(f, c, l);
                if (h != null) {
                  if (!(isFinite(h) && Math.floor(h) === h) || h < 0) {
                    var a = c ? l : "highWaterMark";
                    throw new o(a, h);
                  }
                  return Math.floor(h);
                }
                return i.objectMode ? 16 : 16384;
              }
              u.exports = {
                getHighWaterMark: n
              };
            }
          ),
          /***/
          5908: (
            /***/
            function(u, d, t) {
              u.exports = t(5939).EventEmitter;
            }
          ),
          /***/
          10301: (
            /***/
            function(u, d, t) {
              var o = t(11504).Buffer, r = o.isEncoding || function(T) {
                switch (T = "" + T, T && T.toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                  case "raw":
                    return !0;
                  default:
                    return !1;
                }
              };
              function n(T) {
                if (!T)
                  return "utf8";
                for (var C; ; )
                  switch (T) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return T;
                    default:
                      if (C)
                        return;
                      T = ("" + T).toLowerCase(), C = !0;
                  }
              }
              function i(T) {
                var C = n(T);
                if (typeof C != "string" && (o.isEncoding === r || !r(T)))
                  throw new Error("Unknown encoding: " + T);
                return C || T;
              }
              d.s = f;
              function f(T) {
                this.encoding = i(T);
                var C;
                switch (this.encoding) {
                  case "utf16le":
                    this.text = g, this.end = e, C = 4;
                    break;
                  case "utf8":
                    this.fillLast = a, C = 4;
                    break;
                  case "base64":
                    this.text = m, this.end = w, C = 3;
                    break;
                  default:
                    this.write = D, this.end = I;
                    return;
                }
                this.lastNeed = 0, this.lastTotal = 0, this.lastChar = o.allocUnsafe(C);
              }
              f.prototype.write = function(T) {
                if (T.length === 0)
                  return "";
                var C, E;
                if (this.lastNeed) {
                  if (C = this.fillLast(T), C === void 0)
                    return "";
                  E = this.lastNeed, this.lastNeed = 0;
                } else
                  E = 0;
                return E < T.length ? C ? C + this.text(T, E) : this.text(T, E) : C || "";
              }, f.prototype.end = y, f.prototype.text = v, f.prototype.fillLast = function(T) {
                if (this.lastNeed <= T.length)
                  return T.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                T.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, T.length), this.lastNeed -= T.length;
              };
              function l(T) {
                return T <= 127 ? 0 : T >> 5 === 6 ? 2 : T >> 4 === 14 ? 3 : T >> 3 === 30 ? 4 : T >> 6 === 2 ? -1 : -2;
              }
              function c(T, C, E) {
                var F = C.length - 1;
                if (F < E)
                  return 0;
                var x = l(C[F]);
                return x >= 0 ? (x > 0 && (T.lastNeed = x - 1), x) : --F < E || x === -2 ? 0 : (x = l(C[F]), x >= 0 ? (x > 0 && (T.lastNeed = x - 2), x) : --F < E || x === -2 ? 0 : (x = l(C[F]), x >= 0 ? (x > 0 && (x === 2 ? x = 0 : T.lastNeed = x - 3), x) : 0));
              }
              function h(T, C, E) {
                if ((C[0] & 192) !== 128)
                  return T.lastNeed = 0, "ï¿½";
                if (T.lastNeed > 1 && C.length > 1) {
                  if ((C[1] & 192) !== 128)
                    return T.lastNeed = 1, "ï¿½";
                  if (T.lastNeed > 2 && C.length > 2 && (C[2] & 192) !== 128)
                    return T.lastNeed = 2, "ï¿½";
                }
              }
              function a(T) {
                var C = this.lastTotal - this.lastNeed, E = h(this, T);
                if (E !== void 0)
                  return E;
                if (this.lastNeed <= T.length)
                  return T.copy(this.lastChar, C, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                T.copy(this.lastChar, C, 0, T.length), this.lastNeed -= T.length;
              }
              function v(T, C) {
                var E = c(this, T, C);
                if (!this.lastNeed)
                  return T.toString("utf8", C);
                this.lastTotal = E;
                var F = T.length - (E - this.lastNeed);
                return T.copy(this.lastChar, 0, F), T.toString("utf8", C, F);
              }
              function y(T) {
                var C = T && T.length ? this.write(T) : "";
                return this.lastNeed ? C + "ï¿½" : C;
              }
              function g(T, C) {
                if ((T.length - C) % 2 === 0) {
                  var E = T.toString("utf16le", C);
                  if (E) {
                    var F = E.charCodeAt(E.length - 1);
                    if (F >= 55296 && F <= 56319)
                      return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = T[T.length - 2], this.lastChar[1] = T[T.length - 1], E.slice(0, -1);
                  }
                  return E;
                }
                return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = T[T.length - 1], T.toString("utf16le", C, T.length - 1);
              }
              function e(T) {
                var C = T && T.length ? this.write(T) : "";
                if (this.lastNeed) {
                  var E = this.lastTotal - this.lastNeed;
                  return C + this.lastChar.toString("utf16le", 0, E);
                }
                return C;
              }
              function m(T, C) {
                var E = (T.length - C) % 3;
                return E === 0 ? T.toString("base64", C) : (this.lastNeed = 3 - E, this.lastTotal = 3, E === 1 ? this.lastChar[0] = T[T.length - 1] : (this.lastChar[0] = T[T.length - 2], this.lastChar[1] = T[T.length - 1]), T.toString("base64", C, T.length - E));
              }
              function w(T) {
                var C = T && T.length ? this.write(T) : "";
                return this.lastNeed ? C + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : C;
              }
              function D(T) {
                return T.toString(this.encoding);
              }
              function I(T) {
                return T && T.length ? this.write(T) : "";
              }
            }
          ),
          /***/
          84346: (
            /***/
            function(u) {
              var d = 0, t = -3;
              function o() {
                this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
              }
              function r(P, L) {
                this.source = P, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = L, this.destLen = 0, this.ltree = new o(), this.dtree = new o();
              }
              var n = new o(), i = new o(), f = new Uint8Array(30), l = new Uint16Array(30), c = new Uint8Array(30), h = new Uint16Array(30), a = new Uint8Array([
                16,
                17,
                18,
                0,
                8,
                7,
                9,
                6,
                10,
                5,
                11,
                4,
                12,
                3,
                13,
                2,
                14,
                1,
                15
              ]), v = new o(), y = new Uint8Array(288 + 32);
              function g(P, L, N, M) {
                var K, ut;
                for (K = 0; K < N; ++K)
                  P[K] = 0;
                for (K = 0; K < 30 - N; ++K)
                  P[K + N] = K / N | 0;
                for (ut = M, K = 0; K < 30; ++K)
                  L[K] = ut, ut += 1 << P[K];
              }
              function e(P, L) {
                var N;
                for (N = 0; N < 7; ++N)
                  P.table[N] = 0;
                for (P.table[7] = 24, P.table[8] = 152, P.table[9] = 112, N = 0; N < 24; ++N)
                  P.trans[N] = 256 + N;
                for (N = 0; N < 144; ++N)
                  P.trans[24 + N] = N;
                for (N = 0; N < 8; ++N)
                  P.trans[168 + N] = 280 + N;
                for (N = 0; N < 112; ++N)
                  P.trans[176 + N] = 144 + N;
                for (N = 0; N < 5; ++N)
                  L.table[N] = 0;
                for (L.table[5] = 32, N = 0; N < 32; ++N)
                  L.trans[N] = N;
              }
              var m = new Uint16Array(16);
              function w(P, L, N, M) {
                var K, ut;
                for (K = 0; K < 16; ++K)
                  P.table[K] = 0;
                for (K = 0; K < M; ++K)
                  P.table[L[N + K]]++;
                for (P.table[0] = 0, ut = 0, K = 0; K < 16; ++K)
                  m[K] = ut, ut += P.table[K];
                for (K = 0; K < M; ++K)
                  L[N + K] && (P.trans[m[L[N + K]]++] = K);
              }
              function D(P) {
                P.bitcount-- || (P.tag = P.source[P.sourceIndex++], P.bitcount = 7);
                var L = P.tag & 1;
                return P.tag >>>= 1, L;
              }
              function I(P, L, N) {
                if (!L)
                  return N;
                for (; P.bitcount < 24; )
                  P.tag |= P.source[P.sourceIndex++] << P.bitcount, P.bitcount += 8;
                var M = P.tag & 65535 >>> 16 - L;
                return P.tag >>>= L, P.bitcount -= L, M + N;
              }
              function T(P, L) {
                for (; P.bitcount < 24; )
                  P.tag |= P.source[P.sourceIndex++] << P.bitcount, P.bitcount += 8;
                var N = 0, M = 0, K = 0, ut = P.tag;
                do
                  M = 2 * M + (ut & 1), ut >>>= 1, ++K, N += L.table[K], M -= L.table[K];
                while (M >= 0);
                return P.tag = ut, P.bitcount -= K, L.trans[N + M];
              }
              function C(P, L, N) {
                var M, K, ut, J, rt, yt;
                for (M = I(P, 5, 257), K = I(P, 5, 1), ut = I(P, 4, 4), J = 0; J < 19; ++J)
                  y[J] = 0;
                for (J = 0; J < ut; ++J) {
                  var xt = I(P, 3, 0);
                  y[a[J]] = xt;
                }
                for (w(v, y, 0, 19), rt = 0; rt < M + K; ) {
                  var Et = T(P, v);
                  switch (Et) {
                    case 16:
                      var Ft = y[rt - 1];
                      for (yt = I(P, 2, 3); yt; --yt)
                        y[rt++] = Ft;
                      break;
                    case 17:
                      for (yt = I(P, 3, 3); yt; --yt)
                        y[rt++] = 0;
                      break;
                    case 18:
                      for (yt = I(P, 7, 11); yt; --yt)
                        y[rt++] = 0;
                      break;
                    default:
                      y[rt++] = Et;
                      break;
                  }
                }
                w(L, y, 0, M), w(N, y, M, K);
              }
              function E(P, L, N) {
                for (; ; ) {
                  var M = T(P, L);
                  if (M === 256)
                    return d;
                  if (M < 256)
                    P.dest[P.destLen++] = M;
                  else {
                    var K, ut, J, rt;
                    for (M -= 257, K = I(P, f[M], l[M]), ut = T(P, N), J = P.destLen - I(P, c[ut], h[ut]), rt = J; rt < J + K; ++rt)
                      P.dest[P.destLen++] = P.dest[rt];
                  }
                }
              }
              function F(P) {
                for (var L, N, M; P.bitcount > 8; )
                  P.sourceIndex--, P.bitcount -= 8;
                if (L = P.source[P.sourceIndex + 1], L = 256 * L + P.source[P.sourceIndex], N = P.source[P.sourceIndex + 3], N = 256 * N + P.source[P.sourceIndex + 2], L !== (~N & 65535))
                  return t;
                for (P.sourceIndex += 4, M = L; M; --M)
                  P.dest[P.destLen++] = P.source[P.sourceIndex++];
                return P.bitcount = 0, d;
              }
              function x(P, L) {
                var N = new r(P, L), M, K, ut;
                do {
                  switch (M = D(N), K = I(N, 2, 0), K) {
                    case 0:
                      ut = F(N);
                      break;
                    case 1:
                      ut = E(N, n, i);
                      break;
                    case 2:
                      C(N, N.ltree, N.dtree), ut = E(N, N.ltree, N.dtree);
                      break;
                    default:
                      ut = t;
                  }
                  if (ut !== d)
                    throw new Error("Data error");
                } while (!M);
                return N.destLen < N.dest.length ? typeof N.dest.slice == "function" ? N.dest.slice(0, N.destLen) : N.dest.subarray(0, N.destLen) : N.dest;
              }
              e(n, i), g(f, l, 4, 3), g(c, h, 2, 1), f[28] = 0, l[28] = 258, u.exports = x;
            }
          ),
          /***/
          29440: (
            /***/
            function(u, d, t) {
              u.exports = o;
              function o(n, i) {
                if (r("noDeprecation"))
                  return n;
                var f = !1;
                function l() {
                  if (!f) {
                    if (r("throwDeprecation"))
                      throw new Error(i);
                    r("traceDeprecation") ? console.trace(i) : console.warn(i), f = !0;
                  }
                  return n.apply(this, arguments);
                }
                return l;
              }
              function r(n) {
                try {
                  if (!t.g.localStorage)
                    return !1;
                } catch {
                  return !1;
                }
                var i = t.g.localStorage[n];
                return i == null ? !1 : String(i).toLowerCase() === "true";
              }
            }
          ),
          /***/
          79397: (
            /***/
            function(u) {
              u.exports = function(t) {
                return t && typeof t == "object" && typeof t.copy == "function" && typeof t.fill == "function" && typeof t.readUInt8 == "function";
              };
            }
          ),
          /***/
          64489: (
            /***/
            function(u, d, t) {
              var o = t(77092), r = t(97427), n = t(54010), i = t(82527);
              function f(Dt) {
                return Dt.call.bind(Dt);
              }
              var l = typeof BigInt < "u", c = typeof Symbol < "u", h = f(Object.prototype.toString), a = f(Number.prototype.valueOf), v = f(String.prototype.valueOf), y = f(Boolean.prototype.valueOf);
              if (l)
                var g = f(BigInt.prototype.valueOf);
              if (c)
                var e = f(Symbol.prototype.valueOf);
              function m(Dt, ae) {
                if (typeof Dt != "object")
                  return !1;
                try {
                  return ae(Dt), !0;
                } catch {
                  return !1;
                }
              }
              d.isArgumentsObject = o, d.isGeneratorFunction = r, d.isTypedArray = i;
              function w(Dt) {
                return typeof Promise < "u" && Dt instanceof Promise || Dt !== null && typeof Dt == "object" && typeof Dt.then == "function" && typeof Dt.catch == "function";
              }
              d.isPromise = w;
              function D(Dt) {
                return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(Dt) : i(Dt) || ct(Dt);
              }
              d.isArrayBufferView = D;
              function I(Dt) {
                return n(Dt) === "Uint8Array";
              }
              d.isUint8Array = I;
              function T(Dt) {
                return n(Dt) === "Uint8ClampedArray";
              }
              d.isUint8ClampedArray = T;
              function C(Dt) {
                return n(Dt) === "Uint16Array";
              }
              d.isUint16Array = C;
              function E(Dt) {
                return n(Dt) === "Uint32Array";
              }
              d.isUint32Array = E;
              function F(Dt) {
                return n(Dt) === "Int8Array";
              }
              d.isInt8Array = F;
              function x(Dt) {
                return n(Dt) === "Int16Array";
              }
              d.isInt16Array = x;
              function P(Dt) {
                return n(Dt) === "Int32Array";
              }
              d.isInt32Array = P;
              function L(Dt) {
                return n(Dt) === "Float32Array";
              }
              d.isFloat32Array = L;
              function N(Dt) {
                return n(Dt) === "Float64Array";
              }
              d.isFloat64Array = N;
              function M(Dt) {
                return n(Dt) === "BigInt64Array";
              }
              d.isBigInt64Array = M;
              function K(Dt) {
                return n(Dt) === "BigUint64Array";
              }
              d.isBigUint64Array = K;
              function ut(Dt) {
                return h(Dt) === "[object Map]";
              }
              ut.working = typeof Map < "u" && ut(/* @__PURE__ */ new Map());
              function J(Dt) {
                return typeof Map > "u" ? !1 : ut.working ? ut(Dt) : Dt instanceof Map;
              }
              d.isMap = J;
              function rt(Dt) {
                return h(Dt) === "[object Set]";
              }
              rt.working = typeof Set < "u" && rt(/* @__PURE__ */ new Set());
              function yt(Dt) {
                return typeof Set > "u" ? !1 : rt.working ? rt(Dt) : Dt instanceof Set;
              }
              d.isSet = yt;
              function xt(Dt) {
                return h(Dt) === "[object WeakMap]";
              }
              xt.working = typeof WeakMap < "u" && xt(/* @__PURE__ */ new WeakMap());
              function Et(Dt) {
                return typeof WeakMap > "u" ? !1 : xt.working ? xt(Dt) : Dt instanceof WeakMap;
              }
              d.isWeakMap = Et;
              function Ft(Dt) {
                return h(Dt) === "[object WeakSet]";
              }
              Ft.working = typeof WeakSet < "u" && Ft(/* @__PURE__ */ new WeakSet());
              function Rt(Dt) {
                return Ft(Dt);
              }
              d.isWeakSet = Rt;
              function Ut(Dt) {
                return h(Dt) === "[object ArrayBuffer]";
              }
              Ut.working = typeof ArrayBuffer < "u" && Ut(new ArrayBuffer());
              function Q(Dt) {
                return typeof ArrayBuffer > "u" ? !1 : Ut.working ? Ut(Dt) : Dt instanceof ArrayBuffer;
              }
              d.isArrayBuffer = Q;
              function pt(Dt) {
                return h(Dt) === "[object DataView]";
              }
              pt.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && pt(new DataView(new ArrayBuffer(1), 0, 1));
              function ct(Dt) {
                return typeof DataView > "u" ? !1 : pt.working ? pt(Dt) : Dt instanceof DataView;
              }
              d.isDataView = ct;
              var ot = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
              function mt(Dt) {
                return h(Dt) === "[object SharedArrayBuffer]";
              }
              function G(Dt) {
                return typeof ot > "u" ? !1 : (typeof mt.working > "u" && (mt.working = mt(new ot())), mt.working ? mt(Dt) : Dt instanceof ot);
              }
              d.isSharedArrayBuffer = G;
              function Tt(Dt) {
                return h(Dt) === "[object AsyncFunction]";
              }
              d.isAsyncFunction = Tt;
              function z(Dt) {
                return h(Dt) === "[object Map Iterator]";
              }
              d.isMapIterator = z;
              function S(Dt) {
                return h(Dt) === "[object Set Iterator]";
              }
              d.isSetIterator = S;
              function k(Dt) {
                return h(Dt) === "[object Generator]";
              }
              d.isGeneratorObject = k;
              function V(Dt) {
                return h(Dt) === "[object WebAssembly.Module]";
              }
              d.isWebAssemblyCompiledModule = V;
              function it(Dt) {
                return m(Dt, a);
              }
              d.isNumberObject = it;
              function tt(Dt) {
                return m(Dt, v);
              }
              d.isStringObject = tt;
              function _(Dt) {
                return m(Dt, y);
              }
              d.isBooleanObject = _;
              function At(Dt) {
                return l && m(Dt, g);
              }
              d.isBigIntObject = At;
              function Lt(Dt) {
                return c && m(Dt, e);
              }
              d.isSymbolObject = Lt;
              function Yt(Dt) {
                return it(Dt) || tt(Dt) || _(Dt) || At(Dt) || Lt(Dt);
              }
              d.isBoxedPrimitive = Yt;
              function Gt(Dt) {
                return typeof Uint8Array < "u" && (Q(Dt) || G(Dt));
              }
              d.isAnyArrayBuffer = Gt, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(Dt) {
                Object.defineProperty(d, Dt, {
                  enumerable: !1,
                  value: function() {
                    throw new Error(Dt + " is not supported in userland");
                  }
                });
              });
            }
          ),
          /***/
          85663: (
            /***/
            function(u, d, t) {
              var o = t(82530), r = Object.getOwnPropertyDescriptors || function(ot) {
                for (var mt = Object.keys(ot), G = {}, Tt = 0; Tt < mt.length; Tt++)
                  G[mt[Tt]] = Object.getOwnPropertyDescriptor(ot, mt[Tt]);
                return G;
              }, n = /%[sdj%]/g;
              d.format = function(ct) {
                if (!x(ct)) {
                  for (var ot = [], mt = 0; mt < arguments.length; mt++)
                    ot.push(c(arguments[mt]));
                  return ot.join(" ");
                }
                for (var mt = 1, G = arguments, Tt = G.length, z = String(ct).replace(n, function(k) {
                  if (k === "%%")
                    return "%";
                  if (mt >= Tt)
                    return k;
                  switch (k) {
                    case "%s":
                      return String(G[mt++]);
                    case "%d":
                      return Number(G[mt++]);
                    case "%j":
                      try {
                        return JSON.stringify(G[mt++]);
                      } catch {
                        return "[Circular]";
                      }
                    default:
                      return k;
                  }
                }), S = G[mt]; mt < Tt; S = G[++mt])
                  C(S) || !M(S) ? z += " " + S : z += " " + c(S);
                return z;
              }, d.deprecate = function(ct, ot) {
                if (typeof o < "u" && o.noDeprecation === !0)
                  return ct;
                if (typeof o > "u")
                  return function() {
                    return d.deprecate(ct, ot).apply(this, arguments);
                  };
                var mt = !1;
                function G() {
                  if (!mt) {
                    if (o.throwDeprecation)
                      throw new Error(ot);
                    o.traceDeprecation ? console.trace(ot) : console.error(ot), mt = !0;
                  }
                  return ct.apply(this, arguments);
                }
                return G;
              };
              var i = {}, f = /^$/;
              if (o.env.NODE_DEBUG) {
                var l = o.env.NODE_DEBUG;
                l = l.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), f = new RegExp("^" + l + "$", "i");
              }
              d.debuglog = function(ct) {
                if (ct = ct.toUpperCase(), !i[ct])
                  if (f.test(ct)) {
                    var ot = o.pid;
                    i[ct] = function() {
                      var mt = d.format.apply(d, arguments);
                      console.error("%s %d: %s", ct, ot, mt);
                    };
                  } else
                    i[ct] = function() {
                    };
                return i[ct];
              };
              function c(ct, ot) {
                var mt = {
                  seen: [],
                  stylize: a
                };
                return arguments.length >= 3 && (mt.depth = arguments[2]), arguments.length >= 4 && (mt.colors = arguments[3]), T(ot) ? mt.showHidden = ot : ot && d._extend(mt, ot), L(mt.showHidden) && (mt.showHidden = !1), L(mt.depth) && (mt.depth = 2), L(mt.colors) && (mt.colors = !1), L(mt.customInspect) && (mt.customInspect = !0), mt.colors && (mt.stylize = h), y(mt, ct, mt.depth);
              }
              d.inspect = c, c.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
              }, c.styles = {
                special: "cyan",
                number: "yellow",
                boolean: "yellow",
                undefined: "grey",
                null: "bold",
                string: "green",
                date: "magenta",
                // "name": intentionally not styling
                regexp: "red"
              };
              function h(ct, ot) {
                var mt = c.styles[ot];
                return mt ? "\x1B[" + c.colors[mt][0] + "m" + ct + "\x1B[" + c.colors[mt][1] + "m" : ct;
              }
              function a(ct, ot) {
                return ct;
              }
              function v(ct) {
                var ot = {};
                return ct.forEach(function(mt, G) {
                  ot[mt] = !0;
                }), ot;
              }
              function y(ct, ot, mt) {
                if (ct.customInspect && ot && J(ot.inspect) && // Filter out the util module, it's inspect function is special
                ot.inspect !== d.inspect && // Also filter out any prototype objects using the circular check.
                !(ot.constructor && ot.constructor.prototype === ot)) {
                  var G = ot.inspect(mt, ct);
                  return x(G) || (G = y(ct, G, mt)), G;
                }
                var Tt = g(ct, ot);
                if (Tt)
                  return Tt;
                var z = Object.keys(ot), S = v(z);
                if (ct.showHidden && (z = Object.getOwnPropertyNames(ot)), ut(ot) && (z.indexOf("message") >= 0 || z.indexOf("description") >= 0))
                  return e(ot);
                if (z.length === 0) {
                  if (J(ot)) {
                    var k = ot.name ? ": " + ot.name : "";
                    return ct.stylize("[Function" + k + "]", "special");
                  }
                  if (N(ot))
                    return ct.stylize(RegExp.prototype.toString.call(ot), "regexp");
                  if (K(ot))
                    return ct.stylize(Date.prototype.toString.call(ot), "date");
                  if (ut(ot))
                    return e(ot);
                }
                var V = "", it = !1, tt = ["{", "}"];
                if (I(ot) && (it = !0, tt = ["[", "]"]), J(ot)) {
                  var _ = ot.name ? ": " + ot.name : "";
                  V = " [Function" + _ + "]";
                }
                if (N(ot) && (V = " " + RegExp.prototype.toString.call(ot)), K(ot) && (V = " " + Date.prototype.toUTCString.call(ot)), ut(ot) && (V = " " + e(ot)), z.length === 0 && (!it || ot.length == 0))
                  return tt[0] + V + tt[1];
                if (mt < 0)
                  return N(ot) ? ct.stylize(RegExp.prototype.toString.call(ot), "regexp") : ct.stylize("[Object]", "special");
                ct.seen.push(ot);
                var At;
                return it ? At = m(ct, ot, mt, S, z) : At = z.map(function(Lt) {
                  return w(ct, ot, mt, S, Lt, it);
                }), ct.seen.pop(), D(At, V, tt);
              }
              function g(ct, ot) {
                if (L(ot))
                  return ct.stylize("undefined", "undefined");
                if (x(ot)) {
                  var mt = "'" + JSON.stringify(ot).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                  return ct.stylize(mt, "string");
                }
                if (F(ot))
                  return ct.stylize("" + ot, "number");
                if (T(ot))
                  return ct.stylize("" + ot, "boolean");
                if (C(ot))
                  return ct.stylize("null", "null");
              }
              function e(ct) {
                return "[" + Error.prototype.toString.call(ct) + "]";
              }
              function m(ct, ot, mt, G, Tt) {
                for (var z = [], S = 0, k = ot.length; S < k; ++S)
                  Rt(ot, String(S)) ? z.push(w(
                    ct,
                    ot,
                    mt,
                    G,
                    String(S),
                    !0
                  )) : z.push("");
                return Tt.forEach(function(V) {
                  V.match(/^\d+$/) || z.push(w(
                    ct,
                    ot,
                    mt,
                    G,
                    V,
                    !0
                  ));
                }), z;
              }
              function w(ct, ot, mt, G, Tt, z) {
                var S, k, V;
                if (V = Object.getOwnPropertyDescriptor(ot, Tt) || { value: ot[Tt] }, V.get ? V.set ? k = ct.stylize("[Getter/Setter]", "special") : k = ct.stylize("[Getter]", "special") : V.set && (k = ct.stylize("[Setter]", "special")), Rt(G, Tt) || (S = "[" + Tt + "]"), k || (ct.seen.indexOf(V.value) < 0 ? (C(mt) ? k = y(ct, V.value, null) : k = y(ct, V.value, mt - 1), k.indexOf(`
`) > -1 && (z ? k = k.split(`
`).map(function(it) {
                  return "  " + it;
                }).join(`
`).slice(2) : k = `
` + k.split(`
`).map(function(it) {
                  return "   " + it;
                }).join(`
`))) : k = ct.stylize("[Circular]", "special")), L(S)) {
                  if (z && Tt.match(/^\d+$/))
                    return k;
                  S = JSON.stringify("" + Tt), S.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (S = S.slice(1, -1), S = ct.stylize(S, "name")) : (S = S.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), S = ct.stylize(S, "string"));
                }
                return S + ": " + k;
              }
              function D(ct, ot, mt) {
                var G = ct.reduce(function(Tt, z) {
                  return z.indexOf(`
`) >= 0, Tt + z.replace(/\u001b\[\d\d?m/g, "").length + 1;
                }, 0);
                return G > 60 ? mt[0] + (ot === "" ? "" : ot + `
 `) + " " + ct.join(`,
  `) + " " + mt[1] : mt[0] + ot + " " + ct.join(", ") + " " + mt[1];
              }
              d.types = t(64489);
              function I(ct) {
                return Array.isArray(ct);
              }
              d.isArray = I;
              function T(ct) {
                return typeof ct == "boolean";
              }
              d.isBoolean = T;
              function C(ct) {
                return ct === null;
              }
              d.isNull = C;
              function E(ct) {
                return ct == null;
              }
              d.isNullOrUndefined = E;
              function F(ct) {
                return typeof ct == "number";
              }
              d.isNumber = F;
              function x(ct) {
                return typeof ct == "string";
              }
              d.isString = x;
              function P(ct) {
                return typeof ct == "symbol";
              }
              d.isSymbol = P;
              function L(ct) {
                return ct === void 0;
              }
              d.isUndefined = L;
              function N(ct) {
                return M(ct) && yt(ct) === "[object RegExp]";
              }
              d.isRegExp = N, d.types.isRegExp = N;
              function M(ct) {
                return typeof ct == "object" && ct !== null;
              }
              d.isObject = M;
              function K(ct) {
                return M(ct) && yt(ct) === "[object Date]";
              }
              d.isDate = K, d.types.isDate = K;
              function ut(ct) {
                return M(ct) && (yt(ct) === "[object Error]" || ct instanceof Error);
              }
              d.isError = ut, d.types.isNativeError = ut;
              function J(ct) {
                return typeof ct == "function";
              }
              d.isFunction = J;
              function rt(ct) {
                return ct === null || typeof ct == "boolean" || typeof ct == "number" || typeof ct == "string" || typeof ct == "symbol" || // ES6 symbol
                typeof ct > "u";
              }
              d.isPrimitive = rt, d.isBuffer = t(79397);
              function yt(ct) {
                return Object.prototype.toString.call(ct);
              }
              function xt(ct) {
                return ct < 10 ? "0" + ct.toString(10) : ct.toString(10);
              }
              var Et = [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec"
              ];
              function Ft() {
                var ct = /* @__PURE__ */ new Date(), ot = [
                  xt(ct.getHours()),
                  xt(ct.getMinutes()),
                  xt(ct.getSeconds())
                ].join(":");
                return [ct.getDate(), Et[ct.getMonth()], ot].join(" ");
              }
              d.log = function() {
                console.log("%s - %s", Ft(), d.format.apply(d, arguments));
              }, d.inherits = t(48575), d._extend = function(ct, ot) {
                if (!ot || !M(ot))
                  return ct;
                for (var mt = Object.keys(ot), G = mt.length; G--; )
                  ct[mt[G]] = ot[mt[G]];
                return ct;
              };
              function Rt(ct, ot) {
                return Object.prototype.hasOwnProperty.call(ct, ot);
              }
              var Ut = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
              d.promisify = function(ot) {
                if (typeof ot != "function")
                  throw new TypeError('The "original" argument must be of type Function');
                if (Ut && ot[Ut]) {
                  var mt = ot[Ut];
                  if (typeof mt != "function")
                    throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                  return Object.defineProperty(mt, Ut, {
                    value: mt,
                    enumerable: !1,
                    writable: !1,
                    configurable: !0
                  }), mt;
                }
                function mt() {
                  for (var G, Tt, z = new Promise(function(V, it) {
                    G = V, Tt = it;
                  }), S = [], k = 0; k < arguments.length; k++)
                    S.push(arguments[k]);
                  S.push(function(V, it) {
                    V ? Tt(V) : G(it);
                  });
                  try {
                    ot.apply(this, S);
                  } catch (V) {
                    Tt(V);
                  }
                  return z;
                }
                return Object.setPrototypeOf(mt, Object.getPrototypeOf(ot)), Ut && Object.defineProperty(mt, Ut, {
                  value: mt,
                  enumerable: !1,
                  writable: !1,
                  configurable: !0
                }), Object.defineProperties(
                  mt,
                  r(ot)
                );
              }, d.promisify.custom = Ut;
              function Q(ct, ot) {
                if (!ct) {
                  var mt = new Error("Promise was rejected with a falsy value");
                  mt.reason = ct, ct = mt;
                }
                return ot(ct);
              }
              function pt(ct) {
                if (typeof ct != "function")
                  throw new TypeError('The "original" argument must be of type Function');
                function ot() {
                  for (var mt = [], G = 0; G < arguments.length; G++)
                    mt.push(arguments[G]);
                  var Tt = mt.pop();
                  if (typeof Tt != "function")
                    throw new TypeError("The last argument must be of type Function");
                  var z = this, S = function() {
                    return Tt.apply(z, arguments);
                  };
                  ct.apply(this, mt).then(
                    function(k) {
                      o.nextTick(S.bind(null, null, k));
                    },
                    function(k) {
                      o.nextTick(Q.bind(null, k, S));
                    }
                  );
                }
                return Object.setPrototypeOf(ot, Object.getPrototypeOf(ct)), Object.defineProperties(
                  ot,
                  r(ct)
                ), ot;
              }
              d.callbackify = pt;
            }
          ),
          /***/
          54010: (
            /***/
            function(u, d, t) {
              var o = t(94843), r = t(14343), n = t(12550), i = t(97615), f = t(93828), l = i("Object.prototype.toString"), c = t(44111)(), h = typeof globalThis > "u" ? t.g : globalThis, a = r(), v = i("String.prototype.slice"), y = Object.getPrototypeOf, g = i("Array.prototype.indexOf", !0) || function(I, T) {
                for (var C = 0; C < I.length; C += 1)
                  if (I[C] === T)
                    return C;
                return -1;
              }, e = { __proto__: null };
              c && f && y ? o(a, function(D) {
                var I = new h[D]();
                if (Symbol.toStringTag in I) {
                  var T = y(I), C = f(T, Symbol.toStringTag);
                  if (!C) {
                    var E = y(T);
                    C = f(E, Symbol.toStringTag);
                  }
                  e["$" + D] = n(C.get);
                }
              }) : o(a, function(D) {
                var I = new h[D](), T = I.slice || I.set;
                T && (e["$" + D] = n(T));
              });
              var m = function(I) {
                var T = !1;
                return o(e, function(C, E) {
                  if (!T)
                    try {
                      "$" + C(I) === E && (T = v(E, 1));
                    } catch {
                    }
                }), T;
              }, w = function(I) {
                var T = !1;
                return o(e, function(C, E) {
                  if (!T)
                    try {
                      C(I), T = v(E, 1);
                    } catch {
                    }
                }), T;
              };
              u.exports = function(I) {
                if (!I || typeof I != "object")
                  return !1;
                if (!c) {
                  var T = v(l(I), 8, -1);
                  return g(a, T) > -1 ? T : T !== "Object" ? !1 : w(I);
                }
                return f ? m(I) : null;
              };
            }
          ),
          /***/
          26651: (
            /***/
            function(u, d, t) {
              u.exports = t(91117);
            }
          ),
          /***/
          91117: (
            /***/
            function(u, d, t) {
              (function() {
                var o;
                if (u.exports && !t.g.xmldocAssumeBrowser)
                  o = t(53407);
                else if (o = this.sax, !o)
                  throw new Error(
                    "Expected sax to be defined. Make sure you're including sax.js before this file."
                  );
                function r(C, E) {
                  if (!E) {
                    var F = c[c.length - 1];
                    F.parser && (E = F.parser);
                  }
                  this.name = C.name, this.attr = C.attributes, this.val = "", this.children = [], this.firstChild = null, this.lastChild = null, this.line = E ? E.line : null, this.column = E ? E.column : null, this.position = E ? E.position : null, this.startTagPosition = E ? E.startTagPosition : null;
                }
                r.prototype._addChild = function(C) {
                  this.children.push(C), this.firstChild || (this.firstChild = C), this.lastChild = C;
                }, r.prototype._opentag = function(C) {
                  var E = new r(C);
                  this._addChild(E), c.unshift(E);
                }, r.prototype._closetag = function() {
                  c.shift();
                }, r.prototype._text = function(C) {
                  typeof this.children > "u" || (this.val += C, this._addChild(new n(C)));
                }, r.prototype._cdata = function(C) {
                  this.val += C, this._addChild(new i(C));
                }, r.prototype._comment = function(C) {
                  typeof this.children > "u" || this._addChild(new f(C));
                }, r.prototype._error = function(C) {
                  throw C;
                }, r.prototype.eachChild = function(C, E) {
                  for (var F = 0, x = this.children.length; F < x; F++)
                    if (this.children[F].type === "element" && C.call(E, this.children[F], F, this.children) === !1)
                      return;
                }, r.prototype.childNamed = function(C) {
                  for (var E = 0, F = this.children.length; E < F; E++) {
                    var x = this.children[E];
                    if (x.name === C)
                      return x;
                  }
                }, r.prototype.childrenNamed = function(C) {
                  for (var E = [], F = 0, x = this.children.length; F < x; F++)
                    this.children[F].name === C && E.push(this.children[F]);
                  return E;
                }, r.prototype.childWithAttribute = function(C, E) {
                  for (var F = 0, x = this.children.length; F < x; F++) {
                    var P = this.children[F];
                    if (P.type === "element" && (E && P.attr[C] === E || !E && P.attr[C]))
                      return P;
                  }
                }, r.prototype.descendantsNamed = function(C) {
                  for (var E = [], F = 0, x = this.children.length; F < x; F++) {
                    var P = this.children[F];
                    P.type === "element" && (P.name === C && E.push(P), E = E.concat(P.descendantsNamed(C)));
                  }
                  return E;
                }, r.prototype.descendantWithPath = function(C) {
                  for (var E = this, F = C.split("."), x = 0, P = F.length; x < P; x++)
                    if (E && E.type === "element")
                      E = E.childNamed(F[x]);
                    else
                      return;
                  return E;
                }, r.prototype.valueWithPath = function(C) {
                  var E = C.split("@"), F = this.descendantWithPath(E[0]);
                  if (F)
                    return E.length > 1 ? F.attr[E[1]] : F.val;
                }, r.prototype.toString = function(C) {
                  return this.toStringWithIndent("", C);
                }, r.prototype.toStringWithIndent = function(C, E) {
                  var F = C + "<" + this.name, x = E && E.compressed ? "" : `
`;
                  E && E.preserveWhitespace;
                  for (var P in this.attr)
                    Object.prototype.hasOwnProperty.call(this.attr, P) && (F += " " + P + '="' + I(this.attr[P]) + '"');
                  if (this.children.length === 1 && this.children[0].type !== "element")
                    F += ">" + this.children[0].toString(E) + "</" + this.name + ">";
                  else if (this.children.length) {
                    F += ">" + x;
                    for (var L = C + (E && E.compressed ? "" : "  "), N = 0, M = this.children.length; N < M; N++)
                      F += this.children[N].toStringWithIndent(L, E) + x;
                    F += C + "</" + this.name + ">";
                  } else if (E && E.html) {
                    var K = [
                      "area",
                      "base",
                      "br",
                      "col",
                      "embed",
                      "frame",
                      "hr",
                      "img",
                      "input",
                      "keygen",
                      "link",
                      "menuitem",
                      "meta",
                      "param",
                      "source",
                      "track",
                      "wbr"
                    ];
                    K.indexOf(this.name) !== -1 ? F += "/>" : F += "></" + this.name + ">";
                  } else
                    F += "/>";
                  return F;
                };
                function n(C) {
                  this.text = C;
                }
                n.prototype.toString = function(C) {
                  return T(I(this.text), C);
                }, n.prototype.toStringWithIndent = function(C, E) {
                  return C + this.toString(E);
                };
                function i(C) {
                  this.cdata = C;
                }
                i.prototype.toString = function(C) {
                  return "<![CDATA[" + T(this.cdata, C) + "]]>";
                }, i.prototype.toStringWithIndent = function(C, E) {
                  return C + this.toString(E);
                };
                function f(C) {
                  this.comment = C;
                }
                f.prototype.toString = function(C) {
                  return "<!--" + T(I(this.comment), C) + "-->";
                }, f.prototype.toStringWithIndent = function(C, E) {
                  return C + this.toString(E);
                }, r.prototype.type = "element", n.prototype.type = "text", i.prototype.type = "cdata", f.prototype.type = "comment";
                function l(C) {
                  if (C && (C = C.toString().trim()), !C)
                    throw new Error("No XML to parse!");
                  this.doctype = "", this.parser = o.parser(!0), h(this.parser), c = [this];
                  try {
                    this.parser.write(C);
                  } finally {
                    delete this.parser;
                  }
                }
                D(l.prototype, r.prototype), l.prototype._opentag = function(C) {
                  typeof this.children > "u" ? r.call(this, C) : r.prototype._opentag.apply(this, arguments);
                }, l.prototype._doctype = function(C) {
                  this.doctype += C;
                };
                var c = null;
                function h(C) {
                  C.onopentag = a, C.onclosetag = v, C.ontext = y, C.oncdata = g, C.oncomment = e, C.ondoctype = m, C.onerror = w;
                }
                function a() {
                  c[0] && c[0]._opentag.apply(c[0], arguments);
                }
                function v() {
                  c[0] && c[0]._closetag.apply(c[0], arguments);
                }
                function y() {
                  c[0] && c[0]._text.apply(c[0], arguments);
                }
                function g() {
                  c[0] && c[0]._cdata.apply(c[0], arguments);
                }
                function e() {
                  c[0] && c[0]._comment.apply(c[0], arguments);
                }
                function m() {
                  c[0] && c[0]._doctype.apply(c[0], arguments);
                }
                function w() {
                  c[0] && c[0]._error.apply(c[0], arguments);
                }
                function D(C, E) {
                  for (var F in E)
                    E.hasOwnProperty(F) && (C[F] = E[F]);
                }
                function I(C) {
                  return C.toString().replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&apos;").replace(/"/g, "&quot;");
                }
                function T(C, E) {
                  var F = C;
                  return E && E.trimmed && C.length > 25 && (F = F.substring(0, 25).trim() + "â¦"), E && E.preserveWhitespace || (F = F.trim()), F;
                }
                u.exports && !t.g.xmldocAssumeBrowser ? (u.exports.XmlDocument = l, u.exports.XmlElement = r, u.exports.XmlTextNode = n, u.exports.XmlCDataNode = i, u.exports.XmlCommentNode = f) : (this.XmlDocument = l, this.XmlElement = r, this.XmlTextNode = n, this.XmlCDataNode = i, this.XmlCommentNode = f);
              })();
            }
          ),
          /***/
          30570: (
            /***/
            function(u, d, t) {
              typeof window < "u" && !window.Promise && t(46121), t(67367);
              var o = function(n, i) {
                return new Promise(function(f, l) {
                  var c = new XMLHttpRequest();
                  c.open("GET", n, !0);
                  for (var h in i)
                    c.setRequestHeader(h, i[h]);
                  c.responseType = "arraybuffer", c.onreadystatechange = function() {
                    if (c.readyState === 4) {
                      var a = c.status >= 200 && c.status < 300;
                      a || setTimeout(function() {
                        l(new TypeError('Failed to fetch (url: "' + n + '")'));
                      }, 0);
                    }
                  }, c.onload = function() {
                    var a = c.status >= 200 && c.status < 300;
                    a && f(c.response);
                  }, c.onerror = function() {
                    setTimeout(function() {
                      l(new TypeError('Network request failed (url: "' + n + '")'));
                    }, 0);
                  }, c.ontimeout = function() {
                    setTimeout(function() {
                      l(new TypeError('Network request failed (url: "' + n + '")'));
                    }, 0);
                  }, c.send();
                });
              };
              function r(n) {
                this.fs = n, this.resolving = {};
              }
              r.prototype.resolve = function(n, i) {
                if (!this.resolving[n]) {
                  var f = this;
                  this.resolving[n] = new Promise(function(l, c) {
                    n.toLowerCase().indexOf("https://") === 0 || n.toLowerCase().indexOf("http://") === 0 ? f.fs.existsSync(n) ? l() : o(n, i).then(function(h) {
                      f.fs.writeFileSync(n, h), l();
                    }, function(h) {
                      c(h);
                    }) : l();
                  });
                }
                return this.resolving[n];
              }, r.prototype.resolved = function() {
                var n = this;
                return new Promise(function(i, f) {
                  Promise.all(Object.values(n.resolving)).then(function() {
                    i();
                  }, function(l) {
                    f(l);
                  });
                });
              }, u.exports = r;
            }
          ),
          /***/
          82669: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer, r = t(16920).isFunction, n = t(16920).isUndefined;
              t(16920).isNull;
              var i = t(70457), f = i.saveAs, l = {
                Roboto: {
                  normal: "Roboto-Regular.ttf",
                  bold: "Roboto-Medium.ttf",
                  italics: "Roboto-Italic.ttf",
                  bolditalics: "Roboto-MediumItalic.ttf"
                }
              };
              function c(a, v, y, g) {
                this.docDefinition = a, this.tableLayouts = v || null, this.fonts = y || l, this.vfs = g;
              }
              function h() {
                try {
                  var a = new Uint8Array(1), v = { foo: function() {
                    return 42;
                  } };
                  return Object.setPrototypeOf(v, Uint8Array.prototype), Object.setPrototypeOf(a, v), a.foo() === 42;
                } catch {
                  return !1;
                }
              }
              c.prototype._createDoc = function(a, v) {
                var y = function(F) {
                  return typeof F == "object" ? { url: F.url, headers: F.headers } : { url: F, headers: {} };
                };
                a = a || {}, this.tableLayouts && (a.tableLayouts = this.tableLayouts);
                var g = t(56498), e = new g(this.fonts);
                if (t(52773).bindFS(this.vfs), !r(v)) {
                  var m = e.createPdfKitDocument(this.docDefinition, a);
                  return m;
                }
                var w = t(30570), D = new w(t(52773));
                for (var I in this.fonts)
                  if (this.fonts.hasOwnProperty(I)) {
                    if (this.fonts[I].normal)
                      if (Array.isArray(this.fonts[I].normal)) {
                        var T = y(this.fonts[I].normal[0]);
                        D.resolve(T.url, T.headers), this.fonts[I].normal[0] = T.url;
                      } else {
                        var T = y(this.fonts[I].normal);
                        D.resolve(T.url, T.headers), this.fonts[I].normal = T.url;
                      }
                    if (this.fonts[I].bold)
                      if (Array.isArray(this.fonts[I].bold)) {
                        var T = y(this.fonts[I].bold[0]);
                        D.resolve(T.url, T.headers), this.fonts[I].bold[0] = T.url;
                      } else {
                        var T = y(this.fonts[I].bold);
                        D.resolve(T.url, T.headers), this.fonts[I].bold = T.url;
                      }
                    if (this.fonts[I].italics)
                      if (Array.isArray(this.fonts[I].italics)) {
                        var T = y(this.fonts[I].italics[0]);
                        D.resolve(T.url, T.headers), this.fonts[I].italics[0] = T.url;
                      } else {
                        var T = y(this.fonts[I].italics);
                        D.resolve(T.url, T.headers), this.fonts[I].italics = T.url;
                      }
                    if (this.fonts[I].bolditalics)
                      if (Array.isArray(this.fonts[I].bolditalics)) {
                        var T = y(this.fonts[I].bolditalics[0]);
                        D.resolve(T.url, T.headers), this.fonts[I].bolditalics[0] = T.url;
                      } else {
                        var T = y(this.fonts[I].bolditalics);
                        D.resolve(T.url, T.headers), this.fonts[I].bolditalics = T.url;
                      }
                  }
                if (this.docDefinition.images) {
                  for (var C in this.docDefinition.images)
                    if (this.docDefinition.images.hasOwnProperty(C)) {
                      var T = y(this.docDefinition.images[C]);
                      D.resolve(T.url, T.headers), this.docDefinition.images[C] = T.url;
                    }
                }
                var E = this;
                D.resolved().then(function() {
                  var F = e.createPdfKitDocument(E.docDefinition, a);
                  v(F);
                }, function(F) {
                  throw F;
                });
              }, c.prototype._flushDoc = function(a, v) {
                var y = [], g;
                a.on("readable", function() {
                  for (var e; (e = a.read(9007199254740991)) !== null; )
                    y.push(e);
                }), a.on("end", function() {
                  g = o.concat(y), v(g, a._pdfMakePages);
                }), a.end();
              }, c.prototype._getPages = function(a, v) {
                if (!v)
                  throw "_getPages is an async method and needs a callback argument";
                var y = this;
                this._createDoc(a, function(g) {
                  y._flushDoc(g, function(e, m) {
                    v(m);
                  });
                });
              }, c.prototype._bufferToBlob = function(a) {
                var v;
                try {
                  v = new Blob([a], { type: "application/pdf" });
                } catch (g) {
                  if (g.name === "InvalidStateError") {
                    var y = new Uint8Array(a);
                    v = new Blob([y.buffer], { type: "application/pdf" });
                  }
                }
                if (!v)
                  throw "Could not generate blob";
                return v;
              }, c.prototype._openWindow = function() {
                var a = window.open("", "_blank");
                if (a === null)
                  throw "Open PDF in new window blocked by browser";
                return a;
              }, c.prototype._openPdf = function(a, v) {
                v || (v = this._openWindow());
                try {
                  this.getBlob(function(y) {
                    var g = window.URL || window.webkitURL, e = g.createObjectURL(y);
                    v.location.href = e;
                  }, a);
                } catch (y) {
                  throw v.close(), y;
                }
              }, c.prototype.open = function(a, v) {
                a = a || {}, a.autoPrint = !1, v = v || null, this._openPdf(a, v);
              }, c.prototype.print = function(a, v) {
                a = a || {}, a.autoPrint = !0, v = v || null, this._openPdf(a, v);
              }, c.prototype.download = function(a, v, y) {
                r(a) && (n(v) || (y = v), v = a, a = null), a = a || "file.pdf", this.getBlob(function(g) {
                  f(g, a), r(v) && v();
                }, y);
              }, c.prototype.getBase64 = function(a, v) {
                if (!a)
                  throw "getBase64 is an async method and needs a callback argument";
                this.getBuffer(function(y) {
                  a(y.toString("base64"));
                }, v);
              }, c.prototype.getDataUrl = function(a, v) {
                if (!a)
                  throw "getDataUrl is an async method and needs a callback argument";
                this.getBuffer(function(y) {
                  a("data:application/pdf;base64," + y.toString("base64"));
                }, v);
              }, c.prototype.getBlob = function(a, v) {
                if (!a)
                  throw "getBlob is an async method and needs a callback argument";
                var y = this;
                this.getBuffer(function(g) {
                  var e = y._bufferToBlob(g);
                  a(e);
                }, v);
              }, c.prototype.getBuffer = function(a, v) {
                if (!a)
                  throw "getBuffer is an async method and needs a callback argument";
                var y = this;
                this._createDoc(v, function(g) {
                  y._flushDoc(g, function(e) {
                    a(e);
                  });
                });
              }, c.prototype.getStream = function(a, v) {
                if (!r(v)) {
                  var y = this._createDoc(a);
                  return y;
                }
                this._createDoc(a, function(g) {
                  v(g);
                });
              }, u.exports = {
                createPdf: function(a, v, y, g) {
                  if (!h())
                    throw "Your browser does not provide the level of support needed";
                  return new c(
                    a,
                    v || t.g.pdfMake.tableLayouts,
                    y || t.g.pdfMake.fonts,
                    g || t.g.pdfMake.vfs
                  );
                }
              };
            }
          ),
          /***/
          52773: (
            /***/
            function(u, d, t) {
              var o = "/", r = t(43060).Buffer;
              function n() {
                this.fileSystem = {}, this.dataSystem = {};
              }
              n.prototype.existsSync = function(f) {
                return f = i(f), typeof this.fileSystem[f] < "u" || typeof this.dataSystem[f] < "u";
              }, n.prototype.readFileSync = function(f, l) {
                f = i(f);
                var c = this.dataSystem[f];
                if (typeof c == "string" && l === "utf8")
                  return c;
                if (c)
                  return new r(c, typeof c == "string" ? "base64" : void 0);
                var h = this.fileSystem[f];
                if (h)
                  return h;
                throw "File '" + f + "' not found in virtual file system";
              }, n.prototype.writeFileSync = function(f, l) {
                this.fileSystem[i(f)] = l;
              }, n.prototype.bindFS = function(f) {
                this.dataSystem = f || {};
              };
              function i(f) {
                return f.indexOf(o) === 0 && (f = f.substring(o.length)), f.indexOf("/") === 0 && (f = f.substring(1)), f;
              }
              u.exports = new n();
            }
          ),
          /***/
          65354: (
            /***/
            function(u, d, t) {
              var o = t(16920).isString;
              function r(l, c) {
                var h = [], a = 0, v = 0, y = [], g = 0, e = 0, m = [], w = c;
                l.forEach(function(F) {
                  n(F) ? (h.push(F), a += F._minWidth, v += F._maxWidth) : i(F) ? (y.push(F), g = Math.max(g, F._minWidth), e = Math.max(e, F._maxWidth)) : m.push(F);
                }), m.forEach(function(F) {
                  o(F.width) && /\d+%/.test(F.width) && (F.width = parseFloat(F.width) * w / 100), F.width < F._minWidth && F.elasticWidth ? F._calcWidth = F._minWidth : F._calcWidth = F.width, c -= F._calcWidth;
                });
                var D = a + g * y.length, I = v + e * y.length;
                if (D >= c)
                  h.forEach(function(F) {
                    F._calcWidth = F._minWidth;
                  }), y.forEach(function(F) {
                    F._calcWidth = g;
                  });
                else {
                  if (I < c)
                    h.forEach(function(F) {
                      F._calcWidth = F._maxWidth, c -= F._calcWidth;
                    });
                  else {
                    var T = c - D, C = I - D;
                    h.forEach(function(F) {
                      var x = F._maxWidth - F._minWidth;
                      F._calcWidth = F._minWidth + x * T / C, c -= F._calcWidth;
                    });
                  }
                  if (y.length > 0) {
                    var E = c / y.length;
                    y.forEach(function(F) {
                      F._calcWidth = E;
                    });
                  }
                }
              }
              function n(l) {
                return l.width === "auto";
              }
              function i(l) {
                return l.width === null || l.width === void 0 || l.width === "*" || l.width === "star";
              }
              function f(l) {
                for (var c = { min: 0, max: 0 }, h = { min: 0, max: 0 }, a = 0, v = 0, y = l.length; v < y; v++) {
                  var g = l[v];
                  i(g) ? (h.min = Math.max(h.min, g._minWidth), h.max = Math.max(h.max, g._maxWidth), a++) : n(g) ? (c.min += g._minWidth, c.max += g._maxWidth) : (c.min += g.width !== void 0 && g.width || g._minWidth, c.max += g.width !== void 0 && g.width || g._maxWidth);
                }
                return a && (c.min += a * h.min, c.max += a * h.max), c;
              }
              u.exports = {
                buildColumnWidths: r,
                measureMinMax: f,
                isAutoColumn: n,
                isStarColumn: i
              };
            }
          ),
          /***/
          77077: (
            /***/
            function(u, d, t) {
              var o = t(28045), r = t(28034), n = t(65354), i = t(16920).isString, f = t(16920).isNumber, l = t(16920).isObject, c = t(16920).isArray, h = t(16920).fontStringify, a = t(16920).getNodeId, v = t(16920).pack, y = t(86976);
              function g(e, m, w, D, I, T, C) {
                this.textTools = new o(e), this.styleStack = new r(m, w), this.imageMeasure = D, this.svgMeasure = I, this.tableLayouts = T, this.images = C, this.autoImageIndex = 1;
              }
              g.prototype.measureDocument = function(e) {
                return this.measureNode(e);
              }, g.prototype.measureNode = function(e) {
                var m = this;
                return this.styleStack.auto(e, function() {
                  if (e._margin = D(), e.columns)
                    return w(m.measureColumns(e));
                  if (e.stack)
                    return w(m.measureVerticalContainer(e));
                  if (e.ul)
                    return w(m.measureUnorderedList(e));
                  if (e.ol)
                    return w(m.measureOrderedList(e));
                  if (e.table)
                    return w(m.measureTable(e));
                  if (e.text !== void 0)
                    return w(m.measureLeaf(e));
                  if (e.toc)
                    return w(m.measureToc(e));
                  if (e.image)
                    return w(m.measureImage(e));
                  if (e.svg)
                    return w(m.measureSVG(e));
                  if (e.canvas)
                    return w(m.measureCanvas(e));
                  if (e.qr)
                    return w(m.measureQr(e));
                  throw "Unrecognized document structure: " + JSON.stringify(e, h);
                });
                function w(I) {
                  var T = I._margin;
                  return T && (I._minWidth += T[0] + T[2], I._maxWidth += T[0] + T[2]), I;
                }
                function D() {
                  function I(P, L) {
                    return P.marginLeft || P.marginTop || P.marginRight || P.marginBottom ? [
                      P.marginLeft || L[0] || 0,
                      P.marginTop || L[1] || 0,
                      P.marginRight || L[2] || 0,
                      P.marginBottom || L[3] || 0
                    ] : L;
                  }
                  function T(P) {
                    for (var L = {}, N = P.length - 1; N >= 0; N--) {
                      var M = P[N], K = m.styleStack.styleDictionary[M];
                      for (var ut in K)
                        K.hasOwnProperty(ut) && (L[ut] = K[ut]);
                    }
                    return L;
                  }
                  function C(P) {
                    return f(P) ? P = [P, P, P, P] : c(P) && P.length === 2 && (P = [P[0], P[1], P[0], P[1]]), P;
                  }
                  var E = [void 0, void 0, void 0, void 0];
                  if (e.style) {
                    var F = c(e.style) ? e.style : [e.style], x = T(F);
                    x && (E = I(x, E)), x.margin && (E = C(x.margin));
                  }
                  return E = I(e, E), e.margin && (E = C(e.margin)), E[0] === void 0 && E[1] === void 0 && E[2] === void 0 && E[3] === void 0 ? null : E;
                }
              }, g.prototype.convertIfBase64Image = function(e) {
                if (/^data:image\/(jpeg|jpg|png);base64,/.test(e.image)) {
                  var m = "$$pdfmake$$" + this.autoImageIndex++;
                  this.images[m] = e.image, e.image = m;
                }
              }, g.prototype.measureImageWithDimensions = function(e, m) {
                if (e.fit) {
                  var w = m.width / m.height > e.fit[0] / e.fit[1] ? e.fit[0] / m.width : e.fit[1] / m.height;
                  e._width = e._minWidth = e._maxWidth = m.width * w, e._height = m.height * w;
                } else
                  e.cover ? (e._width = e._minWidth = e._maxWidth = e.cover.width, e._height = e._minHeight = e._maxHeight = e.cover.height) : (e._width = e._minWidth = e._maxWidth = e.width || m.width, e._height = e.height || m.height * e._width / m.width, f(e.maxWidth) && e.maxWidth < e._width && (e._width = e._minWidth = e._maxWidth = e.maxWidth, e._height = e._width * m.height / m.width), f(e.maxHeight) && e.maxHeight < e._height && (e._height = e.maxHeight, e._width = e._minWidth = e._maxWidth = e._height * m.width / m.height), f(e.minWidth) && e.minWidth > e._width && (e._width = e._minWidth = e._maxWidth = e.minWidth, e._height = e._width * m.height / m.width), f(e.minHeight) && e.minHeight > e._height && (e._height = e.minHeight, e._width = e._minWidth = e._maxWidth = e._height * m.width / m.height));
                e._alignment = this.styleStack.getProperty("alignment");
              }, g.prototype.measureImage = function(e) {
                this.images && this.convertIfBase64Image(e);
                var m = this.imageMeasure.measureImage(e.image);
                return this.measureImageWithDimensions(e, m), e;
              }, g.prototype.measureSVG = function(e) {
                var m = this.svgMeasure.measureSVG(e.svg);
                return this.measureImageWithDimensions(e, m), e.font = this.styleStack.getProperty("font"), e.svg = this.svgMeasure.writeDimensions(e.svg, {
                  width: e._width,
                  height: e._height
                }), e;
              }, g.prototype.measureLeaf = function(e) {
                e._textRef && e._textRef._textNodeRef.text && (e.text = e._textRef._textNodeRef.text);
                var m = this.styleStack.clone();
                m.push(e);
                var w = this.textTools.buildInlines(e.text, m);
                return e._inlines = w.items, e._minWidth = w.minWidth, e._maxWidth = w.maxWidth, e;
              }, g.prototype.measureToc = function(e) {
                if (e.toc.title && (e.toc.title = this.measureNode(e.toc.title)), e.toc._items.length > 0) {
                  for (var m = [], w = e.toc.textStyle || {}, D = e.toc.numberStyle || w, I = e.toc.textMargin || [0, 0, 0, 0], T = 0, C = e.toc._items.length; T < C; T++) {
                    var E = e.toc._items[T], F = E._textNodeRef.tocStyle || w, x = E._textNodeRef.tocMargin || I, P = E._textNodeRef.tocNumberStyle || D, L = a(E._nodeRef);
                    m.push([
                      { text: E._textNodeRef.text, linkToDestination: L, alignment: "left", style: F, margin: x },
                      { text: "00000", linkToDestination: L, alignment: "right", _tocItemRef: E._nodeRef, style: P, margin: [0, x[1], 0, x[3]] }
                    ]);
                  }
                  e.toc._table = {
                    table: {
                      dontBreakRows: !0,
                      widths: ["*", "auto"],
                      body: m
                    },
                    layout: "noBorders"
                  }, e.toc._table = this.measureNode(e.toc._table);
                }
                return e;
              }, g.prototype.measureVerticalContainer = function(e) {
                var m = e.stack;
                e._minWidth = 0, e._maxWidth = 0;
                for (var w = 0, D = m.length; w < D; w++)
                  m[w] = this.measureNode(m[w]), e._minWidth = Math.max(e._minWidth, m[w]._minWidth), e._maxWidth = Math.max(e._maxWidth, m[w]._maxWidth);
                return e;
              }, g.prototype.gapSizeForList = function() {
                return this.textTools.sizeOfString("9. ", this.styleStack);
              }, g.prototype.buildUnorderedMarker = function(e, m, w) {
                function D(F, x) {
                  var P = F.fontSize / 6;
                  return {
                    canvas: [{
                      x: P,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3,
                      r1: P,
                      r2: P,
                      type: "ellipse",
                      color: x
                    }]
                  };
                }
                function I(F, x) {
                  var P = F.fontSize / 3;
                  return {
                    canvas: [{
                      x: 0,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3 - P / 2,
                      h: P,
                      w: P,
                      type: "rect",
                      color: x
                    }]
                  };
                }
                function T(F, x) {
                  var P = F.fontSize / 6;
                  return {
                    canvas: [{
                      x: P,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3,
                      r1: P,
                      r2: P,
                      type: "ellipse",
                      lineColor: x
                    }]
                  };
                }
                var C, E = e.getProperty("markerColor") || e.getProperty("color") || "black";
                switch (w) {
                  case "circle":
                    C = T(m, E);
                    break;
                  case "square":
                    C = I(m, E);
                    break;
                  case "none":
                    C = {};
                    break;
                  case "disc":
                  default:
                    C = D(m, E);
                    break;
                }
                return C._minWidth = C._maxWidth = m.width, C._minHeight = C._maxHeight = m.height, C;
              }, g.prototype.buildOrderedMarker = function(e, m, w, D) {
                function I(P) {
                  function L(N) {
                    return (N >= 26 ? L((N / 26 >> 0) - 1) : "") + "abcdefghijklmnopqrstuvwxyz"[N % 26 >> 0];
                  }
                  return P < 1 ? P.toString() : L(P - 1);
                }
                function T(P) {
                  if (P < 1 || P > 4999)
                    return P.toString();
                  var L = P, N = { M: 1e3, CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 }, M = "", K;
                  for (K in N)
                    for (; L >= N[K]; )
                      M += K, L -= N[K];
                  return M;
                }
                function C(P) {
                  return P.toString();
                }
                var E;
                switch (w) {
                  case "none":
                    E = null;
                    break;
                  case "upper-alpha":
                    E = I(e).toUpperCase();
                    break;
                  case "lower-alpha":
                    E = I(e);
                    break;
                  case "upper-roman":
                    E = T(e);
                    break;
                  case "lower-roman":
                    E = T(e).toLowerCase();
                    break;
                  case "decimal":
                  default:
                    E = C(e);
                    break;
                }
                if (E === null)
                  return {};
                D && (c(D) ? (D[0] && (E = D[0] + E), D[1] && (E += D[1]), E += " ") : E += D + " ");
                var F = { text: E }, x = m.getProperty("markerColor");
                return x && (F.color = x), { _inlines: this.textTools.buildInlines(F, m).items };
              }, g.prototype.measureUnorderedList = function(e) {
                var m = this.styleStack.clone(), w = e.ul;
                e.type = e.type || "disc", e._gapSize = this.gapSizeForList(), e._minWidth = 0, e._maxWidth = 0;
                for (var D = 0, I = w.length; D < I; D++) {
                  var T = w[D] = this.measureNode(w[D]);
                  !T.ol && !T.ul && (T.listMarker = this.buildUnorderedMarker(m, e._gapSize, T.listType || e.type)), e._minWidth = Math.max(e._minWidth, w[D]._minWidth + e._gapSize.width), e._maxWidth = Math.max(e._maxWidth, w[D]._maxWidth + e._gapSize.width);
                }
                return e;
              }, g.prototype.measureOrderedList = function(e) {
                var m = this.styleStack.clone(), w = e.ol;
                e.type = e.type || "decimal", e.separator = e.separator || ".", e.reversed = e.reversed || !1, f(e.start) || (e.start = e.reversed ? w.length : 1), e._gapSize = this.gapSizeForList(), e._minWidth = 0, e._maxWidth = 0;
                for (var D = e.start, I = 0, T = w.length; I < T; I++) {
                  var C = w[I] = this.measureNode(w[I]);
                  if (!C.ol && !C.ul) {
                    var E = f(C.counter) ? C.counter : D;
                    C.listMarker = this.buildOrderedMarker(E, m, C.listType || e.type, e.separator), C.listMarker._inlines && (e._gapSize.width = Math.max(e._gapSize.width, C.listMarker._inlines[0].width));
                  }
                  e._minWidth = Math.max(e._minWidth, w[I]._minWidth), e._maxWidth = Math.max(e._maxWidth, w[I]._maxWidth), e.reversed ? D-- : D++;
                }
                e._minWidth += e._gapSize.width, e._maxWidth += e._gapSize.width;
                for (var I = 0, T = w.length; I < T; I++) {
                  var C = w[I];
                  !C.ol && !C.ul && (C.listMarker._minWidth = C.listMarker._maxWidth = e._gapSize.width);
                }
                return e;
              }, g.prototype.measureColumns = function(e) {
                var m = e.columns;
                e._gap = this.styleStack.getProperty("columnGap") || 0;
                for (var w = 0, D = m.length; w < D; w++)
                  m[w] = this.measureNode(m[w]);
                var I = n.measureMinMax(m), T = m.length > 0 ? m.length - 1 : 0;
                return e._minWidth = I.min + e._gap * T, e._maxWidth = I.max + e._gap * T, e;
              }, g.prototype.measureTable = function(e) {
                rt(e), e._layout = L(this.tableLayouts), e._offsets = N(e._layout);
                var m = [], w, D, I, T;
                for (w = 0, I = e.table.body[0].length; w < I; w++) {
                  var C = e.table.widths[w];
                  for (C._minWidth = 0, C._maxWidth = 0, D = 0, T = e.table.body.length; D < T; D++) {
                    var E = e.table.body[D], F = E[w];
                    if (F === void 0)
                      throw console.error("Malformed table row ", E, "in node ", e), "Malformed table row, a cell is undefined.";
                    F === null && (F = ""), F._span || (F = E[w] = this.styleStack.auto(F, P(this, F)), F.colSpan && F.colSpan > 1 ? (ut(E, w, F.colSpan), m.push({ col: w, span: F.colSpan, minWidth: F._minWidth, maxWidth: F._maxWidth })) : (C._minWidth = Math.max(C._minWidth, F._minWidth), C._maxWidth = Math.max(C._maxWidth, F._maxWidth))), F.rowSpan && F.rowSpan > 1 && J(e.table, D, w, F.rowSpan);
                  }
                }
                M();
                var x = n.measureMinMax(e.table.widths);
                return e._minWidth = x.min + e._offsets.total, e._maxWidth = x.max + e._offsets.total, e;
                function P(yt, xt) {
                  return function() {
                    return l(xt) && (xt.fillColor = yt.styleStack.getProperty("fillColor"), xt.fillOpacity = yt.styleStack.getProperty("fillOpacity")), yt.measureNode(xt);
                  };
                }
                function L(yt) {
                  var xt = e.layout;
                  i(xt) && (xt = yt[xt]);
                  var Et = {
                    hLineWidth: function(Ft, Rt) {
                      return 1;
                    },
                    vLineWidth: function(Ft, Rt) {
                      return 1;
                    },
                    hLineColor: function(Ft, Rt) {
                      return "black";
                    },
                    vLineColor: function(Ft, Rt) {
                      return "black";
                    },
                    hLineStyle: function(Ft, Rt) {
                      return null;
                    },
                    vLineStyle: function(Ft, Rt) {
                      return null;
                    },
                    paddingLeft: function(Ft, Rt) {
                      return 4;
                    },
                    paddingRight: function(Ft, Rt) {
                      return 4;
                    },
                    paddingTop: function(Ft, Rt) {
                      return 2;
                    },
                    paddingBottom: function(Ft, Rt) {
                      return 2;
                    },
                    fillColor: function(Ft, Rt) {
                      return null;
                    },
                    fillOpacity: function(Ft, Rt) {
                      return 1;
                    },
                    defaultBorder: !0
                  };
                  return v(Et, xt);
                }
                function N(yt) {
                  for (var xt = [], Et = 0, Ft = 0, Rt = 0, Ut = e.table.widths.length; Rt < Ut; Rt++) {
                    var Q = Ft + yt.vLineWidth(Rt, e) + yt.paddingLeft(Rt, e);
                    xt.push(Q), Et += Q, Ft = yt.paddingRight(Rt, e);
                  }
                  return Et += Ft + yt.vLineWidth(e.table.widths.length, e), {
                    total: Et,
                    offsets: xt
                  };
                }
                function M() {
                  for (var yt, xt, Et = 0, Ft = m.length; Et < Ft; Et++) {
                    var Rt = m[Et], Ut = K(Rt.col, Rt.span, e._offsets), Q = Rt.minWidth - Ut.minWidth, pt = Rt.maxWidth - Ut.maxWidth;
                    if (Q > 0)
                      for (yt = Q / Rt.span, xt = 0; xt < Rt.span; xt++)
                        e.table.widths[Rt.col + xt]._minWidth += yt;
                    if (pt > 0)
                      for (yt = pt / Rt.span, xt = 0; xt < Rt.span; xt++)
                        e.table.widths[Rt.col + xt]._maxWidth += yt;
                  }
                }
                function K(yt, xt, Et) {
                  for (var Ft = { minWidth: 0, maxWidth: 0 }, Rt = 0; Rt < xt; Rt++)
                    Ft.minWidth += e.table.widths[yt + Rt]._minWidth + (Rt ? Et.offsets[yt + Rt] : 0), Ft.maxWidth += e.table.widths[yt + Rt]._maxWidth + (Rt ? Et.offsets[yt + Rt] : 0);
                  return Ft;
                }
                function ut(yt, xt, Et) {
                  for (var Ft = 1; Ft < Et; Ft++)
                    yt[xt + Ft] = {
                      _span: !0,
                      _minWidth: 0,
                      _maxWidth: 0,
                      rowSpan: yt[xt].rowSpan
                    };
                }
                function J(yt, xt, Et, Ft) {
                  for (var Rt = 1; Rt < Ft; Rt++)
                    yt.body[xt + Rt][Et] = {
                      _span: !0,
                      _minWidth: 0,
                      _maxWidth: 0,
                      fillColor: yt.body[xt][Et].fillColor,
                      fillOpacity: yt.body[xt][Et].fillOpacity
                    };
                }
                function rt(yt) {
                  if (yt.table.widths || (yt.table.widths = "auto"), i(yt.table.widths))
                    for (yt.table.widths = [yt.table.widths]; yt.table.widths.length < yt.table.body[0].length; )
                      yt.table.widths.push(yt.table.widths[yt.table.widths.length - 1]);
                  for (var xt = 0, Et = yt.table.widths.length; xt < Et; xt++) {
                    var Ft = yt.table.widths[xt];
                    (f(Ft) || i(Ft)) && (yt.table.widths[xt] = { width: Ft });
                  }
                }
              }, g.prototype.measureCanvas = function(e) {
                for (var m = 0, w = 0, D = 0, I = e.canvas.length; D < I; D++) {
                  var T = e.canvas[D];
                  switch (T.type) {
                    case "ellipse":
                      m = Math.max(m, T.x + T.r1), w = Math.max(w, T.y + T.r2);
                      break;
                    case "rect":
                      m = Math.max(m, T.x + T.w), w = Math.max(w, T.y + T.h);
                      break;
                    case "line":
                      m = Math.max(m, T.x1, T.x2), w = Math.max(w, T.y1, T.y2);
                      break;
                    case "polyline":
                      for (var C = 0, E = T.points.length; C < E; C++)
                        m = Math.max(m, T.points[C].x), w = Math.max(w, T.points[C].y);
                      break;
                  }
                }
                return e._minWidth = e._maxWidth = m, e._minHeight = e._maxHeight = w, e._alignment = this.styleStack.getProperty("alignment"), e;
              }, g.prototype.measureQr = function(e) {
                return e = y.measure(e), e._alignment = this.styleStack.getProperty("alignment"), e;
              }, u.exports = g;
            }
          ),
          /***/
          78702: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer, r = t(16920).isString, n = t(16920).isNumber, i = t(16920).isBoolean, f = t(16920).isArray, l = t(16920).isUndefined, c = t(16920).fontStringify;
              function h() {
              }
              h.prototype.preprocessDocument = function(a) {
                return this.parentNode = null, this.tocs = [], this.nodeReferences = [], this.preprocessNode(a);
              }, h.prototype.preprocessNode = function(a) {
                if (f(a) ? a = { stack: a } : r(a) ? a = { text: a } : n(a) || i(a) ? a = { text: a.toString() } : a == null ? a = { text: "" } : Object.keys(a).length === 0 ? a = { text: "" } : "text" in a && (a.text === void 0 || a.text === null) && (a.text = ""), a.columns)
                  return this.preprocessColumns(a);
                if (a.stack)
                  return this.preprocessVerticalContainer(a);
                if (a.ul)
                  return this.preprocessList(a);
                if (a.ol)
                  return this.preprocessList(a);
                if (a.table)
                  return this.preprocessTable(a);
                if (a.text !== void 0)
                  return this.preprocessText(a);
                if (a.toc)
                  return this.preprocessToc(a);
                if (a.image)
                  return this.preprocessImage(a);
                if (a.svg)
                  return this.preprocessSVG(a);
                if (a.canvas)
                  return this.preprocessCanvas(a);
                if (a.qr)
                  return this.preprocessQr(a);
                if (a.pageReference || a.textReference)
                  return this.preprocessText(a);
                throw "Unrecognized document structure: " + JSON.stringify(a, c);
              }, h.prototype.preprocessColumns = function(a) {
                for (var v = a.columns, y = 0, g = v.length; y < g; y++)
                  v[y] = this.preprocessNode(v[y]);
                return a;
              }, h.prototype.preprocessVerticalContainer = function(a) {
                for (var v = a.stack, y = 0, g = v.length; y < g; y++)
                  v[y] = this.preprocessNode(v[y]);
                return a;
              }, h.prototype.preprocessList = function(a) {
                for (var v = a.ul || a.ol, y = 0, g = v.length; y < g; y++)
                  v[y] = this.preprocessNode(v[y]);
                return a;
              }, h.prototype.preprocessTable = function(a) {
                var v, y, g, e;
                for (v = 0, g = a.table.body[0].length; v < g; v++)
                  for (y = 0, e = a.table.body.length; y < e; y++) {
                    var m = a.table.body[y], w = m[v];
                    w !== void 0 && (w === null && (w = ""), w._span || (m[v] = this.preprocessNode(w)));
                  }
                return a;
              }, h.prototype.preprocessText = function(a) {
                if (a.tocItem) {
                  f(a.tocItem) || (a.tocItem = [a.tocItem]);
                  for (var v = 0, y = a.tocItem.length; v < y; v++) {
                    r(a.tocItem[v]) || (a.tocItem[v] = "_default_");
                    var g = a.tocItem[v];
                    this.tocs[g] || (this.tocs[g] = { toc: { _items: [], _pseudo: !0 } }), a.id || (a.id = "toc-" + g + "-" + this.tocs[g].toc._items.length);
                    var e = {
                      _nodeRef: this._getNodeForNodeRef(a),
                      _textNodeRef: a
                    };
                    this.tocs[g].toc._items.push(e);
                  }
                }
                if (a.id)
                  if (this.nodeReferences[a.id]) {
                    if (!this.nodeReferences[a.id]._pseudo)
                      throw "Node id '" + a.id + "' already exists";
                    this.nodeReferences[a.id]._nodeRef = this._getNodeForNodeRef(a), this.nodeReferences[a.id]._textNodeRef = a, this.nodeReferences[a.id]._pseudo = !1;
                  } else
                    this.nodeReferences[a.id] = {
                      _nodeRef: this._getNodeForNodeRef(a),
                      _textNodeRef: a
                    };
                if (a.pageReference && (this.nodeReferences[a.pageReference] || (this.nodeReferences[a.pageReference] = {
                  _nodeRef: {},
                  _textNodeRef: {},
                  _pseudo: !0
                }), a.text = "00000", a.linkToDestination = a.pageReference, a._pageRef = this.nodeReferences[a.pageReference]), a.textReference && (this.nodeReferences[a.textReference] || (this.nodeReferences[a.textReference] = { _nodeRef: {}, _pseudo: !0 }), a.text = "", a.linkToDestination = a.textReference, a._textRef = this.nodeReferences[a.textReference]), a.text && a.text.text)
                  a.text = [this.preprocessNode(a.text)];
                else if (f(a.text)) {
                  var m = !1;
                  this.parentNode === null && (this.parentNode = a, m = !0);
                  for (var v = 0, y = a.text.length; v < y; v++)
                    a.text[v] = this.preprocessNode(a.text[v]);
                  m && (this.parentNode = null);
                }
                return a;
              }, h.prototype.preprocessToc = function(a) {
                if (a.toc.id || (a.toc.id = "_default_"), a.toc.title = a.toc.title ? this.preprocessNode(a.toc.title) : null, a.toc._items = [], this.tocs[a.toc.id]) {
                  if (!this.tocs[a.toc.id].toc._pseudo)
                    throw "TOC '" + a.toc.id + "' already exists";
                  a.toc._items = this.tocs[a.toc.id].toc._items;
                }
                return this.tocs[a.toc.id] = a, a;
              }, h.prototype.preprocessImage = function(a) {
                return !l(a.image.type) && !l(a.image.data) && a.image.type === "Buffer" && f(a.image.data) && (a.image = o.from(a.image.data)), a;
              }, h.prototype.preprocessSVG = function(a) {
                return a;
              }, h.prototype.preprocessCanvas = function(a) {
                return a;
              }, h.prototype.preprocessQr = function(a) {
                return a;
              }, h.prototype._getNodeForNodeRef = function(a) {
                return this.parentNode ? this.parentNode : a;
              }, u.exports = h;
            }
          ),
          /***/
          79833: (
            /***/
            function(u, d, t) {
              var o = t(73602), r = t(16920).isString;
              function n(c, h) {
                this.pages = [], this.pageMargins = h, this.x = h.left, this.availableWidth = c.width - h.left - h.right, this.availableHeight = 0, this.page = -1, this.snapshots = [], this.endingCell = null, this.tracker = new o(), this.backgroundLength = [], this.addPage(c);
              }
              n.prototype.beginColumnGroup = function() {
                this.snapshots.push({
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  page: this.page,
                  bottomMost: {
                    x: this.x,
                    y: this.y,
                    availableHeight: this.availableHeight,
                    availableWidth: this.availableWidth,
                    page: this.page
                  },
                  endingCell: this.endingCell,
                  lastColumnWidth: this.lastColumnWidth
                }), this.lastColumnWidth = 0;
              }, n.prototype.beginColumn = function(c, h, a) {
                var v = this.snapshots[this.snapshots.length - 1];
                this.calculateBottomMost(v), this.endingCell = a, this.page = v.page, this.x = this.x + this.lastColumnWidth + (h || 0), this.y = v.y, this.availableWidth = c, this.availableHeight = v.availableHeight, this.lastColumnWidth = c;
              }, n.prototype.calculateBottomMost = function(c) {
                this.endingCell ? (this.saveContextInEndingCell(this.endingCell), this.endingCell = null) : c.bottomMost = l(this, c.bottomMost);
              }, n.prototype.markEnding = function(c) {
                this.page = c._columnEndingContext.page, this.x = c._columnEndingContext.x, this.y = c._columnEndingContext.y, this.availableWidth = c._columnEndingContext.availableWidth, this.availableHeight = c._columnEndingContext.availableHeight, this.lastColumnWidth = c._columnEndingContext.lastColumnWidth;
              }, n.prototype.saveContextInEndingCell = function(c) {
                c._columnEndingContext = {
                  page: this.page,
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  lastColumnWidth: this.lastColumnWidth
                };
              }, n.prototype.completeColumnGroup = function(c) {
                var h = this.snapshots.pop();
                this.calculateBottomMost(h), this.endingCell = null, this.x = h.x;
                var a = h.bottomMost.y;
                c && (h.page === h.bottomMost.page ? h.y + c > a && (a = h.y + c) : a += c), this.y = a, this.page = h.bottomMost.page, this.availableWidth = h.availableWidth, this.availableHeight = h.bottomMost.availableHeight, c && (this.availableHeight -= a - h.bottomMost.y), this.lastColumnWidth = h.lastColumnWidth;
              }, n.prototype.addMargin = function(c, h) {
                this.x += c, this.availableWidth -= c + (h || 0);
              }, n.prototype.moveDown = function(c) {
                return this.y += c, this.availableHeight -= c, this.availableHeight > 0;
              }, n.prototype.initializePage = function() {
                this.y = this.pageMargins.top, this.availableHeight = this.getCurrentPage().pageSize.height - this.pageMargins.top - this.pageMargins.bottom, this.pageSnapshot().availableWidth = this.getCurrentPage().pageSize.width - this.pageMargins.left - this.pageMargins.right;
              }, n.prototype.pageSnapshot = function() {
                return this.snapshots[0] ? this.snapshots[0] : this;
              }, n.prototype.moveTo = function(c, h) {
                c != null && (this.x = c, this.availableWidth = this.getCurrentPage().pageSize.width - this.x - this.pageMargins.right), h != null && (this.y = h, this.availableHeight = this.getCurrentPage().pageSize.height - this.y - this.pageMargins.bottom);
              }, n.prototype.moveToRelative = function(c, h) {
                c != null && (this.x = this.x + c), h != null && (this.y = this.y + h);
              }, n.prototype.beginDetachedBlock = function() {
                this.snapshots.push({
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  page: this.page,
                  endingCell: this.endingCell,
                  lastColumnWidth: this.lastColumnWidth
                });
              }, n.prototype.endDetachedBlock = function() {
                var c = this.snapshots.pop();
                this.x = c.x, this.y = c.y, this.availableWidth = c.availableWidth, this.availableHeight = c.availableHeight, this.page = c.page, this.endingCell = c.endingCell, this.lastColumnWidth = c.lastColumnWidth;
              };
              function i(c, h) {
                return c === void 0 ? h : r(c) && c.toLowerCase() === "landscape" ? "landscape" : "portrait";
              }
              var f = function(c, h) {
                return h = i(h, c.pageSize.orientation), h !== c.pageSize.orientation ? {
                  orientation: h,
                  width: c.pageSize.height,
                  height: c.pageSize.width
                } : {
                  orientation: c.pageSize.orientation,
                  width: c.pageSize.width,
                  height: c.pageSize.height
                };
              };
              n.prototype.moveToNextPage = function(c) {
                var h = this.page + 1, a = this.page, v = this.y, y = h >= this.pages.length;
                if (y) {
                  var g = this.availableWidth, e = this.getCurrentPage().pageSize.orientation, m = f(this.getCurrentPage(), c);
                  this.addPage(m), e === m.orientation && (this.availableWidth = g);
                } else
                  this.page = h, this.initializePage();
                return {
                  newPageCreated: y,
                  prevPage: a,
                  prevY: v,
                  y: this.y
                };
              }, n.prototype.addPage = function(c) {
                var h = { items: [], pageSize: c };
                return this.pages.push(h), this.backgroundLength.push(0), this.page = this.pages.length - 1, this.initializePage(), this.tracker.emit("pageAdded"), h;
              }, n.prototype.getCurrentPage = function() {
                return this.page < 0 || this.page >= this.pages.length ? null : this.pages[this.page];
              }, n.prototype.getCurrentPosition = function() {
                var c = this.getCurrentPage().pageSize, h = c.height - this.pageMargins.top - this.pageMargins.bottom, a = c.width - this.pageMargins.left - this.pageMargins.right;
                return {
                  pageNumber: this.page + 1,
                  pageOrientation: c.orientation,
                  pageInnerHeight: h,
                  pageInnerWidth: a,
                  left: this.x,
                  top: this.y,
                  verticalRatio: (this.y - this.pageMargins.top) / h,
                  horizontalRatio: (this.x - this.pageMargins.left) / a
                };
              };
              function l(c, h) {
                var a;
                return c.page > h.page ? a = c : h.page > c.page ? a = h : a = c.y > h.y ? c : h, {
                  page: a.page,
                  x: a.x,
                  y: a.y,
                  availableHeight: a.availableHeight,
                  availableWidth: a.availableWidth
                };
              }
              u.exports = n;
            }
          ),
          /***/
          84786: (
            /***/
            function(u, d, t) {
              var o = t(79547), r = t(16920).isNumber, n = t(16920).pack, i = t(16920).offsetVector, f = t(79833);
              function l(a, v) {
                this.context = a, this.contextStack = [], this.tracker = v;
              }
              function c(a, v, y) {
                y == null || y < 0 || y > a.items.length ? a.items.push(v) : a.items.splice(y, 0, v);
              }
              l.prototype.addLine = function(a, v, y) {
                var g = a.getHeight(), e = this.context, m = e.getCurrentPage(), w = this.getCurrentPositionOnPage();
                return e.availableHeight < g || !m ? !1 : (a.x = e.x + (a.x || 0), a.y = e.y + (a.y || 0), this.alignLine(a), c(m, {
                  type: "line",
                  item: a
                }, y), this.tracker.emit("lineAdded", a), v || e.moveDown(g), w);
              }, l.prototype.alignLine = function(a) {
                var v = this.context.availableWidth, y = a.getWidth(), g = a.inlines && a.inlines.length > 0 && a.inlines[0].alignment, e = 0;
                switch (g) {
                  case "right":
                    e = v - y;
                    break;
                  case "center":
                    e = (v - y) / 2;
                    break;
                }
                if (e && (a.x = (a.x || 0) + e), g === "justify" && !a.newLineForced && !a.lastLineInParagraph && a.inlines.length > 1)
                  for (var m = (v - y) / (a.inlines.length - 1), w = 1, D = a.inlines.length; w < D; w++)
                    e = w * m, a.inlines[w].x += e, a.inlines[w].justifyShift = m;
              }, l.prototype.addImage = function(a, v, y) {
                var g = this.context, e = g.getCurrentPage(), m = this.getCurrentPositionOnPage();
                return !e || a.absolutePosition === void 0 && g.availableHeight < a._height && e.items.length > 0 ? !1 : (a._x === void 0 && (a._x = a.x || 0), a.x = g.x + a._x, a.y = g.y, this.alignImage(a), c(e, {
                  type: y || "image",
                  item: a
                }, v), g.moveDown(a._height), m);
              }, l.prototype.addSVG = function(a, v) {
                return this.addImage(a, v, "svg");
              }, l.prototype.addQr = function(a, v) {
                var y = this.context, g = y.getCurrentPage(), e = this.getCurrentPositionOnPage();
                if (!g || a.absolutePosition === void 0 && y.availableHeight < a._height)
                  return !1;
                a._x === void 0 && (a._x = a.x || 0), a.x = y.x + a._x, a.y = y.y, this.alignImage(a);
                for (var m = 0, w = a._canvas.length; m < w; m++) {
                  var D = a._canvas[m];
                  D.x += a.x, D.y += a.y, this.addVector(D, !0, !0, v);
                }
                return y.moveDown(a._height), e;
              }, l.prototype.alignImage = function(a) {
                var v = this.context.availableWidth, y = a._minWidth, g = 0;
                switch (a._alignment) {
                  case "right":
                    g = v - y;
                    break;
                  case "center":
                    g = (v - y) / 2;
                    break;
                }
                g && (a.x = (a.x || 0) + g);
              }, l.prototype.alignCanvas = function(a) {
                var v = this.context.availableWidth, y = a._minWidth, g = 0;
                switch (a._alignment) {
                  case "right":
                    g = v - y;
                    break;
                  case "center":
                    g = (v - y) / 2;
                    break;
                }
                g && a.canvas.forEach(function(e) {
                  i(e, g, 0);
                });
              }, l.prototype.addVector = function(a, v, y, g) {
                var e = this.context, m = e.getCurrentPage(), w = this.getCurrentPositionOnPage();
                if (m)
                  return i(a, v ? 0 : e.x, y ? 0 : e.y), c(m, {
                    type: "vector",
                    item: a
                  }, g), w;
              }, l.prototype.beginClip = function(a, v) {
                var y = this.context, g = y.getCurrentPage();
                return g.items.push({
                  type: "beginClip",
                  item: { x: y.x, y: y.y, width: a, height: v }
                }), !0;
              }, l.prototype.endClip = function() {
                var a = this.context, v = a.getCurrentPage();
                return v.items.push({
                  type: "endClip"
                }), !0;
              };
              function h(a) {
                var v = new o(a.maxWidth);
                for (var y in a)
                  a.hasOwnProperty(y) && (v[y] = a[y]);
                return v;
              }
              l.prototype.addFragment = function(a, v, y, g) {
                var e = this.context, m = e.getCurrentPage();
                return !v && a.height > e.availableHeight ? !1 : (a.items.forEach(function(w) {
                  switch (w.type) {
                    case "line":
                      var D = h(w.item);
                      D._node && (D._node.positions[0].pageNumber = e.page + 1), D.x = (D.x || 0) + (v ? a.xOffset || 0 : e.x), D.y = (D.y || 0) + (y ? a.yOffset || 0 : e.y), m.items.push({
                        type: "line",
                        item: D
                      });
                      break;
                    case "vector":
                      var I = n(w.item);
                      i(I, v ? a.xOffset || 0 : e.x, y ? a.yOffset || 0 : e.y), m.items.push({
                        type: "vector",
                        item: I
                      });
                      break;
                    case "image":
                    case "svg":
                      var T = n(w.item);
                      T.x = (T.x || 0) + (v ? a.xOffset || 0 : e.x), T.y = (T.y || 0) + (y ? a.yOffset || 0 : e.y), m.items.push({
                        type: w.type,
                        item: T
                      });
                      break;
                  }
                }), g || e.moveDown(a.height), !0);
              }, l.prototype.pushContext = function(a, v) {
                a === void 0 && (v = this.context.getCurrentPage().height - this.context.pageMargins.top - this.context.pageMargins.bottom, a = this.context.availableWidth), r(a) && (a = new f({ width: a, height: v }, { left: 0, right: 0, top: 0, bottom: 0 })), this.contextStack.push(this.context), this.context = a;
              }, l.prototype.popContext = function() {
                this.context = this.contextStack.pop();
              }, l.prototype.getCurrentPositionOnPage = function() {
                return (this.contextStack[0] || this.context).getCurrentPosition();
              }, u.exports = l;
            }
          ),
          /***/
          98875: (
            /***/
            function(u, d, t) {
              var o = t(16920).isArray;
              function r(i, f) {
                var l = "normal";
                return i && f ? l = "bolditalics" : i ? l = "bold" : f && (l = "italics"), l;
              }
              function n(i, f) {
                this.fonts = {}, this.pdfKitDoc = f, this.fontCache = {};
                for (var l in i)
                  if (i.hasOwnProperty(l)) {
                    var c = i[l];
                    this.fonts[l] = {
                      normal: c.normal,
                      bold: c.bold,
                      italics: c.italics,
                      bolditalics: c.bolditalics
                    };
                  }
              }
              n.prototype.getFontType = function(i, f) {
                return r(i, f);
              }, n.prototype.getFontFile = function(i, f, l) {
                var c = this.getFontType(f, l);
                return !this.fonts[i] || !this.fonts[i][c] ? null : this.fonts[i][c];
              }, n.prototype.provideFont = function(i, f, l) {
                var c = this.getFontType(f, l);
                if (this.getFontFile(i, f, l) === null)
                  throw new Error("Font '" + i + "' in style '" + c + "' is not defined in the font section of the document definition.");
                if (this.fontCache[i] = this.fontCache[i] || {}, !this.fontCache[i][c]) {
                  var h = this.fonts[i][c];
                  o(h) || (h = [h]), this.fontCache[i][c] = this.pdfKitDoc.font.apply(this.pdfKitDoc, h)._font;
                }
                return this.fontCache[i][c];
              }, u.exports = n;
            }
          ),
          /***/
          16920: (
            /***/
            function(u) {
              function d(e) {
                return typeof e == "string" || e instanceof String;
              }
              function t(e) {
                return typeof e == "number" || e instanceof Number;
              }
              function o(e) {
                return typeof e == "boolean";
              }
              function r(e) {
                return Array.isArray(e);
              }
              function n(e) {
                return typeof e == "function";
              }
              function i(e) {
                return e !== null && typeof e == "object";
              }
              function f(e) {
                return e === null;
              }
              function l(e) {
                return e === void 0;
              }
              function c() {
                for (var e = {}, m = 0, w = arguments.length; m < w; m++) {
                  var D = arguments[m];
                  if (D)
                    for (var I in D)
                      D.hasOwnProperty(I) && (e[I] = D[I]);
                }
                return e;
              }
              function h(e, m, w) {
                switch (e.type) {
                  case "ellipse":
                  case "rect":
                    e.x += m, e.y += w;
                    break;
                  case "line":
                    e.x1 += m, e.x2 += m, e.y1 += w, e.y2 += w;
                    break;
                  case "polyline":
                    for (var D = 0, I = e.points.length; D < I; D++)
                      e.points[D].x += m, e.points[D].y += w;
                    break;
                }
              }
              function a(e, m) {
                return e === "font" ? "font" : m;
              }
              function v(e) {
                if (e.id)
                  return e.id;
                if (r(e.text))
                  for (var m = 0, w = e.text.length; m < w; m++) {
                    var D = e.text[m], I = v(D);
                    if (I)
                      return I;
                  }
                return null;
              }
              function y(e) {
                return r(e) && e.length === 2;
              }
              function g(e, m) {
                return [m[e[0]], e[1]];
              }
              u.exports = {
                isString: d,
                isNumber: t,
                isBoolean: o,
                isArray: r,
                isFunction: n,
                isObject: i,
                isNull: f,
                isUndefined: l,
                pack: c,
                fontStringify: a,
                offsetVector: h,
                getNodeId: v,
                isPattern: y,
                getPattern: g
              };
            }
          ),
          /***/
          41125: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer, r = t(52773);
              function n(i, f) {
                this.pdfKitDoc = i, this.imageDictionary = f || {};
              }
              n.prototype.measureImage = function(i) {
                var f, l = this;
                if (this.pdfKitDoc._imageRegistry[i])
                  f = this.pdfKitDoc._imageRegistry[i];
                else {
                  try {
                    if (f = this.pdfKitDoc.openImage(c(i)), !f)
                      throw "No image";
                  } catch (h) {
                    throw "Invalid image: " + h.toString() + `
Images dictionary should contain dataURL entries (or local file paths in node.js)`;
                  }
                  f.embed(this.pdfKitDoc), this.pdfKitDoc._imageRegistry[i] = f;
                }
                return { width: f.width, height: f.height };
                function c(h) {
                  var a = l.imageDictionary[h];
                  if (!a)
                    return h;
                  if (r.existsSync(a))
                    return r.readFileSync(a);
                  var v = a.indexOf("base64,");
                  return v < 0 ? l.imageDictionary[h] : o.from(a.substring(v + 7), "base64");
                }
              }, u.exports = n;
            }
          ),
          /***/
          47626: (
            /***/
            function(u, d, t) {
              var o = t(73602), r = t(78702), n = t(77077), i = t(79833), f = t(52183), l = t(65354), c = t(41729), h = t(79547), a = t(16920).isString, v = t(16920).isArray, y = t(16920).isUndefined, g = t(16920).isNull, e = t(16920).pack, m = t(16920).offsetVector, w = t(16920).fontStringify, D = t(16920).getNodeId, I = t(16920).isFunction, T = t(28045), C = t(28034), E = t(16920).isNumber;
              function F(L, N) {
                N.forEach(function(M) {
                  L.push(M);
                });
              }
              function x(L, N, M, K) {
                this.pageSize = L, this.pageMargins = N, this.tracker = new o(), this.imageMeasure = M, this.svgMeasure = K, this.tableLayouts = {};
              }
              x.prototype.registerTableLayouts = function(L) {
                this.tableLayouts = e(this.tableLayouts, L);
              }, x.prototype.layoutDocument = function(L, N, M, K, ut, J, rt, yt, xt, Et) {
                function Ft(Q, pt) {
                  if (!I(Et))
                    return !1;
                  Q = Q.filter(function(V) {
                    return V.positions.length > 0;
                  }), Q.forEach(function(V) {
                    var it = {};
                    [
                      "id",
                      "text",
                      "ul",
                      "ol",
                      "table",
                      "image",
                      "qr",
                      "canvas",
                      "svg",
                      "columns",
                      "headlineLevel",
                      "style",
                      "pageBreak",
                      "pageOrientation",
                      "width",
                      "height"
                    ].forEach(function(tt) {
                      V[tt] !== void 0 && (it[tt] = V[tt]);
                    }), it.startPosition = V.positions[0], it.pageNumbers = Array.from(new Set(V.positions.map(function(tt) {
                      return tt.pageNumber;
                    }))), it.pages = pt.length, it.stack = v(V.stack), V.nodeInfo = it;
                  });
                  for (var ct = 0; ct < Q.length; ct++) {
                    var ot = Q[ct];
                    if (ot.pageBreak !== "before" && !ot.pageBreakCalculated) {
                      ot.pageBreakCalculated = !0;
                      var mt = ot.nodeInfo.pageNumbers[0], G = [], Tt = [], z = [];
                      if (Et.length > 1)
                        for (var S = ct + 1, k = Q.length; S < k; S++)
                          Q[S].nodeInfo.pageNumbers.indexOf(mt) > -1 && G.push(Q[S].nodeInfo), Et.length > 2 && Q[S].nodeInfo.pageNumbers.indexOf(mt + 1) > -1 && Tt.push(Q[S].nodeInfo);
                      if (Et.length > 3)
                        for (var S = 0; S < ct; S++)
                          Q[S].nodeInfo.pageNumbers.indexOf(mt) > -1 && z.push(Q[S].nodeInfo);
                      if (Et(ot.nodeInfo, G, Tt, z))
                        return ot.pageBreak = "before", !0;
                    }
                  }
                  return !1;
                }
                this.docPreprocessor = new r(), this.docMeasure = new n(N, M, K, this.imageMeasure, this.svgMeasure, this.tableLayouts, yt);
                function Rt(Q) {
                  Q.linearNodeList.forEach(function(pt) {
                    pt.resetXY();
                  });
                }
                for (var Ut = this.tryLayoutDocument(L, N, M, K, ut, J, rt, yt, xt); Ft(Ut.linearNodeList, Ut.pages); )
                  Rt(Ut), Ut = this.tryLayoutDocument(L, N, M, K, ut, J, rt, yt, xt);
                return Ut.pages;
              }, x.prototype.tryLayoutDocument = function(L, N, M, K, ut, J, rt, yt, xt, Et) {
                this.linearNodeList = [], L = this.docPreprocessor.preprocessDocument(L), L = this.docMeasure.measureDocument(L), this.writer = new f(
                  new i(this.pageSize, this.pageMargins),
                  this.tracker
                );
                var Ft = this;
                return this.writer.context().tracker.startTracking("pageAdded", function() {
                  Ft.addBackground(ut);
                }), this.addBackground(ut), this.processNode(L), this.addHeadersAndFooters(J, rt), xt != null && this.addWatermark(xt, N, K), { pages: this.writer.context().pages, linearNodeList: this.linearNodeList };
              }, x.prototype.addBackground = function(L) {
                var N = I(L) ? L : function() {
                  return L;
                }, M = this.writer.context(), K = M.getCurrentPage().pageSize, ut = N(M.page + 1, K);
                ut && (this.writer.beginUnbreakableBlock(K.width, K.height), ut = this.docPreprocessor.preprocessDocument(ut), this.processNode(this.docMeasure.measureDocument(ut)), this.writer.commitUnbreakableBlock(0, 0), M.backgroundLength[M.page] += ut.positions.length);
              }, x.prototype.addStaticRepeatable = function(L, N) {
                this.addDynamicRepeatable(function() {
                  return JSON.parse(JSON.stringify(L));
                }, N);
              }, x.prototype.addDynamicRepeatable = function(L, N) {
                for (var M = this.writer.context().pages, K = 0, ut = M.length; K < ut; K++) {
                  this.writer.context().page = K;
                  var J = L(K + 1, ut, this.writer.context().pages[K].pageSize);
                  if (J) {
                    var rt = N(this.writer.context().getCurrentPage().pageSize, this.pageMargins);
                    this.writer.beginUnbreakableBlock(rt.width, rt.height), J = this.docPreprocessor.preprocessDocument(J), this.processNode(this.docMeasure.measureDocument(J)), this.writer.commitUnbreakableBlock(rt.x, rt.y);
                  }
                }
              }, x.prototype.addHeadersAndFooters = function(L, N) {
                var M = function(ut, J) {
                  return {
                    x: 0,
                    y: 0,
                    width: ut.width,
                    height: J.top
                  };
                }, K = function(ut, J) {
                  return {
                    x: 0,
                    y: ut.height - J.bottom,
                    width: ut.width,
                    height: J.bottom
                  };
                };
                I(L) ? this.addDynamicRepeatable(L, M) : L && this.addStaticRepeatable(L, M), I(N) ? this.addDynamicRepeatable(N, K) : N && this.addStaticRepeatable(N, K);
              }, x.prototype.addWatermark = function(L, N, M) {
                if (a(L) && (L = { text: L }), !L.text)
                  return;
                L.font = L.font || M.font || "Roboto", L.fontSize = L.fontSize || "auto", L.color = L.color || "black", L.opacity = E(L.opacity) ? L.opacity : 0.6, L.bold = L.bold || !1, L.italics = L.italics || !1, L.angle = !y(L.angle) && !g(L.angle) ? L.angle : null, L.angle === null && (L.angle = Math.atan2(this.pageSize.height, this.pageSize.width) * -180 / Math.PI), L.fontSize === "auto" && (L.fontSize = xt(this.pageSize, L, N));
                var K = {
                  text: L.text,
                  font: N.provideFont(L.font, L.bold, L.italics),
                  fontSize: L.fontSize,
                  color: L.color,
                  opacity: L.opacity,
                  angle: L.angle
                };
                K._size = yt(L, N);
                for (var ut = this.writer.context().pages, J = 0, rt = ut.length; J < rt; J++)
                  ut[J].watermark = K;
                function yt(Et, Ft) {
                  var Rt = new T(Ft), Ut = new C(null, { font: Et.font, bold: Et.bold, italics: Et.italics });
                  Ut.push({
                    fontSize: Et.fontSize
                  });
                  var Q = Rt.sizeOfString(Et.text, Ut), pt = Rt.sizeOfRotatedText(Et.text, Et.angle, Ut);
                  return { size: Q, rotatedSize: pt };
                }
                function xt(Et, Ft, Rt) {
                  for (var Ut = new T(Rt), Q = new C(null, { font: Ft.font, bold: Ft.bold, italics: Ft.italics }), pt, ct = 0, ot = 1e3, mt = (ct + ot) / 2; Math.abs(ct - ot) > 1; )
                    Q.push({
                      fontSize: mt
                    }), pt = Ut.sizeOfRotatedText(Ft.text, Ft.angle, Q), pt.width > Et.width ? (ot = mt, mt = (ct + ot) / 2) : pt.width < Et.width && (pt.height > Et.height ? (ot = mt, mt = (ct + ot) / 2) : (ct = mt, mt = (ct + ot) / 2)), Q.pop();
                  return mt;
                }
              };
              function P(L) {
                var N = L.x, M = L.y;
                L.positions = [], v(L.canvas) && L.canvas.forEach(function(K) {
                  var ut = K.x, J = K.y, rt = K.x1, yt = K.y1, xt = K.x2, Et = K.y2;
                  K.resetXY = function() {
                    K.x = ut, K.y = J, K.x1 = rt, K.y1 = yt, K.x2 = xt, K.y2 = Et;
                  };
                }), L.resetXY = function() {
                  L.x = N, L.y = M, v(L.canvas) && L.canvas.forEach(function(K) {
                    K.resetXY();
                  });
                };
              }
              x.prototype.processNode = function(L) {
                var N = this;
                this.linearNodeList.push(L), P(L), M(function() {
                  var K = L.unbreakable;
                  K && N.writer.beginUnbreakableBlock();
                  var ut = L.absolutePosition;
                  ut && (N.writer.context().beginDetachedBlock(), N.writer.context().moveTo(ut.x || 0, ut.y || 0));
                  var J = L.relativePosition;
                  if (J && (N.writer.context().beginDetachedBlock(), N.writer.context().moveToRelative(J.x || 0, J.y || 0)), L.stack)
                    N.processVerticalContainer(L);
                  else if (L.columns)
                    N.processColumns(L);
                  else if (L.ul)
                    N.processList(!1, L);
                  else if (L.ol)
                    N.processList(!0, L);
                  else if (L.table)
                    N.processTable(L);
                  else if (L.text !== void 0)
                    N.processLeaf(L);
                  else if (L.toc)
                    N.processToc(L);
                  else if (L.image)
                    N.processImage(L);
                  else if (L.svg)
                    N.processSVG(L);
                  else if (L.canvas)
                    N.processCanvas(L);
                  else if (L.qr)
                    N.processQr(L);
                  else if (!L._span)
                    throw "Unrecognized document structure: " + JSON.stringify(L, w);
                  (ut || J) && N.writer.context().endDetachedBlock(), K && N.writer.commitUnbreakableBlock();
                });
                function M(K) {
                  var ut = L._margin;
                  L.pageBreak === "before" ? N.writer.moveToNextPage(L.pageOrientation) : L.pageBreak === "beforeOdd" ? (N.writer.moveToNextPage(L.pageOrientation), (N.writer.context().page + 1) % 2 === 1 && N.writer.moveToNextPage(L.pageOrientation)) : L.pageBreak === "beforeEven" && (N.writer.moveToNextPage(L.pageOrientation), (N.writer.context().page + 1) % 2 === 0 && N.writer.moveToNextPage(L.pageOrientation)), ut && (N.writer.context().moveDown(ut[1]), N.writer.context().addMargin(ut[0], ut[2])), K(), ut && (N.writer.context().addMargin(-ut[0], -ut[2]), N.writer.context().moveDown(ut[3])), L.pageBreak === "after" ? N.writer.moveToNextPage(L.pageOrientation) : L.pageBreak === "afterOdd" ? (N.writer.moveToNextPage(L.pageOrientation), (N.writer.context().page + 1) % 2 === 1 && N.writer.moveToNextPage(L.pageOrientation)) : L.pageBreak === "afterEven" && (N.writer.moveToNextPage(L.pageOrientation), (N.writer.context().page + 1) % 2 === 0 && N.writer.moveToNextPage(L.pageOrientation));
                }
              }, x.prototype.processVerticalContainer = function(L) {
                var N = this;
                L.stack.forEach(function(M) {
                  N.processNode(M), F(L.positions, M.positions);
                });
              }, x.prototype.processColumns = function(L) {
                var N = L.columns, M = this.writer.context().availableWidth, K = J(L._gap);
                K && (M -= (K.length - 1) * L._gap), l.buildColumnWidths(N, M);
                var ut = this.processRow(N, N, K);
                F(L.positions, ut.positions);
                function J(rt) {
                  if (!rt)
                    return null;
                  var yt = [];
                  yt.push(0);
                  for (var xt = N.length - 1; xt > 0; xt--)
                    yt.push(rt);
                  return yt;
                }
              }, x.prototype.processRow = function(L, N, M, K, ut, J) {
                var rt = this, yt = [], xt = [];
                return this.tracker.auto("pageChanged", Et, function() {
                  N = N || L, rt.writer.context().beginColumnGroup();
                  for (var Ut = 0, Q = L.length; Ut < Q; Ut++) {
                    var pt = L[Ut], ct = N[Ut]._calcWidth, ot = Ft(Ut);
                    if (pt.colSpan && pt.colSpan > 1)
                      for (var mt = 1; mt < pt.colSpan; mt++)
                        ct += N[++Ut]._calcWidth + M[Ut];
                    rt.writer.context().beginColumn(ct, ot, Rt(pt, Ut)), pt._span ? pt._columnEndingContext && rt.writer.context().markEnding(pt) : (rt.processNode(pt), F(xt, pt.positions));
                  }
                  rt.writer.context().completeColumnGroup(J);
                }), { pageBreaks: yt, positions: xt };
                function Et(Ut) {
                  for (var Q, pt = 0, ct = yt.length; pt < ct; pt++) {
                    var ot = yt[pt];
                    if (ot.prevPage === Ut.prevPage) {
                      Q = ot;
                      break;
                    }
                  }
                  Q || (Q = Ut, yt.push(Q)), Q.prevY = Math.max(Q.prevY, Ut.prevY), Q.y = Math.min(Q.y, Ut.y);
                }
                function Ft(Ut) {
                  return M && M.length > Ut ? M[Ut] : 0;
                }
                function Rt(Ut, Q) {
                  if (Ut.rowSpan && Ut.rowSpan > 1) {
                    var pt = ut + Ut.rowSpan - 1;
                    if (pt >= K.length)
                      throw "Row span for column " + Q + " (with indexes starting from 0) exceeded row count";
                    return K[pt][Q];
                  }
                  return null;
                }
              }, x.prototype.processList = function(L, N) {
                var M = this, K = L ? N.ol : N.ul, ut = N._gapSize;
                this.writer.context().addMargin(ut.width);
                var J;
                this.tracker.auto("lineAdded", rt, function() {
                  K.forEach(function(yt) {
                    J = yt.listMarker, M.processNode(yt), F(N.positions, yt.positions);
                  });
                }), this.writer.context().addMargin(-ut.width);
                function rt(yt) {
                  if (J) {
                    var xt = J;
                    if (J = null, xt.canvas) {
                      var Et = xt.canvas[0];
                      m(Et, -xt._minWidth, 0), M.writer.addVector(Et);
                    } else if (xt._inlines) {
                      var Ft = new h(M.pageSize.width);
                      Ft.addInline(xt._inlines[0]), Ft.x = -xt._minWidth, Ft.y = yt.getAscenderHeight() - Ft.getAscenderHeight(), M.writer.addLine(Ft, !0);
                    }
                  }
                }
              }, x.prototype.processTable = function(L) {
                var N = new c(L);
                N.beginTable(this.writer);
                for (var M = L.table.heights, K = 0, ut = L.table.body.length; K < ut; K++) {
                  N.beginRow(K, this.writer);
                  var J;
                  I(M) ? J = M(K) : v(M) ? J = M[K] : J = M, J === "auto" && (J = void 0);
                  var rt = this.processRow(L.table.body[K], L.table.widths, L._offsets.offsets, L.table.body, K, J);
                  F(L.positions, rt.positions), N.endRow(K, this.writer, rt.pageBreaks);
                }
                N.endTable(this.writer);
              }, x.prototype.processLeaf = function(L) {
                var N = this.buildNextLine(L);
                N && (L.tocItem || L.id) && (N._node = L);
                var M = N ? N.getHeight() : 0, K = L.maxHeight || -1;
                if (N) {
                  var ut = D(L);
                  ut && (N.id = ut);
                }
                if (L._tocItemRef && (N._pageNodeRef = L._tocItemRef), L._pageRef && (N._pageNodeRef = L._pageRef._nodeRef), N && N.inlines && v(N.inlines))
                  for (var J = 0, rt = N.inlines.length; J < rt; J++)
                    N.inlines[J]._tocItemRef && (N.inlines[J]._pageNodeRef = N.inlines[J]._tocItemRef), N.inlines[J]._pageRef && (N.inlines[J]._pageNodeRef = N.inlines[J]._pageRef._nodeRef);
                for (; N && (K === -1 || M < K); ) {
                  var yt = this.writer.addLine(N);
                  L.positions.push(yt), N = this.buildNextLine(L), N && (M += N.getHeight());
                }
              }, x.prototype.processToc = function(L) {
                L.toc.title && this.processNode(L.toc.title), L.toc._table && this.processNode(L.toc._table);
              }, x.prototype.buildNextLine = function(L) {
                function N(Ft) {
                  var Rt = Ft.constructor();
                  for (var Ut in Ft)
                    Rt[Ut] = Ft[Ut];
                  return Rt;
                }
                if (!L._inlines || L._inlines.length === 0)
                  return null;
                for (var M = new h(this.writer.context().availableWidth), K = new T(null), ut = !1; L._inlines && L._inlines.length > 0 && (M.hasEnoughSpaceForInline(L._inlines[0], L._inlines.slice(1)) || ut); ) {
                  var J = !1, rt = L._inlines.shift();
                  if (ut = !1, !rt.noWrap && rt.text.length > 1 && rt.width > M.getAvailableWidth()) {
                    var yt = rt.width / rt.text.length, xt = Math.floor(M.getAvailableWidth() / yt);
                    if (xt < 1 && (xt = 1), xt < rt.text.length) {
                      var Et = N(rt);
                      Et.text = rt.text.substr(xt), rt.text = rt.text.substr(0, xt), Et.width = K.widthOfString(Et.text, Et.font, Et.fontSize, Et.characterSpacing, Et.fontFeatures), rt.width = K.widthOfString(rt.text, rt.font, rt.fontSize, rt.characterSpacing, rt.fontFeatures), L._inlines.unshift(Et), J = !0;
                    }
                  }
                  M.addInline(rt), ut = rt.noNewLine && !J;
                }
                return M.lastLineInParagraph = L._inlines.length === 0, M;
              }, x.prototype.processImage = function(L) {
                var N = this.writer.addImage(L);
                L.positions.push(N);
              }, x.prototype.processSVG = function(L) {
                var N = this.writer.addSVG(L);
                L.positions.push(N);
              }, x.prototype.processCanvas = function(L) {
                var N = L._minHeight;
                L.absolutePosition === void 0 && this.writer.context().availableHeight < N && this.writer.moveToNextPage(), this.writer.alignCanvas(L), L.canvas.forEach(function(M) {
                  var K = this.writer.addVector(M);
                  L.positions.push(K);
                }, this), this.writer.context().moveDown(N);
              }, x.prototype.processQr = function(L) {
                var N = this.writer.addQr(L);
                L.positions.push(N);
              }, u.exports = x;
            }
          ),
          /***/
          79547: (
            /***/
            function(u) {
              function d(t) {
                this.maxWidth = t, this.leadingCut = 0, this.trailingCut = 0, this.inlineWidths = 0, this.inlines = [];
              }
              d.prototype.getAscenderHeight = function() {
                var t = 0;
                return this.inlines.forEach(function(o) {
                  t = Math.max(t, o.font.ascender / 1e3 * o.fontSize);
                }), t;
              }, d.prototype.hasEnoughSpaceForInline = function(t, o) {
                if (o = o || [], this.inlines.length === 0)
                  return !0;
                if (this.newLineForced)
                  return !1;
                var r = t.width, n = t.trailingCut || 0;
                if (t.noNewLine)
                  for (var i = 0, f = o.length; i < f; i++) {
                    var l = o[i];
                    if (r += l.width, n += l.trailingCut || 0, !l.noNewLine)
                      break;
                  }
                return this.inlineWidths + r - this.leadingCut - n <= this.maxWidth;
              }, d.prototype.addInline = function(t) {
                this.inlines.length === 0 && (this.leadingCut = t.leadingCut || 0), this.trailingCut = t.trailingCut || 0, t.x = this.inlineWidths - this.leadingCut, this.inlines.push(t), this.inlineWidths += t.width, t.lineEnd && (this.newLineForced = !0);
              }, d.prototype.getWidth = function() {
                return this.inlineWidths - this.leadingCut - this.trailingCut;
              }, d.prototype.getAvailableWidth = function() {
                return this.maxWidth - this.getWidth();
              }, d.prototype.getHeight = function() {
                var t = 0;
                return this.inlines.forEach(function(o) {
                  t = Math.max(t, o.height || 0);
                }), t;
              }, u.exports = d;
            }
          ),
          /***/
          52183: (
            /***/
            function(u, d, t) {
              var o = t(16920).isUndefined, r = t(84786);
              function n(f, l) {
                this.transactionLevel = 0, this.repeatables = [], this.tracker = l, this.writer = new r(f, l);
              }
              function i(f, l) {
                var c = l(f);
                return c || (f.moveToNextPage(), c = l(f)), c;
              }
              n.prototype.addLine = function(f, l, c) {
                return i(this, function(h) {
                  return h.writer.addLine(f, l, c);
                });
              }, n.prototype.addImage = function(f, l) {
                return i(this, function(c) {
                  return c.writer.addImage(f, l);
                });
              }, n.prototype.addSVG = function(f, l) {
                return i(this, function(c) {
                  return c.writer.addSVG(f, l);
                });
              }, n.prototype.addQr = function(f, l) {
                return i(this, function(c) {
                  return c.writer.addQr(f, l);
                });
              }, n.prototype.addVector = function(f, l, c, h) {
                return this.writer.addVector(f, l, c, h);
              }, n.prototype.beginClip = function(f, l) {
                return this.writer.beginClip(f, l);
              }, n.prototype.endClip = function() {
                return this.writer.endClip();
              }, n.prototype.alignCanvas = function(f) {
                this.writer.alignCanvas(f);
              }, n.prototype.addFragment = function(f, l, c, h) {
                this.writer.addFragment(f, l, c, h) || (this.moveToNextPage(), this.writer.addFragment(f, l, c, h));
              }, n.prototype.moveToNextPage = function(f) {
                var l = this.writer.context.moveToNextPage(f);
                this.repeatables.forEach(function(c) {
                  o(c.insertedOnPages[this.writer.context.page]) ? (c.insertedOnPages[this.writer.context.page] = !0, this.writer.addFragment(c, !0)) : this.writer.context.moveDown(c.height);
                }, this), this.writer.tracker.emit("pageChanged", {
                  prevPage: l.prevPage,
                  prevY: l.prevY,
                  y: this.writer.context.y
                });
              }, n.prototype.beginUnbreakableBlock = function(f, l) {
                this.transactionLevel++ === 0 && (this.originalX = this.writer.context.x, this.writer.pushContext(f, l));
              }, n.prototype.commitUnbreakableBlock = function(f, l) {
                if (--this.transactionLevel === 0) {
                  var c = this.writer.context;
                  this.writer.popContext();
                  var h = c.pages.length;
                  if (h > 0) {
                    var a = c.pages[0];
                    if (a.xOffset = f, a.yOffset = l, h > 1)
                      if (f !== void 0 || l !== void 0)
                        a.height = c.getCurrentPage().pageSize.height - c.pageMargins.top - c.pageMargins.bottom;
                      else {
                        a.height = this.writer.context.getCurrentPage().pageSize.height - this.writer.context.pageMargins.top - this.writer.context.pageMargins.bottom;
                        for (var v = 0, y = this.repeatables.length; v < y; v++)
                          a.height -= this.repeatables[v].height;
                      }
                    else
                      a.height = c.y;
                    f !== void 0 || l !== void 0 ? this.writer.addFragment(a, !0, !0, !0) : this.addFragment(a);
                  }
                }
              }, n.prototype.currentBlockToRepeatable = function() {
                var f = this.writer.context, l = { items: [] };
                return f.pages[0].items.forEach(function(c) {
                  l.items.push(c);
                }), l.xOffset = this.originalX, l.height = f.y, l.insertedOnPages = [], l;
              }, n.prototype.pushToRepeatables = function(f) {
                this.repeatables.push(f);
              }, n.prototype.popFromRepeatables = function() {
                this.repeatables.pop();
              }, n.prototype.context = function() {
                return this.writer.context;
              }, u.exports = n;
            }
          ),
          /***/
          85822: (
            /***/
            function(u, d, t) {
              function o(f) {
                return f && typeof f == "object" && "default" in f ? f.default : f;
              }
              var r = o(t(83036));
              function n() {
                return r;
              }
              function i(f) {
                return f = f || {}, new r(f);
              }
              u.exports = {
                getEngineInstance: n,
                createPdfDocument: i
              };
            }
          ),
          /***/
          56498: (
            /***/
            function(u, d, t) {
              var o = t(85822), r = t(98875), n = t(47626), i = t(58050), f = t(41125), l = t(48730), c = t(4986), h = t(28045), a = t(16920).isFunction, v = t(16920).isString, y = t(16920).isNumber, g = t(16920).isBoolean, e = t(16920).isArray, m = t(16920).isUndefined, w = t(16920).isPattern, D = t(16920).getPattern, I = t(31589), T = function(Q, pt, ct) {
                for (var ot = 0; ot < pt.length; ot++) {
                  var mt = pt[ot].toLowerCase();
                  for (var G in Q)
                    if (G.toLowerCase() === mt)
                      return G;
                }
                return ct;
              };
              function C(Q) {
                this.fontDescriptors = Q;
              }
              C.prototype.createPdfKitDocument = function(Q, pt) {
                pt = pt || {}, Q.version = Q.version || "1.3", Q.compress = g(Q.compress) ? Q.compress : !0, Q.images = Q.images || {}, Q.pageMargins = Q.pageMargins !== void 0 && Q.pageMargins !== null ? Q.pageMargins : 40;
                var ct = x(Q.pageSize, Q.pageOrientation), ot = {
                  size: [ct.width, ct.height],
                  pdfVersion: Q.version,
                  compress: Q.compress,
                  userPassword: Q.userPassword,
                  ownerPassword: Q.ownerPassword,
                  permissions: Q.permissions,
                  lang: Q.language,
                  fontLayoutCache: g(pt.fontLayoutCache) ? pt.fontLayoutCache : !0,
                  bufferPages: pt.bufferPages || !1,
                  autoFirstPage: !1,
                  info: E(Q),
                  font: null
                };
                this.pdfKitDoc = o.createPdfDocument(ot), this.fontProvider = new r(this.fontDescriptors, this.pdfKitDoc);
                var mt = new n(ct, P(Q.pageMargins), new f(this.pdfKitDoc, Q.images), new l());
                L(mt), pt.tableLayouts && mt.registerTableLayouts(pt.tableLayouts);
                var G = mt.layoutDocument(Q.content, this.fontProvider, Q.styles || {}, Q.defaultStyle || {
                  fontSize: 12,
                  font: "Roboto"
                }, Q.background, Q.header, Q.footer, Q.images, Q.watermark, Q.pageBreakBefore), Tt = Q.maxPagesNumber || -1;
                if (y(Tt) && Tt > -1 && (G = G.slice(0, Tt)), ct.height === 1 / 0) {
                  var z = F(G, Q.pageMargins);
                  this.pdfKitDoc.options.size = [ct.width, z];
                }
                var S = Ut(Q.patterns || {}, this.pdfKitDoc);
                if (K(G, this.fontProvider, this.pdfKitDoc, S, pt.progressCallback), pt.autoPrint) {
                  var k = this.pdfKitDoc.ref({
                    Type: "Action",
                    S: "Named",
                    N: "Print"
                  });
                  this.pdfKitDoc._root.data.OpenAction = k, k.end();
                }
                return this.pdfKitDoc;
              };
              function E(Q) {
                function pt(G) {
                  var Tt = [
                    "Title",
                    "Author",
                    "Subject",
                    "Keywords",
                    "Creator",
                    "Producer",
                    "CreationDate",
                    "ModDate",
                    "Trapped"
                  ], z = G.charAt(0).toUpperCase() + G.slice(1);
                  return Tt.indexOf(z) !== -1 ? z : G.replace(/\s+/g, "");
                }
                var ct = {
                  Producer: "pdfmake",
                  Creator: "pdfmake"
                };
                if (Q.info)
                  for (var ot in Q.info) {
                    var mt = Q.info[ot];
                    mt && (ot = pt(ot), ct[ot] = mt);
                  }
                return ct;
              }
              function F(Q, pt) {
                function ct(Tt) {
                  return a(Tt.item.getHeight) ? Tt.item.getHeight() : Tt.item._height ? Tt.item._height : Tt.type === "vector" ? typeof Tt.item.y1 < "u" ? Tt.item.y1 > Tt.item.y2 ? Tt.item.y1 : Tt.item.y2 : Tt.item.h : 0;
                }
                function ot(Tt) {
                  var z = Tt.item.y || 0, S = ct(Tt);
                  return z + S;
                }
                var mt = P(pt || 40), G = mt.top;
                return Q.forEach(function(Tt) {
                  Tt.items.forEach(function(z) {
                    var S = ot(z);
                    S > G && (G = S);
                  });
                }), G += mt.bottom, G;
              }
              function x(Q, pt) {
                function ct(mt) {
                  return v(mt) ? (mt = mt.toLowerCase(), mt === "portrait" && ot.width > ot.height || mt === "landscape" && ot.width < ot.height) : !1;
                }
                Q && Q.height === "auto" && (Q.height = 1 / 0);
                var ot = N(Q || "A4");
                return ct(pt) && (ot = { width: ot.height, height: ot.width }), ot.orientation = ot.width > ot.height ? "landscape" : "portrait", ot;
              }
              function P(Q) {
                if (y(Q))
                  Q = { left: Q, right: Q, top: Q, bottom: Q };
                else if (e(Q))
                  if (Q.length === 2)
                    Q = { left: Q[0], top: Q[1], right: Q[0], bottom: Q[1] };
                  else if (Q.length === 4)
                    Q = { left: Q[0], top: Q[1], right: Q[2], bottom: Q[3] };
                  else
                    throw "Invalid pageMargins definition";
                return Q;
              }
              function L(Q) {
                Q.registerTableLayouts({
                  noBorders: {
                    hLineWidth: function(pt) {
                      return 0;
                    },
                    vLineWidth: function(pt) {
                      return 0;
                    },
                    paddingLeft: function(pt) {
                      return pt && 4 || 0;
                    },
                    paddingRight: function(pt, ct) {
                      return pt < ct.table.widths.length - 1 ? 4 : 0;
                    }
                  },
                  headerLineOnly: {
                    hLineWidth: function(pt, ct) {
                      return pt === 0 || pt === ct.table.body.length ? 0 : pt === ct.table.headerRows ? 2 : 0;
                    },
                    vLineWidth: function(pt) {
                      return 0;
                    },
                    paddingLeft: function(pt) {
                      return pt === 0 ? 0 : 8;
                    },
                    paddingRight: function(pt, ct) {
                      return pt === ct.table.widths.length - 1 ? 0 : 8;
                    }
                  },
                  lightHorizontalLines: {
                    hLineWidth: function(pt, ct) {
                      return pt === 0 || pt === ct.table.body.length ? 0 : pt === ct.table.headerRows ? 2 : 1;
                    },
                    vLineWidth: function(pt) {
                      return 0;
                    },
                    hLineColor: function(pt) {
                      return pt === 1 ? "black" : "#aaa";
                    },
                    paddingLeft: function(pt) {
                      return pt === 0 ? 0 : 8;
                    },
                    paddingRight: function(pt, ct) {
                      return pt === ct.table.widths.length - 1 ? 0 : 8;
                    }
                  }
                });
              }
              function N(Q) {
                if (v(Q)) {
                  var pt = i[Q.toUpperCase()];
                  if (!pt)
                    throw "Page size " + Q + " not recognized";
                  return { width: pt[0], height: pt[1] };
                }
                return Q;
              }
              function M(Q, pt) {
                var ct = pt.options.size[0] > pt.options.size[1] ? "landscape" : "portrait";
                if (Q.pageSize.orientation !== ct) {
                  var ot = pt.options.size[0], mt = pt.options.size[1];
                  pt.options.size = [mt, ot];
                }
              }
              function K(Q, pt, ct, ot, mt) {
                ct._pdfMakePages = Q, ct.addPage();
                var G = 0;
                mt && Q.forEach(function(tt) {
                  G += tt.items.length;
                });
                var Tt = 0;
                mt = mt || function() {
                };
                for (var z = 0; z < Q.length; z++) {
                  z > 0 && (M(Q[z], ct), ct.addPage(ct.options));
                  for (var S = Q[z], k = 0, V = S.items.length; k < V; k++) {
                    var it = S.items[k];
                    switch (it.type) {
                      case "vector":
                        yt(it.item, ot, ct);
                        break;
                      case "line":
                        J(it.item, it.item.x, it.item.y, ot, ct);
                        break;
                      case "image":
                        xt(it.item, it.item.x, it.item.y, ct);
                        break;
                      case "svg":
                        Et(it.item, it.item.x, it.item.y, ct, pt);
                        break;
                      case "beginClip":
                        Ft(it.item, ct);
                        break;
                      case "endClip":
                        Rt(ct);
                        break;
                    }
                    Tt++, mt(Tt / G);
                  }
                  S.watermark && rt(S, ct);
                }
              }
              function ut(Q, pt) {
                var ct = Q;
                return pt.sup && (ct -= pt.fontSize * 0.75), pt.sub && (ct += pt.fontSize * 0.35), ct;
              }
              function J(Q, pt, ct, ot, mt) {
                function G(Yt, Gt) {
                  var Dt, ae, Ae = new h(null);
                  if (m(Yt.positions))
                    throw "Page reference id not found";
                  var xe = Yt.positions[0].pageNumber.toString();
                  switch (Gt.text = xe, Dt = Ae.widthOfString(Gt.text, Gt.font, Gt.fontSize, Gt.characterSpacing, Gt.fontFeatures), ae = Gt.width - Dt, Gt.width = Dt, Gt.alignment) {
                    case "right":
                      Gt.x += ae;
                      break;
                    case "center":
                      Gt.x += ae / 2;
                      break;
                  }
                }
                Q._pageNodeRef && G(Q._pageNodeRef, Q.inlines[0]), pt = pt || 0, ct = ct || 0;
                var Tt = Q.getHeight(), z = Q.getAscenderHeight(), S = Tt - z;
                c.drawBackground(Q, pt, ct, ot, mt);
                for (var k = 0, V = Q.inlines.length; k < V; k++) {
                  var it = Q.inlines[k], tt = Tt - it.font.ascender / 1e3 * it.fontSize - S;
                  it._pageNodeRef && G(it._pageNodeRef, it);
                  var _ = {
                    lineBreak: !1,
                    textWidth: it.width,
                    characterSpacing: it.characterSpacing,
                    wordCount: 1,
                    link: it.link
                  };
                  it.linkToDestination && (_.goTo = it.linkToDestination), Q.id && k === 0 && (_.destination = Q.id), it.fontFeatures && (_.features = it.fontFeatures);
                  var At = y(it.opacity) ? it.opacity : 1;
                  mt.opacity(At), mt.fill(it.color || "black"), mt._font = it.font, mt.fontSize(it.fontSize);
                  var Lt = ut(ct + tt, it);
                  mt.text(it.text, pt + it.x, Lt, _), it.linkToPage && (mt.ref({ Type: "Action", S: "GoTo", D: [it.linkToPage, 0, 0] }).end(), mt.annotate(pt + it.x, Lt, it.width, it.height, {
                    Subtype: "Link",
                    Dest: [it.linkToPage - 1, "XYZ", null, null, null]
                  }));
                }
                c.drawDecorations(Q, pt, ct, mt);
              }
              function rt(Q, pt) {
                var ct = Q.watermark;
                pt.fill(ct.color), pt.opacity(ct.opacity), pt.save(), pt.rotate(ct.angle, { origin: [pt.page.width / 2, pt.page.height / 2] });
                var ot = pt.page.width / 2 - ct._size.size.width / 2, mt = pt.page.height / 2 - ct._size.size.height / 2;
                pt._font = ct.font, pt.fontSize(ct.fontSize), pt.text(ct.text, ot, mt, { lineBreak: !1 }), pt.restore();
              }
              function yt(Q, pt, ct) {
                ct.lineWidth(Q.lineWidth || 1), Q.dash ? ct.dash(Q.dash.length, { space: Q.dash.space || Q.dash.length, phase: Q.dash.phase || 0 }) : ct.undash(), ct.lineJoin(Q.lineJoin || "miter"), ct.lineCap(Q.lineCap || "butt");
                var ot = null;
                switch (Q.type) {
                  case "ellipse":
                    ct.ellipse(Q.x, Q.y, Q.r1, Q.r2), Q.linearGradient && (ot = ct.linearGradient(Q.x - Q.r1, Q.y, Q.x + Q.r1, Q.y));
                    break;
                  case "rect":
                    Q.r ? ct.roundedRect(Q.x, Q.y, Q.w, Q.h, Q.r) : ct.rect(Q.x, Q.y, Q.w, Q.h), Q.linearGradient && (ot = ct.linearGradient(Q.x, Q.y, Q.x + Q.w, Q.y));
                    break;
                  case "line":
                    ct.moveTo(Q.x1, Q.y1), ct.lineTo(Q.x2, Q.y2);
                    break;
                  case "polyline":
                    if (Q.points.length === 0)
                      break;
                    ct.moveTo(Q.points[0].x, Q.points[0].y);
                    for (var mt = 1, G = Q.points.length; mt < G; mt++)
                      ct.lineTo(Q.points[mt].x, Q.points[mt].y);
                    if (Q.points.length > 1) {
                      var Tt = Q.points[0], z = Q.points[Q.points.length - 1];
                      (Q.closePath || Tt.x === z.x && Tt.y === z.y) && ct.closePath();
                    }
                    break;
                  case "path":
                    ct.path(Q.d);
                    break;
                }
                if (Q.linearGradient && ot) {
                  for (var S = 1 / (Q.linearGradient.length - 1), mt = 0; mt < Q.linearGradient.length; mt++)
                    ot.stop(mt * S, Q.linearGradient[mt]);
                  Q.color = ot;
                }
                w(Q.color) && (Q.color = D(Q.color, pt));
                var k = y(Q.fillOpacity) ? Q.fillOpacity : 1, V = y(Q.strokeOpacity) ? Q.strokeOpacity : 1;
                Q.color && Q.lineColor ? (ct.fillColor(Q.color, k), ct.strokeColor(Q.lineColor, V), ct.fillAndStroke()) : Q.color ? (ct.fillColor(Q.color, k), ct.fill()) : (ct.strokeColor(Q.lineColor || "black", V), ct.stroke());
              }
              function xt(Q, pt, ct, ot) {
                var mt = y(Q.opacity) ? Q.opacity : 1;
                if (ot.opacity(mt), Q.cover) {
                  var G = Q.cover.align || "center", Tt = Q.cover.valign || "center", z = Q.cover.width ? Q.cover.width : Q.width, S = Q.cover.height ? Q.cover.height : Q.height;
                  ot.save(), ot.rect(Q.x, Q.y, z, S).clip(), ot.image(Q.image, Q.x, Q.y, { cover: [z, S], align: G, valign: Tt }), ot.restore();
                } else
                  ot.image(Q.image, Q.x, Q.y, { width: Q._width, height: Q._height });
                Q.link && ot.link(Q.x, Q.y, Q._width, Q._height, Q.link), Q.linkToPage && (ot.ref({ Type: "Action", S: "GoTo", D: [Q.linkToPage, 0, 0] }).end(), ot.annotate(Q.x, Q.y, Q._width, Q._height, { Subtype: "Link", Dest: [Q.linkToPage - 1, "XYZ", null, null, null] })), Q.linkToDestination && ot.goTo(Q.x, Q.y, Q._width, Q._height, Q.linkToDestination);
              }
              function Et(Q, pt, ct, ot, mt) {
                var G = Object.assign({ width: Q._width, height: Q._height, assumePt: !0 }, Q.options);
                G.fontCallback = function(Tt, z, S) {
                  var k = Tt.split(",").map(function(_) {
                    return _.trim().replace(/('|")/g, "");
                  }), V = T(mt.fonts, k, Q.font || "Roboto"), it = mt.getFontFile(V, z, S);
                  if (it === null) {
                    var tt = mt.getFontType(z, S);
                    throw new Error("Font '" + V + "' in style '" + tt + "' is not defined in the font section of the document definition.");
                  }
                  return it;
                }, I(ot, Q.svg, Q.x, Q.y, G);
              }
              function Ft(Q, pt) {
                pt.save(), pt.addContent("" + Q.x + " " + Q.y + " " + Q.width + " " + Q.height + " re"), pt.clip();
              }
              function Rt(Q) {
                Q.restore();
              }
              function Ut(Q, pt) {
                var ct = {};
                return Object.keys(Q).forEach(function(ot) {
                  var mt = Q[ot];
                  ct[ot] = pt.pattern(mt.boundingBox, mt.xStep, mt.yStep, mt.pattern, mt.colored);
                }), ct;
              }
              u.exports = C;
            }
          ),
          /***/
          86976: (
            /***/
            function(u) {
              for (var d = [
                null,
                [[10, 7, 17, 13], [1, 1, 1, 1], []],
                [[16, 10, 28, 22], [1, 1, 1, 1], [4, 16]],
                [[26, 15, 22, 18], [1, 1, 2, 2], [4, 20]],
                [[18, 20, 16, 26], [2, 1, 4, 2], [4, 24]],
                [[24, 26, 22, 18], [2, 1, 4, 4], [4, 28]],
                [[16, 18, 28, 24], [4, 2, 4, 4], [4, 32]],
                [[18, 20, 26, 18], [4, 2, 5, 6], [4, 20, 36]],
                [[22, 24, 26, 22], [4, 2, 6, 6], [4, 22, 40]],
                [[22, 30, 24, 20], [5, 2, 8, 8], [4, 24, 44]],
                [[26, 18, 28, 24], [5, 4, 8, 8], [4, 26, 48]],
                [[30, 20, 24, 28], [5, 4, 11, 8], [4, 28, 52]],
                [[22, 24, 28, 26], [8, 4, 11, 10], [4, 30, 56]],
                [[22, 26, 22, 24], [9, 4, 16, 12], [4, 32, 60]],
                [[24, 30, 24, 20], [9, 4, 16, 16], [4, 24, 44, 64]],
                [[24, 22, 24, 30], [10, 6, 18, 12], [4, 24, 46, 68]],
                [[28, 24, 30, 24], [10, 6, 16, 17], [4, 24, 48, 72]],
                [[28, 28, 28, 28], [11, 6, 19, 16], [4, 28, 52, 76]],
                [[26, 30, 28, 28], [13, 6, 21, 18], [4, 28, 54, 80]],
                [[26, 28, 26, 26], [14, 7, 25, 21], [4, 28, 56, 84]],
                [[26, 28, 28, 30], [16, 8, 25, 20], [4, 32, 60, 88]],
                [[26, 28, 30, 28], [17, 8, 25, 23], [4, 26, 48, 70, 92]],
                [[28, 28, 24, 30], [17, 9, 34, 23], [4, 24, 48, 72, 96]],
                [[28, 30, 30, 30], [18, 9, 30, 25], [4, 28, 52, 76, 100]],
                [[28, 30, 30, 30], [20, 10, 32, 27], [4, 26, 52, 78, 104]],
                [[28, 26, 30, 30], [21, 12, 35, 29], [4, 30, 56, 82, 108]],
                [[28, 28, 30, 28], [23, 12, 37, 34], [4, 28, 56, 84, 112]],
                [[28, 30, 30, 30], [25, 12, 40, 34], [4, 32, 60, 88, 116]],
                [[28, 30, 30, 30], [26, 13, 42, 35], [4, 24, 48, 72, 96, 120]],
                [[28, 30, 30, 30], [28, 14, 45, 38], [4, 28, 52, 76, 100, 124]],
                [[28, 30, 30, 30], [29, 15, 48, 40], [4, 24, 50, 76, 102, 128]],
                [[28, 30, 30, 30], [31, 16, 51, 43], [4, 28, 54, 80, 106, 132]],
                [[28, 30, 30, 30], [33, 17, 54, 45], [4, 32, 58, 84, 110, 136]],
                [[28, 30, 30, 30], [35, 18, 57, 48], [4, 28, 56, 84, 112, 140]],
                [[28, 30, 30, 30], [37, 19, 60, 51], [4, 32, 60, 88, 116, 144]],
                [[28, 30, 30, 30], [38, 19, 63, 53], [4, 28, 52, 76, 100, 124, 148]],
                [[28, 30, 30, 30], [40, 20, 66, 56], [4, 22, 48, 74, 100, 126, 152]],
                [[28, 30, 30, 30], [43, 21, 70, 59], [4, 26, 52, 78, 104, 130, 156]],
                [[28, 30, 30, 30], [45, 22, 74, 62], [4, 30, 56, 82, 108, 134, 160]],
                [[28, 30, 30, 30], [47, 24, 77, 65], [4, 24, 52, 80, 108, 136, 164]],
                [[28, 30, 30, 30], [49, 25, 81, 68], [4, 28, 56, 84, 112, 140, 168]]
              ], t = 0, o = 1, r = 2, n = 4, i = 8, f = /^\d*$/, l = /^[A-Za-z0-9 $%*+\-./:]*$/, c = /^[A-Z0-9 $%*+\-./:]*$/, h = 1, a = 0, v = 3, y = 2, g = [], e = [-1], m = 0, w = 1; m < 255; ++m)
                g.push(w), e[w] = m, w = w * 2 ^ (w >= 128 ? 285 : 0);
              for (var D = [[]], m = 0; m < 30; ++m) {
                for (var I = D[m], T = [], C = 0; C <= m; ++C) {
                  var E = C < m ? g[I[C]] : 0, F = g[(m + (I[C - 1] || 0)) % 255];
                  T.push(e[E ^ F]);
                }
                D.push(T);
              }
              for (var x = {}, m = 0; m < 45; ++m)
                x["0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:".charAt(m)] = m;
              var P = [
                function(z, S) {
                  return (z + S) % 2 === 0;
                },
                function(z, S) {
                  return z % 2 === 0;
                },
                function(z, S) {
                  return S % 3 === 0;
                },
                function(z, S) {
                  return (z + S) % 3 === 0;
                },
                function(z, S) {
                  return ((z / 2 | 0) + (S / 3 | 0)) % 2 === 0;
                },
                function(z, S) {
                  return z * S % 2 + z * S % 3 === 0;
                },
                function(z, S) {
                  return (z * S % 2 + z * S % 3) % 2 === 0;
                },
                function(z, S) {
                  return ((z + S) % 2 + z * S % 3) % 2 === 0;
                }
              ], L = function(z) {
                return z > 6;
              }, N = function(z) {
                return 4 * z + 17;
              }, M = function(z) {
                var S = d[z], k = 16 * z * z + 128 * z + 64;
                return L(z) && (k -= 36), S[2].length && (k -= 25 * S[2].length * S[2].length - 10 * S[2].length - 55), k;
              }, K = function(z, S) {
                var k = M(z) & -8, V = d[z];
                return k -= 8 * V[0][S] * V[1][S], k;
              }, ut = function(z, S) {
                switch (S) {
                  case o:
                    return z < 10 ? 10 : z < 27 ? 12 : 14;
                  case r:
                    return z < 10 ? 9 : z < 27 ? 11 : 13;
                  case n:
                    return z < 10 ? 8 : 16;
                  case i:
                    return z < 10 ? 8 : z < 27 ? 10 : 12;
                }
              }, J = function(z, S, k) {
                var V = K(z, k) - 4 - ut(z, S);
                switch (S) {
                  case o:
                    return (V / 10 | 0) * 3 + (V % 10 < 4 ? 0 : V % 10 < 7 ? 1 : 2);
                  case r:
                    return (V / 11 | 0) * 2 + (V % 11 < 6 ? 0 : 1);
                  case n:
                    return V / 8 | 0;
                  case i:
                    return V / 13 | 0;
                }
              }, rt = function(z, S) {
                switch (z) {
                  case o:
                    return S.match(f) ? S : null;
                  case r:
                    return S.match(l) ? S.toUpperCase() : null;
                  case n:
                    if (typeof S == "string") {
                      for (var k = [], V = 0; V < S.length; ++V) {
                        var it = S.charCodeAt(V);
                        it < 128 ? k.push(it) : it < 2048 ? k.push(
                          192 | it >> 6,
                          128 | it & 63
                        ) : it < 65536 ? k.push(
                          224 | it >> 12,
                          128 | it >> 6 & 63,
                          128 | it & 63
                        ) : k.push(
                          240 | it >> 18,
                          128 | it >> 12 & 63,
                          128 | it >> 6 & 63,
                          128 | it & 63
                        );
                      }
                      return k;
                    } else
                      return S;
                }
              }, yt = function(z, S, k, V) {
                var it = [], tt = 0, _ = 8, At = k.length, Lt = function(Dt, ae) {
                  if (ae >= _) {
                    for (it.push(tt | Dt >> (ae -= _)); ae >= 8; )
                      it.push(Dt >> (ae -= 8) & 255);
                    tt = 0, _ = 8;
                  }
                  ae > 0 && (tt |= (Dt & (1 << ae) - 1) << (_ -= ae));
                }, Yt = ut(z, S);
                switch (Lt(S, 4), Lt(At, Yt), S) {
                  case o:
                    for (var Gt = 2; Gt < At; Gt += 3)
                      Lt(parseInt(k.substring(Gt - 2, Gt + 1), 10), 10);
                    Lt(parseInt(k.substring(Gt - 2), 10), [0, 4, 7][At % 3]);
                    break;
                  case r:
                    for (var Gt = 1; Gt < At; Gt += 2)
                      Lt(x[k.charAt(Gt - 1)] * 45 + x[k.charAt(Gt)], 11);
                    At % 2 == 1 && Lt(x[k.charAt(Gt - 1)], 6);
                    break;
                  case n:
                    for (var Gt = 0; Gt < At; ++Gt)
                      Lt(k[Gt], 8);
                    break;
                }
                for (Lt(t, 4), _ < 8 && it.push(tt); it.length + 1 < V; )
                  it.push(236, 17);
                return it.length < V && it.push(236), it;
              }, xt = function(z, S) {
                for (var k = z.slice(0), V = z.length, it = S.length, tt = 0; tt < it; ++tt)
                  k.push(0);
                for (var tt = 0; tt < V; ) {
                  var _ = e[k[tt++]];
                  if (_ >= 0)
                    for (var At = 0; At < it; ++At)
                      k[tt + At] ^= g[(_ + S[At]) % 255];
                }
                return k.slice(V);
              }, Et = function(z, S, k) {
                for (var V = [], it = z.length / S | 0, tt = 0, _ = S - z.length % S, At = 0; At < _; ++At)
                  V.push(tt), tt += it;
                for (var At = _; At < S; ++At)
                  V.push(tt), tt += it + 1;
                V.push(tt);
                for (var Lt = [], At = 0; At < S; ++At)
                  Lt.push(xt(z.slice(V[At], V[At + 1]), k));
                for (var Yt = [], Gt = z.length / S | 0, At = 0; At < Gt; ++At)
                  for (var Dt = 0; Dt < S; ++Dt)
                    Yt.push(z[V[Dt] + At]);
                for (var Dt = _; Dt < S; ++Dt)
                  Yt.push(z[V[Dt + 1] - 1]);
                for (var At = 0; At < k.length; ++At)
                  for (var Dt = 0; Dt < S; ++Dt)
                    Yt.push(Lt[Dt][At]);
                return Yt;
              }, Ft = function(z, S, k, V) {
                for (var it = z << V, tt = S - 1; tt >= 0; --tt)
                  it >> V + tt & 1 && (it ^= k << tt);
                return z << V | it;
              }, Rt = function(z) {
                for (var S = d[z], k = N(z), V = [], it = [], tt = 0; tt < k; ++tt)
                  V.push([]), it.push([]);
                var _ = function(xe, ce, we, zt, Qt) {
                  for (var le = 0; le < we; ++le)
                    for (var de = 0; de < zt; ++de)
                      V[xe + le][ce + de] = Qt[le] >> de & 1, it[xe + le][ce + de] = 1;
                };
                _(0, 0, 9, 9, [127, 65, 93, 93, 93, 65, 383, 0, 64]), _(k - 8, 0, 8, 9, [256, 127, 65, 93, 93, 93, 65, 127]), _(0, k - 8, 9, 8, [254, 130, 186, 186, 186, 130, 254, 0, 0]);
                for (var tt = 9; tt < k - 8; ++tt)
                  V[6][tt] = V[tt][6] = ~tt & 1, it[6][tt] = it[tt][6] = 1;
                for (var At = S[2], Lt = At.length, tt = 0; tt < Lt; ++tt)
                  for (var Yt = tt === 0 || tt === Lt - 1 ? 1 : 0, Gt = tt === 0 ? Lt - 1 : Lt, Dt = Yt; Dt < Gt; ++Dt)
                    _(At[tt], At[Dt], 5, 5, [31, 17, 21, 17, 31]);
                if (L(z))
                  for (var ae = Ft(z, 6, 7973, 12), Ae = 0, tt = 0; tt < 6; ++tt)
                    for (var Dt = 0; Dt < 3; ++Dt)
                      V[tt][k - 11 + Dt] = V[k - 11 + Dt][tt] = ae >> Ae++ & 1, it[tt][k - 11 + Dt] = it[k - 11 + Dt][tt] = 1;
                return { matrix: V, reserved: it };
              }, Ut = function(z, S, k) {
                for (var V = z.length, it = 0, tt = -1, _ = V - 1; _ >= 0; _ -= 2) {
                  _ == 6 && --_;
                  for (var At = tt < 0 ? V - 1 : 0, Lt = 0; Lt < V; ++Lt) {
                    for (var Yt = _; Yt > _ - 2; --Yt)
                      S[At][Yt] || (z[At][Yt] = k[it >> 3] >> (~it & 7) & 1, ++it);
                    At += tt;
                  }
                  tt = -tt;
                }
                return z;
              }, Q = function(z, S, k) {
                for (var V = P[k], it = z.length, tt = 0; tt < it; ++tt)
                  for (var _ = 0; _ < it; ++_)
                    S[tt][_] || (z[tt][_] ^= V(tt, _));
                return z;
              }, pt = function(z, S, k, V) {
                for (var it = z.length, tt = Ft(k << 3 | V, 5, 1335, 10) ^ 21522, _ = 0; _ < 15; ++_) {
                  var At = [0, 1, 2, 3, 4, 5, 7, 8, it - 7, it - 6, it - 5, it - 4, it - 3, it - 2, it - 1][_], Lt = [it - 1, it - 2, it - 3, it - 4, it - 5, it - 6, it - 7, it - 8, 7, 5, 4, 3, 2, 1, 0][_];
                  z[At][8] = z[8][Lt] = tt >> _ & 1;
                }
                return z;
              }, ct = function(z) {
                for (var S = 3, k = 3, V = 40, it = 10, tt = function(we) {
                  for (var zt = 0, Qt = 0; Qt < we.length; ++Qt)
                    we[Qt] >= 5 && (zt += S + (we[Qt] - 5));
                  for (var Qt = 5; Qt < we.length; Qt += 2) {
                    var le = we[Qt];
                    we[Qt - 1] == le && we[Qt - 2] == 3 * le && we[Qt - 3] == le && we[Qt - 4] == le && (we[Qt - 5] >= 4 * le || we[Qt + 1] >= 4 * le) && (zt += V);
                  }
                  return zt;
                }, _ = z.length, At = 0, Lt = 0, Yt = 0; Yt < _; ++Yt) {
                  var Gt = z[Yt], Dt;
                  Dt = [0];
                  for (var ae = 0; ae < _; ) {
                    var Ae;
                    for (Ae = 0; ae < _ && Gt[ae]; ++Ae)
                      ++ae;
                    for (Dt.push(Ae), Ae = 0; ae < _ && !Gt[ae]; ++Ae)
                      ++ae;
                    Dt.push(Ae);
                  }
                  At += tt(Dt), Dt = [0];
                  for (var ae = 0; ae < _; ) {
                    var Ae;
                    for (Ae = 0; ae < _ && z[ae][Yt]; ++Ae)
                      ++ae;
                    for (Dt.push(Ae), Ae = 0; ae < _ && !z[ae][Yt]; ++Ae)
                      ++ae;
                    Dt.push(Ae);
                  }
                  At += tt(Dt);
                  var xe = z[Yt + 1] || [];
                  Lt += Gt[0];
                  for (var ae = 1; ae < _; ++ae) {
                    var ce = Gt[ae];
                    Lt += ce, Gt[ae - 1] == ce && xe[ae] === ce && xe[ae - 1] === ce && (At += k);
                  }
                }
                return At += it * (Math.abs(Lt / _ / _ - 0.5) / 0.05 | 0), At;
              }, ot = function(z, S, k, V, it) {
                var tt = d[S], _ = yt(S, k, z, K(S, V) >> 3);
                _ = Et(_, tt[1][V], D[tt[0][V]]);
                var At = Rt(S), Lt = At.matrix, Yt = At.reserved;
                if (Ut(Lt, Yt, _), it < 0) {
                  Q(Lt, Yt, 0), pt(Lt, Yt, V, 0);
                  var Gt = 0, Dt = ct(Lt);
                  for (Q(Lt, Yt, 0), it = 1; it < 8; ++it) {
                    Q(Lt, Yt, it), pt(Lt, Yt, V, it);
                    var ae = ct(Lt);
                    Dt > ae && (Dt = ae, Gt = it), Q(Lt, Yt, it);
                  }
                  it = Gt;
                }
                return Q(Lt, Yt, it), pt(Lt, Yt, V, it), Lt;
              };
              function mt(z, S) {
                var k = {
                  numeric: o,
                  alphanumeric: r,
                  octet: n
                }, V = {
                  L: h,
                  M: a,
                  Q: v,
                  H: y
                };
                S = S || {};
                var it = S.version || -1, tt = V[(S.eccLevel || "L").toUpperCase()], _ = S.mode ? k[S.mode.toLowerCase()] : -1, At = "mask" in S ? S.mask : -1;
                if (_ < 0)
                  typeof z == "string" ? z.match(f) ? _ = o : z.match(c) ? _ = r : _ = n : _ = n;
                else if (!(_ == o || _ == r || _ == n))
                  throw "invalid or unsupported mode";
                if (z = rt(_, z), z === null)
                  throw "invalid data format";
                if (tt < 0 || tt > 3)
                  throw "invalid ECC level";
                if (it < 0) {
                  for (it = 1; it <= 40 && !(z.length <= J(it, _, tt)); ++it)
                    ;
                  if (it > 40)
                    throw "too large data for the Qr format";
                } else if (it < 1 || it > 40)
                  throw "invalid Qr version! should be between 1 and 40";
                if (At != -1 && (At < 0 || At > 8))
                  throw "invalid mask";
                return ot(z, it, _, tt, At);
              }
              function G(z, S) {
                var k = [], V = S.background || "#fff", it = S.foreground || "#000", tt = S.padding || 0, _ = mt(z, S), At = _.length, Lt = Math.floor(S.fit ? S.fit / At : 5), Yt = At * Lt + Lt * tt * 2, Gt = Lt * tt;
                k.push({
                  type: "rect",
                  x: 0,
                  y: 0,
                  w: Yt,
                  h: Yt,
                  lineWidth: 0,
                  color: V
                });
                for (var Dt = 0; Dt < At; ++Dt)
                  for (var ae = 0; ae < At; ++ae)
                    _[Dt][ae] && k.push({
                      type: "rect",
                      x: Lt * ae + Gt,
                      y: Lt * Dt + Gt,
                      w: Lt,
                      h: Lt,
                      lineWidth: 0,
                      color: it
                    });
                return {
                  canvas: k,
                  size: Yt
                };
              }
              function Tt(z) {
                var S = G(z.qr, z);
                return z._canvas = S.canvas, z._width = z._height = z._minWidth = z._maxWidth = z._minHeight = z._maxHeight = S.size, z;
              }
              u.exports = {
                measure: Tt
              };
            }
          ),
          /***/
          58050: (
            /***/
            function(u) {
              u.exports = {
                "4A0": [4767.87, 6740.79],
                "2A0": [3370.39, 4767.87],
                A0: [2383.94, 3370.39],
                A1: [1683.78, 2383.94],
                A2: [1190.55, 1683.78],
                A3: [841.89, 1190.55],
                A4: [595.28, 841.89],
                A5: [419.53, 595.28],
                A6: [297.64, 419.53],
                A7: [209.76, 297.64],
                A8: [147.4, 209.76],
                A9: [104.88, 147.4],
                A10: [73.7, 104.88],
                B0: [2834.65, 4008.19],
                B1: [2004.09, 2834.65],
                B2: [1417.32, 2004.09],
                B3: [1000.63, 1417.32],
                B4: [708.66, 1000.63],
                B5: [498.9, 708.66],
                B6: [354.33, 498.9],
                B7: [249.45, 354.33],
                B8: [175.75, 249.45],
                B9: [124.72, 175.75],
                B10: [87.87, 124.72],
                C0: [2599.37, 3676.54],
                C1: [1836.85, 2599.37],
                C2: [1298.27, 1836.85],
                C3: [918.43, 1298.27],
                C4: [649.13, 918.43],
                C5: [459.21, 649.13],
                C6: [323.15, 459.21],
                C7: [229.61, 323.15],
                C8: [161.57, 229.61],
                C9: [113.39, 161.57],
                C10: [79.37, 113.39],
                RA0: [2437.8, 3458.27],
                RA1: [1729.13, 2437.8],
                RA2: [1218.9, 1729.13],
                RA3: [864.57, 1218.9],
                RA4: [609.45, 864.57],
                SRA0: [2551.18, 3628.35],
                SRA1: [1814.17, 2551.18],
                SRA2: [1275.59, 1814.17],
                SRA3: [907.09, 1275.59],
                SRA4: [637.8, 907.09],
                EXECUTIVE: [521.86, 756],
                FOLIO: [612, 936],
                LEGAL: [612, 1008],
                LETTER: [612, 792],
                TABLOID: [792, 1224]
              };
            }
          ),
          /***/
          28034: (
            /***/
            function(u, d, t) {
              var o = t(16920).isString, r = t(16920).isArray, n = t(16920).isUndefined, i = t(16920).isNull;
              function f(l, c) {
                this.defaultStyle = c || {}, this.styleDictionary = l, this.styleOverrides = [];
              }
              f.prototype.clone = function() {
                var l = new f(this.styleDictionary, this.defaultStyle);
                return this.styleOverrides.forEach(function(c) {
                  l.styleOverrides.push(c);
                }), l;
              }, f.prototype.push = function(l) {
                this.styleOverrides.push(l);
              }, f.prototype.pop = function(l) {
                for (l = l || 1; l-- > 0; )
                  this.styleOverrides.pop();
              }, f.prototype.autopush = function(l) {
                if (o(l))
                  return 0;
                var c = [];
                l.style && (r(l.style) ? c = l.style : c = [l.style]);
                for (var h = 0, a = c.length; h < a; h++)
                  this.push(c[h]);
                var v = [
                  "font",
                  "fontSize",
                  "fontFeatures",
                  "bold",
                  "italics",
                  "alignment",
                  "color",
                  "columnGap",
                  "fillColor",
                  "fillOpacity",
                  "decoration",
                  "decorationStyle",
                  "decorationColor",
                  "background",
                  "lineHeight",
                  "characterSpacing",
                  "noWrap",
                  "markerColor",
                  "leadingIndent",
                  "sup",
                  "sub"
                  //'tableCellPadding'
                  // 'cellBorder',
                  // 'headerCellBorder',
                  // 'oddRowCellBorder',
                  // 'evenRowCellBorder',
                  // 'tableBorder'
                ], y = {}, g = !1;
                return v.forEach(function(e) {
                  !n(l[e]) && !i(l[e]) && (y[e] = l[e], g = !0);
                }), g && this.push(y), c.length + (g ? 1 : 0);
              }, f.prototype.auto = function(l, c) {
                var h = this.autopush(l), a = c();
                return h > 0 && this.pop(h), a;
              }, f.prototype.getProperty = function(l) {
                if (this.styleOverrides)
                  for (var c = this.styleOverrides.length - 1; c >= 0; c--) {
                    var h = this.styleOverrides[c];
                    if (o(h)) {
                      var a = this.styleDictionary[h];
                      if (a && !n(a[l]) && !i(a[l]))
                        return a[l];
                    } else if (!n(h[l]) && !i(h[l]))
                      return h[l];
                  }
                return this.defaultStyle && this.defaultStyle[l];
              }, u.exports = f;
            }
          ),
          /***/
          48730: (
            /***/
            function(u, d, t) {
              var o = t(26651);
              function r(f) {
                var l = parseFloat(f);
                if (!(typeof l != "number" || isNaN(l)))
                  return l;
              }
              function n(f) {
                var l;
                try {
                  l = new o.XmlDocument(f);
                } catch (c) {
                  throw new Error("SVGMeasure: " + c);
                }
                if (l.name !== "svg")
                  throw new Error("SVGMeasure: expected <svg> document");
                return l;
              }
              function i() {
              }
              i.prototype.measureSVG = function(f) {
                var l = n(f), c = r(l.attr.width), h = r(l.attr.height);
                if ((c == null || h == null) && typeof l.attr.viewBox == "string") {
                  var a = l.attr.viewBox.split(/[,\s]+/);
                  if (a.length !== 4)
                    throw new Error("Unexpected svg viewbox format, should have 4 entries but found: '" + l.attr.viewBox + "'");
                  c == null && (c = r(a[2])), h == null && (h = r(a[3]));
                }
                return {
                  width: c,
                  height: h
                };
              }, i.prototype.writeDimensions = function(f, l) {
                var c = n(f);
                return c.attr.width = "" + l.width, c.attr.height = "" + l.height, c.toString();
              }, u.exports = i;
            }
          ),
          /***/
          41729: (
            /***/
            function(u, d, t) {
              var o = t(65354), r = t(16920).isFunction, n = t(16920).isNumber;
              function i(f) {
                this.tableNode = f;
              }
              i.prototype.beginTable = function(f) {
                var l, c, h = this;
                if (l = this.tableNode, this.offsets = l._offsets, this.layout = l._layout, c = f.context().availableWidth - this.offsets.total, o.buildColumnWidths(l.table.widths, c), this.tableWidth = l._offsets.total + a(), this.rowSpanData = v(), this.cleanUpRepeatables = !1, this.headerRows = l.table.headerRows || 0, this.headerRows > l.table.body.length)
                  throw new Error(`Too few rows in the table. Property headerRows requires at least ${this.headerRows}, contains only ${l.table.body.length}`);
                this.rowsWithoutPageBreak = this.headerRows + (l.table.keepWithHeaderRows || 0), this.dontBreakRows = l.table.dontBreakRows || !1, this.rowsWithoutPageBreak && f.beginUnbreakableBlock(), y(this.tableNode.table.body), this.drawHorizontalLine(0, f);
                function a() {
                  var g = 0;
                  return l.table.widths.forEach(function(e) {
                    g += e._calcWidth;
                  }), g;
                }
                function v() {
                  var g = [], e = 0, m = 0;
                  g.push({ left: 0, rowSpan: 0 });
                  for (var w = 0, D = h.tableNode.table.body[0].length; w < D; w++) {
                    var I = h.layout.paddingLeft(w, h.tableNode) + h.layout.paddingRight(w, h.tableNode), T = h.layout.vLineWidth(w, h.tableNode);
                    m = I + T + h.tableNode.table.widths[w]._calcWidth, g[g.length - 1].width = m, e += m, g.push({ left: e, rowSpan: 0, width: 0 });
                  }
                  return g;
                }
                function y(g) {
                  for (var e = 0; e < g.length; e++)
                    for (var m = g[e], w = 0; w < m.length; w++) {
                      var D = m[w];
                      if (D.border) {
                        for (var I = D.rowSpan || 1, T = D.colSpan || 1, C = 0; C < I; C++)
                          D.border[0] !== void 0 && C > 0 && F(e + C, w, 0, D.border[0]), D.border[2] !== void 0 && F(e + C, w + T - 1, 2, D.border[2]);
                        for (var E = 0; E < T; E++)
                          D.border[1] !== void 0 && E > 0 && F(e, w + E, 1, D.border[1]), D.border[3] !== void 0 && F(e + I - 1, w + E, 3, D.border[3]);
                      }
                    }
                  function F(x, P, L, N) {
                    var M = g[x][P];
                    M.border = M.border || {}, M.border[L] = N;
                  }
                }
              }, i.prototype.onRowBreak = function(f, l) {
                var c = this;
                return function() {
                  var h = c.rowPaddingTop + (c.headerRows ? 0 : c.topLineWidth);
                  l.context().availableHeight -= c.reservedAtBottom, l.context().moveDown(h);
                };
              }, i.prototype.beginRow = function(f, l) {
                this.topLineWidth = this.layout.hLineWidth(f, this.tableNode), this.rowPaddingTop = this.layout.paddingTop(f, this.tableNode), this.bottomLineWidth = this.layout.hLineWidth(f + 1, this.tableNode), this.rowPaddingBottom = this.layout.paddingBottom(f, this.tableNode), this.rowCallback = this.onRowBreak(f, l), l.tracker.startTracking("pageChanged", this.rowCallback), this.dontBreakRows && l.beginUnbreakableBlock(), this.rowTopY = l.context().y, this.reservedAtBottom = this.bottomLineWidth + this.rowPaddingBottom, l.context().availableHeight -= this.reservedAtBottom, l.context().moveDown(this.rowPaddingTop);
              }, i.prototype.drawHorizontalLine = function(f, l, c) {
                var h = this.layout.hLineWidth(f, this.tableNode);
                if (h) {
                  var a = this.layout.hLineStyle(f, this.tableNode), v;
                  a && a.dash && (v = a.dash);
                  for (var y = h / 2, g = null, e = this.tableNode.table.body, m, w, D, I = 0, T = this.rowSpanData.length; I < T; I++) {
                    var C = this.rowSpanData[I], E = !C.rowSpan, F = null;
                    if (E && I < T - 1) {
                      var x = !1, P = !1, L = !1;
                      f > 0 && (m = e[f - 1][I], P = m.border ? m.border[3] : this.layout.defaultBorder, P && m.borderColor && (F = m.borderColor[3])), f < e.length && (w = e[f][I], x = w.border ? w.border[1] : this.layout.defaultBorder, x && F == null && w.borderColor && (F = w.borderColor[1])), E = x || P;
                    }
                    if (m && m._rowSpanCurrentOffset && (D = e[f - 1 - m._rowSpanCurrentOffset][I], L = D && D.border ? D.border[3] : this.layout.defaultBorder, L && D && D.borderColor && (F = D.borderColor[3])), F == null && (F = r(this.layout.hLineColor) ? this.layout.hLineColor(f, this.tableNode, I) : this.layout.hLineColor), !g && E && (g = { left: C.left, width: 0 }), E) {
                      var N = 0;
                      if (D && D.colSpan && L) {
                        for (; D.colSpan > N; )
                          g.width += this.rowSpanData[I + N++].width || 0;
                        I += N - 1;
                      } else if (m && m.colSpan && P) {
                        for (; m.colSpan > N; )
                          g.width += this.rowSpanData[I + N++].width || 0;
                        I += N - 1;
                      } else if (w && w.colSpan && x) {
                        for (; w.colSpan > N; )
                          g.width += this.rowSpanData[I + N++].width || 0;
                        I += N - 1;
                      } else
                        g.width += this.rowSpanData[I].width || 0;
                    }
                    var M = (c || 0) + y;
                    E && g && g.width && (l.addVector({
                      type: "line",
                      x1: g.left,
                      x2: g.left + g.width,
                      y1: M,
                      y2: M,
                      lineWidth: h,
                      dash: v,
                      lineColor: F
                    }, !1, c), g = null, F = null, m = null, w = null, D = null);
                  }
                  l.context().moveDown(h);
                }
              }, i.prototype.drawVerticalLine = function(f, l, c, h, a, v, y) {
                var g = this.layout.vLineWidth(h, this.tableNode);
                if (g !== 0) {
                  var e = this.layout.vLineStyle(h, this.tableNode), m;
                  e && e.dash && (m = e.dash);
                  var w = this.tableNode.table.body, D, I, T;
                  if (h > 0 && (D = w[v][y], D && D.borderColor && (D.border ? D.border[2] : this.layout.defaultBorder) && (T = D.borderColor[2])), T == null && h < w.length && (I = w[v][h], I && I.borderColor && (I.border ? I.border[0] : this.layout.defaultBorder) && (T = I.borderColor[0])), T == null && D && D._rowSpanCurrentOffset) {
                    var C = w[v - D._rowSpanCurrentOffset][y];
                    C.borderColor && (C.border ? C.border[2] : this.layout.defaultBorder) && (T = C.borderColor[2]);
                  }
                  if (T == null && I && I._rowSpanCurrentOffset) {
                    var E = w[v - I._rowSpanCurrentOffset][h];
                    E.borderColor && (E.border ? E.border[2] : this.layout.defaultBorder) && (T = E.borderColor[2]);
                  }
                  T == null && (T = r(this.layout.vLineColor) ? this.layout.vLineColor(h, this.tableNode, v) : this.layout.vLineColor), a.addVector({
                    type: "line",
                    x1: f + g / 2,
                    x2: f + g / 2,
                    y1: l,
                    y2: c,
                    lineWidth: g,
                    dash: m,
                    lineColor: T
                  }, !1, !0), D = null, I = null, T = null;
                }
              }, i.prototype.endTable = function(f) {
                this.cleanUpRepeatables && f.popFromRepeatables();
              }, i.prototype.endRow = function(f, l, c) {
                var h, a, v = this;
                l.tracker.stopTracking("pageChanged", this.rowCallback), l.context().moveDown(this.layout.paddingBottom(f, this.tableNode)), l.context().availableHeight += this.reservedAtBottom;
                var y = l.context().page, g = l.context().y, e = z(), m = [], w = c && c.length > 0, D = this.tableNode.table.body;
                if (m.push({
                  y0: this.rowTopY,
                  page: w ? c[0].prevPage : y
                }), w)
                  for (a = 0, h = c.length; a < h; a++) {
                    var I = c[a];
                    m[m.length - 1].y1 = I.prevY, m.push({ y0: I.y, page: I.prevPage + 1 });
                  }
                m[m.length - 1].y1 = g;
                for (var T = m[0].y1 - m[0].y0 === this.rowPaddingTop, C = T ? 1 : 0, E = m.length; C < E; C++) {
                  var F = C < m.length - 1, x = C > 0 && !this.headerRows, P = x ? 0 : this.topLineWidth, L = m[C].y0, N = m[C].y1;
                  for (F && (N = N + this.rowPaddingBottom), l.context().page != m[C].page && (l.context().page = m[C].page, this.reservedAtBottom = 0), a = 0, h = e.length; a < h; a++) {
                    var M = !1, K = !1, ut = e[a].index;
                    if (ut < D[f].length) {
                      var J = D[f][ut];
                      M = J.border ? J.border[0] : this.layout.defaultBorder, K = J.border ? J.border[2] : this.layout.defaultBorder;
                    }
                    if (ut > 0 && !M) {
                      var J = D[f][ut - 1];
                      M = J.border ? J.border[2] : this.layout.defaultBorder;
                    }
                    if (ut + 1 < D[f].length && !K) {
                      var J = D[f][ut + 1];
                      K = J.border ? J.border[0] : this.layout.defaultBorder;
                    }
                    if (M && this.drawVerticalLine(e[a].x, L - P, N + this.bottomLineWidth, e[a].index, l, f, e[a - 1] ? e[a - 1].index : null), a < h - 1) {
                      var rt = D[f][ut].fillColor, yt = D[f][ut].fillOpacity;
                      rt || (rt = r(this.layout.fillColor) ? this.layout.fillColor(f, this.tableNode, ut) : this.layout.fillColor), n(yt) || (yt = r(this.layout.fillOpacity) ? this.layout.fillOpacity(f, this.tableNode, ut) : this.layout.fillOpacity);
                      var xt = D[f][ut].overlayPattern, Et = D[f][ut].overlayOpacity;
                      if (rt || xt) {
                        var Ft = M ? this.layout.vLineWidth(ut, this.tableNode) : 0, Rt;
                        (ut === 0 || ut + 1 == D[f].length) && !K ? Rt = this.layout.vLineWidth(ut + 1, this.tableNode) : K ? Rt = this.layout.vLineWidth(ut + 1, this.tableNode) / 2 : Rt = 0;
                        var Ut = this.dontBreakRows ? e[a].x + Ft : e[a].x + Ft / 2, Q = this.dontBreakRows ? L : L - P / 2, pt = e[a + 1].x + Rt, ct = this.dontBreakRows ? N + this.bottomLineWidth : N + this.bottomLineWidth / 2, ot = pt - Ut, mt = ct - Q;
                        rt && l.addVector({
                          type: "rect",
                          x: Ut,
                          y: Q,
                          w: ot,
                          h: mt,
                          lineWidth: 0,
                          color: rt,
                          fillOpacity: yt
                        }, !1, !0, l.context().backgroundLength[l.context().page]), xt && l.addVector({
                          type: "rect",
                          x: Ut,
                          y: Q,
                          w: ot,
                          h: mt,
                          lineWidth: 0,
                          color: xt,
                          fillOpacity: Et
                        }, !1, !0);
                      }
                    }
                  }
                  F && this.layout.hLineWhenBroken !== !1 && this.drawHorizontalLine(f + 1, l, N), x && this.layout.hLineWhenBroken !== !1 && this.drawHorizontalLine(f, l, L);
                }
                l.context().page = y, l.context().y = g;
                var G = this.tableNode.table.body[f];
                for (a = 0, h = G.length; a < h; a++) {
                  if (G[a].rowSpan) {
                    if (this.rowSpanData[a].rowSpan = G[a].rowSpan, G[a].colSpan && G[a].colSpan > 1)
                      for (var Tt = 1; Tt < G[a].rowSpan; Tt++)
                        this.tableNode.table.body[f + Tt][a]._colSpan = G[a].colSpan;
                    if (G[a].rowSpan && G[a].rowSpan > 1)
                      for (var Tt = 1; Tt < G[a].rowSpan; Tt++)
                        this.tableNode.table.body[f + Tt][a]._rowSpanCurrentOffset = Tt;
                  }
                  this.rowSpanData[a].rowSpan > 0 && this.rowSpanData[a].rowSpan--;
                }
                this.drawHorizontalLine(f + 1, l), this.headerRows && f === this.headerRows - 1 && (this.headerRepeatable = l.currentBlockToRepeatable()), this.dontBreakRows && l.tracker.auto(
                  "pageChanged",
                  function() {
                    !v.headerRows && v.layout.hLineWhenBroken !== !1 && v.drawHorizontalLine(f, l);
                  },
                  function() {
                    l.commitUnbreakableBlock();
                  }
                ), this.headerRepeatable && (f === this.rowsWithoutPageBreak - 1 || f === this.tableNode.table.body.length - 1) && (l.commitUnbreakableBlock(), l.pushToRepeatables(this.headerRepeatable), this.cleanUpRepeatables = !0, this.headerRepeatable = null);
                function z() {
                  for (var S = [], k = 0, V = 0, it = v.tableNode.table.body[f].length; V < it; V++) {
                    if (!k) {
                      S.push({ x: v.rowSpanData[V].left, index: V });
                      var tt = v.tableNode.table.body[f][V];
                      k = tt._colSpan || tt.colSpan || 0;
                    }
                    k > 0 && k--;
                  }
                  return S.push({ x: v.rowSpanData[v.rowSpanData.length - 1].left, index: v.rowSpanData.length - 1 }), S;
                }
              }, u.exports = i;
            }
          ),
          /***/
          4986: (
            /***/
            function(u, d, t) {
              var o = t(16920).isArray, r = t(16920).isPattern, n = t(16920).getPattern;
              function i(h) {
                for (var a = [], v = null, y = 0, g = h.inlines.length; y < g; y++) {
                  var e = h.inlines[y], m = e.decoration;
                  if (!m) {
                    v = null;
                    continue;
                  }
                  o(m) || (m = [m]);
                  for (var w = e.decorationColor || e.color || "black", D = e.decorationStyle || "solid", I = 0, T = m.length; I < T; I++) {
                    var C = m[I];
                    !v || C !== v.decoration || D !== v.decorationStyle || w !== v.decorationColor ? (v = {
                      line: h,
                      decoration: C,
                      decorationColor: w,
                      decorationStyle: D,
                      inlines: [e]
                    }, a.push(v)) : v.inlines.push(e);
                  }
                }
                return a;
              }
              function f(h, a, v, y) {
                function g() {
                  for (var Ft = 0, Rt = 0, Ut = h.inlines.length; Rt < Ut; Rt++) {
                    var Q = h.inlines[Rt];
                    Ft = Q.fontSize > Ft ? Rt : Ft;
                  }
                  return h.inlines[Ft];
                }
                function e() {
                  for (var Ft = 0, Rt = 0, Ut = h.inlines.length; Rt < Ut; Rt++) {
                    var Q = h.inlines[Rt].justifyShift || 0;
                    Ft += h.inlines[Rt].width + Q;
                  }
                  return Ft;
                }
                var m = h.inlines[0], w = g(), D = e(), I = h.line.getAscenderHeight(), T = w.font.ascender / 1e3 * w.fontSize, C = w.height, E = C - T, F = 0.5 + Math.floor(Math.max(w.fontSize - 8, 0) / 2) * 0.12;
                switch (h.decoration) {
                  case "underline":
                    v += I + E * 0.45;
                    break;
                  case "overline":
                    v += I - T * 0.85;
                    break;
                  case "lineThrough":
                    v += I - T * 0.25;
                    break;
                  default:
                    throw "Unknown decoration : " + h.decoration;
                }
                if (y.save(), h.decorationStyle === "double") {
                  var x = Math.max(0.5, F * 2);
                  y.fillColor(h.decorationColor).rect(a + m.x, v - F / 2, D, F / 2).fill().rect(a + m.x, v + x - F / 2, D, F / 2).fill();
                } else if (h.decorationStyle === "dashed") {
                  var P = Math.ceil(D / 6.8), L = a + m.x;
                  y.rect(L, v, D, F).clip(), y.fillColor(h.decorationColor);
                  for (var N = 0; N < P; N++)
                    y.rect(L, v - F / 2, 3.96, F).fill(), L += 6.8;
                } else if (h.decorationStyle === "dotted") {
                  var M = Math.ceil(D / (F * 3)), K = a + m.x;
                  y.rect(K, v, D, F).clip(), y.fillColor(h.decorationColor);
                  for (var ut = 0; ut < M; ut++)
                    y.rect(K, v - F / 2, F, F).fill(), K += F * 3;
                } else if (h.decorationStyle === "wavy") {
                  var J = 0.7, rt = 1, yt = Math.ceil(D / (J * 2)) + 1, xt = a + m.x - 1;
                  y.rect(a + m.x, v - rt, D, v + rt).clip(), y.lineWidth(0.24), y.moveTo(xt, v);
                  for (var Et = 0; Et < yt; Et++)
                    y.bezierCurveTo(xt + J, v - rt, xt + J * 2, v - rt, xt + J * 3, v).bezierCurveTo(xt + J * 4, v + rt, xt + J * 5, v + rt, xt + J * 6, v), xt += J * 6;
                  y.stroke(h.decorationColor);
                } else
                  y.fillColor(h.decorationColor).rect(a + m.x, v - F / 2, D, F).fill();
                y.restore();
              }
              function l(h, a, v, y) {
                for (var g = i(h), e = 0, m = g.length; e < m; e++)
                  f(g[e], a, v, y);
              }
              function c(h, a, v, y, g) {
                for (var e = h.getHeight(), m = 0, w = h.inlines.length; m < w; m++) {
                  var D = h.inlines[m];
                  if (D.background) {
                    var I = D.background;
                    r(D.background) && (I = n(D.background, y));
                    var T = D.justifyShift || 0;
                    g.fillColor(I).rect(a + D.x - T, v, D.width + T, e).fill();
                  }
                }
              }
              u.exports = {
                drawBackground: c,
                drawDecorations: l
              };
            }
          ),
          /***/
          28045: (
            /***/
            function(u, d, t) {
              var o = t(16920).isString, r = t(16920).isNumber, n = t(16920).isObject, i = t(16920).isArray, f = t(16920).isUndefined, l = t(46982), c = /^(\s)+/g, h = /(\s)+$/g;
              function a(I) {
                this.fontProvider = I;
              }
              a.prototype.buildInlines = function(I, T) {
                var C = w(this.fontProvider, I, T), E = 0, F = 0, x;
                return C.forEach(function(L) {
                  E = Math.max(E, L.width - L.leadingCut - L.trailingCut), x || (x = { width: 0, leadingCut: L.leadingCut, trailingCut: 0 }), x.width += L.width, x.trailingCut = L.trailingCut, F = Math.max(F, P(x)), L.lineEnd && (x = null);
                }), m({}, T, "noWrap", !1) && (E = F), {
                  items: C,
                  minWidth: E,
                  maxWidth: F
                };
                function P(L) {
                  return Math.max(0, L.width - L.leadingCut - L.trailingCut);
                }
              }, a.prototype.sizeOfString = function(I, T) {
                I = I ? I.toString().replace(/\t/g, "    ") : "";
                var C = m({}, T, "font", "Roboto"), E = m({}, T, "fontSize", 12), F = m({}, T, "fontFeatures", null), x = m({}, T, "bold", !1), P = m({}, T, "italics", !1), L = m({}, T, "lineHeight", 1), N = m({}, T, "characterSpacing", 0), M = this.fontProvider.provideFont(C, x, P);
                return {
                  width: D(I, M, E, N, F),
                  height: M.lineHeight(E) * L,
                  fontSize: E,
                  lineHeight: L,
                  ascender: M.ascender / 1e3 * E,
                  descender: M.descender / 1e3 * E
                };
              }, a.prototype.sizeOfRotatedText = function(I, T, C) {
                var E = T * Math.PI / -180, F = this.sizeOfString(I, C);
                return {
                  width: Math.abs(F.height * Math.sin(E)) + Math.abs(F.width * Math.cos(E)),
                  height: Math.abs(F.width * Math.sin(E)) + Math.abs(F.height * Math.cos(E))
                };
              }, a.prototype.widthOfString = function(I, T, C, E, F) {
                return D(I, T, C, E, F);
              };
              function v(I, T) {
                var C = [];
                if (I = I.replace(/\t/g, "    "), T)
                  return C.push({ text: I }), C;
                for (var E = new l(I), F = 0, x; x = E.nextBreak(); ) {
                  var P = I.slice(F, x.position);
                  x.required || P.match(/\r?\n$|\r$/) ? (P = P.replace(/\r?\n$|\r$/, ""), C.push({ text: P, lineEnd: !0 })) : C.push({ text: P }), F = x.position;
                }
                return C;
              }
              function y(I, T) {
                T = T || {}, I = I || {};
                for (var C in I)
                  C != "text" && I.hasOwnProperty(C) && (T[C] = I[C]);
                return T;
              }
              function g(I, T) {
                function C(Ft) {
                  return Ft.reduce(function(Rt, Ut) {
                    var Q = i(Ut.text) ? C(Ut.text) : Ut, pt = [].concat(Q).some(Array.isArray);
                    return Rt.concat(pt ? C(Q) : Q);
                  }, []);
                }
                function E(Ft, Rt, Ut) {
                  if (f(Rt[Ft]) || Rt[Ft].lineEnd)
                    return null;
                  var Q = Rt[Ft].text;
                  if (Ut) {
                    var pt = v(e(Q), !1);
                    if (f(pt[pt.length - 1]))
                      return null;
                    Q = pt[pt.length - 1].text;
                  }
                  return Q;
                }
                var F = [];
                i(I) || (I = [I]), I = C(I);
                for (var x = null, P = 0, L = I.length; P < L; P++) {
                  var N = I[P], M = null, K, ut = m(N || {}, T, "noWrap", !1);
                  if (n(N) ? (N._textRef && N._textRef._textNodeRef.text && (N.text = N._textRef._textNodeRef.text), K = v(e(N.text), ut), M = y(N)) : K = v(e(N), ut), x && K.length) {
                    var J = E(0, K, ut), rt = v(e(x + J), !1);
                    rt.length === 1 && (F[F.length - 1].noNewLine = !0);
                  }
                  for (var yt = 0, xt = K.length; yt < xt; yt++) {
                    var Et = {
                      text: K[yt].text
                    };
                    K[yt].lineEnd && (Et.lineEnd = !0), y(M, Et), F.push(Et);
                  }
                  x = null, P + 1 < L && (x = E(K.length - 1, K, ut));
                }
                return F;
              }
              function e(I) {
                return I == null ? "" : r(I) ? I.toString() : o(I) ? I : I.toString();
              }
              function m(I, T, C, E) {
                var F;
                return I[C] !== void 0 && I[C] !== null ? I[C] : T ? (T.auto(I, function() {
                  F = T.getProperty(C);
                }), F ?? E) : E;
              }
              function w(I, T, C) {
                var E = g(T, C);
                if (E.length) {
                  var F = m(E[0], C, "leadingIndent", 0);
                  F && (E[0].leadingCut = -F, E[0].leadingIndent = F);
                }
                return E.forEach(function(x) {
                  var P = m(x, C, "font", "Roboto"), L = m(x, C, "fontSize", 12), N = m(x, C, "fontFeatures", null), M = m(x, C, "bold", !1), K = m(x, C, "italics", !1), ut = m(x, C, "color", "black"), J = m(x, C, "decoration", null), rt = m(x, C, "decorationColor", null), yt = m(x, C, "decorationStyle", null), xt = m(x, C, "background", null), Et = m(x, C, "lineHeight", 1), Ft = m(x, C, "characterSpacing", 0), Rt = m(x, C, "link", null), Ut = m(x, C, "linkToPage", null), Q = m(x, C, "linkToDestination", null), pt = m(x, C, "noWrap", null), ct = m(x, C, "preserveLeadingSpaces", !1), ot = m(x, C, "preserveTrailingSpaces", !1), mt = m(x, C, "opacity", 1), G = m(x, C, "sup", !1), Tt = m(x, C, "sub", !1);
                  (G || Tt) && x.fontSize === void 0 && (L *= 0.58);
                  var z = I.provideFont(P, M, K);
                  x.width = D(x.text, z, L, Ft, N), x.height = z.lineHeight(L) * Et, x.leadingCut || (x.leadingCut = 0);
                  var S;
                  !ct && (S = x.text.match(c)) && (x.leadingCut += D(S[0], z, L, Ft, N));
                  var k;
                  !ot && (k = x.text.match(h)) ? x.trailingCut = D(k[0], z, L, Ft, N) : x.trailingCut = 0, x.alignment = m(x, C, "alignment", "left"), x.font = z, x.fontSize = L, x.fontFeatures = N, x.characterSpacing = Ft, x.color = ut, x.decoration = J, x.decorationColor = rt, x.decorationStyle = yt, x.background = xt, x.link = Rt, x.linkToPage = Ut, x.linkToDestination = Q, x.noWrap = pt, x.opacity = mt, x.sup = G, x.sub = Tt;
                }), E;
              }
              function D(I, T, C, E, F) {
                return T.widthOfString(I, C, F) + (E || 0) * (I.length - 1);
              }
              u.exports = a;
            }
          ),
          /***/
          73602: (
            /***/
            function(u) {
              function d() {
                this.events = {};
              }
              d.prototype.startTracking = function(t, o) {
                var r = this.events[t] || (this.events[t] = []);
                r.indexOf(o) < 0 && r.push(o);
              }, d.prototype.stopTracking = function(t, o) {
                var r = this.events[t];
                if (r) {
                  var n = r.indexOf(o);
                  n >= 0 && r.splice(n, 1);
                }
              }, d.prototype.emit = function(t) {
                var o = Array.prototype.slice.call(arguments, 1), r = this.events[t];
                r && r.forEach(function(n) {
                  n.apply(this, o);
                });
              }, d.prototype.auto = function(t, o, r) {
                this.startTracking(t, o), r(), this.stopTracking(t, o);
              }, u.exports = d;
            }
          ),
          /***/
          70457: (
            /***/
            function(u, d, t) {
              var o, r, n;
              (function(i, f) {
                r = [], o = f, n = typeof o == "function" ? o.apply(d, r) : o, n !== void 0 && (u.exports = n);
              })(this, function() {
                function i(y, g) {
                  return typeof g > "u" ? g = { autoBom: !1 } : typeof g != "object" && (console.warn("Deprecated: Expected third argument to be a object"), g = { autoBom: !g }), g.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(y.type) ? new Blob(["\uFEFF", y], { type: y.type }) : y;
                }
                function f(y, g, e) {
                  var m = new XMLHttpRequest();
                  m.open("GET", y), m.responseType = "blob", m.onload = function() {
                    v(m.response, g, e);
                  }, m.onerror = function() {
                    console.error("could not download file");
                  }, m.send();
                }
                function l(y) {
                  var g = new XMLHttpRequest();
                  g.open("HEAD", y, !1);
                  try {
                    g.send();
                  } catch {
                  }
                  return 200 <= g.status && 299 >= g.status;
                }
                function c(y) {
                  try {
                    y.dispatchEvent(new MouseEvent("click"));
                  } catch {
                    var g = document.createEvent("MouseEvents");
                    g.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), y.dispatchEvent(g);
                  }
                }
                var h = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof t.g == "object" && t.g.global === t.g ? t.g : void 0, a = h.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), v = h.saveAs || (typeof window != "object" || window !== h ? function() {
                } : typeof HTMLAnchorElement < "u" && "download" in HTMLAnchorElement.prototype && !a ? function(y, g, e) {
                  var m = h.URL || h.webkitURL, w = document.createElement("a");
                  g = g || y.name || "download", w.download = g, w.rel = "noopener", typeof y == "string" ? (w.href = y, w.origin === location.origin ? c(w) : l(w.href) ? f(y, g, e) : c(w, w.target = "_blank")) : (w.href = m.createObjectURL(y), setTimeout(function() {
                    m.revokeObjectURL(w.href);
                  }, 4e4), setTimeout(function() {
                    c(w);
                  }, 0));
                } : "msSaveOrOpenBlob" in navigator ? function(y, g, e) {
                  if (g = g || y.name || "download", typeof y != "string")
                    navigator.msSaveOrOpenBlob(i(y, e), g);
                  else if (l(y))
                    f(y, g, e);
                  else {
                    var m = document.createElement("a");
                    m.href = y, m.target = "_blank", setTimeout(function() {
                      c(m);
                    });
                  }
                } : function(y, g, e, m) {
                  if (m = m || open("", "_blank"), m && (m.document.title = m.document.body.innerText = "downloading..."), typeof y == "string")
                    return f(y, g, e);
                  var w = y.type === "application/octet-stream", D = /constructor/i.test(h.HTMLElement) || h.safari, I = /CriOS\/[\d]+/.test(navigator.userAgent);
                  if ((I || w && D || a) && typeof FileReader < "u") {
                    var T = new FileReader();
                    T.onloadend = function() {
                      var F = T.result;
                      F = I ? F : F.replace(/^data:[^;]*;/, "data:attachment/file;"), m ? m.location.href = F : location = F, m = null;
                    }, T.readAsDataURL(y);
                  } else {
                    var C = h.URL || h.webkitURL, E = C.createObjectURL(y);
                    m ? m.location = E : location.href = E, m = null, setTimeout(function() {
                      C.revokeObjectURL(E);
                    }, 4e4);
                  }
                });
                h.saveAs = v.saveAs = v, u.exports = v;
              });
            }
          ),
          /***/
          89233: (
            /***/
            function(u, d, t) {
              var o = t(43060).Buffer;
              t(26364), t(86632), t(61928), t(16543), t(33142), t(10853), t(6208), t(80044), t(18821), t(54883), t(30644), t(45007), t(68995), t(55862), t(80174), t(73214), t(15158), t(54994), t(33130), t(66923), t(35054), t(80238), t(99041), t(45550), t(84750), t(55281), t(39275), t(75668), t(4845), t(85005), t(63815), t(83382), t(27013), t(51360), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(100), t(33290), t(29897);
              var r;
              function n(ft, X) {
                for (var et = 0; et < X.length; et++) {
                  var O = X[et];
                  O.enumerable = O.enumerable || !1, O.configurable = !0, "value" in O && (O.writable = !0), Object.defineProperty(ft, f(O.key), O);
                }
              }
              function i(ft, X, et) {
                return X && n(ft.prototype, X), et && n(ft, et), Object.defineProperty(ft, "prototype", { writable: !1 }), ft;
              }
              function f(ft) {
                var X = l(ft, "string");
                return typeof X == "symbol" ? X : String(X);
              }
              function l(ft, X) {
                if (typeof ft != "object" || !ft)
                  return ft;
                var et = ft[Symbol.toPrimitive];
                if (et !== void 0) {
                  var O = et.call(ft, X || "default");
                  if (typeof O != "object")
                    return O;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (X === "string" ? String : Number)(ft);
              }
              function c(ft, X) {
                ft.prototype = Object.create(X.prototype), ft.prototype.constructor = ft, h(ft, X);
              }
              function h(ft, X) {
                return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(O, U) {
                  return O.__proto__ = U, O;
                }, h(ft, X);
              }
              function a(ft, X) {
                var et = typeof Symbol < "u" && ft[Symbol.iterator] || ft["@@iterator"];
                if (et)
                  return (et = et.call(ft)).next.bind(et);
                if (Array.isArray(ft) || (et = v(ft)) || X && ft && typeof ft.length == "number") {
                  et && (ft = et);
                  var O = 0;
                  return function() {
                    return O >= ft.length ? { done: !0 } : { done: !1, value: ft[O++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function v(ft, X) {
                if (ft) {
                  if (typeof ft == "string")
                    return y(ft, X);
                  var et = Object.prototype.toString.call(ft).slice(8, -1);
                  if (et === "Object" && ft.constructor && (et = ft.constructor.name), et === "Map" || et === "Set")
                    return Array.from(ft);
                  if (et === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(et))
                    return y(ft, X);
                }
              }
              function y(ft, X) {
                (X == null || X > ft.length) && (X = ft.length);
                for (var et = 0, O = new Array(X); et < X; et++)
                  O[et] = ft[et];
                return O;
              }
              function g(ft) {
                return ft && typeof ft == "object" && "default" in ft ? ft.default : ft;
              }
              var e = g(t(27398)), m = t(76959), w = g(t(27074)), D = g(t(51348)), I = g(t(67827)), T = g(t(41966)), C = g(t(72986)), E = g(t(84346)), F = g(t(49435)), x = t(52773), P = {};
              P.logErrors = !1;
              var L = [];
              P.registerFormat = function(ft) {
                L.push(ft);
              }, P.openSync = function(ft, X) {
                var et = x.readFileSync(ft);
                return P.create(et, X);
              }, P.open = function(ft, X, et) {
                typeof X == "function" && (et = X, X = null), x.readFile(ft, function(O, U) {
                  if (O)
                    return et(O);
                  try {
                    var H = P.create(U, X);
                  } catch (lt) {
                    return et(lt);
                  }
                  return et(null, H);
                });
              }, P.create = function(ft, X) {
                for (var et = 0; et < L.length; et++) {
                  var O = L[et];
                  if (O.probe(ft)) {
                    var U = new O(new e.DecodeStream(ft));
                    return X ? U.getFont(X) : U;
                  }
                }
                throw new Error("Unknown font format");
              }, P.defaultLanguage = "en", P.setDefaultLanguage = function(ft) {
                ft === void 0 && (ft = "en"), P.defaultLanguage = ft;
              };
              function N(ft, X, et) {
                return X in ft ? Object.defineProperty(ft, X, {
                  value: et,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : ft[X] = et, ft;
              }
              function M(ft, X, et, O, U) {
                var H = {};
                return Object.keys(O).forEach(function(lt) {
                  H[lt] = O[lt];
                }), H.enumerable = !!H.enumerable, H.configurable = !!H.configurable, ("value" in H || H.initializer) && (H.writable = !0), H = et.slice().reverse().reduce(function(lt, vt) {
                  return vt(ft, X, lt) || lt;
                }, H), U && H.initializer !== void 0 && (H.value = H.initializer ? H.initializer.call(U) : void 0, H.initializer = void 0), H.initializer === void 0 && (Object.defineProperty(ft, X, H), H = null), H;
              }
              function K(ft, X, et) {
                if (et.get) {
                  var O = et.get;
                  et.get = function() {
                    var H = O.call(this);
                    return Object.defineProperty(this, X, {
                      value: H
                    }), H;
                  };
                } else if (typeof et.value == "function") {
                  var U = et.value;
                  return {
                    get: function() {
                      var lt = /* @__PURE__ */ new Map();
                      function vt() {
                        for (var dt = arguments.length, ht = new Array(dt), Pt = 0; Pt < dt; Pt++)
                          ht[Pt] = arguments[Pt];
                        var Vt = ht.length > 0 ? ht[0] : "value";
                        if (lt.has(Vt))
                          return lt.get(Vt);
                        var se = U.apply(this, ht);
                        return lt.set(Vt, se), se;
                      }
                      return Object.defineProperty(this, X, {
                        value: vt
                      }), vt;
                    }
                  };
                }
              }
              var ut = new e.Struct({
                firstCode: e.uint16,
                entryCount: e.uint16,
                idDelta: e.int16,
                idRangeOffset: e.uint16
              }), J = new e.Struct({
                startCharCode: e.uint32,
                endCharCode: e.uint32,
                glyphID: e.uint32
              }), rt = new e.Struct({
                startUnicodeValue: e.uint24,
                additionalCount: e.uint8
              }), yt = new e.Struct({
                unicodeValue: e.uint24,
                glyphID: e.uint16
              }), xt = new e.Array(rt, e.uint32), Et = new e.Array(yt, e.uint32), Ft = new e.Struct({
                varSelector: e.uint24,
                defaultUVS: new e.Pointer(e.uint32, xt, {
                  type: "parent"
                }),
                nonDefaultUVS: new e.Pointer(e.uint32, Et, {
                  type: "parent"
                })
              }), Rt = new e.VersionedStruct(e.uint16, {
                0: {
                  // Byte encoding
                  length: e.uint16,
                  // Total table length in bytes (set to 262 for format 0)
                  language: e.uint16,
                  // Language code for this encoding subtable, or zero if language-independent
                  codeMap: new e.LazyArray(e.uint8, 256)
                },
                2: {
                  // High-byte mapping (CJK)
                  length: e.uint16,
                  language: e.uint16,
                  subHeaderKeys: new e.Array(e.uint16, 256),
                  subHeaderCount: function(X) {
                    return Math.max.apply(Math, X.subHeaderKeys);
                  },
                  subHeaders: new e.LazyArray(ut, "subHeaderCount"),
                  glyphIndexArray: new e.LazyArray(e.uint16, "subHeaderCount")
                },
                4: {
                  // Segment mapping to delta values
                  length: e.uint16,
                  // Total table length in bytes
                  language: e.uint16,
                  // Language code
                  segCountX2: e.uint16,
                  segCount: function(X) {
                    return X.segCountX2 >> 1;
                  },
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16,
                  endCode: new e.LazyArray(e.uint16, "segCount"),
                  reservedPad: new e.Reserved(e.uint16),
                  // This value should be zero
                  startCode: new e.LazyArray(e.uint16, "segCount"),
                  idDelta: new e.LazyArray(e.int16, "segCount"),
                  idRangeOffset: new e.LazyArray(e.uint16, "segCount"),
                  glyphIndexArray: new e.LazyArray(e.uint16, function(ft) {
                    return (ft.length - ft._currentOffset) / 2;
                  })
                },
                6: {
                  // Trimmed table
                  length: e.uint16,
                  language: e.uint16,
                  firstCode: e.uint16,
                  entryCount: e.uint16,
                  glyphIndices: new e.LazyArray(e.uint16, "entryCount")
                },
                8: {
                  // mixed 16-bit and 32-bit coverage
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint16,
                  is32: new e.LazyArray(e.uint8, 8192),
                  nGroups: e.uint32,
                  groups: new e.LazyArray(J, "nGroups")
                },
                10: {
                  // Trimmed Array
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  firstCode: e.uint32,
                  entryCount: e.uint32,
                  glyphIndices: new e.LazyArray(e.uint16, "numChars")
                },
                12: {
                  // Segmented coverage
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  nGroups: e.uint32,
                  groups: new e.LazyArray(J, "nGroups")
                },
                13: {
                  // Many-to-one range mappings (same as 12 except for group.startGlyphID)
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  nGroups: e.uint32,
                  groups: new e.LazyArray(J, "nGroups")
                },
                14: {
                  // Unicode Variation Sequences
                  length: e.uint32,
                  numRecords: e.uint32,
                  varSelectors: new e.LazyArray(Ft, "numRecords")
                }
              }), Ut = new e.Struct({
                platformID: e.uint16,
                // Platform identifier
                encodingID: e.uint16,
                // Platform-specific encoding identifier
                table: new e.Pointer(e.uint32, Rt, {
                  type: "parent",
                  lazy: !0
                })
              }), Q = new e.Struct({
                version: e.uint16,
                numSubtables: e.uint16,
                tables: new e.Array(Ut, "numSubtables")
              }), pt = new e.Struct({
                version: e.int32,
                // 0x00010000 (version 1.0)
                revision: e.int32,
                // set by font manufacturer
                checkSumAdjustment: e.uint32,
                magicNumber: e.uint32,
                // set to 0x5F0F3CF5
                flags: e.uint16,
                unitsPerEm: e.uint16,
                // range from 64 to 16384
                created: new e.Array(e.int32, 2),
                modified: new e.Array(e.int32, 2),
                xMin: e.int16,
                // for all glyph bounding boxes
                yMin: e.int16,
                // for all glyph bounding boxes
                xMax: e.int16,
                // for all glyph bounding boxes
                yMax: e.int16,
                // for all glyph bounding boxes
                macStyle: new e.Bitfield(e.uint16, ["bold", "italic", "underline", "outline", "shadow", "condensed", "extended"]),
                lowestRecPPEM: e.uint16,
                // smallest readable size in pixels
                fontDirectionHint: e.int16,
                indexToLocFormat: e.int16,
                // 0 for short offsets, 1 for long
                glyphDataFormat: e.int16
                // 0 for current format
              }), ct = new e.Struct({
                version: e.int32,
                ascent: e.int16,
                // Distance from baseline of highest ascender
                descent: e.int16,
                // Distance from baseline of lowest descender
                lineGap: e.int16,
                // Typographic line gap
                advanceWidthMax: e.uint16,
                // Maximum advance width value in 'hmtx' table
                minLeftSideBearing: e.int16,
                // Maximum advance width value in 'hmtx' table
                minRightSideBearing: e.int16,
                // Minimum right sidebearing value
                xMaxExtent: e.int16,
                caretSlopeRise: e.int16,
                // Used to calculate the slope of the cursor (rise/run); 1 for vertical
                caretSlopeRun: e.int16,
                // 0 for vertical
                caretOffset: e.int16,
                // Set to 0 for non-slanted fonts
                reserved: new e.Reserved(e.int16, 4),
                metricDataFormat: e.int16,
                // 0 for current format
                numberOfMetrics: e.uint16
                // Number of advance widths in 'hmtx' table
              }), ot = new e.Struct({
                advance: e.uint16,
                bearing: e.int16
              }), mt = new e.Struct({
                metrics: new e.LazyArray(ot, function(ft) {
                  return ft.parent.hhea.numberOfMetrics;
                }),
                bearings: new e.LazyArray(e.int16, function(ft) {
                  return ft.parent.maxp.numGlyphs - ft.parent.hhea.numberOfMetrics;
                })
              }), G = new e.Struct({
                version: e.int32,
                numGlyphs: e.uint16,
                // The number of glyphs in the font
                maxPoints: e.uint16,
                // Maximum points in a non-composite glyph
                maxContours: e.uint16,
                // Maximum contours in a non-composite glyph
                maxComponentPoints: e.uint16,
                // Maximum points in a composite glyph
                maxComponentContours: e.uint16,
                // Maximum contours in a composite glyph
                maxZones: e.uint16,
                // 1 if instructions do not use the twilight zone, 2 otherwise
                maxTwilightPoints: e.uint16,
                // Maximum points used in Z0
                maxStorage: e.uint16,
                // Number of Storage Area locations
                maxFunctionDefs: e.uint16,
                // Number of FDEFs
                maxInstructionDefs: e.uint16,
                // Number of IDEFs
                maxStackElements: e.uint16,
                // Maximum stack depth
                maxSizeOfInstructions: e.uint16,
                // Maximum byte count for glyph instructions
                maxComponentElements: e.uint16,
                // Maximum number of components referenced at âtop levelâ for any composite glyph
                maxComponentDepth: e.uint16
                // Maximum levels of recursion; 1 for simple components
              });
              function Tt(ft, X, et) {
                return et === void 0 && (et = 0), ft === 1 && S[et] ? S[et] : z[ft][X];
              }
              var z = [
                // unicode
                ["utf16be", "utf16be", "utf16be", "utf16be", "utf16be", "utf16be"],
                // macintosh
                // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/
                // 0	Roman                 17	Malayalam
                // 1	Japanese	            18	Sinhalese
                // 2	Traditional Chinese	  19	Burmese
                // 3	Korean	              20	Khmer
                // 4	Arabic	              21	Thai
                // 5	Hebrew	              22	Laotian
                // 6	Greek	                23	Georgian
                // 7	Russian	              24	Armenian
                // 8	RSymbol	              25	Simplified Chinese
                // 9	Devanagari	          26	Tibetan
                // 10	Gurmukhi	            27	Mongolian
                // 11	Gujarati	            28	Geez
                // 12	Oriya	                29	Slavic
                // 13	Bengali	              30	Vietnamese
                // 14	Tamil	                31	Sindhi
                // 15	Telugu	              32	(Uninterpreted)
                // 16	Kannada
                ["macroman", "shift-jis", "big5", "euc-kr", "iso-8859-6", "iso-8859-8", "macgreek", "maccyrillic", "symbol", "Devanagari", "Gurmukhi", "Gujarati", "Oriya", "Bengali", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhalese", "Burmese", "Khmer", "macthai", "Laotian", "Georgian", "Armenian", "gb-2312-80", "Tibetan", "Mongolian", "Geez", "maccenteuro", "Vietnamese", "Sindhi"],
                // ISO (deprecated)
                ["ascii"],
                // windows
                // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx
                ["symbol", "utf16be", "shift-jis", "gb18030", "big5", "wansung", "johab", null, null, null, "utf16be"]
              ], S = {
                15: "maciceland",
                17: "macturkish",
                18: "maccroatian",
                24: "maccenteuro",
                25: "maccenteuro",
                26: "maccenteuro",
                27: "maccenteuro",
                28: "maccenteuro",
                30: "maciceland",
                37: "macromania",
                38: "maccenteuro",
                39: "maccenteuro",
                40: "maccenteuro",
                143: "macinuit",
                // Unsupported by iconv-lite
                146: "macgaelic"
                // Unsupported by iconv-lite
              }, k = [
                // unicode
                [],
                {
                  // macintosh
                  0: "en",
                  30: "fo",
                  60: "ks",
                  90: "rw",
                  1: "fr",
                  31: "fa",
                  61: "ku",
                  91: "rn",
                  2: "de",
                  32: "ru",
                  62: "sd",
                  92: "ny",
                  3: "it",
                  33: "zh",
                  63: "bo",
                  93: "mg",
                  4: "nl",
                  34: "nl-BE",
                  64: "ne",
                  94: "eo",
                  5: "sv",
                  35: "ga",
                  65: "sa",
                  128: "cy",
                  6: "es",
                  36: "sq",
                  66: "mr",
                  129: "eu",
                  7: "da",
                  37: "ro",
                  67: "bn",
                  130: "ca",
                  8: "pt",
                  38: "cz",
                  68: "as",
                  131: "la",
                  9: "no",
                  39: "sk",
                  69: "gu",
                  132: "qu",
                  10: "he",
                  40: "si",
                  70: "pa",
                  133: "gn",
                  11: "ja",
                  41: "yi",
                  71: "or",
                  134: "ay",
                  12: "ar",
                  42: "sr",
                  72: "ml",
                  135: "tt",
                  13: "fi",
                  43: "mk",
                  73: "kn",
                  136: "ug",
                  14: "el",
                  44: "bg",
                  74: "ta",
                  137: "dz",
                  15: "is",
                  45: "uk",
                  75: "te",
                  138: "jv",
                  16: "mt",
                  46: "be",
                  76: "si",
                  139: "su",
                  17: "tr",
                  47: "uz",
                  77: "my",
                  140: "gl",
                  18: "hr",
                  48: "kk",
                  78: "km",
                  141: "af",
                  19: "zh-Hant",
                  49: "az-Cyrl",
                  79: "lo",
                  142: "br",
                  20: "ur",
                  50: "az-Arab",
                  80: "vi",
                  143: "iu",
                  21: "hi",
                  51: "hy",
                  81: "id",
                  144: "gd",
                  22: "th",
                  52: "ka",
                  82: "tl",
                  145: "gv",
                  23: "ko",
                  53: "mo",
                  83: "ms",
                  146: "ga",
                  24: "lt",
                  54: "ky",
                  84: "ms-Arab",
                  147: "to",
                  25: "pl",
                  55: "tg",
                  85: "am",
                  148: "el-polyton",
                  26: "hu",
                  56: "tk",
                  86: "ti",
                  149: "kl",
                  27: "es",
                  57: "mn-CN",
                  87: "om",
                  150: "az",
                  28: "lv",
                  58: "mn",
                  88: "so",
                  151: "nn",
                  29: "se",
                  59: "ps",
                  89: "sw"
                },
                // ISO (deprecated)
                [],
                {
                  // windows                                        
                  1078: "af",
                  16393: "en-IN",
                  1159: "rw",
                  1074: "tn",
                  1052: "sq",
                  6153: "en-IE",
                  1089: "sw",
                  1115: "si",
                  1156: "gsw",
                  8201: "en-JM",
                  1111: "kok",
                  1051: "sk",
                  1118: "am",
                  17417: "en-MY",
                  1042: "ko",
                  1060: "sl",
                  5121: "ar-DZ",
                  5129: "en-NZ",
                  1088: "ky",
                  11274: "es-AR",
                  15361: "ar-BH",
                  13321: "en-PH",
                  1108: "lo",
                  16394: "es-BO",
                  3073: "ar",
                  18441: "en-SG",
                  1062: "lv",
                  13322: "es-CL",
                  2049: "ar-IQ",
                  7177: "en-ZA",
                  1063: "lt",
                  9226: "es-CO",
                  11265: "ar-JO",
                  11273: "en-TT",
                  2094: "dsb",
                  5130: "es-CR",
                  13313: "ar-KW",
                  2057: "en-GB",
                  1134: "lb",
                  7178: "es-DO",
                  12289: "ar-LB",
                  1033: "en",
                  1071: "mk",
                  12298: "es-EC",
                  4097: "ar-LY",
                  12297: "en-ZW",
                  2110: "ms-BN",
                  17418: "es-SV",
                  6145: "ary",
                  1061: "et",
                  1086: "ms",
                  4106: "es-GT",
                  8193: "ar-OM",
                  1080: "fo",
                  1100: "ml",
                  18442: "es-HN",
                  16385: "ar-QA",
                  1124: "fil",
                  1082: "mt",
                  2058: "es-MX",
                  1025: "ar-SA",
                  1035: "fi",
                  1153: "mi",
                  19466: "es-NI",
                  10241: "ar-SY",
                  2060: "fr-BE",
                  1146: "arn",
                  6154: "es-PA",
                  7169: "aeb",
                  3084: "fr-CA",
                  1102: "mr",
                  15370: "es-PY",
                  14337: "ar-AE",
                  1036: "fr",
                  1148: "moh",
                  10250: "es-PE",
                  9217: "ar-YE",
                  5132: "fr-LU",
                  1104: "mn",
                  20490: "es-PR",
                  1067: "hy",
                  6156: "fr-MC",
                  2128: "mn-CN",
                  3082: "es",
                  1101: "as",
                  4108: "fr-CH",
                  1121: "ne",
                  1034: "es",
                  2092: "az-Cyrl",
                  1122: "fy",
                  1044: "nb",
                  21514: "es-US",
                  1068: "az",
                  1110: "gl",
                  2068: "nn",
                  14346: "es-UY",
                  1133: "ba",
                  1079: "ka",
                  1154: "oc",
                  8202: "es-VE",
                  1069: "eu",
                  3079: "de-AT",
                  1096: "or",
                  2077: "sv-FI",
                  1059: "be",
                  1031: "de",
                  1123: "ps",
                  1053: "sv",
                  2117: "bn",
                  5127: "de-LI",
                  1045: "pl",
                  1114: "syr",
                  1093: "bn-IN",
                  4103: "de-LU",
                  1046: "pt",
                  1064: "tg",
                  8218: "bs-Cyrl",
                  2055: "de-CH",
                  2070: "pt-PT",
                  2143: "tzm",
                  5146: "bs",
                  1032: "el",
                  1094: "pa",
                  1097: "ta",
                  1150: "br",
                  1135: "kl",
                  1131: "qu-BO",
                  1092: "tt",
                  1026: "bg",
                  1095: "gu",
                  2155: "qu-EC",
                  1098: "te",
                  1027: "ca",
                  1128: "ha",
                  3179: "qu",
                  1054: "th",
                  3076: "zh-HK",
                  1037: "he",
                  1048: "ro",
                  1105: "bo",
                  5124: "zh-MO",
                  1081: "hi",
                  1047: "rm",
                  1055: "tr",
                  2052: "zh",
                  1038: "hu",
                  1049: "ru",
                  1090: "tk",
                  4100: "zh-SG",
                  1039: "is",
                  9275: "smn",
                  1152: "ug",
                  1028: "zh-TW",
                  1136: "ig",
                  4155: "smj-NO",
                  1058: "uk",
                  1155: "co",
                  1057: "id",
                  5179: "smj",
                  1070: "hsb",
                  1050: "hr",
                  1117: "iu",
                  3131: "se-FI",
                  1056: "ur",
                  4122: "hr-BA",
                  2141: "iu-Latn",
                  1083: "se",
                  2115: "uz-Cyrl",
                  1029: "cs",
                  2108: "ga",
                  2107: "se-SE",
                  1091: "uz",
                  1030: "da",
                  1076: "xh",
                  8251: "sms",
                  1066: "vi",
                  1164: "prs",
                  1077: "zu",
                  6203: "sma-NO",
                  1106: "cy",
                  1125: "dv",
                  1040: "it",
                  7227: "sms",
                  1160: "wo",
                  2067: "nl-BE",
                  2064: "it-CH",
                  1103: "sa",
                  1157: "sah",
                  1043: "nl",
                  1041: "ja",
                  7194: "sr-Cyrl-BA",
                  1144: "ii",
                  3081: "en-AU",
                  1099: "kn",
                  3098: "sr",
                  1130: "yo",
                  10249: "en-BZ",
                  1087: "kk",
                  6170: "sr-Latn-BA",
                  4105: "en-CA",
                  1107: "km",
                  2074: "sr-Latn",
                  9225: "en-029",
                  1158: "quc",
                  1132: "nso"
                }
              ], V = new e.Struct({
                platformID: e.uint16,
                encodingID: e.uint16,
                languageID: e.uint16,
                nameID: e.uint16,
                length: e.uint16,
                string: new e.Pointer(e.uint16, new e.String("length", function(ft) {
                  return Tt(ft.platformID, ft.encodingID, ft.languageID);
                }), {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.parent.stringOffset;
                  },
                  allowNull: !1
                })
              }), it = new e.Struct({
                length: e.uint16,
                tag: new e.Pointer(e.uint16, new e.String("length", "utf16be"), {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.stringOffset;
                  }
                })
              }), tt = new e.VersionedStruct(e.uint16, {
                0: {
                  count: e.uint16,
                  stringOffset: e.uint16,
                  records: new e.Array(V, "count")
                },
                1: {
                  count: e.uint16,
                  stringOffset: e.uint16,
                  records: new e.Array(V, "count"),
                  langTagCount: e.uint16,
                  langTags: new e.Array(it, "langTagCount")
                }
              }), _ = [
                "copyright",
                "fontFamily",
                "fontSubfamily",
                "uniqueSubfamily",
                "fullName",
                "version",
                "postscriptName",
                // Note: A font may have only one PostScript name and that name must be ASCII.
                "trademark",
                "manufacturer",
                "designer",
                "description",
                "vendorURL",
                "designerURL",
                "license",
                "licenseURL",
                null,
                // reserved
                "preferredFamily",
                "preferredSubfamily",
                "compatibleFull",
                "sampleText",
                "postscriptCIDFontName",
                "wwsFamilyName",
                "wwsSubfamilyName"
              ];
              tt.process = function(ft) {
                for (var X = {}, et = a(this.records), O; !(O = et()).done; ) {
                  var U = O.value, H = k[U.platformID][U.languageID];
                  H == null && this.langTags != null && U.languageID >= 32768 && (H = this.langTags[U.languageID - 32768].tag), H == null && (H = U.platformID + "-" + U.languageID);
                  var lt = U.nameID >= 256 ? "fontFeatures" : _[U.nameID] || U.nameID;
                  X[lt] == null && (X[lt] = {});
                  var vt = X[lt];
                  U.nameID >= 256 && (vt = vt[U.nameID] || (vt[U.nameID] = {})), (typeof U.string == "string" || typeof vt[H] != "string") && (vt[H] = U.string);
                }
                this.records = X;
              }, tt.preEncode = function() {
                if (!Array.isArray(this.records)) {
                  this.version = 0;
                  var ft = [];
                  for (var X in this.records) {
                    var et = this.records[X];
                    X !== "fontFeatures" && (ft.push({
                      platformID: 3,
                      encodingID: 1,
                      languageID: 1033,
                      nameID: _.indexOf(X),
                      length: o.byteLength(et.en, "utf16le"),
                      string: et.en
                    }), X === "postscriptName" && ft.push({
                      platformID: 1,
                      encodingID: 0,
                      languageID: 0,
                      nameID: _.indexOf(X),
                      length: et.en.length,
                      string: et.en
                    }));
                  }
                  this.records = ft, this.count = ft.length, this.stringOffset = tt.size(this, null, !1);
                }
              };
              var At = new e.VersionedStruct(e.uint16, {
                header: {
                  xAvgCharWidth: e.int16,
                  // average weighted advance width of lower case letters and space
                  usWeightClass: e.uint16,
                  // visual weight of stroke in glyphs
                  usWidthClass: e.uint16,
                  // relative change from the normal aspect ratio (width to height ratio)
                  fsType: new e.Bitfield(e.uint16, [
                    // Indicates font embedding licensing rights
                    null,
                    "noEmbedding",
                    "viewOnly",
                    "editable",
                    null,
                    null,
                    null,
                    null,
                    "noSubsetting",
                    "bitmapOnly"
                  ]),
                  ySubscriptXSize: e.int16,
                  // recommended horizontal size in pixels for subscripts
                  ySubscriptYSize: e.int16,
                  // recommended vertical size in pixels for subscripts
                  ySubscriptXOffset: e.int16,
                  // recommended horizontal offset for subscripts
                  ySubscriptYOffset: e.int16,
                  // recommended vertical offset form the baseline for subscripts
                  ySuperscriptXSize: e.int16,
                  // recommended horizontal size in pixels for superscripts
                  ySuperscriptYSize: e.int16,
                  // recommended vertical size in pixels for superscripts
                  ySuperscriptXOffset: e.int16,
                  // recommended horizontal offset for superscripts
                  ySuperscriptYOffset: e.int16,
                  // recommended vertical offset from the baseline for superscripts
                  yStrikeoutSize: e.int16,
                  // width of the strikeout stroke
                  yStrikeoutPosition: e.int16,
                  // position of the strikeout stroke relative to the baseline
                  sFamilyClass: e.int16,
                  // classification of font-family design
                  panose: new e.Array(e.uint8, 10),
                  // describe the visual characteristics of a given typeface
                  ulCharRange: new e.Array(e.uint32, 4),
                  vendorID: new e.String(4),
                  // four character identifier for the font vendor
                  fsSelection: new e.Bitfield(e.uint16, [
                    // bit field containing information about the font
                    "italic",
                    "underscore",
                    "negative",
                    "outlined",
                    "strikeout",
                    "bold",
                    "regular",
                    "useTypoMetrics",
                    "wws",
                    "oblique"
                  ]),
                  usFirstCharIndex: e.uint16,
                  // The minimum Unicode index in this font
                  usLastCharIndex: e.uint16
                  // The maximum Unicode index in this font
                },
                // The Apple version of this table ends here, but the Microsoft one continues on...
                0: {},
                1: {
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2)
                },
                2: {
                  // these should be common with version 1 somehow
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2),
                  xHeight: e.int16,
                  capHeight: e.int16,
                  defaultChar: e.uint16,
                  breakChar: e.uint16,
                  maxContent: e.uint16
                },
                5: {
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2),
                  xHeight: e.int16,
                  capHeight: e.int16,
                  defaultChar: e.uint16,
                  breakChar: e.uint16,
                  maxContent: e.uint16,
                  usLowerOpticalPointSize: e.uint16,
                  usUpperOpticalPointSize: e.uint16
                }
              }), Lt = At.versions;
              Lt[3] = Lt[4] = Lt[2];
              var Yt = new e.VersionedStruct(e.fixed32, {
                header: {
                  // these fields exist at the top of all versions
                  italicAngle: e.fixed32,
                  // Italic angle in counter-clockwise degrees from the vertical.
                  underlinePosition: e.int16,
                  // Suggested distance of the top of the underline from the baseline
                  underlineThickness: e.int16,
                  // Suggested values for the underline thickness
                  isFixedPitch: e.uint32,
                  // Whether the font is monospaced
                  minMemType42: e.uint32,
                  // Minimum memory usage when a TrueType font is downloaded as a Type 42 font
                  maxMemType42: e.uint32,
                  // Maximum memory usage when a TrueType font is downloaded as a Type 42 font
                  minMemType1: e.uint32,
                  // Minimum memory usage when a TrueType font is downloaded as a Type 1 font
                  maxMemType1: e.uint32
                  // Maximum memory usage when a TrueType font is downloaded as a Type 1 font
                },
                1: {},
                // version 1 has no additional fields
                2: {
                  numberOfGlyphs: e.uint16,
                  glyphNameIndex: new e.Array(e.uint16, "numberOfGlyphs"),
                  names: new e.Array(new e.String(e.uint8))
                },
                2.5: {
                  numberOfGlyphs: e.uint16,
                  offsets: new e.Array(e.uint8, "numberOfGlyphs")
                },
                3: {},
                // version 3 has no additional fields
                4: {
                  map: new e.Array(e.uint32, function(ft) {
                    return ft.parent.maxp.numGlyphs;
                  })
                }
              }), Gt = new e.Struct({
                controlValues: new e.Array(e.int16)
              }), Dt = new e.Struct({
                instructions: new e.Array(e.uint8)
              }), ae = new e.VersionedStruct("head.indexToLocFormat", {
                0: {
                  offsets: new e.Array(e.uint16)
                },
                1: {
                  offsets: new e.Array(e.uint32)
                }
              });
              ae.process = function() {
                if (this.version === 0)
                  for (var ft = 0; ft < this.offsets.length; ft++)
                    this.offsets[ft] <<= 1;
              }, ae.preEncode = function() {
                if (this.version === 0)
                  for (var ft = 0; ft < this.offsets.length; ft++)
                    this.offsets[ft] >>>= 1;
              };
              var Ae = new e.Struct({
                controlValueProgram: new e.Array(e.uint8)
              }), xe = new e.Array(new e.Buffer()), ce = /* @__PURE__ */ function() {
                function ft(et) {
                  this.type = et;
                }
                var X = ft.prototype;
                return X.getCFFVersion = function(O) {
                  for (; O && !O.hdrSize; )
                    O = O.parent;
                  return O ? O.version : -1;
                }, X.decode = function(O, U) {
                  var H = this.getCFFVersion(U), lt = H >= 2 ? O.readUInt32BE() : O.readUInt16BE();
                  if (lt === 0)
                    return [];
                  var vt = O.readUInt8(), dt;
                  if (vt === 1)
                    dt = e.uint8;
                  else if (vt === 2)
                    dt = e.uint16;
                  else if (vt === 3)
                    dt = e.uint24;
                  else if (vt === 4)
                    dt = e.uint32;
                  else
                    throw new Error("Bad offset size in CFFIndex: ".concat(vt, " ").concat(O.pos));
                  for (var ht = [], Pt = O.pos + (lt + 1) * vt - 1, Vt = dt.decode(O), se = 0; se < lt; se++) {
                    var $t = dt.decode(O);
                    if (this.type != null) {
                      var ue = O.pos;
                      O.pos = Pt + Vt, U.length = $t - Vt, ht.push(this.type.decode(O, U)), O.pos = ue;
                    } else
                      ht.push({
                        offset: Pt + Vt,
                        length: $t - Vt
                      });
                    Vt = $t;
                  }
                  return O.pos = Pt + Vt, ht;
                }, X.size = function(O, U) {
                  var H = 2;
                  if (O.length === 0)
                    return H;
                  for (var lt = this.type || new e.Buffer(), vt = 1, dt = 0; dt < O.length; dt++) {
                    var ht = O[dt];
                    vt += lt.size(ht, U);
                  }
                  var Pt;
                  if (vt <= 255)
                    Pt = e.uint8;
                  else if (vt <= 65535)
                    Pt = e.uint16;
                  else if (vt <= 16777215)
                    Pt = e.uint24;
                  else if (vt <= 4294967295)
                    Pt = e.uint32;
                  else
                    throw new Error("Bad offset in CFFIndex");
                  return H += 1 + Pt.size() * (O.length + 1), H += vt - 1, H;
                }, X.encode = function(O, U, H) {
                  if (O.writeUInt16BE(U.length), U.length !== 0) {
                    for (var lt = this.type || new e.Buffer(), vt = [], dt = 1, ht = a(U), Pt; !(Pt = ht()).done; ) {
                      var Vt = Pt.value, se = lt.size(Vt, H);
                      vt.push(se), dt += se;
                    }
                    var $t;
                    if (dt <= 255)
                      $t = e.uint8;
                    else if (dt <= 65535)
                      $t = e.uint16;
                    else if (dt <= 16777215)
                      $t = e.uint24;
                    else if (dt <= 4294967295)
                      $t = e.uint32;
                    else
                      throw new Error("Bad offset in CFFIndex");
                    O.writeUInt8($t.size()), dt = 1, $t.encode(O, dt);
                    for (var ue = 0, pe = vt; ue < pe.length; ue++) {
                      var Te = pe[ue];
                      dt += Te, $t.encode(O, dt);
                    }
                    for (var He = a(U), _e; !(_e = He()).done; ) {
                      var Xe = _e.value;
                      lt.encode(O, Xe, H);
                    }
                  }
                }, ft;
              }(), we = 15, zt = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"], Qt = {
                ".": 10,
                E: 11,
                "E-": 12,
                "-": 14
              }, le = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(et, O) {
                  if (32 <= O && O <= 246)
                    return O - 139;
                  if (247 <= O && O <= 250)
                    return (O - 247) * 256 + et.readUInt8() + 108;
                  if (251 <= O && O <= 254)
                    return -(O - 251) * 256 - et.readUInt8() - 108;
                  if (O === 28)
                    return et.readInt16BE();
                  if (O === 29)
                    return et.readInt32BE();
                  if (O === 30) {
                    for (var U = ""; ; ) {
                      var H = et.readUInt8(), lt = H >> 4;
                      if (lt === we)
                        break;
                      U += zt[lt];
                      var vt = H & 15;
                      if (vt === we)
                        break;
                      U += zt[vt];
                    }
                    return parseFloat(U);
                  }
                  return null;
                }, ft.size = function(et) {
                  if (et.forceLarge && (et = 32768), (et | 0) !== et) {
                    var O = "" + et;
                    return 1 + Math.ceil((O.length + 1) / 2);
                  } else
                    return -107 <= et && et <= 107 ? 1 : 108 <= et && et <= 1131 || -1131 <= et && et <= -108 ? 2 : -32768 <= et && et <= 32767 ? 3 : 5;
                }, ft.encode = function(et, O) {
                  var U = Number(O);
                  if (O.forceLarge)
                    return et.writeUInt8(29), et.writeInt32BE(U);
                  if ((U | 0) !== U) {
                    et.writeUInt8(30);
                    for (var H = "" + U, lt = 0; lt < H.length; lt += 2) {
                      var vt = H[lt], dt = Qt[vt] || +vt;
                      if (lt === H.length - 1)
                        var ht = we;
                      else
                        var Pt = H[lt + 1], ht = Qt[Pt] || +Pt;
                      et.writeUInt8(dt << 4 | ht & 15);
                    }
                    if (ht !== we)
                      return et.writeUInt8(we << 4);
                  } else
                    return -107 <= U && U <= 107 ? et.writeUInt8(U + 139) : 108 <= U && U <= 1131 ? (U -= 108, et.writeUInt8((U >> 8) + 247), et.writeUInt8(U & 255)) : -1131 <= U && U <= -108 ? (U = -U - 108, et.writeUInt8((U >> 8) + 251), et.writeUInt8(U & 255)) : -32768 <= U && U <= 32767 ? (et.writeUInt8(28), et.writeInt16BE(U)) : (et.writeUInt8(29), et.writeInt32BE(U));
                }, ft;
              }(), de = /* @__PURE__ */ function() {
                function ft(et) {
                  et === void 0 && (et = []), this.ops = et, this.fields = {};
                  for (var O = a(et), U; !(U = O()).done; ) {
                    var H = U.value, lt = Array.isArray(H[0]) ? H[0][0] << 8 | H[0][1] : H[0];
                    this.fields[lt] = H;
                  }
                }
                var X = ft.prototype;
                return X.decodeOperands = function(O, U, H, lt) {
                  var vt = this;
                  if (Array.isArray(O))
                    return lt.map(function(dt, ht) {
                      return vt.decodeOperands(O[ht], U, H, [dt]);
                    });
                  if (O.decode != null)
                    return O.decode(U, H, lt);
                  switch (O) {
                    case "number":
                    case "offset":
                    case "sid":
                      return lt[0];
                    case "boolean":
                      return !!lt[0];
                    default:
                      return lt;
                  }
                }, X.encodeOperands = function(O, U, H, lt) {
                  var vt = this;
                  return Array.isArray(O) ? lt.map(function(dt, ht) {
                    return vt.encodeOperands(O[ht], U, H, dt)[0];
                  }) : O.encode != null ? O.encode(U, lt, H) : typeof lt == "number" ? [lt] : typeof lt == "boolean" ? [+lt] : Array.isArray(lt) ? lt : [lt];
                }, X.decode = function(O, U) {
                  var H = O.pos + U.length, lt = {}, vt = [];
                  Object.defineProperties(lt, {
                    parent: {
                      value: U
                    },
                    _startOffset: {
                      value: O.pos
                    }
                  });
                  for (var dt in this.fields) {
                    var ht = this.fields[dt];
                    lt[ht[1]] = ht[3];
                  }
                  for (; O.pos < H; ) {
                    var Pt = O.readUInt8();
                    if (Pt < 28) {
                      Pt === 12 && (Pt = Pt << 8 | O.readUInt8());
                      var Vt = this.fields[Pt];
                      if (!Vt)
                        throw new Error("Unknown operator ".concat(Pt));
                      var se = this.decodeOperands(Vt[2], O, lt, vt);
                      se != null && (se instanceof m.PropertyDescriptor ? Object.defineProperty(lt, Vt[1], se) : lt[Vt[1]] = se), vt = [];
                    } else
                      vt.push(le.decode(O, Pt));
                  }
                  return lt;
                }, X.size = function(O, U, H) {
                  H === void 0 && (H = !0);
                  var lt = {
                    parent: U,
                    val: O,
                    pointerSize: 0,
                    startOffset: U.startOffset || 0
                  }, vt = 0;
                  for (var dt in this.fields) {
                    var ht = this.fields[dt], Pt = O[ht[1]];
                    if (!(Pt == null || w(Pt, ht[3]))) {
                      for (var Vt = this.encodeOperands(ht[2], null, lt, Pt), se = a(Vt), $t; !($t = se()).done; ) {
                        var ue = $t.value;
                        vt += le.size(ue);
                      }
                      var pe = Array.isArray(ht[0]) ? ht[0] : [ht[0]];
                      vt += pe.length;
                    }
                  }
                  return H && (vt += lt.pointerSize), vt;
                }, X.encode = function(O, U, H) {
                  var lt = {
                    pointers: [],
                    startOffset: O.pos,
                    parent: H,
                    val: U,
                    pointerSize: 0
                  };
                  lt.pointerOffset = O.pos + this.size(U, lt, !1);
                  for (var vt = a(this.ops), dt; !(dt = vt()).done; ) {
                    var ht = dt.value, Pt = U[ht[1]];
                    if (!(Pt == null || w(Pt, ht[3]))) {
                      for (var Vt = this.encodeOperands(ht[2], O, lt, Pt), se = a(Vt), $t; !($t = se()).done; ) {
                        var ue = $t.value;
                        le.encode(O, ue);
                      }
                      for (var pe = Array.isArray(ht[0]) ? ht[0] : [ht[0]], Te = a(pe), He; !(He = Te()).done; ) {
                        var _e = He.value;
                        O.writeUInt8(_e);
                      }
                    }
                  }
                  for (var Xe = 0; Xe < lt.pointers.length; ) {
                    var hr = lt.pointers[Xe++];
                    hr.type.encode(O, hr.val, hr.parent);
                  }
                }, ft;
              }(), be = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X(O, U) {
                  return U === void 0 && (U = {}), U.type == null && (U.type = "global"), ft.call(this, null, O, U) || this;
                }
                var et = X.prototype;
                return et.decode = function(U, H, lt) {
                  return this.offsetType = {
                    decode: function() {
                      return lt[0];
                    }
                  }, ft.prototype.decode.call(this, U, H, lt);
                }, et.encode = function(U, H, lt) {
                  if (!U)
                    return this.offsetType = {
                      size: function() {
                        return 0;
                      }
                    }, this.size(H, lt), [new Pe(0)];
                  var vt = null;
                  return this.offsetType = {
                    encode: function(ht, Pt) {
                      return vt = Pt;
                    }
                  }, ft.prototype.encode.call(this, U, H, lt), [new Pe(vt)];
                }, X;
              }(e.Pointer), Pe = /* @__PURE__ */ function() {
                function ft(et) {
                  this.val = et, this.forceLarge = !0;
                }
                var X = ft.prototype;
                return X.valueOf = function() {
                  return this.val;
                }, ft;
              }(), Fe = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(et, O, U) {
                  for (var H = U.pop(); U.length > H; )
                    U.pop();
                }, ft;
              }(), It = new de([
                // key       name                    type                                          default
                [6, "BlueValues", "delta", null],
                [7, "OtherBlues", "delta", null],
                [8, "FamilyBlues", "delta", null],
                [9, "FamilyOtherBlues", "delta", null],
                [[12, 9], "BlueScale", "number", 0.039625],
                [[12, 10], "BlueShift", "number", 7],
                [[12, 11], "BlueFuzz", "number", 1],
                [10, "StdHW", "number", null],
                [11, "StdVW", "number", null],
                [[12, 12], "StemSnapH", "delta", null],
                [[12, 13], "StemSnapV", "delta", null],
                [[12, 14], "ForceBold", "boolean", !1],
                [[12, 17], "LanguageGroup", "number", 0],
                [[12, 18], "ExpansionFactor", "number", 0.06],
                [[12, 19], "initialRandomSeed", "number", 0],
                [20, "defaultWidthX", "number", 0],
                [21, "nominalWidthX", "number", 0],
                [22, "vsindex", "number", 0],
                [23, "blend", Fe, null],
                [19, "Subrs", new be(new ce(), {
                  type: "local"
                }), null]
              ]), fe = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], st = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], Y = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], j = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron"], bt = [".notdef", "space", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], at = [".notdef", "space", "dollaroldstyle", "dollarsuperior", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "hyphensuperior", "colonmonetary", "onefitted", "rupiah", "centoldstyle", "figuredash", "hypheninferior", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior"], Wt = new e.Struct({
                reserved: new e.Reserved(e.uint16),
                reqFeatureIndex: e.uint16,
                featureCount: e.uint16,
                featureIndexes: new e.Array(e.uint16, "featureCount")
              }), _t = new e.Struct({
                tag: new e.String(4),
                langSys: new e.Pointer(e.uint16, Wt, {
                  type: "parent"
                })
              }), $ = new e.Struct({
                defaultLangSys: new e.Pointer(e.uint16, Wt),
                count: e.uint16,
                langSysRecords: new e.Array(_t, "count")
              }), Jt = new e.Struct({
                tag: new e.String(4),
                script: new e.Pointer(e.uint16, $, {
                  type: "parent"
                })
              }), te = new e.Array(Jt, e.uint16), Ct = new e.Struct({
                featureParams: e.uint16,
                // pointer
                lookupCount: e.uint16,
                lookupListIndexes: new e.Array(e.uint16, "lookupCount")
              }), Ht = new e.Struct({
                tag: new e.String(4),
                feature: new e.Pointer(e.uint16, Ct, {
                  type: "parent"
                })
              }), oe = new e.Array(Ht, e.uint16), Le = new e.Struct({
                markAttachmentType: e.uint8,
                flags: new e.Bitfield(e.uint8, ["rightToLeft", "ignoreBaseGlyphs", "ignoreLigatures", "ignoreMarks", "useMarkFilteringSet"])
              });
              function De(ft) {
                var X = new e.Struct({
                  lookupType: e.uint16,
                  flags: Le,
                  subTableCount: e.uint16,
                  subTables: new e.Array(new e.Pointer(e.uint16, ft), "subTableCount"),
                  markFilteringSet: new e.Optional(e.uint16, function(et) {
                    return et.flags.flags.useMarkFilteringSet;
                  })
                });
                return new e.LazyArray(new e.Pointer(e.uint16, X), e.uint16);
              }
              var ke = new e.Struct({
                start: e.uint16,
                end: e.uint16,
                startCoverageIndex: e.uint16
              }), Ne = new e.VersionedStruct(e.uint16, {
                1: {
                  glyphCount: e.uint16,
                  glyphs: new e.Array(e.uint16, "glyphCount")
                },
                2: {
                  rangeCount: e.uint16,
                  rangeRecords: new e.Array(ke, "rangeCount")
                }
              }), rn = new e.Struct({
                start: e.uint16,
                end: e.uint16,
                class: e.uint16
              }), tr = new e.VersionedStruct(e.uint16, {
                1: {
                  // Class array
                  startGlyph: e.uint16,
                  glyphCount: e.uint16,
                  classValueArray: new e.Array(e.uint16, "glyphCount")
                },
                2: {
                  // Class ranges
                  classRangeCount: e.uint16,
                  classRangeRecord: new e.Array(rn, "classRangeCount")
                }
              }), Ze = new e.Struct({
                a: e.uint16,
                // startSize for hinting Device, outerIndex for VariationIndex
                b: e.uint16,
                // endSize for Device, innerIndex for VariationIndex
                deltaFormat: e.uint16
              }), br = new e.Struct({
                sequenceIndex: e.uint16,
                lookupListIndex: e.uint16
              }), Ir = new e.Struct({
                glyphCount: e.uint16,
                lookupCount: e.uint16,
                input: new e.Array(e.uint16, function(ft) {
                  return ft.glyphCount - 1;
                }),
                lookupRecords: new e.Array(br, "lookupCount")
              }), Zr = new e.Array(new e.Pointer(e.uint16, Ir), e.uint16), Cn = new e.Struct({
                glyphCount: e.uint16,
                lookupCount: e.uint16,
                classes: new e.Array(e.uint16, function(ft) {
                  return ft.glyphCount - 1;
                }),
                lookupRecords: new e.Array(br, "lookupCount")
              }), Mn = new e.Array(new e.Pointer(e.uint16, Cn), e.uint16), rr = new e.VersionedStruct(e.uint16, {
                1: {
                  // Simple context
                  coverage: new e.Pointer(e.uint16, Ne),
                  ruleSetCount: e.uint16,
                  ruleSets: new e.Array(new e.Pointer(e.uint16, Zr), "ruleSetCount")
                },
                2: {
                  // Class-based context
                  coverage: new e.Pointer(e.uint16, Ne),
                  classDef: new e.Pointer(e.uint16, tr),
                  classSetCnt: e.uint16,
                  classSet: new e.Array(new e.Pointer(e.uint16, Mn), "classSetCnt")
                },
                3: {
                  glyphCount: e.uint16,
                  lookupCount: e.uint16,
                  coverages: new e.Array(new e.Pointer(e.uint16, Ne), "glyphCount"),
                  lookupRecords: new e.Array(br, "lookupCount")
                }
              }), nn = new e.Struct({
                backtrackGlyphCount: e.uint16,
                backtrack: new e.Array(e.uint16, "backtrackGlyphCount"),
                inputGlyphCount: e.uint16,
                input: new e.Array(e.uint16, function(ft) {
                  return ft.inputGlyphCount - 1;
                }),
                lookaheadGlyphCount: e.uint16,
                lookahead: new e.Array(e.uint16, "lookaheadGlyphCount"),
                lookupCount: e.uint16,
                lookupRecords: new e.Array(br, "lookupCount")
              }), Mr = new e.Array(new e.Pointer(e.uint16, nn), e.uint16), $r = new e.VersionedStruct(e.uint16, {
                1: {
                  // Simple context glyph substitution
                  coverage: new e.Pointer(e.uint16, Ne),
                  chainCount: e.uint16,
                  chainRuleSets: new e.Array(new e.Pointer(e.uint16, Mr), "chainCount")
                },
                2: {
                  // Class-based chaining context
                  coverage: new e.Pointer(e.uint16, Ne),
                  backtrackClassDef: new e.Pointer(e.uint16, tr),
                  inputClassDef: new e.Pointer(e.uint16, tr),
                  lookaheadClassDef: new e.Pointer(e.uint16, tr),
                  chainCount: e.uint16,
                  chainClassSet: new e.Array(new e.Pointer(e.uint16, Mr), "chainCount")
                },
                3: {
                  // Coverage-based chaining context
                  backtrackGlyphCount: e.uint16,
                  backtrackCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "backtrackGlyphCount"),
                  inputGlyphCount: e.uint16,
                  inputCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "inputGlyphCount"),
                  lookaheadGlyphCount: e.uint16,
                  lookaheadCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "lookaheadGlyphCount"),
                  lookupCount: e.uint16,
                  lookupRecords: new e.Array(br, "lookupCount")
                }
              }), Wr = new e.Fixed(16, "BE", 14), Hn = new e.Struct({
                startCoord: Wr,
                peakCoord: Wr,
                endCoord: Wr
              }), jn = new e.Struct({
                axisCount: e.uint16,
                regionCount: e.uint16,
                variationRegions: new e.Array(new e.Array(Hn, "axisCount"), "regionCount")
              }), Ue = new e.Struct({
                shortDeltas: new e.Array(e.int16, function(ft) {
                  return ft.parent.shortDeltaCount;
                }),
                regionDeltas: new e.Array(e.int8, function(ft) {
                  return ft.parent.regionIndexCount - ft.parent.shortDeltaCount;
                }),
                deltas: function(X) {
                  return X.shortDeltas.concat(X.regionDeltas);
                }
              }), ze = new e.Struct({
                itemCount: e.uint16,
                shortDeltaCount: e.uint16,
                regionIndexCount: e.uint16,
                regionIndexes: new e.Array(e.uint16, "regionIndexCount"),
                deltaSets: new e.Array(Ue, "itemCount")
              }), Qe = new e.Struct({
                format: e.uint16,
                variationRegionList: new e.Pointer(e.uint32, jn),
                variationDataCount: e.uint16,
                itemVariationData: new e.Array(new e.Pointer(e.uint32, ze), "variationDataCount")
              }), ur = new e.VersionedStruct(e.uint16, {
                1: (r = {
                  axisIndex: e.uint16
                }, r.axisIndex = e.uint16, r.filterRangeMinValue = Wr, r.filterRangeMaxValue = Wr, r)
              }), xn = new e.Struct({
                conditionCount: e.uint16,
                conditionTable: new e.Array(new e.Pointer(e.uint32, ur), "conditionCount")
              }), wn = new e.Struct({
                featureIndex: e.uint16,
                alternateFeatureTable: new e.Pointer(e.uint32, Ct, {
                  type: "parent"
                })
              }), Yn = new e.Struct({
                version: e.fixed32,
                substitutionCount: e.uint16,
                substitutions: new e.Array(wn, "substitutionCount")
              }), va = new e.Struct({
                conditionSet: new e.Pointer(e.uint32, xn, {
                  type: "parent"
                }),
                featureTableSubstitution: new e.Pointer(e.uint32, Yn, {
                  type: "parent"
                })
              }), Kn = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                featureVariationRecordCount: e.uint32,
                featureVariationRecords: new e.Array(va, "featureVariationRecordCount")
              }), Jn = /* @__PURE__ */ function() {
                function ft(et, O) {
                  this.predefinedOps = et, this.type = O;
                }
                var X = ft.prototype;
                return X.decode = function(O, U, H) {
                  return this.predefinedOps[H[0]] ? this.predefinedOps[H[0]] : this.type.decode(O, U, H);
                }, X.size = function(O, U) {
                  return this.type.size(O, U);
                }, X.encode = function(O, U, H) {
                  var lt = this.predefinedOps.indexOf(U);
                  return lt !== -1 ? lt : this.type.encode(O, U, H);
                }, ft;
              }(), Kt = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.call(this, "UInt8") || this;
                }
                var et = X.prototype;
                return et.decode = function(U) {
                  return e.uint8.decode(U) & 127;
                }, X;
              }(e.Number), Ot = new e.Struct({
                first: e.uint16,
                nLeft: e.uint8
              }), re = new e.Struct({
                first: e.uint16,
                nLeft: e.uint16
              }), Bt = new e.VersionedStruct(new Kt(), {
                0: {
                  nCodes: e.uint8,
                  codes: new e.Array(e.uint8, "nCodes")
                },
                1: {
                  nRanges: e.uint8,
                  ranges: new e.Array(Ot, "nRanges")
                }
                // TODO: supplement?
              }), Nt = new Jn([st, Y], new be(Bt, {
                lazy: !0
              })), Mt = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et.decode = function(U, H) {
                  for (var lt = m.resolveLength(this.length, U, H), vt = 0, dt = []; vt < lt; ) {
                    var ht = this.type.decode(U, H);
                    ht.offset = vt, vt += ht.nLeft + 1, dt.push(ht);
                  }
                  return dt;
                }, X;
              }(e.Array), jt = new e.VersionedStruct(e.uint8, {
                0: {
                  glyphs: new e.Array(e.uint16, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                },
                1: {
                  ranges: new Mt(Ot, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                },
                2: {
                  ranges: new Mt(re, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                }
              }), ee = new Jn([j, bt, at], new be(jt, {
                lazy: !0
              })), kt = new e.Struct({
                first: e.uint16,
                fd: e.uint8
              }), ie = new e.Struct({
                first: e.uint32,
                fd: e.uint16
              }), Zt = new e.VersionedStruct(e.uint8, {
                0: {
                  fds: new e.Array(e.uint8, function(ft) {
                    return ft.parent.CharStrings.length;
                  })
                },
                3: {
                  nRanges: e.uint16,
                  ranges: new e.Array(kt, "nRanges"),
                  sentinel: e.uint16
                },
                4: {
                  nRanges: e.uint32,
                  ranges: new e.Array(ie, "nRanges"),
                  sentinel: e.uint32
                }
              }), me = new be(It), Oe = /* @__PURE__ */ function() {
                function ft() {
                }
                var X = ft.prototype;
                return X.decode = function(O, U, H) {
                  return U.length = H[0], me.decode(O, U, [H[1]]);
                }, X.size = function(O, U) {
                  return [It.size(O, U, !1), me.size(O, U)[0]];
                }, X.encode = function(O, U, H) {
                  return [It.size(U, H, !1), me.encode(O, U, H)[0]];
                }, ft;
              }(), Be = new de([
                // key       name                   type(s)                                 default
                [18, "Private", new Oe(), null],
                [[12, 38], "FontName", "sid", null],
                [[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]],
                [[12, 5], "PaintType", "number", 0]
              ]), je = new de([
                // key       name                   type(s)                                 default
                [[12, 30], "ROS", ["sid", "sid", "number"], null],
                [0, "version", "sid", null],
                [1, "Notice", "sid", null],
                [[12, 0], "Copyright", "sid", null],
                [2, "FullName", "sid", null],
                [3, "FamilyName", "sid", null],
                [4, "Weight", "sid", null],
                [[12, 1], "isFixedPitch", "boolean", !1],
                [[12, 2], "ItalicAngle", "number", 0],
                [[12, 3], "UnderlinePosition", "number", -100],
                [[12, 4], "UnderlineThickness", "number", 50],
                [[12, 5], "PaintType", "number", 0],
                [[12, 6], "CharstringType", "number", 2],
                [[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]],
                [13, "UniqueID", "number", null],
                [5, "FontBBox", "array", [0, 0, 0, 0]],
                [[12, 8], "StrokeWidth", "number", 0],
                [14, "XUID", "array", null],
                [15, "charset", ee, j],
                [16, "Encoding", Nt, st],
                [17, "CharStrings", new be(new ce()), null],
                [18, "Private", new Oe(), null],
                [[12, 20], "SyntheticBase", "number", null],
                [[12, 21], "PostScript", "sid", null],
                [[12, 22], "BaseFontName", "sid", null],
                [[12, 23], "BaseFontBlend", "delta", null],
                // CID font specific
                [[12, 31], "CIDFontVersion", "number", 0],
                [[12, 32], "CIDFontRevision", "number", 0],
                [[12, 33], "CIDFontType", "number", 0],
                [[12, 34], "CIDCount", "number", 8720],
                [[12, 35], "UIDBase", "number", null],
                [[12, 37], "FDSelect", new be(Zt), null],
                [[12, 36], "FDArray", new be(new ce(Be)), null],
                [[12, 38], "FontName", "sid", null]
              ]), Je = new e.Struct({
                length: e.uint16,
                itemVariationStore: Qe
              }), nr = new de([[[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]], [17, "CharStrings", new be(new ce()), null], [[12, 37], "FDSelect", new be(Zt), null], [[12, 36], "FDArray", new be(new ce(Be)), null], [24, "vstore", new be(Je), null], [25, "maxstack", "number", 193]]), ve = new e.VersionedStruct(e.fixed16, {
                1: {
                  hdrSize: e.uint8,
                  offSize: e.uint8,
                  nameIndex: new ce(new e.String("length")),
                  topDictIndex: new ce(je),
                  stringIndex: new ce(new e.String("length")),
                  globalSubrIndex: new ce()
                },
                2: {
                  hdrSize: e.uint8,
                  length: e.uint16,
                  topDict: nr,
                  globalSubrIndex: new ce()
                }
              }), Re = /* @__PURE__ */ function() {
                function ft(et) {
                  this.stream = et, this.decode();
                }
                ft.decode = function(O) {
                  return new ft(O);
                };
                var X = ft.prototype;
                return X.decode = function() {
                  this.stream.pos;
                  var O = ve.decode(this.stream);
                  for (var U in O) {
                    var H = O[U];
                    this[U] = H;
                  }
                  if (this.version < 2) {
                    if (this.topDictIndex.length !== 1)
                      throw new Error("Only a single font is allowed in CFF");
                    this.topDict = this.topDictIndex[0];
                  }
                  return this.isCIDFont = this.topDict.ROS != null, this;
                }, X.string = function(O) {
                  return this.version >= 2 ? null : O < fe.length ? fe[O] : this.stringIndex[O - fe.length];
                }, X.getCharString = function(O) {
                  return this.stream.pos = this.topDict.CharStrings[O].offset, this.stream.readBuffer(this.topDict.CharStrings[O].length);
                }, X.getGlyphName = function(O) {
                  if (this.version >= 2 || this.isCIDFont)
                    return null;
                  var U = this.topDict.charset;
                  if (Array.isArray(U))
                    return U[O];
                  if (O === 0)
                    return ".notdef";
                  switch (O -= 1, U.version) {
                    case 0:
                      return this.string(U.glyphs[O]);
                    case 1:
                    case 2:
                      for (var H = 0; H < U.ranges.length; H++) {
                        var lt = U.ranges[H];
                        if (lt.offset <= O && O <= lt.offset + lt.nLeft)
                          return this.string(lt.first + (O - lt.offset));
                      }
                      break;
                  }
                  return null;
                }, X.fdForGlyph = function(O) {
                  if (!this.topDict.FDSelect)
                    return null;
                  switch (this.topDict.FDSelect.version) {
                    case 0:
                      return this.topDict.FDSelect.fds[O];
                    case 3:
                    case 4:
                      for (var U = this.topDict.FDSelect.ranges, H = 0, lt = U.length - 1; H <= lt; ) {
                        var vt = H + lt >> 1;
                        if (O < U[vt].first)
                          lt = vt - 1;
                        else if (vt < lt && O >= U[vt + 1].first)
                          H = vt + 1;
                        else
                          return U[vt].fd;
                      }
                    default:
                      throw new Error("Unknown FDSelect version: ".concat(this.topDict.FDSelect.version));
                  }
                }, X.privateDictForGlyph = function(O) {
                  if (this.topDict.FDSelect) {
                    var U = this.fdForGlyph(O);
                    return this.topDict.FDArray[U] ? this.topDict.FDArray[U].Private : null;
                  }
                  return this.version < 2 ? this.topDict.Private : this.topDict.FDArray[0].Private;
                }, i(ft, [{
                  key: "postscriptName",
                  get: function() {
                    return this.version < 2 ? this.nameIndex[0] : null;
                  }
                }, {
                  key: "fullName",
                  get: function() {
                    return this.string(this.topDict.FullName);
                  }
                }, {
                  key: "familyName",
                  get: function() {
                    return this.string(this.topDict.FamilyName);
                  }
                }]), ft;
              }(), $e = new e.Struct({
                glyphIndex: e.uint16,
                vertOriginY: e.int16
              }), We = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                defaultVertOriginY: e.int16,
                numVertOriginYMetrics: e.uint16,
                metrics: new e.Array($e, "numVertOriginYMetrics")
              }), ar = new e.Struct({
                height: e.uint8,
                width: e.uint8,
                horiBearingX: e.int8,
                horiBearingY: e.int8,
                horiAdvance: e.uint8,
                vertBearingX: e.int8,
                vertBearingY: e.int8,
                vertAdvance: e.uint8
              }), Ye = new e.Struct({
                height: e.uint8,
                width: e.uint8,
                bearingX: e.int8,
                bearingY: e.int8,
                advance: e.uint8
              }), cr = new e.Struct({
                glyph: e.uint16,
                xOffset: e.int8,
                yOffset: e.int8
              }), ir = function() {
              }, Ar = function() {
              };
              new e.VersionedStruct("version", {
                1: {
                  metrics: Ye,
                  data: ir
                },
                2: {
                  metrics: Ye,
                  data: Ar
                },
                // format 3 is deprecated
                // format 4 is not supported by Microsoft
                5: {
                  data: Ar
                },
                6: {
                  metrics: ar,
                  data: ir
                },
                7: {
                  metrics: ar,
                  data: Ar
                },
                8: {
                  metrics: Ye,
                  pad: new e.Reserved(e.uint8),
                  numComponents: e.uint16,
                  components: new e.Array(cr, "numComponents")
                },
                9: {
                  metrics: ar,
                  pad: new e.Reserved(e.uint8),
                  numComponents: e.uint16,
                  components: new e.Array(cr, "numComponents")
                },
                17: {
                  metrics: Ye,
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                },
                18: {
                  metrics: ar,
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                },
                19: {
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                }
              });
              var kr = new e.Struct({
                ascender: e.int8,
                descender: e.int8,
                widthMax: e.uint8,
                caretSlopeNumerator: e.int8,
                caretSlopeDenominator: e.int8,
                caretOffset: e.int8,
                minOriginSB: e.int8,
                minAdvanceSB: e.int8,
                maxBeforeBL: e.int8,
                minAfterBL: e.int8,
                pad: new e.Reserved(e.int8, 2)
              }), Dr = new e.Struct({
                glyphCode: e.uint16,
                offset: e.uint16
              }), Tr = new e.VersionedStruct(e.uint16, {
                header: {
                  imageFormat: e.uint16,
                  imageDataOffset: e.uint32
                },
                1: {
                  offsetArray: new e.Array(e.uint32, function(ft) {
                    return ft.parent.lastGlyphIndex - ft.parent.firstGlyphIndex + 1;
                  })
                },
                2: {
                  imageSize: e.uint32,
                  bigMetrics: ar
                },
                3: {
                  offsetArray: new e.Array(e.uint16, function(ft) {
                    return ft.parent.lastGlyphIndex - ft.parent.firstGlyphIndex + 1;
                  })
                },
                4: {
                  numGlyphs: e.uint32,
                  glyphArray: new e.Array(Dr, function(ft) {
                    return ft.numGlyphs + 1;
                  })
                },
                5: {
                  imageSize: e.uint32,
                  bigMetrics: ar,
                  numGlyphs: e.uint32,
                  glyphCodeArray: new e.Array(e.uint16, "numGlyphs")
                }
              }), Or = new e.Struct({
                firstGlyphIndex: e.uint16,
                lastGlyphIndex: e.uint16,
                subtable: new e.Pointer(e.uint32, Tr)
              }), _r = new e.Struct({
                indexSubTableArray: new e.Pointer(e.uint32, new e.Array(Or, 1), {
                  type: "parent"
                }),
                indexTablesSize: e.uint32,
                numberOfIndexSubTables: e.uint32,
                colorRef: e.uint32,
                hori: kr,
                vert: kr,
                startGlyphIndex: e.uint16,
                endGlyphIndex: e.uint16,
                ppemX: e.uint8,
                ppemY: e.uint8,
                bitDepth: e.uint8,
                flags: new e.Bitfield(e.uint8, ["horizontal", "vertical"])
              }), En = new e.Struct({
                version: e.uint32,
                // 0x00020000
                numSizes: e.uint32,
                sizes: new e.Array(_r, "numSizes")
              }), an = new e.Struct({
                ppem: e.uint16,
                resolution: e.uint16,
                imageOffsets: new e.Array(new e.Pointer(e.uint32, "void"), function(ft) {
                  return ft.parent.parent.maxp.numGlyphs + 1;
                })
              }), bn = new e.Struct({
                version: e.uint16,
                flags: new e.Bitfield(e.uint16, ["renderOutlines"]),
                numImgTables: e.uint32,
                imageTables: new e.Array(new e.Pointer(e.uint32, an), "numImgTables")
              }), Dn = new e.Struct({
                gid: e.uint16,
                // Glyph ID of layer glyph (must be in z-order from bottom to top).
                paletteIndex: e.uint16
                // Index value to use in the appropriate palette. This value must
              }), on = new e.Struct({
                gid: e.uint16,
                // Glyph ID of reference glyph. This glyph is for reference only
                // and is not rendered for color.
                firstLayerIndex: e.uint16,
                // Index (from beginning of the Layer Records) to the layer record.
                // There will be numLayers consecutive entries for this base glyph.
                numLayers: e.uint16
              }), cn = new e.Struct({
                version: e.uint16,
                numBaseGlyphRecords: e.uint16,
                baseGlyphRecord: new e.Pointer(e.uint32, new e.Array(on, "numBaseGlyphRecords")),
                layerRecords: new e.Pointer(e.uint32, new e.Array(Dn, "numLayerRecords"), {
                  lazy: !0
                }),
                numLayerRecords: e.uint16
              }), ln = new e.Struct({
                blue: e.uint8,
                green: e.uint8,
                red: e.uint8,
                alpha: e.uint8
              }), Ya = new e.VersionedStruct(e.uint16, {
                header: {
                  numPaletteEntries: e.uint16,
                  numPalettes: e.uint16,
                  numColorRecords: e.uint16,
                  colorRecords: new e.Pointer(e.uint32, new e.Array(ln, "numColorRecords")),
                  colorRecordIndices: new e.Array(e.uint16, "numPalettes")
                },
                0: {},
                1: {
                  offsetPaletteTypeArray: new e.Pointer(e.uint32, new e.Array(e.uint32, "numPalettes")),
                  offsetPaletteLabelArray: new e.Pointer(e.uint32, new e.Array(e.uint16, "numPalettes")),
                  offsetPaletteEntryLabelArray: new e.Pointer(e.uint32, new e.Array(e.uint16, "numPaletteEntries"))
                }
              }), oa = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  coordinate: e.int16
                  // X or Y value, in design units
                },
                2: {
                  // Design units plus contour point
                  coordinate: e.int16,
                  // X or Y value, in design units
                  referenceGlyph: e.uint16,
                  // GlyphID of control glyph
                  baseCoordPoint: e.uint16
                  // Index of contour point on the referenceGlyph
                },
                3: {
                  // Design units plus Device table
                  coordinate: e.int16,
                  // X or Y value, in design units
                  deviceTable: new e.Pointer(e.uint16, Ze)
                  // Device table for X or Y value
                }
              }), Ka = new e.Struct({
                defaultIndex: e.uint16,
                // Index of default baseline for this script-same index in the BaseTagList
                baseCoordCount: e.uint16,
                baseCoords: new e.Array(new e.Pointer(e.uint16, oa), "baseCoordCount")
              }), Ja = new e.Struct({
                tag: new e.String(4),
                // 4-byte feature identification tag-must match FeatureTag in FeatureList
                minCoord: new e.Pointer(e.uint16, oa, {
                  type: "parent"
                }),
                // May be NULL
                maxCoord: new e.Pointer(e.uint16, oa, {
                  type: "parent"
                })
                // May be NULL
              }), Ma = new e.Struct({
                minCoord: new e.Pointer(e.uint16, oa),
                // May be NULL
                maxCoord: new e.Pointer(e.uint16, oa),
                // May be NULL
                featMinMaxCount: e.uint16,
                // May be 0
                featMinMaxRecords: new e.Array(Ja, "featMinMaxCount")
                // In alphabetical order
              }), sa = new e.Struct({
                tag: new e.String(4),
                // 4-byte language system identification tag
                minMax: new e.Pointer(e.uint16, Ma, {
                  type: "parent"
                })
              }), ka = new e.Struct({
                baseValues: new e.Pointer(e.uint16, Ka),
                // May be NULL
                defaultMinMax: new e.Pointer(e.uint16, Ma),
                // May be NULL
                baseLangSysCount: e.uint16,
                // May be 0
                baseLangSysRecords: new e.Array(sa, "baseLangSysCount")
                // in alphabetical order by BaseLangSysTag
              }), pa = new e.Struct({
                tag: new e.String(4),
                // 4-byte script identification tag
                script: new e.Pointer(e.uint16, ka, {
                  type: "parent"
                })
              }), On = new e.Array(pa, e.uint16), wt = new e.Array(new e.String(4), e.uint16), Z = new e.Struct({
                baseTagList: new e.Pointer(e.uint16, wt),
                // May be NULL
                baseScriptList: new e.Pointer(e.uint16, On)
              }), W = new e.VersionedStruct(e.uint32, {
                header: {
                  horizAxis: new e.Pointer(e.uint16, Z),
                  // May be NULL
                  vertAxis: new e.Pointer(e.uint16, Z)
                  // May be NULL
                },
                65536: {},
                65537: {
                  itemVariationStore: new e.Pointer(e.uint32, Qe)
                }
              }), nt = new e.Array(e.uint16, e.uint16), q = new e.Struct({
                coverage: new e.Pointer(e.uint16, Ne),
                glyphCount: e.uint16,
                attachPoints: new e.Array(new e.Pointer(e.uint16, nt), "glyphCount")
              }), gt = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  coordinate: e.int16
                },
                2: {
                  // Contour point
                  caretValuePoint: e.uint16
                },
                3: {
                  // Design units plus Device table
                  coordinate: e.int16,
                  deviceTable: new e.Pointer(e.uint16, Ze)
                }
              }), St = new e.Array(new e.Pointer(e.uint16, gt), e.uint16), qt = new e.Struct({
                coverage: new e.Pointer(e.uint16, Ne),
                ligGlyphCount: e.uint16,
                ligGlyphs: new e.Array(new e.Pointer(e.uint16, St), "ligGlyphCount")
              }), ne = new e.Struct({
                markSetTableFormat: e.uint16,
                markSetCount: e.uint16,
                coverage: new e.Array(new e.Pointer(e.uint32, Ne), "markSetCount")
              }), he = new e.VersionedStruct(e.uint32, {
                header: {
                  glyphClassDef: new e.Pointer(e.uint16, tr),
                  attachList: new e.Pointer(e.uint16, q),
                  ligCaretList: new e.Pointer(e.uint16, qt),
                  markAttachClassDef: new e.Pointer(e.uint16, tr)
                },
                65536: {},
                65538: {
                  markGlyphSetsDef: new e.Pointer(e.uint16, ne)
                },
                65539: {
                  markGlyphSetsDef: new e.Pointer(e.uint16, ne),
                  itemVariationStore: new e.Pointer(e.uint32, Qe)
                }
              }), ye = new e.Bitfield(e.uint16, ["xPlacement", "yPlacement", "xAdvance", "yAdvance", "xPlaDevice", "yPlaDevice", "xAdvDevice", "yAdvDevice"]), Se = {
                xPlacement: e.int16,
                yPlacement: e.int16,
                xAdvance: e.int16,
                yAdvance: e.int16,
                xPlaDevice: new e.Pointer(e.uint16, Ze, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                yPlaDevice: new e.Pointer(e.uint16, Ze, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                xAdvDevice: new e.Pointer(e.uint16, Ze, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                yAdvDevice: new e.Pointer(e.uint16, Ze, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                })
              }, Ce = /* @__PURE__ */ function() {
                function ft(et) {
                  et === void 0 && (et = "valueFormat"), this.key = et;
                }
                var X = ft.prototype;
                return X.buildStruct = function(O) {
                  for (var U = O; !U[this.key] && U.parent; )
                    U = U.parent;
                  if (U[this.key]) {
                    var H = {};
                    H.rel = function() {
                      return U._startOffset;
                    };
                    var lt = U[this.key];
                    for (var vt in lt)
                      lt[vt] && (H[vt] = Se[vt]);
                    return new e.Struct(H);
                  }
                }, X.size = function(O, U) {
                  return this.buildStruct(U).size(O, U);
                }, X.decode = function(O, U) {
                  var H = this.buildStruct(U).decode(O, U);
                  return delete H.rel, H;
                }, ft;
              }(), Ie = new e.Struct({
                secondGlyph: e.uint16,
                value1: new Ce("valueFormat1"),
                value2: new Ce("valueFormat2")
              }), Ge = new e.Array(Ie, e.uint16), Ve = new e.Struct({
                value1: new Ce("valueFormat1"),
                value2: new Ce("valueFormat2")
              }), qe = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  xCoordinate: e.int16,
                  yCoordinate: e.int16
                },
                2: {
                  // Design units plus contour point
                  xCoordinate: e.int16,
                  yCoordinate: e.int16,
                  anchorPoint: e.uint16
                },
                3: {
                  // Design units plus Device tables
                  xCoordinate: e.int16,
                  yCoordinate: e.int16,
                  xDeviceTable: new e.Pointer(e.uint16, Ze),
                  yDeviceTable: new e.Pointer(e.uint16, Ze)
                }
              }), lr = new e.Struct({
                entryAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                }),
                exitAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                })
              }), Fr = new e.Struct({
                class: e.uint16,
                markAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                })
              }), qr = new e.Array(Fr, e.uint16), yr = new e.Array(new e.Pointer(e.uint16, qe), function(ft) {
                return ft.parent.classCount;
              }), Yr = new e.Array(yr, e.uint16), gn = new e.Array(new e.Pointer(e.uint16, qe), function(ft) {
                return ft.parent.parent.classCount;
              }), Kr = new e.Array(gn, e.uint16), yn = new e.Array(new e.Pointer(e.uint16, Kr), e.uint16), Tn = new e.VersionedStruct("lookupType", {
                1: new e.VersionedStruct(e.uint16, {
                  // Single Adjustment
                  1: {
                    // Single positioning value
                    coverage: new e.Pointer(e.uint16, Ne),
                    valueFormat: ye,
                    value: new Ce()
                  },
                  2: {
                    coverage: new e.Pointer(e.uint16, Ne),
                    valueFormat: ye,
                    valueCount: e.uint16,
                    values: new e.LazyArray(new Ce(), "valueCount")
                  }
                }),
                2: new e.VersionedStruct(e.uint16, {
                  // Pair Adjustment Positioning
                  1: {
                    // Adjustments for glyph pairs
                    coverage: new e.Pointer(e.uint16, Ne),
                    valueFormat1: ye,
                    valueFormat2: ye,
                    pairSetCount: e.uint16,
                    pairSets: new e.LazyArray(new e.Pointer(e.uint16, Ge), "pairSetCount")
                  },
                  2: {
                    // Class pair adjustment
                    coverage: new e.Pointer(e.uint16, Ne),
                    valueFormat1: ye,
                    valueFormat2: ye,
                    classDef1: new e.Pointer(e.uint16, tr),
                    classDef2: new e.Pointer(e.uint16, tr),
                    class1Count: e.uint16,
                    class2Count: e.uint16,
                    classRecords: new e.LazyArray(new e.LazyArray(Ve, "class2Count"), "class1Count")
                  }
                }),
                3: {
                  // Cursive Attachment Positioning
                  format: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  entryExitCount: e.uint16,
                  entryExitRecords: new e.Array(lr, "entryExitCount")
                },
                4: {
                  // MarkToBase Attachment Positioning
                  format: e.uint16,
                  markCoverage: new e.Pointer(e.uint16, Ne),
                  baseCoverage: new e.Pointer(e.uint16, Ne),
                  classCount: e.uint16,
                  markArray: new e.Pointer(e.uint16, qr),
                  baseArray: new e.Pointer(e.uint16, Yr)
                },
                5: {
                  // MarkToLigature Attachment Positioning
                  format: e.uint16,
                  markCoverage: new e.Pointer(e.uint16, Ne),
                  ligatureCoverage: new e.Pointer(e.uint16, Ne),
                  classCount: e.uint16,
                  markArray: new e.Pointer(e.uint16, qr),
                  ligatureArray: new e.Pointer(e.uint16, yn)
                },
                6: {
                  // MarkToMark Attachment Positioning
                  format: e.uint16,
                  mark1Coverage: new e.Pointer(e.uint16, Ne),
                  mark2Coverage: new e.Pointer(e.uint16, Ne),
                  classCount: e.uint16,
                  mark1Array: new e.Pointer(e.uint16, qr),
                  mark2Array: new e.Pointer(e.uint16, Yr)
                },
                7: rr,
                // Contextual positioning
                8: $r,
                // Chaining contextual positioning
                9: {
                  // Extension Positioning
                  posFormat: e.uint16,
                  lookupType: e.uint16,
                  // cannot also be 9
                  extension: new e.Pointer(e.uint32, Tn)
                }
              });
              Tn.versions[9].extension.type = Tn;
              var fa = new e.VersionedStruct(e.uint32, {
                header: {
                  scriptList: new e.Pointer(e.uint16, te),
                  featureList: new e.Pointer(e.uint16, oe),
                  lookupList: new e.Pointer(e.uint16, new De(Tn))
                },
                65536: {},
                65537: {
                  featureVariations: new e.Pointer(e.uint32, Kn)
                }
              }), ea = new e.Array(e.uint16, e.uint16), di = ea, ra = new e.Struct({
                glyph: e.uint16,
                compCount: e.uint16,
                components: new e.Array(e.uint16, function(ft) {
                  return ft.compCount - 1;
                })
              }), ga = new e.Array(new e.Pointer(e.uint16, ra), e.uint16), la = new e.VersionedStruct("lookupType", {
                1: new e.VersionedStruct(e.uint16, {
                  // Single Substitution
                  1: {
                    coverage: new e.Pointer(e.uint16, Ne),
                    deltaGlyphID: e.int16
                  },
                  2: {
                    coverage: new e.Pointer(e.uint16, Ne),
                    glyphCount: e.uint16,
                    substitute: new e.LazyArray(e.uint16, "glyphCount")
                  }
                }),
                2: {
                  // Multiple Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  count: e.uint16,
                  sequences: new e.LazyArray(new e.Pointer(e.uint16, ea), "count")
                },
                3: {
                  // Alternate Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  count: e.uint16,
                  alternateSet: new e.LazyArray(new e.Pointer(e.uint16, di), "count")
                },
                4: {
                  // Ligature Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  count: e.uint16,
                  ligatureSets: new e.LazyArray(new e.Pointer(e.uint16, ga), "count")
                },
                5: rr,
                // Contextual Substitution
                6: $r,
                // Chaining Contextual Substitution
                7: {
                  // Extension Substitution
                  substFormat: e.uint16,
                  lookupType: e.uint16,
                  // cannot also be 7
                  extension: new e.Pointer(e.uint32, la)
                },
                8: {
                  // Reverse Chaining Contextual Single Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  backtrackCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "backtrackGlyphCount"),
                  lookaheadGlyphCount: e.uint16,
                  lookaheadCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "lookaheadGlyphCount"),
                  glyphCount: e.uint16,
                  substitutes: new e.Array(e.uint16, "glyphCount")
                }
              });
              la.versions[7].extension.type = la;
              var ua = new e.VersionedStruct(e.uint32, {
                header: {
                  scriptList: new e.Pointer(e.uint16, te),
                  featureList: new e.Pointer(e.uint16, oe),
                  lookupList: new e.Pointer(e.uint16, new De(la))
                },
                65536: {},
                65537: {
                  featureVariations: new e.Pointer(e.uint32, Kn)
                }
              }), Qn = new e.Array(e.uint16, e.uint16), vi = new e.Struct({
                shrinkageEnableGSUB: new e.Pointer(e.uint16, Qn),
                shrinkageDisableGSUB: new e.Pointer(e.uint16, Qn),
                shrinkageEnableGPOS: new e.Pointer(e.uint16, Qn),
                shrinkageDisableGPOS: new e.Pointer(e.uint16, Qn),
                shrinkageJstfMax: new e.Pointer(e.uint16, new De(Tn)),
                extensionEnableGSUB: new e.Pointer(e.uint16, Qn),
                extensionDisableGSUB: new e.Pointer(e.uint16, Qn),
                extensionEnableGPOS: new e.Pointer(e.uint16, Qn),
                extensionDisableGPOS: new e.Pointer(e.uint16, Qn),
                extensionJstfMax: new e.Pointer(e.uint16, new De(Tn))
              }), pi = new e.Array(new e.Pointer(e.uint16, vi), e.uint16), gi = new e.Struct({
                tag: new e.String(4),
                jstfLangSys: new e.Pointer(e.uint16, pi)
              }), Qa = new e.Struct({
                extenderGlyphs: new e.Pointer(e.uint16, new e.Array(e.uint16, e.uint16)),
                // array of glyphs to extend line length
                defaultLangSys: new e.Pointer(e.uint16, pi),
                langSysCount: e.uint16,
                langSysRecords: new e.Array(gi, "langSysCount")
              }), yi = new e.Struct({
                tag: new e.String(4),
                script: new e.Pointer(e.uint16, Qa, {
                  type: "parent"
                })
              }), mi = new e.Struct({
                version: e.uint32,
                // should be 0x00010000
                scriptCount: e.uint16,
                scriptList: new e.Array(yi, "scriptCount")
              }), Zi = /* @__PURE__ */ function() {
                function ft(et) {
                  this._size = et;
                }
                var X = ft.prototype;
                return X.decode = function(O, U) {
                  switch (this.size(0, U)) {
                    case 1:
                      return O.readUInt8();
                    case 2:
                      return O.readUInt16BE();
                    case 3:
                      return O.readUInt24BE();
                    case 4:
                      return O.readUInt32BE();
                  }
                }, X.size = function(O, U) {
                  return m.resolveLength(this._size, null, U);
                }, ft;
              }(), xi = new e.Struct({
                entry: new Zi(function(ft) {
                  return ((ft.parent.entryFormat & 48) >> 4) + 1;
                }),
                outerIndex: function(X) {
                  return X.entry >> (X.parent.entryFormat & 15) + 1;
                },
                innerIndex: function(X) {
                  return X.entry & (1 << (X.parent.entryFormat & 15) + 1) - 1;
                }
              }), na = new e.Struct({
                entryFormat: e.uint16,
                mapCount: e.uint16,
                mapData: new e.Array(xi, "mapCount")
              }), bi = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                itemVariationStore: new e.Pointer(e.uint32, Qe),
                advanceWidthMapping: new e.Pointer(e.uint32, na),
                LSBMapping: new e.Pointer(e.uint32, na),
                RSBMapping: new e.Pointer(e.uint32, na)
              }), ya = new e.Struct({
                format: e.uint32,
                length: e.uint32,
                offset: e.uint32
              }), Xo = new e.Struct({
                reserved: new e.Reserved(e.uint16, 2),
                cbSignature: e.uint32,
                // Length (in bytes) of the PKCS#7 packet in pbSignature
                signature: new e.Buffer("cbSignature")
              }), Zo = new e.Struct({
                ulVersion: e.uint32,
                // Version number of the DSIG table (0x00000001)
                usNumSigs: e.uint16,
                // Number of signatures in the table
                usFlag: e.uint16,
                // Permission flags
                signatures: new e.Array(ya, "usNumSigs"),
                signatureBlocks: new e.Array(Xo, "usNumSigs")
              }), Jf = new e.Struct({
                rangeMaxPPEM: e.uint16,
                // Upper limit of range, in ppem
                rangeGaspBehavior: new e.Bitfield(e.uint16, [
                  // Flags describing desired rasterizer behavior
                  "grayscale",
                  "gridfit",
                  "symmetricSmoothing",
                  "symmetricGridfit"
                  // only in version 1, for ClearType
                ])
              }), Qf = new e.Struct({
                version: e.uint16,
                // set to 0
                numRanges: e.uint16,
                gaspRanges: new e.Array(Jf, "numRanges")
                // Sorted by ppem
              }), $f = new e.Struct({
                pixelSize: e.uint8,
                maximumWidth: e.uint8,
                widths: new e.Array(e.uint8, function(ft) {
                  return ft.parent.parent.maxp.numGlyphs;
                })
              }), qf = new e.Struct({
                version: e.uint16,
                numRecords: e.int16,
                sizeDeviceRecord: e.int32,
                records: new e.Array($f, "numRecords")
              }), _f = new e.Struct({
                left: e.uint16,
                right: e.uint16,
                value: e.int16
              }), Ks = new e.Struct({
                firstGlyph: e.uint16,
                nGlyphs: e.uint16,
                offsets: new e.Array(e.uint16, "nGlyphs"),
                max: function(X) {
                  return X.offsets.length && Math.max.apply(Math, X.offsets);
                }
              }), tl = new e.Struct({
                off: function(X) {
                  return X._startOffset - X.parent.parent._startOffset;
                },
                len: function(X) {
                  return ((X.parent.leftTable.max - X.off) / X.parent.rowWidth + 1) * (X.parent.rowWidth / 2);
                },
                values: new e.LazyArray(e.int16, "len")
              }), Js = new e.VersionedStruct("format", {
                0: {
                  nPairs: e.uint16,
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16,
                  pairs: new e.Array(_f, "nPairs")
                },
                2: {
                  rowWidth: e.uint16,
                  leftTable: new e.Pointer(e.uint16, Ks, {
                    type: "parent"
                  }),
                  rightTable: new e.Pointer(e.uint16, Ks, {
                    type: "parent"
                  }),
                  array: new e.Pointer(e.uint16, tl, {
                    type: "parent"
                  })
                },
                3: {
                  glyphCount: e.uint16,
                  kernValueCount: e.uint8,
                  leftClassCount: e.uint8,
                  rightClassCount: e.uint8,
                  flags: e.uint8,
                  kernValue: new e.Array(e.int16, "kernValueCount"),
                  leftClass: new e.Array(e.uint8, "glyphCount"),
                  rightClass: new e.Array(e.uint8, "glyphCount"),
                  kernIndex: new e.Array(e.uint8, function(ft) {
                    return ft.leftClassCount * ft.rightClassCount;
                  })
                }
              }), Qs = new e.VersionedStruct("version", {
                0: {
                  // Microsoft uses this format
                  subVersion: e.uint16,
                  // Microsoft has an extra sub-table version number
                  length: e.uint16,
                  // Length of the subtable, in bytes
                  format: e.uint8,
                  // Format of subtable
                  coverage: new e.Bitfield(e.uint8, [
                    "horizontal",
                    // 1 if table has horizontal data, 0 if vertical
                    "minimum",
                    // If set to 1, the table has minimum values. If set to 0, the table has kerning values.
                    "crossStream",
                    // If set to 1, kerning is perpendicular to the flow of the text
                    "override"
                    // If set to 1 the value in this table replaces the accumulated value
                  ]),
                  subtable: Js,
                  padding: new e.Reserved(e.uint8, function(ft) {
                    return ft.length - ft._currentOffset;
                  })
                },
                1: {
                  // Apple uses this format
                  length: e.uint32,
                  coverage: new e.Bitfield(e.uint8, [
                    null,
                    null,
                    null,
                    null,
                    null,
                    "variation",
                    // Set if table has variation kerning values
                    "crossStream",
                    // Set if table has cross-stream kerning values
                    "vertical"
                    // Set if table has vertical kerning values
                  ]),
                  format: e.uint8,
                  tupleIndex: e.uint16,
                  subtable: Js,
                  padding: new e.Reserved(e.uint8, function(ft) {
                    return ft.length - ft._currentOffset;
                  })
                }
              }), el = new e.VersionedStruct(e.uint16, {
                0: {
                  // Microsoft Version
                  nTables: e.uint16,
                  tables: new e.Array(Qs, "nTables")
                },
                1: {
                  // Apple Version
                  reserved: new e.Reserved(e.uint16),
                  // the other half of the version number
                  nTables: e.uint32,
                  tables: new e.Array(Qs, "nTables")
                }
              }), rl = new e.Struct({
                version: e.uint16,
                numGlyphs: e.uint16,
                yPels: new e.Array(e.uint8, "numGlyphs")
              }), nl = new e.Struct({
                version: e.uint16,
                fontNumber: e.uint32,
                pitch: e.uint16,
                xHeight: e.uint16,
                style: e.uint16,
                typeFamily: e.uint16,
                capHeight: e.uint16,
                symbolSet: e.uint16,
                typeface: new e.String(16),
                characterComplement: new e.String(8),
                fileName: new e.String(6),
                strokeWeight: new e.String(1),
                widthType: new e.String(1),
                serifStyle: e.uint8,
                reserved: new e.Reserved(e.uint8)
              }), al = new e.Struct({
                bCharSet: e.uint8,
                // Character set
                xRatio: e.uint8,
                // Value to use for x-Ratio
                yStartRatio: e.uint8,
                // Starting y-Ratio value
                yEndRatio: e.uint8
                // Ending y-Ratio value
              }), il = new e.Struct({
                yPelHeight: e.uint16,
                // yPelHeight to which values apply
                yMax: e.int16,
                // Maximum value (in pels) for this yPelHeight
                yMin: e.int16
                // Minimum value (in pels) for this yPelHeight
              }), ol = new e.Struct({
                recs: e.uint16,
                // Number of height records in this group
                startsz: e.uint8,
                // Starting yPelHeight
                endsz: e.uint8,
                // Ending yPelHeight
                entries: new e.Array(il, "recs")
                // The VDMX records
              }), sl = new e.Struct({
                version: e.uint16,
                // Version number (0 or 1)
                numRecs: e.uint16,
                // Number of VDMX groups present
                numRatios: e.uint16,
                // Number of aspect ratio groupings
                ratioRanges: new e.Array(al, "numRatios"),
                // Ratio ranges
                offsets: new e.Array(e.uint16, "numRatios"),
                // Offset to the VDMX group for this ratio range
                groups: new e.Array(ol, "numRecs")
                // The actual VDMX groupings
              }), fl = new e.Struct({
                version: e.uint16,
                // Version number of the Vertical Header Table
                ascent: e.int16,
                // The vertical typographic ascender for this font
                descent: e.int16,
                // The vertical typographic descender for this font
                lineGap: e.int16,
                // The vertical typographic line gap for this font
                advanceHeightMax: e.int16,
                // The maximum advance height measurement found in the font
                minTopSideBearing: e.int16,
                // The minimum top side bearing measurement found in the font
                minBottomSideBearing: e.int16,
                // The minimum bottom side bearing measurement found in the font
                yMaxExtent: e.int16,
                caretSlopeRise: e.int16,
                // Caret slope (rise/run)
                caretSlopeRun: e.int16,
                caretOffset: e.int16,
                // Set value equal to 0 for nonslanted fonts
                reserved: new e.Reserved(e.int16, 4),
                metricDataFormat: e.int16,
                // Set to 0
                numberOfMetrics: e.uint16
                // Number of advance heights in the Vertical Metrics table
              }), ll = new e.Struct({
                advance: e.uint16,
                // The advance height of the glyph
                bearing: e.int16
                // The top sidebearing of the glyph
              }), ul = new e.Struct({
                metrics: new e.LazyArray(ll, function(ft) {
                  return ft.parent.vhea.numberOfMetrics;
                }),
                bearings: new e.LazyArray(e.int16, function(ft) {
                  return ft.parent.maxp.numGlyphs - ft.parent.vhea.numberOfMetrics;
                })
              }), $s = new e.Fixed(16, "BE", 14), cl = new e.Struct({
                fromCoord: $s,
                toCoord: $s
              }), hl = new e.Struct({
                pairCount: e.uint16,
                correspondence: new e.Array(cl, "pairCount")
              }), dl = new e.Struct({
                version: e.fixed32,
                axisCount: e.uint32,
                segment: new e.Array(hl, "axisCount")
              }), vl = /* @__PURE__ */ function() {
                function ft(et, O, U) {
                  this.type = et, this.stream = O, this.parent = U, this.base = this.stream.pos, this._items = [];
                }
                var X = ft.prototype;
                return X.getItem = function(O) {
                  if (this._items[O] == null) {
                    var U = this.stream.pos;
                    this.stream.pos = this.base + this.type.size(null, this.parent) * O, this._items[O] = this.type.decode(this.stream, this.parent), this.stream.pos = U;
                  }
                  return this._items[O];
                }, X.inspect = function() {
                  return "[UnboundedArray ".concat(this.type.constructor.name, "]");
                }, ft;
              }(), ca = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X(O) {
                  return ft.call(this, O, 0) || this;
                }
                var et = X.prototype;
                return et.decode = function(U, H) {
                  return new vl(this.type, U, H);
                }, X;
              }(e.Array), Ea = function(X) {
                X === void 0 && (X = e.uint16);
                var et = /* @__PURE__ */ function() {
                  function vt(ht) {
                    this.type = ht;
                  }
                  var dt = vt.prototype;
                  return dt.decode = function(Pt, Vt) {
                    return Vt = Vt.parent.parent, this.type.decode(Pt, Vt);
                  }, dt.size = function(Pt, Vt) {
                    return Vt = Vt.parent.parent, this.type.size(Pt, Vt);
                  }, dt.encode = function(Pt, Vt, se) {
                    return se = se.parent.parent, this.type.encode(Pt, Vt, se);
                  }, vt;
                }();
                X = new et(X);
                var O = new e.Struct({
                  unitSize: e.uint16,
                  nUnits: e.uint16,
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16
                }), U = new e.Struct({
                  lastGlyph: e.uint16,
                  firstGlyph: e.uint16,
                  value: X
                }), H = new e.Struct({
                  lastGlyph: e.uint16,
                  firstGlyph: e.uint16,
                  values: new e.Pointer(e.uint16, new e.Array(X, function(vt) {
                    return vt.lastGlyph - vt.firstGlyph + 1;
                  }), {
                    type: "parent"
                  })
                }), lt = new e.Struct({
                  glyph: e.uint16,
                  value: X
                });
                return new e.VersionedStruct(e.uint16, {
                  0: {
                    values: new ca(X)
                    // length == number of glyphs maybe?
                  },
                  2: {
                    binarySearchHeader: O,
                    segments: new e.Array(U, function(vt) {
                      return vt.binarySearchHeader.nUnits;
                    })
                  },
                  4: {
                    binarySearchHeader: O,
                    segments: new e.Array(H, function(vt) {
                      return vt.binarySearchHeader.nUnits;
                    })
                  },
                  6: {
                    binarySearchHeader: O,
                    segments: new e.Array(lt, function(vt) {
                      return vt.binarySearchHeader.nUnits;
                    })
                  },
                  8: {
                    firstGlyph: e.uint16,
                    count: e.uint16,
                    values: new e.Array(X, "count")
                  }
                });
              };
              function Yi(ft, X) {
                ft === void 0 && (ft = {}), X === void 0 && (X = e.uint16);
                var et = Object.assign({
                  newState: e.uint16,
                  flags: e.uint16
                }, ft), O = new e.Struct(et), U = new ca(new e.Array(e.uint16, function(lt) {
                  return lt.nClasses;
                })), H = new e.Struct({
                  nClasses: e.uint32,
                  classTable: new e.Pointer(e.uint32, new Ea(X)),
                  stateArray: new e.Pointer(e.uint32, U),
                  entryTable: new e.Pointer(e.uint32, new ca(O))
                });
                return H;
              }
              function pl(ft, X) {
                ft === void 0 && (ft = {}), X === void 0 && (X = e.uint16);
                var et = new e.Struct({
                  version: function() {
                    return 8;
                  },
                  // simulate LookupTable
                  firstGlyph: e.uint16,
                  values: new e.Array(e.uint8, e.uint16)
                }), O = Object.assign({
                  newStateOffset: e.uint16,
                  // convert offset to stateArray index
                  newState: function(dt) {
                    return (dt.newStateOffset - (dt.parent.stateArray.base - dt.parent._startOffset)) / dt.parent.nClasses;
                  },
                  flags: e.uint16
                }, ft), U = new e.Struct(O), H = new ca(new e.Array(e.uint8, function(vt) {
                  return vt.nClasses;
                })), lt = new e.Struct({
                  nClasses: e.uint16,
                  classTable: new e.Pointer(e.uint16, et),
                  stateArray: new e.Pointer(e.uint16, H),
                  entryTable: new e.Pointer(e.uint16, new ca(U))
                });
                return lt;
              }
              var gl = new e.VersionedStruct("format", {
                0: {
                  // Distance-based, no mapping
                  deltas: new e.Array(e.int16, 32)
                },
                1: {
                  // Distance-based, with mapping
                  deltas: new e.Array(e.int16, 32),
                  mappingData: new Ea(e.uint16)
                },
                2: {
                  // Control point-based, no mapping
                  standardGlyph: e.uint16,
                  controlPoints: new e.Array(e.uint16, 32)
                },
                3: {
                  // Control point-based, with mapping
                  standardGlyph: e.uint16,
                  controlPoints: new e.Array(e.uint16, 32),
                  mappingData: new Ea(e.uint16)
                }
              }), yl = new e.Struct({
                version: e.fixed32,
                format: e.uint16,
                defaultBaseline: e.uint16,
                subtable: gl
              }), ml = new e.Struct({
                setting: e.uint16,
                nameIndex: e.int16,
                name: function(X) {
                  return X.parent.parent.parent.name.records.fontFeatures[X.nameIndex];
                }
              }), xl = new e.Struct({
                feature: e.uint16,
                nSettings: e.uint16,
                settingTable: new e.Pointer(e.uint32, new e.Array(ml, "nSettings"), {
                  type: "parent"
                }),
                featureFlags: new e.Bitfield(e.uint8, [null, null, null, null, null, null, "hasDefault", "exclusive"]),
                defaultSetting: e.uint8,
                nameIndex: e.int16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameIndex];
                }
              }), bl = new e.Struct({
                version: e.fixed32,
                featureNameCount: e.uint16,
                reserved1: new e.Reserved(e.uint16),
                reserved2: new e.Reserved(e.uint32),
                featureNames: new e.Array(xl, "featureNameCount")
              }), wl = new e.Struct({
                axisTag: new e.String(4),
                minValue: e.fixed32,
                defaultValue: e.fixed32,
                maxValue: e.fixed32,
                flags: e.uint16,
                nameID: e.uint16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameID];
                }
              }), Sl = new e.Struct({
                nameID: e.uint16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameID];
                },
                flags: e.uint16,
                coord: new e.Array(e.fixed32, function(ft) {
                  return ft.parent.axisCount;
                }),
                postscriptNameID: new e.Optional(e.uint16, function(ft) {
                  return ft.parent.instanceSize - ft._currentOffset > 0;
                })
              }), Al = new e.Struct({
                version: e.fixed32,
                offsetToData: e.uint16,
                countSizePairs: e.uint16,
                axisCount: e.uint16,
                axisSize: e.uint16,
                instanceCount: e.uint16,
                instanceSize: e.uint16,
                axis: new e.Array(wl, "axisCount"),
                instance: new e.Array(Sl, "instanceCount")
              }), Cl = new e.Fixed(16, "BE", 14), El = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(et, O) {
                  return O.flags ? et.readUInt32BE() : et.readUInt16BE() * 2;
                }, ft;
              }(), Tl = new e.Struct({
                version: e.uint16,
                reserved: new e.Reserved(e.uint16),
                axisCount: e.uint16,
                globalCoordCount: e.uint16,
                globalCoords: new e.Pointer(e.uint32, new e.Array(new e.Array(Cl, "axisCount"), "globalCoordCount")),
                glyphCount: e.uint16,
                flags: e.uint16,
                offsetToData: e.uint32,
                offsets: new e.Array(new e.Pointer(El, "void", {
                  relativeTo: function(X) {
                    return X.offsetToData;
                  },
                  allowNull: !1
                }), function(ft) {
                  return ft.glyphCount + 1;
                })
              }), Fl = new e.Struct({
                length: e.uint16,
                coverage: e.uint16,
                subFeatureFlags: e.uint32,
                stateTable: new pl()
              }), Il = new e.Struct({
                justClass: e.uint32,
                beforeGrowLimit: e.fixed32,
                beforeShrinkLimit: e.fixed32,
                afterGrowLimit: e.fixed32,
                afterShrinkLimit: e.fixed32,
                growFlags: e.uint16,
                shrinkFlags: e.uint16
              }), Dl = new e.Array(Il, e.uint32), Ol = new e.VersionedStruct("actionType", {
                0: {
                  // Decomposition action
                  lowerLimit: e.fixed32,
                  upperLimit: e.fixed32,
                  order: e.uint16,
                  glyphs: new e.Array(e.uint16, e.uint16)
                },
                1: {
                  // Unconditional add glyph action
                  addGlyph: e.uint16
                },
                2: {
                  // Conditional add glyph action
                  substThreshold: e.fixed32,
                  addGlyph: e.uint16,
                  substGlyph: e.uint16
                },
                3: {},
                // Stretch glyph action (no data, not supported by CoreText)
                4: {
                  // Ductile glyph action (not supported by CoreText)
                  variationAxis: e.uint32,
                  minimumLimit: e.fixed32,
                  noStretchValue: e.fixed32,
                  maximumLimit: e.fixed32
                },
                5: {
                  // Repeated add glyph action
                  flags: e.uint16,
                  glyph: e.uint16
                }
              }), Pl = new e.Struct({
                actionClass: e.uint16,
                actionType: e.uint16,
                actionLength: e.uint32,
                actionData: Ol,
                padding: new e.Reserved(e.uint8, function(ft) {
                  return ft.actionLength - ft._currentOffset;
                })
              }), Bl = new e.Array(Pl, e.uint32), Rl = new e.Struct({
                lookupTable: new Ea(new e.Pointer(e.uint16, Bl))
              }), qs = new e.Struct({
                classTable: new e.Pointer(e.uint16, Fl, {
                  type: "parent"
                }),
                wdcOffset: e.uint16,
                postCompensationTable: new e.Pointer(e.uint16, Rl, {
                  type: "parent"
                }),
                widthDeltaClusters: new Ea(new e.Pointer(e.uint16, Dl, {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.wdcOffset;
                  }
                }))
              }), Ll = new e.Struct({
                version: e.uint32,
                format: e.uint16,
                horizontal: new e.Pointer(e.uint16, qs),
                vertical: new e.Pointer(e.uint16, qs)
              }), Nl = {
                action: e.uint16
              }, Ml = {
                markIndex: e.uint16,
                currentIndex: e.uint16
              }, kl = {
                currentInsertIndex: e.uint16,
                markedInsertIndex: e.uint16
              }, Ul = new e.Struct({
                items: new ca(new e.Pointer(e.uint32, new Ea()))
              }), zl = new e.VersionedStruct("type", {
                0: {
                  // Indic Rearrangement Subtable
                  stateTable: new Yi()
                },
                1: {
                  // Contextual Glyph Substitution Subtable
                  stateTable: new Yi(Ml),
                  substitutionTable: new e.Pointer(e.uint32, Ul)
                },
                2: {
                  // Ligature subtable
                  stateTable: new Yi(Nl),
                  ligatureActions: new e.Pointer(e.uint32, new ca(e.uint32)),
                  components: new e.Pointer(e.uint32, new ca(e.uint16)),
                  ligatureList: new e.Pointer(e.uint32, new ca(e.uint16))
                },
                4: {
                  // Non-contextual Glyph Substitution Subtable
                  lookupTable: new Ea()
                },
                5: {
                  // Glyph Insertion Subtable
                  stateTable: new Yi(kl),
                  insertionActions: new e.Pointer(e.uint32, new ca(e.uint16))
                }
              }), Wl = new e.Struct({
                length: e.uint32,
                coverage: e.uint24,
                type: e.uint8,
                subFeatureFlags: e.uint32,
                table: zl,
                padding: new e.Reserved(e.uint8, function(ft) {
                  return ft.length - ft._currentOffset;
                })
              }), Hl = new e.Struct({
                featureType: e.uint16,
                featureSetting: e.uint16,
                enableFlags: e.uint32,
                disableFlags: e.uint32
              }), jl = new e.Struct({
                defaultFlags: e.uint32,
                chainLength: e.uint32,
                nFeatureEntries: e.uint32,
                nSubtables: e.uint32,
                features: new e.Array(Hl, "nFeatureEntries"),
                subtables: new e.Array(Wl, "nSubtables")
              }), Gl = new e.Struct({
                version: e.uint16,
                unused: new e.Reserved(e.uint16),
                nChains: e.uint32,
                chains: new e.Array(jl, "nChains")
              }), Vl = new e.Struct({
                left: e.int16,
                top: e.int16,
                right: e.int16,
                bottom: e.int16
              }), Xl = new e.Struct({
                version: e.fixed32,
                format: e.uint16,
                lookupTable: new Ea(Vl)
              }), or = {};
              or.cmap = Q, or.head = pt, or.hhea = ct, or.hmtx = mt, or.maxp = G, or.name = tt, or["OS/2"] = At, or.post = Yt, or.fpgm = Dt, or.loca = ae, or.prep = Ae, or["cvt "] = Gt, or.glyf = xe, or["CFF "] = Re, or.CFF2 = Re, or.VORG = We, or.EBLC = En, or.CBLC = or.EBLC, or.sbix = bn, or.COLR = cn, or.CPAL = Ya, or.BASE = W, or.GDEF = he, or.GPOS = fa, or.GSUB = ua, or.JSTF = mi, or.HVAR = bi, or.DSIG = Zo, or.gasp = Qf, or.hdmx = qf, or.kern = el, or.LTSH = rl, or.PCLT = nl, or.VDMX = sl, or.vhea = fl, or.vmtx = ul, or.avar = dl, or.bsln = yl, or.feat = bl, or.fvar = Al, or.gvar = Tl, or.just = Ll, or.morx = Gl, or.opbd = Xl;
              var Zl = new e.Struct({
                tag: new e.String(4),
                checkSum: e.uint32,
                offset: new e.Pointer(e.uint32, "void", {
                  type: "global"
                }),
                length: e.uint32
              }), Ki = new e.Struct({
                tag: new e.String(4),
                numTables: e.uint16,
                searchRange: e.uint16,
                entrySelector: e.uint16,
                rangeShift: e.uint16,
                tables: new e.Array(Zl, "numTables")
              });
              Ki.process = function() {
                for (var ft = {}, X = a(this.tables), et; !(et = X()).done; ) {
                  var O = et.value;
                  ft[O.tag] = O;
                }
                this.tables = ft;
              }, Ki.preEncode = function(ft) {
                var X = [];
                for (var et in this.tables) {
                  var O = this.tables[et];
                  O && X.push({
                    tag: et,
                    checkSum: 0,
                    offset: new e.VoidPointer(or[et], O),
                    length: or[et].size(O)
                  });
                }
                this.tag = "true", this.numTables = X.length, this.tables = X;
                var U = Math.floor(Math.log(this.numTables) / Math.LN2), H = Math.pow(2, U);
                this.searchRange = H * 16, this.entrySelector = Math.log(H) / Math.LN2, this.rangeShift = this.numTables * 16 - this.searchRange;
              };
              function Ji(ft, X) {
                for (var et = 0, O = ft.length - 1; et <= O; ) {
                  var U = et + O >> 1, H = X(ft[U]);
                  if (H < 0)
                    O = U - 1;
                  else if (H > 0)
                    et = U + 1;
                  else
                    return U;
                }
                return -1;
              }
              function $a(ft, X) {
                for (var et = []; ft < X; )
                  et.push(ft++);
                return et;
              }
              var Ta;
              try {
                var Yo = t(32766);
              } catch {
              }
              var Yl = (Ta = /* @__PURE__ */ function() {
                function ft(et) {
                  if (this.encoding = null, this.cmap = this.findSubtable(et, [
                    // 32-bit subtables
                    [3, 10],
                    [0, 6],
                    [0, 4],
                    // 16-bit subtables
                    [3, 1],
                    [0, 3],
                    [0, 2],
                    [0, 1],
                    [0, 0]
                  ]), !this.cmap && Yo)
                    for (var O = a(et.tables), U; !(U = O()).done; ) {
                      var H = U.value, lt = Tt(H.platformID, H.encodingID, H.table.language - 1);
                      Yo.encodingExists(lt) && (this.cmap = H.table, this.encoding = lt);
                    }
                  if (!this.cmap)
                    throw new Error("Could not find a supported cmap table");
                  this.uvs = this.findSubtable(et, [[0, 5]]), this.uvs && this.uvs.version !== 14 && (this.uvs = null);
                }
                var X = ft.prototype;
                return X.findSubtable = function(O, U) {
                  for (var H = a(U), lt; !(lt = H()).done; )
                    for (var vt = lt.value, dt = vt[0], ht = vt[1], Pt = a(O.tables), Vt; !(Vt = Pt()).done; ) {
                      var se = Vt.value;
                      if (se.platformID === dt && se.encodingID === ht)
                        return se.table;
                    }
                  return null;
                }, X.lookup = function(O, U) {
                  if (this.encoding) {
                    var H = Yo.encode(String.fromCodePoint(O), this.encoding);
                    O = 0;
                    for (var lt = 0; lt < H.length; lt++)
                      O = O << 8 | H[lt];
                  } else if (U) {
                    var vt = this.getVariationSelector(O, U);
                    if (vt)
                      return vt;
                  }
                  var dt = this.cmap;
                  switch (dt.version) {
                    case 0:
                      return dt.codeMap.get(O) || 0;
                    case 4: {
                      for (var ht = 0, Pt = dt.segCount - 1; ht <= Pt; ) {
                        var Vt = ht + Pt >> 1;
                        if (O < dt.startCode.get(Vt))
                          Pt = Vt - 1;
                        else if (O > dt.endCode.get(Vt))
                          ht = Vt + 1;
                        else {
                          var se = dt.idRangeOffset.get(Vt), $t = void 0;
                          if (se === 0)
                            $t = O + dt.idDelta.get(Vt);
                          else {
                            var ue = se / 2 + (O - dt.startCode.get(Vt)) - (dt.segCount - Vt);
                            $t = dt.glyphIndexArray.get(ue) || 0, $t !== 0 && ($t += dt.idDelta.get(Vt));
                          }
                          return $t & 65535;
                        }
                      }
                      return 0;
                    }
                    case 8:
                      throw new Error("TODO: cmap format 8");
                    case 6:
                    case 10:
                      return dt.glyphIndices.get(O - dt.firstCode) || 0;
                    case 12:
                    case 13: {
                      for (var pe = 0, Te = dt.nGroups - 1; pe <= Te; ) {
                        var He = pe + Te >> 1, _e = dt.groups.get(He);
                        if (O < _e.startCharCode)
                          Te = He - 1;
                        else if (O > _e.endCharCode)
                          pe = He + 1;
                        else
                          return dt.version === 12 ? _e.glyphID + (O - _e.startCharCode) : _e.glyphID;
                      }
                      return 0;
                    }
                    case 14:
                      throw new Error("TODO: cmap format 14");
                    default:
                      throw new Error("Unknown cmap format ".concat(dt.version));
                  }
                }, X.getVariationSelector = function(O, U) {
                  if (!this.uvs)
                    return 0;
                  var H = this.uvs.varSelectors.toArray(), lt = Ji(H, function(dt) {
                    return U - dt.varSelector;
                  }), vt = H[lt];
                  return lt !== -1 && vt.defaultUVS && (lt = Ji(vt.defaultUVS, function(dt) {
                    return O < dt.startUnicodeValue ? -1 : O > dt.startUnicodeValue + dt.additionalCount ? 1 : 0;
                  })), lt !== -1 && vt.nonDefaultUVS && (lt = Ji(vt.nonDefaultUVS, function(dt) {
                    return O - dt.unicodeValue;
                  }), lt !== -1) ? vt.nonDefaultUVS[lt].glyphID : 0;
                }, X.getCharacterSet = function() {
                  var O = this.cmap;
                  switch (O.version) {
                    case 0:
                      return $a(0, O.codeMap.length);
                    case 4: {
                      for (var U = [], H = O.endCode.toArray(), lt = 0; lt < H.length; lt++) {
                        var vt = H[lt] + 1, dt = O.startCode.get(lt);
                        U.push.apply(U, $a(dt, vt));
                      }
                      return U;
                    }
                    case 8:
                      throw new Error("TODO: cmap format 8");
                    case 6:
                    case 10:
                      return $a(O.firstCode, O.firstCode + O.glyphIndices.length);
                    case 12:
                    case 13: {
                      for (var ht = [], Pt = a(O.groups.toArray()), Vt; !(Vt = Pt()).done; ) {
                        var se = Vt.value;
                        ht.push.apply(ht, $a(se.startCharCode, se.endCharCode + 1));
                      }
                      return ht;
                    }
                    case 14:
                      throw new Error("TODO: cmap format 14");
                    default:
                      throw new Error("Unknown cmap format ".concat(O.version));
                  }
                }, X.codePointsForGlyph = function(O) {
                  var U = this.cmap;
                  switch (U.version) {
                    case 0: {
                      for (var H = [], lt = 0; lt < 256; lt++)
                        U.codeMap.get(lt) === O && H.push(lt);
                      return H;
                    }
                    case 4: {
                      for (var vt = [], dt = 0; dt < U.segCount; dt++)
                        for (var ht = U.endCode.get(dt), Pt = U.startCode.get(dt), Vt = U.idRangeOffset.get(dt), se = U.idDelta.get(dt), $t = Pt; $t <= ht; $t++) {
                          var ue = 0;
                          if (Vt === 0)
                            ue = $t + se;
                          else {
                            var pe = Vt / 2 + ($t - Pt) - (U.segCount - dt);
                            ue = U.glyphIndexArray.get(pe) || 0, ue !== 0 && (ue += se);
                          }
                          ue === O && vt.push($t);
                        }
                      return vt;
                    }
                    case 12: {
                      for (var Te = [], He = a(U.groups.toArray()), _e; !(_e = He()).done; ) {
                        var Xe = _e.value;
                        O >= Xe.glyphID && O <= Xe.glyphID + (Xe.endCharCode - Xe.startCharCode) && Te.push(Xe.startCharCode + (O - Xe.glyphID));
                      }
                      return Te;
                    }
                    case 13: {
                      for (var hr = [], sr = a(U.groups.toArray()), dr; !(dr = sr()).done; ) {
                        var mr = dr.value;
                        O === mr.glyphID && hr.push.apply(hr, $a(mr.startCharCode, mr.endCharCode + 1));
                      }
                      return hr;
                    }
                    default:
                      throw new Error("Unknown cmap format ".concat(U.version));
                  }
                }, ft;
              }(), M(Ta.prototype, "getCharacterSet", [K], Object.getOwnPropertyDescriptor(Ta.prototype, "getCharacterSet"), Ta.prototype), M(Ta.prototype, "codePointsForGlyph", [K], Object.getOwnPropertyDescriptor(Ta.prototype, "codePointsForGlyph"), Ta.prototype), Ta), Kl = /* @__PURE__ */ function() {
                function ft(et) {
                  this.kern = et.kern;
                }
                var X = ft.prototype;
                return X.process = function(O, U) {
                  for (var H = 0; H < O.length - 1; H++) {
                    var lt = O[H].id, vt = O[H + 1].id;
                    U[H].xAdvance += this.getKerning(lt, vt);
                  }
                }, X.getKerning = function(O, U) {
                  for (var H = 0, lt = a(this.kern.tables), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    if (!dt.coverage.crossStream) {
                      switch (dt.version) {
                        case 0:
                          if (!dt.coverage.horizontal)
                            continue;
                          break;
                        case 1:
                          if (dt.coverage.vertical || dt.coverage.variation)
                            continue;
                          break;
                        default:
                          throw new Error("Unsupported kerning table version ".concat(dt.version));
                      }
                      var ht = 0, Pt = dt.subtable;
                      switch (dt.format) {
                        case 0:
                          var Vt = Ji(Pt.pairs, function(pe) {
                            return O - pe.left || U - pe.right;
                          });
                          Vt >= 0 && (ht = Pt.pairs[Vt].value);
                          break;
                        case 2:
                          var se = 0, $t = 0;
                          O >= Pt.leftTable.firstGlyph && O < Pt.leftTable.firstGlyph + Pt.leftTable.nGlyphs ? se = Pt.leftTable.offsets[O - Pt.leftTable.firstGlyph] : se = Pt.array.off, U >= Pt.rightTable.firstGlyph && U < Pt.rightTable.firstGlyph + Pt.rightTable.nGlyphs && ($t = Pt.rightTable.offsets[U - Pt.rightTable.firstGlyph]);
                          var ue = (se + $t - Pt.array.off) / 2;
                          ht = Pt.array.values.get(ue);
                          break;
                        case 3:
                          if (O >= Pt.glyphCount || U >= Pt.glyphCount)
                            return 0;
                          ht = Pt.kernValue[Pt.kernIndex[Pt.leftClass[O] * Pt.rightClassCount + Pt.rightClass[U]]];
                          break;
                        default:
                          throw new Error("Unsupported kerning sub-table format ".concat(dt.format));
                      }
                      dt.coverage.override ? H = ht : H += ht;
                    }
                  }
                  return H;
                }, ft;
              }(), Jl = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et;
                }
                var X = ft.prototype;
                return X.positionGlyphs = function(O, U) {
                  for (var H = 0, lt = 0, vt = 0; vt < O.length; vt++) {
                    var dt = O[vt];
                    dt.isMark ? lt = vt : (H !== lt && this.positionCluster(O, U, H, lt), H = lt = vt);
                  }
                  return H !== lt && this.positionCluster(O, U, H, lt), U;
                }, X.positionCluster = function(O, U, H, lt) {
                  var vt = O[H], dt = vt.cbox.copy();
                  vt.codePoints.length > 1 && (dt.minX += (vt.codePoints.length - 1) * dt.width / vt.codePoints.length);
                  for (var ht = -U[H].xAdvance, Pt = 0, Vt = this.font.unitsPerEm / 16, se = H + 1; se <= lt; se++) {
                    var $t = O[se], ue = $t.cbox, pe = U[se], Te = this.getCombiningClass($t.codePoints[0]);
                    if (Te !== "Not_Reordered") {
                      switch (pe.xOffset = pe.yOffset = 0, Te) {
                        case "Double_Above":
                        case "Double_Below":
                          pe.xOffset += dt.minX - ue.width / 2 - ue.minX;
                          break;
                        case "Attached_Below_Left":
                        case "Below_Left":
                        case "Above_Left":
                          pe.xOffset += dt.minX - ue.minX;
                          break;
                        case "Attached_Above_Right":
                        case "Below_Right":
                        case "Above_Right":
                          pe.xOffset += dt.maxX - ue.width - ue.minX;
                          break;
                        default:
                          pe.xOffset += dt.minX + (dt.width - ue.width) / 2 - ue.minX;
                      }
                      switch (Te) {
                        case "Double_Below":
                        case "Below_Left":
                        case "Below":
                        case "Below_Right":
                        case "Attached_Below_Left":
                        case "Attached_Below":
                          (Te === "Attached_Below_Left" || Te === "Attached_Below") && (dt.minY += Vt), pe.yOffset = -dt.minY - ue.maxY, dt.minY += ue.height;
                          break;
                        case "Double_Above":
                        case "Above_Left":
                        case "Above":
                        case "Above_Right":
                        case "Attached_Above":
                        case "Attached_Above_Right":
                          (Te === "Attached_Above" || Te === "Attached_Above_Right") && (dt.maxY += Vt), pe.yOffset = dt.maxY - ue.minY, dt.maxY += ue.height;
                          break;
                      }
                      pe.xAdvance = pe.yAdvance = 0, pe.xOffset += ht, pe.yOffset += Pt;
                    } else
                      ht -= pe.xAdvance, Pt -= pe.yAdvance;
                  }
                }, X.getCombiningClass = function(O) {
                  var U = D.getCombiningClass(O);
                  if ((O & -256) === 3584) {
                    if (U === "Not_Reordered")
                      switch (O) {
                        case 3633:
                        case 3636:
                        case 3637:
                        case 3638:
                        case 3639:
                        case 3655:
                        case 3660:
                        case 3645:
                        case 3662:
                          return "Above_Right";
                        case 3761:
                        case 3764:
                        case 3765:
                        case 3766:
                        case 3767:
                        case 3771:
                        case 3788:
                        case 3789:
                          return "Above";
                        case 3772:
                          return "Below";
                      }
                    else if (O === 3642)
                      return "Below_Right";
                  }
                  switch (U) {
                    case "CCC10":
                    case "CCC11":
                    case "CCC12":
                    case "CCC13":
                    case "CCC14":
                    case "CCC15":
                    case "CCC16":
                    case "CCC17":
                    case "CCC18":
                    case "CCC20":
                    case "CCC22":
                      return "Below";
                    case "CCC23":
                      return "Attached_Above";
                    case "CCC24":
                      return "Above_Right";
                    case "CCC25":
                    case "CCC19":
                      return "Above_Left";
                    case "CCC26":
                      return "Above";
                    case "CCC21":
                      break;
                    case "CCC27":
                    case "CCC28":
                    case "CCC30":
                    case "CCC31":
                    case "CCC33":
                    case "CCC34":
                    case "CCC35":
                    case "CCC36":
                      return "Above";
                    case "CCC29":
                    case "CCC32":
                      return "Below";
                    case "CCC103":
                      return "Below_Right";
                    case "CCC107":
                      return "Above_Right";
                    case "CCC118":
                      return "Below";
                    case "CCC122":
                      return "Above";
                    case "CCC129":
                    case "CCC132":
                      return "Below";
                    case "CCC130":
                      return "Above";
                  }
                  return U;
                }, ft;
              }(), qa = /* @__PURE__ */ function() {
                function ft(et, O, U, H) {
                  et === void 0 && (et = 1 / 0), O === void 0 && (O = 1 / 0), U === void 0 && (U = -1 / 0), H === void 0 && (H = -1 / 0), this.minX = et, this.minY = O, this.maxX = U, this.maxY = H;
                }
                var X = ft.prototype;
                return X.addPoint = function(O, U) {
                  Math.abs(O) !== 1 / 0 && (O < this.minX && (this.minX = O), O > this.maxX && (this.maxX = O)), Math.abs(U) !== 1 / 0 && (U < this.minY && (this.minY = U), U > this.maxY && (this.maxY = U));
                }, X.copy = function() {
                  return new ft(this.minX, this.minY, this.maxX, this.maxY);
                }, i(ft, [{
                  key: "width",
                  get: function() {
                    return this.maxX - this.minX;
                  }
                  /**
                   * The height of the bounding box
                   * @type {number}
                   */
                }, {
                  key: "height",
                  get: function() {
                    return this.maxY - this.minY;
                  }
                }]), ft;
              }(), _a = {
                Caucasian_Albanian: "aghb",
                Arabic: "arab",
                Imperial_Aramaic: "armi",
                Armenian: "armn",
                Avestan: "avst",
                Balinese: "bali",
                Bamum: "bamu",
                Bassa_Vah: "bass",
                Batak: "batk",
                Bengali: ["bng2", "beng"],
                Bopomofo: "bopo",
                Brahmi: "brah",
                Braille: "brai",
                Buginese: "bugi",
                Buhid: "buhd",
                Chakma: "cakm",
                Canadian_Aboriginal: "cans",
                Carian: "cari",
                Cham: "cham",
                Cherokee: "cher",
                Coptic: "copt",
                Cypriot: "cprt",
                Cyrillic: "cyrl",
                Devanagari: ["dev2", "deva"],
                Deseret: "dsrt",
                Duployan: "dupl",
                Egyptian_Hieroglyphs: "egyp",
                Elbasan: "elba",
                Ethiopic: "ethi",
                Georgian: "geor",
                Glagolitic: "glag",
                Gothic: "goth",
                Grantha: "gran",
                Greek: "grek",
                Gujarati: ["gjr2", "gujr"],
                Gurmukhi: ["gur2", "guru"],
                Hangul: "hang",
                Han: "hani",
                Hanunoo: "hano",
                Hebrew: "hebr",
                Hiragana: "hira",
                Pahawh_Hmong: "hmng",
                Katakana_Or_Hiragana: "hrkt",
                Old_Italic: "ital",
                Javanese: "java",
                Kayah_Li: "kali",
                Katakana: "kana",
                Kharoshthi: "khar",
                Khmer: "khmr",
                Khojki: "khoj",
                Kannada: ["knd2", "knda"],
                Kaithi: "kthi",
                Tai_Tham: "lana",
                Lao: "lao ",
                Latin: "latn",
                Lepcha: "lepc",
                Limbu: "limb",
                Linear_A: "lina",
                Linear_B: "linb",
                Lisu: "lisu",
                Lycian: "lyci",
                Lydian: "lydi",
                Mahajani: "mahj",
                Mandaic: "mand",
                Manichaean: "mani",
                Mende_Kikakui: "mend",
                Meroitic_Cursive: "merc",
                Meroitic_Hieroglyphs: "mero",
                Malayalam: ["mlm2", "mlym"],
                Modi: "modi",
                Mongolian: "mong",
                Mro: "mroo",
                Meetei_Mayek: "mtei",
                Myanmar: ["mym2", "mymr"],
                Old_North_Arabian: "narb",
                Nabataean: "nbat",
                Nko: "nko ",
                Ogham: "ogam",
                Ol_Chiki: "olck",
                Old_Turkic: "orkh",
                Oriya: ["ory2", "orya"],
                Osmanya: "osma",
                Palmyrene: "palm",
                Pau_Cin_Hau: "pauc",
                Old_Permic: "perm",
                Phags_Pa: "phag",
                Inscriptional_Pahlavi: "phli",
                Psalter_Pahlavi: "phlp",
                Phoenician: "phnx",
                Miao: "plrd",
                Inscriptional_Parthian: "prti",
                Rejang: "rjng",
                Runic: "runr",
                Samaritan: "samr",
                Old_South_Arabian: "sarb",
                Saurashtra: "saur",
                Shavian: "shaw",
                Sharada: "shrd",
                Siddham: "sidd",
                Khudawadi: "sind",
                Sinhala: "sinh",
                Sora_Sompeng: "sora",
                Sundanese: "sund",
                Syloti_Nagri: "sylo",
                Syriac: "syrc",
                Tagbanwa: "tagb",
                Takri: "takr",
                Tai_Le: "tale",
                New_Tai_Lue: "talu",
                Tamil: ["tml2", "taml"],
                Tai_Viet: "tavt",
                Telugu: ["tel2", "telu"],
                Tifinagh: "tfng",
                Tagalog: "tglg",
                Thaana: "thaa",
                Thai: "thai",
                Tibetan: "tibt",
                Tirhuta: "tirh",
                Ugaritic: "ugar",
                Vai: "vai ",
                Warang_Citi: "wara",
                Old_Persian: "xpeo",
                Cuneiform: "xsux",
                Yi: "yi  ",
                Inherited: "zinh",
                Common: "zyyy",
                Unknown: "zzzz"
              }, Ko = {};
              for (var Jo in _a) {
                var Qo = _a[Jo];
                if (Array.isArray(Qo))
                  for (var Ql = a(Qo), _s; !(_s = Ql()).done; ) {
                    var $l = _s.value;
                    Ko[$l] = Jo;
                  }
                else
                  Ko[Qo] = Jo;
              }
              function ql(ft) {
                return Ko[ft];
              }
              function _l(ft) {
                for (var X = ft.length, et = 0; et < X; ) {
                  var O = ft.charCodeAt(et++);
                  if (55296 <= O && O <= 56319 && et < X) {
                    var U = ft.charCodeAt(et);
                    56320 <= U && U <= 57343 && (et++, O = ((O & 1023) << 10) + (U & 1023) + 65536);
                  }
                  var H = D.getScript(O);
                  if (H !== "Common" && H !== "Inherited" && H !== "Unknown")
                    return _a[H];
                }
                return _a.Unknown;
              }
              function tu(ft) {
                for (var X = 0; X < ft.length; X++) {
                  var et = ft[X], O = D.getScript(et);
                  if (O !== "Common" && O !== "Inherited" && O !== "Unknown")
                    return _a[O];
                }
                return _a.Unknown;
              }
              var eu = {
                arab: !0,
                // Arabic
                hebr: !0,
                // Hebrew
                syrc: !0,
                // Syriac
                thaa: !0,
                // Thaana
                cprt: !0,
                // Cypriot Syllabary
                khar: !0,
                // Kharosthi
                phnx: !0,
                // Phoenician
                "nko ": !0,
                // N'Ko
                lydi: !0,
                // Lydian
                avst: !0,
                // Avestan
                armi: !0,
                // Imperial Aramaic
                phli: !0,
                // Inscriptional Pahlavi
                prti: !0,
                // Inscriptional Parthian
                sarb: !0,
                // Old South Arabian
                orkh: !0,
                // Old Turkic, Orkhon Runic
                samr: !0,
                // Samaritan
                mand: !0,
                // Mandaic, Mandaean
                merc: !0,
                // Meroitic Cursive
                mero: !0,
                // Meroitic Hieroglyphs
                // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)
                mani: !0,
                // Manichaean
                mend: !0,
                // Mende Kikakui
                nbat: !0,
                // Nabataean
                narb: !0,
                // Old North Arabian
                palm: !0,
                // Palmyrene
                phlp: !0
                // Psalter Pahlavi
              };
              function t0(ft) {
                return eu[ft] ? "rtl" : "ltr";
              }
              for (var ru = /* @__PURE__ */ function() {
                function ft(X, et, O, U, H) {
                  if (this.glyphs = X, this.positions = null, this.script = O, this.language = U || null, this.direction = H || t0(O), this.features = {}, Array.isArray(et))
                    for (var lt = a(et), vt; !(vt = lt()).done; ) {
                      var dt = vt.value;
                      this.features[dt] = !0;
                    }
                  else
                    typeof et == "object" && (this.features = et);
                }
                return i(ft, [{
                  key: "advanceWidth",
                  get: function() {
                    for (var et = 0, O = a(this.positions), U; !(U = O()).done; ) {
                      var H = U.value;
                      et += H.xAdvance;
                    }
                    return et;
                  }
                  /**
                   * The total advance height of the run.
                   * @type {number}
                   */
                }, {
                  key: "advanceHeight",
                  get: function() {
                    for (var et = 0, O = a(this.positions), U; !(U = O()).done; ) {
                      var H = U.value;
                      et += H.yAdvance;
                    }
                    return et;
                  }
                  /**
                   * The bounding box containing all glyphs in the run.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    for (var et = new qa(), O = 0, U = 0, H = 0; H < this.glyphs.length; H++) {
                      var lt = this.glyphs[H], vt = this.positions[H], dt = lt.bbox;
                      et.addPoint(dt.minX + O + vt.xOffset, dt.minY + U + vt.yOffset), et.addPoint(dt.maxX + O + vt.xOffset, dt.maxY + U + vt.yOffset), O += vt.xAdvance, U += vt.yAdvance;
                    }
                    return et;
                  }
                }]), ft;
              }(), nu = function(X, et, O, U) {
                X === void 0 && (X = 0), et === void 0 && (et = 0), O === void 0 && (O = 0), U === void 0 && (U = 0), this.xAdvance = X, this.yAdvance = et, this.xOffset = O, this.yOffset = U;
              }, Ua = {
                allTypographicFeatures: {
                  code: 0,
                  exclusive: !1,
                  allTypeFeatures: 0
                },
                ligatures: {
                  code: 1,
                  exclusive: !1,
                  requiredLigatures: 0,
                  commonLigatures: 2,
                  rareLigatures: 4,
                  // logos: 6
                  rebusPictures: 8,
                  diphthongLigatures: 10,
                  squaredLigatures: 12,
                  abbrevSquaredLigatures: 14,
                  symbolLigatures: 16,
                  contextualLigatures: 18,
                  historicalLigatures: 20
                },
                cursiveConnection: {
                  code: 2,
                  exclusive: !0,
                  unconnected: 0,
                  partiallyConnected: 1,
                  cursive: 2
                },
                letterCase: {
                  code: 3,
                  exclusive: !0
                },
                // upperAndLowerCase: 0          # deprecated
                // allCaps: 1                    # deprecated
                // allLowerCase: 2               # deprecated
                // smallCaps: 3                  # deprecated
                // initialCaps: 4                # deprecated
                // initialCapsAndSmallCaps: 5    # deprecated
                verticalSubstitution: {
                  code: 4,
                  exclusive: !1,
                  substituteVerticalForms: 0
                },
                linguisticRearrangement: {
                  code: 5,
                  exclusive: !1,
                  linguisticRearrangement: 0
                },
                numberSpacing: {
                  code: 6,
                  exclusive: !0,
                  monospacedNumbers: 0,
                  proportionalNumbers: 1,
                  thirdWidthNumbers: 2,
                  quarterWidthNumbers: 3
                },
                smartSwash: {
                  code: 8,
                  exclusive: !1,
                  wordInitialSwashes: 0,
                  wordFinalSwashes: 2,
                  // lineInitialSwashes: 4
                  // lineFinalSwashes: 6
                  nonFinalSwashes: 8
                },
                diacritics: {
                  code: 9,
                  exclusive: !0,
                  showDiacritics: 0,
                  hideDiacritics: 1,
                  decomposeDiacritics: 2
                },
                verticalPosition: {
                  code: 10,
                  exclusive: !0,
                  normalPosition: 0,
                  superiors: 1,
                  inferiors: 2,
                  ordinals: 3,
                  scientificInferiors: 4
                },
                fractions: {
                  code: 11,
                  exclusive: !0,
                  noFractions: 0,
                  verticalFractions: 1,
                  diagonalFractions: 2
                },
                overlappingCharacters: {
                  code: 13,
                  exclusive: !1,
                  preventOverlap: 0
                },
                typographicExtras: {
                  code: 14,
                  exclusive: !1,
                  // hyphensToEmDash: 0
                  // hyphenToEnDash: 2
                  slashedZero: 4
                },
                // formInterrobang: 6
                // smartQuotes: 8
                // periodsToEllipsis: 10
                mathematicalExtras: {
                  code: 15,
                  exclusive: !1,
                  // hyphenToMinus: 0
                  // asteristoMultiply: 2
                  // slashToDivide: 4
                  // inequalityLigatures: 6
                  // exponents: 8
                  mathematicalGreek: 10
                },
                ornamentSets: {
                  code: 16,
                  exclusive: !0,
                  noOrnaments: 0,
                  dingbats: 1,
                  piCharacters: 2,
                  fleurons: 3,
                  decorativeBorders: 4,
                  internationalSymbols: 5,
                  mathSymbols: 6
                },
                characterAlternatives: {
                  code: 17,
                  exclusive: !0,
                  noAlternates: 0
                },
                // user defined options
                designComplexity: {
                  code: 18,
                  exclusive: !0,
                  designLevel1: 0,
                  designLevel2: 1,
                  designLevel3: 2,
                  designLevel4: 3,
                  designLevel5: 4
                },
                styleOptions: {
                  code: 19,
                  exclusive: !0,
                  noStyleOptions: 0,
                  displayText: 1,
                  engravedText: 2,
                  illuminatedCaps: 3,
                  titlingCaps: 4,
                  tallCaps: 5
                },
                characterShape: {
                  code: 20,
                  exclusive: !0,
                  traditionalCharacters: 0,
                  simplifiedCharacters: 1,
                  JIS1978Characters: 2,
                  JIS1983Characters: 3,
                  JIS1990Characters: 4,
                  traditionalAltOne: 5,
                  traditionalAltTwo: 6,
                  traditionalAltThree: 7,
                  traditionalAltFour: 8,
                  traditionalAltFive: 9,
                  expertCharacters: 10,
                  JIS2004Characters: 11,
                  hojoCharacters: 12,
                  NLCCharacters: 13,
                  traditionalNamesCharacters: 14
                },
                numberCase: {
                  code: 21,
                  exclusive: !0,
                  lowerCaseNumbers: 0,
                  upperCaseNumbers: 1
                },
                textSpacing: {
                  code: 22,
                  exclusive: !0,
                  proportionalText: 0,
                  monospacedText: 1,
                  halfWidthText: 2,
                  thirdWidthText: 3,
                  quarterWidthText: 4,
                  altProportionalText: 5,
                  altHalfWidthText: 6
                },
                transliteration: {
                  code: 23,
                  exclusive: !0,
                  noTransliteration: 0
                },
                // hanjaToHangul: 1
                // hiraganaToKatakana: 2
                // katakanaToHiragana: 3
                // kanaToRomanization: 4
                // romanizationToHiragana: 5
                // romanizationToKatakana: 6
                // hanjaToHangulAltOne: 7
                // hanjaToHangulAltTwo: 8
                // hanjaToHangulAltThree: 9
                annotation: {
                  code: 24,
                  exclusive: !0,
                  noAnnotation: 0,
                  boxAnnotation: 1,
                  roundedBoxAnnotation: 2,
                  circleAnnotation: 3,
                  invertedCircleAnnotation: 4,
                  parenthesisAnnotation: 5,
                  periodAnnotation: 6,
                  romanNumeralAnnotation: 7,
                  diamondAnnotation: 8,
                  invertedBoxAnnotation: 9,
                  invertedRoundedBoxAnnotation: 10
                },
                kanaSpacing: {
                  code: 25,
                  exclusive: !0,
                  fullWidthKana: 0,
                  proportionalKana: 1
                },
                ideographicSpacing: {
                  code: 26,
                  exclusive: !0,
                  fullWidthIdeographs: 0,
                  proportionalIdeographs: 1,
                  halfWidthIdeographs: 2
                },
                unicodeDecomposition: {
                  code: 27,
                  exclusive: !1,
                  canonicalComposition: 0,
                  compatibilityComposition: 2,
                  transcodingComposition: 4
                },
                rubyKana: {
                  code: 28,
                  exclusive: !1,
                  // noRubyKana: 0     # deprecated - use rubyKanaOff instead
                  // rubyKana: 1     # deprecated - use rubyKanaOn instead
                  rubyKana: 2
                },
                CJKSymbolAlternatives: {
                  code: 29,
                  exclusive: !0,
                  noCJKSymbolAlternatives: 0,
                  CJKSymbolAltOne: 1,
                  CJKSymbolAltTwo: 2,
                  CJKSymbolAltThree: 3,
                  CJKSymbolAltFour: 4,
                  CJKSymbolAltFive: 5
                },
                ideographicAlternatives: {
                  code: 30,
                  exclusive: !0,
                  noIdeographicAlternatives: 0,
                  ideographicAltOne: 1,
                  ideographicAltTwo: 2,
                  ideographicAltThree: 3,
                  ideographicAltFour: 4,
                  ideographicAltFive: 5
                },
                CJKVerticalRomanPlacement: {
                  code: 31,
                  exclusive: !0,
                  CJKVerticalRomanCentered: 0,
                  CJKVerticalRomanHBaseline: 1
                },
                italicCJKRoman: {
                  code: 32,
                  exclusive: !1,
                  // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead
                  // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead
                  CJKItalicRoman: 2
                },
                caseSensitiveLayout: {
                  code: 33,
                  exclusive: !1,
                  caseSensitiveLayout: 0,
                  caseSensitiveSpacing: 2
                },
                alternateKana: {
                  code: 34,
                  exclusive: !1,
                  alternateHorizKana: 0,
                  alternateVertKana: 2
                },
                stylisticAlternatives: {
                  code: 35,
                  exclusive: !1,
                  noStylisticAlternates: 0,
                  stylisticAltOne: 2,
                  stylisticAltTwo: 4,
                  stylisticAltThree: 6,
                  stylisticAltFour: 8,
                  stylisticAltFive: 10,
                  stylisticAltSix: 12,
                  stylisticAltSeven: 14,
                  stylisticAltEight: 16,
                  stylisticAltNine: 18,
                  stylisticAltTen: 20,
                  stylisticAltEleven: 22,
                  stylisticAltTwelve: 24,
                  stylisticAltThirteen: 26,
                  stylisticAltFourteen: 28,
                  stylisticAltFifteen: 30,
                  stylisticAltSixteen: 32,
                  stylisticAltSeventeen: 34,
                  stylisticAltEighteen: 36,
                  stylisticAltNineteen: 38,
                  stylisticAltTwenty: 40
                },
                contextualAlternates: {
                  code: 36,
                  exclusive: !1,
                  contextualAlternates: 0,
                  swashAlternates: 2,
                  contextualSwashAlternates: 4
                },
                lowerCase: {
                  code: 37,
                  exclusive: !0,
                  defaultLowerCase: 0,
                  lowerCaseSmallCaps: 1,
                  lowerCasePetiteCaps: 2
                },
                upperCase: {
                  code: 38,
                  exclusive: !0,
                  defaultUpperCase: 0,
                  upperCaseSmallCaps: 1,
                  upperCasePetiteCaps: 2
                },
                languageTag: {
                  // indices into ltag table
                  code: 39,
                  exclusive: !0
                },
                CJKRomanSpacing: {
                  code: 103,
                  exclusive: !0,
                  halfWidthCJKRoman: 0,
                  proportionalCJKRoman: 1,
                  defaultCJKRoman: 2,
                  fullWidthCJKRoman: 3
                }
              }, Me = function(X, et) {
                return [Ua[X].code, Ua[X][et]];
              }, Qi = {
                rlig: Me("ligatures", "requiredLigatures"),
                clig: Me("ligatures", "contextualLigatures"),
                dlig: Me("ligatures", "rareLigatures"),
                hlig: Me("ligatures", "historicalLigatures"),
                liga: Me("ligatures", "commonLigatures"),
                hist: Me("ligatures", "historicalLigatures"),
                // ??
                smcp: Me("lowerCase", "lowerCaseSmallCaps"),
                pcap: Me("lowerCase", "lowerCasePetiteCaps"),
                frac: Me("fractions", "diagonalFractions"),
                dnom: Me("fractions", "diagonalFractions"),
                // ??
                numr: Me("fractions", "diagonalFractions"),
                // ??
                afrc: Me("fractions", "verticalFractions"),
                // aalt
                // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?
                // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?
                // unic, vatu, vhal, vjmo, vpal, vrt2
                // dist -> trak table?
                // kern, vkrn -> kern table
                // lfbd + opbd + rtbd -> opbd table?
                // mark, mkmk -> acnt table?
                // locl -> languageTag + ltag table
                case: Me("caseSensitiveLayout", "caseSensitiveLayout"),
                // also caseSensitiveSpacing
                ccmp: Me("unicodeDecomposition", "canonicalComposition"),
                // compatibilityComposition?
                cpct: Me("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                // guess..., probably not given below
                valt: Me("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                swsh: Me("contextualAlternates", "swashAlternates"),
                cswh: Me("contextualAlternates", "contextualSwashAlternates"),
                curs: Me("cursiveConnection", "cursive"),
                // ??
                c2pc: Me("upperCase", "upperCasePetiteCaps"),
                c2sc: Me("upperCase", "upperCaseSmallCaps"),
                init: Me("smartSwash", "wordInitialSwashes"),
                // ??
                fin2: Me("smartSwash", "wordFinalSwashes"),
                // ??
                medi: Me("smartSwash", "nonFinalSwashes"),
                // ??
                med2: Me("smartSwash", "nonFinalSwashes"),
                // ??
                fin3: Me("smartSwash", "wordFinalSwashes"),
                // ??
                fina: Me("smartSwash", "wordFinalSwashes"),
                // ??
                pkna: Me("kanaSpacing", "proportionalKana"),
                half: Me("textSpacing", "halfWidthText"),
                // also HalfWidthCJKRoman, HalfWidthIdeographs?
                halt: Me("textSpacing", "altHalfWidthText"),
                hkna: Me("alternateKana", "alternateHorizKana"),
                vkna: Me("alternateKana", "alternateVertKana"),
                // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated
                ital: Me("italicCJKRoman", "CJKItalicRoman"),
                lnum: Me("numberCase", "upperCaseNumbers"),
                onum: Me("numberCase", "lowerCaseNumbers"),
                mgrk: Me("mathematicalExtras", "mathematicalGreek"),
                // nalt: not enough info. what type of annotation?
                // ornm: ditto, which ornament style?
                calt: Me("contextualAlternates", "contextualAlternates"),
                // or more?
                vrt2: Me("verticalSubstitution", "substituteVerticalForms"),
                // oh... below?
                vert: Me("verticalSubstitution", "substituteVerticalForms"),
                tnum: Me("numberSpacing", "monospacedNumbers"),
                pnum: Me("numberSpacing", "proportionalNumbers"),
                sups: Me("verticalPosition", "superiors"),
                subs: Me("verticalPosition", "inferiors"),
                ordn: Me("verticalPosition", "ordinals"),
                pwid: Me("textSpacing", "proportionalText"),
                hwid: Me("textSpacing", "halfWidthText"),
                qwid: Me("textSpacing", "quarterWidthText"),
                // also QuarterWidthNumbers?
                twid: Me("textSpacing", "thirdWidthText"),
                // also ThirdWidthNumbers?
                fwid: Me("textSpacing", "proportionalText"),
                //??
                palt: Me("textSpacing", "altProportionalText"),
                trad: Me("characterShape", "traditionalCharacters"),
                smpl: Me("characterShape", "simplifiedCharacters"),
                jp78: Me("characterShape", "JIS1978Characters"),
                jp83: Me("characterShape", "JIS1983Characters"),
                jp90: Me("characterShape", "JIS1990Characters"),
                jp04: Me("characterShape", "JIS2004Characters"),
                expt: Me("characterShape", "expertCharacters"),
                hojo: Me("characterShape", "hojoCharacters"),
                nlck: Me("characterShape", "NLCCharacters"),
                tnam: Me("characterShape", "traditionalNamesCharacters"),
                ruby: Me("rubyKana", "rubyKana"),
                titl: Me("styleOptions", "titlingCaps"),
                zero: Me("typographicExtras", "slashedZero"),
                ss01: Me("stylisticAlternatives", "stylisticAltOne"),
                ss02: Me("stylisticAlternatives", "stylisticAltTwo"),
                ss03: Me("stylisticAlternatives", "stylisticAltThree"),
                ss04: Me("stylisticAlternatives", "stylisticAltFour"),
                ss05: Me("stylisticAlternatives", "stylisticAltFive"),
                ss06: Me("stylisticAlternatives", "stylisticAltSix"),
                ss07: Me("stylisticAlternatives", "stylisticAltSeven"),
                ss08: Me("stylisticAlternatives", "stylisticAltEight"),
                ss09: Me("stylisticAlternatives", "stylisticAltNine"),
                ss10: Me("stylisticAlternatives", "stylisticAltTen"),
                ss11: Me("stylisticAlternatives", "stylisticAltEleven"),
                ss12: Me("stylisticAlternatives", "stylisticAltTwelve"),
                ss13: Me("stylisticAlternatives", "stylisticAltThirteen"),
                ss14: Me("stylisticAlternatives", "stylisticAltFourteen"),
                ss15: Me("stylisticAlternatives", "stylisticAltFifteen"),
                ss16: Me("stylisticAlternatives", "stylisticAltSixteen"),
                ss17: Me("stylisticAlternatives", "stylisticAltSeventeen"),
                ss18: Me("stylisticAlternatives", "stylisticAltEighteen"),
                ss19: Me("stylisticAlternatives", "stylisticAltNineteen"),
                ss20: Me("stylisticAlternatives", "stylisticAltTwenty")
              }, $i = 1; $i <= 99; $i++)
                Qi["cv".concat("00".concat($i).slice(-2))] = [Ua.characterAlternatives.code, $i];
              var za = {};
              for (var e0 in Qi) {
                var qi = Qi[e0];
                za[qi[0]] == null && (za[qi[0]] = {}), za[qi[0]][qi[1]] = e0;
              }
              function au(ft) {
                var X = {};
                for (var et in ft) {
                  var O = void 0;
                  (O = Qi[et]) && (X[O[0]] == null && (X[O[0]] = {}), X[O[0]][O[1]] = ft[et]);
                }
                return X;
              }
              function r0(ft) {
                var X = ft[0], et = ft[1];
                if (isNaN(X))
                  var O = Ua[X] && Ua[X].code;
                else
                  var O = X;
                if (isNaN(et))
                  var U = Ua[X] && Ua[X][et];
                else
                  var U = et;
                return [O, U];
              }
              function iu(ft) {
                var X = {};
                if (Array.isArray(ft))
                  for (var et = 0; et < ft.length; et++) {
                    var O = void 0, U = r0(ft[et]);
                    (O = za[U[0]] && za[U[0]][U[1]]) && (X[O] = !0);
                  }
                else if (typeof ft == "object")
                  for (var H in ft) {
                    var lt = ft[H];
                    for (var vt in lt) {
                      var dt = void 0, ht = r0([H, vt]);
                      lt[vt] && (dt = za[ht[0]] && za[ht[0]][ht[1]]) && (X[dt] = !0);
                    }
                  }
                return Object.keys(X);
              }
              var wi, _i = (wi = /* @__PURE__ */ function() {
                function ft(et) {
                  this.table = et;
                }
                var X = ft.prototype;
                return X.lookup = function(O) {
                  switch (this.table.version) {
                    case 0:
                      return this.table.values.getItem(O);
                    case 2:
                    case 4: {
                      for (var U = 0, H = this.table.binarySearchHeader.nUnits - 1; U <= H; ) {
                        var lt = U + H >> 1, vt = this.table.segments[lt];
                        if (vt.firstGlyph === 65535)
                          return null;
                        if (O < vt.firstGlyph)
                          H = lt - 1;
                        else if (O > vt.lastGlyph)
                          U = lt + 1;
                        else
                          return this.table.version === 2 ? vt.value : vt.values[O - vt.firstGlyph];
                      }
                      return null;
                    }
                    case 6: {
                      for (var dt = 0, ht = this.table.binarySearchHeader.nUnits - 1; dt <= ht; ) {
                        var lt = dt + ht >> 1, vt = this.table.segments[lt];
                        if (vt.glyph === 65535)
                          return null;
                        if (O < vt.glyph)
                          ht = lt - 1;
                        else if (O > vt.glyph)
                          dt = lt + 1;
                        else
                          return vt.value;
                      }
                      return null;
                    }
                    case 8:
                      return this.table.values[O - this.table.firstGlyph];
                    default:
                      throw new Error("Unknown lookup table format: ".concat(this.table.version));
                  }
                }, X.glyphsForValue = function(O) {
                  var U = [];
                  switch (this.table.version) {
                    case 2:
                    case 4: {
                      for (var H = a(this.table.segments), lt; !(lt = H()).done; ) {
                        var vt = lt.value;
                        if (this.table.version === 2 && vt.value === O)
                          U.push.apply(U, $a(vt.firstGlyph, vt.lastGlyph + 1));
                        else
                          for (var dt = 0; dt < vt.values.length; dt++)
                            vt.values[dt] === O && U.push(vt.firstGlyph + dt);
                      }
                      break;
                    }
                    case 6: {
                      for (var ht = a(this.table.segments), Pt; !(Pt = ht()).done; ) {
                        var Vt = Pt.value;
                        Vt.value === O && U.push(Vt.glyph);
                      }
                      break;
                    }
                    case 8: {
                      for (var se = 0; se < this.table.values.length; se++)
                        this.table.values[se] === O && U.push(this.table.firstGlyph + se);
                      break;
                    }
                    default:
                      throw new Error("Unknown lookup table format: ".concat(this.table.version));
                  }
                  return U;
                }, ft;
              }(), M(wi.prototype, "glyphsForValue", [K], Object.getOwnPropertyDescriptor(wi.prototype, "glyphsForValue"), wi.prototype), wi), ou = 0, n0 = 0, a0 = 1, i0 = 2, su = 16384, fu = /* @__PURE__ */ function() {
                function ft(et) {
                  this.stateTable = et, this.lookupTable = new _i(et.classTable);
                }
                var X = ft.prototype;
                return X.process = function(O, U, H) {
                  for (var lt = ou, vt = U ? O.length - 1 : 0, dt = U ? -1 : 1; dt === 1 && vt <= O.length || dt === -1 && vt >= -1; ) {
                    var ht = null, Pt = a0, Vt = !0;
                    vt === O.length || vt === -1 ? Pt = n0 : (ht = O[vt], ht.id === 65535 ? Pt = i0 : (Pt = this.lookupTable.lookup(ht.id), Pt == null && (Pt = a0)));
                    var se = this.stateTable.stateArray.getItem(lt), $t = se[Pt], ue = this.stateTable.entryTable.getItem($t);
                    Pt !== n0 && Pt !== i0 && (H(ht, ue, vt), Vt = !(ue.flags & su)), lt = ue.newState, Vt && (vt += dt);
                  }
                  return O;
                }, X.traverse = function(O, U, H) {
                  if (U === void 0 && (U = 0), H === void 0 && (H = /* @__PURE__ */ new Set()), !H.has(U)) {
                    H.add(U);
                    for (var lt = this.stateTable, vt = lt.nClasses, dt = lt.stateArray, ht = lt.entryTable, Pt = dt.getItem(U), Vt = 4; Vt < vt; Vt++)
                      for (var se = Pt[Vt], $t = ht.getItem(se), ue = a(this.lookupTable.glyphsForValue(Vt)), pe; !(pe = ue()).done; ) {
                        var Te = pe.value;
                        O.enter && O.enter(Te, $t), $t.newState !== 0 && this.traverse(O, $t.newState, H), O.exit && O.exit(Te, $t);
                      }
                  }
                }, ft;
              }(), Si, lu = 32768, uu = 8192, cu = 15, o0 = 32768, hu = 32768, du = 8192, vu = 2147483648, pu = 1073741824, gu = 1073741823, s0 = 4194304, yu = 2048, mu = 1024, xu = 992, bu = 31, wu = (Si = /* @__PURE__ */ function() {
                function ft(et) {
                  this.processIndicRearragement = this.processIndicRearragement.bind(this), this.processContextualSubstitution = this.processContextualSubstitution.bind(this), this.processLigature = this.processLigature.bind(this), this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this), this.processGlyphInsertion = this.processGlyphInsertion.bind(this), this.font = et, this.morx = et.morx, this.inputCache = null;
                }
                var X = ft.prototype;
                return X.process = function(O, U) {
                  U === void 0 && (U = {});
                  for (var H = a(this.morx.chains), lt; !(lt = H()).done; ) {
                    for (var vt = lt.value, dt = vt.defaultFlags, ht = a(vt.features), Pt; !(Pt = ht()).done; ) {
                      var Vt = Pt.value, se = void 0;
                      (se = U[Vt.featureType]) && (se[Vt.featureSetting] ? (dt &= Vt.disableFlags, dt |= Vt.enableFlags) : se[Vt.featureSetting] === !1 && (dt |= ~Vt.disableFlags, dt &= ~Vt.enableFlags));
                    }
                    for (var $t = a(vt.subtables), ue; !(ue = $t()).done; ) {
                      var pe = ue.value;
                      pe.subFeatureFlags & dt && this.processSubtable(pe, O);
                    }
                  }
                  for (var Te = O.length - 1; Te >= 0; )
                    O[Te].id === 65535 && O.splice(Te, 1), Te--;
                  return O;
                }, X.processSubtable = function(O, U) {
                  if (this.subtable = O, this.glyphs = U, this.subtable.type === 4) {
                    this.processNoncontextualSubstitutions(this.subtable, this.glyphs);
                    return;
                  }
                  this.ligatureStack = [], this.markedGlyph = null, this.firstGlyph = null, this.lastGlyph = null, this.markedIndex = null;
                  var H = this.getStateMachine(O), lt = this.getProcessor(), vt = !!(this.subtable.coverage & s0);
                  return H.process(this.glyphs, vt, lt);
                }, X.getStateMachine = function(O) {
                  return new fu(O.table.stateTable);
                }, X.getProcessor = function() {
                  switch (this.subtable.type) {
                    case 0:
                      return this.processIndicRearragement;
                    case 1:
                      return this.processContextualSubstitution;
                    case 2:
                      return this.processLigature;
                    case 4:
                      return this.processNoncontextualSubstitutions;
                    case 5:
                      return this.processGlyphInsertion;
                    default:
                      throw new Error("Invalid morx subtable type: ".concat(this.subtable.type));
                  }
                }, X.processIndicRearragement = function(O, U, H) {
                  U.flags & lu && (this.firstGlyph = H), U.flags & uu && (this.lastGlyph = H), Su(this.glyphs, U.flags & cu, this.firstGlyph, this.lastGlyph);
                }, X.processContextualSubstitution = function(O, U, H) {
                  var lt = this.subtable.table.substitutionTable.items;
                  if (U.markIndex !== 65535) {
                    var vt = lt.getItem(U.markIndex), dt = new _i(vt);
                    O = this.glyphs[this.markedGlyph];
                    var ht = dt.lookup(O.id);
                    ht && (this.glyphs[this.markedGlyph] = this.font.getGlyph(ht, O.codePoints));
                  }
                  if (U.currentIndex !== 65535) {
                    var Pt = lt.getItem(U.currentIndex), Vt = new _i(Pt);
                    O = this.glyphs[H];
                    var ht = Vt.lookup(O.id);
                    ht && (this.glyphs[H] = this.font.getGlyph(ht, O.codePoints));
                  }
                  U.flags & o0 && (this.markedGlyph = H);
                }, X.processLigature = function(O, U, H) {
                  if (U.flags & hu && this.ligatureStack.push(H), U.flags & du) {
                    for (var lt, vt = this.subtable.table.ligatureActions, dt = this.subtable.table.components, ht = this.subtable.table.ligatureList, Pt = U.action, Vt = !1, se = 0, $t = [], ue = []; !Vt; ) {
                      var pe, Te = this.ligatureStack.pop();
                      (pe = $t).unshift.apply(pe, this.glyphs[Te].codePoints);
                      var He = vt.getItem(Pt++);
                      Vt = !!(He & vu);
                      var _e = !!(He & pu), Xe = (He & gu) << 2 >> 2;
                      Xe += this.glyphs[Te].id;
                      var hr = dt.getItem(Xe);
                      if (se += hr, Vt || _e) {
                        var sr = ht.getItem(se);
                        this.glyphs[Te] = this.font.getGlyph(sr, $t), ue.push(Te), se = 0, $t = [];
                      } else
                        this.glyphs[Te] = this.font.getGlyph(65535);
                    }
                    (lt = this.ligatureStack).push.apply(lt, ue);
                  }
                }, X.processNoncontextualSubstitutions = function(O, U, H) {
                  var lt = new _i(O.table.lookupTable);
                  for (H = 0; H < U.length; H++) {
                    var vt = U[H];
                    if (vt.id !== 65535) {
                      var dt = lt.lookup(vt.id);
                      dt && (U[H] = this.font.getGlyph(dt, vt.codePoints));
                    }
                  }
                }, X._insertGlyphs = function(O, U, H, lt) {
                  for (var vt, dt = []; H--; ) {
                    var ht = this.subtable.table.insertionActions.getItem(U++);
                    dt.push(this.font.getGlyph(ht));
                  }
                  lt || O++, (vt = this.glyphs).splice.apply(vt, [O, 0].concat(dt));
                }, X.processGlyphInsertion = function(O, U, H) {
                  if (U.flags & o0 && (this.markedIndex = H), U.markedInsertIndex !== 65535) {
                    var lt = (U.flags & bu) >>> 5, vt = !!(U.flags & mu);
                    this._insertGlyphs(this.markedIndex, U.markedInsertIndex, lt, vt);
                  }
                  if (U.currentInsertIndex !== 65535) {
                    var dt = (U.flags & xu) >>> 5, ht = !!(U.flags & yu);
                    this._insertGlyphs(H, U.currentInsertIndex, dt, ht);
                  }
                }, X.getSupportedFeatures = function() {
                  for (var O = [], U = a(this.morx.chains), H; !(H = U()).done; )
                    for (var lt = H.value, vt = a(lt.features), dt; !(dt = vt()).done; ) {
                      var ht = dt.value;
                      O.push([ht.featureType, ht.featureSetting]);
                    }
                  return O;
                }, X.generateInputs = function(O) {
                  return this.inputCache || this.generateInputCache(), this.inputCache[O] || [];
                }, X.generateInputCache = function() {
                  this.inputCache = {};
                  for (var O = a(this.morx.chains), U; !(U = O()).done; )
                    for (var H = U.value, lt = H.defaultFlags, vt = a(H.subtables), dt; !(dt = vt()).done; ) {
                      var ht = dt.value;
                      ht.subFeatureFlags & lt && this.generateInputsForSubtable(ht);
                    }
                }, X.generateInputsForSubtable = function(O) {
                  var U = this;
                  if (O.type === 2) {
                    var H = !!(O.coverage & s0);
                    if (H)
                      throw new Error("Reverse subtable, not supported.");
                    this.subtable = O, this.ligatureStack = [];
                    var lt = this.getStateMachine(O), vt = this.getProcessor(), dt = [], ht = [];
                    this.glyphs = [], lt.traverse({
                      enter: function(Vt, se) {
                        var $t = U.glyphs;
                        ht.push({
                          glyphs: $t.slice(),
                          ligatureStack: U.ligatureStack.slice()
                        });
                        var ue = U.font.getGlyph(Vt);
                        dt.push(ue), $t.push(dt[dt.length - 1]), vt($t[$t.length - 1], se, $t.length - 1);
                        for (var pe = 0, Te = 0, He = 0; He < $t.length && pe <= 1; He++)
                          $t[He].id !== 65535 && (pe++, Te = $t[He].id);
                        if (pe === 1) {
                          var _e = dt.map(function(hr) {
                            return hr.id;
                          }), Xe = U.inputCache[Te];
                          Xe ? Xe.push(_e) : U.inputCache[Te] = [_e];
                        }
                      },
                      exit: function() {
                        var Vt = ht.pop();
                        U.glyphs = Vt.glyphs, U.ligatureStack = Vt.ligatureStack, dt.pop();
                      }
                    });
                  }
                }, ft;
              }(), M(Si.prototype, "getStateMachine", [K], Object.getOwnPropertyDescriptor(Si.prototype, "getStateMachine"), Si.prototype), Si);
              function Pn(ft, X, et, O, U) {
                O === void 0 && (O = !1), U === void 0 && (U = !1);
                var H = ft.splice(et[0] - (et[1] - 1), et[1]);
                U && H.reverse();
                var lt = ft.splice.apply(ft, [X[0], X[1]].concat(H));
                return O && lt.reverse(), ft.splice.apply(ft, [et[0] - (X[1] - 1), 0].concat(lt)), ft;
              }
              function Su(ft, X, et, O) {
                switch (X) {
                  case 0:
                    return ft;
                  case 1:
                    return Pn(ft, [et, 1], [O, 0]);
                  case 2:
                    return Pn(ft, [et, 0], [O, 1]);
                  case 3:
                    return Pn(ft, [et, 1], [O, 1]);
                  case 4:
                    return Pn(ft, [et, 2], [O, 0]);
                  case 5:
                    return Pn(ft, [et, 2], [O, 0], !0, !1);
                  case 6:
                    return Pn(ft, [et, 0], [O, 2]);
                  case 7:
                    return Pn(ft, [et, 0], [O, 2], !1, !0);
                  case 8:
                    return Pn(ft, [et, 1], [O, 2]);
                  case 9:
                    return Pn(ft, [et, 1], [O, 2], !1, !0);
                  case 10:
                    return Pn(ft, [et, 2], [O, 1]);
                  case 11:
                    return Pn(ft, [et, 2], [O, 1], !0, !1);
                  case 12:
                    return Pn(ft, [et, 2], [O, 2]);
                  case 13:
                    return Pn(ft, [et, 2], [O, 2], !0, !1);
                  case 14:
                    return Pn(ft, [et, 2], [O, 2], !1, !0);
                  case 15:
                    return Pn(ft, [et, 2], [O, 2], !0, !0);
                  default:
                    throw new Error("Unknown verb: ".concat(X));
                }
              }
              var Au = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et, this.morxProcessor = new wu(et), this.fallbackPosition = !1;
                }
                var X = ft.prototype;
                return X.substitute = function(O) {
                  O.direction === "rtl" && O.glyphs.reverse(), this.morxProcessor.process(O.glyphs, au(O.features));
                }, X.getAvailableFeatures = function(O, U) {
                  return iu(this.morxProcessor.getSupportedFeatures());
                }, X.stringsForGlyph = function(O) {
                  for (var U = this.morxProcessor.generateInputs(O), H = /* @__PURE__ */ new Set(), lt = a(U), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    this._addStrings(dt, 0, H, "");
                  }
                  return H;
                }, X._addStrings = function(O, U, H, lt) {
                  for (var vt = this.font._cmapProcessor.codePointsForGlyph(O[U]), dt = a(vt), ht; !(ht = dt()).done; ) {
                    var Pt = ht.value, Vt = lt + String.fromCodePoint(Pt);
                    U < O.length - 1 ? this._addStrings(O, U + 1, H, Vt) : H.add(Vt);
                  }
                }, ft;
              }(), Cu = /* @__PURE__ */ function() {
                function ft(et, O, U) {
                  this.font = et, this.script = O, this.direction = U, this.stages = [], this.globalFeatures = {}, this.allFeatures = {};
                }
                var X = ft.prototype;
                return X._addFeatures = function(O, U) {
                  for (var H = this.stages.length - 1, lt = this.stages[H], vt = a(O), dt; !(dt = vt()).done; ) {
                    var ht = dt.value;
                    this.allFeatures[ht] == null && (lt.push(ht), this.allFeatures[ht] = H, U && (this.globalFeatures[ht] = !0));
                  }
                }, X.add = function(O, U) {
                  if (U === void 0 && (U = !0), this.stages.length === 0 && this.stages.push([]), typeof O == "string" && (O = [O]), Array.isArray(O))
                    this._addFeatures(O, U);
                  else if (typeof O == "object")
                    this._addFeatures(O.global || [], !0), this._addFeatures(O.local || [], !1);
                  else
                    throw new Error("Unsupported argument to ShapingPlan#add");
                }, X.addStage = function(O, U) {
                  typeof O == "function" ? this.stages.push(O, []) : (this.stages.push([]), this.add(O, U));
                }, X.setFeatureOverrides = function(O) {
                  if (Array.isArray(O))
                    this.add(O);
                  else if (typeof O == "object") {
                    for (var U in O)
                      if (O[U])
                        this.add(U);
                      else if (this.allFeatures[U] != null) {
                        var H = this.stages[this.allFeatures[U]];
                        H.splice(H.indexOf(U), 1), delete this.allFeatures[U], delete this.globalFeatures[U];
                      }
                  }
                }, X.assignGlobalFeatures = function(O) {
                  for (var U = a(O), H; !(H = U()).done; ) {
                    var lt = H.value;
                    for (var vt in this.globalFeatures)
                      lt.features[vt] = !0;
                  }
                }, X.process = function(O, U, H) {
                  for (var lt = a(this.stages), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    typeof dt == "function" ? H || dt(this.font, U, this) : dt.length > 0 && O.applyFeatures(dt, U, H);
                  }
                }, ft;
              }(), Eu = ["rvrn"], Tu = ["ccmp", "locl", "rlig", "mark", "mkmk"], Fu = ["frac", "numr", "dnom"], Iu = ["calt", "clig", "liga", "rclt", "curs", "kern"], Du = {
                ltr: ["ltra", "ltrm"],
                rtl: ["rtla", "rtlm"]
              }, Fa = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.plan = function(et, O, U) {
                  this.planPreprocessing(et), this.planFeatures(et), this.planPostprocessing(et, U), et.assignGlobalFeatures(O), this.assignFeatures(et, O);
                }, ft.planPreprocessing = function(et) {
                  et.add({
                    global: [].concat(Eu, Du[et.direction]),
                    local: Fu
                  });
                }, ft.planFeatures = function(et) {
                }, ft.planPostprocessing = function(et, O) {
                  et.add([].concat(Tu, Iu)), et.setFeatureOverrides(O);
                }, ft.assignFeatures = function(et, O) {
                  for (var U = 0; U < O.length; U++) {
                    var H = O[U];
                    if (H.codePoints[0] === 8260) {
                      for (var lt = U, vt = U + 1; lt > 0 && D.isDigit(O[lt - 1].codePoints[0]); )
                        O[lt - 1].features.numr = !0, O[lt - 1].features.frac = !0, lt--;
                      for (; vt < O.length && D.isDigit(O[vt].codePoints[0]); )
                        O[vt].features.dnom = !0, O[vt].features.frac = !0, vt++;
                      H.features.frac = !0, U = vt - 1;
                    }
                  }
                }, ft;
              }();
              N(Fa, "zeroMarkWidths", "AFTER_GPOS");
              var Ou = new I(o("APABAAAAAAAAOAAAAf0BAv7tmi1MxDAUx7vtvjhAgcDgkEgEAnmXEBIMCYaEcygEiqBQ4FAkCE4ikUgMiiBJSAgSiUQSDMn9L9eSl6bddddug9t7yS/trevre+3r27pcNxZiG+yCfdCVv/9LeQxOwRm4AJegD27ALbgD9+ABPJF+z+BN/h7yDj5k/VOWX6SdmU5+wLWknggxDxaS8u0qiiX4uiz9XamQ3wzDMAzDMAzDMAzDVI/h959V/v7BMAzDMAzDMLlyNTNiMSdewVxbiA44B4/guz1qW58VYlMI0WsJ0W+N6kXw0spvPtdwhtkwnGM6uLaV4Xyzg3v3PM9DPfQ/sOg4xPWjipy31P8LTqbU304c/cLCUmWJLNB2Uz2U1KTeRKNmKHVMfbJC+/0loTZRH/W5cvEvBJPMbREkWt3FD1NcqXZBSpuE2Ad0PBehPtNrPtIEdYP+hiRt/V1jIiE69X4NT/uVZI3PUHE9bm5M7ePGdZWy951v7Nn6j8v1WWKP3mt6ttnsigx6VN7Vc0VomSSGqW2mGNP1muZPl7LfjNUaKNFtDGVf2fvE9O7VlBS5j333c5p/eeoOqcs1R/hIqDWLJ7TTlksirVT1SI7l8k4Yp+g3jafGcrU1RM6l9th80XOpnlN97bDNY4i4s61B0Si/ipa0uHMl6zqEjlFfCZm/TM8KmzQDjmuTAQ==", "base64")), f0 = ["isol", "fina", "fin2", "fin3", "medi", "med2", "init"], $o = {
                Non_Joining: 0,
                Left_Joining: 1,
                Right_Joining: 2,
                Dual_Joining: 3,
                Join_Causing: 3,
                ALAPH: 4,
                "DALATH RISH": 5,
                Transparent: 6
              }, Jr = "isol", Ia = "fina", qo = "fin2", Pu = "fin3", to = "medi", eo = "med2", ro = "init", Er = null, Bu = [
                //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH
                // State 0: prev was U,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [Er, Jr, 1], [Er, Jr, 2], [Er, Jr, 1], [Er, Jr, 6]],
                // State 1: prev was R or ISOL/ALAPH,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [Er, Jr, 1], [Er, Jr, 2], [Er, qo, 5], [Er, Jr, 6]],
                // State 2: prev was D/L in ISOL form,  willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [ro, Ia, 1], [ro, Ia, 3], [ro, Ia, 4], [ro, Ia, 6]],
                // State 3: prev was D in FINA form,  willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [to, Ia, 1], [to, Ia, 3], [to, Ia, 4], [to, Ia, 6]],
                // State 4: prev was FINA ALAPH,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [eo, Jr, 1], [eo, Jr, 2], [eo, qo, 5], [eo, Jr, 6]],
                // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [Jr, Jr, 1], [Jr, Jr, 2], [Jr, qo, 5], [Jr, Jr, 6]],
                // State 6: prev was DALATH/RISH,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [Er, Jr, 1], [Er, Jr, 2], [Er, Pu, 5], [Er, Jr, 6]]
              ], Da = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(O) {
                  O.add(["ccmp", "locl"]);
                  for (var U = 0; U < f0.length; U++) {
                    var H = f0[U];
                    O.addStage(H, !1);
                  }
                  O.addStage("mset");
                }, X.assignFeatures = function(O, U) {
                  ft.assignFeatures.call(this, O, U);
                  for (var H = -1, lt = 0, vt = [], dt = 0; dt < U.length; dt++) {
                    var ht = void 0, Pt = void 0, Vt = U[dt], se = Ru(Vt.codePoints[0]);
                    if (se === $o.Transparent) {
                      vt[dt] = Er;
                      continue;
                    }
                    var $t = Bu[lt][se];
                    Pt = $t[0], ht = $t[1], lt = $t[2], Pt !== Er && H !== -1 && (vt[H] = Pt), vt[dt] = ht, H = dt;
                  }
                  for (var ue = 0; ue < U.length; ue++) {
                    var pe = void 0, Vt = U[ue];
                    (pe = vt[ue]) && (Vt.features[pe] = !0);
                  }
                }, X;
              }(Fa);
              function Ru(ft) {
                var X = Ou.get(ft);
                if (X)
                  return X - 1;
                var et = D.getCategory(ft);
                return et === "Mn" || et === "Me" || et === "Cf" ? $o.Transparent : $o.Non_Joining;
              }
              var Lu = /* @__PURE__ */ function() {
                function ft(et, O) {
                  this.glyphs = et, this.reset(O);
                }
                var X = ft.prototype;
                return X.reset = function(O, U) {
                  O === void 0 && (O = {}), U === void 0 && (U = 0), this.options = O, this.flags = O.flags || {}, this.markAttachmentType = O.markAttachmentType || 0, this.index = U;
                }, X.shouldIgnore = function(O) {
                  return this.flags.ignoreMarks && O.isMark || this.flags.ignoreBaseGlyphs && O.isBase || this.flags.ignoreLigatures && O.isLigature || this.markAttachmentType && O.isMark && O.markAttachmentType !== this.markAttachmentType;
                }, X.move = function(O) {
                  for (this.index += O; 0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]); )
                    this.index += O;
                  return 0 > this.index || this.index >= this.glyphs.length ? null : this.glyphs[this.index];
                }, X.next = function() {
                  return this.move(1);
                }, X.prev = function() {
                  return this.move(-1);
                }, X.peek = function(O) {
                  O === void 0 && (O = 1);
                  var U = this.index, H = this.increment(O);
                  return this.index = U, H;
                }, X.peekIndex = function(O) {
                  O === void 0 && (O = 1);
                  var U = this.index;
                  this.increment(O);
                  var H = this.index;
                  return this.index = U, H;
                }, X.increment = function(O) {
                  O === void 0 && (O = 1);
                  var U = O < 0 ? -1 : 1;
                  for (O = Math.abs(O); O--; )
                    this.move(U);
                  return this.glyphs[this.index];
                }, i(ft, [{
                  key: "cur",
                  get: function() {
                    return this.glyphs[this.index] || null;
                  }
                }]), ft;
              }(), Nu = ["DFLT", "dflt", "latn"], no = /* @__PURE__ */ function() {
                function ft(et, O) {
                  this.font = et, this.table = O, this.script = null, this.scriptTag = null, this.language = null, this.languageTag = null, this.features = {}, this.lookups = {}, this.variationsIndex = et._variationProcessor ? this.findVariationsIndex(et._variationProcessor.normalizedCoords) : -1, this.selectScript(), this.glyphs = [], this.positions = [], this.ligatureID = 1, this.currentFeature = null;
                }
                var X = ft.prototype;
                return X.findScript = function(O) {
                  if (this.table.scriptList == null)
                    return null;
                  Array.isArray(O) || (O = [O]);
                  for (var U = a(O), H; !(H = U()).done; )
                    for (var lt = H.value, vt = a(this.table.scriptList), dt; !(dt = vt()).done; ) {
                      var ht = dt.value;
                      if (ht.tag === lt)
                        return ht;
                    }
                  return null;
                }, X.selectScript = function(O, U, H) {
                  var lt = !1, vt;
                  if (!this.script || O !== this.scriptTag) {
                    if (vt = this.findScript(O), vt || (vt = this.findScript(Nu)), !vt)
                      return this.scriptTag;
                    this.scriptTag = vt.tag, this.script = vt.script, this.language = null, this.languageTag = null, lt = !0;
                  }
                  if ((!H || H !== this.direction) && (this.direction = H || t0(O)), U && U.length < 4 && (U += " ".repeat(4 - U.length)), !U || U !== this.languageTag) {
                    this.language = null;
                    for (var dt = a(this.script.langSysRecords), ht; !(ht = dt()).done; ) {
                      var Pt = ht.value;
                      if (Pt.tag === U) {
                        this.language = Pt.langSys, this.languageTag = Pt.tag;
                        break;
                      }
                    }
                    this.language || (this.language = this.script.defaultLangSys, this.languageTag = null), lt = !0;
                  }
                  if (lt && (this.features = {}, this.language))
                    for (var Vt = a(this.language.featureIndexes), se; !(se = Vt()).done; ) {
                      var $t = se.value, ue = this.table.featureList[$t], pe = this.substituteFeatureForVariations($t);
                      this.features[ue.tag] = pe || ue.feature;
                    }
                  return this.scriptTag;
                }, X.lookupsForFeatures = function(O, U) {
                  O === void 0 && (O = []);
                  for (var H = [], lt = a(O), vt; !(vt = lt()).done; ) {
                    var dt = vt.value, ht = this.features[dt];
                    if (ht)
                      for (var Pt = a(ht.lookupListIndexes), Vt; !(Vt = Pt()).done; ) {
                        var se = Vt.value;
                        U && U.indexOf(se) !== -1 || H.push({
                          feature: dt,
                          index: se,
                          lookup: this.table.lookupList.get(se)
                        });
                      }
                  }
                  return H.sort(function($t, ue) {
                    return $t.index - ue.index;
                  }), H;
                }, X.substituteFeatureForVariations = function(O) {
                  if (this.variationsIndex === -1)
                    return null;
                  for (var U = this.table.featureVariations.featureVariationRecords[this.variationsIndex], H = U.featureTableSubstitution.substitutions, lt = a(H), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    if (dt.featureIndex === O)
                      return dt.alternateFeatureTable;
                  }
                  return null;
                }, X.findVariationsIndex = function(O) {
                  var U = this.table.featureVariations;
                  if (!U)
                    return -1;
                  for (var H = U.featureVariationRecords, lt = 0; lt < H.length; lt++) {
                    var vt = H[lt].conditionSet.conditionTable;
                    if (this.variationConditionsMatch(vt, O))
                      return lt;
                  }
                  return -1;
                }, X.variationConditionsMatch = function(O, U) {
                  return O.every(function(H) {
                    var lt = H.axisIndex < U.length ? U[H.axisIndex] : 0;
                    return H.filterRangeMinValue <= lt && lt <= H.filterRangeMaxValue;
                  });
                }, X.applyFeatures = function(O, U, H) {
                  var lt = this.lookupsForFeatures(O);
                  this.applyLookups(lt, U, H);
                }, X.applyLookups = function(O, U, H) {
                  this.glyphs = U, this.positions = H, this.glyphIterator = new Lu(U);
                  for (var lt = a(O), vt; !(vt = lt()).done; ) {
                    var dt = vt.value, ht = dt.feature, Pt = dt.lookup;
                    for (this.currentFeature = ht, this.glyphIterator.reset(Pt.flags); this.glyphIterator.index < U.length; ) {
                      if (!(ht in this.glyphIterator.cur.features)) {
                        this.glyphIterator.next();
                        continue;
                      }
                      for (var Vt = a(Pt.subTables), se; !(se = Vt()).done; ) {
                        var $t = se.value, ue = this.applyLookup(Pt.lookupType, $t);
                        if (ue)
                          break;
                      }
                      this.glyphIterator.next();
                    }
                  }
                }, X.applyLookup = function(O, U) {
                  throw new Error("applyLookup must be implemented by subclasses");
                }, X.applyLookupList = function(O) {
                  for (var U = this.glyphIterator.options, H = this.glyphIterator.index, lt = a(O), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    this.glyphIterator.reset(U, H), this.glyphIterator.increment(dt.sequenceIndex);
                    var ht = this.table.lookupList.get(dt.lookupListIndex);
                    this.glyphIterator.reset(ht.flags, this.glyphIterator.index);
                    for (var Pt = a(ht.subTables), Vt; !(Vt = Pt()).done; ) {
                      var se = Vt.value;
                      if (this.applyLookup(ht.lookupType, se))
                        break;
                    }
                  }
                  return this.glyphIterator.reset(U, H), !0;
                }, X.coverageIndex = function(O, U) {
                  switch (U == null && (U = this.glyphIterator.cur.id), O.version) {
                    case 1:
                      return O.glyphs.indexOf(U);
                    case 2:
                      for (var H = a(O.rangeRecords), lt; !(lt = H()).done; ) {
                        var vt = lt.value;
                        if (vt.start <= U && U <= vt.end)
                          return vt.startCoverageIndex + U - vt.start;
                      }
                      break;
                  }
                  return -1;
                }, X.match = function(O, U, H, lt) {
                  for (var vt = this.glyphIterator.index, dt = this.glyphIterator.increment(O), ht = 0; ht < U.length && dt && H(U[ht], dt); )
                    lt && lt.push(this.glyphIterator.index), ht++, dt = this.glyphIterator.next();
                  return this.glyphIterator.index = vt, ht < U.length ? !1 : lt || !0;
                }, X.sequenceMatches = function(O, U) {
                  return this.match(O, U, function(H, lt) {
                    return H === lt.id;
                  });
                }, X.sequenceMatchIndices = function(O, U) {
                  var H = this;
                  return this.match(O, U, function(lt, vt) {
                    return H.currentFeature in vt.features ? lt === vt.id : !1;
                  }, []);
                }, X.coverageSequenceMatches = function(O, U) {
                  var H = this;
                  return this.match(O, U, function(lt, vt) {
                    return H.coverageIndex(lt, vt.id) >= 0;
                  });
                }, X.getClassID = function(O, U) {
                  switch (U.version) {
                    case 1:
                      var H = O - U.startGlyph;
                      if (H >= 0 && H < U.classValueArray.length)
                        return U.classValueArray[H];
                      break;
                    case 2:
                      for (var lt = a(U.classRangeRecord), vt; !(vt = lt()).done; ) {
                        var dt = vt.value;
                        if (dt.start <= O && O <= dt.end)
                          return dt.class;
                      }
                      break;
                  }
                  return 0;
                }, X.classSequenceMatches = function(O, U, H) {
                  var lt = this;
                  return this.match(O, U, function(vt, dt) {
                    return vt === lt.getClassID(dt.id, H);
                  });
                }, X.applyContext = function(O) {
                  switch (O.version) {
                    case 1:
                      var U = this.coverageIndex(O.coverage);
                      if (U === -1)
                        return !1;
                      for (var H = O.ruleSets[U], lt = a(H), vt; !(vt = lt()).done; ) {
                        var dt = vt.value;
                        if (this.sequenceMatches(1, dt.input))
                          return this.applyLookupList(dt.lookupRecords);
                      }
                      break;
                    case 2:
                      if (this.coverageIndex(O.coverage) === -1 || (U = this.getClassID(this.glyphIterator.cur.id, O.classDef), U === -1))
                        return !1;
                      H = O.classSet[U];
                      for (var ht = a(H), Pt; !(Pt = ht()).done; ) {
                        var Vt = Pt.value;
                        if (this.classSequenceMatches(1, Vt.classes, O.classDef))
                          return this.applyLookupList(Vt.lookupRecords);
                      }
                      break;
                    case 3:
                      if (this.coverageSequenceMatches(0, O.coverages))
                        return this.applyLookupList(O.lookupRecords);
                      break;
                  }
                  return !1;
                }, X.applyChainingContext = function(O) {
                  switch (O.version) {
                    case 1:
                      var U = this.coverageIndex(O.coverage);
                      if (U === -1)
                        return !1;
                      for (var H = O.chainRuleSets[U], lt = a(H), vt; !(vt = lt()).done; ) {
                        var dt = vt.value;
                        if (this.sequenceMatches(-dt.backtrack.length, dt.backtrack) && this.sequenceMatches(1, dt.input) && this.sequenceMatches(1 + dt.input.length, dt.lookahead))
                          return this.applyLookupList(dt.lookupRecords);
                      }
                      break;
                    case 2:
                      if (this.coverageIndex(O.coverage) === -1)
                        return !1;
                      U = this.getClassID(this.glyphIterator.cur.id, O.inputClassDef);
                      var ht = O.chainClassSet[U];
                      if (!ht)
                        return !1;
                      for (var Pt = a(ht), Vt; !(Vt = Pt()).done; ) {
                        var se = Vt.value;
                        if (this.classSequenceMatches(-se.backtrack.length, se.backtrack, O.backtrackClassDef) && this.classSequenceMatches(1, se.input, O.inputClassDef) && this.classSequenceMatches(1 + se.input.length, se.lookahead, O.lookaheadClassDef))
                          return this.applyLookupList(se.lookupRecords);
                      }
                      break;
                    case 3:
                      if (this.coverageSequenceMatches(-O.backtrackGlyphCount, O.backtrackCoverage) && this.coverageSequenceMatches(0, O.inputCoverage) && this.coverageSequenceMatches(O.inputGlyphCount, O.lookaheadCoverage))
                        return this.applyLookupList(O.lookupRecords);
                      break;
                  }
                  return !1;
                }, ft;
              }(), ma = /* @__PURE__ */ function() {
                function ft(et, O, U, H) {
                  if (U === void 0 && (U = []), this._font = et, this.codePoints = U, this.id = O, this.features = {}, Array.isArray(H))
                    for (var lt = 0; lt < H.length; lt++) {
                      var vt = H[lt];
                      this.features[vt] = !0;
                    }
                  else
                    typeof H == "object" && Object.assign(this.features, H);
                  this.ligatureID = null, this.ligatureComponent = null, this.isLigated = !1, this.cursiveAttachment = null, this.markAttachment = null, this.shaperInfo = null, this.substituted = !1, this.isMultiplied = !1;
                }
                var X = ft.prototype;
                return X.copy = function() {
                  return new ft(this._font, this.id, this.codePoints, this.features);
                }, i(ft, [{
                  key: "id",
                  get: function() {
                    return this._id;
                  },
                  set: function(O) {
                    this._id = O, this.substituted = !0;
                    var U = this._font.GDEF;
                    if (U && U.glyphClassDef) {
                      var H = no.prototype.getClassID(O, U.glyphClassDef);
                      this.isBase = H === 1, this.isLigature = H === 2, this.isMark = H === 3, this.markAttachmentType = U.markAttachClassDef ? no.prototype.getClassID(O, U.markAttachClassDef) : 0;
                    } else
                      this.isMark = this.codePoints.length > 0 && this.codePoints.every(D.isMark), this.isBase = !this.isMark, this.isLigature = this.codePoints.length > 1, this.markAttachmentType = 0;
                  }
                }]), ft;
              }(), l0 = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(O) {
                  O.add(["ljmo", "vjmo", "tjmo"], !1);
                }, X.assignFeatures = function(O, U) {
                  for (var H = 0, lt = 0; lt < U.length; ) {
                    var vt = void 0, dt = U[lt], ht = dt.codePoints[0], Pt = lo(ht), Vt = _u[H][Pt];
                    switch (vt = Vt[0], H = Vt[1], vt) {
                      case xa:
                        O.font.hasGlyphForCodePoint(ht) || (lt = d0(U, lt, O.font));
                        break;
                      case ts:
                        lt = tc(U, lt, O.font);
                        break;
                      case es:
                        rc(U, lt, O.font);
                        break;
                      case rs:
                        lt = nc(U, lt, O.font);
                        break;
                    }
                    lt++;
                  }
                }, X;
              }(Fa);
              N(l0, "zeroMarkWidths", "NONE");
              var ti = 44032, u0 = 55204, Mu = u0 - ti + 1, ao = 4352, io = 4449, Wa = 4519, ku = 19, oo = 21, Ai = 28, Uu = ao + ku - 1, zu = io + oo - 1, Wu = Wa + Ai - 1, c0 = 9676, Hu = function(X) {
                return 4352 <= X && X <= 4447 || 43360 <= X && X <= 43388;
              }, ju = function(X) {
                return 4448 <= X && X <= 4519 || 55216 <= X && X <= 55238;
              }, Gu = function(X) {
                return 4520 <= X && X <= 4607 || 55243 <= X && X <= 55291;
              }, Vu = function(X) {
                return 12334 <= X && X <= 12335;
              }, Xu = function(X) {
                return ti <= X && X <= u0;
              }, Zu = function(X) {
                return X - ti < Mu && (X - ti) % Ai === 0;
              }, Yu = function(X) {
                return ao <= X && X <= Uu;
              }, Ku = function(X) {
                return io <= X && X <= zu;
              }, Ju = function(X) {
                return 1 <= X && X <= Wu;
              }, Qu = 0, $u = 1, so = 2, _o = 3, fo = 4, h0 = 5, qu = 6;
              function lo(ft) {
                return Hu(ft) ? $u : ju(ft) ? so : Gu(ft) ? _o : Zu(ft) ? fo : Xu(ft) ? h0 : Vu(ft) ? qu : Qu;
              }
              var kn = 0, xa = 1, ts = 2, es = 4, rs = 5, _u = [
                //       X                 L                 V                T                  LV                LVT               M
                // State 0: start state
                [[kn, 0], [kn, 1], [kn, 0], [kn, 0], [xa, 2], [xa, 3], [rs, 0]],
                // State 1: <L>
                [[kn, 0], [kn, 1], [ts, 2], [kn, 0], [xa, 2], [xa, 3], [rs, 0]],
                // State 2: <L,V> or <LV>
                [[kn, 0], [kn, 1], [kn, 0], [ts, 3], [xa, 2], [xa, 3], [es, 0]],
                // State 3: <L,V,T> or <LVT>
                [[kn, 0], [kn, 1], [kn, 0], [kn, 0], [xa, 2], [xa, 3], [es, 0]]
              ];
              function Ci(ft, X, et) {
                return new ma(ft, ft.glyphForCodePoint(X).id, [X], et);
              }
              function d0(ft, X, et) {
                var O = ft[X], U = O.codePoints[0], H = U - ti, lt = Wa + H % Ai;
                H = H / Ai | 0;
                var vt = ao + H / oo | 0, dt = io + H % oo;
                if (!et.hasGlyphForCodePoint(vt) || !et.hasGlyphForCodePoint(dt) || lt !== Wa && !et.hasGlyphForCodePoint(lt))
                  return X;
                var ht = Ci(et, vt, O.features);
                ht.features.ljmo = !0;
                var Pt = Ci(et, dt, O.features);
                Pt.features.vjmo = !0;
                var Vt = [ht, Pt];
                if (lt > Wa) {
                  var se = Ci(et, lt, O.features);
                  se.features.tjmo = !0, Vt.push(se);
                }
                return ft.splice.apply(ft, [X, 1].concat(Vt)), X + Vt.length - 1;
              }
              function tc(ft, X, et) {
                var O = ft[X], U = ft[X].codePoints[0], H = lo(U), lt = ft[X - 1].codePoints[0], vt = lo(lt), dt, ht, Pt, Vt;
                if (vt === fo && H === _o)
                  dt = lt, Vt = O;
                else {
                  H === so ? (ht = ft[X - 1], Pt = O) : (ht = ft[X - 2], Pt = ft[X - 1], Vt = O);
                  var se = ht.codePoints[0], $t = Pt.codePoints[0];
                  Yu(se) && Ku($t) && (dt = ti + ((se - ao) * oo + ($t - io)) * Ai);
                }
                var ue = Vt && Vt.codePoints[0] || Wa;
                if (dt != null && (ue === Wa || Ju(ue))) {
                  var pe = dt + (ue - Wa);
                  if (et.hasGlyphForCodePoint(pe)) {
                    var Te = vt === so ? 3 : 2;
                    return ft.splice(X - Te + 1, Te, Ci(et, pe, O.features)), X - Te + 1;
                  }
                }
                return ht && (ht.features.ljmo = !0), Pt && (Pt.features.vjmo = !0), Vt && (Vt.features.tjmo = !0), vt === fo ? (d0(ft, X - 1, et), X + 1) : X;
              }
              function ec(ft) {
                switch (lo(ft)) {
                  case fo:
                  case h0:
                    return 1;
                  case so:
                    return 2;
                  case _o:
                    return 3;
                }
              }
              function rc(ft, X, et) {
                var O = ft[X], U = ft[X].codePoints[0];
                if (et.glyphForCodePoint(U).advanceWidth !== 0) {
                  var H = ft[X - 1].codePoints[0], lt = ec(H);
                  return ft.splice(X, 1), ft.splice(X - lt, 0, O);
                }
              }
              function nc(ft, X, et) {
                var O = ft[X], U = ft[X].codePoints[0];
                if (et.hasGlyphForCodePoint(c0)) {
                  var H = Ci(et, c0, O.features), lt = et.glyphForCodePoint(U).advanceWidth === 0 ? X : X + 1;
                  ft.splice(lt, 0, H), X++;
                }
                return X;
              }
              var ac = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]], ic = [!1, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !1, !1, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0], oc = [[], ["broken_cluster"], ["consonant_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["symbol_cluster"], [], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], ["consonant_syllable"], ["vowel_syllable"], ["standalone_cluster"]], sc = {
                stateTable: ac,
                accepting: ic,
                tags: oc
              }, fc = ["O", "IND", "S", "GB", "B", "FM", "CGJ", "VMAbv", "VMPst", "VAbv", "VPst", "CMBlw", "VPre", "VBlw", "H", "VMBlw", "CMAbv", "MBlw", "CS", "R", "SUB", "MPst", "MPre", "FAbv", "FPst", "FBlw", "null", "SMAbv", "SMBlw", "VMPre", "ZWNJ", "ZWJ", "WJ", "M", "VS", "N", "HN", "MAbv"], lc = {
                2507: [2503, 2494],
                2508: [2503, 2519],
                2888: [2887, 2902],
                2891: [2887, 2878],
                2892: [2887, 2903],
                3018: [3014, 3006],
                3019: [3015, 3006],
                3020: [3014, 3031],
                3144: [3142, 3158],
                3264: [3263, 3285],
                3271: [3270, 3285],
                3272: [3270, 3286],
                3274: [3270, 3266],
                3275: [3270, 3266, 3285],
                3402: [3398, 3390],
                3403: [3399, 3390],
                3404: [3398, 3415],
                3546: [3545, 3530],
                3548: [3545, 3535],
                3549: [3545, 3535, 3530],
                3550: [3545, 3551],
                3635: [3661, 3634],
                3763: [3789, 3762],
                3955: [3953, 3954],
                3957: [3953, 3956],
                3958: [4018, 3968],
                3959: [4018, 3953, 3968],
                3960: [4019, 3968],
                3961: [4019, 3953, 3968],
                3969: [3953, 3968],
                6971: [6970, 6965],
                6973: [6972, 6965],
                6976: [6974, 6965],
                6977: [6975, 6965],
                6979: [6978, 6965],
                69934: [69937, 69927],
                69935: [69938, 69927],
                70475: [70471, 70462],
                70476: [70471, 70487],
                70843: [70841, 70842],
                70844: [70841, 70832],
                70846: [70841, 70845],
                71098: [71096, 71087],
                71099: [71097, 71087]
              }, uc = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 2, 0, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]], cc = [!1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0], hc = [[], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["virama_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["number_joiner_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["numeral_cluster"]], uo = {
                categories: fc,
                decompositions: lc,
                stateTable: uc,
                accepting: cc,
                tags: hc
              }, wr = {
                X: 1,
                C: 2,
                V: 4,
                N: 8,
                H: 16,
                ZWNJ: 32,
                ZWJ: 64,
                M: 128,
                SM: 256,
                VD: 512,
                A: 1024,
                Placeholder: 2048,
                Dotted_Circle: 4096,
                RS: 8192,
                // Register Shifter, used in Khmer OT spec.
                Coeng: 16384,
                // Khmer-style Virama.
                Repha: 32768,
                // Atomically-encoded logical or visual repha.
                Ra: 65536,
                CM: 1 << 17,
                // Consonant-Medial.
                Symbol: 1 << 18
                // Avagraha, etc that take marks (SM,A,VD).
              }, er = {
                Start: 1,
                Ra_To_Become_Reph: 2,
                Pre_M: 4,
                Pre_C: 8,
                Base_C: 16,
                After_Main: 32,
                Above_C: 64,
                Before_Sub: 128,
                Below_C: 256,
                After_Sub: 512,
                Before_Post: 1024,
                Post_C: 2048,
                After_Post: 4096,
                Final_C: 8192,
                SMVD: 16384,
                End: 32768
              }, dc = wr.C | wr.Ra | wr.CM | wr.V | wr.Placeholder | wr.Dotted_Circle, v0 = wr.ZWJ | wr.ZWNJ, Ei = wr.H | wr.Coeng, p0 = {
                Default: {
                  hasOldSpec: !1,
                  virama: 0,
                  basePos: "Last",
                  rephPos: er.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Devanagari: {
                  hasOldSpec: !0,
                  virama: 2381,
                  basePos: "Last",
                  rephPos: er.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Bengali: {
                  hasOldSpec: !0,
                  virama: 2509,
                  basePos: "Last",
                  rephPos: er.After_Sub,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Gurmukhi: {
                  hasOldSpec: !0,
                  virama: 2637,
                  basePos: "Last",
                  rephPos: er.Before_Sub,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Gujarati: {
                  hasOldSpec: !0,
                  virama: 2765,
                  basePos: "Last",
                  rephPos: er.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Oriya: {
                  hasOldSpec: !0,
                  virama: 2893,
                  basePos: "Last",
                  rephPos: er.After_Main,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Tamil: {
                  hasOldSpec: !0,
                  virama: 3021,
                  basePos: "Last",
                  rephPos: er.After_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Telugu: {
                  hasOldSpec: !0,
                  virama: 3149,
                  basePos: "Last",
                  rephPos: er.After_Post,
                  rephMode: "Explicit",
                  blwfMode: "Post_Only"
                },
                Kannada: {
                  hasOldSpec: !0,
                  virama: 3277,
                  basePos: "Last",
                  rephPos: er.After_Post,
                  rephMode: "Implicit",
                  blwfMode: "Post_Only"
                },
                Malayalam: {
                  hasOldSpec: !0,
                  virama: 3405,
                  basePos: "Last",
                  rephPos: er.After_Main,
                  rephMode: "Log_Repha",
                  blwfMode: "Pre_And_Post"
                },
                // Handled by UniversalShaper
                // Sinhala: {
                //   hasOldSpec: false,
                //   virama: 0x0DCA,
                //   basePos: 'Last_Sinhala',
                //   rephPos: POSITIONS.After_Main,
                //   rephMode: 'Explicit',
                //   blwfMode: 'Pre_And_Post'
                // },
                Khmer: {
                  hasOldSpec: !1,
                  virama: 6098,
                  basePos: "First",
                  rephPos: er.Ra_To_Become_Reph,
                  rephMode: "Vis_Repha",
                  blwfMode: "Pre_And_Post"
                }
              }, vc = {
                // Khmer
                6078: [6081, 6078],
                6079: [6081, 6079],
                6080: [6081, 6080],
                6084: [6081, 6084],
                6085: [6081, 6085]
              }, pc = uo.decompositions, g0 = new I(o("AAARAAAAAABg2AAAAWYPmfDtnXuMXFUdx+/uzs7M7szudAtECGJRIMRQbUAithQWkGAKiVhNpFVRRAmIQVCDkDYICGotIA9BTCz8IeUviv7BQ2PBtBIRLBBQIWAUsKg1BKxRAqIgfs/cc+aeOXPej3tnZX7JJ/dxzj3nd36/8753Z5fUsuxgsAwcAU4Gp4BPgM+Cd4P3RjieDs4GXwLrHJ5bDy4DG8A14LvgZrAZbAF3gns0z18ALgY/B78C94NHwBPgabAE/AX8DbwM5sF/QX0yD5vFcU/wVnAgWAoOAyvAceBE8CGwBpwGzgJfAF8BXwXfAFeC68EmsBlsAXeCreA+8CB4DDwF/gh2gd3gFfAGmKxn2QzYC+wHDgRLweFgJTgWrKrnuq/GcQ04jV6fheN54EJwEbgcXAG+Q8O/j+Mt4DZwB9haz8t9Hz3a8iCN/xiOvwRP0evH6fE68AzOH+Ke2eWYhw3PcGnuxvkr4A3QaGRZB7wFLAEHg2XgiEZ/fHKcp/ceBh/A+cngFPCpRm6vM3E8l8a5gN67GMdvgqsbeX2ap9yI601gM7gN3AG20mfuo8cdOP6GpvdUg9oKxz839GV90RDO2/glxN1B790NXsN1rZll7WYRdw+c70uvTwIHNAfTO0RyL5TDmnnbc3lmRQI9UnM0dD5eovfz4FpJ/BNpXNYWV+N6Lfg0hY97JK1vn+Pur9DoQur2F7m436bHDUK8C5t5/8vruo4+97WmXG+GLmzEiBF+PDwEOowYMWLEiBEjRoxYeBw5BDqIPEfXut9yWN+vVNxfrnnmWqR/PdgENoMt4E5wD9gOHgCPgifBs2BXM99b2o3jP8F/wMRUlrXAHNgHvH0q3895J46HguXgWHAGLctmLv9VuL96qnp7jxgxYsSbCbJvuRZ97/tqxT59VVRtixEjRsThBG7OSt5zzoPT0M+cBc4T5noXOs79TqLHeZrHUeCSqeJ96gacXy2kecNU8V6Hh7yXuQlhtw7B/PO1RTkr52Aj8JNFZjYg3gOKuC/g/v6Ls2wNuAY8urg//PcIb+6RZXuDNeCS6SzbBrJWlh0DLiFHco8ed9IjzzvaWfa9sZzTcf6D9mCcnbg3PlNcH4fzS8F2MDaLdQG4dLZIJxbbaZqv4ri8k58f3+mPs66T6/TTzqDeI0aMGDGiHP5dcR8ce/xxYcWi6vOfr725uRzcjnngXVOD61Hync+9uL+Nmyfej/NHpvL56A5Jeuz7uyfo+pqcPz2Vf1NH0ttJ03pekt8SmuY/EPYy9zzbN319ym/9TL6ZIt9MHCXRdxJtoAkWTRdz472n87D9cTwYLJvuz++I6WIePo/zE8AHp4v8WLyP0nufnM6/+zoDx8+DL08P6r9+urheRtO+jD6/cdrsx3mqu8w+xH4PScKIXa5D2jeCm8Et4DbwI/BjcC/4BXgI/Bb8DuwEu8Bu8Ap4A9RaRZptnO8J9gUHgEPAoWA5OLY1qMO90GEV7q+mYWtxPBWcIYnL4p+DsPNbxfVFOP86uAr8DNc34HgTDb8Vx9sVaRFI/LtagzYjnCqpb908EX87eBA8Bh4Hf2jle/9/wvGFVv787rrZZy8h7qtgDOuFOmiBuXYRvg/O9wMHgXeB97SLspk4sq0OI/q9v13+ek+sh3zYSRp9jrYorw9ll1/GRzR+KotYZSHf8laVP2lvpA/8OGdPMk59hqtXZ+L8nHbxvWwqO65ryu+fT3VZz+l4dET7L0R072ljsMyzTpaJqQxsbL8M9WajY789DO85XMp/Dcp3Qztdn+9qf/a97ZWK8PXc3G+TpC/nv8Mncy7ZvICF302P5O+aNiOtLdTXd+D4Q7DVwfcvWvx9zTEJ/o5iG3R8YAjGNFseha5PGuZKz7b7xxXbOrXMcu5eJSo//rXdH/73Enz6L1q/X+fyIu8wZGtNBmkjkzNZNgP2AvuBg2bysKUzduXn/66JtNeN4PCZvO0/x7Ujdn4VnYOvRJzjZ/I+9sQZeftX2Tc1RPcPz/Tf4/si0g+t5Mq+kfZjZL34Mc5ul3PPnE7TOxvHK2qDaZ+L++db2HyYqMo/qVnb/P8uH8/rmnFxR0k6DCu/rjj/RxT7KGUSWgbd+LMQuEgYB1zsk2qtvJD8v5AhdfdttbEunSxbcJD9Zf7chqp1Hlbe7FK1/aPVTfp7FgtC1yGGiSncFK/DhZvi+epZta0WWjlsfDZMyPRdSPrryqSSKnXx1bkq/Ye9TlRpk7Lrjq1UrfdC9X+MtKqwP6+3a/4pJFUZF0pZZpv91MYjMBaRRXbxpho5zQmUY3F+Pt4o7rvQrBXPdm00TaE24uMadaM2meLSI7iu071t3er3b6ZLi8JEde3qw+6zGv+ycF5kaRBh/m1T/7Yl/mMyTuMwadP4xL9ifjJpNwbvDZRJ8G8vnqV/Wf12aa/kyOdl69+BspTsXzGueE6E+JfZnvmXIfNPW+FfXkjb1YmqPNpnLP3b61fHCj/X5tzGANf2y3yqvC7Jv7btV4TVbdammI9l/g0dS5lNxLrk2j9r8xjjxhBQnygg0lgg/bOrfyct+udJi/Yrk0lFnxC7f+5kRbsNmcexfrubt0X/rGvLqrGSnYv3ZPHEe8r7lvMvUfi2LOu/2dg8LrRtQt2yfcv8r5IU70VkIs6nbebUXf0M/o7Znl39Sdoz+X1oEb5N8ffF67qhPfPP6eoUbxf+GRf/6sRnvaSdmw+Bf1VxmbD+2sa//DU7t/Gv2PfKpKdrBP92Ojk+IvqX16ks/2qxbL8EZnc2HqsgYuqPuzZV+I3RbujbDm+T0PmWCVO/5jqftp1zy+wSA6s0JWtp2z5e1oZV+yMsjB3ZXolsv0Ulrv01v3/iKrF94Qtbt9siCnmeb6fjjf59KnLk1xaEbvtvFnFirGvEOqmycQrbm/IMsXd3P28uh4nM3swXRER717OiX8kc7K2qqyn2p3maFGU/aruP5VCv+PraoTYU8yUmmbDwcYo6pusnM486xdoga4dkPCb1pK7Sfc6ebvkd4qeAtQcd/N63bB3lU3dlUnUf38VyvqCqK7JxlNSd7lydrDlm+/uqHiRvl30Nrp/n9zpkZRjoJ3V1diyP05rIYXHYs+w+D5+WMS8b5gZtKcuX0KT5d/WwtB97VnyvY6rjMukI56HI0rFJPwt8PjT/1OXzSbcMeEmdh294qvKK4rNu7j4n3LNZg8TKXwafv025U+XvKjHsT8Q7/7LGaJt9lAh7Asz3uv0XEX6t0duDoWN/93wmh92XpUHmCKb9GALbG+rZP3AfNbQPKKv/jpF/bP0JXfuW1QYk7dhljcyvk5mw+933Hpo1g26PQ2ZP6zVmTJt47P25jncD9vPwGS+q9QS/V6RaY8j8K8LmvUr9HfYCpH5OWL9lZY+Sv6pesHCJHbtrf9k6etZvf0G1L0ja4cAe1UT/s3zdCe3/Q5/n372wMc97/E1Qh0Tbmfwh3m/V9On72tNnrCF1sJkVe1EyXMdBa7+lHMsk44zMF6St9e2djNnbm8ybpHkq+gbbemMaH0UZmD8obKGrk7r+nt+3bE7o83YZp/vqOKdv6PzJNN6mTJsI/51XR7i2ZrGA5B6zFwnjzxmqPjaGfW3tZNrz1eljq29mOOqeCfF/irRt87PNw0uXSVAvrmOMNT569MptsYaV0sic/wbY13e8hPrb9K2ySUJ0j6G/Lu0U4qpTrR23jMp6m5hU+YTaWCeh9aIsm/rqUHV4bFv42kgnZdfH1PUj1D7DVH9d8khRN1zFRl/+/TW//qxL1uH83+mk3H+SvRtS2TDU90nX2TpM6/1xzZpZtoYdK763dqlz0f6uNeFehcs+H/nbGP77MpX06n/ofpzP+tVmTUvRtVuX/cjS67OE5kRBrxyJ+w/dPo7r+9cO1160e3gqu0S2uW7PjN/L6ns/UfMf10Lai87frJ+3KndAfc8yTf1M3T4s6qm4/yh7/2GSkG8UMw//DvRLgbYZSEOxr0LCWvRdjfh9XGzfqN4NivfZd7rsmFp08zmbssrKJEuTfVMZopdpbuwSrhNv3/N2s+0PDG3KNB6RMrFvJHv6B85HXObAoWsd3zm3i+6uZYytv+5+pohbpo6+tpZJFfmGlrcMf4c8b1Pe2OUIsaXJrinCTfaxtZOt+NYnU3hIfQlN20Z/1+dt7JaqLsbIzycNWZmrlNg2Dc2/LJ1T+T6WrrYSml4Ku7ik7yIx2opJD51vU9UfVRmrqL8u/olZj0PyCLV5irxcdKoi/6rKb8qTrHsnhW9jyZH/nSpeWDzxd9769uQ016lgUuf2pAfKPhu2FpfZL2Yb9snLNl/fNIepXaUsj4vNXCXUZ75px8ojNP8UPvAta2g6fb+F1ckZuneshv1vGXXDeyRRrN/bBPS1Jul+l+7zW86R7Wv63WXyDpt/RxraRjvC+TC3O61/Sqj/prag8x372yQivn+XwudrI2X2E2KdtJEov52e0L+uv4FO3p/rvssgsL8F4d/z9PzlWS94m8fqS3361Fi+6qaVYHwi9Yz4iH2fobIj+45cpz/TUaarr/4+z+vaWtVtyAX2d1LG8W9C3f+F1mnf36/k4w3YPrLv+XBVXCJs3cr+n4MKJuLv/fN9GhNdXVP5pJMN9vFi3rpv3/r8Ywg3SYp66zNOsO8QGcxPpnmRS/1mvmJjju3v7absI2xspQrvs1dNbjOj/wP7h1RlZyKGy8occ408UL8En4v6xfC/K3z52XzJd62T8vuZGGsxo/6O46ntmNqqFb/jps2/hHV4rPKH0svT4pstU7t2tZ9u/ZdqbJL1MwP6O86Fyt4jYaIrGz9mjEt8lFL4PtVE6votG2P6fpdf/GZRse7s3bf4BtSl/DIbKMctx++Z+8o6K6z9FPOwKsRmXiaNl7C+6NYRpjlbqG1j72f49qsuY4brd/amb4ZVc8TQ+sSH985LrEe8iPWJnfPrJRbWbb+dwn4x6o+r/aS2S7w3qWt//LnYz2ntE0vH1uDcyKatx1rH+EiMPEN1SZG/iz6+9o01Rob6O7Q+xLZ1jHobK61U+pWVvo2EpuWqzzD6Poa+pvhli0wn8Zq/72Mzm2d90o5VN1x9ZKuzbTgvqWwUIin8FSpl1CXXvFRxU0iozVPYJDRtF3uFphn6XAyJUUdD7SjTJ8v6n9fVbVObkKWp001lc9VRlqdOf5v0ZM+bymdbfp1NfG0bq27Y5JMyfxeJkU6o/inKH8O2Zfgidb6h/g3VJ7QcVbWL0Pxt6rlrPqa4KfQ25a2zl4/E8GdM/4fK/wA=", "base64")), gc = new T(sc), hn = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(O) {
                  O.addStage(yc), O.addStage(["locl", "ccmp"]), O.addStage(xc), O.addStage("nukt"), O.addStage("akhn"), O.addStage("rphf", !1), O.addStage("rkrf"), O.addStage("pref", !1), O.addStage("blwf", !1), O.addStage("abvf", !1), O.addStage("half", !1), O.addStage("pstf", !1), O.addStage("vatu"), O.addStage("cjct"), O.addStage("cfar", !1), O.addStage(bc), O.addStage({
                    local: ["init"],
                    global: ["pres", "abvs", "blws", "psts", "haln", "dist", "abvm", "blwm", "calt", "clig"]
                  }), O.unicodeScript = ql(O.script), O.indicConfig = p0[O.unicodeScript] || p0.Default, O.isOldSpec = O.indicConfig.hasOldSpec && O.script[O.script.length - 1] !== "2";
                }, X.assignFeatures = function(O, U) {
                  for (var H = function(dt) {
                    var ht = U[dt].codePoints[0], Pt = vc[ht] || pc[ht];
                    if (Pt) {
                      var Vt = Pt.map(function(se) {
                        var $t = O.font.glyphForCodePoint(se);
                        return new ma(O.font, $t.id, [se], U[dt].features);
                      });
                      U.splice.apply(U, [dt, 1].concat(Vt));
                    }
                  }, lt = U.length - 1; lt >= 0; lt--)
                    H(lt);
                }, X;
              }(Fa);
              N(hn, "zeroMarkWidths", "NONE");
              function ns(ft) {
                return g0.get(ft.codePoints[0]) >> 8;
              }
              function y0(ft) {
                return 1 << (g0.get(ft.codePoints[0]) & 255);
              }
              var co = function(X, et, O, U) {
                this.category = X, this.position = et, this.syllableType = O, this.syllable = U;
              };
              function yc(ft, X) {
                for (var et = 0, O = 0, U = a(gc.match(X.map(ns))), H; !(H = U()).done; ) {
                  var lt = H.value, vt = lt[0], dt = lt[1], ht = lt[2];
                  if (vt > O) {
                    ++et;
                    for (var Pt = O; Pt < vt; Pt++)
                      X[Pt].shaperInfo = new co(wr.X, er.End, "non_indic_cluster", et);
                  }
                  ++et;
                  for (var Vt = vt; Vt <= dt; Vt++)
                    X[Vt].shaperInfo = new co(1 << ns(X[Vt]), y0(X[Vt]), ht[0], et);
                  O = dt + 1;
                }
                if (O < X.length) {
                  ++et;
                  for (var se = O; se < X.length; se++)
                    X[se].shaperInfo = new co(wr.X, er.End, "non_indic_cluster", et);
                }
              }
              function Ha(ft) {
                return ft.shaperInfo.category & dc;
              }
              function ha(ft) {
                return ft.shaperInfo.category & v0;
              }
              function ba(ft) {
                return ft.shaperInfo.category & Ei;
              }
              function wa(ft, X) {
                for (var et = a(ft), O; !(O = et()).done; ) {
                  var U, H = O.value;
                  H.features = (U = {}, U[X] = !0, U);
                }
                var lt = ft[0]._font._layoutEngine.engine.GSUBProcessor;
                return lt.applyFeatures([X], ft), ft.length === 1;
              }
              function mc(ft, X, et) {
                var O = [et, X, et];
                return wa(O.slice(0, 2), "blwf") || wa(O.slice(1, 3), "blwf") ? er.Below_C : wa(O.slice(0, 2), "pstf") || wa(O.slice(1, 3), "pstf") || wa(O.slice(0, 2), "pref") || wa(O.slice(1, 3), "pref") ? er.Post_C : er.Base_C;
              }
              function xc(ft, X, et) {
                var O = et.indicConfig, U = ft._layoutEngine.engine.GSUBProcessor.features, H = ft.glyphForCodePoint(9676).id, lt = ft.glyphForCodePoint(O.virama).id;
                if (lt)
                  for (var vt = new ma(ft, lt, [O.virama]), dt = 0; dt < X.length; dt++)
                    X[dt].shaperInfo.position === er.Base_C && (X[dt].shaperInfo.position = mc(ft, X[dt].copy(), vt));
                for (var ht = 0, Pt = ho(X, 0); ht < X.length; ht = Pt, Pt = ho(X, ht)) {
                  var Vt = X[ht].shaperInfo;
                  Vt.category;
                  var se = Vt.syllableType;
                  if (!(se === "symbol_cluster" || se === "non_indic_cluster")) {
                    if (se === "broken_cluster" && H) {
                      var $t = new ma(ft, H, [9676]);
                      $t.shaperInfo = new co(1 << ns($t), y0($t), X[ht].shaperInfo.syllableType, X[ht].shaperInfo.syllable);
                      for (var ue = ht; ue < Pt && X[ue].shaperInfo.category === wr.Repha; )
                        ue++;
                      X.splice(ue++, 0, $t), Pt++;
                    }
                    var pe = Pt, Te = ht, He = !1;
                    if (O.rephPos !== er.Ra_To_Become_Reph && U.rphf && ht + 3 <= Pt && (O.rephMode === "Implicit" && !ha(X[ht + 2]) || O.rephMode === "Explicit" && X[ht + 2].shaperInfo.category === wr.ZWJ)) {
                      var _e = [X[ht].copy(), X[ht + 1].copy(), X[ht + 2].copy()];
                      if (wa(_e.slice(0, 2), "rphf") || O.rephMode === "Explicit" && wa(_e, "rphf")) {
                        for (Te += 2; Te < Pt && ha(X[Te]); )
                          Te++;
                        pe = ht, He = !0;
                      }
                    } else if (O.rephMode === "Log_Repha" && X[ht].shaperInfo.category === wr.Repha) {
                      for (Te++; Te < Pt && ha(X[Te]); )
                        Te++;
                      pe = ht, He = !0;
                    }
                    switch (O.basePos) {
                      case "Last": {
                        var Xe = Pt, hr = !1;
                        do {
                          var sr = X[--Xe].shaperInfo;
                          if (Ha(X[Xe])) {
                            if (sr.position !== er.Below_C && (sr.position !== er.Post_C || hr)) {
                              pe = Xe;
                              break;
                            }
                            sr.position === er.Below_C && (hr = !0), pe = Xe;
                          } else if (ht < Xe && sr.category === wr.ZWJ && X[Xe - 1].shaperInfo.category === wr.H)
                            break;
                        } while (Xe > Te);
                        break;
                      }
                      case "First": {
                        pe = ht;
                        for (var dr = pe + 1; dr < Pt; dr++)
                          Ha(X[dr]) && (X[dr].shaperInfo.position = er.Below_C);
                      }
                    }
                    He && pe === ht && Te - pe <= 2 && (He = !1);
                    for (var mr = ht; mr < pe; mr++) {
                      var Hr = X[mr].shaperInfo;
                      Hr.position = Math.min(er.Pre_C, Hr.position);
                    }
                    pe < Pt && (X[pe].shaperInfo.position = er.Base_C);
                    for (var tn = pe + 1; tn < Pt; tn++)
                      if (X[tn].shaperInfo.category === wr.M) {
                        for (var Ur = tn + 1; Ur < Pt; Ur++)
                          if (Ha(X[Ur])) {
                            X[Ur].shaperInfo.position = er.Final_C;
                            break;
                          }
                        break;
                      }
                    if (He && (X[ht].shaperInfo.position = er.Ra_To_Become_Reph), et.isOldSpec) {
                      for (var vr = et.unicodeScript !== "Malayalam", Pr = pe + 1; Pr < Pt; Pr++)
                        if (X[Pr].shaperInfo.category === wr.H) {
                          var zr = void 0;
                          for (zr = Pt - 1; zr > Pr && !(Ha(X[zr]) || vr && X[zr].shaperInfo.category === wr.H); zr--)
                            ;
                          if (X[zr].shaperInfo.category !== wr.H && zr > Pr) {
                            var un = X[Pr];
                            X.splice.apply(X, [Pr, 0].concat(X.splice(Pr + 1, zr - Pr))), X[zr] = un;
                          }
                          break;
                        }
                    }
                    for (var gr = er.Start, Br = ht; Br < Pt; Br++) {
                      var jr = X[Br].shaperInfo;
                      if (jr.category & (v0 | wr.N | wr.RS | wr.CM | Ei & jr.category)) {
                        if (jr.position = gr, jr.category === wr.H && jr.position === er.Pre_M) {
                          for (var xr = Br; xr > ht; xr--)
                            if (X[xr - 1].shaperInfo.position !== er.Pre_M) {
                              jr.position = X[xr - 1].shaperInfo.position;
                              break;
                            }
                        }
                      } else
                        jr.position !== er.SMVD && (gr = jr.position);
                    }
                    for (var fn = pe, mn = pe + 1; mn < Pt; mn++)
                      if (Ha(X[mn])) {
                        for (var Fn = fn + 1; Fn < mn; Fn++)
                          X[Fn].shaperInfo.position < er.SMVD && (X[Fn].shaperInfo.position = X[mn].shaperInfo.position);
                        fn = mn;
                      } else
                        X[mn].shaperInfo.category === wr.M && (fn = mn);
                    var Bn = X.slice(ht, Pt);
                    Bn.sort(function(aa, os) {
                      return aa.shaperInfo.position - os.shaperInfo.position;
                    }), X.splice.apply(X, [ht, Bn.length].concat(Bn));
                    for (var In = ht; In < Pt; In++)
                      if (X[In].shaperInfo.position === er.Base_C) {
                        pe = In;
                        break;
                      }
                    for (var Un = ht; Un < Pt && X[Un].shaperInfo.position === er.Ra_To_Become_Reph; Un++)
                      X[Un].features.rphf = !0;
                    for (var zn = !et.isOldSpec && O.blwfMode === "Pre_And_Post", Sn = ht; Sn < pe; Sn++)
                      X[Sn].features.half = !0, zn && (X[Sn].features.blwf = !0);
                    for (var vn = pe + 1; vn < Pt; vn++)
                      X[vn].features.abvf = !0, X[vn].features.pstf = !0, X[vn].features.blwf = !0;
                    if (et.isOldSpec && et.unicodeScript === "Devanagari")
                      for (var Rn = ht; Rn + 1 < pe; Rn++)
                        X[Rn].shaperInfo.category === wr.Ra && X[Rn + 1].shaperInfo.category === wr.H && (Rn + 1 === pe || X[Rn + 2].shaperInfo.category === wr.ZWJ) && (X[Rn].features.blwf = !0, X[Rn + 1].features.blwf = !0);
                    var Rr = 2;
                    if (U.pref && pe + Rr < Pt)
                      for (var Cr = pe + 1; Cr + Rr - 1 < Pt; Cr++) {
                        var Qr = [X[Cr].copy(), X[Cr + 1].copy()];
                        if (wa(Qr, "pref")) {
                          for (var Gr = 0; Gr < Rr; Gr++)
                            X[Cr++].features.pref = !0;
                          if (U.cfar)
                            for (; Cr < Pt; Cr++)
                              X[Cr].features.cfar = !0;
                          break;
                        }
                      }
                    for (var Lr = ht + 1; Lr < Pt; Lr++)
                      if (ha(X[Lr])) {
                        var An = X[Lr].shaperInfo.category === wr.ZWNJ, ei = Lr;
                        do
                          ei--, An && delete X[ei].features.half;
                        while (ei > ht && !Ha(X[ei]));
                      }
                  }
                }
              }
              function bc(ft, X, et) {
                for (var O = et.indicConfig, U = ft._layoutEngine.engine.GSUBProcessor.features, H = 0, lt = ho(X, 0); H < X.length; H = lt, lt = ho(X, H)) {
                  for (var vt = !!U.pref, dt = H; dt < lt; dt++)
                    if (X[dt].shaperInfo.position >= er.Base_C) {
                      if (vt && dt + 1 < lt) {
                        for (var ht = dt + 1; ht < lt; ht++)
                          if (X[ht].features.pref) {
                            if (!(X[ht].substituted && X[ht].isLigated && !X[ht].isMultiplied)) {
                              for (dt = ht; dt < lt && ba(X[dt]); )
                                dt++;
                              X[dt].shaperInfo.position = er.BASE_C, vt = !1;
                            }
                            break;
                          }
                      }
                      if (et.unicodeScript === "Malayalam")
                        for (var Pt = dt + 1; Pt < lt; Pt++) {
                          for (; Pt < lt && ha(X[Pt]); )
                            Pt++;
                          if (Pt === lt || !ba(X[Pt]))
                            break;
                          for (Pt++; Pt < lt && ha(X[Pt]); )
                            Pt++;
                          Pt < lt && Ha(X[Pt]) && X[Pt].shaperInfo.position === er.Below_C && (dt = Pt, X[dt].shaperInfo.position = er.Base_C);
                        }
                      H < dt && X[dt].shaperInfo.position > er.Base_C && dt--;
                      break;
                    }
                  if (dt === lt && H < dt && X[dt - 1].shaperInfo.category === wr.ZWJ && dt--, dt < lt)
                    for (; H < dt && X[dt].shaperInfo.category & (wr.N | Ei); )
                      dt--;
                  if (H + 1 < lt && H < dt) {
                    var Vt = dt === lt ? dt - 2 : dt - 1;
                    if (et.unicodeScript !== "Malayalam" && et.unicodeScript !== "Tamil") {
                      for (; Vt > H && !(X[Vt].shaperInfo.category & (wr.M | Ei)); )
                        Vt--;
                      ba(X[Vt]) && X[Vt].shaperInfo.position !== er.Pre_M ? Vt + 1 < lt && ha(X[Vt + 1]) && Vt++ : Vt = H;
                    }
                    if (H < Vt && X[Vt].shaperInfo.position !== er.Pre_M) {
                      for (var se = Vt; se > H; se--)
                        if (X[se - 1].shaperInfo.position === er.Pre_M) {
                          var $t = se - 1;
                          $t < dt && dt <= Vt && dt--;
                          var ue = X[$t];
                          X.splice.apply(X, [$t, 0].concat(X.splice($t + 1, Vt - $t))), X[Vt] = ue, Vt--;
                        }
                    }
                  }
                  if (H + 1 < lt && X[H].shaperInfo.position === er.Ra_To_Become_Reph && X[H].shaperInfo.category === wr.Repha !== (X[H].isLigated && !X[H].isMultiplied)) {
                    var pe = void 0, Te = O.rephPos, He = !1;
                    if (Te !== er.After_Post) {
                      for (pe = H + 1; pe < dt && !ba(X[pe]); )
                        pe++;
                      if (pe < dt && ba(X[pe]) && (pe + 1 < dt && ha(X[pe + 1]) && pe++, He = !0), !He && Te === er.After_Main) {
                        for (pe = dt; pe + 1 < lt && X[pe + 1].shaperInfo.position <= er.After_Main; )
                          pe++;
                        He = pe < lt;
                      }
                      if (!He && Te === er.After_Sub) {
                        for (pe = dt; pe + 1 < lt && !(X[pe + 1].shaperInfo.position & (er.Post_C | er.After_Post | er.SMVD)); )
                          pe++;
                        He = pe < lt;
                      }
                    }
                    if (!He) {
                      for (pe = H + 1; pe < dt && !ba(X[pe]); )
                        pe++;
                      pe < dt && ba(X[pe]) && (pe + 1 < dt && ha(X[pe + 1]) && pe++, He = !0);
                    }
                    if (!He) {
                      for (pe = lt - 1; pe > H && X[pe].shaperInfo.position === er.SMVD; )
                        pe--;
                      if (ba(X[pe]))
                        for (var _e = dt + 1; _e < pe; _e++)
                          X[_e].shaperInfo.category === wr.M && pe--;
                    }
                    var Xe = X[H];
                    X.splice.apply(X, [H, 0].concat(X.splice(H + 1, pe - H))), X[pe] = Xe, H < dt && dt <= pe && dt--;
                  }
                  if (vt && dt + 1 < lt) {
                    for (var hr = dt + 1; hr < lt; hr++)
                      if (X[hr].features.pref) {
                        if (X[hr].isLigated && !X[hr].isMultiplied) {
                          var sr = dt;
                          if (et.unicodeScript !== "Malayalam" && et.unicodeScript !== "Tamil") {
                            for (; sr > H && !(X[sr - 1].shaperInfo.category & (wr.M | Ei)); )
                              sr--;
                            if (sr > H && X[sr - 1].shaperInfo.category === wr.M) {
                              for (var dr = hr, mr = dt + 1; mr < dr; mr++)
                                if (X[mr].shaperInfo.category === wr.M) {
                                  sr--;
                                  break;
                                }
                            }
                          }
                          sr > H && ba(X[sr - 1]) && sr < lt && ha(X[sr]) && sr++;
                          var Hr = hr, tn = X[Hr];
                          X.splice.apply(X, [sr + 1, 0].concat(X.splice(sr, Hr - sr))), X[sr] = tn, sr <= dt && dt < Hr && dt++;
                        }
                        break;
                      }
                  }
                  X[H].shaperInfo.position === er.Pre_M && (!H || !/Cf|Mn/.test(D.getCategory(X[H - 1].codePoints[0]))) && (X[H].features.init = !0);
                }
              }
              function ho(ft, X) {
                if (X >= ft.length)
                  return X;
                for (var et = ft[X].shaperInfo.syllable; ++X < ft.length && ft[X].shaperInfo.syllable === et; )
                  ;
                return X;
              }
              var wc = uo.categories, m0 = uo.decompositions, Sc = new I(o("AAACAAAAAAAQugAAAQUO+vHtnHuMX0UVx2d3u/t7bXe7FlqgvB+mpQhFmhikMRAg0ZQmakMU+cPWBzZisEGNjUpoiIYCEgmGUGOEGqOVNPUZUGNA+QNIBU2KREEFFSMBUYRISMXE+B3vnPzOzp553tcWfif5ZO5jnufMzJ2ZO/eumlDqFLAWnAMuBBvBZnC5uXZeBe4WsA1sBzs8/naCXcL1G8GtYDfYA74NvgfuAfcZHmT+fwEeBb8DTwvxPQWeAavACyZvq8z9VYxXwCGglijVBcvACnA8eCM4E6wHG8BF4BLwbvA+8AHwUbAd7AA7wS5wC9gN7gR7wX5wN7gXPAAeBr8Gvwd/Ac+CF8EhoCaV6oBZsBKcAE4FZ0wWeV8P9zxwoTnfCHczuBxsAdvAx8Gnzf1r4X4B3AxuA1+bHJb9m5PzdVGW/Yjv+xXHyfmxFfd9OH8Q/Ar8Bjw1WZT3GfACeAX8N5CfqSmlZsAKsGqqCH8K3DXgbHCuuXYB3HeAd4HLpgrdarbi+EPgY+CT4HPg8ybMTcb9MtyvghtYut/A+b4pf95+ELgfw08Qx/3gADgInjDl0veehPtX8A/wsrn2KtzxDuogWNoJx38k/BzXKeI8Ee5qcBZYD9aZtDbg+AwT19uMX83F7JizCdcvBZdZ97c6/BMfMWmfzfTm88/95aLj+DDSvApcDXZ04uPfaen3TMHPLvi5BezuFPVtD4t/qUcfe3FvP7gb3Ouwo9T+H+gMy/UIjh8DfwBPm7T08d/M8WMBe1Sh3xEjXo+M2s+IESNGjBgxYsSI1wLrOsM1gRsi/P+TzV3/Zc1jvxgR/j8IM9Et1mEGcJeDFeA4cJq5/ia467uF/w1wzwdvB+80998LdwvYZs63w90Bdnbd6Wp/uzz3R4wYMWJEvZzTMm2Xf8SIEfVQd/v+EsaPt3eL90J3wP2WMJ78Trd4t6+P77Hu37cIxp9/ny6YXqrUJeCR6TA74e/nll81MzxejeMtYA94HBwy91bPYow+O/S3A8d7oIM/gRN7CAP29Iqx/B1ThfuwOecM+vA3NmRjf6Gfm3BtH7v+PI7XDpS6EuwDz4O10+0/f9om1F4ehO4OmHp6EO7jxl56nvhsN/15ut+4Z0b657yYkZ7UJ0jhX0bcr3bn+6P87vekN4762QNzvWHZtL+jcH5srzg/uTf0f3pvfj5i+6tYW7rK9+aefO+tuL4BXAQ2gs3gPeBJc//9OL4CXAWuNvc/A64DN4Jbwe0s7jtxvBfsAz8EPwX3gwPgoJAHPQ9/Atf/bO7p/TTP4fglwS/5/zfujfWH5z0cz4Gj+8X5Sf1ib4m+vwbHZ/fdOtP+z+3LOnPp/QL4vxhsApeCy8BWk/a2ftFmYu22Hf4/Ba4B14Hrwc0sP7fh+Cvg6+Au8F1WthA/8pT7UeTxZ/12njkuXT8UyM9i6iur1EEb6f+yPz/eg0b3v4X7x365fMaW42lPu7PTv6vi8i/G+lWF/cvUk7bLl1r+5/rN5tu3j2qvWTd/qV+4h+AqjDGnBsX59GDo94iBXDa6v6Yjl6vu+h8itJcsZq/ZykHhHg/3tMHhUe9s/Yfuny7YNxTvQ8LYdrER2+/c0GBezhrMv3ZNRv7PmYirh7oOv4W1Y72/cwPOzx8U7X8d2295sfE3MPnbBPfSQbHv9nK4HxTqiK/trI7Yy5mLzvuVg/nX+N7V51A3r+gMy/4J434W7l2dYf5PZWGuNX6uh3uzEPetuLY7sZ20zTETY2oxyBhj3DrnfsidYPeXRGLHpxzX6pbFofGRkFBdGhcgW40L4cYtd9JAElO36q4LEzXHX7VMtZ2BEhJjy9dT25fazOtJxhwsBrHzwfu8w12kMYN9fLhIbp2RxlI59rX1dzjpsKl2Fxt3iu6rbofc9q5+KcRrXVzzDn6/Crvk6p/y1GFgGhs9/6maHjBLgv8/18fTxl1q0bPoW8ywsFTGWaazHosrNn/kP2eeqEroZYLZphsZl7L82eephMIqNT8dyT9JjH1Jpg32ubZvTB/SF665ymSnnaqjUHum+1Qn+NyOtz9f2r6y5OQ51b6hYy0D40r2tYXar30+Y/mbVX6JqY+hMC60XZapoh3S/HdOpT3DYu3rs0lKnquyb277JZvyPlqp+f1zVVK2/dJYNpQGf04uYyh1+PTPqfalZ2tO/xwSu+3bOrDzmWvfcTW/fLmibRx6lkvlcOlc8qsE/y5/rnSk67F1iAu1VT6+4jKt5tufn8e2b+n57JKcckhrsKG1Cd6Wu+Y8tf2l5DenPafqQZ/7xstKLeyr+XnInjSelvRgS9n27JPQM5n6Am7jmLG8VK6m7OvyS2L313XYV2r/tth5LWPfNxhyhI+1Up7HVbe/HMgeZE8brtNQ/7tcyX0cn//H2LTO9kpir5VI6yYp9szJW9W2jI1Tqfl5ic2v1GZ5XaG6RDZbyvxMO/DVh1SdUj5y1vraaHs+2/TYNXvtSRoXk4wrf9w6fEctnFt0zL2y+xFsfSrLza2zOTqMiZv8xOpbn8+xsL5ykdj6VsxNKb/Lvxb7nX8u48y1x6yuMW3V9tNxTlouzXslibVxndjC14xda8g2NIbg5x01XAP2lfeIBFSi/zrQEporTXru8fCueiy1CUnqrhspSM9SzbSS64tep9R1ZsZcOxKsUEUfNZeYtr0vjY5DeXW915hT8/PRV8MxlR1HV4DHZZc9R7dzajgWoXikdLtGr0uEfPigsGS/NvYjSHW87XejoXZehZ74XrcqpQ4d5T5f7Gu8f6g7fQmefoqOqk4/VarQv2o4/VDetPDnhjR2dc3BCBp/9NVw7KGfwStVMf6aZNAajj6224j9HCZbpZa/LvH1gU30i/q5WnUdSNEprxv2eIOwx2pcjjLMsmObo008k0J4u69P3d9QdbspW/dy080Nb8PXqcrmj0vsc7tu6qwD1A5oLYr3U3XWSxqj6/a10nCMkudJMyxvrvbK55jUrqU+Xlr/Iai98jY7mVAml5QNHxq31j2m5TrSdmp6z5p+9kpzQntdQbI1Pafr6I9C60gxrALHGtdF6tyhLTtxeBuW+hhqyzPMX931xl6rJ5f6n5h3blpsW7vKbvdBfL1gpYfjDLrvob1drrRT+mcuMf1OrJSdW/P+RfufdUB+pOtdTzhpL5t0jfKr46P3obQfQdPGt1jS+DEkx4MT2PmEg1j72OthqfZNWX+JuZ4at/2sTAmn5cSIMqZIjk0pnD0+aUI6YS9ekdaspWsp8cWEC62dS66UTkq+ypajyvXSlPz4xhQhm/ns6wpXBVI560jHN9aKkdT46spvWT916rONdHNsGSNtl6Hp8oakTVukpF9n3U3Jx0TNefbp3R4jltVfFfpvQkJpNaH/puyco++qbZPz7sE1L3DFGVovc4XPLUPO3ELyrzLiSpmPhaTJfqeJ+t60PiTh9snNW2656upDQ+Wtyg6ueJquB7HSVPspW9a28lDWJouhb6iyv7XjTfVL67j2vjDpvUfMt1Vl4GvctMaeq/vYcFWXIfV5Ku3XaxK951H6dsWFrhcxa3pU/pz3C1xc71tTcaXjGjtJbYIj7UHm7wxSyx+D/d7SfpfJ3wPpfSQp32tS2dt8V2tD7+Bce3rpPa3eC6Dr8Ulq+K+J3HFvbn312Zv2RdStr9g0pP0P/B04XbP3Q8cIT2dlRF6orkrhY/Rv27FqHfL1DP480ffo/V6V7aTHXLKDbTdXOOrnyG1ScvSv6xqve30lPzdpj36M8Pilb+L5vr0xE3dd30nWIfZ45uSSxK4x+CRmTUK6F/LrSsfnj+aOdYyvpXyMK7/OpHWjlDTsa0rJum5K7Ppnj7F9c+0q0qtr7pQji2X9oMwcVrJfmblwU2V2SV3rEk3YuO46XXf8MfrQz077G2zftyDkj/ZqhcZr9nldkOg5ykAt3GunJbR3NGYsUfWafd3ts853C4dLHppOM6WcfM5C+xSbaC/2HMa1H9v1vXdoXm/LKSVpYh5wqmr/X67SfwHtPc9a97p/k8bt0hpbW0j1Svr2m+7Rd98qIQ1pvSF273dKOjHYNmk6fd8/JX3tWIddblBqoU5p7zrZKnd9TppjVq0DSitWqkwz12b2exb7vwjaRvS/TFd/S+8AYvIo+Suri5TwvvZRdV1IQevQ1/8SA+UeH5eto7n/X1Oe86ptaafl8kPjcF7P7W93eD9d5n+oSvn7fFe7I/G9q1IBfylSR71N6fft94ZU18hOXKR+JqUO8f4+5dvLsmWlMQb/Vov+CUDlpTGUndeQlG3fdZWdRPoPgl3mmDlsLnaey/4X3tVuU+o6L3/Pym+qlLV/jk6rlBRd8394hZ6JdnuqIv2ykOh3pfq96Wkq/E8qu2xl88/tOJ4R3tfmpbGi3c5T859bzqr7MbsN03iI5itUNj5eaEKWqIX/KJCQ/iFWNZMmHXs8ovWk53JzFq5vPul6zDjLV36pX7bzvNzB0YlQOZephWtRS5T7eeSq8030R77/HvC1d7tN83Zt9yltrDdwSR0XxsZd5l+MvvvU1/M9jSnj+Nh6FPJbBld/w6XHXH5MZeXrOfS/65g9RTl1JCa8chzX2RZ9/3lXSh4/VqWfEBNq4b82Ytp6m+9Qqxir1jX+rfPdT1vvsWhM6bPbmON6E1LnPCZW7L0qqXswmtqf0MQelZj4myrzYtzvIYmURlvtqapyx+gzRfd0XPfahVSOquMoG+dibBdl46iyfdbV1qvUW9m8+KTudMvkzZe/pqTJ+pWTflX5zw1fVfox6ZTVc8hvHflOSb+OuG1JsZ0kufXAJf8D", "base64")), Ac = new T(uo), pr = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(O) {
                  O.addStage(Ec), O.addStage(["locl", "ccmp", "nukt", "akhn"]), O.addStage(b0), O.addStage(["rphf"], !1), O.addStage(Tc), O.addStage(b0), O.addStage(["pref"]), O.addStage(Fc), O.addStage(["rkrf", "abvf", "blwf", "half", "pstf", "vatu", "cjct"]), O.addStage(Ic), O.addStage(["abvs", "blws", "pres", "psts", "dist", "abvm", "blwm"]);
                }, X.assignFeatures = function(O, U) {
                  for (var H = function(dt) {
                    var ht = U[dt].codePoints[0];
                    if (m0[ht]) {
                      var Pt = m0[ht].map(function(Vt) {
                        var se = O.font.glyphForCodePoint(Vt);
                        return new ma(O.font, se.id, [Vt], U[dt].features);
                      });
                      U.splice.apply(U, [dt, 1].concat(Pt));
                    }
                  }, lt = U.length - 1; lt >= 0; lt--)
                    H(lt);
                }, X;
              }(Fa);
              N(pr, "zeroMarkWidths", "BEFORE_GPOS");
              function x0(ft) {
                return Sc.get(ft.codePoints[0]);
              }
              var Cc = function(X, et, O) {
                this.category = X, this.syllableType = et, this.syllable = O;
              };
              function Ec(ft, X) {
                for (var et = 0, O = a(Ac.match(X.map(x0))), U; !(U = O()).done; ) {
                  var H = U.value, lt = H[0], vt = H[1], dt = H[2];
                  ++et;
                  for (var ht = lt; ht <= vt; ht++)
                    X[ht].shaperInfo = new Cc(wc[x0(X[ht])], dt[0], et);
                  for (var Pt = X[lt].shaperInfo.category === "R" ? 1 : Math.min(3, vt - lt), Vt = lt; Vt < lt + Pt; Vt++)
                    X[Vt].features.rphf = !0;
                }
              }
              function b0(ft, X) {
                for (var et = a(X), O; !(O = et()).done; ) {
                  var U = O.value;
                  U.substituted = !1;
                }
              }
              function Tc(ft, X) {
                for (var et = a(X), O; !(O = et()).done; ) {
                  var U = O.value;
                  U.substituted && U.features.rphf && (U.shaperInfo.category = "R");
                }
              }
              function Fc(ft, X) {
                for (var et = a(X), O; !(O = et()).done; ) {
                  var U = O.value;
                  U.substituted && (U.shaperInfo.category = "VPre");
                }
              }
              function Ic(ft, X) {
                for (var et = ft.glyphForCodePoint(9676).id, O = 0, U = w0(X, 0); O < X.length; O = U, U = w0(X, O)) {
                  var H = void 0, lt = void 0, vt = X[O].shaperInfo, dt = vt.syllableType;
                  if (!(dt !== "virama_terminated_cluster" && dt !== "standard_cluster" && dt !== "broken_cluster")) {
                    if (dt === "broken_cluster" && et) {
                      var ht = new ma(ft, et, [9676]);
                      for (ht.shaperInfo = vt, H = O; H < U && X[H].shaperInfo.category === "R"; H++)
                        ;
                      X.splice(++H, 0, ht), U++;
                    }
                    if (vt.category === "R" && U - O > 1) {
                      for (H = O + 1; H < U; H++)
                        if (vt = X[H].shaperInfo, S0(vt) || vo(X[H])) {
                          vo(X[H]) && H--, X.splice.apply(X, [O, 0].concat(X.splice(O + 1, H - O), [X[H]]));
                          break;
                        }
                    }
                    for (H = O, lt = U; H < U; H++)
                      vt = X[H].shaperInfo, S0(vt) || vo(X[H]) ? lt = vo(X[H]) ? H + 1 : H : (vt.category === "VPre" || vt.category === "VMPre") && lt < H && X.splice.apply(X, [lt, 1, X[H]].concat(X.splice(lt, H - lt)));
                  }
                }
              }
              function w0(ft, X) {
                if (X >= ft.length)
                  return X;
                for (var et = ft[X].shaperInfo.syllable; ++X < ft.length && ft[X].shaperInfo.syllable === et; )
                  ;
                return X;
              }
              function vo(ft) {
                return ft.shaperInfo.category === "H" && !ft.isLigated;
              }
              function S0(ft) {
                return ft.category === "B" || ft.category === "GB";
              }
              var Dc = {
                arab: Da,
                // Arabic
                mong: Da,
                // Mongolian
                syrc: Da,
                // Syriac
                "nko ": Da,
                // N'Ko
                phag: Da,
                // Phags Pa
                mand: Da,
                // Mandaic
                mani: Da,
                // Manichaean
                phlp: Da,
                // Psalter Pahlavi
                hang: l0,
                // Hangul
                bng2: hn,
                // Bengali
                beng: hn,
                // Bengali
                dev2: hn,
                // Devanagari
                deva: hn,
                // Devanagari
                gjr2: hn,
                // Gujarati
                gujr: hn,
                // Gujarati
                guru: hn,
                // Gurmukhi
                gur2: hn,
                // Gurmukhi
                knda: hn,
                // Kannada
                knd2: hn,
                // Kannada
                mlm2: hn,
                // Malayalam
                mlym: hn,
                // Malayalam
                ory2: hn,
                // Oriya
                orya: hn,
                // Oriya
                taml: hn,
                // Tamil
                tml2: hn,
                // Tamil
                telu: hn,
                // Telugu
                tel2: hn,
                // Telugu
                khmr: hn,
                // Khmer
                bali: pr,
                // Balinese
                batk: pr,
                // Batak
                brah: pr,
                // Brahmi
                bugi: pr,
                // Buginese
                buhd: pr,
                // Buhid
                cakm: pr,
                // Chakma
                cham: pr,
                // Cham
                dupl: pr,
                // Duployan
                egyp: pr,
                // Egyptian Hieroglyphs
                gran: pr,
                // Grantha
                hano: pr,
                // Hanunoo
                java: pr,
                // Javanese
                kthi: pr,
                // Kaithi
                kali: pr,
                // Kayah Li
                khar: pr,
                // Kharoshthi
                khoj: pr,
                // Khojki
                sind: pr,
                // Khudawadi
                lepc: pr,
                // Lepcha
                limb: pr,
                // Limbu
                mahj: pr,
                // Mahajani
                // mand: UniversalShaper, // Mandaic
                // mani: UniversalShaper, // Manichaean
                mtei: pr,
                // Meitei Mayek
                modi: pr,
                // Modi
                // mong: UniversalShaper, // Mongolian
                // 'nko ': UniversalShaper, // NâKo
                hmng: pr,
                // Pahawh Hmong
                // phag: UniversalShaper, // Phags-pa
                // phlp: UniversalShaper, // Psalter Pahlavi
                rjng: pr,
                // Rejang
                saur: pr,
                // Saurashtra
                shrd: pr,
                // Sharada
                sidd: pr,
                // Siddham
                sinh: pr,
                // Sinhala
                sund: pr,
                // Sundanese
                sylo: pr,
                // Syloti Nagri
                tglg: pr,
                // Tagalog
                tagb: pr,
                // Tagbanwa
                tale: pr,
                // Tai Le
                lana: pr,
                // Tai Tham
                tavt: pr,
                // Tai Viet
                takr: pr,
                // Takri
                tibt: pr,
                // Tibetan
                tfng: pr,
                // Tifinagh
                tirh: pr,
                // Tirhuta
                latn: Fa,
                // Latin
                DFLT: Fa
                // Default
              };
              function Oc(ft) {
                Array.isArray(ft) || (ft = [ft]);
                for (var X = a(ft), et; !(et = X()).done; ) {
                  var O = et.value, U = Dc[O];
                  if (U)
                    return U;
                }
                return Fa;
              }
              for (var Pc = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et.applyLookup = function(U, H) {
                  var lt = this;
                  switch (U) {
                    case 1: {
                      var vt = this.coverageIndex(H.coverage);
                      if (vt === -1)
                        return !1;
                      var dt = this.glyphIterator.cur;
                      switch (H.version) {
                        case 1:
                          dt.id = dt.id + H.deltaGlyphID & 65535;
                          break;
                        case 2:
                          dt.id = H.substitute.get(vt);
                          break;
                      }
                      return !0;
                    }
                    case 2: {
                      var ht = this.coverageIndex(H.coverage);
                      if (ht !== -1) {
                        var Pt, Vt = H.sequences.get(ht);
                        if (Vt.length === 0)
                          return this.glyphs.splice(this.glyphIterator.index, 1), !0;
                        this.glyphIterator.cur.id = Vt[0], this.glyphIterator.cur.ligatureComponent = 0;
                        var se = this.glyphIterator.cur.features, $t = this.glyphIterator.cur, ue = Vt.slice(1).map(function(zn, Sn) {
                          var vn = new ma(lt.font, zn, void 0, se);
                          return vn.shaperInfo = $t.shaperInfo, vn.isLigated = $t.isLigated, vn.ligatureComponent = Sn + 1, vn.substituted = !0, vn.isMultiplied = !0, vn;
                        });
                        return (Pt = this.glyphs).splice.apply(Pt, [this.glyphIterator.index + 1, 0].concat(ue)), !0;
                      }
                      return !1;
                    }
                    case 3: {
                      var pe = this.coverageIndex(H.coverage);
                      if (pe !== -1) {
                        var Te = 0;
                        return this.glyphIterator.cur.id = H.alternateSet.get(pe)[Te], !0;
                      }
                      return !1;
                    }
                    case 4: {
                      var He = this.coverageIndex(H.coverage);
                      if (He === -1)
                        return !1;
                      for (var _e = a(H.ligatureSets.get(He)), Xe; !(Xe = _e()).done; ) {
                        var hr = Xe.value, sr = this.sequenceMatchIndices(1, hr.components);
                        if (sr) {
                          for (var dr = this.glyphIterator.cur, mr = dr.codePoints.slice(), Hr = a(sr), tn; !(tn = Hr()).done; ) {
                            var Ur, vr = tn.value;
                            (Ur = mr).push.apply(Ur, this.glyphs[vr].codePoints);
                          }
                          var Pr = new ma(this.font, hr.glyph, mr, dr.features);
                          Pr.shaperInfo = dr.shaperInfo, Pr.isLigated = !0, Pr.substituted = !0;
                          for (var zr = dr.isMark, un = 0; un < sr.length && zr; un++)
                            zr = this.glyphs[sr[un]].isMark;
                          Pr.ligatureID = zr ? null : this.ligatureID++;
                          for (var gr = dr.ligatureID, Br = dr.codePoints.length, jr = Br, xr = this.glyphIterator.index + 1, fn = a(sr), mn; !(mn = fn()).done; ) {
                            var Fn = mn.value;
                            if (zr)
                              xr = Fn;
                            else
                              for (; xr < Fn; ) {
                                var Bn = jr - Br + Math.min(this.glyphs[xr].ligatureComponent || 1, Br);
                                this.glyphs[xr].ligatureID = Pr.ligatureID, this.glyphs[xr].ligatureComponent = Bn, xr++;
                              }
                            gr = this.glyphs[xr].ligatureID, Br = this.glyphs[xr].codePoints.length, jr += Br, xr++;
                          }
                          if (gr && !zr)
                            for (var In = xr; In < this.glyphs.length && this.glyphs[In].ligatureID === gr; In++) {
                              var Bn = jr - Br + Math.min(this.glyphs[In].ligatureComponent || 1, Br);
                              this.glyphs[In].ligatureComponent = Bn;
                            }
                          for (var Un = sr.length - 1; Un >= 0; Un--)
                            this.glyphs.splice(sr[Un], 1);
                          return this.glyphs[this.glyphIterator.index] = Pr, !0;
                        }
                      }
                      return !1;
                    }
                    case 5:
                      return this.applyContext(H);
                    case 6:
                      return this.applyChainingContext(H);
                    case 7:
                      return this.applyLookup(H.lookupType, H.extension);
                    default:
                      throw new Error("GSUB lookupType ".concat(U, " is not supported"));
                  }
                }, X;
              }(no), Bc = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et.applyPositionValue = function(U, H) {
                  var lt = this.positions[this.glyphIterator.peekIndex(U)];
                  H.xAdvance != null && (lt.xAdvance += H.xAdvance), H.yAdvance != null && (lt.yAdvance += H.yAdvance), H.xPlacement != null && (lt.xOffset += H.xPlacement), H.yPlacement != null && (lt.yOffset += H.yPlacement);
                  var vt = this.font._variationProcessor, dt = this.font.GDEF && this.font.GDEF.itemVariationStore;
                  vt && dt && (H.xPlaDevice && (lt.xOffset += vt.getDelta(dt, H.xPlaDevice.a, H.xPlaDevice.b)), H.yPlaDevice && (lt.yOffset += vt.getDelta(dt, H.yPlaDevice.a, H.yPlaDevice.b)), H.xAdvDevice && (lt.xAdvance += vt.getDelta(dt, H.xAdvDevice.a, H.xAdvDevice.b)), H.yAdvDevice && (lt.yAdvance += vt.getDelta(dt, H.yAdvDevice.a, H.yAdvDevice.b)));
                }, et.applyLookup = function(U, H) {
                  switch (U) {
                    case 1: {
                      var lt = this.coverageIndex(H.coverage);
                      if (lt === -1)
                        return !1;
                      switch (H.version) {
                        case 1:
                          this.applyPositionValue(0, H.value);
                          break;
                        case 2:
                          this.applyPositionValue(0, H.values.get(lt));
                          break;
                      }
                      return !0;
                    }
                    case 2: {
                      var vt = this.glyphIterator.peek();
                      if (!vt)
                        return !1;
                      var dt = this.coverageIndex(H.coverage);
                      if (dt === -1)
                        return !1;
                      switch (H.version) {
                        case 1:
                          for (var ht = H.pairSets.get(dt), Pt = a(ht), Vt; !(Vt = Pt()).done; ) {
                            var se = Vt.value;
                            if (se.secondGlyph === vt.id)
                              return this.applyPositionValue(0, se.value1), this.applyPositionValue(1, se.value2), !0;
                          }
                          return !1;
                        case 2:
                          var $t = this.getClassID(this.glyphIterator.cur.id, H.classDef1), ue = this.getClassID(vt.id, H.classDef2);
                          if ($t === -1 || ue === -1)
                            return !1;
                          var pe = H.classRecords.get($t).get(ue);
                          return this.applyPositionValue(0, pe.value1), this.applyPositionValue(1, pe.value2), !0;
                      }
                    }
                    case 3: {
                      var Te = this.glyphIterator.peekIndex(), He = this.glyphs[Te];
                      if (!He)
                        return !1;
                      var _e = H.entryExitRecords[this.coverageIndex(H.coverage)];
                      if (!_e || !_e.exitAnchor)
                        return !1;
                      var Xe = H.entryExitRecords[this.coverageIndex(H.coverage, He.id)];
                      if (!Xe || !Xe.entryAnchor)
                        return !1;
                      var hr = this.getAnchor(Xe.entryAnchor), sr = this.getAnchor(_e.exitAnchor), dr = this.positions[this.glyphIterator.index], mr = this.positions[Te];
                      switch (this.direction) {
                        case "ltr":
                          dr.xAdvance = sr.x + dr.xOffset;
                          var Hr = hr.x + mr.xOffset;
                          mr.xAdvance -= Hr, mr.xOffset -= Hr;
                          break;
                        case "rtl":
                          Hr = sr.x + dr.xOffset, dr.xAdvance -= Hr, dr.xOffset -= Hr, mr.xAdvance = hr.x + mr.xOffset;
                          break;
                      }
                      return this.glyphIterator.flags.rightToLeft ? (this.glyphIterator.cur.cursiveAttachment = Te, dr.yOffset = hr.y - sr.y) : (He.cursiveAttachment = this.glyphIterator.index, dr.yOffset = sr.y - hr.y), !0;
                    }
                    case 4: {
                      var tn = this.coverageIndex(H.markCoverage);
                      if (tn === -1)
                        return !1;
                      for (var Ur = this.glyphIterator.index; --Ur >= 0 && (this.glyphs[Ur].isMark || this.glyphs[Ur].ligatureComponent > 0); )
                        ;
                      if (Ur < 0)
                        return !1;
                      var vr = this.coverageIndex(H.baseCoverage, this.glyphs[Ur].id);
                      if (vr === -1)
                        return !1;
                      var Pr = H.markArray[tn], zr = H.baseArray[vr][Pr.class];
                      return this.applyAnchor(Pr, zr, Ur), !0;
                    }
                    case 5: {
                      var un = this.coverageIndex(H.markCoverage);
                      if (un === -1)
                        return !1;
                      for (var gr = this.glyphIterator.index; --gr >= 0 && this.glyphs[gr].isMark; )
                        ;
                      if (gr < 0)
                        return !1;
                      var Br = this.coverageIndex(H.ligatureCoverage, this.glyphs[gr].id);
                      if (Br === -1)
                        return !1;
                      var jr = H.ligatureArray[Br], xr = this.glyphIterator.cur, fn = this.glyphs[gr], mn = fn.ligatureID && fn.ligatureID === xr.ligatureID && xr.ligatureComponent > 0 ? Math.min(xr.ligatureComponent, fn.codePoints.length) - 1 : fn.codePoints.length - 1, Fn = H.markArray[un], Bn = jr[mn][Fn.class];
                      return this.applyAnchor(Fn, Bn, gr), !0;
                    }
                    case 6: {
                      var In = this.coverageIndex(H.mark1Coverage);
                      if (In === -1)
                        return !1;
                      var Un = this.glyphIterator.peekIndex(-1), zn = this.glyphs[Un];
                      if (!zn || !zn.isMark)
                        return !1;
                      var Sn = this.glyphIterator.cur, vn = !1;
                      if (Sn.ligatureID === zn.ligatureID ? Sn.ligatureID ? Sn.ligatureComponent === zn.ligatureComponent && (vn = !0) : vn = !0 : (Sn.ligatureID && !Sn.ligatureComponent || zn.ligatureID && !zn.ligatureComponent) && (vn = !0), !vn)
                        return !1;
                      var Rn = this.coverageIndex(H.mark2Coverage, zn.id);
                      if (Rn === -1)
                        return !1;
                      var Rr = H.mark1Array[In], Cr = H.mark2Array[Rn][Rr.class];
                      return this.applyAnchor(Rr, Cr, Un), !0;
                    }
                    case 7:
                      return this.applyContext(H);
                    case 8:
                      return this.applyChainingContext(H);
                    case 9:
                      return this.applyLookup(H.lookupType, H.extension);
                    default:
                      throw new Error("Unsupported GPOS table: ".concat(U));
                  }
                }, et.applyAnchor = function(U, H, lt) {
                  var vt = this.getAnchor(H), dt = this.getAnchor(U.markAnchor);
                  this.positions[lt];
                  var ht = this.positions[this.glyphIterator.index];
                  ht.xOffset = vt.x - dt.x, ht.yOffset = vt.y - dt.y, this.glyphIterator.cur.markAttachment = lt;
                }, et.getAnchor = function(U) {
                  var H = U.xCoordinate, lt = U.yCoordinate, vt = this.font._variationProcessor, dt = this.font.GDEF && this.font.GDEF.itemVariationStore;
                  return vt && dt && (U.xDeviceTable && (H += vt.getDelta(dt, U.xDeviceTable.a, U.xDeviceTable.b)), U.yDeviceTable && (lt += vt.getDelta(dt, U.yDeviceTable.a, U.yDeviceTable.b))), {
                    x: H,
                    y: lt
                  };
                }, et.applyFeatures = function(U, H, lt) {
                  ft.prototype.applyFeatures.call(this, U, H, lt);
                  for (var vt = 0; vt < this.glyphs.length; vt++)
                    this.fixCursiveAttachment(vt);
                  this.fixMarkAttachment();
                }, et.fixCursiveAttachment = function(U) {
                  var H = this.glyphs[U];
                  if (H.cursiveAttachment != null) {
                    var lt = H.cursiveAttachment;
                    H.cursiveAttachment = null, this.fixCursiveAttachment(lt), this.positions[U].yOffset += this.positions[lt].yOffset;
                  }
                }, et.fixMarkAttachment = function() {
                  for (var U = 0; U < this.glyphs.length; U++) {
                    var H = this.glyphs[U];
                    if (H.markAttachment != null) {
                      var lt = H.markAttachment;
                      if (this.positions[U].xOffset += this.positions[lt].xOffset, this.positions[U].yOffset += this.positions[lt].yOffset, this.direction === "ltr")
                        for (var vt = lt; vt < U; vt++)
                          this.positions[U].xOffset -= this.positions[vt].xAdvance, this.positions[U].yOffset -= this.positions[vt].yAdvance;
                      else
                        for (var dt = lt + 1; dt < U + 1; dt++)
                          this.positions[U].xOffset += this.positions[dt].xAdvance, this.positions[U].yOffset += this.positions[dt].yAdvance;
                    }
                  }
                }, X;
              }(no), Rc = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et, this.glyphInfos = null, this.plan = null, this.GSUBProcessor = null, this.GPOSProcessor = null, this.fallbackPosition = !0, et.GSUB && (this.GSUBProcessor = new Pc(et, et.GSUB)), et.GPOS && (this.GPOSProcessor = new Bc(et, et.GPOS));
                }
                var X = ft.prototype;
                return X.setup = function(O) {
                  var U = this;
                  this.glyphInfos = O.glyphs.map(function(vt) {
                    return new ma(U.font, vt.id, [].concat(vt.codePoints));
                  });
                  var H = null;
                  this.GPOSProcessor && (H = this.GPOSProcessor.selectScript(O.script, O.language, O.direction)), this.GSUBProcessor && (H = this.GSUBProcessor.selectScript(O.script, O.language, O.direction)), this.shaper = Oc(H), this.plan = new Cu(this.font, H, O.direction), this.shaper.plan(this.plan, this.glyphInfos, O.features);
                  for (var lt in this.plan.allFeatures)
                    O.features[lt] = !0;
                }, X.substitute = function(O) {
                  var U = this;
                  this.GSUBProcessor && (this.plan.process(this.GSUBProcessor, this.glyphInfos), O.glyphs = this.glyphInfos.map(function(H) {
                    return U.font.getGlyph(H.id, H.codePoints);
                  }));
                }, X.position = function(O) {
                  return this.shaper.zeroMarkWidths === "BEFORE_GPOS" && this.zeroMarkAdvances(O.positions), this.GPOSProcessor && this.plan.process(this.GPOSProcessor, this.glyphInfos, O.positions), this.shaper.zeroMarkWidths === "AFTER_GPOS" && this.zeroMarkAdvances(O.positions), O.direction === "rtl" && (O.glyphs.reverse(), O.positions.reverse()), this.GPOSProcessor && this.GPOSProcessor.features;
                }, X.zeroMarkAdvances = function(O) {
                  for (var U = 0; U < this.glyphInfos.length; U++)
                    this.glyphInfos[U].isMark && (O[U].xAdvance = 0, O[U].yAdvance = 0);
                }, X.cleanup = function() {
                  this.glyphInfos = null, this.plan = null, this.shaper = null;
                }, X.getAvailableFeatures = function(O, U) {
                  var H = [];
                  return this.GSUBProcessor && (this.GSUBProcessor.selectScript(O, U), H.push.apply(H, Object.keys(this.GSUBProcessor.features))), this.GPOSProcessor && (this.GPOSProcessor.selectScript(O, U), H.push.apply(H, Object.keys(this.GPOSProcessor.features))), H;
                }, ft;
              }(), Lc = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et, this.unicodeLayoutEngine = null, this.kernProcessor = null, this.font.morx ? this.engine = new Au(this.font) : (this.font.GSUB || this.font.GPOS) && (this.engine = new Rc(this.font));
                }
                var X = ft.prototype;
                return X.layout = function(O, U, H, lt, vt) {
                  if (typeof U == "string" && (vt = lt, lt = H, H = U, U = []), typeof O == "string") {
                    H == null && (H = _l(O));
                    var dt = this.font.glyphsForString(O);
                  } else {
                    if (H == null) {
                      for (var ht = [], Pt = a(O), Vt; !(Vt = Pt()).done; ) {
                        var se = Vt.value;
                        ht.push.apply(ht, se.codePoints);
                      }
                      H = tu(ht);
                    }
                    var dt = O;
                  }
                  var $t = new ru(dt, U, H, lt, vt);
                  return dt.length === 0 ? ($t.positions = [], $t) : (this.engine && this.engine.setup && this.engine.setup($t), this.substitute($t), this.position($t), this.hideDefaultIgnorables($t.glyphs, $t.positions), this.engine && this.engine.cleanup && this.engine.cleanup(), $t);
                }, X.substitute = function(O) {
                  this.engine && this.engine.substitute && this.engine.substitute(O);
                }, X.position = function(O) {
                  O.positions = O.glyphs.map(function(H) {
                    return new nu(H.advanceWidth);
                  });
                  var U = null;
                  this.engine && this.engine.position && (U = this.engine.position(O)), !U && (!this.engine || this.engine.fallbackPosition) && (this.unicodeLayoutEngine || (this.unicodeLayoutEngine = new Jl(this.font)), this.unicodeLayoutEngine.positionGlyphs(O.glyphs, O.positions)), (!U || !U.kern) && O.features.kern !== !1 && this.font.kern && (this.kernProcessor || (this.kernProcessor = new Kl(this.font)), this.kernProcessor.process(O.glyphs, O.positions), O.features.kern = !0);
                }, X.hideDefaultIgnorables = function(O, U) {
                  for (var H = this.font.glyphForCodePoint(32), lt = 0; lt < O.length; lt++)
                    this.isDefaultIgnorable(O[lt].codePoints[0]) && (O[lt] = H, U[lt].xAdvance = 0, U[lt].yAdvance = 0);
                }, X.isDefaultIgnorable = function(O) {
                  var U = O >> 16;
                  if (U === 0)
                    switch (O >> 8) {
                      case 0:
                        return O === 173;
                      case 3:
                        return O === 847;
                      case 6:
                        return O === 1564;
                      case 23:
                        return 6068 <= O && O <= 6069;
                      case 24:
                        return 6155 <= O && O <= 6158;
                      case 32:
                        return 8203 <= O && O <= 8207 || 8234 <= O && O <= 8238 || 8288 <= O && O <= 8303;
                      case 254:
                        return 65024 <= O && O <= 65039 || O === 65279;
                      case 255:
                        return 65520 <= O && O <= 65528;
                      default:
                        return !1;
                    }
                  else
                    switch (U) {
                      case 1:
                        return 113824 <= O && O <= 113827 || 119155 <= O && O <= 119162;
                      case 14:
                        return 917504 <= O && O <= 921599;
                      default:
                        return !1;
                    }
                }, X.getAvailableFeatures = function(O, U) {
                  var H = [];
                  return this.engine && H.push.apply(H, this.engine.getAvailableFeatures(O, U)), this.font.kern && H.indexOf("kern") === -1 && H.push("kern"), H;
                }, X.stringsForGlyph = function(O) {
                  for (var U = /* @__PURE__ */ new Set(), H = this.font._cmapProcessor.codePointsForGlyph(O), lt = a(H), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    U.add(String.fromCodePoint(dt));
                  }
                  if (this.engine && this.engine.stringsForGlyph)
                    for (var ht = a(this.engine.stringsForGlyph(O)), Pt; !(Pt = ht()).done; ) {
                      var Vt = Pt.value;
                      U.add(Vt);
                    }
                  return Array.from(U);
                }, ft;
              }(), Nc = {
                moveTo: "M",
                lineTo: "L",
                quadraticCurveTo: "Q",
                bezierCurveTo: "C",
                closePath: "Z"
              }, po = /* @__PURE__ */ function() {
                function ft() {
                  this.commands = [], this._bbox = null, this._cbox = null;
                }
                var X = ft.prototype;
                return X.toFunction = function() {
                  var O = this;
                  return function(U) {
                    O.commands.forEach(function(H) {
                      return U[H.command].apply(U, H.args);
                    });
                  };
                }, X.toSVG = function() {
                  var O = this.commands.map(function(U) {
                    var H = U.args.map(function(lt) {
                      return Math.round(lt * 100) / 100;
                    });
                    return "".concat(Nc[U.command]).concat(H.join(" "));
                  });
                  return O.join("");
                }, X.mapPoints = function(O) {
                  for (var U = new ft(), H = a(this.commands), lt; !(lt = H()).done; ) {
                    for (var vt = lt.value, dt = [], ht = 0; ht < vt.args.length; ht += 2) {
                      var Pt = O(vt.args[ht], vt.args[ht + 1]), Vt = Pt[0], se = Pt[1];
                      dt.push(Vt, se);
                    }
                    U[vt.command].apply(U, dt);
                  }
                  return U;
                }, X.transform = function(O, U, H, lt, vt, dt) {
                  return this.mapPoints(function(ht, Pt) {
                    return ht = O * ht + H * Pt + vt, Pt = U * ht + lt * Pt + dt, [ht, Pt];
                  });
                }, X.translate = function(O, U) {
                  return this.transform(1, 0, 0, 1, O, U);
                }, X.rotate = function(O) {
                  var U = Math.cos(O), H = Math.sin(O);
                  return this.transform(U, H, -H, U, 0, 0);
                }, X.scale = function(O, U) {
                  return U === void 0 && (U = O), this.transform(O, 0, 0, U, 0, 0);
                }, i(ft, [{
                  key: "cbox",
                  get: function() {
                    if (!this._cbox) {
                      for (var O = new qa(), U = a(this.commands), H; !(H = U()).done; )
                        for (var lt = H.value, vt = 0; vt < lt.args.length; vt += 2)
                          O.addPoint(lt.args[vt], lt.args[vt + 1]);
                      this._cbox = Object.freeze(O);
                    }
                    return this._cbox;
                  }
                  /**
                   * Gets the exact bounding box of the path by evaluating curve segments.
                   * Slower to compute than the control box, but more accurate.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    if (this._bbox)
                      return this._bbox;
                    for (var O = new qa(), U = 0, H = 0, lt = function(fn) {
                      return Math.pow(1 - fn, 3) * mr[vr] + 3 * Math.pow(1 - fn, 2) * fn * Hr[vr] + 3 * (1 - fn) * Math.pow(fn, 2) * tn[vr] + Math.pow(fn, 3) * Ur[vr];
                    }, vt = a(this.commands), dt; !(dt = vt()).done; ) {
                      var ht = dt.value;
                      switch (ht.command) {
                        case "moveTo":
                        case "lineTo":
                          var Pt = ht.args, Vt = Pt[0], se = Pt[1];
                          O.addPoint(Vt, se), U = Vt, H = se;
                          break;
                        case "quadraticCurveTo":
                        case "bezierCurveTo":
                          if (ht.command === "quadraticCurveTo")
                            var $t = ht.args, ue = $t[0], pe = $t[1], Te = $t[2], He = $t[3], _e = U + 2 / 3 * (ue - U), Xe = H + 2 / 3 * (pe - H), hr = Te + 2 / 3 * (ue - Te), sr = He + 2 / 3 * (pe - He);
                          else
                            var dr = ht.args, _e = dr[0], Xe = dr[1], hr = dr[2], sr = dr[3], Te = dr[4], He = dr[5];
                          O.addPoint(Te, He);
                          for (var mr = [U, H], Hr = [_e, Xe], tn = [hr, sr], Ur = [Te, He], vr = 0; vr <= 1; vr++) {
                            var Pr = 6 * mr[vr] - 12 * Hr[vr] + 6 * tn[vr], zr = -3 * mr[vr] + 9 * Hr[vr] - 9 * tn[vr] + 3 * Ur[vr];
                            if (ht = 3 * Hr[vr] - 3 * mr[vr], zr === 0) {
                              if (Pr === 0)
                                continue;
                              var un = -ht / Pr;
                              0 < un && un < 1 && (vr === 0 ? O.addPoint(lt(un), O.maxY) : vr === 1 && O.addPoint(O.maxX, lt(un)));
                              continue;
                            }
                            var gr = Math.pow(Pr, 2) - 4 * ht * zr;
                            if (!(gr < 0)) {
                              var Br = (-Pr + Math.sqrt(gr)) / (2 * zr);
                              0 < Br && Br < 1 && (vr === 0 ? O.addPoint(lt(Br), O.maxY) : vr === 1 && O.addPoint(O.maxX, lt(Br)));
                              var jr = (-Pr - Math.sqrt(gr)) / (2 * zr);
                              0 < jr && jr < 1 && (vr === 0 ? O.addPoint(lt(jr), O.maxY) : vr === 1 && O.addPoint(O.maxX, lt(jr)));
                            }
                          }
                          U = Te, H = He;
                          break;
                      }
                    }
                    return this._bbox = Object.freeze(O);
                  }
                }]), ft;
              }(), Mc = function(X) {
                po.prototype[X] = function() {
                  this._bbox = this._cbox = null;
                  for (var et = arguments.length, O = new Array(et), U = 0; U < et; U++)
                    O[U] = arguments[U];
                  return this.commands.push({
                    command: X,
                    args: O
                  }), this;
                };
              }, as = 0, A0 = ["moveTo", "lineTo", "quadraticCurveTo", "bezierCurveTo", "closePath"]; as < A0.length; as++) {
                var kc = A0[as];
                Mc(kc);
              }
              var Ti = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"], dn, go = (dn = /* @__PURE__ */ function() {
                function ft(et, O, U) {
                  this.id = et, this.codePoints = O, this._font = U, this.isMark = this.codePoints.length > 0 && this.codePoints.every(D.isMark), this.isLigature = this.codePoints.length > 1;
                }
                var X = ft.prototype;
                return X._getPath = function() {
                  return new po();
                }, X._getCBox = function() {
                  return this.path.cbox;
                }, X._getBBox = function() {
                  return this.path.bbox;
                }, X._getTableMetrics = function(O) {
                  if (this.id < O.metrics.length)
                    return O.metrics.get(this.id);
                  var U = O.metrics.get(O.metrics.length - 1), H = {
                    advance: U ? U.advance : 0,
                    bearing: O.bearings.get(this.id - O.metrics.length) || 0
                  };
                  return H;
                }, X._getMetrics = function(O) {
                  if (this._metrics)
                    return this._metrics;
                  var U = this._getTableMetrics(this._font.hmtx), H = U.advance, lt = U.bearing;
                  if (this._font.vmtx)
                    var vt = this._getTableMetrics(this._font.vmtx), dt = vt.advance, ht = vt.bearing;
                  else {
                    var Pt;
                    if ((typeof O > "u" || O === null) && (O = this.cbox), (Pt = this._font["OS/2"]) && Pt.version > 0)
                      var dt = Math.abs(Pt.typoAscender - Pt.typoDescender), ht = Pt.typoAscender - O.maxY;
                    else
                      var Vt = this._font.hhea, dt = Math.abs(Vt.ascent - Vt.descent), ht = Vt.ascent - O.maxY;
                  }
                  return this._font._variationProcessor && this._font.HVAR && (H += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR)), this._metrics = {
                    advanceWidth: H,
                    advanceHeight: dt,
                    leftBearing: lt,
                    topBearing: ht
                  };
                }, X.getScaledPath = function(O) {
                  var U = 1 / this._font.unitsPerEm * O;
                  return this.path.scale(U);
                }, X._getName = function() {
                  var O = this._font.post;
                  if (!O)
                    return null;
                  switch (O.version) {
                    case 1:
                      return Ti[this.id];
                    case 2:
                      var U = O.glyphNameIndex[this.id];
                      return U < Ti.length ? Ti[U] : O.names[U - Ti.length];
                    case 2.5:
                      return Ti[this.id + O.offsets[this.id]];
                    case 4:
                      return String.fromCharCode(O.map[this.id]);
                  }
                }, X.render = function(O, U) {
                  O.save();
                  var H = 1 / this._font.head.unitsPerEm * U;
                  O.scale(H, H);
                  var lt = this.path.toFunction();
                  lt(O), O.fill(), O.restore();
                }, i(ft, [{
                  key: "cbox",
                  get: function() {
                    return this._getCBox();
                  }
                  /**
                   * The glyphâs bounding box, i.e. the rectangle that encloses the
                   * glyph outline as tightly as possible.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    return this._getBBox();
                  }
                  /**
                   * A vector Path object representing the glyph outline.
                   * @type {Path}
                   */
                }, {
                  key: "path",
                  get: function() {
                    return this._getPath();
                  }
                }, {
                  key: "advanceWidth",
                  get: function() {
                    return this._getMetrics().advanceWidth;
                  }
                  /**
                   * The glyph's advance height.
                   * @type {number}
                   */
                }, {
                  key: "advanceHeight",
                  get: function() {
                    return this._getMetrics().advanceHeight;
                  }
                }, {
                  key: "ligatureCaretPositions",
                  get: function() {
                  }
                }, {
                  key: "name",
                  get: function() {
                    return this._getName();
                  }
                }]), ft;
              }(), M(dn.prototype, "cbox", [K], Object.getOwnPropertyDescriptor(dn.prototype, "cbox"), dn.prototype), M(dn.prototype, "bbox", [K], Object.getOwnPropertyDescriptor(dn.prototype, "bbox"), dn.prototype), M(dn.prototype, "path", [K], Object.getOwnPropertyDescriptor(dn.prototype, "path"), dn.prototype), M(dn.prototype, "advanceWidth", [K], Object.getOwnPropertyDescriptor(dn.prototype, "advanceWidth"), dn.prototype), M(dn.prototype, "advanceHeight", [K], Object.getOwnPropertyDescriptor(dn.prototype, "advanceHeight"), dn.prototype), M(dn.prototype, "name", [K], Object.getOwnPropertyDescriptor(dn.prototype, "name"), dn.prototype), dn), C0 = new e.Struct({
                numberOfContours: e.int16,
                // if negative, this is a composite glyph
                xMin: e.int16,
                yMin: e.int16,
                xMax: e.int16,
                yMax: e.int16
              }), Uc = 1, zc = 2, Wc = 4, Hc = 8, jc = 16, Gc = 32, Vc = 1, Xc = 8, E0 = 32, Zc = 64, Yc = 128, Kc = 256, Sa = /* @__PURE__ */ function() {
                function ft(et, O, U, H) {
                  U === void 0 && (U = 0), H === void 0 && (H = 0), this.onCurve = et, this.endContour = O, this.x = U, this.y = H;
                }
                var X = ft.prototype;
                return X.copy = function() {
                  return new ft(this.onCurve, this.endContour, this.x, this.y);
                }, ft;
              }(), Jc = function(X, et, O) {
                this.glyphID = X, this.dx = et, this.dy = O, this.pos = 0, this.scaleX = this.scaleY = 1, this.scale01 = this.scale10 = 0;
              }, yo = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et._getCBox = function(U) {
                  if (this._font._variationProcessor && !U)
                    return this.path.cbox;
                  var H = this._font._getTableStream("glyf");
                  H.pos += this._font.loca.offsets[this.id];
                  var lt = C0.decode(H), vt = new qa(lt.xMin, lt.yMin, lt.xMax, lt.yMax);
                  return Object.freeze(vt);
                }, et._parseGlyphCoord = function(U, H, lt, vt) {
                  if (lt) {
                    var dt = U.readUInt8();
                    vt || (dt = -dt), dt += H;
                  } else if (vt)
                    var dt = H;
                  else
                    var dt = H + U.readInt16BE();
                  return dt;
                }, et._decode = function() {
                  var U = this._font.loca.offsets[this.id], H = this._font.loca.offsets[this.id + 1];
                  if (U === H)
                    return null;
                  var lt = this._font._getTableStream("glyf");
                  lt.pos += U;
                  var vt = lt.pos, dt = C0.decode(lt);
                  return dt.numberOfContours > 0 ? this._decodeSimple(dt, lt) : dt.numberOfContours < 0 && this._decodeComposite(dt, lt, vt), dt;
                }, et._decodeSimple = function(U, H) {
                  U.points = [];
                  var lt = new e.Array(e.uint16, U.numberOfContours).decode(H);
                  U.instructions = new e.Array(e.uint8, e.uint16).decode(H);
                  for (var vt = [], dt = lt[lt.length - 1] + 1; vt.length < dt; ) {
                    var ht = H.readUInt8();
                    if (vt.push(ht), ht & Hc)
                      for (var Pt = H.readUInt8(), Vt = 0; Vt < Pt; Vt++)
                        vt.push(ht);
                  }
                  for (var se = 0; se < vt.length; se++) {
                    var ht = vt[se], $t = new Sa(!!(ht & Uc), lt.indexOf(se) >= 0, 0, 0);
                    U.points.push($t);
                  }
                  for (var ue = 0, se = 0; se < vt.length; se++) {
                    var ht = vt[se];
                    U.points[se].x = ue = this._parseGlyphCoord(H, ue, ht & zc, ht & jc);
                  }
                  for (var pe = 0, se = 0; se < vt.length; se++) {
                    var ht = vt[se];
                    U.points[se].y = pe = this._parseGlyphCoord(H, pe, ht & Wc, ht & Gc);
                  }
                  if (this._font._variationProcessor) {
                    var Te = U.points.slice();
                    Te.push.apply(Te, this._getPhantomPoints(U)), this._font._variationProcessor.transformPoints(this.id, Te), U.phantomPoints = Te.slice(-4);
                  }
                }, et._decodeComposite = function(U, H, lt) {
                  lt === void 0 && (lt = 0), U.components = [];
                  for (var vt = !1, dt = E0; dt & E0; ) {
                    dt = H.readUInt16BE();
                    var ht = H.pos - lt, Pt = H.readUInt16BE();
                    if (vt || (vt = (dt & Kc) !== 0), dt & Vc)
                      var Vt = H.readInt16BE(), se = H.readInt16BE();
                    else
                      var Vt = H.readInt8(), se = H.readInt8();
                    var $t = new Jc(Pt, Vt, se);
                    $t.pos = ht, dt & Xc ? $t.scaleX = $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824 : dt & Zc ? ($t.scaleX = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824) : dt & Yc && ($t.scaleX = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scale01 = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scale10 = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824), U.components.push($t);
                  }
                  if (this._font._variationProcessor) {
                    for (var ue = [], pe = 0; pe < U.components.length; pe++) {
                      var $t = U.components[pe];
                      ue.push(new Sa(!0, !0, $t.dx, $t.dy));
                    }
                    ue.push.apply(ue, this._getPhantomPoints(U)), this._font._variationProcessor.transformPoints(this.id, ue), U.phantomPoints = ue.splice(-4, 4);
                    for (var Te = 0; Te < ue.length; Te++) {
                      var He = ue[Te];
                      U.components[Te].dx = He.x, U.components[Te].dy = He.y;
                    }
                  }
                  return vt;
                }, et._getPhantomPoints = function(U) {
                  var H = this._getCBox(!0);
                  this._metrics == null && (this._metrics = go.prototype._getMetrics.call(this, H));
                  var lt = this._metrics, vt = lt.advanceWidth, dt = lt.advanceHeight, ht = lt.leftBearing, Pt = lt.topBearing;
                  return [new Sa(!1, !0, U.xMin - ht, 0), new Sa(!1, !0, U.xMin - ht + vt, 0), new Sa(!1, !0, 0, U.yMax + Pt), new Sa(!1, !0, 0, U.yMax + Pt + dt)];
                }, et._getContours = function() {
                  var U = this._decode();
                  if (!U)
                    return [];
                  var H = [];
                  if (U.numberOfContours < 0)
                    for (var lt = a(U.components), vt; !(vt = lt()).done; )
                      for (var dt = vt.value, ht = this._font.getGlyph(dt.glyphID)._getContours(), Pt = 0; Pt < ht.length; Pt++)
                        for (var Vt = ht[Pt], se = 0; se < Vt.length; se++) {
                          var $t = Vt[se], ue = $t.x * dt.scaleX + $t.y * dt.scale01 + dt.dx, pe = $t.y * dt.scaleY + $t.x * dt.scale10 + dt.dy;
                          H.push(new Sa($t.onCurve, $t.endContour, ue, pe));
                        }
                  else
                    H = U.points || [];
                  U.phantomPoints && !this._font.directory.tables.HVAR && (this._metrics.advanceWidth = U.phantomPoints[1].x - U.phantomPoints[0].x, this._metrics.advanceHeight = U.phantomPoints[3].y - U.phantomPoints[2].y, this._metrics.leftBearing = U.xMin - U.phantomPoints[0].x, this._metrics.topBearing = U.phantomPoints[2].y - U.yMax);
                  for (var Te = [], He = [], _e = 0; _e < H.length; _e++) {
                    var Xe = H[_e];
                    He.push(Xe), Xe.endContour && (Te.push(He), He = []);
                  }
                  return Te;
                }, et._getMetrics = function() {
                  if (this._metrics)
                    return this._metrics;
                  var U = this._getCBox(!0);
                  return ft.prototype._getMetrics.call(this, U), this._font._variationProcessor && !this._font.HVAR && this.path, this._metrics;
                }, et._getPath = function() {
                  for (var U = this._getContours(), H = new po(), lt = 0; lt < U.length; lt++) {
                    var vt = U[lt], dt = vt[0], ht = vt[vt.length - 1], Pt = 0;
                    if (dt.onCurve) {
                      var Vt = null;
                      Pt = 1;
                    } else {
                      ht.onCurve ? dt = ht : dt = new Sa(!1, !1, (dt.x + ht.x) / 2, (dt.y + ht.y) / 2);
                      var Vt = dt;
                    }
                    H.moveTo(dt.x, dt.y);
                    for (var se = Pt; se < vt.length; se++) {
                      var $t = vt[se], ue = se === 0 ? dt : vt[se - 1];
                      if (ue.onCurve && $t.onCurve)
                        H.lineTo($t.x, $t.y);
                      else if (ue.onCurve && !$t.onCurve)
                        var Vt = $t;
                      else if (!ue.onCurve && !$t.onCurve) {
                        var pe = (ue.x + $t.x) / 2, Te = (ue.y + $t.y) / 2;
                        H.quadraticCurveTo(ue.x, ue.y, pe, Te);
                        var Vt = $t;
                      } else if (!ue.onCurve && $t.onCurve) {
                        H.quadraticCurveTo(Vt.x, Vt.y, $t.x, $t.y);
                        var Vt = null;
                      } else
                        throw new Error("Unknown TTF path state");
                    }
                    Vt && H.quadraticCurveTo(Vt.x, Vt.y, dt.x, dt.y), H.closePath();
                  }
                  return H;
                }, X;
              }(go), Qc = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et._getName = function() {
                  return this._font.CFF2 ? ft.prototype._getName.call(this) : this._font["CFF "].getGlyphName(this.id);
                }, et.bias = function(U) {
                  return U.length < 1240 ? 107 : U.length < 33900 ? 1131 : 32768;
                }, et._getPath = function() {
                  var U = this._font.CFF2 || this._font["CFF "], H = U.stream, lt = U.topDict.CharStrings[this.id], vt = lt.offset + lt.length;
                  H.pos = lt.offset;
                  var dt = new po(), ht = [], Pt = [], Vt = null, se = 0, $t = 0, ue = 0, pe, Te, He = !1;
                  this._usedGsubrs = pe = {}, this._usedSubrs = Te = {};
                  var _e = U.globalSubrIndex || [], Xe = this.bias(_e), hr = U.privateDictForGlyph(this.id) || {}, sr = hr.Subrs || [], dr = this.bias(sr), mr = U.topDict.vstore && U.topDict.vstore.itemVariationStore, Hr = hr.vsindex, tn = this._font._variationProcessor;
                  function Ur() {
                    Vt == null && (Vt = ht.shift() + hr.nominalWidthX);
                  }
                  function vr() {
                    return ht.length % 2 !== 0 && Ur(), se += ht.length >> 1, ht.length = 0;
                  }
                  function Pr(un, gr) {
                    He && dt.closePath(), dt.moveTo(un, gr), He = !0;
                  }
                  var zr = function un() {
                    for (; H.pos < vt; ) {
                      var gr = H.readUInt8();
                      if (gr < 32)
                        switch (gr) {
                          case 1:
                          case 3:
                          case 18:
                          case 23:
                            vr();
                            break;
                          case 4:
                            ht.length > 1 && Ur(), ue += ht.shift(), Pr($t, ue);
                            break;
                          case 5:
                            for (; ht.length >= 2; )
                              $t += ht.shift(), ue += ht.shift(), dt.lineTo($t, ue);
                            break;
                          case 6:
                          case 7:
                            for (var Br = gr === 6; ht.length >= 1; )
                              Br ? $t += ht.shift() : ue += ht.shift(), dt.lineTo($t, ue), Br = !Br;
                            break;
                          case 8:
                            for (; ht.length > 0; ) {
                              var Rr = $t + ht.shift(), Cr = ue + ht.shift(), Qr = Rr + ht.shift(), Gr = Cr + ht.shift();
                              $t = Qr + ht.shift(), ue = Gr + ht.shift(), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            }
                            break;
                          case 10:
                            var jr = ht.pop() + dr, xr = sr[jr];
                            if (xr) {
                              Te[jr] = !0;
                              var fn = H.pos, mn = vt;
                              H.pos = xr.offset, vt = xr.offset + xr.length, un(), H.pos = fn, vt = mn;
                            }
                            break;
                          case 11:
                            if (U.version >= 2)
                              break;
                            return;
                          case 14:
                            if (U.version >= 2)
                              break;
                            ht.length > 0 && Ur(), He && (dt.closePath(), He = !1);
                            break;
                          case 15: {
                            if (U.version < 2)
                              throw new Error("vsindex operator not supported in CFF v1");
                            Hr = ht.pop();
                            break;
                          }
                          case 16: {
                            if (U.version < 2)
                              throw new Error("blend operator not supported in CFF v1");
                            if (!tn)
                              throw new Error("blend operator in non-variation font");
                            for (var Fn = tn.getBlendVector(mr, Hr), Bn = ht.pop(), In = Bn * Fn.length, Un = ht.length - In, zn = Un - Bn, Sn = 0; Sn < Bn; Sn++) {
                              for (var vn = ht[zn + Sn], Rn = 0; Rn < Fn.length; Rn++)
                                vn += Fn[Rn] * ht[Un++];
                              ht[zn + Sn] = vn;
                            }
                            for (; In--; )
                              ht.pop();
                            break;
                          }
                          case 19:
                          case 20:
                            vr(), H.pos += se + 7 >> 3;
                            break;
                          case 21:
                            ht.length > 2 && Ur(), $t += ht.shift(), ue += ht.shift(), Pr($t, ue);
                            break;
                          case 22:
                            ht.length > 1 && Ur(), $t += ht.shift(), Pr($t, ue);
                            break;
                          case 24:
                            for (; ht.length >= 8; ) {
                              var Rr = $t + ht.shift(), Cr = ue + ht.shift(), Qr = Rr + ht.shift(), Gr = Cr + ht.shift();
                              $t = Qr + ht.shift(), ue = Gr + ht.shift(), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            }
                            $t += ht.shift(), ue += ht.shift(), dt.lineTo($t, ue);
                            break;
                          case 25:
                            for (; ht.length >= 8; )
                              $t += ht.shift(), ue += ht.shift(), dt.lineTo($t, ue);
                            var Rr = $t + ht.shift(), Cr = ue + ht.shift(), Qr = Rr + ht.shift(), Gr = Cr + ht.shift();
                            $t = Qr + ht.shift(), ue = Gr + ht.shift(), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            break;
                          case 26:
                            for (ht.length % 2 && ($t += ht.shift()); ht.length >= 4; )
                              Rr = $t, Cr = ue + ht.shift(), Qr = Rr + ht.shift(), Gr = Cr + ht.shift(), $t = Qr, ue = Gr + ht.shift(), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            break;
                          case 27:
                            for (ht.length % 2 && (ue += ht.shift()); ht.length >= 4; )
                              Rr = $t + ht.shift(), Cr = ue, Qr = Rr + ht.shift(), Gr = Cr + ht.shift(), $t = Qr + ht.shift(), ue = Gr, dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            break;
                          case 28:
                            ht.push(H.readInt16BE());
                            break;
                          case 29:
                            if (jr = ht.pop() + Xe, xr = _e[jr], xr) {
                              pe[jr] = !0;
                              var fn = H.pos, mn = vt;
                              H.pos = xr.offset, vt = xr.offset + xr.length, un(), H.pos = fn, vt = mn;
                            }
                            break;
                          case 30:
                          case 31:
                            for (Br = gr === 31; ht.length >= 4; )
                              Br ? (Rr = $t + ht.shift(), Cr = ue, Qr = Rr + ht.shift(), Gr = Cr + ht.shift(), ue = Gr + ht.shift(), $t = Qr + (ht.length === 1 ? ht.shift() : 0)) : (Rr = $t, Cr = ue + ht.shift(), Qr = Rr + ht.shift(), Gr = Cr + ht.shift(), $t = Qr + ht.shift(), ue = Gr + (ht.length === 1 ? ht.shift() : 0)), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue), Br = !Br;
                            break;
                          case 12:
                            switch (gr = H.readUInt8(), gr) {
                              case 3:
                                var Lr = ht.pop(), An = ht.pop();
                                ht.push(Lr && An ? 1 : 0);
                                break;
                              case 4:
                                Lr = ht.pop(), An = ht.pop(), ht.push(Lr || An ? 1 : 0);
                                break;
                              case 5:
                                Lr = ht.pop(), ht.push(Lr ? 0 : 1);
                                break;
                              case 9:
                                Lr = ht.pop(), ht.push(Math.abs(Lr));
                                break;
                              case 10:
                                Lr = ht.pop(), An = ht.pop(), ht.push(Lr + An);
                                break;
                              case 11:
                                Lr = ht.pop(), An = ht.pop(), ht.push(Lr - An);
                                break;
                              case 12:
                                Lr = ht.pop(), An = ht.pop(), ht.push(Lr / An);
                                break;
                              case 14:
                                Lr = ht.pop(), ht.push(-Lr);
                                break;
                              case 15:
                                Lr = ht.pop(), An = ht.pop(), ht.push(Lr === An ? 1 : 0);
                                break;
                              case 18:
                                ht.pop();
                                break;
                              case 20:
                                var ei = ht.pop(), aa = ht.pop();
                                Pt[aa] = ei;
                                break;
                              case 21:
                                aa = ht.pop(), ht.push(Pt[aa] || 0);
                                break;
                              case 22:
                                var os = ht.pop(), kh = ht.pop(), Uh = ht.pop(), zh = ht.pop();
                                ht.push(Uh <= zh ? os : kh);
                                break;
                              case 23:
                                ht.push(Math.random());
                                break;
                              case 24:
                                Lr = ht.pop(), An = ht.pop(), ht.push(Lr * An);
                                break;
                              case 26:
                                Lr = ht.pop(), ht.push(Math.sqrt(Lr));
                                break;
                              case 27:
                                Lr = ht.pop(), ht.push(Lr, Lr);
                                break;
                              case 28:
                                Lr = ht.pop(), An = ht.pop(), ht.push(An, Lr);
                                break;
                              case 29:
                                aa = ht.pop(), aa < 0 ? aa = 0 : aa > ht.length - 1 && (aa = ht.length - 1), ht.push(ht[aa]);
                                break;
                              case 30:
                                var mo = ht.pop(), Fi = ht.pop();
                                if (Fi >= 0)
                                  for (; Fi > 0; ) {
                                    for (var ss = ht[mo - 1], xo = mo - 2; xo >= 0; xo--)
                                      ht[xo + 1] = ht[xo];
                                    ht[0] = ss, Fi--;
                                  }
                                else
                                  for (; Fi < 0; ) {
                                    for (var ss = ht[0], bo = 0; bo <= mo; bo++)
                                      ht[bo] = ht[bo + 1];
                                    ht[mo - 1] = ss, Fi++;
                                  }
                                break;
                              case 34:
                                Rr = $t + ht.shift(), Cr = ue, Qr = Rr + ht.shift(), Gr = Cr + ht.shift();
                                var Ii = Qr + ht.shift(), Di = Gr, Oi = Ii + ht.shift(), Pi = Di, Bi = Oi + ht.shift(), Ri = Pi, Li = Bi + ht.shift(), Ni = Ri;
                                $t = Li, ue = Ni, dt.bezierCurveTo(Rr, Cr, Qr, Gr, Ii, Di), dt.bezierCurveTo(Oi, Pi, Bi, Ri, Li, Ni);
                                break;
                              case 35:
                                for (var Oa = [], z0 = 0; z0 <= 5; z0++)
                                  $t += ht.shift(), ue += ht.shift(), Oa.push($t, ue);
                                dt.bezierCurveTo.apply(dt, Oa.slice(0, 6)), dt.bezierCurveTo.apply(dt, Oa.slice(6)), ht.shift();
                                break;
                              case 36:
                                Rr = $t + ht.shift(), Cr = ue + ht.shift(), Qr = Rr + ht.shift(), Gr = Cr + ht.shift(), Ii = Qr + ht.shift(), Di = Gr, Oi = Ii + ht.shift(), Pi = Di, Bi = Oi + ht.shift(), Ri = Pi + ht.shift(), Li = Bi + ht.shift(), Ni = Ri, $t = Li, ue = Ni, dt.bezierCurveTo(Rr, Cr, Qr, Gr, Ii, Di), dt.bezierCurveTo(Oi, Pi, Bi, Ri, Li, Ni);
                                break;
                              case 37:
                                var W0 = $t, H0 = ue;
                                Oa = [];
                                for (var j0 = 0; j0 <= 4; j0++)
                                  $t += ht.shift(), ue += ht.shift(), Oa.push($t, ue);
                                Math.abs($t - W0) > Math.abs(ue - H0) ? ($t += ht.shift(), ue = H0) : ($t = W0, ue += ht.shift()), Oa.push($t, ue), dt.bezierCurveTo.apply(dt, Oa.slice(0, 6)), dt.bezierCurveTo.apply(dt, Oa.slice(6));
                                break;
                              default:
                                throw new Error("Unknown op: 12 ".concat(gr));
                            }
                            break;
                          default:
                            throw new Error("Unknown op: ".concat(gr));
                        }
                      else if (gr < 247)
                        ht.push(gr - 139);
                      else if (gr < 251) {
                        var fs = H.readUInt8();
                        ht.push((gr - 247) * 256 + fs + 108);
                      } else if (gr < 255) {
                        var fs = H.readUInt8();
                        ht.push(-(gr - 251) * 256 - fs - 108);
                      } else
                        ht.push(H.readInt32BE() / 65536);
                    }
                  };
                  return zr(), He && dt.closePath(), dt;
                }, X;
              }(go), $c = new e.Struct({
                originX: e.uint16,
                originY: e.uint16,
                type: new e.String(4),
                data: new e.Buffer(function(ft) {
                  return ft.parent.buflen - ft._currentOffset;
                })
              }), qc = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et.getImageForSize = function(U) {
                  for (var H = 0; H < this._font.sbix.imageTables.length; H++) {
                    var lt = this._font.sbix.imageTables[H];
                    if (lt.ppem >= U)
                      break;
                  }
                  var vt = lt.imageOffsets, dt = vt[this.id], ht = vt[this.id + 1];
                  return dt === ht ? null : (this._font.stream.pos = dt, $c.decode(this._font.stream, {
                    buflen: ht - dt
                  }));
                }, et.render = function(U, H) {
                  var lt = this.getImageForSize(H);
                  if (lt != null) {
                    var vt = H / this._font.unitsPerEm;
                    U.image(lt.data, {
                      height: H,
                      x: lt.originX,
                      y: (this.bbox.minY - lt.originY) * vt
                    });
                  }
                  this._font.sbix.flags.renderOutlines && ft.prototype.render.call(this, U, H);
                }, X;
              }(yo), T0 = function(X, et) {
                this.glyph = X, this.color = et;
              }, _c = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et._getBBox = function() {
                  for (var U = new qa(), H = 0; H < this.layers.length; H++) {
                    var lt = this.layers[H], vt = lt.glyph.bbox;
                    U.addPoint(vt.minX, vt.minY), U.addPoint(vt.maxX, vt.maxY);
                  }
                  return U;
                }, et.render = function(U, H) {
                  for (var lt = a(this.layers), vt; !(vt = lt()).done; ) {
                    var dt = vt.value, ht = dt.glyph, Pt = dt.color;
                    U.fillColor([Pt.red, Pt.green, Pt.blue], Pt.alpha / 255 * 100), ht.render(U, H);
                  }
                }, i(X, [{
                  key: "layers",
                  get: function() {
                    for (var U = this._font.CPAL, H = this._font.COLR, lt = 0, vt = H.baseGlyphRecord.length - 1; lt <= vt; ) {
                      var dt = lt + vt >> 1, ht = H.baseGlyphRecord[dt];
                      if (this.id < ht.gid)
                        vt = dt - 1;
                      else if (this.id > ht.gid)
                        lt = dt + 1;
                      else {
                        var Pt = ht;
                        break;
                      }
                    }
                    if (Pt == null) {
                      var Vt = this._font._getBaseGlyph(this.id), se = {
                        red: 0,
                        green: 0,
                        blue: 0,
                        alpha: 255
                      };
                      return [new T0(Vt, se)];
                    }
                    for (var $t = [], ue = Pt.firstLayerIndex; ue < Pt.firstLayerIndex + Pt.numLayers; ue++) {
                      var ht = H.layerRecords[ue], se = U.colorRecords[ht.paletteIndex], Vt = this._font._getBaseGlyph(ht.gid);
                      $t.push(new T0(Vt, se));
                    }
                    return $t;
                  }
                }]), X;
              }(go), th = 32768, eh = 4095, rh = 32768, F0 = 16384, nh = 8192, I0 = 4095, D0 = 128, O0 = 127, ah = 128, ih = 64, oh = 63, sh = /* @__PURE__ */ function() {
                function ft(et, O) {
                  this.font = et, this.normalizedCoords = this.normalizeCoords(O), this.blendVectors = /* @__PURE__ */ new Map();
                }
                var X = ft.prototype;
                return X.normalizeCoords = function(O) {
                  for (var U = [], H = 0; H < this.font.fvar.axis.length; H++) {
                    var lt = this.font.fvar.axis[H];
                    O[H] < lt.defaultValue ? U.push((O[H] - lt.defaultValue + Number.EPSILON) / (lt.defaultValue - lt.minValue + Number.EPSILON)) : U.push((O[H] - lt.defaultValue + Number.EPSILON) / (lt.maxValue - lt.defaultValue + Number.EPSILON));
                  }
                  if (this.font.avar)
                    for (var H = 0; H < this.font.avar.segment.length; H++)
                      for (var vt = this.font.avar.segment[H], dt = 0; dt < vt.correspondence.length; dt++) {
                        var ht = vt.correspondence[dt];
                        if (dt >= 1 && U[H] < ht.fromCoord) {
                          var Pt = vt.correspondence[dt - 1];
                          U[H] = ((U[H] - Pt.fromCoord) * (ht.toCoord - Pt.toCoord) + Number.EPSILON) / (ht.fromCoord - Pt.fromCoord + Number.EPSILON) + Pt.toCoord;
                          break;
                        }
                      }
                  return U;
                }, X.transformPoints = function(O, U) {
                  if (!(!this.font.fvar || !this.font.gvar)) {
                    var H = this.font.gvar;
                    if (!(O >= H.glyphCount)) {
                      var lt = H.offsets[O];
                      if (lt !== H.offsets[O + 1]) {
                        var vt = this.font.stream;
                        if (vt.pos = lt, !(vt.pos >= vt.length)) {
                          var dt = vt.readUInt16BE(), ht = lt + vt.readUInt16BE();
                          if (dt & th) {
                            var Pt = vt.pos;
                            vt.pos = ht;
                            var Vt = this.decodePoints();
                            ht = vt.pos, vt.pos = Pt;
                          }
                          var se = U.map(function(Fn) {
                            return Fn.copy();
                          });
                          dt &= eh;
                          for (var $t = 0; $t < dt; $t++) {
                            var ue = vt.readUInt16BE(), pe = vt.readUInt16BE();
                            if (pe & rh)
                              for (var Te = [], He = 0; He < H.axisCount; He++)
                                Te.push(vt.readInt16BE() / 16384);
                            else {
                              if ((pe & I0) >= H.globalCoordCount)
                                throw new Error("Invalid gvar table");
                              var Te = H.globalCoords[pe & I0];
                            }
                            if (pe & F0) {
                              for (var _e = [], Xe = 0; Xe < H.axisCount; Xe++)
                                _e.push(vt.readInt16BE() / 16384);
                              for (var hr = [], sr = 0; sr < H.axisCount; sr++)
                                hr.push(vt.readInt16BE() / 16384);
                            }
                            var dr = this.tupleFactor(pe, Te, _e, hr);
                            if (dr === 0) {
                              ht += ue;
                              continue;
                            }
                            var Pt = vt.pos;
                            if (vt.pos = ht, pe & nh)
                              var mr = this.decodePoints();
                            else
                              var mr = Vt;
                            var Hr = mr.length === 0 ? U.length : mr.length, tn = this.decodeDeltas(Hr), Ur = this.decodeDeltas(Hr);
                            if (mr.length === 0)
                              for (var vr = 0; vr < U.length; vr++) {
                                var Pr = U[vr];
                                Pr.x += Math.round(tn[vr] * dr), Pr.y += Math.round(Ur[vr] * dr);
                              }
                            else {
                              for (var zr = se.map(function(Bn) {
                                return Bn.copy();
                              }), un = U.map(function() {
                                return !1;
                              }), gr = 0; gr < mr.length; gr++) {
                                var Br = mr[gr];
                                if (Br < U.length) {
                                  var jr = zr[Br];
                                  un[Br] = !0, jr.x += Math.round(tn[gr] * dr), jr.y += Math.round(Ur[gr] * dr);
                                }
                              }
                              this.interpolateMissingDeltas(zr, se, un);
                              for (var xr = 0; xr < U.length; xr++) {
                                var fn = zr[xr].x - se[xr].x, mn = zr[xr].y - se[xr].y;
                                U[xr].x += fn, U[xr].y += mn;
                              }
                            }
                            ht += ue, vt.pos = Pt;
                          }
                        }
                      }
                    }
                  }
                }, X.decodePoints = function() {
                  var O = this.font.stream, U = O.readUInt8();
                  U & D0 && (U = (U & O0) << 8 | O.readUInt8());
                  for (var H = new Uint16Array(U), lt = 0, vt = 0; lt < U; )
                    for (var dt = O.readUInt8(), ht = (dt & O0) + 1, Pt = dt & D0 ? O.readUInt16 : O.readUInt8, Vt = 0; Vt < ht && lt < U; Vt++)
                      vt += Pt.call(O), H[lt++] = vt;
                  return H;
                }, X.decodeDeltas = function(O) {
                  for (var U = this.font.stream, H = 0, lt = new Int16Array(O); H < O; ) {
                    var vt = U.readUInt8(), dt = (vt & oh) + 1;
                    if (vt & ah)
                      H += dt;
                    else
                      for (var ht = vt & ih ? U.readInt16BE : U.readInt8, Pt = 0; Pt < dt && H < O; Pt++)
                        lt[H++] = ht.call(U);
                  }
                  return lt;
                }, X.tupleFactor = function(O, U, H, lt) {
                  for (var vt = this.normalizedCoords, dt = this.font.gvar, ht = 1, Pt = 0; Pt < dt.axisCount; Pt++)
                    if (U[Pt] !== 0) {
                      if (vt[Pt] === 0)
                        return 0;
                      if (O & F0) {
                        if (vt[Pt] < H[Pt] || vt[Pt] > lt[Pt])
                          return 0;
                        vt[Pt] < U[Pt] ? ht = ht * (vt[Pt] - H[Pt] + Number.EPSILON) / (U[Pt] - H[Pt] + Number.EPSILON) : ht = ht * (lt[Pt] - vt[Pt] + Number.EPSILON) / (lt[Pt] - U[Pt] + Number.EPSILON);
                      } else {
                        if (vt[Pt] < Math.min(0, U[Pt]) || vt[Pt] > Math.max(0, U[Pt]))
                          return 0;
                        ht = (ht * vt[Pt] + Number.EPSILON) / (U[Pt] + Number.EPSILON);
                      }
                    }
                  return ht;
                }, X.interpolateMissingDeltas = function(O, U, H) {
                  if (O.length !== 0)
                    for (var lt = 0; lt < O.length; ) {
                      for (var vt = lt, dt = lt, ht = O[dt]; !ht.endContour; )
                        ht = O[++dt];
                      for (; lt <= dt && !H[lt]; )
                        lt++;
                      if (!(lt > dt)) {
                        var Pt = lt, Vt = lt;
                        for (lt++; lt <= dt; )
                          H[lt] && (this.deltaInterpolate(Vt + 1, lt - 1, Vt, lt, U, O), Vt = lt), lt++;
                        Vt === Pt ? this.deltaShift(vt, dt, Vt, U, O) : (this.deltaInterpolate(Vt + 1, dt, Vt, Pt, U, O), Pt > 0 && this.deltaInterpolate(vt, Pt - 1, Vt, Pt, U, O)), lt = dt + 1;
                      }
                    }
                }, X.deltaInterpolate = function(O, U, H, lt, vt, dt) {
                  if (!(O > U))
                    for (var ht = ["x", "y"], Pt = 0; Pt < ht.length; Pt++) {
                      var Vt = ht[Pt];
                      if (vt[H][Vt] > vt[lt][Vt]) {
                        var se = H;
                        H = lt, lt = se;
                      }
                      var $t = vt[H][Vt], ue = vt[lt][Vt], pe = dt[H][Vt], Te = dt[lt][Vt];
                      if ($t !== ue || pe === Te)
                        for (var He = $t === ue ? 0 : (Te - pe) / (ue - $t), _e = O; _e <= U; _e++) {
                          var Xe = vt[_e][Vt];
                          Xe <= $t ? Xe += pe - $t : Xe >= ue ? Xe += Te - ue : Xe = pe + (Xe - $t) * He, dt[_e][Vt] = Xe;
                        }
                    }
                }, X.deltaShift = function(O, U, H, lt, vt) {
                  var dt = vt[H].x - lt[H].x, ht = vt[H].y - lt[H].y;
                  if (!(dt === 0 && ht === 0))
                    for (var Pt = O; Pt <= U; Pt++)
                      Pt !== H && (vt[Pt].x += dt, vt[Pt].y += ht);
                }, X.getAdvanceAdjustment = function(O, U) {
                  var H, lt;
                  if (U.advanceWidthMapping) {
                    var vt = O;
                    vt >= U.advanceWidthMapping.mapCount && (vt = U.advanceWidthMapping.mapCount - 1), U.advanceWidthMapping.entryFormat;
                    var dt = U.advanceWidthMapping.mapData[vt];
                    H = dt.outerIndex, lt = dt.innerIndex;
                  } else
                    H = 0, lt = O;
                  return this.getDelta(U.itemVariationStore, H, lt);
                }, X.getDelta = function(O, U, H) {
                  if (U >= O.itemVariationData.length)
                    return 0;
                  var lt = O.itemVariationData[U];
                  if (H >= lt.deltaSets.length)
                    return 0;
                  for (var vt = lt.deltaSets[H], dt = this.getBlendVector(O, U), ht = 0, Pt = 0; Pt < lt.regionIndexCount; Pt++)
                    ht += vt.deltas[Pt] * dt[Pt];
                  return ht;
                }, X.getBlendVector = function(O, U) {
                  var H = O.itemVariationData[U];
                  if (this.blendVectors.has(H))
                    return this.blendVectors.get(H);
                  for (var lt = this.normalizedCoords, vt = [], dt = 0; dt < H.regionIndexCount; dt++) {
                    for (var ht = 1, Pt = H.regionIndexes[dt], Vt = O.variationRegionList.variationRegions[Pt], se = 0; se < Vt.length; se++) {
                      var $t = Vt[se], ue = void 0;
                      $t.startCoord > $t.peakCoord || $t.peakCoord > $t.endCoord || $t.startCoord < 0 && $t.endCoord > 0 && $t.peakCoord !== 0 || $t.peakCoord === 0 ? ue = 1 : lt[se] < $t.startCoord || lt[se] > $t.endCoord ? ue = 0 : lt[se] === $t.peakCoord ? ue = 1 : lt[se] < $t.peakCoord ? ue = (lt[se] - $t.startCoord + Number.EPSILON) / ($t.peakCoord - $t.startCoord + Number.EPSILON) : ue = ($t.endCoord - lt[se] + Number.EPSILON) / ($t.endCoord - $t.peakCoord + Number.EPSILON), ht *= ue;
                    }
                    vt[dt] = ht;
                  }
                  return this.blendVectors.set(H, vt), vt;
                }, ft;
              }(), fh = Promise.resolve(), P0 = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et, this.glyphs = [], this.mapping = {}, this.includeGlyph(0);
                }
                var X = ft.prototype;
                return X.includeGlyph = function(O) {
                  return typeof O == "object" && (O = O.id), this.mapping[O] == null && (this.glyphs.push(O), this.mapping[O] = this.glyphs.length - 1), this.mapping[O];
                }, X.encodeStream = function() {
                  var O = this, U = new e.EncodeStream();
                  return fh.then(function() {
                    return O.encode(U), U.end();
                  }), U;
                }, ft;
              }(), lh = 1, uh = 2, ch = 4, hh = 8, dh = 16, vh = 32, B0 = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.size = function(et) {
                  return et >= 0 && et <= 255 ? 1 : 2;
                }, ft.encode = function(et, O) {
                  O >= 0 && O <= 255 ? et.writeUInt8(O) : et.writeInt16BE(O);
                }, ft;
              }(), R0 = new e.Struct({
                numberOfContours: e.int16,
                // if negative, this is a composite glyph
                xMin: e.int16,
                yMin: e.int16,
                xMax: e.int16,
                yMax: e.int16,
                endPtsOfContours: new e.Array(e.uint16, "numberOfContours"),
                instructions: new e.Array(e.uint8, e.uint16),
                flags: new e.Array(e.uint8, 0),
                xPoints: new e.Array(B0, 0),
                yPoints: new e.Array(B0, 0)
              }), ph = /* @__PURE__ */ function() {
                function ft() {
                }
                var X = ft.prototype;
                return X.encodeSimple = function(O, U) {
                  U === void 0 && (U = []);
                  for (var H = [], lt = [], vt = [], dt = [], ht = 0, Pt = 0, Vt = 0, se = 0, $t = 0, ue = 0; ue < O.commands.length; ue++) {
                    for (var pe = O.commands[ue], Te = 0; Te < pe.args.length; Te += 2) {
                      var He = pe.args[Te], _e = pe.args[Te + 1], Xe = 0;
                      if (pe.command === "quadraticCurveTo" && Te === 2) {
                        var hr = O.commands[ue + 1];
                        if (hr && hr.command === "quadraticCurveTo") {
                          var sr = (Pt + hr.args[0]) / 2, dr = (Vt + hr.args[1]) / 2;
                          if (He === sr && _e === dr)
                            continue;
                        }
                      }
                      pe.command === "quadraticCurveTo" && Te === 0 || (Xe |= lh), Xe = this._encodePoint(He, Pt, lt, Xe, uh, dh), Xe = this._encodePoint(_e, Vt, vt, Xe, ch, vh), Xe === se && ht < 255 ? (dt[dt.length - 1] |= hh, ht++) : (ht > 0 && (dt.push(ht), ht = 0), dt.push(Xe), se = Xe), Pt = He, Vt = _e, $t++;
                    }
                    pe.command === "closePath" && H.push($t - 1);
                  }
                  O.commands.length > 1 && O.commands[O.commands.length - 1].command !== "closePath" && H.push($t - 1);
                  var mr = O.bbox, Hr = {
                    numberOfContours: H.length,
                    xMin: mr.minX,
                    yMin: mr.minY,
                    xMax: mr.maxX,
                    yMax: mr.maxY,
                    endPtsOfContours: H,
                    instructions: U,
                    flags: dt,
                    xPoints: lt,
                    yPoints: vt
                  }, tn = R0.size(Hr), Ur = 4 - tn % 4, vr = new e.EncodeStream(tn + Ur);
                  return R0.encode(vr, Hr), Ur !== 0 && vr.fill(0, Ur), vr.buffer;
                }, X._encodePoint = function(O, U, H, lt, vt, dt) {
                  var ht = O - U;
                  return O === U ? lt |= dt : (-255 <= ht && ht <= 255 && (lt |= vt, ht < 0 ? ht = -ht : lt |= dt), H.push(ht)), lt;
                }, ft;
              }(), gh = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X(O) {
                  var U;
                  return U = ft.call(this, O) || this, U.glyphEncoder = new ph(), U;
                }
                var et = X.prototype;
                return et._addGlyph = function(U) {
                  var H = this.font.getGlyph(U), lt = H._decode(), vt = this.font.loca.offsets[U], dt = this.font.loca.offsets[U + 1], ht = this.font._getTableStream("glyf");
                  ht.pos += vt;
                  var Pt = ht.readBuffer(dt - vt);
                  if (lt && lt.numberOfContours < 0) {
                    Pt = o.from(Pt);
                    for (var Vt = a(lt.components), se; !(se = Vt()).done; ) {
                      var $t = se.value;
                      U = this.includeGlyph($t.glyphID), Pt.writeUInt16BE(U, $t.pos);
                    }
                  } else
                    lt && this.font._variationProcessor && (Pt = this.glyphEncoder.encodeSimple(H.path, lt.instructions));
                  return this.glyf.push(Pt), this.loca.offsets.push(this.offset), this.hmtx.metrics.push({
                    advance: H.advanceWidth,
                    bearing: H._getMetrics().leftBearing
                  }), this.offset += Pt.length, this.glyf.length - 1;
                }, et.encode = function(U) {
                  this.glyf = [], this.offset = 0, this.loca = {
                    offsets: [],
                    version: this.font.loca.version
                  }, this.hmtx = {
                    metrics: [],
                    bearings: []
                  };
                  for (var H = 0; H < this.glyphs.length; )
                    this._addGlyph(this.glyphs[H++]);
                  var lt = C(this.font.maxp);
                  lt.numGlyphs = this.glyf.length, this.loca.offsets.push(this.offset);
                  var vt = C(this.font.head);
                  vt.indexToLocFormat = this.loca.version;
                  var dt = C(this.font.hhea);
                  dt.numberOfMetrics = this.hmtx.metrics.length, Ki.encode(U, {
                    tables: {
                      head: vt,
                      hhea: dt,
                      loca: this.loca,
                      maxp: lt,
                      "cvt ": this.font["cvt "],
                      prep: this.font.prep,
                      glyf: this.glyf,
                      hmtx: this.hmtx,
                      fpgm: this.font.fpgm
                      // name: clone @font.name
                      // 'OS/2': clone @font['OS/2']
                      // post: clone @font.post
                      // cmap: cmap
                    }
                  });
                }, X;
              }(P0), yh = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X(O) {
                  var U;
                  if (U = ft.call(this, O) || this, U.cff = U.font["CFF "], !U.cff)
                    throw new Error("Not a CFF Font");
                  return U;
                }
                var et = X.prototype;
                return et.subsetCharstrings = function() {
                  this.charstrings = [];
                  for (var U = {}, H = a(this.glyphs), lt; !(lt = H()).done; ) {
                    var vt = lt.value;
                    this.charstrings.push(this.cff.getCharString(vt));
                    var dt = this.font.getGlyph(vt);
                    dt.path;
                    for (var ht in dt._usedGsubrs)
                      U[ht] = !0;
                  }
                  this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, U);
                }, et.subsetSubrs = function(U, H) {
                  for (var lt = [], vt = 0; vt < U.length; vt++) {
                    var dt = U[vt];
                    H[vt] ? (this.cff.stream.pos = dt.offset, lt.push(this.cff.stream.readBuffer(dt.length))) : lt.push(o.from([11]));
                  }
                  return lt;
                }, et.subsetFontdict = function(U) {
                  U.FDArray = [], U.FDSelect = {
                    version: 0,
                    fds: []
                  };
                  for (var H = {}, lt = [], vt = {}, dt = a(this.glyphs), ht; !(ht = dt()).done; ) {
                    var Pt = ht.value, Vt = this.cff.fdForGlyph(Pt);
                    if (Vt != null) {
                      H[Vt] || (U.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[Vt])), lt.push({}), vt[Vt] = U.FDArray.length - 1), H[Vt] = !0, U.FDSelect.fds.push(vt[Vt]);
                      var se = this.font.getGlyph(Pt);
                      se.path;
                      for (var $t in se._usedSubrs)
                        lt[vt[Vt]][$t] = !0;
                    }
                  }
                  for (var ue = 0; ue < U.FDArray.length; ue++) {
                    var pe = U.FDArray[ue];
                    delete pe.FontName, pe.Private && pe.Private.Subrs && (pe.Private = Object.assign({}, pe.Private), pe.Private.Subrs = this.subsetSubrs(pe.Private.Subrs, lt[ue]));
                  }
                }, et.createCIDFontdict = function(U) {
                  for (var H = {}, lt = a(this.glyphs), vt; !(vt = lt()).done; ) {
                    var dt = vt.value, ht = this.font.getGlyph(dt);
                    ht.path;
                    for (var Pt in ht._usedSubrs)
                      H[Pt] = !0;
                  }
                  var Vt = Object.assign({}, this.cff.topDict.Private);
                  return this.cff.topDict.Private && this.cff.topDict.Private.Subrs && (Vt.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, H)), U.FDArray = [{
                    Private: Vt
                  }], U.FDSelect = {
                    version: 3,
                    nRanges: 1,
                    ranges: [{
                      first: 0,
                      fd: 0
                    }],
                    sentinel: this.charstrings.length
                  };
                }, et.addString = function(U) {
                  return U ? (this.strings || (this.strings = []), this.strings.push(U), fe.length + this.strings.length - 1) : null;
                }, et.encode = function(U) {
                  this.subsetCharstrings();
                  var H = {
                    version: this.charstrings.length > 255 ? 2 : 1,
                    ranges: [{
                      first: 1,
                      nLeft: this.charstrings.length - 2
                    }]
                  }, lt = Object.assign({}, this.cff.topDict);
                  lt.Private = null, lt.charset = H, lt.Encoding = null, lt.CharStrings = this.charstrings;
                  for (var vt = 0, dt = ["version", "Notice", "Copyright", "FullName", "FamilyName", "Weight", "PostScript", "BaseFontName", "FontName"]; vt < dt.length; vt++) {
                    var ht = dt[vt];
                    lt[ht] = this.addString(this.cff.string(lt[ht]));
                  }
                  lt.ROS = [this.addString("Adobe"), this.addString("Identity"), 0], lt.CIDCount = this.charstrings.length, this.cff.isCIDFont ? this.subsetFontdict(lt) : this.createCIDFontdict(lt);
                  var Pt = {
                    version: 1,
                    hdrSize: this.cff.hdrSize,
                    offSize: 4,
                    header: this.cff.header,
                    nameIndex: [this.cff.postscriptName],
                    topDictIndex: [lt],
                    stringIndex: this.strings,
                    globalSubrIndex: this.gsubrs
                  };
                  ve.encode(U, Pt);
                }, X;
              }(P0), sn, ja = (sn = /* @__PURE__ */ function() {
                ft.probe = function(O) {
                  var U = O.toString("ascii", 0, 4);
                  return U === "true" || U === "OTTO" || U === String.fromCharCode(0, 1, 0, 0);
                };
                function ft(et, O) {
                  O === void 0 && (O = null), this.defaultLanguage = null, this.stream = et, this.variationCoords = O, this._directoryPos = this.stream.pos, this._tables = {}, this._glyphs = {}, this._decodeDirectory();
                  for (var U in this.directory.tables) {
                    var H = this.directory.tables[U];
                    or[U] && H.length > 0 && Object.defineProperty(this, U, {
                      get: this._getTable.bind(this, H)
                    });
                  }
                }
                var X = ft.prototype;
                return X.setDefaultLanguage = function(O) {
                  O === void 0 && (O = null), this.defaultLanguage = O;
                }, X._getTable = function(O) {
                  if (!(O.tag in this._tables))
                    try {
                      this._tables[O.tag] = this._decodeTable(O);
                    } catch (U) {
                      P.logErrors && (console.error("Error decoding table ".concat(O.tag)), console.error(U.stack));
                    }
                  return this._tables[O.tag];
                }, X._getTableStream = function(O) {
                  var U = this.directory.tables[O];
                  return U ? (this.stream.pos = U.offset, this.stream) : null;
                }, X._decodeDirectory = function() {
                  return this.directory = Ki.decode(this.stream, {
                    _startOffset: 0
                  });
                }, X._decodeTable = function(O) {
                  var U = this.stream.pos, H = this._getTableStream(O.tag), lt = or[O.tag].decode(H, this, O.length);
                  return this.stream.pos = U, lt;
                }, X.getName = function(O, U) {
                  U === void 0 && (U = this.defaultLanguage || P.defaultLanguage);
                  var H = this.name && this.name.records[O];
                  return H && (H[U] || H[this.defaultLanguage] || H[P.defaultLanguage] || H.en || H[Object.keys(H)[0]]) || null;
                }, X.hasGlyphForCodePoint = function(O) {
                  return !!this._cmapProcessor.lookup(O);
                }, X.glyphForCodePoint = function(O) {
                  return this.getGlyph(this._cmapProcessor.lookup(O), [O]);
                }, X.glyphsForString = function(O) {
                  for (var U = [], H = O.length, lt = 0, vt = -1, dt = -1; lt <= H; ) {
                    var ht = 0, Pt = 0;
                    if (lt < H) {
                      if (ht = O.charCodeAt(lt++), 55296 <= ht && ht <= 56319 && lt < H) {
                        var Vt = O.charCodeAt(lt);
                        56320 <= Vt && Vt <= 57343 && (lt++, ht = ((ht & 1023) << 10) + (Vt & 1023) + 65536);
                      }
                      Pt = 65024 <= ht && ht <= 65039 || 917760 <= ht && ht <= 917999 ? 1 : 0;
                    } else
                      lt++;
                    dt === 0 && Pt === 1 ? U.push(this.getGlyph(this._cmapProcessor.lookup(vt, ht), [vt, ht])) : dt === 0 && Pt === 0 && U.push(this.glyphForCodePoint(vt)), vt = ht, dt = Pt;
                  }
                  return U;
                }, X.layout = function(O, U, H, lt, vt) {
                  return this._layoutEngine.layout(O, U, H, lt, vt);
                }, X.stringsForGlyph = function(O) {
                  return this._layoutEngine.stringsForGlyph(O);
                }, X.getAvailableFeatures = function(O, U) {
                  return this._layoutEngine.getAvailableFeatures(O, U);
                }, X._getBaseGlyph = function(O, U) {
                  return U === void 0 && (U = []), this._glyphs[O] || (this.directory.tables.glyf ? this._glyphs[O] = new yo(O, U, this) : (this.directory.tables["CFF "] || this.directory.tables.CFF2) && (this._glyphs[O] = new Qc(O, U, this))), this._glyphs[O] || null;
                }, X.getGlyph = function(O, U) {
                  return U === void 0 && (U = []), this._glyphs[O] || (this.directory.tables.sbix ? this._glyphs[O] = new qc(O, U, this) : this.directory.tables.COLR && this.directory.tables.CPAL ? this._glyphs[O] = new _c(O, U, this) : this._getBaseGlyph(O, U)), this._glyphs[O] || null;
                }, X.createSubset = function() {
                  return this.directory.tables["CFF "] ? new yh(this) : new gh(this);
                }, X.getVariation = function(O) {
                  if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2)))
                    throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");
                  if (typeof O == "string" && (O = this.namedVariations[O]), typeof O != "object")
                    throw new Error("Variation settings must be either a variation name or settings object.");
                  var U = this.fvar.axis.map(function(vt, dt) {
                    var ht = vt.axisTag.trim();
                    return ht in O ? Math.max(vt.minValue, Math.min(vt.maxValue, O[ht])) : vt.defaultValue;
                  }), H = new e.DecodeStream(this.stream.buffer);
                  H.pos = this._directoryPos;
                  var lt = new ft(H, U);
                  return lt._tables = this._tables, lt;
                }, X.getFont = function(O) {
                  return this.getVariation(O);
                }, i(ft, [{
                  key: "postscriptName",
                  get: function() {
                    return this.getName("postscriptName");
                  }
                  /**
                   * The font's full name, e.g. "Helvetica Bold"
                   * @type {string}
                   */
                }, {
                  key: "fullName",
                  get: function() {
                    return this.getName("fullName");
                  }
                  /**
                   * The font's family name, e.g. "Helvetica"
                   * @type {string}
                   */
                }, {
                  key: "familyName",
                  get: function() {
                    return this.getName("fontFamily");
                  }
                  /**
                   * The font's sub-family, e.g. "Bold".
                   * @type {string}
                   */
                }, {
                  key: "subfamilyName",
                  get: function() {
                    return this.getName("fontSubfamily");
                  }
                  /**
                   * The font's copyright information
                   * @type {string}
                   */
                }, {
                  key: "copyright",
                  get: function() {
                    return this.getName("copyright");
                  }
                  /**
                   * The font's version number
                   * @type {string}
                   */
                }, {
                  key: "version",
                  get: function() {
                    return this.getName("version");
                  }
                  /**
                   * The fontâs [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))
                   * @type {number}
                   */
                }, {
                  key: "ascent",
                  get: function() {
                    return this.hhea.ascent;
                  }
                  /**
                   * The fontâs [descender](https://en.wikipedia.org/wiki/Descender)
                   * @type {number}
                   */
                }, {
                  key: "descent",
                  get: function() {
                    return this.hhea.descent;
                  }
                  /**
                   * The amount of space that should be included between lines
                   * @type {number}
                   */
                }, {
                  key: "lineGap",
                  get: function() {
                    return this.hhea.lineGap;
                  }
                  /**
                   * The offset from the normal underline position that should be used
                   * @type {number}
                   */
                }, {
                  key: "underlinePosition",
                  get: function() {
                    return this.post.underlinePosition;
                  }
                  /**
                   * The weight of the underline that should be used
                   * @type {number}
                   */
                }, {
                  key: "underlineThickness",
                  get: function() {
                    return this.post.underlineThickness;
                  }
                  /**
                   * If this is an italic font, the angle the cursor should be drawn at to match the font design
                   * @type {number}
                   */
                }, {
                  key: "italicAngle",
                  get: function() {
                    return this.post.italicAngle;
                  }
                  /**
                   * The height of capital letters above the baseline.
                   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.
                   * @type {number}
                   */
                }, {
                  key: "capHeight",
                  get: function() {
                    var O = this["OS/2"];
                    return O ? O.capHeight : this.ascent;
                  }
                  /**
                   * The height of lower case letters in the font.
                   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.
                   * @type {number}
                   */
                }, {
                  key: "xHeight",
                  get: function() {
                    var O = this["OS/2"];
                    return O ? O.xHeight : 0;
                  }
                  /**
                   * The number of glyphs in the font.
                   * @type {number}
                   */
                }, {
                  key: "numGlyphs",
                  get: function() {
                    return this.maxp.numGlyphs;
                  }
                  /**
                   * The size of the fontâs internal coordinate grid
                   * @type {number}
                   */
                }, {
                  key: "unitsPerEm",
                  get: function() {
                    return this.head.unitsPerEm;
                  }
                  /**
                   * The fontâs bounding box, i.e. the box that encloses all glyphs in the font.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    return Object.freeze(new qa(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));
                  }
                }, {
                  key: "_cmapProcessor",
                  get: function() {
                    return new Yl(this.cmap);
                  }
                  /**
                   * An array of all of the unicode code points supported by the font.
                   * @type {number[]}
                   */
                }, {
                  key: "characterSet",
                  get: function() {
                    return this._cmapProcessor.getCharacterSet();
                  }
                }, {
                  key: "_layoutEngine",
                  get: function() {
                    return new Lc(this);
                  }
                }, {
                  key: "availableFeatures",
                  get: function() {
                    return this._layoutEngine.getAvailableFeatures();
                  }
                }, {
                  key: "variationAxes",
                  get: function() {
                    var O = {};
                    if (!this.fvar)
                      return O;
                    for (var U = a(this.fvar.axis), H; !(H = U()).done; ) {
                      var lt = H.value;
                      O[lt.axisTag.trim()] = {
                        name: lt.name.en,
                        min: lt.minValue,
                        default: lt.defaultValue,
                        max: lt.maxValue
                      };
                    }
                    return O;
                  }
                  /**
                   * Returns an object describing the named variation instances
                   * that the font designer has specified. Keys are variation names
                   * and values are the variation settings for this instance.
                   *
                   * @type {object}
                   */
                }, {
                  key: "namedVariations",
                  get: function() {
                    var O = {};
                    if (!this.fvar)
                      return O;
                    for (var U = a(this.fvar.instance), H; !(H = U()).done; ) {
                      for (var lt = H.value, vt = {}, dt = 0; dt < this.fvar.axis.length; dt++) {
                        var ht = this.fvar.axis[dt];
                        vt[ht.axisTag.trim()] = lt.coord[dt];
                      }
                      O[lt.name.en] = vt;
                    }
                    return O;
                  }
                }, {
                  key: "_variationProcessor",
                  get: function() {
                    if (!this.fvar)
                      return null;
                    var O = this.variationCoords;
                    return !O && !this.CFF2 ? null : (O || (O = this.fvar.axis.map(function(U) {
                      return U.defaultValue;
                    })), new sh(this, O));
                  }
                }]), ft;
              }(), M(sn.prototype, "bbox", [K], Object.getOwnPropertyDescriptor(sn.prototype, "bbox"), sn.prototype), M(sn.prototype, "_cmapProcessor", [K], Object.getOwnPropertyDescriptor(sn.prototype, "_cmapProcessor"), sn.prototype), M(sn.prototype, "characterSet", [K], Object.getOwnPropertyDescriptor(sn.prototype, "characterSet"), sn.prototype), M(sn.prototype, "_layoutEngine", [K], Object.getOwnPropertyDescriptor(sn.prototype, "_layoutEngine"), sn.prototype), M(sn.prototype, "variationAxes", [K], Object.getOwnPropertyDescriptor(sn.prototype, "variationAxes"), sn.prototype), M(sn.prototype, "namedVariations", [K], Object.getOwnPropertyDescriptor(sn.prototype, "namedVariations"), sn.prototype), M(sn.prototype, "_variationProcessor", [K], Object.getOwnPropertyDescriptor(sn.prototype, "_variationProcessor"), sn.prototype), sn), mh = new e.Struct({
                tag: new e.String(4),
                offset: new e.Pointer(e.uint32, "void", {
                  type: "global"
                }),
                compLength: e.uint32,
                length: e.uint32,
                origChecksum: e.uint32
              }), L0 = new e.Struct({
                tag: new e.String(4),
                // should be 'wOFF'
                flavor: e.uint32,
                length: e.uint32,
                numTables: e.uint16,
                reserved: new e.Reserved(e.uint16),
                totalSfntSize: e.uint32,
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                metaOffset: e.uint32,
                metaLength: e.uint32,
                metaOrigLength: e.uint32,
                privOffset: e.uint32,
                privLength: e.uint32,
                tables: new e.Array(mh, "numTables")
              });
              L0.process = function() {
                for (var ft = {}, X = a(this.tables), et; !(et = X()).done; ) {
                  var O = et.value;
                  ft[O.tag] = O;
                }
                this.tables = ft;
              };
              var xh = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                X.probe = function(U) {
                  return U.toString("ascii", 0, 4) === "wOFF";
                };
                var et = X.prototype;
                return et._decodeDirectory = function() {
                  this.directory = L0.decode(this.stream, {
                    _startOffset: 0
                  });
                }, et._getTableStream = function(U) {
                  var H = this.directory.tables[U];
                  if (H)
                    if (this.stream.pos = H.offset, H.compLength < H.length) {
                      this.stream.pos += 2;
                      var lt = o.alloc(H.length), vt = E(this.stream.readBuffer(H.compLength - 2), lt);
                      return new e.DecodeStream(vt);
                    } else
                      return this.stream;
                  return null;
                }, X;
              }(ja), bh = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et._decode = function() {
                  return this._font._transformedGlyphs[this.id];
                }, et._getCBox = function() {
                  return this.path.bbox;
                }, X;
              }(yo), N0 = {
                decode: function(X) {
                  for (var et = 0, O = [0, 1, 2, 3, 4], U = 0; U < O.length; U++) {
                    var H = X.readUInt8();
                    if (et & 3758096384)
                      throw new Error("Overflow");
                    if (et = et << 7 | H & 127, !(H & 128))
                      return et;
                  }
                  throw new Error("Bad base 128 number");
                }
              }, wh = ["cmap", "head", "hhea", "hmtx", "maxp", "name", "OS/2", "post", "cvt ", "fpgm", "glyf", "loca", "prep", "CFF ", "VORG", "EBDT", "EBLC", "gasp", "hdmx", "kern", "LTSH", "PCLT", "VDMX", "vhea", "vmtx", "BASE", "GDEF", "GPOS", "GSUB", "EBSC", "JSTF", "MATH", "CBDT", "CBLC", "COLR", "CPAL", "SVG ", "sbix", "acnt", "avar", "bdat", "bloc", "bsln", "cvar", "fdsc", "feat", "fmtx", "fvar", "gvar", "hsty", "just", "lcar", "mort", "morx", "opbd", "prop", "trak", "Zapf", "Silf", "Glat", "Gloc", "Feat", "Sill"], Sh = new e.Struct({
                flags: e.uint8,
                customTag: new e.Optional(new e.String(4), function(ft) {
                  return (ft.flags & 63) === 63;
                }),
                tag: function(X) {
                  return X.customTag || wh[X.flags & 63];
                },
                // || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },
                length: N0,
                transformVersion: function(X) {
                  return X.flags >>> 6 & 3;
                },
                transformed: function(X) {
                  return X.tag === "glyf" || X.tag === "loca" ? X.transformVersion === 0 : X.transformVersion !== 0;
                },
                transformLength: new e.Optional(N0, function(ft) {
                  return ft.transformed;
                })
              }), M0 = new e.Struct({
                tag: new e.String(4),
                // should be 'wOF2'
                flavor: e.uint32,
                length: e.uint32,
                numTables: e.uint16,
                reserved: new e.Reserved(e.uint16),
                totalSfntSize: e.uint32,
                totalCompressedSize: e.uint32,
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                metaOffset: e.uint32,
                metaLength: e.uint32,
                metaOrigLength: e.uint32,
                privOffset: e.uint32,
                privLength: e.uint32,
                tables: new e.Array(Sh, "numTables")
              });
              M0.process = function() {
                for (var ft = {}, X = 0; X < this.tables.length; X++) {
                  var et = this.tables[X];
                  ft[et.tag] = et;
                }
                return this.tables = ft;
              };
              var Ah = /* @__PURE__ */ function(ft) {
                c(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                X.probe = function(U) {
                  return U.toString("ascii", 0, 4) === "wOF2";
                };
                var et = X.prototype;
                return et._decodeDirectory = function() {
                  this.directory = M0.decode(this.stream), this._dataPos = this.stream.pos;
                }, et._decompress = function() {
                  if (!this._decompressed) {
                    this.stream.pos = this._dataPos;
                    var U = this.stream.readBuffer(this.directory.totalCompressedSize), H = 0;
                    for (var lt in this.directory.tables) {
                      var vt = this.directory.tables[lt];
                      vt.offset = H, H += vt.transformLength != null ? vt.transformLength : vt.length;
                    }
                    var dt = F(U, H);
                    if (!dt)
                      throw new Error("Error decoding compressed data in WOFF2");
                    this.stream = new e.DecodeStream(o.from(dt)), this._decompressed = !0;
                  }
                }, et._decodeTable = function(U) {
                  return this._decompress(), ft.prototype._decodeTable.call(this, U);
                }, et._getBaseGlyph = function(U, H) {
                  if (H === void 0 && (H = []), !this._glyphs[U])
                    return this.directory.tables.glyf && this.directory.tables.glyf.transformed ? (this._transformedGlyphs || this._transformGlyfTable(), this._glyphs[U] = new bh(U, H, this)) : ft.prototype._getBaseGlyph.call(this, U, H);
                }, et._transformGlyfTable = function() {
                  this._decompress(), this.stream.pos = this.directory.tables.glyf.offset;
                  for (var U = Ch.decode(this.stream), H = [], lt = 0; lt < U.numGlyphs; lt++) {
                    var vt = {}, dt = U.nContours.readInt16BE();
                    if (vt.numberOfContours = dt, dt > 0) {
                      for (var ht = [], Pt = 0, Vt = 0; Vt < dt; Vt++) {
                        var se = is(U.nPoints);
                        Pt += se, ht.push(Pt);
                      }
                      vt.points = Ih(U.flags, U.glyphs, Pt);
                      for (var $t = 0; $t < dt; $t++)
                        vt.points[ht[$t] - 1].endContour = !0;
                      is(U.glyphs);
                    } else if (dt < 0) {
                      var ue = yo.prototype._decodeComposite.call({
                        _font: this
                      }, vt, U.composites);
                      ue && is(U.glyphs);
                    }
                    H.push(vt);
                  }
                  this._transformedGlyphs = H;
                }, X;
              }(ja), Ga = /* @__PURE__ */ function() {
                function ft(et) {
                  this.length = et, this._buf = new e.Buffer(et);
                }
                var X = ft.prototype;
                return X.decode = function(O, U) {
                  return new e.DecodeStream(this._buf.decode(O, U));
                }, ft;
              }(), Ch = new e.Struct({
                version: e.uint32,
                numGlyphs: e.uint16,
                indexFormat: e.uint16,
                nContourStreamSize: e.uint32,
                nPointsStreamSize: e.uint32,
                flagStreamSize: e.uint32,
                glyphStreamSize: e.uint32,
                compositeStreamSize: e.uint32,
                bboxStreamSize: e.uint32,
                instructionStreamSize: e.uint32,
                nContours: new Ga("nContourStreamSize"),
                nPoints: new Ga("nPointsStreamSize"),
                flags: new Ga("flagStreamSize"),
                glyphs: new Ga("glyphStreamSize"),
                composites: new Ga("compositeStreamSize"),
                bboxes: new Ga("bboxStreamSize"),
                instructions: new Ga("instructionStreamSize")
              }), Eh = 253, Th = 254, Fh = 255, k0 = 253;
              function is(ft) {
                var X = ft.readUInt8();
                return X === Eh ? ft.readUInt16BE() : X === Fh ? ft.readUInt8() + k0 : X === Th ? ft.readUInt8() + k0 * 2 : X;
              }
              function da(ft, X) {
                return ft & 1 ? X : -X;
              }
              function Ih(ft, X, et) {
                for (var O, U = O = 0, H = [], lt = 0; lt < et; lt++) {
                  var vt = 0, dt = 0, ht = ft.readUInt8(), Pt = !(ht >> 7);
                  if (ht &= 127, ht < 10)
                    vt = 0, dt = da(ht, ((ht & 14) << 7) + X.readUInt8());
                  else if (ht < 20)
                    vt = da(ht, ((ht - 10 & 14) << 7) + X.readUInt8()), dt = 0;
                  else if (ht < 84) {
                    var Vt = ht - 20, se = X.readUInt8();
                    vt = da(ht, 1 + (Vt & 48) + (se >> 4)), dt = da(ht >> 1, 1 + ((Vt & 12) << 2) + (se & 15));
                  } else if (ht < 120) {
                    var Vt = ht - 84;
                    vt = da(ht, 1 + (Vt / 12 << 8) + X.readUInt8()), dt = da(ht >> 1, 1 + (Vt % 12 >> 2 << 8) + X.readUInt8());
                  } else if (ht < 124) {
                    var se = X.readUInt8(), $t = X.readUInt8();
                    vt = da(ht, (se << 4) + ($t >> 4)), dt = da(ht >> 1, (($t & 15) << 8) + X.readUInt8());
                  } else
                    vt = da(ht, X.readUInt16BE()), dt = da(ht >> 1, X.readUInt16BE());
                  U += vt, O += dt, H.push(new Sa(Pt, !1, U, O));
                }
                return H;
              }
              var Dh = new e.VersionedStruct(e.uint32, {
                65536: {
                  numFonts: e.uint32,
                  offsets: new e.Array(e.uint32, "numFonts")
                },
                131072: {
                  numFonts: e.uint32,
                  offsets: new e.Array(e.uint32, "numFonts"),
                  dsigTag: e.uint32,
                  dsigLength: e.uint32,
                  dsigOffset: e.uint32
                }
              }), Oh = /* @__PURE__ */ function() {
                ft.probe = function(O) {
                  return O.toString("ascii", 0, 4) === "ttcf";
                };
                function ft(et) {
                  if (this.stream = et, et.readString(4) !== "ttcf")
                    throw new Error("Not a TrueType collection");
                  this.header = Dh.decode(et);
                }
                var X = ft.prototype;
                return X.getFont = function(O) {
                  for (var U = a(this.header.offsets), H; !(H = U()).done; ) {
                    var lt = H.value, vt = new e.DecodeStream(this.stream.buffer);
                    vt.pos = lt;
                    var dt = new ja(vt);
                    if (dt.postscriptName === O)
                      return dt;
                  }
                  return null;
                }, i(ft, [{
                  key: "fonts",
                  get: function() {
                    for (var O = [], U = a(this.header.offsets), H; !(H = U()).done; ) {
                      var lt = H.value, vt = new e.DecodeStream(this.stream.buffer);
                      vt.pos = lt, O.push(new ja(vt));
                    }
                    return O;
                  }
                }]), ft;
              }(), Ph = new e.String(e.uint8);
              new e.Struct({
                len: e.uint32,
                buf: new e.Buffer("len")
              });
              var Bh = new e.Struct({
                id: e.uint16,
                nameOffset: e.int16,
                attr: e.uint8,
                dataOffset: e.uint24,
                handle: e.uint32
              }), Rh = new e.Struct({
                name: new e.String(4),
                maxTypeIndex: e.uint16,
                refList: new e.Pointer(e.uint16, new e.Array(Bh, function(ft) {
                  return ft.maxTypeIndex + 1;
                }), {
                  type: "parent"
                })
              }), Lh = new e.Struct({
                length: e.uint16,
                types: new e.Array(Rh, function(ft) {
                  return ft.length + 1;
                })
              }), Nh = new e.Struct({
                reserved: new e.Reserved(e.uint8, 24),
                typeList: new e.Pointer(e.uint16, Lh),
                nameListOffset: new e.Pointer(e.uint16, "void")
              }), U0 = new e.Struct({
                dataOffset: e.uint32,
                map: new e.Pointer(e.uint32, Nh),
                dataLength: e.uint32,
                mapLength: e.uint32
              }), Mh = /* @__PURE__ */ function() {
                ft.probe = function(O) {
                  var U = new e.DecodeStream(O);
                  try {
                    var H = U0.decode(U);
                  } catch {
                    return !1;
                  }
                  for (var lt = a(H.map.typeList.types), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    if (dt.name === "sfnt")
                      return !0;
                  }
                  return !1;
                };
                function ft(et) {
                  this.stream = et, this.header = U0.decode(this.stream);
                  for (var O = a(this.header.map.typeList.types), U; !(U = O()).done; ) {
                    for (var H = U.value, lt = a(H.refList), vt; !(vt = lt()).done; ) {
                      var dt = vt.value;
                      dt.nameOffset >= 0 ? (this.stream.pos = dt.nameOffset + this.header.map.nameListOffset, dt.name = Ph.decode(this.stream)) : dt.name = null;
                    }
                    H.name === "sfnt" && (this.sfnt = H);
                  }
                }
                var X = ft.prototype;
                return X.getFont = function(O) {
                  if (!this.sfnt)
                    return null;
                  for (var U = a(this.sfnt.refList), H; !(H = U()).done; ) {
                    var lt = H.value, vt = this.header.dataOffset + lt.dataOffset + 4, dt = new e.DecodeStream(this.stream.buffer.slice(vt)), ht = new ja(dt);
                    if (ht.postscriptName === O)
                      return ht;
                  }
                  return null;
                }, i(ft, [{
                  key: "fonts",
                  get: function() {
                    for (var O = [], U = a(this.sfnt.refList), H; !(H = U()).done; ) {
                      var lt = H.value, vt = this.header.dataOffset + lt.dataOffset + 4, dt = new e.DecodeStream(this.stream.buffer.slice(vt));
                      O.push(new ja(dt));
                    }
                    return O;
                  }
                }]), ft;
              }();
              P.registerFormat(ja), P.registerFormat(xh), P.registerFormat(Ah), P.registerFormat(Oh), P.registerFormat(Mh), u.exports = P;
            }
          ),
          /***/
          46982: (
            /***/
            function(u, d, t) {
              var o = t(67827), r = t(5155), n = t(71692), i = n.BK, f = n.CR, l = n.LF, c = n.NL, h = n.SG, a = n.WJ, v = n.SP, y = n.ZWJ, g = n.BA, e = n.HY, m = n.NS, w = n.AI, D = n.AL, I = n.CJ, T = n.HL, C = n.RI, E = n.SA, F = n.XX, x = t(54069), P = x.DI_BRK, L = x.IN_BRK, N = x.CI_BRK, M = x.CP_BRK;
              x.PR_BRK;
              var K = x.pairTable, ut = r.toByteArray("AAgOAAAAAACA3QAAAe0OEvHtnXuMXUUdx+d2d2/33r237V3YSoFC11r6IGgbRFBEfFF5KCVCMYKFaKn8AYqmwUeqECFabUGQipUiNCkgSRElUkKwJRWtwSpJrZpCI4E2NQqiBsFGwWL8Tu6Md3Z23o9zbund5JM5c+b1m9/85nnOuXtTHyFrwXpwL9gBngTPgj+Dv4H9Ae4B0N9PSAMcDqaB0X57urmIs8AQ72SEnQ4+ABaBxWAJWAquENJ9BtdfANeCleBGcCv4NvgeuBv8AGwCm8FWlpbzOPw7wC7wFNgDngMvgpfAq2DCACF10ACHgaPAzIF2+PFwT2Th1P8OuO8FZ4MPggvAxWAp+A6VHe5ysILFvx7u6oF2+Wvg3g7uYvlT+TbC/TH4CdgCtoGtfW3/E2An8++Gu5eleR7uP8B+8BoLf4LFH6i23Vp1rB5a1Q7TGMeCUYYY18RcxF0gxT8H5b3dIw8X3iPkdxauPwQWgyVgWbVT30/h+mrwZan8r8L/FcEWVsJ/E1grpKXcwdLdI9y/H9cPgUerbbun0PadCHcbjQd+D55mafcx9y9wXwKvCLJUJiLdRH09ef4xupqE/KeCY8Bx4M3gbeBdYCE4G3wYXASWgGXgSibTcuaugHs9WA3WgNvBBha2Ee4D4GFNPTYL9x/D9XaJXwnXvwW7wDPgTzQd2A9eAwODhDTBCJgOZoETwEngtEFmF3DPAouY/0K4Swb9dbaMpbkS7nKP9CsCyrpOSrNK8K9kNnYL7q0DGwbb/XnjoDv3gQfBZvBz8GvwO/AHdr3Pkv4F4fplj3J79OgRBx8HypajR48ePXr06NGjx8HFv7pABhX/HRx7HqKjr9Y+y6PXg7X2WRoPm1Kzpz8CcWaweLPhHt/fPq95C65PZnmfDnchOLfWPo/7OLgQ15ewdJ+E++na2PMhyudw72bDGc01CP8aWAm+Dr4BVoHV4IZeWC+sF9YL64UlD1sD1oE7au0z0zK5p1YuZde/R49uJnYdez/62EPgkVr4c7pHkfYXivTbcW8n2A32gOekOH+F/5/gAOivE9IArXpbrmlwR+vljz9bJrV552RCvgQ2GXgRzJ9CyGVTxofdLd17Gv6jW4RcAG5ote/9FO4B8NZhQs4DN4O9kOFY6OFSsB48C/qGCFkAyERCzh9q+0WuA2sqHX4m+Smv4t6RjXYelItwvQ7sBtOahHwU3NYcn+5Q4pFmRz89evTocajxStM898/FfLSgrg8/sT5+zcLDTkXY+6S0C+E/l907SXO+Rt/Lujrxe1kmztPU70JDvSmXILwJWS9TxLuC3VtuycPGCoV+VfD41yvKW6W4d1O9/S5YtZ+Qtbi+k/m/D/eHYBPzb4G7DfyS+enZ42/qnXPFp+pjZdgD/yX0XcV6+93DF+H+G5AhtcxPIs/BoY5cg0g7RRGXx/8Ewo8Y6vhp/Bnwz2F5zId7CgunZ6Dv1uTF0585pNY7P9NdhPCPDI1Ncyn8l4OrwHKwguVB12WrNPnpoPW5BWluA3eCuxRl3cfyfFCom43NBjkeQ9h2Tzlzs7PL5CmD3UwHew26+KMm7AVHu8hJaL1fTtj29L3E/wi6oPvWvkY7bAjucKOYtpymKWdGo/3e5KxGR8YTGvmfZ4XW46RGmnMIG6excs6Ae46nPuh7pGXbvm/fOB91vLhRXvkmlkKuK8BnFTb8xYL6TyqugbzXJZCZ9tlVrO9+C+53G5134A8G1htsjdbvXoT/KEBPmwq04dS2v6UxNnxbAXV5gul4Z6J+tMtBZtv4+Qzy2Ndof+fwPHP/zsbg/QFz02tIM4B9ZRO0mp379NxxBpgD5gv3T8H16eAMcCZYxMIWw/2YEG8pri9n/qvgfr45fm67VtjPzmbpVrJ7NzL3VrjvF/Jdh+sN3M/cB+A+LOV/bVNdX13b0G9KtmrSHCo8jvqfGjFu7WiWP37E8s2+yv8ZwVbYRgvMAm9kvMkhjStzAZbIBGIR+ngAy2NSZ9f0Hv2bIIShCckU5k5sb+OdGGQ0BKqSPzeE1WFCgWXK5dO2rDD/COn9zTvEUfXJ4zT3c9DP2oH2+ZoAtc9RBr/mY0SLdGyap+Nxh6W0In2Sn5C8/W00c/7dXn63we1DtAHud9WZbFNimmFL2iIoqt8eDPQHptERIkNoO8prFVvblm13OaG6oGM+n7P4/RrRz2HdTktotxHFdZW5tvm72UWEtm9dQF6n++hU1FmVFL++L2Nsdt3/1IVrWaacda4Se91t+pHDVXF5HFd9pG7X14NNyePr6wkfPTRI+H6qDPvLqRM5DR2beZ8W95Divq0IWXXyy/d18Yq09ZhyY/fyPjafY37yta8ybD9l3W15+crXYhQ5rsj2Wkb7iDadon1c+tKI4p5NR6HjPl/vqvLm92uK8lTjWNntkwJTu9hkiJmHVf3S1V5UOii6PWL1nVqOkP5QI/b2L2o+Kqr/h9i0bHNl9HudnKn0btKBbZzItQ7n47Drmutg6P+ubZK7/5va0PU8XZS56DP4Isci07gUo3/fscdlfMyp6xR6dy0vt/275K1bJ8qkHI99bdK3v4vt4Gtzs7sEWa5aZH4NDz3yfWG368bXLlQ6GZYQ7/UL1y3mryroZ+nkZwK28SD1vlt+7sNd+lcR3Ji1RKq1WcvhftFzousYxftH7Ngu2pZubcGfD8eMizp5Y/uha/m69NNK5siSOapkcq2lTOOGvE4y9aPclFl20eXTvwoZO374ymob90Jx3Zfk2h/I849q7VNE+WXsj+ZFlJ96Xcd1PyD4ue2J69/Q9V+u9uPrQC7/sHRftjE+n+eQP2Ztl5Kc+0TX/WND8vP2iF23xO7lfO3XtKfLhUm/PE6Ze78RD/3Fknr8i907yWsoUx+M3S+0SNjcHyu7qg6+aYvqF671TLXfTzU+2uaTnOOzbFc+7yHoZE59npIL175kay/ZxlKMH6a+NSJdl90XKXytpbMpTr/kP5zJfqxQDzneYWTstxh9pPPdYJ/CL8alTBag+fFvHFXtQMutWxBloOUMMHS6GWSyVYS4pvgmexXtVjc/TFWk9ZnnZLt3+caI10/8Xkb+hsYlfeh+QOyPNQN1S7hv2nqivEVSj/Ex+1lu73Ib1olbu4jpfN4ddbWbHN+/mcpWfUem+g7RhK4833SuepHbN0d5PjKF1kUll3xPFc5d+btTW9uqdCHXwaQ7kw252ENIW9vKTdEfTLox+VPYT6r8XXUWq7tYuXyZnEAG+ic+pwyVdRLDp8wcOp0kEZNXzLyqw3f+yEkjMI1sFznk8ulDKcoKlcFVlz75qPyu9+U8YuvnqnfXNDn6t6neNr3xfHj4JEU500ma8SSkjjodptBlTLurbI7rTxUnhcxF6d9W76KRbd6G3DdVNj2qia/qD3KY2O90elLJocpHJc90Q7kqVLqaLlGUjYj+Pg00jD8Xk+Wnf5UAN8c8HGrvXKYi+4irnsoo09ctU29Fll2UraSyaxnTOar8DFw+w60St+cRNlzfm9E9y9CNUTZM5/7iOTWR6imOgaKf/pn6hJw/f8dDdS6u0tNhDN1ZOlGUoauTrqyQNvCd21Mjy8N/T7AixBkQrm3tRKS0tngDwrWYzobuLFwXV3WfP5uR9TGTXdvc3BRVjq18l3rbwmaS8c9QByR4m3Sb/lPVX2V/M4naDkV79GFmJDad2NaLOdpBpxsbvs+/YubgVPO5bn3h+75BahnEOU/EVb+yTL7vQeTQp04GH/twfTYaCv9ehe8XXdZ0Ic+IY94Hcik/9h0Zk35c7MdWXo737HM/y6dllPENj9zeuvq7vMMYam88fZnfU7nOHznf6/AdP+W8ffXv2q6uelDlE1N/Wx+Prb/MG8ARBVJ0eb7rz5Tf6sl5l/G9nizDnJLJudZoaNqU/hbsCPH73dhu+03aWPiZhW9/yLHf8IGvT1OtzwZJ56yG/7YvX5sSdn+yof6x5av2ebxcV1dOZ9pDVgSXys/36uLzG1s5Nvj7pKo9axm2zsueylxeT1lWlQ4rkuuzx5f3+VXPPGIhgbLnKp/rtiJdcz2lOtMpAtMZV27E/kRttyaF83dFbf3NdYwXx6sZpH0uVkZ/VslmOrspa24V1+O56u3TdmXpQdaJy36wLPm4LZVR7jyp/CLOmULtzeWZoqstuLS9rhzTmqwIe3LVia0f2OSP3c/71Ec8V0itv6JtONbOXdb3Oc5YdcTaQVFzRWg7+z6HydnHy+qPoWO+j1yq8anofifWl7ri97chNiq/z6KyM37t8333sJR/SF/3bUvd+z+8nV3KNPWfIvt3mfNZijFAZT8xfXSekLfOtl3rHCuPzxrEdT7U9UvRjn3HKV5/XTuo2i3n+E3L5L+3yN+TkH+z07ZGDlkviuXLcX3aL7b+8m+duhCzJonp/yF9wabPItZhJmJ/N8pVfvn31Fok7PeiYsalFON4bPnyuOO7Ru2G+S52fqB5DAt55bJtXf2LtJdQParCVevHlqcufduvKJuQ5yxxvA/Zw6W0l5D3+nz7a4wdieXxd+FS2SjPN7Z9XXDRp62/dMv4GTM22uwx1/iTe7zTUSfjf1Mqld36EHv2xvPoprMnGfGvIiDHk+/x+EQTP7fMOjl928f0/855OTnaJ5XeQsevVHNojO5147ePXLH681mDqOBhqef/Ivp+7PMF1Vxs02kMITLK30zp/k+FbX1RdP/w1b2OMt9hiR1bKLHfZ+XWT+4+ahqzVM8iUug81r5tfTf3+JB6DPFpk1zllLUu9523cpPLdlR6zTVP+bShGFd1lh/Td33rVdT44WqTtjqktOtc87osc8x5hM9vyLrK49v+Pvmp7De0/vyvLJvk1C3+1OOyLyG/aSSud1L/TlLq/BoZ5M2xNj66IFRlT9fcT4GqDYosQ3df/G0zlR5U4UVzjAJZPpW8NlLI5lOejzwq+eS4rnWZbsjTx7ZUrq4sXdrQPmAa82Pb0HVuyZl3rrrZ7Nal/ULzdy0zBUXrMaQcU18v6ncmxd9eM/1fkdQ24Tvu+paZ2q5S6z13+anlTyVfrv4aWz/desfFfn3WEj727rNGKHJdlqsM1VompjzT+shXv7F75dj3J3K3qY7QM7DcZ2L/Aw=="), J = new o(ut), rt = function(Rt) {
                switch (Rt) {
                  case w:
                    return D;
                  case E:
                  case h:
                  case F:
                    return D;
                  case I:
                    return m;
                  default:
                    return Rt;
                }
              }, yt = function(Rt) {
                switch (Rt) {
                  case l:
                  case c:
                    return i;
                  case v:
                    return a;
                  default:
                    return Rt;
                }
              }, xt = function(Rt, Ut) {
                Ut === void 0 && (Ut = !1), this.position = Rt, this.required = Ut;
              }, Et = /* @__PURE__ */ function() {
                function Ft(Ut) {
                  this.string = Ut, this.pos = 0, this.lastPos = 0, this.curClass = null, this.nextClass = null, this.LB8a = !1, this.LB21a = !1, this.LB30a = 0;
                }
                var Rt = Ft.prototype;
                return Rt.nextCodePoint = function() {
                  var Q = this.string.charCodeAt(this.pos++), pt = this.string.charCodeAt(this.pos);
                  return 55296 <= Q && Q <= 56319 && 56320 <= pt && pt <= 57343 ? (this.pos++, (Q - 55296) * 1024 + (pt - 56320) + 65536) : Q;
                }, Rt.nextCharClass = function() {
                  return rt(J.get(this.nextCodePoint()));
                }, Rt.getSimpleBreak = function() {
                  switch (this.nextClass) {
                    case v:
                      return !1;
                    case i:
                    case l:
                    case c:
                      return this.curClass = i, !1;
                    case f:
                      return this.curClass = f, !1;
                  }
                  return null;
                }, Rt.getPairTableBreak = function(Q) {
                  var pt = !1;
                  switch (K[this.curClass][this.nextClass]) {
                    case P:
                      pt = !0;
                      break;
                    case L:
                      pt = Q === v;
                      break;
                    case N:
                      if (pt = Q === v, !pt)
                        return pt = !1, pt;
                      break;
                    case M:
                      if (Q !== v)
                        return pt;
                      break;
                  }
                  return this.LB8a && (pt = !1), this.LB21a && (this.curClass === e || this.curClass === g) ? (pt = !1, this.LB21a = !1) : this.LB21a = this.curClass === T, this.curClass === C ? (this.LB30a++, this.LB30a == 2 && this.nextClass === C && (pt = !0, this.LB30a = 0)) : this.LB30a = 0, this.curClass = this.nextClass, pt;
                }, Rt.nextBreak = function() {
                  if (this.curClass == null) {
                    var Q = this.nextCharClass();
                    this.curClass = yt(Q), this.nextClass = Q, this.LB8a = Q === y, this.LB30a = 0;
                  }
                  for (; this.pos < this.string.length; ) {
                    this.lastPos = this.pos;
                    var pt = this.nextClass;
                    if (this.nextClass = this.nextCharClass(), this.curClass === i || this.curClass === f && this.nextClass !== l)
                      return this.curClass = yt(rt(this.nextClass)), new xt(this.lastPos, !0);
                    var ct = this.getSimpleBreak();
                    if (ct === null && (ct = this.getPairTableBreak(pt)), this.LB8a = this.nextClass === y, ct)
                      return new xt(this.lastPos);
                  }
                  return this.lastPos < this.string.length ? (this.lastPos = this.string.length, new xt(this.string.length)) : null;
                }, Ft;
              }();
              u.exports = Et;
            }
          ),
          /***/
          42480: (
            /***/
            function() {
            }
          ),
          /***/
          25832: (
            /***/
            function() {
            }
          ),
          /***/
          69862: (
            /***/
            function() {
            }
          ),
          /***/
          40964: (
            /***/
            function() {
            }
          ),
          /***/
          14343: (
            /***/
            function(u, d, t) {
              var o = [
                "BigInt64Array",
                "BigUint64Array",
                "Float32Array",
                "Float64Array",
                "Int16Array",
                "Int32Array",
                "Int8Array",
                "Uint16Array",
                "Uint32Array",
                "Uint8Array",
                "Uint8ClampedArray"
              ], r = typeof globalThis > "u" ? t.g : globalThis;
              u.exports = function() {
                for (var i = [], f = 0; f < o.length; f++)
                  typeof r[o[f]] == "function" && (i[i.length] = o[f]);
                return i;
              };
            }
          ),
          /***/
          51348: (
            /***/
            function(u, d, t) {
              var o = t(5155), r = t(67827);
              function n(ct) {
                return ct && ct.__esModule ? ct.default : ct;
              }
              function i(ct) {
                Object.defineProperty(ct, "__esModule", { value: !0, configurable: !0 });
              }
              function f(ct, ot, mt, G) {
                Object.defineProperty(ct, ot, { get: mt, set: G, enumerable: !0, configurable: !0 });
              }
              i(u.exports), f(u.exports, "getCategory", () => L), f(u.exports, "getCombiningClass", () => N), f(u.exports, "getScript", () => M), f(u.exports, "getEastAsianWidth", () => K), f(u.exports, "getNumericValue", () => ut), f(u.exports, "isAlphabetic", () => J), f(u.exports, "isDigit", () => rt), f(u.exports, "isPunctuation", () => yt), f(u.exports, "isLowerCase", () => xt), f(u.exports, "isUpperCase", () => Et), f(u.exports, "isTitleCase", () => Ft), f(u.exports, "isWhiteSpace", () => Rt), f(u.exports, "isBaseForm", () => Ut), f(u.exports, "isMark", () => Q), f(u.exports, "default", () => pt);
              var l = {};
              l = JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');
              const c = new (n(r))(n(o).toByteArray("")), h = Math.log2 || ((ct) => Math.log(ct) / Math.LN2), a = (ct) => h(ct) + 1 | 0, v = a((/* @__PURE__ */ n(l)).categories.length - 1), y = a((/* @__PURE__ */ n(l)).combiningClasses.length - 1), g = a((/* @__PURE__ */ n(l)).scripts.length - 1), e = a((/* @__PURE__ */ n(l)).eaw.length - 1), m = 10, w = y + g + e + m, D = g + e + m, I = e + m, T = m, C = (1 << v) - 1, E = (1 << y) - 1, F = (1 << g) - 1, x = (1 << e) - 1, P = (1 << m) - 1;
              function L(ct) {
                const ot = c.get(ct);
                return (/* @__PURE__ */ n(l)).categories[ot >> w & C];
              }
              function N(ct) {
                const ot = c.get(ct);
                return (/* @__PURE__ */ n(l)).combiningClasses[ot >> D & E];
              }
              function M(ct) {
                const ot = c.get(ct);
                return (/* @__PURE__ */ n(l)).scripts[ot >> I & F];
              }
              function K(ct) {
                const ot = c.get(ct);
                return (/* @__PURE__ */ n(l)).eaw[ot >> T & x];
              }
              function ut(ct) {
                let ot = c.get(ct), mt = ot & P;
                if (mt === 0)
                  return null;
                if (mt <= 50)
                  return mt - 1;
                if (mt < 480) {
                  const G = (mt >> 4) - 12, Tt = (mt & 15) + 1;
                  return G / Tt;
                } else if (mt < 768) {
                  ot = (mt >> 5) - 14;
                  let G = (mt & 31) + 2;
                  for (; G > 0; )
                    ot *= 10, G--;
                  return ot;
                } else {
                  ot = (mt >> 2) - 191;
                  let G = (mt & 3) + 1;
                  for (; G > 0; )
                    ot *= 60, G--;
                  return ot;
                }
              }
              function J(ct) {
                const ot = L(ct);
                return ot === "Lu" || ot === "Ll" || ot === "Lt" || ot === "Lm" || ot === "Lo" || ot === "Nl";
              }
              function rt(ct) {
                return L(ct) === "Nd";
              }
              function yt(ct) {
                const ot = L(ct);
                return ot === "Pc" || ot === "Pd" || ot === "Pe" || ot === "Pf" || ot === "Pi" || ot === "Po" || ot === "Ps";
              }
              function xt(ct) {
                return L(ct) === "Ll";
              }
              function Et(ct) {
                return L(ct) === "Lu";
              }
              function Ft(ct) {
                return L(ct) === "Lt";
              }
              function Rt(ct) {
                const ot = L(ct);
                return ot === "Zs" || ot === "Zl" || ot === "Zp";
              }
              function Ut(ct) {
                const ot = L(ct);
                return ot === "Nd" || ot === "No" || ot === "Nl" || ot === "Lu" || ot === "Ll" || ot === "Lt" || ot === "Lm" || ot === "Lo" || ot === "Me" || ot === "Mc";
              }
              function Q(ct) {
                const ot = L(ct);
                return ot === "Mn" || ot === "Me" || ot === "Mc";
              }
              var pt = {
                getCategory: L,
                getCombiningClass: N,
                getScript: M,
                getEastAsianWidth: K,
                getNumericValue: ut,
                isAlphabetic: J,
                isDigit: rt,
                isPunctuation: yt,
                isLowerCase: xt,
                isUpperCase: Et,
                isTitleCase: Ft,
                isWhiteSpace: Rt,
                isBaseForm: Ut,
                isMark: Q
              };
            }
          ),
          /***/
          63480: (
            /***/
            function(u) {
              u.exports = JSON.parse('[["8740","ä°ä°²ää¦ä¸ð§§äµ·ä³ð§²±ä³¢ð§³ã®ä¶ää±ä±ð¤¿ð£ð§ð¦ºð§ä±ðªäää²ð§±¬ä´äª¤ä¡ð¦¬£ç¥ð¥©ð¡©£ð£¸ð£½¡æå»"],["8767","ç¶å¤ð¨®¹ã·´é´ð§¯¯å¯ð¡µåª¤ã¥ð©º°å«å®·å³¼æ®èð©¥ç¡çã¡µð¡µð£ð¦¡ã»¬"],["87a1","ð¥£ã«µç«¼é¾ð¤¡ð¨¤ð£ªð ªð£äèé¾é¯ä¤°èå¢ééç§ç¨²æ æ¨©è¢çç¯æç¨¬åéã¦çð¥¶¹çé¿å³ä¤¯åä±ð£å ç©²ð§­¥è®ä®ð¦ºäð¥¶ç®®ð¢¼é¿ð¢ð¢ð¢é¿èð£»ä´é¿ä¡ðª·¿æç®é¿"],["8840","ã",4,"ð ãð ð ããð ð¡¿¨ãð ããããð ããÄÃÇÃÄÃÄÃÅÃÇÃà¿¿ÃÌáº¾à¿¿ÃÌá»ÃÄÃ¡ÇÃ ÉÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇ"],["88a1","ÇÃ¼à¿¿ÃªÌáº¿à¿¿ÃªÌá»ÃªÉ¡ââ"],["8940","ðª©ð¡"],["8943","æ"],["8946","ä¸½æ»éµé"],["894c","ð§µæä¼ä¼¨ä¾¨åå´åå¤å¡å¨å»åååå¢å£°å¤å¤å¤²å¤´å­¦å®å®å²åºæ»ææ¾æ æ¡¥æµç¼çµçº¤çº¬çººç»ç»ç»ç¼ç¼·èºèè¯è§è®¾è¯¢è½¦è½§è½®"],["89a1","çç³¼ç·æ¥ç«å§"],["89ab","éç¢¸éè¼"],["89b0","è´è¶ð §§"],["89b5","èé»ä³é·é¸ä°¾ð©·¶ð§é¸ðª³ã"],["89c1","æºè¾ç"],["89c5","ä¤é©¬éªé¾ç¦ð¨¬ð¡·ð ð¢«¦ä¸¤äºäºäºäº¿ä»«ä¼·ãä¾½ã¹ååã½ãã¥åå¤åå¼åäºå¹åå§ãå©ãå°ãåå£ã­ã²ãåå£å´å¹åå¯åå£å¨ãå¿ã¥ã¿åã"],["8a40","ð§¶å¥"],["8a43","ð ±ð ´ð¥«åð¢³ã§¬ð è¹ð¤¶¸ð©¥äð¨¾çºð¢°¸ã¨´äð¨ð¦§²ð¤·ªæð µ¼ð ¾´ð ³ð¡´æè¹¾ð ºð °ð ½¤ð¢²©ð¨ð¤"],["8a64","ð µð©©ð¨©ä´ð¤º§ð¢³éª²ã©§ð©´ã¿­ãð¥ð©ð§£ð¢µéµ®é "],["8a76","äð¦¥æ´å£ð¢µð¢¯ð¡·ã§»ð¡¯"],["8aa1","ð¦ð¦ð§¦ æªð¥ð ±è¹¨ð¢¡ð¨­ð ±"],["8aac","ä ð ©ã¿ºå¡³ð¢¶"],["8ab2","ð¤ð ¼ð¦ð ½ð ¶å¹ä»äº"],["8abb","äª´ð¢©¦ð¡èªé£µð ¶æ¹ã§¾ð¢µè·å¡æ¼ã¹"],["8ac9","ðªð ¸ð¢«ð¢³"],["8ace","ð¡ð£§ã¦ã¨ð¨ã¸ð¥¹ð¢åð ¼±ð¢²²ð© ã¼æ°½ð¤¸»"],["8adf","ð§´ð¢ºð¢ðªð¨³ð ¹ºð °´ð¦ ç¾ð¡ð¢ ð¢¤¹ã»ð¥£ð ºð ¾ð ºªã¾ð ¼°ð µð¡ð ¹"],["8af6","ð º«ð ®©ð µð¡ð¡½ã¿¹ð¢æ²ð ¾­"],["8b40","ð£´ð§¹ð¢¯ð µ¾ð µ¿ð¢±ð¢±ã¨ð ºð¡ð ¼®ðª²ð¦­ð¨³ð¨¶ð¨³éªåèå¹"],["8b55","ð©»é°¦éª¶ð§ð¢·®çè­è¬å°ð¦²è´ãåð¨½é¶ð »ºð ¸ð ¹·ð »»ãð¤·«ãð ³å¯ð¢µð¡ð ¸ð ¹¸ð¡¸ð¡ð¨ð¡ð ¹¹ð¤¹ð¢¶¤å©ð¡ð¡ð¡µð¡¶åð ¸"],["8ba1","ð§ð¨ð ¾µð ¹»ð¥¾ãð ¾¶ð¡ð¥ðª½ð¤§ð¡ ºð¤·ð¨¼å¢å¨ãð¥½ç®²å­¨ä ä¬¬é¼§ä§§é°é®ð¥­´ð£½å»ã²åä¸¨å¤ð¡¯ð¯¡¸éð ä¹äº»ã¾å°£å½å¿ã£ºææµæ­ºæ°µæ°ºç¬ç«ä¸¬ç­ð¤£©ç½ç¤»ç³¹ç½ð¦ªã"],["8bde","ð¦èèð¦ð¦¥åè¡¤è§ð§¢²è® è´éé¸é¿é¨ð¨¸é¦é¡µé£é£é¥£ð© é±¼é¸é»æ­¯ï¤ä¸·ð éæ·é¢"],["8c40","å»æ·¾ð©±³é¾¦ã·è¢ð¤ç·å³µä¬ ð¥ãð¥´°æ¢ð¨¨²è¾§é¶çæçºð£ðªã²ð¡¦ä¬ç£¤çå®ð¨äæ©£ðªºä£èð ©¯ç¨ªð©¥ð¨«ªéçå¤ð¢¾é´çð¨§£é¾§çäº£ä¿°å¼ä¸¯ä¼é¾¨å´ç¶å¢å£ð¡¶¶åºåºå¿ð¢æ"],["8ca1","ð£¹æ¤æ©ð£±£æ³¿"],["8ca7","çð¤çã»ð¤¨å¬ç¹è®ð¥²¤ð¥çªç¯¬ç³ç¹¬è¸èé¾©è¢é¾ªèº¹é¾«è¿èé§ é¡é¾¬ð¨¶¹ð¡¿ä±ä¢å¨"],["8cc9","é¡¨æ«ä¶å½"],["8cce","èð¤¥»è¿ð§ä²ð¦µ´åµ»ð¦¬ð¦¾¾é¾­é¾®å®é¾¯æ§ç¹æ¹ç§ã¶äð£ð¢ää¶"],["8ce6","å³ð£¬è«¹å±¸ã´ð£åµ¸é¾²çäð¤¬ð¡¸£ä±·ã¥¸ãð ¤ð¦±è«ä¾´ð ¹å¦¿è¬é¡ð©£ºå¼»"],["8d40","ð ®"],["8d42","ð¢ð¨¥­ää»ð©¹ã¼é¾³ðªµä¸ãä·ð¦±ä¼ð¨²ð§¿ä­ã£ð¥ä¡ää¶ä±»äµ¶äªã¿ð¤¬ã¡ää½ä­å´¾åµåµã·¼ã å¶¤å¶¹ã  ã ¸å¹åº½å¼¥å¾ã¤ã¤ã¤¿ã¥ææ½å³¥ã¦æ·æ¹æã¦¸æ¬ææ¥æã§¸å±"],["8da1","ã¨æ¢æ»ææã©æå´å¡é¾ãªæãª½æ¿æã«²æã¬¢æã­æ¤æ ã­æ¡æ¢ã­²ã­±ã­»æ¤æ¥çæ¥¤æ¦æ¦ã®¼æ§ã¯æ©¥æ©´æ©±æªã¯¬æªã¯²æª«æªµæ«æ«¶æ®æ¯æ¯ªæ±µæ²ªã³æ´æ´æ´¦æ¶ã³¯æ¶¤æ¶±æ¸æ¸æ¸©æºð¨§æº»æ»¢æ»é½¿æ»¨æ»©æ¼¤æ¼´ãµð£½æ¾æ¾¾ãµªãµµç·å²ã¶ç¬ã¶ççç¯ç¿çð ¥äã±ð »"],["8e40","ð£»å¾ð¦»ç¾ð¥ ãæ¦¢ð¨¯©å­´ç©ð¥£¡ð©ç©¥ç©½ð¥¦¬çª»çª°ç«ç«çð¦äç«ç«ç«ªä¯å²ð¥°ç¬ç­ç¬©ð¥ð¥³¾ç®¢ç­¯èð¥®´ð¦±¿ç¯è¡ç®ç®¸ð¥´ ã¶­ð¥±¥èç¯ºç°ç°µð¥³ç±ç²ð¤¢ç²¦æ½ð¤¸ç³ç³ç³¦ç±´ç³³ç³µç³"],["8ea1","ç¹§äð¦¹çµð¦»çç¶ç¶«çµç¶³ç·ð¤ð¦©ç·¤ã´ç·µð¡¹ç·¥ð¨­ç¸ð¦¡ð¦ç¹®çºä«é¬ç¸§ç½ç½ç½ç¤¶ð¦é§¡ç¾ð¦ç¾£ð¡¡ð ¨äð£¦äð¨ºç¿ºð¦èèèè¨è¯ðªð¦³è»è¼è¡ð¢ä¦ð¦¦ð£·£ð¦¨æ¥è§ð¨©èèå¢°ð¢¶æ±¿ð¦ð¤¾¸æ§ð¡èð¡¡æ©ð¤©¥ð¤ªäºè©ð ¬ð¦©ð£µ¾ä¿¹ð¡½è¢è¢ð¦¬ð¤¦§ð£°ð¡³ð£·¸èªæ¤ð¯¦ä"],["8f40","èèèð ¸ð¡´ãð£½ð£è»è¢èð£ºð¦¶£ð¦¬ð¦®ð£ã¶¿èå¬èäð¦¶¥è¬èèã¾ð¦»æ©èãð¦¹ð¢»¯èð¥¯¤è±ã·ä¤æª§èð£²µç¥è¨ð¦®ð¦¹·ð¦¹èèèä èè¤ð¥²äð¥³äè´å«²ð¦ºä§è³äæ¿è"],["8fa1","ð¨¥ð¨»èð§èð¡ð§ð¯¦²äªè¨ãð¡¢¢å·ð§è¾è±ðª¸è®ð¢°§è±èè å¡è¬æ¡äè¡è¡ð§ ð£¶¹ð§¤è¡è¢äè¢´è¢µæè£ç·ð§è¦è¦è¦¦è¦©è¦§è¦¼ð¨¨¥è§§ð§¤¤ð§ª½èªçé¾èªð§©ç«©ð§¬ºð£¾äð§¬¸ç¼è¬è¬ð¥°ð¥¥è¬¿è­è­èª©ð¤©ºè®è®èª¯ð¡äè¡è²ð§µð§¶ð¯§ã¥ð§µè³ð§¶ð§¶½è´è´ð¡¤è³çè´ð¤³ã»èµ·"],["9040","è¶©ð¨ð¡ð¤¦ã­¼ð¨¼ð§ç«§èº­èº¶è»éè¼è¼­ð¨¥ð¨è¾¥éðªð ©è¾³ä¤ªð¨§ð¨½ð£¶»å»¸ð£¢è¿¹ðªð¨¼ð¨ð¢¥ã¦ð¦»é·ð¨¼ð§ª¾é¡ð¨¬ð¨é¨ð¨éð¨¦é®é½é§ã«°é©éç²¬ð¨¤³ð¡ºéæ²éé¢ð¥¹é¹ð¨«ð£²ð¨¬ð¥"],["90a1","ð ´±é¬é«ð¨«¡ð¨¯«çå«ð¨«¢ð¨«¥ä¥¥éð¨¯¬ð¨°¹ð¨¯¿é³éèº¼éé¦é¦é æ¿¶ä¹ð¢ºð¨ð¡¼ð£¸®ä§æ°é»éä¬é£ð¦»æé¶ç£µð¨« é½åä¦¡ð¦²¸ð ´ð¦ð©¯ð©¥ð¤«ð¡¤ð£é±èé¶ä¨ä½äð¤«©çµå­ééð©éå­ð©«éé¥åð£·ð£¼ééé±é¾ééé ð¥¬é®çð©³é¿éµð©ð§¥ºä«é ´é ³é¡é¡¦ã¬ð§µãµð °ð¤"],["9140","ð¥é£é¢·é£é£ä«¿ð¦´§ð¡å°é£¡é£¦é£¬é¸é¤¹ð¤¨©ä­²ð©¡ð©¤é§µé¨é¨»é¨é©ð¥¥ãð©±ð©¯é« é«¢ð©¬é«´ä°é¬é¬­ð¨å´é¬´ð¦¦¨ã£ð£½é­é­ð©´¾å©ð¡¡£é®ð¤é°é¯¿é°ð©¹¨é·ð©¾·ðªðª«ðª¡ðª£ðªéµ¾é¶ðª´é¸æ¢"],["91a1","é·ð¢ðªðª ð¡¤»ðª³é´¹ðª¹ðª´éºéºéºéº¢ä´´éºªéº¯ð¤¤é»ã­ ã§¥ã´ä¼²ã¾ð¨°«é¼é¼ä®é¤ð¦¶¢é¼é¼é¼¹ååé½é¦¸ð©é²è¿é½¢é½©ç«é¾çä®¾ð¤¥µð¤¦»ç·ð¤§¸ð¤ð¤©çð¨¯ð¡£ºç¦ð¨¥¾ð¨¸¶é©é³ð¨©é¬ééð¨¥¬ð¤¹çã»«ç²ç©çð¤³ð¤¸ç¾ð¡¯ç£ð¡¢¾ð£ã»ð¡¢ð¥¯ð¡¸ã¢ð¡»ð¡ ¹ã¡ð¡´ð¡£ð¥½ã£ð¡åð¤¨¥ð¡¾ð¡¨"],["9240","ð¡ð¡¶èð£¦èèð¤¦ð§¥ð£¸±ð¥ð£»»ð§ä´ð£®ð©¦ð¦¼¦æ¹ã³ã°ã·§å¡¬ð¡¤¢æ äð£¿ð¤¡ð¤ð¤ð¦°¡ååð¦±åð ¿ð ®¨ð ¸éð¨¬éä»¸å«ã ð¤¶äº¼ð ¥ð ¿ä½ä¾ð¥å©¨ð «ð ã¦ð ð ãµä¼©ð ð¨º³ð µè«ð äº"],["92a1","ååä¾¢ä¼ð¤¨ð£ºä½å®å¬åä¿ä¿¥åå¼ååååæ¹¶ð£ð£¸¹ð£º¿æµ²ð¡¢ð£ºå¨åð  äð £ð ð èµºð¨ªð åå¤ð ¡³å¡é®äºçð¤ð ° ð¤¦¬ð¡¤æ§ð ¸ç¹ã»ççççä®ð¤ª¼ð¤åãçð¤å´ð åð ¯åéé´é¦ååå¿ã¾å£åªð¨©ð¡ºð¡¯ð¡å¨¬å¦¸éå©¾å«å¨ð¥¥ð¡§³ð¡¡¡ð¤ãµæ´çå¨¡ð¥º"],["9340","åªð¨¯ð é çð¡çä¥²éð¨§»é½ã å°å²å¹å¹ð¡¦ð¡¥¼ð£«®å»å­ð¡¤ð¡¤ãð¡¢ ãð¡¾ãèªð¨©ð¡¶ºð£²ð¨¦¨å¼å¼ð¡¤§ð¡«å©«ð¡»å­èð§½è¡ æ¾ð¢¡ ð¢«å¿ãº¸ð¢¯ð¢¾ð©ð¦½³æð ¾ð ð¢æææµð¢²ð¢´ð¤ð©"],["93a1","æ±ð¤¥ð¢­ªã¨©ð¢¬¢ð£ð©£ªð¢¹¸æ·ðªæ¶æ±æð¤§£ð¢µ§æ¤ð¢²¡æ»æ«æ¥²ã¯´ð£ð£­ð¤¦ð£«åð£ ð¡£ð©¿æð£ð£³ã« äð¥ð¨¬¢ð¥ð¡¼ð¥ð¥¥ç£®ð£ð¡ ªð£´ã¤ð£ð£ð¤æð¦´¤æ«ä®æ°ð§¡°ð¡·«æ£ð£ð£¡æð¥¡²ã£ð£ ºð£¼ã®ð£¢ð£¾çã®æð¤ªæ¢¶æ ã¯æª¾ã¡£ð£ð¤æ¨³æ©æ«æ¬ð¡¤ææ¢æ©ã¯æ©ºæ­ð£¿ð£²é é²ð¨¯ªð¨«"],["9440","éð¨ð¨§é§æ¶¥æ¼ð¤§¬æµ§ð£½¿ã¶æ¸ð¤¼å¨½æ¸å¡æ´¤ç¡ç»ð¤ð¤¶ç±çççð¤ð¤¥å¹ð¤ª¤ð «çºð£»¸ð£ð¤©ð¤¤ð¥¿¡ã¼ãº±ð¤«ð¨°£ð£¼µæ§ã»³çç¼éç·äð¦·ªäçã½£ð¤³ð¤´ã½çç³ðªã¬ç¨ð¨«ð¤¦«ð¤¦ã«»"],["94a1","ã·ð¤©ã»¿ð¤§ð¤£³éºå²éð¨«£ð¡¡¤åð¥¡ð¥§ç¸ð£²ççç»ð¤ð£ã©ð¤£°ç¸çãº¿ð¤ªºð¤«äð¤ªð¦®éð¥ç ç¢ç¢ç£çç¥ð§ð¥£äç¦èç¦¥æ¨­ð£»ºç¨ºç§´ä®ð¡¦ä²éµç§±ð µð¤¦ð ð£¶ºð¡®ãå«ã°ãªð ð °ç«¢å©ð¢µð¥ª¯ð¥ªå¨ð ç£°å¨ªð¥¯ç«¾ä¹ç±ç±­äð¥®³ð¥º¼ð¥º¦ç³ð¤§¹ð¡°ç²ç±¼ç²®æª²ç·ç¸ç·ç½ð¦¡"],["9540","ð¦ð§­ç¶ð¥ºäªð¦­µð ¤æð ð£åð¦ð¦¸ð¤¥¢ç¿ç¬§ð  ¬ð¥«©ð¥µç¬ð¥¸é§¦èé©£æ¨ð£¿ã§¢ð¤§·ð¦­é¨ð¦ èð§§ð¦³äªè·äèèèð¦´é£ð¦©è¢è¥ð¦©èð¦¶§èð§åªä¿ð¡¡å¬«ð¡¢¡å«¤ð¡£è ð¯¦¼ð£¶è ­ð§¢å¨"],["95a1","è¡®ä½è¢è¢¿è£¦è¥¥è¥ð¥è¥ð§ð§ð¨¯µð¨¯ð¨®ð¨§¹ãº­è£äµäã²è¨½è¨ð©å½é«ð¤æç©çð¡¡éµ­è²è³©ð§·å¦çå§°ä®ãè¸ªèº§ð¤°è¼°è½ä´æ±æ¾»ð¢¡ä¢æ½¹æºð¡é¯©ãµð¤¤¯é»éå±ä¤é»éð¨©ä¢ð¨«¼é§ð¨°ð¨°»è¥è¨«éé§ééð¨´´çã»ð¤£¿ð¤©ð¤ªã»§ð£¥éð¨»§ð¨¹¦ð¨¹¥ã»ð¤§­ð¤©¸ð£¿®çç«ã»¼éð©°"],["9640","æ¡ä¨ð©ð¥éé¨ð¨¦ð¨°¦ð¨¬¯ð¦¾éºå¬è­©ä¤¼ç¹ð¤éé±é¤¸ð ¼¦å·ð¨¯ð¤ª²é ð©é¶ð©é¥äð¨­ð¤©§ð¨­¤é£ð¨©ã¼éªä¤¥èé¤»é¥ð§¬ã·½é¦ä­¯é¦ªé©ð¨­¥ð¥£æªé¨¡å«¾é¨¯ð©£±ä®ð©¥é¦¼ä®½ä®é½å¡²ð¡å ¢ð¤¦¸"],["96a1","ð¡¨ç¡ð¢ð£¶¸æ£ãµ½éã¤§æð¢ð¢¥«æé±é±é±»é°µé°é­¿é¯ð©¸­é®ðªµðª¾é´¡ä²®ð¤é¸ä²°é´ðª´ðª­ðª³ð©¤¯é¶¥è½ð¦¸ð¦¿ð¦®è¼ä³ð¦¶¤ð¦ºð¦·°è è®ð¦¸ð£ð¦¤ç§¢ð£ð£ä¤­ð¤§ãµ¢éé¾éð ¿ç¢¹é·éä¿¤ãé¤ð¥ç ½ç¡ç¢¶ç¡ð¡ð£ð¤¥ãä½²æ¿æ¿ççåð¤µå»å£³åé´åç´ã¯ð¤¬ç«ð¦±ð¤¾å¬¨ð¡µð¨©"],["9740","æå«å¨ä¼ð¤ã¬ä­»ð¨§¼é»é¸ð¡£ð ¼è²ð¦³ð¡ð¤ºð¢°¦ð¤å¦ð£¶·ð¦ç¶¨ð¦ð¦¤ð¤¦¹ð¤¦ð¨§ºé¥ç¢ã»©ç´ð¨­£ð¡¢ã»¡ð¤ª³æ«ç³ç»ã»ð¤¨¾ð¤ªð¡ð¤©¦ð §ð¡¤ð¤§¥çð¤¤ç¥ð¤¥¶éç¦éð ¾é±ð¨«ð¨¨éð¨¯§ð¥ä¤µð¨ªç«"],["97a1","ð¤¥ð ³¿å¤ð ð ¯«ð ²¸åç§ð¡ºç·¾ð¡ð¤©ð¡¡ä®éãð¨«ð¤¦­å¦°ð¡¢¿ð¡¢ð§åª¡ã¢ð£µã°éå©¹ð¨ªð¡¡¢é´ã³ð ª´äªã¦å´ãµ©ãµð¡çµä»ð¨æ¸ð©¤ä«æµð§¹ç§æ²¯ã³ð£¿­ð£¸­æ¸æ¼ãµ¯ð µçã¼ãäã»ä¡±å§é®ä¤¾è½ð¨°ð¦¯å åãð¡ç¾ð¤¢ð¤©±ð¢¿£ð¡°ð¢½æ¢¹æ¥§ð¡ð£¥ð§¯´ð£ð¨ªð£ð£ºð¤²æ¨ð£­ð¦²·è¾ää"],["9840","ð¦´¦ð¦µð¦²ð¦¿æ¼ð§è½ð¡ºè­ð¦²ð§ð¡å¦åªð¡³å©¡å©±ð¡¤ð¤¼ã­å§¯ð¡¼ãçéæð¤¥å©®å¨«ð¤æ¨«ð£»¹ð§¶ð¤ð¤çð¤ð¨§¡ä¾°ð¦´¨å³ð¤ð§¹ð¤½æ¨ð¤ð¡ç¦ç³ð¤©ã¶¥æ³ð¯ ¥ð¤©ç¹¥å§«å´¯ã·³å½ð¤©ð¡ç¶¤è¦"],["98a1","åð£«ºð£ð å¾ð £ð ã¿¥ð¡¾ðª¶çð©åµ°çç³ð¨©ð© ä¿ç¿§ççð§«´ç¸ç¹ð¥¶ççãº©ð§¬é¬çµð¤£²ç¡è¶ã»çã»æ²¢å½çççã»¢ã»°ã»´ã»ºçã¼ã½çç­ç²çã½¼ççã¿çã¿ç´ã¿çºð¤½çå£è¦å¡©äçä¹æ¡äãçäªä¯å±ç¾çå£²ç ç¹ç ä¨ç ¹ç¡ç¡ç¡¦èð¥µç¤³æ ç¤²ä"],["9940","äç¦ç¦è¾»ç¨è¾¼ä§çªä²çª¼è¹äç«ç«ää¸¡ç­¢ç­¬ç­»ç°ç°ä äºç±»ç²äç²¸äç³­è¾çð ³ç·ç·ç·ç·½ç¾®ç¾´çäè è¥ç¬¹è®è±èã·å´ç è·è©ä­èçªèèç èäã¬¹èèè"],["99a1","äå ºè¼èä¥èä­è¥å¯èè¤èäè¦è¶èèè¿ä°èé©æ¦èçµè¤æ£èäè¾è¡è¸èè¸èä»è¯è°è ä·è²èè²è¯éèääè¢®è£¿è¤¤è¥è¦ð§¥§è¨©è¨¸èªèª´è±è³è³²è´äå¡è·ä­ä»®è¸ºååè¹±åµèº°ä ·è»è»¢è»¤è»­è»²è¾·è¿è¿è¿é³é§ä¢­é£ éä¤é¨éé«é±é®é¿"],["9a40","é£é«é³é´é½ééé­ä¥ä¥éº¿éåéé­é¾ä¥ªéé¹é­é¢ä¦§é´é³ä§¥æ ä¨¤éä¨µé²éåä«¤æ¨é¢¹ä¬é£±å¡é¤é¤å´é¤é¤·é¥é¥é¥¢ä­°é§ä®é¨¼é¬çªé­©é®é¯é¯±é¯´ä±­é° ã¯ð¡¯éµé°º"],["9aa1","é»¾åé¶é¶½é·é·¼é¶è¾¶é¹»éº¬éº±éº½é»éé»¢é»±é»¸ç«é½ð ð ·ð  æ¤éå¦¬ð å¡éã¹ð ð ð ¶ð¡ºåç³ð «ð «ð ®¿åªð¯ »ð ¯åð ¯»ð °»ð ±ð ±¥ð ±¼æ§ð ²åºð ²µð ³ð ³­ð µ¯ð ¶²ð ·æ¥é°¯è¥ð ¸ð ¸ð »ð ¾ð ¼­ð ¹³å° ð ¾¼å¸ð¡ð¡ð¡¶æð¡»ð¡ð¡ãð¡¿ð¡ð¡¯ð¡»å¤è­ð¡£ð¡µð¡¶è®ð¡·ð¡ð¡ð¡ä¹¸ç»ð¡ ­ð¡¥ª"],["9b40","ð¡¨­ð¡©ð¡°ªð¡±°ð¡²¬ð¡»æð¡»ð¡¼çæ¡ð¢æ§©ãð¢¼ð¢ð¢ºð¢ªð¢¡±ð¢¥è½ð¢¥§ð¢¦ð¢«è¦¥ð¢«¨è¾ ð¢¬é¸ð¢¬¿é¡éª½ð¢±"],["9b62","ð¢²ð¢²·ð¥¯¨ð¢´ð¢´ð¢¶·ð¢¶ð¢¹ð¢½´ð¢¿ð£³ð£¦ð£ð£å¾±ææ¿ð§©¹ð£§ð£³çð¤¦ºçð£ð£çºð å¢µæ"],["9ba1","æ¤ð£ª§ð§ð¥¿¢ð£¸ð£º¹ð§¾ð¢ä£äª¸ð¤ð¨ªð¤®ð¤ð¤»ð¤´ð¤ð¤©ð åð å¦ð¡º¨ã®¾ð£³¿ð¤ð¤åð¤´ã¦ð¤¯ð¨¨ð©§ã¢ð¢è­ð¨­é§ð¤ ð¤£»ð¤¨çð¤«ð ±¸å¥¥ð¤º¥ð¤¾ð ¹è»ð¥¬åå¿ç±ð¥ð¥ð£½ð¤ª§å¼ð¥ð¥®ð¦­éã³ð¥¿ð§²ð¥äð¥¢ð¥¦ð¥ð¤¤¿ð¥¡å¦ã»ð£æð¥¤ä¼ð¨¥ð¥ª®ð¥®ð¥°ð¡¶å¡çæ¾¶ð¦ð§°éð¦²ð¤¾è­¢ð¦ð¦"],["9c40","åµð¦¯·è¼¶ð¦ð¡¤è«ªð¤§¶ð¦ð£¿¯ð¦ä¯ð¦¿ð¦µð¢é¥ð¥¡æå¨§ð¯£ä¾»å¹ð¤¡ð¦¼ä¹ªð¤¤´éæ¶ð¦²½ãè¥·ð¦ð¦¡®ð¦ð¦¡çð¦£ç­ð©ð ¨ð¦¤¦éð¦¤¹ç©é·°ð¦§ºé¨¦ð¦¨­ãð¦©ð ¡ç¦ð¦¨´ð¦­å´¬ð£èð¦®äð¦²¤ç»è¡¥ð¦¶®å¢¶"],["9ca1","ãð¢ð§ð§ã±ð§ð§éð¢ºð§é°ð§¦ð¤§æ°¹éð§ð »¸è §è£µð¢¤¦ð¨³ð¡±æº¸ð¤¨ªð¡  ã¦¤ã¹å°ç§£ä¿æ¶ð©²­ð©¢¤è¥ð§ð§¡åäð¡ã¦¡ð£¯ð¨¨ð¡ç­è¦ð§§ð©¨å©§ä²·ð§¯ð¨¦«ð§§½ð§¨ð§¬ð§µ¦ð¤ºç­ç¥¾ð¨æ¾µðªæ¨ð¨å¢ð¦¸é¿æ ¶éð¨¯ð¨£ð¦¦µð¡­ð£¯ð¨å¶ð¨°°ð¨åé £ð¨¥å¶«ð¤¦æ¾æ§åð¤ª¥ð£¾ã°æ¶ð¨ð¨´ð¨®ð¡¾¡ð¨"],["9d40","ð¨ð¨¯ð¨ð¨ð¨¯ð¨ãð¨¨ð¨ªä£ºæ¦ð¨¥ç éð¨¦¸ä²ð¨§§äð¨§¨ð¨­ð¨¯å§¸ð¨°è¼ð¨¿ð©¬ç­ð©ð©¼ã··ð©ð¤«è¿çåð©§ð©©ð©°ð©¸ð©²ð©£ð©¥ð©¥ªð©§ð©¨¨ð©¬ð©µð©¶çºð©»¸ð©¼£ä²¤éðªç¢ðª¿ä¶éðªä¶ð ²è¾¾å"],["9da1","è¾ºð¢°è¾¹ð¤ªäç¹¿æ½æª±ä»ªã¤ð¨¬¬ð§¢ãºèºð¡µð¨¤ð¨­¬ð¨®ð§¨¾ð¦¯ã·«ð§ð£²·ð¥µð¥¥äºð¥ºð¦å¿ð ¹­è¸å­­ð£ºð¤²ææð¡¶ð¡¡»æ°å­ð¥±åð¥ã·ð©¶ä±½å¢åç½ð¥»å¥µð£µè°ä¸ð ¿ªð µð£ºèéµè´ç»é±çç¹éå²èè·å¥è²èè½åªç¥¢ååð ºãåå±æ±ð¨¢ã­ç´å°åºåå²ð ±ð ²å»ð¥ð ¹¶ð¢±¢"],["9e40","ð º¢éº«çµåð¡µæé­åè³ç¶é¶æ¼æ¹æ¾å©ð¢­é±²ð¢º³åãð ¶§å§åååç¦è¸­ð¦¢ç±è¶è èè£è¶èð¡ä¬çð¤å®èð¦¢å»ð¢´ð§´¯ð¤£ð§µ³ð¦»ð§¶é°ð¡éð£³¼ðª©ð º¬ð »¹ç¦ð¡²¢äð¤¿ð§¿¹ð ¿«äº"],["9ea1","é±æð¢¶ ä£³ð¤ ð©µ¼ð ¿¬ð ¸æ¢ð§£ð ¿­"],["9ead","ð¦ð¡ç£çºéµä¸ä¸ã·å¬æ²²å§ã¬ã§å½ã¥ð¤å¢ð¤­®è­ååªð¥ªð ¥¹"],["9ec5","ã©ð¢¥ç´ð©º¬ä´é¯­ð£³¾ð©¼°ä±ð¤¾©ð©ð©¿èð£¶¶ð§²ð¦³ð£ æ®ç´¥ð£»·ð£¸¬ã¨ªéåã¹´ãºä©ð çå«°ð º¶ç¡ºð§¼®å¢§ä¿å¼é®åµ´çðª´éºä³¡ç¹ã»æð£ð¤²"],["9ef5","åð¡©å§ð¤¥£ð©¸å´ð§®ã­æ±éµ¼"],["9f40","ç±é¬¹åð¡¬å±æð©ð¦µð§¤è­ð ´¨ð¦´¢ð¤«¢ð µ±"],["9f4f","å¾ð¡¼å¶éð¡·éºéç¬é¬å³ç®£æ¨æµé«¿ç¯é¬ªç±¾é¬®ç±ç²é°ç¯¼é¬é¼é°ð¤¤¾é½å³å¯ä¿½éºä¿²å ã¸åå§åå¦·å¸éé¶«è½å©é´é¥éºå¬æ°"],["9fa1","æ¤¬åé°é´ä°»éæ¦å¦çð¡­é§å³"],["9fae","ééé"],["9fb2","éð¨ºæ¿ð¦´£æ«åéçºæð ¼çç±°ð¥°¡ð£³½"],["9fc1","ð¤¤çé®ä¸ªð ³è¾è¡"],["9fc9","å±æ§å­åºåå·µä»æ°±ð ²ä¼¹åååè¶ã¾å¼ã³"],["9fdb","æ­é¼é¾¥é®é ®é¢´éªºéº¨éºçºç¬"],["9fe7","æ¯ºè ç½¸"],["9feb","å ðªè¹·é½"],["9ff0","è·è¹é¸è¸æð¨½è¸¨è¹µç«ð¤©·ç¨¾ç£æ³ªè©§ç"],["a040","ð¨©é¼¦æ³èçðª²ç¡ð¯¡è´ç¢ç±è¬­çç±è³«ð¤ª»è¯å¾ºè¢ ä·"],["a055","ð¡ »ð¦¸"],["a058","è©¾ð¢"],["a05b","æ½ç§é«éµé®é®èµ"],["a063","è è³·ç¬é¡é®°ãç²ä°ç±é¥ð¦æä°éºæ½"],["a073","åæ¯æ¦æ¹æã©æ¢åªð£µæ¤æ ã"],["a0a1","åµð¨¯è¿ð¨¸¹"],["a0a6","åð¡µç¤å²é¸ð ¼»ä¥"],["a0ae","ç¾"],["a0b0","ç³ð¥¼ç³ç¨­è¦è£çµçç²è¦èæè¢ð§èç°èç¤è¦ð¦çð¦»è©èèèè©è²­è­ç«ç¸èãµæ¦²è¶¦"],["a0d4","è¦©ç¨æ¶¹èð¤ç§ã·ç¶æ¤æã³ç¢æ·"],["a0e2","ç½±ð¨¬­çæ©ä­¾å ã°ð£³ð¥»ð§ð¥±ð¡¥ð¡¾ð©¤ð¦·ð§­å³ð¦­ð¨¨ð£·ð ®ð¦¡ð¤¼ä¢å¬ð¦é½éº¦ð¦«"],["a3c0","â",31,"â¡"],["c6a1","â ",9,"â´",9,"â°",9,"ä¸¶ä¸¿äºäº ååå«å¹å¸å©å¶å¤å®å·â¼³å¹¿å»´å½å½¡æ´æ çç¶è¾µé¶Â¨Ëã½ã¾ãããä»ãããã¼ï¼»ï¼½â½ã",23],["c740","ã",58,"ã¡ã¢ã£ã¤"],["c7a1","ã¥",81,"Ð",5,"ÐÐ",4],["c840","Ð",26,"ÑÐ¶",25,"â§â¸â¹ãð ä¹ð åä"],["c8a1","é¾°åé¾±ð§"],["c8cd","ï¿¢ï¿¤ï¼ï¼ã±ââ¡ããâºâºâºâºâºâºâºâºâºâºâºâº¥âº§âºªâº¬âº®âº¶âº¼âº¾â»â»â»â»â»â»â»â»â»£"],["c8f5","ÊÉÉÉÉµÅÃ¸ÅÊÉª"],["f9fe","ï¿­"],["fa40","ð éð ð£¿èäµç¯åµãð¤¥ð¨§¤éð¡§è®ð£³ç ¼ææð¤¤³ð¨¦ªð  ð¦®³ð¡ä¾«ð¢­åð¦´©ð§ªð£ð¤ª±ð¢å©ð ¾å¾¤ð ð æ»ð å½åãºåé¡¬ãèð¤¦¤ð å ð£´åªð ¯¿ð¢¼ð ¥ð¢°ð ð£³ð¡¦å®è½ð ³ð£²å²å¸"],["faa1","é´´åååã³åð¤ª¦å³å¢åå­èæ¤¾ð£­å½»åå¦å¼åµååå¹åç°èå èð¦¬åð¨«åæ»ð£¾ð ¥ð£¿¬å³åð ¯¢æ³ð¡¦æ çæãºªã£ð¡¨çä¢å­å´ð¨«å¾å¿ð¡ð¡ç¦åð¨ªå å«å®ç§ð¥²ã½çååæ±ä¹å¾åãª«ð ®å ð£¿«ð¢¶£å¶ð ±·åç¹å«ææµå­ð¦­ð µ´ååå¤ä¦ð¡ð »ã¶´ð µ"],["fb40","ð¨¦¼ð¢åä³­å¯çåå©åð¡£ð¤ºäð¤µæ³ð¡´å·æð£æ¤æ­ååç£±å±éå¾åå¯å­ð¨­¦ã£ð¡åð¤¥æ±®çåã±ð¦±¾å¦ð¡å ð¡ð¤£å ¦ð¤¯µå¡å¢ªã¡å£ å£ð¡¼å£»å¯¿åðªð¤¸éã¡å¤æ¢¦ãæ¹"],["fba1","ð¡¾å¨¤åð¡èå§ð µð¦²ð¦´ªð¡å§ð¡»ð¡²ð¦¶¦æµ±ð¡ ¨ð¡å§¹ð¦¹åª«å©£ã¦ð¤¦©å©·ãåªç¥å«ð¦¾¡ð¢ã¶ð¡¤ã²ð¡¸åºåå­¶æå­¼ð§¨ää¡ð å¯æ ð¡¨´ð¥§ð ¥å¯³å®ä´å°ð¡­å°çå°ð¡²¥ð¦¬¨å±ä£å²å³©å³¯å¶ð¡·¹ð¡¸·å´å´åµð¡º¤å²ºå·è¼ã ­ð¤¤ð¢ð¢³èã ¶ã¯å¸®æªå¹µå¹ºð¤¼ð ³å¦äº·å»å¨ð¡±å¸å»´ð¨"],["fc40","å»¹å»»ã¢ å»¼æ ¾éå¼ð ð¯¢ã«ä¢®ð¡ºå¼ºð¦¢ð¢å½ð¢±å½£é½ð¦¹®å½²éð¨¨¶å¾§å¶¶ãµð¥ð¡½ªð§¸ð¢¨éð ð¨¨©æ±æð¡¡·ã¥£ã·ã¹åð¢´ç¥±ã¹ææ¤æ³ð¤¦ð¤¦ð§©ç¤å¡åª æ¤è¤æð¯¢¦ð¦»æå´ð æå®ªð£¾·"],["fca1","ð¢¡æð¨®ð©¥æã¤²ð¢¦ð¢£æ£æææð æð¡°æð¢¸æ¬ð¤§ã¨æ¸æ¸ð¡ð¡¼ææ¾ð¢¸¶é ð¤ð¥æ¡æ¥é»ã©¦æºã©ææ¼ð¤¨¨ð¤¨£ææ­æð£¾æµð¤¥ä¬·æäð¡ ©æ æ£å¿ð£æð£·ð£¸æð£¤ð£¥æð ¹µæ§ð¥¦æ³æ´ð¡¸½ð£±ð¨´ð£ð¥çð¢£·é¦¤æð¤ð¤¨¡ã¬«æ§ºð£ææ§æ¢ð¤ð©­æä©æ ¢æ¹é¼æ ð£¦ð¦¶ æ¡"],["fd40","ð£¯æ§¡æ¨ð¨«æ¥³æ£ð£æ¤æ¤ã´²ã¨ð£¼ã®æ¬æ¥¡ð¨©ä¼æ¤¶æ¦ã®¡ð è£åæ§¹ð£ð¢ªæ©ð£æªã¯³æ±æ«ð©ã°æ¬ð ¤£ææ¬µæ­´ð¢æºµð£«ð µð¡¥ãå¡ð£­æ¯¡ð£»¼æ¯æ°·ð¢ð¤£±ð¦­æ±è¦æ±¹ð£¶¼äð£¶½ð¤¤ð¤¤ð¤¤"],["fda1","ð£³ã¥ã³«ð ´²é®ð£¹ð¢ç¾æ ·ð¦´¥ð¦¶¡ð¦·«æ¶æµæ¹¼æ¼ð¤¥¿ð¤ð¦¹²è³ð¦½´åæ²æ¸è®ð¨¬¡æ¸¯ð£¸¯çð£¾ç§æ¹åªð£æ¿¸ãæ¾ð£¸°æ»ºð¡ð¤½äé°æ½æ½ãµæ½´ð©°ã´»æ¾ð¤æ¿ð¤ð¤ð¤¹ð£¿°ð£¾´ð¤¿åð¤ð¤ð¤ð¦çç¾ç§çççççäã·¨ç´çð¤·ç«çåªçç®å²ð¤¥çé¢ð¤ç¬ð¤ð¤¨§ð¤¨¢çºð¨¯¨ç½ç"],["fe40","éçå¤éç¤éð¥ç®çð¤¥´æ¢½ççã¹ð£æ æ¼½ççªç«ð¤ £ð¨ «ä£­ð¨ ç¨ç®ççªð °ºð¦¨®ççð¤¢ð¡§ð¤¨¤æ£ãð¤¦·ð¤¦ð¤§»ç·çæ¤ð¤¨¦ç¹ð ã»çð¢¢­ç ð¨º²çç¤ç¶è¹ç¬ã°ç´é±æ¨¬çä¥ð¤ª"],["fea1","ð¤ð¤©¹ð¨®å­ð¨°ð¡¢çð¡¦çç©çð¨»ð¡©å¯ð¨º¬éççç§ç®ð¤¾ã¼ð¤´çççç´çç¬ççç¯ç¶ð¦µçè¯ã¸ð¦¤ð¦¤ç¡ç¥ç·çð¦¾è¢ð¥ð¥½ð¡¸çç¦çæ¯ð¥ çð£¬ç¯ð¨¥¤ð¨¥¨ð¡ç´ç ð¡¶ð¤¨æ£ç¢¯ç£ç£é¥ç¤®ð¥ ç£ç¤´ç¢±ð§è¾¸è¢ð¨¬«ð¦ð¢ç¦è¤æ¤ç¦ð¥¡ç¦ð§¬¹ç¤¼ç¦©æ¸ªð§¦ãº¨ç§ð©ç§"]]');
            }
          ),
          /***/
          13336: (
            /***/
            function(u) {
              u.exports = JSON.parse('[["0","\\u0000",127,"â¬"],["8140","ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ ä¸¡ä¸£ä¸¦ä¸©ä¸®ä¸¯ä¸±ä¸³ä¸µä¸·ä¸¼ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹¢ä¹£ä¹¤ä¹¥ä¹§ä¹¨ä¹ª",5,"ä¹²ä¹´",9,"ä¹¿",6,"äºäº"],["8180","äºäºäºäºäºäºäºäº£äºªäº¯äº°äº±äº´äº¶äº·äº¸äº¹äº¼äº½äº¾ä»ä»ä»ä»ä»ä»ä»ä»ä» ä»¢ä»¦ä»§ä»©ä»­ä»®ä»¯ä»±ä»´ä»¸ä»¹ä»ºä»¼ä»¾ä¼ä¼",6,"ä¼ä¼ä¼",4,"ä¼ä¼ä¼¡ä¼£ä¼¨ä¼©ä¼¬ä¼­ä¼®ä¼±ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾",4,"ä½ä½ä½",5,"ä½ä½ä½ä½¡ä½¢ä½¦ä½¨ä½ªä½«ä½­ä½®ä½±ä½²ä½µä½·ä½¸ä½¹ä½ºä½½ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾¡ä¾¢"],["8240","ä¾¤ä¾«ä¾­ä¾°",4,"ä¾¶",8,"ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿",4,"ä¿ä¿ä¿ ä¿¢ä¿¤ä¿¥ä¿§ä¿«ä¿¬ä¿°ä¿²ä¿´ä¿µä¿¶ä¿·ä¿¹ä¿»ä¿¼ä¿½ä¿¿",11],["8280","åååååååååååå å¢å£å¤å§å«å¯",10,"å»å½å¿ååååååååååå",4,"åååååå",7,"å¦",5,"å­",8,"å¸å¹åºå¼å½ååååååååååå",20,"å¤å¦åªå«å­",4,"å³",6,"å¼"],["8340","å½",17,"å",5,"åååå",10,"å¨å©åªå«å¯å°å±å²å´å¶",4,"å¼",9,"å"],["8380","ååå",5,"å",13,"å¢",28,"åååååååååååååå",4,"å£å¤å¦å§å©åªå¯å²åºå¾å¿åååååååååååååååååå¡å£å¦",4,"å­å®å´å¸å¹åºå¾å¿åååååååååå",5],["8440","ååååååå¢å£å¥",5,"å¬å®å±å²å´å·å¾åååååååååååååå¡å¢å£å¥å¦å§åªå¬å¯å±å²å´åµå¼å¾å",5,"åååååååå"],["8480","åååååå å¢å£å¤å¦å¨å«å¬å­å®å°å±å³",9,"å¾åå",4,"å",6,"ååå",6,"åå¤å¥å¦å§å®å¯å°å´",9,"åååååååååååååååååå",5,"å å¡å¢å£å¥",10,"å±",7,"å»å¼å½åååååååååå"],["8540","åååååååååå¢å¤å¥å§å¨å©å«å¬å­å¯",9,"å¼å½åååååååååååååå¥å¨åªå¬å­å²å¶å¹å»å¼å½å¾åååååååå"],["8580","å",4,"ååååååå å¡å¤å§åªå«å¬å­å¯",6,"å·å¸å¹åºå¼å½å¾åå",4,"ååååååååååå¡å¢å§å´åºå¾å¿ååååååååååå¢å¤å¥åªå°å³å¶å·åºå½å¿ååååååååååååå",4,"å£å¥å§å©",7,"å´å¹åºå¾å¿åååååååååååååååå å¡"],["8640","å¢å¥å®å°å²åµå¶å·å¹åºå¼å¾åååååååå ",4,"å«å¬å¯å°å±å´",5,"å»å¾ååååååå",4,"ååå",5,"ååååå¡å¥å¦"],["8680","å¨å©å«å­å²å´åµå¶å¸å¹åºå»å½åååååå",4,"ååååå",4,"åååå å¢å£å¨å©å«å¯",5,"å¹åºå½å¿ååååååååååååååå ",6,"å¨",8,"å²å´å¶å¸åºå¼å¿",4,"åååååååååå",4,"åå å¢å§å©å­å®å°å±å´å¶å¸",4,"å¿åååå"],["8740","åååååå",7,"ååååå å¡å¢å¥å¦å¨å©åªå«å®å¯å°å³åµå·å¸åºå¼å½å¾å",11,"å",4,"ååååå",4],["8780","å£å¥å¦å§å­å®å¯å°å²å³å´åµå·å¸å¹åºå½",7,"å",6,"åååå",14,"å¤",10,"å°",6,"å¸å¹åºå»å½",12,"å",8,"åååååå£å¥",5,"å¬å®å¯å²å³å¶å·å¸å»å¼åååååå",6],["8840","å",9,"ååå å¡å¢å¤å¥å¦å§å«å±å²å´",4,"å¼å½å¿ååååååååå",4,"ååå¢å£å¥å§å¬å®å°å±å²å´åµå¸å¹åºå½å¾å¿å"],["8880","åååååå",4,"å",6,"ååååå¥å¨åªå¬å¯å°å±å³åµå¶å·å¹",8,"å",6,"ååååååååååå¡å¢å£å¥",7,"å®å°å±å²å³åµå¶å·å»å¼å¾å¿å å å å å å å å å å å å å å å å å å å å å å å ¢å £å ¥",4,"å «",4,"å ±å ²å ³å ´å ¶",7],["8940","å ¾",5,"å¡",6,"å¡å¡å¡å¡å¡å¡å¡å¡å¡",4,"å¡",5,"å¡¦",4,"å¡­",16,"å¡¿å¢å¢å¢å¢å¢å¢å¢å¢"],["8980","å¢",4,"å¢",4,"å¢å¢å¢å¢ ",7,"å¢ª",17,"å¢½å¢¾å¢¿å£å£å£å£å£",10,"å£å£å£å£",13,"å£¥",5,"å£­å£¯å£±å£²å£´å£µå£·å£¸å£º",7,"å¤å¤å¤å¤",4,"å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤ å¤¡å¤¢å¤£å¤¦å¤¨å¤¬å¤°å¤²å¤³å¤µå¤¶å¤»"],["8a40","å¤½å¤¾å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥",4,"å¥¡å¥£å¥¤å¥¦",12,"å¥µå¥·å¥ºå¥»å¥¼å¥¾å¥¿å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦ å¦¡å¦¢å¦¦"],["8a80","å¦§å¦¬å¦­å¦°å¦±å¦³",5,"å¦ºå¦¼å¦½å¦¿",6,"å§å§å§å§å§å§å§å§å§å§å§å§",4,"å§¤å§¦å§§å§©å§ªå§«å§­",11,"å§ºå§¼å§½å§¾å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨¡å¨¢å¨¤å¨¦å¨§å¨¨å¨ª",6,"å¨³å¨µå¨·",4,"å¨½å¨¾å¨¿å©",4,"å©å©å©",9,"å©å©å©å©å©",5],["8b40","å©¡å©£å©¤å©¥å©¦å©¨å©©å©«",8,"å©¸å©¹å©»å©¼å©½å©¾åª",17,"åª",6,"åª",13,"åª«åª¬"],["8b80","åª­",4,"åª´åª¶åª·åª¹",4,"åª¿å«å«",5,"å«å«å«",4,"å«å«å«å«å«å«å«å«å«å«¢å«¤å«¥å«§å«¨å«ªå«¬",4,"å«²",22,"å¬",11,"å¬",25,"å¬³å¬µå¬¶å¬¸",7,"å­",6],["8c40","å­",7,"å­å­å­å­ å­¡å­§å­¨å­«å­­å­®å­¯å­²å­´å­¶å­·å­¸å­¹å­»å­¼å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®å®§å®¨å®©å®¬å®­å®®å®¯å®±å®²å®·å®ºå®»å®¼å¯å¯å¯å¯å¯å¯å¯å¯å¯å¯"],["8c80","å¯å¯",8,"å¯ å¯¢å¯£å¯¦å¯§å¯©",4,"å¯¯å¯±",6,"å¯½å¯¾å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å° å°¡å°£å°¦å°¨å°©å°ªå°«å°­å°®å°¯å°°å°²å°³å°µå°¶å°·å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±¢å±¤å±§",6,"å±°å±²",6,"å±»å±¼å±½å±¾å²å²",4,"å²å²å²å²å²å²å²å²å²",4,"å²¤",4],["8d40","å²ªå²®å²¯å²°å²²å²´å²¶å²¹å²ºå²»å²¼å²¾å³å³å³å³",5,"å³",5,"å³",5,"å³",6,"å³¢å³£å³§å³©å³«å³¬å³®å³¯å³±",9,"å³¼",4],["8d80","å´å´å´å´",5,"å´",4,"å´å´å´å´å´å´å´å´",4,"å´¥å´¨å´ªå´«å´¬å´¯",4,"å´µ",7,"å´¿",7,"åµåµåµ",10,"åµåµåµåµ",10,"åµªåµ­åµ®åµ°åµ±åµ²åµ³åµµ",12,"å¶",21,"å¶å¶å¶å¶å¶å¶ "],["8e40","å¶¡",21,"å¶¸",12,"å·",6,"å·",12,"å·å·å· å·£å·¤å·ªå·¬å·­"],["8e80","å·°å·µå·¶å·¸",4,"å·¿å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸",7,"å¸¨",4,"å¸¯å¸°å¸²",4,"å¸¹å¸ºå¸¾å¸¿å¹å¹å¹å¹",5,"å¹",6,"å¹",4,"å¹å¹å¹å¹ å¹£",14,"å¹µå¹·å¹¹å¹¾åºåºåºåºåºåºåºåºåºåºåºåºåºåº¡åº¢åº£åº¤åº¨",4,"åº®",4,"åº´åººåº»åº¼åº½åº¿",6],["8f40","å»å»å»å»",5,"å»å»å»å»å»å»å»",11,"å»©å»«",8,"å»µå»¸å»¹å»»å»¼å»½å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤"],["8f80","å¼¨å¼«å¼¬å¼®å¼°å¼²",6,"å¼»å¼½å¼¾å¼¿å½",14,"å½å½å½å½å½å½å½å½å½ å½£å½¥å½§å½¨å½«å½®å½¯å½²å½´å½µå½¶å½¸å½ºå½½å½¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾ å¾¢",5,"å¾©å¾«å¾¬å¾¯",5,"å¾¶å¾¸å¾¹å¾ºå¾»å¾¾",4,"å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿¢å¿£å¿¥å¿¦å¿¨å¿©å¿¬å¿¯å¿°å¿²å¿³å¿´å¿¶å¿·å¿¹å¿ºå¿¼æ"],["9040","æææææææææææææ¢æ£æ¤æ¬æ­æ®æ°",4,"æ¶",4,"æ½æ¾ææ",6,"ææææææææææææææ æ¡æ¥æ¦æ®æ±æ²æ´æµæ·æ¾æ"],["9080","ææææææææææææææææææææ¡æ¢æ¤æ¥æ§æ©æªæ®æ°æ³æµæ¶æ·æ¹æºæ½",7,"ææææ",4,"æææææææææ¡",4,"æªæ±æ²æµæ·æ¸æ»",4,"æææææææææ",4,"æææææææææ¡æ¢æ¥æ¨æ©æªæ¬",18,"æ",6],["9140","ææææææææææ",6,"æææ æ¡æ£æ¤æ¥æ¦æ©",6,"æ±æ²æ³æ´æ¶æ¸",18,"æææ",4,"æ"],["9180","æ",6,"æ",8,"æªæ«æ­",9,"æ¸",5,"æ¿æææ",4,"ææ",4,"ææ",16,"æ§",13,"æ¶",8,"æ",5,"æææææææææ æ£æ¦æ§æ¨æ©æ«æ­æ¯æ°æ±æ²æµæ¶æ¸",4,"æææææ"],["9240","ææææææææ",6,"æ¤æ¥æ¨æ±æ²æ´æµæ·æ¸æºæ»æ½ææææææææ",5,"ææææææ£æ¦æ§æ©æªæ­æ®æ¯æ°æ²æ³æ´æ¶æ·æ¸æºæ¾ææ"],["9280","ææææææææ æ¡æ¤æªæ«æ°æ²æµæ¸æ¹æºæ»ææææææææææææææææææææ¦æ§æ©æ¬æ­æ®æ°æ±æ³",5,"æ»æ¼æ¾æ¿æææææææææææ",7,"æ æ¤æ¥æ¦æ¨æªæ«æ¬æ¯æ°æ²æ³æ´æµæ¸æ¹æ¼æ½æ¾æ¿æææææææææææææ",6,"æ¡æ¤æ¦æ«æ¯æ±æ²æµæ¶æ¹æ»æ½æ¿æ"],["9340","ææææææææææææææ",6,"ææ¢æ¤",4,"æ«æ¬æ®æ¯æ°æ±æ³æµæ·æ¹æºæ»æ¼æ¾æææ",4,"æææææ",5,"æææ¢æ£æ¤"],["9380","æ¥æ§æ¨æ©æ«æ®",5,"æµ",4,"æ»æ¼æ¾æææææ",6,"æææææ",4,"æ",7,"æ¨æªæ«æ¬æ®",9,"æ»",6,"æææ",8,"æææææææææ",4,"æ¥æ¦æ§æ¨æªæ«æ¯æ±æ²æ³æ´æ¶æ¹æ»æ½æ¾æ¿ææææ",6,"ææææææææ"],["9440","æææææ æ¡æ£æ¥æ§",24,"æ",7,"æ",7,"æ",4,"æ",8],["9480","æ¢æ£æ¤æ¦",4,"æ¬æ­æ°æ±æ²æ³æ·æºæ¼æ½æ",4,"ææææææææææææææææ æ¡æ¤æ¥æ§æ¨æ©æªæ­æ®æ¯æ±æ³æµæ¶æ¸",14,"æææææææææææææææ æ¢æ£æ¦æ¨æªæ¬æ®æ±",7,"æºæ»æ¾æ¿æææææææææææææ",7,"æ¡æ£æ¤æªæ«"],["9540","æ²æ³æ´æµæ¸æ¹æ»",4,"æææææææææææææææææææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ²æ³æ·",4,"æ½æ¿æææ",6,"æææææ"],["9580","ææææææ æ¢æ£æ¥æ§æ©",4,"æ±æ²æ³æµæ¸æ¹æ»æ¼æ½æ¿ææææææææææææææææææ",4,"æ",8,"æ©",4,"æ¯",4,"æµæ¶æ·æ¸æºæ»æ¼æ½æ¿",25,"ææ",7,"æ§æ¨æª",5,"æ±æµæ¶æ¸æºæ»æ½æææ"],["9640","æææææææææææææææææ ",5,"æ§æ©æ®æ°æ²æ³æ¶æ·æ¸æ¹æ»æ¼æ¾æ¿æææææææææææ",4,"ææ¢æ£æ¤æ¦æ§æ«æ¬æ®æ±æ´æ¶"],["9680","æ¸æ¹æºæ»æ½ææææææææææææææææææææ æ¡æ¤æ¦æ©æ¬æ®æ±æ²æ´æ¹",7,"ææ",9,"ææææææ¡æ£æ¤æ¦æ§æ¨æªæ«æ­æ®æ²æµ",7,"æ¾æ æ æ æ æ æ æ æ æ æ æ ",4,"æ æ æ  æ ¢",6,"æ «",6,"æ ´æ µæ ¶æ ºæ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡",5],["9740","æ¡æ¡æ¡æ¡æ¡ªæ¡¬",7,"æ¡µæ¡¸",8,"æ¢æ¢æ¢",7,"æ¢æ¢æ¢æ¢æ¢æ¢æ¢",9,"æ¢£æ¢¤æ¢¥æ¢©æ¢ªæ¢«æ¢¬æ¢®æ¢±æ¢²æ¢´æ¢¶æ¢·æ¢¸"],["9780","æ¢¹",6,"æ£æ£",5,"æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£",4,"æ£¡æ£¢æ£¤",9,"æ£¯æ£²æ£³æ£´æ£¶æ£·æ£¸æ£»æ£½æ£¾æ£¿æ¤æ¤æ¤æ¤æ¤",4,"æ¤æ¤æ¤æ¤",11,"æ¤¡æ¤¢æ¤£æ¤¥",7,"æ¤®æ¤¯æ¤±æ¤²æ¤³æ¤µæ¤¶æ¤·æ¤¸æ¤ºæ¤»æ¤¼æ¤¾æ¥æ¥æ¥",16,"æ¥æ¥æ¥æ¥æ¥æ¥æ¥"],["9840","æ¥¡æ¥¢æ¥¤æ¥¥æ¥§æ¥¨æ¥©æ¥ªæ¥¬æ¥­æ¥¯æ¥°æ¥²",4,"æ¥ºæ¥»æ¥½æ¥¾æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦æ¦",5,"æ¦æ¦æ¦æ¦æ¦",9,"æ¦©æ¦ªæ¦¬æ¦®æ¦¯æ¦°æ¦²æ¦³æ¦µæ¦¶æ¦¸æ¦¹æ¦ºæ¦¼æ¦½"],["9880","æ¦¾æ¦¿æ§æ§",7,"æ§æ§æ§æ§æ§æ§æ§",5,"æ§æ§æ§æ§¡",11,"æ§®æ§¯æ§°æ§±æ§³",9,"æ§¾æ¨",9,"æ¨",11,"æ¨",5,"æ¨ æ¨¢",5,"æ¨©æ¨«æ¨¬æ¨­æ¨®æ¨°æ¨²æ¨³æ¨´æ¨¶",6,"æ¨¿",4,"æ©æ©æ©",7,"æ©",6,"æ©"],["9940","æ©",4,"æ©¢æ©£æ©¤æ©¦",10,"æ©²",6,"æ©ºæ©»æ©½æ©¾æ©¿æªæªæªæª",8,"æªæª",4,"æª",7,"æª¡",5],["9980","æª§æª¨æªªæª­",114,"æ¬¥æ¬¦æ¬¨",6],["9a40","æ¬¯æ¬°æ¬±æ¬³æ¬´æ¬µæ¬¶æ¬¸æ¬»æ¬¼æ¬½æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­æ­",11,"æ­",7,"æ­¨æ­©æ­«",13,"æ­ºæ­½æ­¾æ­¿æ®æ®æ®"],["9a80","æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®",4,"æ®¢",7,"æ®«",7,"æ®¶æ®¸",6,"æ¯æ¯æ¯æ¯",4,"æ¯æ¯æ¯æ¯æ¯æ¯æ¯",4,"æ¯¢",7,"æ¯¬æ¯­æ¯®æ¯°æ¯±æ¯²æ¯´æ¯¶æ¯·æ¯¸æ¯ºæ¯»æ¯¼æ¯¾",6,"æ°",4,"æ°æ°æ°æ°æ°æ°æ° æ°£æ°¥æ°«æ°¬æ°­æ°±æ°³æ°¶æ°·æ°¹æ°ºæ°»æ°¼æ°¾æ°¿æ±æ±æ±æ±æ±",4,"æ±æ±æ±æ±æ±"],["9b40","æ±æ±æ±¢æ±£æ±¥æ±¦æ±§æ±«",4,"æ±±æ±³æ±µæ±·æ±¸æ±ºæ±»æ±¼æ±¿æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ² æ²¢æ²¨æ²¬æ²¯æ²°æ²´æ²µæ²¶æ²·æ²ºæ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["9b80","æ³æ³æ³æ³æ³æ³¤æ³¦æ³§æ³©æ³¬æ³­æ³²æ³´æ³¹æ³¿æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´",5,"æ´¦æ´¨æ´©æ´¬æ´­æ´¯æ´°æ´´æ´¶æ´·æ´¸æ´ºæ´¿æµæµæµæµæµæµæµæµæµæµæµæµæµæµ¡æµ¢æµ¤æµ¥æµ§æµ¨æµ«æµ¬æµ­æµ°æµ±æµ²æµ³æµµæµ¶æµ¹æµºæµ»æµ½",4,"æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶",4,"æ¶æ¶¢æ¶¥æ¶¬æ¶­æ¶°æ¶±æ¶³æ¶´æ¶¶æ¶·æ¶¹",5,"æ·æ·æ·æ·æ·æ·"],["9c40","æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·¢æ·£æ·¥æ·§æ·¨æ·©æ·ªæ·­æ·¯æ·°æ·²æ·´æ·µæ·¶æ·¸æ·ºæ·½",7,"æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸¢æ¸¦æ¸§æ¸¨æ¸ªæ¸¬æ¸®æ¸°æ¸±æ¸³æ¸µ"],["9c80","æ¸¶æ¸·æ¸¹æ¸»",7,"æ¹",7,"æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹ ",10,"æ¹¬æ¹­æ¹¯",14,"æºæºæºæºæºæºæº",4,"æº",6,"æºæºæºæºæºæº æº¡æº£æº¤æº¦æº¨æº©æº«æº¬æº­æº®æº°æº³æºµæº¸æº¹æº¼æº¾æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»£æ»§æ»ª",5],["9d40","æ»°æ»±æ»²æ»³æ»µæ»¶æ»·æ»¸æ»º",7,"æ¼æ¼æ¼æ¼æ¼æ¼",4,"æ¼æ¼æ¼æ¼",9,"æ¼¡æ¼¢æ¼£æ¼¥æ¼¦æ¼§æ¼¨æ¼¬æ¼®æ¼°æ¼²æ¼´æ¼µæ¼·",6,"æ¼¿æ½æ½æ½"],["9d80","æ½æ½æ½æ½æ½æ½æ½æ½",9,"æ½æ½æ½æ½æ½æ½ æ½¡æ½£æ½¤æ½¥æ½§",5,"æ½¯æ½°æ½±æ½³æ½µæ½¶æ½·æ½¹æ½»æ½½",6,"æ¾æ¾æ¾æ¾æ¾æ¾",12,"æ¾æ¾æ¾æ¾ æ¾¢",4,"æ¾¨",10,"æ¾´æ¾µæ¾·æ¾¸æ¾º",5,"æ¿æ¿",5,"æ¿",6,"æ¿",10,"æ¿æ¿¢æ¿£æ¿¤æ¿¥"],["9e40","æ¿¦",7,"æ¿°",32,"ç",7,"ç",6,"ç¤",6],["9e80","ç«",9,"ç¶ç·ç¸çº",17,"ççç",13,"ç",11,"ç®ç±ç²ç³ç´ç·ç¹çºç»ç½ççççççççççççççççççç",12,"ç°ç²ç´çµç¶çºç¾ç¿çççççç",12,"ç"],["9f40","çççç ç¡ç¢ç£ç¥çªç®ç°",6,"ç¸çºç»ç¼ç¾",10,"ç",4,"ççççç",10,"ç§",7,"ç²ç³ç´"],["9f80","çµç·",13,"ççççççç",12,"çç",4,"ç¥ç©",4,"ç¯ç°ç±ç´çµç¶ç·ç¹ç»ç¼ç¾",5,"ç",4,"çççççççççççç",4,"ç¡",6,"ç©çªç«ç­",5,"ç´ç¶ç·ç¸çº",8,"ç",9,"ç",4],["a040","ç",9,"ç¡ç¢ç£ç¤ç¦ç¨",5,"ç¯",9,"çº",11,"ç",19],["a080","ççç",9,"ç©ç«ç­ç®ç¯ç²ç³ç´çºç¼ç¾ç",6,"çççççççççççççççç ç£ç¤ç¥ç¨çªç«ç¬ç­ç°ç±ç³ç´ç¶ç·ç¸ç»ç¼ç½ççç",4,"ççççç",11,"ç ",11,"ç®ç±ç²ç³çµçº",6,"çççççççççççççççç"],["a1a1","ãããÂ·ËËÂ¨ããâï½ââ¦ââââããã",7,"ããããÂ±ÃÃ·â¶â§â¨âââªâ©ââ·ââ¥â¥â âââ«â®â¡âââ½ââ â®â¯â¤â¥ââµâ´ââÂ°â²â³âï¼Â¤ï¿ ï¿¡â°Â§âââââââââ¡â â³â²â»ââââã"],["a2a1","â°",9],["a2b1","â",19,"â´",19,"â ",9],["a2e5","ã ",9],["a2f1","â ",11],["a3a1","ï¼ï¼ï¼ï¿¥ï¼",88,"ï¿£"],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a6e0","ï¸µï¸¶ï¸¹ï¸ºï¸¿ï¹ï¸½ï¸¾ï¹ï¹ï¹ï¹"],["a6ee","ï¸»ï¸¼ï¸·ï¸¸ï¸±"],["a6f4","ï¸³ï¸´"],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a840","ËËËâââ¥âµâââââââââ£ââ¦â§â¿â",35,"â",6],["a880","â",7,"ââââ¼â½â¢â£â¤â¥ââããã"],["a8a1","ÄÃ¡ÇÃ ÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇÇÃ¼ÃªÉ"],["a8bd","ÅÅ"],["a8c0","É¡"],["a8c5","ã",36],["a940","ã¡",8,"ã£ãããããã¡ãããããï¸°ï¿¢ï¿¤"],["a959","â¡ã±"],["a95c","â"],["a960","ã¼ããã½ã¾ãããï¹",9,"ï¹ï¹ï¹ï¹ï¹",8],["a980","ï¹¢",4,"ï¹¨ï¹©ï¹ªï¹«"],["a996","ã"],["a9a4","â",75],["aa40","çççç¢",5,"çªç«çµç¶ç¹ç½ç¾ç¿ççç",5,"ççççççççççççç ç£ç¤ç¦ç§ç¨ç­ç¯ç°ç²ç³çµç¶çºç»ç¼ç½ç",8],["aa80","çççççççççççç",7,"ç¡",10,"ç®ç°ç±"],["ab40","ç²",11,"ç¿",4,"çççççççççççççççççççç ç¡ç£",5,"çªç¬ç­ç±ç´çµç¶ç¸ç¹ç¼ç½ç¾ç¿çç",4],["ab80","çççç",6,"çççççç¡ç¢ç£ç¤ç¦ç¨çªç«ç¬ç®ç¯ç°ç±ç³",4],["ac40","ç¸",10,"çççççççç",8,"ç",5,"ç£ç¤ç§ç©ç«ç­ç¯ç±ç²ç·",4,"ç½ç¾ç¿çç",11],["ac80","ç",6,"çççç ",12,"ç®ç¯ç±",4,"ç¸ç¹çº"],["ad40","ç»ç¼ç½ç¿ççççççççççç",10,"çç",7,"çª",15,"ç»",12],["ad80","ç",9,"ç",8,"ççç¡ç¥ç§",6,"ç°ç±ç²"],["ae40","ç³çµç¸",6,"ççççç",7,"ççççççççççç ",4,"ç¦ç§çªç®ç´ç¶ç¹ç¼ç½ç¿ççççççççççççççççç"],["ae80","ç",7,"ç§ç¨ç©ç«",6,"ç³çµç¶ç·çº",4,"çççççç"],["af40","çççççççççççççç¢ç¦",4,"ç­ç¶ç·çºç»ç¿ççççççççççççççççç ç¡ç¥ç©ç¬ç­ç®ç¯ç²ç³çµç¶ç·ç¸çºç»ç½ç¾çççç"],["af80","çççççççççççççççç¡ç£ç§ç¨ç¬ç®ç¯ç±ç²ç¶ç·ç¹çºç»ç½ççç"],["b040","ç",6,"ç",5,"çç",4,"ççç ç¡ç¢ç¤",6,"ç¬ç­ç®ç°",7,"ç¹çºç¼ç¿ççççççççççççççççç"],["b080","ç",7,"ç¥",8,"ç¯ç°ç³çµ",9,"çççåé¿åæ¨åååççè¼ç®è¾ç¢ç±ééæ°¨å®ä¿ºææå²¸èºæ¡è®æçå¹æç¬ç¿±è¢å²å¥¥ææ¾³è­ææå­å§ç¬å«ç¤å·´æè·é¶æèåé¸ç½¢ç¸ç½æç¾æä½°è´¥æç¨æç­æ¬æ³è¬é¢æ¿çæ®æä¼´ç£ååç»é¦å¸®æ¢æ¦èç»æ£ç£èéåè°¤èèåè¤å¥"],["b140","ççççççççççççç ",4,"ç¦",7,"ç°ç³çµç¶ç·çºç»ç½ç¿çççççççç",10,"ççççç¡ç£ç¤ç¥ç§çªç«"],["b180","ç¬ç®ç°",4,"ç¹ç»ç½ç¾ç¿ççççç",7,"ç",7,"çèé¹ä¿å ¡é¥±å®æ±æ¥æ´è±¹é²çæ¯ç¢æ²ååè¾èè´é¡åçå¤æ«çè¢«å¥è¯æ¬ç¬¨å´©ç»·ç­æ³µè¹¦è¿¸é¼é¼»æ¯éç¬å½¼ç¢§èè½æ¯æ¯æ¯å¸åºç¹é­æå¼å¿è¾å£èé¿éé­è¾¹ç¼è´¬æä¾¿ååè¾¨è¾©è¾«éæ å½ªèè¡¨é³æå«çªå½¬ææ¿æ»¨å®¾æåµå°æä¸ç§é¥¼ç³"],["b240","çççç ç¤ç§ç©çªç­",11,"çºç»ç¼çççç",5,"ççç",11,"ç¡ç£ç¤ç¦ç¨ç«ç­ç®ç¯ç±ç²ç´ç¶",4],["b280","ç¼ç¾ç",12,"ç",8,"çççç",4,"ç¤çå¹¶ç»è æ­æ¨éµæ³¢ååæéç®ä¼¯å¸è¶èèæ¸¤æ³é©³æååºè¡¥å ä¸å¸æ­¥ç°¿é¨ææ¦çè£ææè´¢ç¬è¸©éå½©èè¡é¤åèæ®æ­æ¨ç¿èè±ä»æ²§èæç³æ§½æ¹èåç­ä¾§åæµå±è¹­æåè¬è¶æ¥ç¢´æ½å¯å²å·®è¯§ææ´è±ºææºèé¦è°ç¼ é²äº§éé¢¤æç"],["b340","ç¦ç¨çªç¯ç°ç±ç²ç´çµç·ç¹çºç»ç¼ç ",5,"ç ç ç ç ç ç ç ç ç ç ç  ç ¡ç ¢ç ¤ç ¨ç ªç «ç ®ç ¯ç ±ç ²ç ³ç µç ¶ç ½ç ¿ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡"],["b380","ç¡ç¡ç¡",11,"ç¡¯",7,"ç¡¸ç¡¹ç¡ºç¡»ç¡½",6,"åºå°å¸¸é¿å¿è åæçå±å¡è¶æéæå²æ½®å·¢åµçè½¦æ¯æ¤æ£å½»æ¾é´è£è¾°å°æ¨å¿±æ²éè¶è¡¬æç§°åæ©æåä¹ç¨æ©æ¾è¯æ¿ééªç§¤åç´æåæ± è¿å¼é©°è»é½¿ä¾å°ºèµ¤ç¿æ¥ç½åå²è«å´å® æ½é¬ç´è¸ç¨ æç­¹ä»ç»¸çä¸è­ååºæ©±å¨èºééæ»é¤æ¥"],["b440","ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ ç¢¢ç¢¤ç¢¦ç¢¨",7,"ç¢µç¢¶ç¢·ç¢¸ç¢ºç¢»ç¢¼ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£",9],["b480","ç£¤ç£¥ç£¦ç£§ç£©ç£ªç£«ç£­",4,"ç£³ç£µç£¶ç£¸ç£¹ç£»",5,"ç¤ç¤ç¤ç¤",6,"ç¡å¨çæè§¦å¤æ£å·ç©¿æ¤½ä¼ è¹åä¸²ç®çªå¹¢åºé¯åå¹çæ¶é¤åæ¥æ¤¿éåæ·³çº¯è ¢æ³ç»°çµè¨ç£éè¾æç·è¯æ­¤åºèµæ¬¡èªè±å±åä»ä¸åç²éç°ä¿è¹¿ç¯¡çªæ§å´å¬èçç²¹æ·¬ç¿ æå­å¯¸ç£æ®ææªæ«éæ­è¾¾ç­ç©æå¤§åæ­¹å£æ´å¸¦æ®ä»£è´·è¢å¾é®"],["b540","ç¤",5,"ç¤",9,"ç¤",4,"ç¤¥",14,"ç¤µ",4,"ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥",8,"ç¥ç¥ç¥ç¥ç¥¡ç¥£"],["b580","ç¥¤ç¥¦ç¥©ç¥ªç¥«ç¥¬ç¥®ç¥°",6,"ç¥¹ç¥»",4,"ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦æ è½æä¸¹åé¸æ¸èæ¦æ°®ä½æ®æ·¡è¯å¼¹èå½æ¡åè¡æ¡£åæ£è¹åå²ç¥·å¯¼å°ç¨»æ¼éçå¾·å¾çè¹¬ç¯ç»ç­çªå³éå ¤ä½æ»´è¿ªæç¬çæ¶¤ç¿å«¡æµåºå°èç¬¬å¸å¼éç¼é¢ ææ»ç¢ç¹å¸éå«çµä½ç¸åºæ¦å¥ æ·æ®¿ç¢å¼éååæåéè°è·ç¹ç¢è¶è¿­è°å "],["b640","ç¦",6,"ç¦",11,"ç¦¨",10,"ç¦´",4,"ç¦¼ç¦¿ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§",5,"ç§ ç§¡ç§¢ç§¥ç§¨ç§ª"],["b680","ç§¬ç§®ç§±",6,"ç§¹ç§ºç§¼ç§¾ç§¿ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨",4,"ç¨ç¨ç¨ç¨ç¨ç¨ä¸ç¯å®éé¡¶é¼é­å®è®¢ä¸¢ä¸å¬è£æå¨æ ä¾æ«å»æ´åææé¡è±éçé½ç£æ¯çç¬è¯»å µç¹èµæéèåº¦æ¸¡å¦ç«¯ç­é»æ®µæ­ç¼å åéå¯¹å¢©å¨è¹²æ¦é¡¿å¤éç¾éæåå¤å¤ºåèº²æµè·ºèµåæ°å è¾å³¨é¹ä¿é¢è®¹å¨¥æ¶åæ¼ééé¥¿æ©èå¿è³å°é¥µæ´±äº"],["b740","ç¨ç¨ç¨¡ç¨¢ç¨¤",14,"ç¨´ç¨µç¨¶ç¨¸ç¨ºç¨¾ç©",5,"ç©",9,"ç©",4,"ç©",16],["b780","ç©©",6,"ç©±ç©²ç©³ç©µç©»ç©¼ç©½ç©¾çªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçª¡çª¢è´°åç½ç­ä¼ä¹éæ³çè©å¸çªç¿»æ¨ç¾éç¹å¡ç¦åè¿èè´©ç¯é¥­æ³åè³æ¹èªæ¿é²å¦¨ä»¿è®¿çººæ¾è²éå¡é£è¥åªè¯½å èºåºæ²¸è´¹è¬éå©æ°åçº·åçæ±¾ç²å¥ä»½å¿¿æ¤ç²ªä¸°å°æ«èå³°éé£ç¯ç½é¢å¯ç¼è®½å¥å¤ä½å¦å¤«æ·è¤å­µæ¶æè¾å¹æ°ç¬¦ä¼ä¿æ"],["b840","çª£çª¤çª§çª©çªªçª«çª®",4,"çª´",10,"ç«",10,"ç«",9,"ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¤ç«§",5,"ç«®ç«°ç«±ç«²ç«³"],["b880","ç«´",4,"ç«»ç«¼ç«¾ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬¡ç¬¢ç¬£ç¬§ç¬©ç¬­æµ®æ¶ªç¦è¢±å¼ç«æè¾ä¿¯éæ§è¯èåºèèµ´å¯è¦èµå¤åä»éç¶è¹è´å¯è®£éå¦ç¼åå¶åè¯¥æ¹æ¦éçæºå¹²çææç«¿èèµ¶æç§æ¢èµ£ååé¢ç¼¸èçº²å²æ¸¯æ ç¯çé«èç¾ç³æéç¨¿åå¥æ­ææé¸½è³çå²é©èæ ¼è¤ééé¬ä¸ªåç»æ ¹è·èæ´åºç¾¹"],["b940","ç¬¯ç¬°ç¬²ç¬´ç¬µç¬¶ç¬·ç¬¹ç¬»ç¬½ç¬¿",5,"ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­¡ç­£",10,"ç­¯ç­°ç­³ç­´ç­¶ç­¸ç­ºç­¼ç­½ç­¿ç®ç®ç®ç®ç®",6,"ç®ç®"],["b980","ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®£ç®¤ç®¥ç®®ç®¯ç®°ç®²ç®³ç®µç®¶ç®·ç®¹",7,"ç¯ç¯ç¯åè¿æ¢å·¥æ»åæ­é¾ä¾èº¬å¬å®«å¼å·©æ±æ±è´¡å±é©å¾æ²èçå¢æè´­å¤è¾èåç®ä¼°æ²½å­¤å§é¼å¤èéª¨è°·è¡æé¡¾åºéå®çåå¯¡æè¤ä¹ææªæ£ºå³å®å è§ç®¡é¦ç½æ¯çè´¯åå¹¿éç°è§å­ç¡å½é¾éºè½¨é¬¼è¯¡ç¸æ¡æè·ªè´µå½è¾æ»æ£éé­å½æè£¹è¿å"],["ba40","ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯",4,"ç¯ç¯ç¯ç¯ç¯ ç¯¢ç¯£ç¯¤ç¯§ç¯¨ç¯©ç¯«ç¯¬ç¯­ç¯¯ç¯°ç¯²",4,"ç¯¸ç¯¹ç¯ºç¯»ç¯½ç¯¿",7,"ç°ç°ç°ç°ç°ç°",5,"ç°ç°ç°"],["ba80","ç°",4,"ç° ",5,"ç°¨ç°©ç°«",12,"ç°¹",5,"ç±éª¸å­©æµ·æ°¦äº¥å®³éªé£æ¨é¯é©å«æ¶µå¯å½åç½ç¿°æ¼ææ±æ¾æçæ±æ±å¤¯æ­èªå£åè±ªæ¯«éå¥½èå·æµ©åµåè·èæ ¸ç¦¾åä½åçè²éæ²³æ¶¸èµ«è¤é¹¤è´ºå¿é»çå¾ç æ¨å¼äº¨æ¨ªè¡¡æè½°åçè¹é¸¿æ´ªå®å¼çº¢åä¾¯ç´å¼åååå¼ä¹å¿½çå£¶è«è¡è´çç³æ¹"],["bb40","ç±",9,"ç±",36,"ç±µ",5,"ç±¾",9],["bb80","ç²ç²",6,"ç²ç²ç²ç²ç²ç²ç² ç²¡ç²£ç²¦ç²§ç²¨ç²©ç²«ç²¬ç²­ç²¯ç²°ç²´",4,"ç²ºç²»å¼§èå¬æ¤äºæ²ªæ·è±ååç¾æ»ç»ååè¯æ§å¾ææ·®åæ¬¢ç¯æ¡è¿ç¼æ¢æ£å¤çªè±¢çæ¶£å®¦å¹»èæé»ç£ºèç°§çå°æ¶çæå¹æè°ç°æ¥è¾å¾½æ¢èåæ¯ææ§åæ æ¦è´¿ç§½ä¼ç©æ±è®³è¯²ç»è¤æå©é­æµæ··è±æ´»ä¼ç«è·ææéè´§ç¥¸å»å¾åºæºç¸ç¨½ç§¯ç®"],["bc40","ç²¿ç³ç³ç³ç³ç³ç³ç³ç³",6,"ç³ç³ç³ç³ç³ç³¡",6,"ç³©",5,"ç³°",7,"ç³¹ç³ºç³¼",13,"ç´",5],["bc80","ç´",14,"ç´¡ç´£ç´¤ç´¥ç´¦ç´¨ç´©ç´ªç´¬ç´­ç´®ç´°",6,"èé¥¥è¿¹æ¿è®¥é¸¡å§¬ç»©ç¼åææ£è¾ç±éåæ¥ç¾æ±²å³å«çº§æ¤å èå·±èæåå­£ä¼ç¥­åæ¸æµå¯å¯è®¡è®°æ¢å¿éå¦ç»§çºªåæ·å¤¹ä½³å®¶å èé¢è´¾ç²é¾åç¨¼ä»·æ¶é©¾å«æ­¼çåå°ç¬ºé´çå¼è©è°å¥¸ç¼è§æ£æ¬ç¢±ç¡·æ£æ¡ç®ä¿­åªåèæ§é´è·µè´±è§é®ç®­ä»¶"],["bd40","ç´·",54,"çµ¯",7],["bd80","çµ¸",32,"å¥è°åé¥¯æ¸æºæ¶§å»ºåµå§å°æµæ±çèæ¡¨å¥è®²å é±éèæ¤ç¤ç¦è¶äº¤éæµéªå¨å¼æé°ç«ä¾¥èç¡è§é¥ºç¼´ç»å¿æéµè½¿è¾å«çªæ­æ¥çç§¸è¡é¶æªå«èæ¡æ°æ·ç«ç«­æ´ç»è§£å§æèè¥çåä»ç¥è¯«å±å·¾ç­æ¤éä»æ´¥è¥ç´§é¦ä»è°¨è¿é³æç¦è¿ç¬æµ¸"],["be40","ç¶",12,"ç¶§",6,"ç¶¯",42],["be80","ç·",32,"å°½å²èå¢èçæ¶é²¸äº¬æç²¾ç²³ç»äºè­¦æ¯é¢éå¢æ¬éå¾çéç«ç«åç¯çªæªç©¶çº çé­ä¹ç¸ä¹éå©ææ§è¼èåå°±çé æçç½å±é©¹èå±åç©ä¸¾æ²®èææ®å·¨å·è·è¸é¯ä¿±å¥æ§ç¬å§æé¹å¨å¦ç·å·ç»¢ææ«ææåçµè§å³è¯ç»åèé§ååå³»"],["bf40","ç·»",62],["bf80","ç¸ºç¸¼",4,"ç¹",4,"ç¹",21,"ä¿ç«£æµé¡éªååå¡å¯å¼æ©æ¥·å¯æ¨åå ªååç çåº·æ·ç³ ææäº¢çèæ·ç¤é å·èæ¯æ£µç£é¢ç§å£³å³å¯æ¸´åå»å®¢è¯¾è¯åå¦æ³åå­ç©ºæå­æ§æ å£æ£å¯æ¯å­çªè¦é·åºè£¤å¤¸å®æè·¨è¯åç­·ä¾©å¿«å®½æ¬¾å¡ç­çæ¡ç¿ç¶æ·åµäºçå²¿çª¥èµå¥é­å"],["c040","ç¹",35,"çº",23,"çºçºçº"],["c080","çº®çº´çº»çº¼ç»ç»¤ç»¬ç»¹ç¼ç¼ç¼ç¼·ç¼¹ç¼»",6,"ç½ç½",9,"ç½ç½é¦æ§æºå¤ææå°æ¬æ©å»éåæåè¡èè¾£å¦è±æ¥èµèå©ªæ æ¦ç¯®éå°æ¾è°°æ½è§æç¼çæ»¥çæ¦ç¼å»éææµªæå³ç¢èä½¬å§¥éªçæ¶åä¹é·é­è¾ç£ç´¯å¡åæèç±»æ³ªæ£±æ¥å·åæ¢¨çé»ç¯±ç¸ç¦»æ¼çæéé²¤ç¤¼èèåæ ä¸½åå±ç ¾åå©åä¾ä¿"],["c140","ç½ç½ç½ç½ç½ç½ç½ ç½£",4,"ç½«ç½¬ç½­ç½¯ç½°ç½³ç½µç½¶ç½·ç½¸ç½ºç½»ç½¼ç½½ç½¿ç¾ç¾",7,"ç¾ç¾ç¾",4,"ç¾",4,"ç¾ç¾ç¾ ç¾¢ç¾£ç¾¥ç¾¦ç¾¨",6,"ç¾±"],["c180","ç¾³",4,"ç¾ºç¾»ç¾¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿",4,"ç¿ç¿ç¿",5,"ç¿¢ç¿£ç¢ç«ç²æ²¥é¶åçå©ä¿©èè²è¿é°å»ææ¶å¸æè¸é¾æç¼ç»ç²®åæ¢ç²±è¯ä¸¤è¾éæ¾äº®è°æ©èåççå¯¥è¾½æ½¦äºæé£å»æåè£çå£çç³æç£·éä¸´é»é³æ·åèµåæç²è±é¶é¾éä¼¶ç¾åçµéµå²­é¢å¦ä»¤æºçæ¦´ç¡«é¦çåç¤æµæ³å­é¾èåç¬¼çª¿"],["c240","ç¿¤ç¿§ç¿¨ç¿ªç¿«ç¿¬ç¿­ç¿¯ç¿²ç¿´",6,"ç¿½ç¿¾ç¿¿èèèèèèèèèèèèèèè¡è£è¤è«",5,"è²è´è¹èºè¼è¾èèèèèèèèèèèèèèè"],["c280","èè",13,"è«",5,"è²",11,"éåæ¢éæ¥¼å¨æç¯æ¼éè¦å¢é¢åºçæ³å¤èé²éºç¢é²è·¯èµé¹¿æ½ç¦å½éæ®é©´åéä¾£æå±¥å±¡ç¼èæ°¯å¾çæ»¤ç»¿å³¦æå­ªæ»¦åµä¹±æ ç¥æ¡è½®ä¼¦ä»æ²¦çº¶è®ºèèºç½é»é£ç®©éª¡è£¸è½æ´éªç»å¦éº»çç èé©¬éªåååä¹°éº¦åè¿èçé¦è®æ»¡èæ¼æ¢æ¼«"],["c340","è¾èèèèèè",5,"èèèèèè£è¦è§è¨è¬è°è³èµè¶è¸è¹è»èè",4,"è",6,"èèè è¢è£è¦è®èµè·è¹è»è¾è¿èèèèèèèè"],["c380","èèèèèèèè",12,"è­è®è°è³è´èµè·è¹",4,"è¿è°©èè«ç²æ°å¿è½ç«èéæ¯çéå¯èåå¸½è²è´¸ä¹ç«ææ¢é¶éç¤æ²¡çåªéæ¯ç¾æ§å¯å¦¹åªé¨é·ä»¬èèæª¬çé°çæ¢¦å­ç¯éé¡ç³è¿·è°å¼¥ç±³ç§è§æ³èå¯å¹æ£ç ç»µåååå¨©ç¼é¢èæçèç§æ¸ºåºå¦èç­æ°æ¿ç¿ææ¯é½æèé¸£é­åå½è°¬æ¸"],["c440","è",5,"èèèèèèèèèè",4,"è¡è¢è£è¤è¦è¨èªè«è¬è¯è²è³èµè¶è·è¸èè",4,"èèèèèèè",5,"èèè",4,"è¤è¥"],["c480","è§è©è«",7,"è´",5,"è¼è½è¾è¿èèèèèèè",6,"æ¹èæ¨¡èç£¨æ©é­æ¹æ«è«å¢¨é»æ²«æ¼ å¯éè°çææç¡äº©å§æ¯å¢æ®å¹åææ¨ç®ç¦ç§ç©æ¿åªåé é£å¨çº³æ°ä¹å¥¶èå¥åç·é¾åæ èæ¼é¹æ·å¢é¦åå«©è½å¦®éåªæ³¥å°¼æä½ å¿è»éæººè«æå¹´ç¢¾æµæ»å¿µå¨é¿é¸å°¿æèå­½å®ééæ¶æ¨æ çåå®"],["c540","è",14,"è¤è¥è¦è¨è©è«è®",4,"èµ",5,"è½è¿èè",4,"èèèèè",5,"èè è¤è¥è¦è§è©è®è²èºè¼è½è¿"],["c580","èèèèèèèèèèèè",7,"èèèèèè ",7,"è©æ§æ³çæ­é®çº½èæµåå¼å¥´åªæå¥³æèçæªæ¦ç³¯è¯ºå¦æ¬§é¸¥æ®´èåå¶æ²¤åªè¶´ç¬å¸æç¶ææçå¾æ¹æ´¾ææ½çç£ç¼çå¤åä¹åºæèªèæåå¨ç®è¢è·æ³¡å¸èå¹è£´èµéªéä½©æ²å·çç °æ¨ç¹æ¾å½­è¬æ£ç¡¼ç¯·è¨æé¹æ§ç¢°å¯ç é¹æ¹æ«åçµæ¯"],["c640","èªè«è¬è­è±èµè¶è·è¸è»è¼èèèèèèèèèèèèèèèèè è¢è£è§è²èµè¶èºè»è¼è¿èèèèèèèèèèèè¢è§è¨è©èªè¬è­è®è°è²è³èµè¶è¸"],["c680","èºè¼",4,"èèèèèèèèèè",9,"è©èªè®è°è²è·è»è½å¤è¾ç²ç®å¹çå»å±è­¬ç¯åçéªé£æ¼ç¢ç¥¨æç¥æ¼é¢è´«åèä¹åªè¹èå¹³å­ç¶è¯å±å¡æ³¼é¢å©ç ´é­è¿«ç²åæéºä»èè¡è©è²åæ´åæ®æµ¦è°±æçææ¬ºæ æå¦»ä¸åæ¼ææ²å¶æ£å¥æ­§ç¦å´èé½æç¥ç¥éªèµ·å²ä¹ä¼å¯å¥ç å¨æ°è¿å¼æ±½æ³£è®«æ"],["c740","è¾è¿èèèèèè",4,"èè",4,"èè¢è°",6,"è¹èºè¾",6,"èèèèèèèèèèèèèèèèèè¡",6,"è¬è­è®"],["c780","è¯èµè»è¾è¿èèèèèèèèèèèèèèèèèèèè¢è£è¤è¦è§è¨è«è¬è­æ°æ´½çµæ¦ééåè¿ç­¾ä»è°¦ä¹¾é»é±é³åæ½é£æµè°´å åµæ¬ æ­æªåèç¾å¢è·å¼ºæ¢æ©é¹æ²ææ¡¥ç§ä¹ä¾¨å·§éæ¬ç¿å³­ä¿çªåèä¸æ¯çªé¦ä¾µäº²ç§¦ç´å¤è¹æç¦½å¯æ²éè½»æ°¢å¾å¿æ¸ææ´æ°°æé¡·è¯·åºç¼ç©·ç§ä¸é±çæ±åéæ³è¶åºèæ²èº¯å±é©±æ¸ "],["c840","è®è¯è³",4,"èºè»è¼è¾è¿èèèèèèèèè",5,"èèèè",5,"è©",7,"è²",5,"è¹èºè»è¾",7,"èèè"],["c880","è",6,"è",4,"èèèèè è¢è¤",4,"èªè®è¯è°è²è´è·è¹è»è¼åå¨¶é¾è¶£å»åé¢§æéæ³å¨çæ³ç¬å¸åç¼ºçç¸å´é¹æ¦·ç¡®éè£ç¾¤ç¶çåæç¤å£¤æå·è®©é¥¶æ°ç»æ¹ç­å£¬ä»äººå¿é§ä»»è®¤åå¦çº«æä»æ¥æè¸èè£èçæº¶å®¹ç»åææèè¹è åå­ºå¦è¾±ä¹³æ±å¥è¤¥è½¯é®èçéé°æ¶¦è¥å¼±ææ´è¨è®é³å¡èµä¸å"],["c940","è½",4,"èèèèèèè",7,"èèèèèèè è¢",12,"è°è±è³èµè¶è·è»è¼è¾èèèèèèèèèèèèèèè"],["c980","è",4,"èè¡è¢è¤è§",4,"è­è®è¯è±",10,"è½è¾èèèä¼æ£æ¡åä¸§æéªæ«å«çè²æ¶©æ£®å§èç æå¹æ²çº±å»å¥çç­æçè«æå±±å ç½è¡«éªéæèµ¡è³åæ±æç¼®å¢ä¼¤åèµæä¸å°è£³æ¢¢æç¨ç§èåºé¶å°å¨éµç»å¥¢èµèèèèµ¦æå°ææ¶ç¤¾è®¾ç ·ç³å»ä¼¸èº«æ·±å¨ ç»ç¥æ²å®¡å©¶çè¾ææ¸å£°çç¥ç²åç»³"],["ca40","è",8,"èèèèèèèèèèèèèèè è¢",8,"è­",9,"è¾",4,"èèèèè",10],["ca80","èèèèèèè",4,"è¥è¦è§è©",8,"è³èµè¶è·è¸è¼è½è¿èèççå©èå£å¸å¤±ç®æ½æ¹¿è¯å°¸è±åç³æ¾æ¶ä»é£èå®è¯å²ç¢ä½¿å±é©¶å§å¼ç¤ºå£«ä¸æ¿äºæ­èªéå¿æ¯åå¬éä»ä¾éé¥°æ°å¸æå®¤è§è¯æ¶æé¦å®å¯¿æå®åç¦å½è¬æ¢æ¢³æ®æè¾åèæ·çä¹¦èµå­°çè¯ææç½²èé»é¼ å±æ¯è¿°æ ææç«å¢åº¶æ°æ¼±"],["cb40","èèèè",6,"è",10,"è",6,"è¥è¦è§è©è«è¬è­è±",5,"è¸èº",6,"è",6,"è",4,"èè"],["cb80","èè",5,"è",6,"è¥è¦è§è¨èª",14,"æå·èæè¡°ç©å¸æ æ´éåç½è°æ°´ç¡ç¨å®ç¬é¡ºèè¯´ç¡æçæ¯æå¶æç§å¸ä¸æ­»èå¯ºå£åä¼ºä¼¼é¥²å·³æ¾è¸æé¢éå®è®¼è¯µæèæå½èé¥ä¿ç´ éç²å³å¡æº¯å®¿è¯èé¸èç®è½ééç»¥é«ç¢å²ç©éé§ç¥å­æç¬èæ¢­åç¼©çç´¢éæå¡ä»å®å¥¹å¡"],["cc40","è¹èºè¼è½è¾è",4,"è",10,"èèèèè",15,"è¨èª",13,"è¹èºè»è½è¾è¿è"],["cc80","è",11,"èèè",4,"èèèèè è¡è£",7,"ç­æè¹è¸èèæ¬å°æ³°éå¤ªææ±°åæè´ªç«æ»©åæªç°æ½­è°­è°å¦æ¯¯è¢ç¢³æ¢å¹ç­æ±¤å¡æªå æ£ èåç³åèººæ·è¶ç«ææ¶æ»ç»¦èæ¡éæ·é¶è®¨å¥ç¹è¤è¾ç¼èªæ¢¯åè¸¢éæé¢è¹å¼ä½æ¿åææ¶åå±å¤©æ·»å¡«ç°çæ¬èèææ¡è¿¢çºè·³è´´éå¸åå¬ç"],["cd40","è­è¯è°è²",6,"è",6,"è",4,"èè",5,"è",4,"è¥è¦è«è­è®è²è³è·è¸è¹è»",4,"èèèèèèèèèèèèèè"],["cd80","èè è¡è¢è£è¥è¦è§è¨èªè«è¬è¯èµè¶è·èºè»è¼è½è¿èèèèèèèèèèèèæ±å»·åäº­åº­æºèéæ¡é®ç³åéå½¤ç«¥æ¡¶æç­ç»çå·æå¤´éå¸ç§çªå¾å¾éæ¶å± åååæ¹å¢æ¨é¢è¿èè¤ªéåå±¯èææè±é¸µéé©®é©¼æ¤­å¦¥æå¾æåèæ´¼å¨ç¦è¢æ­ªå¤è±å¼¯æ¹¾ç©é¡½ä¸¸ç·å®ç¢æ½æçæå®å©ä¸èæ±ªçäº¡æç½å¾æºæå¿å¦å¨"],["ce40","èèèèè è¤è¦è§è¨èªè«è¬è­è¯è°è²è³èµè¶è¸è¹èºè¼è½è",6,"èèèèèèèèèèèè",5,"è¡è¢è¦",7,"è¯è±è²è³èµ"],["ce80","è·è¸è¹èºè¿èèèèèèèèè",4,"èèèè",6,"è ",4,"å·å¾®å±é¦è¿æ¡å´å¯æä¸ºæ½ç»´èèå§ä¼ä¼ªå°¾çº¬æªèå³çèåé­ä½æ¸­è°å°æ°å«çæ¸©èæé»çº¹å»ç¨³ç´é®å¡ç¿ç®æèæ¶¡çªææ¡å§æ¡æ²å·«åé¨ä¹æ±¡è¯¬å±æ èæ¢§å¾å´æ¯æ­¦äºæåèä¼ä¾®åæé¾æ¤ç©å¿å¡æè¯¯æçæè¥¿ç¡ç½æ°å»å¸é¡çº"],["cf40","è¥è¦è§è©èªè®è°è±è²è´è¶è·è¸è¹è»è¼è¾è¿è",4,"èèèè",4,"è",6,"èèèèè¡è¢è£è¤è¦è§è¨è©è«è¬è­è¯",9],["cf80","èºè»è¼è½è¿è è è è ",5,"è ",7,"è è è è è è ",4,"è £ç¨æ¯å¸æèå¤æçç¯æºªæ±çæªè¢­å¸­ä¹ åª³åé£æ´ç³»éæç»çè¾å£éè¾æå³¡ä¾ ç­ä¸å¦å¤åæé¨åä»é²çº¤å¸è´¤è¡è·é²æ¶å¼¦å«æ¾é©ç°ç®å¿èºé¦ç¾¡å®ªé·éçº¿ç¸å¢é¶é¦ç®±è¥æ¹ä¹¡ç¿ç¥¥è¯¦æ³åäº«é¡¹å··æ©¡ååè±¡è§ç¡éåå®å£éæ¶å®µæ·æ"],["d040","è ¤",13,"è ³",5,"è ºè »è ½è ¾è ¿è¡è¡è¡è¡",5,"è¡",5,"è¡è¡è¡è¡",6,"è¡¦è¡§è¡ªè¡­è¡¯è¡±è¡³è¡´è¡µè¡¶è¡¸è¡¹è¡º"],["d080","è¡»è¡¼è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢",4,"è¢",4,"è¢£è¢¥",5,"å°å­æ ¡èå¸ç¬ææ¥äºæ­èéåææºéªæèè°åæ¢°å¸è¹ææ³æ³»è°¢å±èªè¯éæ¬£è¾æ°å¿»å¿ä¿¡è¡æè¥ç©æºå´ååå½¢é¢è¡éå¹¸ææ§å§åå¶è¸åæ±¹éçä¼ä¿®ç¾æ½åéç§è¢ç»£å¢æéèåé¡»å¾è®¸èéåæ­åºçæ¤çµ®å©¿ç»ªç»­è½©å§å®£æ¬æç"],["d140","è¢¬è¢®è¢¯è¢°è¢²",4,"è¢¸è¢¹è¢ºè¢»è¢½è¢¾è¢¿è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£",4,"è£ è£¡è£¦è£§è£©",6,"è£²è£µè£¶è£·è£ºè£»è£½è£¿è¤è¤è¤",5],["d180","è¤è¤",4,"è¤è¤",4,"è¤",4,"è¤¢è¤£è¤¤è¤¦è¤§è¤¨è¤©è¤¬è¤­è¤®è¤¯è¤±è¤²è¤³è¤µè¤·éç£ç©ç»é´èå­¦ç©´éªè¡åçå¾ªæ¬è¯¢å¯»é©¯å·¡æ®æ±è®­è®¯éè¿åæ¼é¸¦é¸­åä¸«è½çèå´è¡æ¶¯éåäºè®¶çå½éçæ·¹çä¸¥ç èå²©å»¶è¨é¢éçæ²¿å¥æ©ç¼è¡æ¼è³å °çåç éåå½¦ç°å®´è°éªæ®å¤®é¸¯ç§§æ¨æ¬ä½¯ç¡ç¾æ´é³æ°§ä»°çå»æ ·æ¼¾éè°å¦ç¶"],["d240","è¤¸",8,"è¥è¥è¥",24,"è¥ ",5,"è¥§",19,"è¥¼"],["d280","è¥½è¥¾è¦è¦è¦è¦è¦",26,"æå°§é¥çªè°£å§å¬èè¯è¦èæ¤°åè¶ç·éå¶ä¹é¡µæä¸å¶æ³èå¤æ¶²ä¸å£¹å»æé±ä¾ä¼è¡£é¢å¤·éç§»ä»ªè°çæ²å®å§¨å½æ¤èåå·²ä¹ç£ä»¥èºææéå±¹äº¿å½¹èé¸èç«äº¦è£ææ¯å¿ä¹çæº¢è¯£è®®è°è¯å¼ç¿¼ç¿ç»èµè«å æ®·é³é´å§»åé¶æ·«å¯é¥®å°¹å¼é"],["d340","è¦¢",30,"è§è§è§è§è§è§è§è§è§è§è§è§ è§¡è§¢è§¤è§§è§¨è§©è§ªè§¬è§­è§®è§°è§±è§²è§´",6],["d380","è§»",4,"è¨",5,"è¨",21,"å°è±æ¨±å©´é¹°åºç¼¨è¹è¤è¥è§èè¿èµ¢çå½±é¢ç¡¬æ åæ¥ä½£èçåº¸éè¸è¹åæ³³æ¶æ°¸æ¿åç¨å¹½ä¼æ å¿§å°¤ç±é®éç¹æ²¹æ¸¸éæåå³ä½éè¯±åå¹¼è¿æ·¤äºçæ¦èæèä½ä¿é¾é±¼ææ¸æ¸éäºå¨±é¨ä¸å±¿ç¦¹å®è¯­ç¾½çåèéåéå»å³ªå¾¡ææ¬²ç±è²èª"],["d440","è¨",31,"è¨¿",8,"è©",21],["d480","è©",25,"è©º",6,"æµ´å¯è£é¢è±«é©­é¸³æ¸å¤åå£è¢åæ´è¾å­ååç¿æºç¼è¿èæ¿æ¨é¢æ°çº¦è¶è·é¥å²³ç²¤ææ¦éèäºé§åé¨åè¿è´éæéµå­åç ¸ææ ½åç¾å®°è½½åå¨å±ææèµèµèè¬é­ç³å¿è»æ£æ©æ¾¡è¤èºåªé çç¶ç¥è´£æ©åæ³½è´¼æå¢ææ¾èµ æå³æ¸£æ­è½§"],["d540","èª",7,"èª",7,"èª",46],["d580","è«",32,"é¡é¸ç¨æ æ¦¨åä¹ç¸è¯ææå®çªåºå¯¨ç»æ¯¡è©¹ç²æ²¾çæ©è¾å´­å±è¸æ å æç«æ¹ç»½æ¨ç« å½°æ¼³å¼ ææ¶¨æä¸å¸è´¦ä»èç´éææ­æ¾æ²¼èµµç§ç½©åèå¬é®æå²è°è¾èéèè¿æµçæççç §è»è´éä¾¦æç¹è¯éæ¯ééµè¸æ£çå¾ç°äºææ´æ¯æ­£æ¿"],["d640","è«¤",34,"è¬",27],["d680","è¬¤è¬¥è¬§",30,"å¸§çéè¯èææ¯å±èç¥è¢èæ±ä¹ç»èç´æ¤æ®æ§å¼ä¾åææ­¢è¶¾åªæ¨çº¸å¿ææ·è³è´ç½®å¸å³å¶æºç§©ç¨è´¨ççæ»æ²»çªä¸­çå¿ éè¡·ç»ç§è¿éä»²ä¼èå¨å·æ´²è¯ç²¥è½´èå¸åç±å®æ¼éª¤ç æ ªèæ±çªè¯¸è¯éç«¹çç®æç©å±ä¸»èæ±å©èè´®é¸ç­"],["d740","è­",31,"è­§",4,"è­­",25],["d780","è®",24,"è®¬è®±è®»è¯è¯è¯ªè°è°ä½æ³¨ç¥é©»æçªæ½ä¸ç è½¬æ°èµç¯æ¡©åºè£å¦æå£®ç¶æ¤é¥è¿½èµå ç¼è°åææåæ¡ç¢èéåçç¼æµå¹å¨èµå§¿æ»æ·å­ç´«ä»ç±½æ»å­èªæ¸å­é¬æ£è¸ªå®ç»¼æ»çºµé¹èµ°å¥æç§è¶³åæç¥è¯é»ç»é»çºå´éæç½ªå°éµæ¨å·¦ä½æåä½ååº§"],["d840","è°¸",8,"è±è±è±è±è±è±è±è±",7,"è±è±è±è±è±",5,"è±£",6,"è±¬",6,"è±´è±µè±¶è±·è±»",6,"è²è²è²è²"],["d880","è²è²è²",6,"è²è²è²è²",20,"äºä¸åä¸å»¿åä¸äºä¸é¬²å­¬å©ä¸¨ç¦ºä¸¿åä¹å¤­ç»å®æ°åè¤é¦æ¯ç¾é¼ä¸¶äºé¼ä¹ä¹©äºèå­å¬åä»ååå£å¥å®é¥èµååµå¦å®å¾èµå¦å£åååå­å³å¿åååå¡åè¯å½åååååç½äº»ä»ä»ä»ä»¨ä»¡ä»«ä»ä¼ä»³ä¼¢ä½¤ä»µä¼¥ä¼§ä¼ä¼«ä½ä½§æ¸ä½ä½"],["d940","è²®",62],["d980","è³­",32,"ä½ä½ä¼²ä¼½ä½¶ä½´ä¾ä¾ä¾ä¾ä½¾ä½»ä¾ªä½¼ä¾¬ä¾ä¿¦ä¿¨ä¿ªä¿ä¿ä¿£ä¿ä¿ä¿ä¿¸å©åä¿³å¬åå®å­ä¿¾ååå¥å¨å¾ååååå¬å»å¥å§å©åºååå­å¬å¦å®ååä»æ°½ä½ä½¥ä¿é¾ æ±ç±´å®å·½é»é¦åå¤å¹åè¨åå«å¤åäº åäº³è¡®è¢¤äºµèè£ç¦å¬´è ç¾¸å«å±å½å¼"],["da40","è´",14,"è´ èµèµèµèµèµ¥èµ¨èµ©èµªèµ¬èµ®èµ¯èµ±èµ²èµ¸",8,"è¶è¶è¶è¶è¶è¶è¶",4,"è¶è¶è¶",9,"è¶ è¶¡"],["da80","è¶¢è¶¤",12,"è¶²è¶¶è¶·è¶¹è¶»è¶½è·è·è·è·è·è·è·è·è·è·è·è·è·ååå¢å¥è® è®¦è®§è®ªè®´è®µè®·è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯ è¯¤è¯¨è¯©è¯®è¯°è¯³è¯¶è¯¹è¯¼è¯¿è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è° è°¡è°¥è°§è°ªè°«è°®è°¯è°²è°³è°µè°¶å©åºéé¢é¡é±éªé½é¼ééééé§é¬é²é´éééé°ééééé¬é¡é´é³é¶éº"],["db40","è·è·è·è·è· è·¡è·¢è·¥è·¦è·§è·©è·­è·®è·°è·±è·²è·´è·¶è·¼è·¾",6,"è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸",7,"è¸ è¸¡è¸¤",4,"è¸«è¸­è¸°è¸²è¸³è¸´è¸¶è¸·è¸¸è¸»è¸¼è¸¾"],["db80","è¸¿è¹è¹è¹è¹",4,"è¹",5,"è¹",11,"è¹§è¹¨è¹ªè¹«è¹®è¹±é¸é°ééé¾ééééé¦é¢éééé«é¯é¾éé¢éé£é±é¯é¹ééåå¥å¢å¬å­å¾å¿ååå°åç®çå»´åµå¼é¬¯å¶å¼çå·¯åå©å¡å¡¾å¢¼å£å£å©å¬åªå³å¹å®å¯åå»åå©åå«åå¼å»å¨å­å¶å³å­å¤åå²åå§å´åå åååååå¸å´å¯å¸å¤å"],["dc40","è¹³è¹µè¹·",4,"è¹½è¹¾èºèºèºèºèºèº",6,"èºèºèºèº",6,"èºèº",11,"èº­èº®èº°èº±èº³",6,"èº»",7],["dc80","è»",10,"è»",21,"å å å½å­å å å å¡å  å¡¥å¡¬å¢å¢å¢å¢é¦¨é¼æ¿è¹è½è¿èèè¨èèèèèè«è¸è¾è°èèè£èè·è®èèèè©è´è¡èªèèèè¤è¡èè·è¤èèèè´èèèè»èèèèèèè èèèèèèèè¼è´è±èèè¯èèèèèèè è­èºè³è¦è¥"],["dd40","è»¥",62],["dd80","è¼¤",32,"è¨èè©è¬èªè­è®è°è¸è³è´è èªèèèè¼è¶è©è½è¸è»èèè¨èºè¼èèè¥èå èèèè½èèè¸èèèèèèè¸è¹èªèèè¦è°è¡èèèèè³èèèºèè¸è¼èè©è¶èèè±è­èèèè¦è½èèè¿èºè è¡è¹è´èè¥è£èçè¸è°è¹èèº"],["de40","è½",32,"è½ªè¾è¾è¾è¾è¾ è¾¡è¾¢è¾¤è¾¥è¾¦è¾§è¾ªè¾¬è¾­è¾®è¾¯è¾²è¾³è¾´è¾µè¾·è¾¸è¾ºè¾»è¾¼è¾¿è¿è¿è¿"],["de80","è¿",4,"è¿è¿è¿è¿è¿è¿ è¿¡è¿£è¿§è¿¬è¿¯è¿±è¿²è¿´è¿µè¿¶è¿ºè¿»è¿¼è¿¾è¿¿éééééééèè»è¿è¼èèè¨è¤èèºç¢èè²è»è¤è¨èèè¹è®èèè¹è·è°èèèè¿è§èè©èè¼å»¾å¼å¤¼å¥è·å¥å¥å¥åå°¢å°¥å°¬å°´ææªææ»ææææ®æ¢æ¶æ¹æææ­æ¶æ±æºææ´æ­æ¬ææ©æ®æ¼æ²æ¸æ æ¿ææææææ¾æææææ ææ¦æ¡æææ­æ"],["df40","ééé£é¤é¥é§",5,"é°",4,"é·é¹éºé½é¿ééééé",4,"ééééééé",5,"é¤é¦é§é©éªé«é¬é¯",4,"é¶",6,"é¾é"],["df80","ééééééé",4,"ééééééééé é¤é¥é§é¨é©é«é­é²é·é¼é½é¿éæºæ·æ¸ææºææææ¤æ¢ææ¥æ®å¼å¿çå¼åå±å½å©å¨å»åååååååååå¡ååå£å²ååå·å±å¤åååå¶å¦ååå­åå´åå§å¦ååå²å£åå»å¿ååååå©åªå¤ååååå§å å½åå³å¢å£ååå§åªå§ååµåå­ååå¿åå¼"],["e040","éééééééééééééééééé é£é¤é¥é©éªé¬é®é°é±é²é³éµé¶é·é¹éºé»é¼é¿éééé",19,"ééé"],["e080","ééé é¡é¤",10,"é°é²",6,"éº",8,"éå·ååµå¶å·å³å°ååååå±å¹åååå¾ååå»åå½å¾åååªå·åååå«å¬åå¦ååå¯å¥å²å³ååå¨åµå¤è¾ååååå¤å£å¾åå§å­åå¹åå¬åå¢åååååå¤å±å«å»å¼ååå¯åååå¡åµå«å¹å¿ååååå¸å¸å¸å¸å¸±å¸»å¸¼"],["e140","éééééééééééééé é¦é§é¨é«é­é³éºé»é¼é",4,"éééééé",6,"é",5,"é¤",5,"é«é¬é°é±é²é³é¶é·é¸é¹é»"],["e180","é¼",10,"éééé",9,"é",8,"å¸·å¹å¹å¹å¹å¹¡å²å±ºå²å²å²å²å²å²å²å²å²å²µå²¢å²½å²¬å²«å²±å²£å³å²·å³å³å³¤å³å³¥å´å´å´§å´¦å´®å´¤å´å´å´åµå´¾å´´å´½åµ¬åµåµ¯åµåµ«åµåµåµ©åµ´å¶å¶å¶è±³å¶·å·å½³å½·å¾å¾å¾å¾å¾å¾å¾å¾¨å¾­å¾µå¾¼è¡¢å½¡ç­ç°ç´ç·ç¸çççççç¨ç¯ç©ç²ç´ç·çç³ççº"],["e240","é¦",62],["e280","é¥",32,"ç»ççç¡ççççç¢ç¹ç¥ç¬ç¸ç±çççç ç¬ç¯ç¾èå¤¥é£§å¤¤å¤é¥£é¥§",5,"é¥´é¥·é¥½é¦é¦é¦é¦é¦é¦é¦é¦é¦é¦åºåºåºåºåº¥åº åº¹åºµåº¾åº³èµå»å»å»å»¨å»ªèºå¿å¿å¿å¿æå¿®æå¿¡å¿¤å¿¾ææå¿ªå¿­å¿¸ææµæ¦ææææ©æ«ææ¿æ¡æ¸æ¹æ»æºæ"],["e340","é",45,"éµ",16],["e380","é",7,"é",24,"æªæ½æææ­ææææææ¬æ»æ±æææææ´æ æ¦ææ£æ´æææ«ææµæ¬ææ§æ·ææµå¿é³é©é«é±é³éµé¶é¼é¾éééééééééééééééä¸¬ç¿ææ°µæ±æ±æ±æ²£æ²æ²æ²æ²æ±¨æ±©æ±´æ±¶æ²æ²©æ³æ³æ²­æ³·æ³¸æ³±æ³æ²²æ³ æ³æ³ºæ³«æ³®æ²±æ³æ³¯æ³¾"],["e440","é¨",5,"é¯",24,"é",31],["e480","é©",32,"æ´¹æ´§æ´æµæµæ´æ´æ´æ´æ´«æµæ´®æ´µæ´æµæµæµæ´³æ¶æµ¯æ¶æ¶ æµæ¶æ¶æµæµ æµ¼æµ£æ¸æ·æ·æ·æ¸æ¶¿æ· æ¸æ·¦æ·æ·æ¸æ¶«æ¸æ¶®æ¸«æ¹®æ¹æ¹«æº²æ¹æºæ¹æ¹æ¸²æ¸¥æ¹æ»æº±æºæ» æ¼­æ»¢æº¥æº§æº½æº»æº·æ»æº´æ»æºæ»æºæ½¢æ½æ½æ¼¤æ¼æ»¹æ¼¯æ¼¶æ½æ½´æ¼ªæ¼æ¼©æ¾æ¾æ¾æ½¸æ½²æ½¼æ½ºæ¿"],["e540","é",51,"é¿",10],["e580","é",31,"é«æ¿æ¾§æ¾¹æ¾¶æ¿æ¿¡æ¿®æ¿æ¿ æ¿¯çç£çç¹çµççå®å®å®å®å®¥å®¸ç¯éªæ´å¯¤å¯®è¤°å¯°è¹è¬è¾¶è¿è¿è¿¥è¿®è¿¤è¿©è¿¦è¿³è¿¨éééé¦éééé¡éµé¶é­é¯ééééé¨éé¢éæ¹é´é½ééééå½å½å½å½å°»å«å±å±å­±å±£å±¦ç¾¼å¼ªå¼©å¼­è´å¼¼é¬»å±®å¦å¦å¦å¦©å¦ªå¦£"],["e640","é¬",34,"é",27],["e680","é¬",29,"éééå¦å§å¦«å¦å¦¤å§å¦²å¦¯å§å¦¾å¨å¨å§å¨å§£å§å§¹å¨å¨å¨²å¨´å¨å¨£å¨å©å©§å©å©å¨¼å©¢å©µè¬åªªåªå©·å©ºåª¾å««åª²å«å«åª¸å« å«£å«±å«å«¦å«å«å¬å¬å¬å¬²å¬·å­å°å°å­å­¥å­³å­å­å­¢é©µé©·é©¸é©ºé©¿é©½éªéªéªéªéªéªéªéªéªéªéªéªéªéªéª éª¢éª£éª¥éª§çºçº¡çº£çº¥çº¨çº©"],["e740","é",7,"é",54],["e780","é",32,"çº­çº°çº¾ç»ç»ç»ç»ç»ç»ç»ç»ç»ç»ç» ç»¡ç»¨ç»«ç»®ç»¯ç»±ç»²ç¼ç»¶ç»ºç»»ç»¾ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼¡",6,"ç¼ªç¼«ç¼¬ç¼­ç¼¯",4,"ç¼µå¹ºç¿å·ç¾éççç®ç¢ççççç·ç³çççç¥çé¡¼çç©ç§ççºç²ççªçç¦ç¥ç¨ç°ç®ç¬"],["e840","é¯",14,"é¿",43,"é¬é­é®é¯"],["e880","é°",20,"ééééééééé¦é»éé çççççççç·ç­ç¾çççççççç¨ç©çç§ççºéªé«é¬æææææ©æ¥ææªæ³ææ§æµæ¨ææ­ææ·æ¼æ°æ ææ æ©æ°æ ææµææ³ææ ææ¸æ¢æ ææ½æ ²æ ³æ¡ æ¡¡æ¡æ¡¢æ¡æ¡¤æ¢æ æ¡æ¡¦æ¡æ¡§æ¡æ ¾æ¡æ¡æ ©æ¢µæ¢æ¡´æ¡·æ¢æ¡«æ£æ¥®æ£¼æ¤æ¤ æ£¹"],["e940","é§é³é½éééééé é®é´éµé·",7,"é",42],["e980","é«",32,"æ¤¤æ£°æ¤æ¤æ¥æ££æ¤æ¥±æ¤¹æ¥ æ¥æ¥æ¦æ¥«æ¦æ¦æ¥¸æ¤´æ§æ¦æ¦æ§æ¦æ¥¦æ¥£æ¥¹æ¦æ¦§æ¦»æ¦«æ¦­æ§æ¦±æ§æ§æ§æ¦æ§ æ¦æ§¿æ¨¯æ§­æ¨æ¨æ©¥æ§²æ©æ¨¾æª æ©æ©æ¨µæªæ©¹æ¨½æ¨¨æ©æ©¼æªæªæª©æªæª«ç·çæ®æ®æ®æ®æ®æ®æ®æ®æ®æ®¡æ®ªè½«è½­è½±è½²è½³è½µè½¶è½¸è½·è½¹è½ºè½¼è½¾è¾è¾è¾è¾è¾"],["ea40","é",27,"é¬é¿éééééé é£",6,"é«é¬é­é¯é°é·é¸é¹éºé¾éééééééééé"],["ea80","ééééééé é£é¥é¦é«é­",4,"é³é¸",12,"éééè¾è¾è¾è¾è¾è»æææææ¢æ¡æ¥æ¤æ¬è§ç¯ç´ç¿çççæ´æ®æ¯æ°æææ²æææçæ·ææ´æ±æ¶æµèææææææ¡ææ·æææ§ææ¾æææ¦æ©è´²è´³è´¶è´»è´½èµèµèµèµèµèµèµèµèµè§è§è§è§è§è§è§è§ç®ççç¦ç¯ç¾ç¿çççççææ²æ°"],["eb40","éééééééééé",9,"é¨",7,"é±é²é´éµé·é¸éºé»é¿éééééééééé",9,"é¡",6,"é«"],["eb80","é¬é­é®é°é±é²é´éµé¸éºé»é¼é½é¿éééééééééééé",4,"ééé æ¿æèæ¯ªæ¯³æ¯½æ¯µæ¯¹æ°æ°æ°æ°æ°æ°æ°æ°æ°¡æ°©æ°¤æ°ªæ°²æµææ«çççç°è¢åèèèè¼æè½è±è«è­è´è·è§è¨è©èªèèèèèèæèè«è±è´è­èèè²è¼æèè±è¶èè¬èè²èèèè´èèè±è è©è¼è½è­è§å¡åªµèèèæ»è£èªèæ¦èè»"],["ec40","é¡",8,"é«é¬é®é¯é±é³",4,"éºé»é¼é½é¿",18,"ééééééééé£é¤é¦é§é¨éª",7],["ec80","é²éµé·",4,"é½",7,"é",4,"ééééééééé",4,"èè¦æ¬¤æ¬·æ¬¹æ­æ­æ­é£é£é£é£é£é£æ®³å½æ¯è§³æé½ææ¼æææææææççççç»çç·ç«ç±ç¨ççççç¯ç±ç³çç¨çç²çç¸çºçç³çµç¨ç ç çç§ç¹çç¨ç¬çç¦ç¹æ¾æ½æææç¤»ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥¢ç¥ç¥ ç¥¯ç¥§ç¥ºç¦ç¦ç¦ç¦§ç¦³å¿å¿"],["ed40","ééé¡é¢é¤",6,"é¬é®é°é±é³éµ",46],["ed80","é¤é¥é¨é®",4,"é´é·",23,"æ¼æææ§æææ£æ«ææææ©ææææèè¿æ²æ³¶æ·¼ç¶ç¸ç ç ç ç ç æ«ç ­ç ç ç ¹ç ºç »ç ç ¼ç ¥ç ¬ç £ç ©ç¡ç¡­ç¡ç¡ç ¦ç¡ç¡ç¡ç¡ªç¢ç¢ç¢ç¢ç¢ç¢¡ç¢£ç¢²ç¢¹ç¢¥ç£ç£ç£ç£¬ç£²ç¤ç£´ç¤ç¤¤ç¤ç¤´é¾é»¹é»»é»¼ç±ççç¹çççç¢çç­ç¦çµç¸çççççç¨"],["ee40","é ",62],["ee80","é¡",32,"ç¢ç¥ç¿çç½ççççç ç°çµç½çºçççççç²ç¹çç½ç½¡ç½è©ç½¨ç½´ç½±ç½¹ç¾ç½¾çç¥è ²éééééééééééééééé£é¤é«éªé­é¬é¯é°é²é´é¶",4,"é¼é½é¿éé",6,"éééééééééééé é¢é¤é¥é§é¨éª"],["ef40","é¡¯",5,"é¢é¢é¢é¢é¢é¢£é¢¨",37,"é£é£é£é£é£é£é£é£é£ ",4],["ef80","é£¥é£¦é£©",30,"é©é«é®é¯é³é´éµé·é¹é¼é½é¿éééééééééé",4,"éééééé¢éªé«é©é¬é±é²é´é¶é·é¸é¼é¾é¿ééµééééééééééééééééééé¡é¢é¤",8,"é¯é±é²é³éºç§ç¬éç§ç§­ç§£ç§«ç¨åµç¨ç¨ç¨ç¨"],["f040","é¤",4,"é¤é¤é¤",28,"é¤¯",26],["f080","é¥",9,"é¥",12,"é¥¤é¥¦é¥³é¥¸é¥¹é¥»é¥¾é¦é¦é¦ç¨¹ç¨·ç©é»é¦¥ç©°ççççç¤çç ç¬é¸ é¸¢é¸¨",4,"é¸²é¸±é¸¶é¸¸é¸·é¸¹é¸ºé¸¾é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹£é¹¦",6,"é¹±é¹­é¹³çççç çç¬ç£ç³ç´ç¸çç±ç°ççççç£ç¨ç¦ç¤ç«ç§çç±ç¼ç¿ççççççç¥ççç"],["f140","é¦é¦é¦",10,"é¦¦é¦§é¦©",47],["f180","é§",32,"çç¼ç¢ç çç­ç°ç¿çµçç¾ç³çççççç«ç¯ç¿ç«¦ç©¸ç©¹çªçªçªçªçª¦çª çª¬çª¨çª­çª³è¡¤è¡©è¡²è¡½è¡¿è¢è¢¢è£è¢·è¢¼è£è£¢è£è££è£¥è£±è¤è£¼è£¨è£¾è£°è¤¡è¤è¤è¤è¤è¤´è¤«è¤¶è¥è¥¦è¥»çè¥ç²ç´çèèèèè è¢è¥è¦è§è©è¨è±èèµèèèèè©è±è¦é¡¸é¢é¢"],["f240","é§º",62],["f280","é¨¹",32,"é¢é¢é¢é¢é¢é¢é¢é¢é¢é¢¡é¢¢é¢¥é¢¦èèè¬è®è¿èºè¼è»è¨èèè¬èè§è£èªèè©è¶èèµèè°èºè±è¯èèè´è©è±è²è­è³èèèè´èèèèèè¸èèèèè£è»èè¥è®èè¾èè´è±è©è·è¿èè¢è½è¾è»è è°èè®èèè£è¼è¤èè¥èè¯è¨è"],["f340","é©",17,"é©²éªéªéªéªéªéªéªéª¦éª©",6,"éª²éª³éª´éªµéª¹éª»éª½éª¾éª¿é«é«é«",4,"é«é«é«é«é«é«é«é«é«é«é«é«é«"],["f380","é«é«é« é«¢é«£é«¤é«¥é«§é«¨é«©é«ªé«¬é«®é«°",8,"é«ºé«¼",6,"é¬é¬é¬èèèè­èèè«è¥è¬èµè³èèè½èèèèèªè è®è è è¾è è è ¡è ¹è ¼ç¼¶ç½ç½ç½èç«ºç«½ç¬ç¬ç¬ç¬ç¬ç¬«ç¬ç­ç¬¸ç¬ªç¬ç¬®ç¬±ç¬ ç¬¥ç¬¤ç¬³ç¬¾ç¬ç­ç­ç­ç­µç­ç­ç­ ç­®ç­»ç­¢ç­²ç­±ç®ç®¦ç®§ç®¸ç®¬ç®ç®¨ç®ç®ªç®ç®¢ç®«ç®´ç¯ç¯ç¯ç¯ç¯ç¯¥ç¯¦ç¯ªç°ç¯¾ç¯¼ç°ç°ç°"],["f440","é¬é¬",5,"é¬é¬é¬é¬",10,"é¬ é¬¡é¬¢é¬¤",10,"é¬°é¬±é¬³",7,"é¬½é¬¾é¬¿é­é­é­é­é­é­é­é­é­é­",5],["f480","é­",32,"ç°ç°ªç°¦ç°¸ç±ç±è¾èèèè¬è¡è¡è¢è£è­è¯è¨è«è¸è»è³è´è¾èèèèèèè¨è¡¾è¢è¢è£è£è¥ç¾ç¾ç¾§ç¾¯ç¾°ç¾²ç±¼æç²ç²ç²ç²ç²¢ç²²ç²¼ç²½ç³ç³ç³ç³ç³ç³ç³ç³¨è®æ¨ç¾¿ç¿ç¿ç¿¥ç¿¡ç¿¦ç¿©ç¿®ç¿³ç³¸çµ·ç¶¦ç¶®ç¹çºéº¸éº´èµ³è¶è¶è¶è¶±èµ§èµ­è±è±ééééé¤"],["f540","é­¼",62],["f580","é®»",32,"é¢é¡é°é©é¯é½é¾é²é´é¹éééééé¢é£éªé­é®é¯éµé´éºè±é¹¾è¶¸è·«è¸è¹è¹©è¶µè¶¿è¶¼è¶ºè·è·è·è·è·è·è·è·è·è·¬è··è·¸è·£è·¹è·»è·¤è¸è·½è¸è¸è¸è¸¬è¸®è¸£è¸¯è¸ºè¹è¸¹è¸µè¸½è¸±è¹è¹è¹è¹è¹è¹è¹°è¹¶è¹¼è¹¯è¹´èºèºèºèºèºèºè±¸è²è²è²è²è²æè§è§è§è§"],["f640","é¯",62],["f680","é°",32,"è§¥è§«è§¯è¨¾è¬¦éé©é³é¯ééééééªé­é°é¾é¾é¾é¾",5,"é¾é»¾é¼é¼é¹é¼é½ééç¿é éé®éé¾éªééé¾é«é±¿é²é²é²é²é²ç¨£é²é²é²é²é²é²é²é²é²é²",5,"é²¥",4,"é²«é²­é²®é²°",7,"é²ºé²»é²¼é²½é³é³é³é³é³é³"],["f740","é°¼",62],["f780","é±»é±½é±¾é²é²é²é²é²é²é²é²é²é²é²é²é²é²ªé²¬é²¯é²¹é²¾",4,"é³é³é³é³é³é³é³ é³¡é³",4,"é³é³é³é³é³é³é³é³é³é³¢é¼ééééé¯é«é£é²é´éª±éª°éª·é¹éª¶éªºéª¼é«é«é«é«é«é«é«é­é­é­é­é­é­é­é£¨é¤é¤®é¥é¥é«é«¡é«¦é«¯é««é«»é«­é«¹é¬é¬é¬é¬é¬£éº½éº¾ç¸»éºéºéºéºéºééºéºé»é»é»é» é»é»¢é»©é»§é»¥é»ªé»¯é¼¢é¼¬é¼¯é¼¹é¼·é¼½é¼¾é½"],["f840","é³£",62],["f880","é´¢",32],["f940","éµ",62],["f980","é¶",32],["fa40","é¶£",62],["fa80","é·¢",32],["fb40","é¸",27,"é¸¤é¸§é¸®é¸°é¸´é¸»é¸¼é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹ é¹¡é¹¢é¹¥é¹®é¹¯é¹²é¹´",9,"éº"],["fb80","éºéºéºéºéºéºéºéº",5,"éº",8,"éºéº ",5,"éº§éº¨éº©éºª"],["fc40","éº«",8,"éºµéº¶éº·éº¹éººéº¼éº¿",4,"é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»¡é»£é»¤é»¦é»¨é»«é»¬é»­é»®é»°",8,"é»ºé»½é»¿",6],["fc80","é¼",4,"é¼é¼é¼é¼é¼é¼é¼é¼é¼",5,"é¼¡é¼£",8,"é¼­é¼®é¼°é¼±"],["fd40","é¼²",4,"é¼¸é¼ºé¼¼é¼¿",4,"é½",10,"é½",38],["fd80","é½¹",5,"é¾é¾é¾",11,"é¾é¾é¾é¾¡",4,"ï¤¬ï¥¹ï¦ï§§ï§±"],["fe40","ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ ï¨¡ï¨£ï¨¤ï¨§ï¨¨ï¨©"]]');
            }
          ),
          /***/
          77348: (
            /***/
            function(u) {
              u.exports = JSON.parse('[["0","\\u0000",127],["8141","ê°ê°ê°ê°ê°",4,"ê°ê°ê°ê°¡ê°¢ê°£ê°¥",6,"ê°®ê°²ê°³ê°´"],["8161","ê°µê°¶ê°·ê°ºê°»ê°½ê°¾ê°¿ê±",9,"ê±ê±",5,"ê±"],["8181","ê±ê±ê±ê±ê±ê±",18,"ê±²ê±³ê±µê±¶ê±¹ê±»",4,"ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²",6,"ê²ê²¢",5,"ê²«ê²­ê²®ê²±",6,"ê²ºê²¾ê²¿ê³ê³ê³ê³ê³ê³ê³ê³ê³ê³",7,"ê³ê³",7,"ê³¢ê³£ê³¥ê³¦ê³©ê³«ê³­ê³®ê³²ê³´ê³·",4,"ê³¾ê³¿ê´ê´ê´ê´ê´",4,"ê´ê´ê´ê´"],["8241","ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´¡",7,"ê´ªê´«ê´®",5],["8261","ê´¶ê´·ê´¹ê´ºê´»ê´½",6,"êµêµêµ",5,"êµêµêµêµêµêµ"],["8281","êµ",7,"êµ¢êµ¤",7,"êµ®êµ¯êµ±êµ²êµ·êµ¸êµ¹êµºêµ¾ê¶ê¶",4,"ê¶ê¶ê¶ê¶ê¶ê¶",10,"ê¶",5,"ê¶¥",17,"ê¶¸",7,"ê·ê·ê·ê·ê·ê·",6,"ê·ê·",7,"ê·ê·ê·ê·¡ê·¢ê·£ê·¥",18],["8341","ê·ºê·»ê·½ê·¾ê¸",5,"ê¸ê¸ê¸",5,"ê¸",7],["8361","ê¸",18,"ê¸²ê¸³ê¸µê¸¶ê¸¹ê¸»ê¸¼"],["8381","ê¸½ê¸¾ê¸¿ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹",4,"ê¹ê¹¢ê¹£ê¹¤ê¹¦ê¹§ê¹ªê¹«ê¹­ê¹®ê¹¯ê¹±",6,"ê¹ºê¹¾",5,"êº",5,"êº",46,"êº¿ê»ê»ê»ê»",6,"ê»ê»",5,"ê»ê»ê»",8],["8441","ê»¦ê»§ê»©ê»ªê»¬ê»®",5,"ê»µê»¶ê»·ê»¹ê»ºê»»ê»½",8],["8461","ê¼ê¼ê¼ê¼ê¼ê¼ê¼ê¼",18],["8481","ê¼¤",7,"ê¼®ê¼¯ê¼±ê¼³ê¼µ",6,"ê¼¾ê½ê½ê½ê½ê½ê½",5,"ê½",10,"ê½",5,"ê½¦",18,"ê½º",5,"ê¾ê¾ê¾ê¾ê¾ê¾ê¾",6,"ê¾ê¾ê¾ê¾",5,"ê¾",26,"ê¾ºê¾»ê¾½ê¾¾"],["8541","ê¾¿ê¿",5,"ê¿ê¿ê¿",4,"ê¿",6,"ê¿",4],["8561","ê¿¢",5,"ê¿ª",5,"ê¿²ê¿³ê¿µê¿¶ê¿·ê¿¹",6,"ëë"],["8581","ë",6,"ëëëëëëë",6,"ë",9,"ë©",26,"ëëëëëëëëëëëëëëë",29,"ë¾ë¿ëëëë",6,"ëëë",5,"ëëëë£ë¤"],["8641","ë¥ë¦ë§ëªë°ë²ë¶ë·ë¹ëºë»ë½",6,"ëë",5,"ë"],["8661","ëëëëë",6,"ë¡ë¢ë£ë¤ë¦",10],["8681","ë±",22,"ëëëëëëëëëëë",4,"ë¦ë§ë©ëªë«ë­",6,"ë¶ëº",5,"ëëëëëë",6,"ëëëëëëëëëëë¡",22,"ëºë»ë½ë¾ë¿ëë",4,"ëëëëëëëëëëëëë"],["8741","ë",9,"ë©",15],["8761","ë¹",18,"ëëëëëëë"],["8781","ë",5,"ëë ",7,"ëªë«ë­ë®ë¯ë±",7,"ëºë¼ë¾",5,"ëëëëë",6,"ëëë",5,"ë¡",18,"ëµ",6,"ë½",26,"ëëëëëëë¡",6,"ëª",4],["8841","ë¯",4,"ë¶",5,"ë½",6,"ëëëë",4],["8861","ëëëëëëë",4,"ë¢ë¤ë§ë¨ë©ë«ë­ë®ë¯ë±ë²ë³ëµë¶ë·"],["8881","ë¸",15,"ëëëëëëë",4,"ëëëëë ë¡ë£ë§ë©ëªë°ë±ë²ë¶ë¼ë½ë¾ëëëëëë",6,"ëë",5,"ë",54,"ëëëëë ë¡ë¢ë£"],["8941","ë¦ë¨ëªë¬ë­ë¯ë²ë³ëµë¶ë·ë¹",6,"ëë",5,"ë"],["8961","ëëëëëë",10,"ë¢",5,"ë©ëªë«ë­"],["8981","ë®",21,"ëëëëëëëëëëëëëëëë¡ë¢ë£ë¥ë¦ë§ë©",18,"ë½",18,"ë",6,"ëëëëëëë¡",6,"ëªë¬",7,"ëµ",15],["8a41","ë",10,"ëëëëëë",6,"ë¢ë¤ë¦"],["8a61","ë§",4,"ë­",18,"ëë"],["8a81","ë",4,"ë",19,"ë",5,"ë¥ë¦ë§ë©ëªë«ë­",7,"ë¶ë¸ëº",5,"ëëëëëëë",6,"ëëëëë",5,"ëëë¡ë¢ë¥ë§",4,"ë®ë°ë²",5,"ë¹",26,"ëëëëë"],["8b41","ë",5,"ë¦ë«",4,"ë²ë³ëµë¶ë·ë¹",6,"ëë"],["8b61","ëëëëëëëëëë",6,"ëë¢",8],["8b81","ë«",52,"ë¢ë£ë¥ë¦ë§ë©ë¬ë­ë®ë¯ë²ë¶",4,"ë¾ë¿ëëëë",6,"ëë",5,"ë",18,"ë­",18],["8c41","ë",15,"ëëëëëë",4],["8c61","ë",6,"ë¦",5,"ë­",6,"ëµ",5],["8c81","ë»",12,"ë",26,"ë¥ë¦ë§ë©",50,"ëëë¡ë¢ë£ë¥",5,"ë­ë®ë¯ë°ë²",16],["8d41","ë",16,"ë",8],["8d61","ë",17,"ë±ë²ë³ëµë¶ë·ë¹ëº"],["8d81","ë»",4,"ëëëë",33,"ëªë«ë­ë®ë±",6,"ëºë¼",7,"ëëëëëëë",6,"ë",9,"ë¡ë¢ë£ë¥ë¦ë§ë©",6,"ë²ë´ë¶",5,"ë¾ë¿ëëëë",6,"ëëëëëëëë"],["8e41","ëë¡",6,"ëªë®",5,"ë¶ë·ë¹",8],["8e61","ë",4,"ëë",19],["8e81","ë",13,"ë®ë¯ë±ë²ë³ëµ",6,"ë¾ë ",4,"ë ë ë ë ë ë ",6,"ë ë ë ",5,"ë ¦ë §ë ©ë ªë «ë ­",6,"ë ¶ë º",5,"ë¡ë¡ë¡ë¡",11,"ë¡ë¡",7,"ë¡ë¡ë¡¡ë¡¢ë¡£ë¡¥",6,"ë¡®ë¡°ë¡²",5,"ë¡¹ë¡ºë¡»ë¡½",7],["8f41","ë¢",7,"ë¢",17],["8f61","ë¢ ",7,"ë¢©",6,"ë¢±ë¢²ë¢³ë¢µë¢¶ë¢·ë¢¹",4],["8f81","ë¢¾ë¢¿ë£ë£ë£",5,"ë£ë£ë£ë£ë£ë£ë£",7,"ë£ë£ ë£¢",5,"ë£ªë£«ë£­ë£®ë£¯ë£±",6,"ë£ºë£¼ë£¾",5,"ë¤",18,"ë¤",6,"ë¤¡",26,"ë¤¾ë¤¿ë¥ë¥ë¥ë¥",6,"ë¥ë¥ë¥ë¥",5],["9041","ë¥ë¥ë¥ë¥ë¥ë¥¡",6,"ë¥ªë¥¬ë¥®",5,"ë¥¶ë¥·ë¥¹ë¥ºë¥»ë¥½"],["9061","ë¥¾",5,"ë¦ë¦ë¦ë¦ë¦",15],["9081","ë¦",12,"ë¦®ë¦¯ë¦±ë¦²ë¦³ë¦µ",6,"ë¦¾ë§ë§",5,"ë§ë§ë§ë§",4,"ë§ë§ë§ë§ ë§¢ë§¦ë§§ë§©ë§ªë§«ë§­",6,"ë§¶ë§»",4,"ë¨",5,"ë¨",11,"ë¨",33,"ë¨ºë¨»ë¨½ë¨¾ë¨¿ë©ë©ë©ë©ë©"],["9141","ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©",6,"ë©¦ë©ª",5],["9161","ë©²ë©³ë©µë©¶ë©·ë©¹",9,"ëªëªëªëªëªëª",5],["9181","ëª",20,"ëªªëª­ëª®ëª¯ëª±ëª³",4,"ëªºëª¼ëª¾",5,"ë«ë«ë«ë«",14,"ë«",33,"ë«½ë«¾ë«¿ë¬ë¬ë¬ë¬",7,"ë¬ë¬ë¬",5,"ë¬ë¬ë¬ë¬ë¬ë¬ë¬¡",6],["9241","ë¬¨ë¬ªë¬¬",7,"ë¬·ë¬¹ë¬ºë¬¿",4,"ë­ë­ë­ë­ë­ë­ë­ë­"],["9261","ë­ë­ë­ë­ë­",7,"ë­¢ë­¤",7,"ë­­",4],["9281","ë­²",21,"ë®ë®ë®ë®ë®ë®ë®",18,"ë®¥ë®¦ë®§ë®©ë®ªë®«ë®­",6,"ë®µë®¶ë®¸",7,"ë¯ë¯ë¯ë¯ë¯ë¯ë¯",6,"ë¯ë¯ë¯",35,"ë¯ºë¯»ë¯½ë¯¾ë°"],["9341","ë°",4,"ë°ë°ë°ë°ë°ë°ë°ë° ë°¡ë°¢ë°£ë°¦ë°¨ë°ªë°«ë°¬ë°®ë°¯ë°²ë°³ë°µ"],["9361","ë°¶ë°·ë°¹",6,"ë±ë±ë±ë±ë±ë±ë±ë±ë±",8],["9381","ë±ë±ë±ë±",37,"ë²ë²ë²ë²ë²ë²",4,"ë²ë²ë²",4,"ë²¢ë²£ë²¥ë²¦ë²©",6,"ë²²ë²¶",5,"ë²¾ë²¿ë³ë³ë³ë³",7,"ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³",22,"ë³·ë³¹ë³ºë³»ë³½"],["9441","ë³¾",5,"ë´ë´ë´",5,"ë´ë´ë´ë´",8],["9461","ë´",5,"ë´¥",6,"ë´­",12],["9481","ë´º",5,"ëµ",6,"ëµëµëµëµëµëµ",6,"ëµ",9,"ëµ¥ëµ¦ëµ§ëµ©",22,"ë¶ë¶ë¶ë¶ë¶",4,"ë¶ë¶ë¶ë¶ë¶ë¶ë¶",6,"ë¶¥",10,"ë¶±",6,"ë¶¹",24],["9541","ë·ë·ë·ë·ë·ë·ë·ë·",11,"ë·ª",5,"ë·±"],["9561","ë·²ë·³ë·µë·¶ë··ë·¹",6,"ë¸ë¸ë¸ë¸",5,"ë¸ë¸ë¸ë¸ë¸"],["9581","ë¸",6,"ë¸ë¸ ",35,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹",4,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹¢ë¹£ë¹¥ë¹¦ë¹§ë¹©ë¹«",4,"ë¹²ë¹¶",4,"ë¹¾ë¹¿ëºëºëºëº",6,"ëºëº",5,"ëº",13,"ëº©",14],["9641","ëº¸",23,"ë»ë»"],["9661","ë»ë»ë»",6,"ë»¡ë»¢ë»¦",5,"ë»­",8],["9681","ë»¶",10,"ë¼",5,"ë¼",13,"ë¼ë¼",33,"ë½ë½ë½ë½ë½ë½",6,"ë½ë½ë½ë½",44],["9741","ë¾",16,"ë¾",8],["9761","ë¾",17,"ë¾±",7],["9781","ë¾¹",11,"ë¿",5,"ë¿ë¿ë¿ë¿ë¿ë¿",6,"ë¿ë¿ë¿ ë¿¢",89,"ì½ì¾ì¿"],["9841","ì",16,"ì",5,"ììì"],["9861","ìììì¡",6,"ìª",15],["9881","ìº",21,"ìììììì",6,"ì¢ì¤ì¦",5,"ì®ì±ì²ì·",4,"ì¾ììììììììììì",6,"ìì",5,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì¸ìº",5,"ììììììì",6,"ììììì",5,"ì¡ì¢ì¥ì¨ì©ìªì«ì®"],["9941","ì²ì³ì´ìµì·ìºì»ì½ì¾ì¿ì",6,"ìì",5,"ìì"],["9961","ìììì",6,"ì¦ìª",5,"ì±ì²ì³ìµì¶ì·ì¹ìºì»"],["9981","ì¼",8,"ì",5,"ìììììì",4,"ìì ì¢ì£ì¤ì¦ì§ìªì«ì­ì®ì¯ì±",11,"ì¾",5,"ììììììì",6,"ììì",6,"ì¡ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´",7,"ì¾ì¿ìììì",6,"ììì",5,"ììììì¡ì¢ì£"],["9a41","ì¤ì¥ì¦ì§ìªì¬ì®ì°ì³ìµ",16],["9a61","ììì",6,"ìììììì",6,"ì¡ì¢ì£ì¤ì¦"],["9a81","ì§",4,"ì®ì¯ì±ì²ì³ìµ",6,"ì¾ìì",5,"ì",5,"ì",6,"ìììì",5,"ì¦ì§ì©ìªì«ì®",5,"ì¶ì¸ìº",33,"ììì¡ì¢ì¥",5,"ì®ì°ì²ì³ì´ìµì·ìºì½ì¾ì¿ì",6,"ìììì"],["9b41","ììììììììì",6,"ì¦ì§ìª",8],["9b61","ì³",17,"ì",7],["9b81","ì",25,"ìªì«ì­ì®ì¯ì±ì³",4,"ìºì»ì¾",5,"ììììììì",50,"ì",22,"ì"],["9c41","ìììì¡ì£",4,"ìªì«ì¬ì®",5,"ì¶ì·ì¹",5],["9c61","ì¿",8,"ì",6,"ì",9],["9c81","ì",8,"ì¥",6,"ì­ì®ì¯ì±ì²ì³ìµ",6,"ì¾",9,"ì",26,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì·ì¸ìº",5,"ì",18,"ì",6,"ì",12],["9d41","ìª",13,"ì¹ìºì»ì½",8],["9d61","ì",25],["9d81","ì ",8,"ìª",5,"ì²ì³ìµì¶ì·ì¹ì»ì¼ì½ì¾ì",9,"ììììììì",6,"ì",10,"ìªì«ì­ì®ì¯ì±",6,"ìºì¼ì¾",5,"ììììììììììììì¢ì£ì¥ì¦ì§ì©",6,"ì²ì¶",5,"ì¾ì¿ìììììììììììììì"],["9e41","ìììììììì¡",7,"ìª",9,"ì¶"],["9e61","ì·ìºì¿",4,"ììììììììì",6,"ì¢ì¤ì¦ì§"],["9e81","ì¨ì©ìªì«ì¯ì±ì²ì³ìµì¸ì¹ìºì»ìììììììììì",6,"ìì",6,"ì¦ì§ì©ìªì«ì¯ì±ì²ì¶ì¸ìºì¼ì½ì¾ì¿ìììììì",6,"ìì",5,"ììì¡",10,"ì­ì®ì°ì²",5,"ìºì»ì½ì¾ì¿ì",6,"ììì",5,"ìììììì",6,"ì¦"],["9f41","ì¨ìª",5,"ì²ì³ìµì¶ì·ì»",4,"ììì",5,"ì"],["9f61","ììììì",6,"ììì¢",5,"ìªì«ì­ì®ì¯ì±ì²"],["9f81","ì³",4,"ìºì»ì¼ì¾",5,"ìììììì",6,"ììì",5,"ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´ì¶ì¸ì¹ìºì»ì¾ì¿ìììì",4,"ìììììììììì¡",6,"ì©ìªì¬",7,"ì¶ì·ì¹ìºì»ì¿ììììììììììììì",4,"ì¢ì§",4,"ì®ì¯ì±ì²ì³ìµì¶ì·"],["a041","ì¸ì¹ìºì»ì¾ì",5,"ììììì",6,"ìììì"],["a061","ì",5,"ì¥ì¦ì§ì©ìªì«ì­",13],["a081","ì»",4,"ì ì ì ì ì ì ì ",4,"ì ì ì ",4,"ì ì ì ¡ì ¢ì £ì ¥",6,"ì ®ì °ì ²",5,"ì ¹ì ºì »ì ½ì ¾ì ¿ì¡",6,"ì¡ì¡ì¡",5,"ì¡",26,"ì¡²ì¡³ì¡µì¡¶ì¡·ì¡¹ì¡»",4,"ì¢ì¢ì¢ì¢ì¢ì¢",5,"ì¢",7,"ì¢ì¢ ì¢¢ì¢£ì¢¤"],["a141","ì¢¥ì¢¦ì¢§ì¢©",18,"ì¢¾ì¢¿ì£ì£"],["a161","ì£ì£ì£ì£ì£ì£ì£ì£ì£",6,"ì£ì£ì£",5,"ì£¢ì££ì£¥"],["a181","ì£¦",14,"ì£¶",5,"ì£¾ì£¿ì¤ì¤ì¤ì¤",4,"ì¤ãããÂ·â¥â¦Â¨ãÂ­ââ¥ï¼¼â¼ââââããã",9,"Â±ÃÃ·â â¤â¥ââ´Â°â²â³ââ«ï¿ ï¿¡ï¿¥âââ â¥ââââ¡âÂ§â»ââââââââ¡â â³â²â½â¼âââââãâªâ«ââ½ââµâ«â¬âââââââªâ©â§â¨ï¿¢"],["a241","ì¤ì¤",5,"ì¤",18],["a261","ì¤­",6,"ì¤µ",18],["a281","ì¥",7,"ì¥ì¥ì¥ì¥ì¥ì¥",6,"ì¥¢ì¥¤",7,"ì¥­ì¥®ì¥¯ââââÂ´ï½ËËËËËÂ¸ËÂ¡Â¿Ëâ®ââÂ¤ââ°âââ·â¶â¤â â¡â¥â§â£âââ£ââââ¤â¥â¨â§â¦â©â¨ââââÂ¶â â¡ââââââ­â©âªâ¬ã¿ãâãâ¢ããâ¡â¬Â®"],["a341","ì¥±ì¥²ì¥³ì¥µ",6,"ì¥½",10,"ì¦ì¦ì¦ì¦ì¦"],["a361","ì¦",6,"ì¦ì¦ì¦",16],["a381","ì¦¯",16,"ì§ì§ì§ì§ì§ì§",4,"ì§ì§ì§ì§ì§ï¼",58,"ï¿¦ï¼½",32,"ï¿£"],["a441","ì§ì§ì§¡ì§£ì§¥ì§¦ì§¨ì§©ì§ªì§«ì§®ì§²",5,"ì§ºì§»ì§½ì§¾ì§¿ì¨ì¨ì¨ì¨"],["a461","ì¨ì¨ì¨ì¨ì¨",5,"ì¨ì¨ì¨ì¨",12],["a481","ì¨¦ì¨§ì¨¨ì¨ª",28,"ã±",93],["a541","ì©",4,"ì©ì©ì©ì©ì©ì©",6,"ì©ì©¢",5,"ì©©ì©ª"],["a561","ì©«",17,"ì©¾",5,"ìªìª"],["a581","ìª",16,"ìª",14,"â°",9],["a5b0","â ",9],["a5c1","Î",16,"Î£",6],["a5e1","Î±",16,"Ï",6],["a641","ìª¨",19,"ìª¾ìª¿ì«ì«ì«ì«"],["a661","ì«",5,"ì«ì«ì«ì«ì«ì«ì«ì«",5,"ì«¡",6],["a681","ì«¨ì«©ì«ªì««ì«­",6,"ì«µ",18,"ì¬ì¬ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸ââââââââââââ¡â¢â¦â§â©âªâ­â®â±â²âµâ¶â¹âºâ½â¾âââ",7],["a741","ì¬",4,"ì¬ì¬ì¬ì¬ì¬ì¬ì¬",6,"ì¬¢",7],["a761","ì¬ª",22,"ì­ì­ì­"],["a781","ì­ì­ì­ì­ì­ì­ì­ì­ì­",6,"ì­ì­ì­ì­",5,"ì­¥",7,"ãããâããã£ã¤ã¥ã¦ã",9,"ããããããããã§ã¨ã°",9,"ã",4,"ãº",5,"ã",4,"â¦ãããããããã­ã®ã¯ãã©ãªã«ã¬ããããããã"],["a841","ì­­",10,"ì­º",14],["a861","ì®",18,"ì®",6],["a881","ì®¤",19,"ì®¹",11,"ÃÃÂªÄ¦"],["a8a6","Ä²"],["a8a8","Ä¿ÅÃÅÂºÃÅ¦Å"],["a8b1","ã ",27,"â",25,"â ",14,"Â½ââÂ¼Â¾ââââ"],["a941","ì¯",14,"ì¯",10],["a961","ì¯ ì¯¡ì¯¢ì¯£ì¯¥ì¯¦ì¯¨ì¯ª",18],["a981","ì¯½",14,"ì°ì°ì°ì°ì°ì°",6,"ì°ì°ì° ì°£ì°¤Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÃ¸ÅÃÃ¾Å§ÅÅã",27,"â",25,"â´",14,"Â¹Â²Â³â´â¿ââââ"],["aa41","ì°¥ì°¦ì°ªì°«ì°­ì°¯ì°±",6,"ì°ºì°¿",4,"ì±ì±ì±ì±ì±ì±ì±"],["aa61","ì±",4,"ì±ì±",5,"ì±¡ì±¢ì±£ì±¥ì±§ì±©",6,"ì±±ì±²"],["aa81","ì±³ì±´ì±¶",29,"ã",82],["ab41","ì²ì²ì²ì²ì²ì²ì²ì²ì²ì²¡",6,"ì²ªì²®",5,"ì²¶ì²·ì²¹"],["ab61","ì²ºì²»ì²½",6,"ì³ì³ì³",5,"ì³ì³ì³ì³",5],["ab81","ì³",8,"ì³¥",6,"ì³­ì³®ì³¯ì³±",12,"ã¡",85],["ac41","ì³¾ì³¿ì´ì´",5,"ì´ì´ì´ì´ì´ì´",6,"ì´ì´ì´ì´ì´ "],["ac61","ì´¡ì´¢ì´£ì´¥ì´¦ì´§ì´©ì´ªì´«ì´­",11,"ì´º",4],["ac81","ì´¿",28,"ìµìµìµÐ",5,"ÐÐ",25],["acd1","Ð°",5,"ÑÐ¶",25],["ad41","ìµ¡ìµ¢ìµ£ìµ¥",6,"ìµ®ìµ°ìµ²",5,"ìµ¹",7],["ad61","ì¶",6,"ì¶",10,"ì¶ì¶ì¶ì¶ì¶ì¶ì¶ì¶"],["ad81","ì¶ ì¶¡ì¶¢ì¶£ì¶¦ì¶¨ì¶ª",5,"ì¶±",18,"ì·"],["ae41","ì·",5,"ì·ì·ì·ì·",16],["ae61","ì·¢",5,"ì·©ì·ªì·«ì·­ì·®ì·¯ì·±",6,"ì·ºì·¼ì·¾",4],["ae81","ì¸ì¸ì¸ì¸ì¸ì¸ì¸ì¸",6,"ì¸ì¸ì¸ì¸ì¸",5,"ì¸¢ì¸£ì¸¥ì¸¦ì¸§ì¸©ì¸ªì¸«"],["af41","ì¸¬ì¸­ì¸®ì¸¯ì¸²ì¸´ì¸¶",19],["af61","ì¹",13,"ì¹ì¹ì¹ì¹ì¹¢",5,"ì¹ªì¹¬"],["af81","ì¹®",5,"ì¹¶ì¹·ì¹¹ì¹ºì¹»ì¹½",6,"ìºìºìº",5,"ìºìºìºìºìºìº"],["b041","ìº",5,"ìº¢ìº¦",5,"ìº®",12],["b061","ìº»",5,"ì»",19],["b081","ì»",13,"ì»¦ì»§ì»©ì»ªì»­",6,"ì»¶ì»º",5,"ê°ê°ê°ê°ê°ê°ê°ê°",7,"ê°",4,"ê° ê°¤ê°¬ê°­ê°¯ê°°ê°±ê°¸ê°¹ê°¼ê±ê±ê±ê±ê±ê±ê±°ê±±ê±´ê±·ê±¸ê±ºê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê² ê²¡ê²¨ê²©ê²ªê²¬ê²¯ê²°ê²¸ê²¹ê²»ê²¼ê²½ê³ê³ê³ê³ê³ê³ê³ ê³¡ê³¤ê³§ê³¨ê³ªê³¬ê³¯ê³°ê³±ê³³ê³µê³¶ê³¼ê³½ê´ê´ê´"],["b141","ì¼ì¼ì¼ì¼ì¼ì¼",6,"ì¼ì¼ì¼",5,"ì¼ì¼ì¼ì¼¡ì¼¢ì¼£"],["b161","ì¼¥",6,"ì¼®ì¼²",5,"ì¼¹",11],["b181","ì½",14,"ì½ì½ì½ì½ì½ì½",6,"ì½¦ì½¨ì½ªì½«ì½¬ê´ê´ê´ê´ê´ê´ê´ ê´©ê´¬ê´­ê´´ê´µê´¸ê´¼êµêµêµêµêµêµêµêµ¡êµ£êµ¬êµ­êµ°êµ³êµ´êµµêµ¶êµ»êµ¼êµ½êµ¿ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶¤ê¶·ê·ê·ê·ê·ê·ê·ê·ê·ê· ê·¤ê·¸ê·¹ê·¼ê·¿ê¸ê¸ê¸ê¸ê¸ê¸ê¸ê¸°ê¸±ê¸´ê¸·ê¸¸ê¸ºê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ ê¹¡ê¹¥ê¹¨ê¹©ê¹¬ê¹°ê¹¸"],["b241","ì½­ì½®ì½¯ì½²ì½³ì½µì½¶ì½·ì½¹",6,"ì¾ì¾ì¾ì¾ì¾",5,"ì¾"],["b261","ì¾",18,"ì¾¢",5,"ì¾©"],["b281","ì¾ª",5,"ì¾±",18,"ì¿",6,"ê¹¹ê¹»ê¹¼ê¹½êºêºêºêº¼êº½êº¾ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»¨ê»«ê»­ê»´ê»¸ê»¼ê¼ê¼ê¼ê¼ê¼¬ê¼­ê¼°ê¼²ê¼´ê¼¼ê¼½ê¼¿ê½ê½ê½ê½ê½ê½ê½ê½ê½¤ê½¥ê½¹ê¾ê¾ê¾ê¾ê¾ê¾ê¾ê¾¸ê¾¹ê¾¼ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿¨ê¿©ê¿°ê¿±ê¿´ê¿¸ëëëëëëëëë¨ëëëëëëëëëëë"],["b341","ì¿",19,"ì¿¢ì¿£ì¿¥ì¿¦ì¿§ì¿©"],["b361","ì¿ª",5,"ì¿²ì¿´ì¿¶",5,"ì¿½ì¿¾ì¿¿íííí",5],["b381","í",5,"í",5,"í",19,"ëë¼ë½ëëëëëëëëëëëë ë¡ë¢ë¨ë©ë«",4,"ë±ë³ë´ëµë¸ë¼ëëëëëëëëëë ë¥ëëëëëëëëëëëëë£ë¤ë¥ë¨ë¬ë´ëµë·ë¸ë¹ëëëëëëëëëëë ë¸ë¹ë¼ëëëëëëëëëëëë¨ëëëëë"],["b441","í®",5,"í¶í·í¹íºí»í½",6,"ííí",5],["b461","ííííííí",6,"í¡",10,"í®í¯"],["b481","í±í²í³íµ",6,"í¾í¿íí",18,"ëë¨ë©ë¬ë°ë¹ë»ë½ëëëëëëëëëë ë´ë¼ëëë ë¨ë©ë´ëµë¼ëëëëëëëëëë ë¡ë£ë¥ë¦ëªë¬ë°ë´ëëëëëëëëëë¢ë¤ë¥ë¦ë¨ë«",4,"ë³ë´ëµë·",4,"ë¿ëëëëëëëëëëëëëëëëëëë¤ë¥"],["b541","í",14,"í¦í§í©íªí«í­",5],["b561","í³í¶í¸íº",5,"íííííí",5,"íí",4],["b581","íííí¡í¢í£í¥",6,"í®í²",5,"í¹",11,"ë§ë©ë«ë®ë°ë±ë´ë¸ëëëëëëëëë ë¡ë¨ë¬ëëëëëëëëëëëëëë ë¤ë¨ë¼ëëëë ë¨ë©ë«ë´ëëëëë ë¡ë£ë¥ë¬ëëëë¤ë¨ë¬ëµë·ë¹ëëëëëëëë ë£ë¤ë¦ë¬ë­ë¯ë±ë¸ëëëëëë¤ë¥ë§ë¨ë©ëªë°ë±ë´ë¸"],["b641","í",7,"í",17],["b661","í ",15,"í²í³íµí¶í·í¹í»í¼í½í¾"],["b681","í¿íí",5,"íííííí",6,"íí í¢",5,"í©íªí«í­ëëëëëëëëëëëëëë ë¡ë ë¡ë¤ë¨ëªë«ë°ë±ë³ë´ëµë»ë¼ë½ëëëëëëëëë¬ëëëëë¥ë¬ë´ëë¤ë¨ëëë ë¤ë«ë¬ë±ëë°ë´ë¸ëëëë¨ë©ë¬ë¯ë°ë¸ë¹ë»ëëëëëë ë¤ë¨ë°ë±ë³ëµë¼ë½ëëëëëëëëëë"],["b741","í®",13,"í½",6,"ííííí"],["b761","í",20,"í¢í£í¥í¦í§"],["b781","í©",6,"í²í´í¶í·í¸í¹í»í½í¾í¿í",14,"ëëëë ë¨ë©ë«ë¬ë­ë´ëµë¸ëëë¬ë­ë°ë´ë¼ë½ë¿ë ë ë ë ë ë ë ë ë ë ë ë ¤ë ¥ë ¨ë ¬ë ´ë µë ·ë ¸ë ¹ë¡ë¡ë¡ë¡ë¡ë¡ë¡ ë¡¤ë¡¬ë¡­ë¡¯ë¡±ë¡¸ë¡¼ë¢ë¢¨ë¢°ë¢´ë¢¸ë£ë£ë£ë£ë£ë£ë£ë£ë£ë£¡ë£¨ë£©ë£¬ë£°ë£¸ë£¹ë£»ë£½ë¤ë¤ë¤ ë¤¼ë¤½ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ ë¥¨ë¥©"],["b841","í",7,"í",17],["b861","í«",8,"íµí¶í·í¹",13],["b881","íí",5,"í",24,"ë¥«ë¥­ë¥´ë¥µë¥¸ë¥¼ë¦ë¦ë¦ë¦ë¦ë¦ë¦ë¦¬ë¦­ë¦°ë¦´ë¦¼ë¦½ë¦¿ë§ë§ë§ë§ë§",4,"ë§ë§ë§ë§ë§ë§¡ë§£ë§¤ë§¥ë§¨ë§¬ë§´ë§µë§·ë§¸ë§¹ë§ºë¨ë¨ë¨ë¨ë¨¸ë¨¹ë¨¼ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©¤ë©¥ë©§ë©¨ë©©ë©°ë©±ë©´ë©¸ëªëªëªëªëªëª¨ëª©ëª«ëª¬ëª°ëª²ëª¸ëª¹ëª»ëª½ë«ë«ë«ë«ë«¼"],["b941","íªí«í®í¯í±í²í³íµ",6,"í¾íí",5,"íííí"],["b961","í",14,"í",6,"í¥í¦í§í¨"],["b981","í©",22,"íííííííííë¬ë¬ë¬ë¬ë¬ë¬ë¬ë¬ ë¬©ë¬«ë¬´ë¬µë¬¶ë¬¸ë¬»ë¬¼ë¬½ë¬¾ë­ë­ë­ë­ë­ë­ë­ë­ë­ë­¡ë­£ë­¬ë®ë®ë®ë®¤ë®¨ë®¬ë®´ë®·ë¯ë¯ë¯ë¯ë¯ë¯¸ë¯¹ë¯¼ë¯¿ë°ë°ë°ë°ë°ë°ë°ë°ë°ë°",4,"ë°",4,"ë°¤ë°¥ë°§ë°©ë°­ë°°ë°±ë°´ë°¸ë±ë±ë±ë±ë±ë±ë±ë±ë±ë±ë²ë²ë²ë²ë²ë²ë²ë²ë²"],["ba41","ííííííí",5,"íííí¡í¢í£í¥",6,"í­"],["ba61","í®í¯í°í²",5,"íºí»í½í¾íí",4,"íí",5],["ba81","ííííííííí",6,"í¦",9,"í²í³íµí¶í·í¹íºë²ë²ë² ë²¡ë²¤ë²§ë²¨ë²°ë²±ë²³ë²´ë²µë²¼ë²½ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³´ë³µë³¶ë³¸ë³¼ë´ë´ë´ë´ë´ë´ë´¤ë´¬ëµëµëµëµëµëµëµëµ¤ëµ¨ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶¤ë¶°ë¶¸ë·ë·ë·ë·ë·©ë·°ë·´ë·¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ ë¹¡ë¹¤"],["bb41","í»",4,"ííí",5,"íííííí",4,"íí¢í£"],["bb61","í¤í¦í§íªí«í­í®í¯í±",6,"íºí¾",5,"íííí"],["bb81","í",31,"ë¹¨ë¹ªë¹°ë¹±ë¹³ë¹´ë¹µë¹»ë¹¼ë¹½ëºëºëºëºëºëºëºëºëºëº¨ë»ë»ë»ë»ë»ë» ë»£ë»¤ë»¥ë»¬ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë½ë½ë½ë½ë½ë½ë½ë¾ë¾°ë¿ë¿ë¿ë¿ë¿ë¿ë¿ë¿¡ì¼ìììì ì¨ì©ììììì ì¡ì£ì¥ì¬ì­ì¯ì°ì³ì´ìµì¶ì¼ì½ì¿ììììììììììììì¤"],["bc41","íª",17,"í¾í¿íííííí"],["bc61","íííííí",5,"íííííí¡",6,"íªí¬í®"],["bc81","í¯",4,"íµí¶í·í¹íºí»í½",6,"ííí",5,"í",5,"ì¥ì¨ì¬ì´ìµì·ì¹ìììììì",4,"ì£ì¤ì¦ì§ì¬ì­ì¯ì°ì±ì¶ì¸ì¹ì¼ììììììììììì¤ì¥ì§ì¨ì©ì°ì´ì¸ììììììììììì¡ì¥ì¨ì©ì¬ì°ì½ììììììì ì¤ì¨ì°ì±ì³ì¼ì½ììììììììììì ì¨ì©ì«ì­"],["bd41","íí",7,"í¢í¤",7,"í®í¯í±í²í³íµí¶í·"],["bd61","í¸í¹íºí»í¾íí",5,"í",13],["bd81","í",5,"í",25,"ì¯ì±ì²ì´ìììììì ì¥ì¬ì­ì°ì´ì¼ì½ì¿ìììììììì¤ì¥ì¨ì¬ì­ì´ìµì·ì¹ììì ì£ì¤ì«ì¬ì­ì¯ì±ì¶ì¸ì¹ì»ì¼ììììììììììì¤ì¥ì¨ì©ìì¨ì©ì¬ì°ì²ì¸ì¹ì¼ì½ììììììììì ì¢ì¨ì©ì­ì´ìµì¸ììì¤ì¬ì°"],["be41","í¸",7,"íííí",14],["be61","í",7,"íííí¡í¢í£í¥",7,"í®í°í±í²"],["be81","í³",4,"íºí»í½í¾íí",4,"ííí",5,"í",8,"ì´ì¼ì½ìì¤ì¥ì¨ì¬ì´ìµì¹ìììì¸ì¼ì©ì°ì±ì´ì¸ìºì¿ììììììì¨ì©ì¬ì°ì¸ì¹ì»ì½ììììììììììììììììì ì¡ì¤ì¨ì°ì±ì³ì´ìµì¼ì½ìììììììììììì ì©ì´ìµì¸ì¹ì»ì¼ì½ì¾ì",6,"ìì"],["bf41","í",10,"íª",14],["bf61","í¹",18,"ííííííí"],["bf81","í",5,"ííí ",7,"í©íªí«í­í®í¯í±",6,"í¹íºí¼ììììì ì¡ì£ì¥ì¬ì­ì®ì°ì´ì¶ì·ì¼",5,"ììììììììììì¤ì¥ì¨ì¬ì­ì®ì°ì³ì´ìµì·ì¹ì»ìììììììììììì ì¬ì¯ì±ì¸ì¹ì¼ìììììììììì¤ì¥ì§ì©ì°ì±ì´ì¸ì¹ìºììììììììììì ì¡ì¨"],["c041","í¾",5,"ííííííí",6,"íí",5],["c061","í",25],["c081","í¸í¹íºí»í¾í¿íííí",6,"ííí",5,"íííííí¡í¢í£ì©ì¬ì°ì¸ì¹ì½ììììììììì ì¡ì¤ì¨ì°ì±ì³ìµì·ì¼ì½ììììììì",7,"ìì ì¨ì«ì´ìµì¸ì¼ì½ì¾ìììììììììììììììì ì¡ì£ì¤ì¥ì¦ì¬ì­ì°ì´ì¼ì½ì¿ìììììììììì¤ì¨ì¬ì ì ì ì ì "],["c141","í¤í¦í§íªí¬í®",5,"í¶í·í¹íºí»í½",6,"ííí"],["c161","ííííí",19,"í¦í§"],["c181","í¨",31,"ì ì ì ì ì ì ì ì  ì ¤ì ¬ì ­ì ¯ì ±ì ¸ì ¼ì¡ì¡ì¡ì¡ì¡ì¡ì¡°ì¡±ì¡´ì¡¸ì¡ºì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢¡ì¢¨ì¢¼ì¢½ì£ì£ì£ì£ì£ì£ì£ì£ ì£¡ì£¤ì£µì£¼ì£½ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤¬ì¤´ì¥ì¥ì¥ì¥ì¥ ì¥¡ì¥£ì¥¬ì¥°ì¥´ì¥¼ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì§ì§ì§ì§ì§ì§ì§ì§ì§"],["c241","ííííííí",4,"ííí",5,"í¦í§í©íªí«í­í®"],["c261","í¯",4,"í¶í¸íº",5,"íííííí",6,"í"],["c281","í",5,"íííí¡í¢í£í¥",7,"í®",9,"íºí»ì§ì§ì§ì§ì§ì§ì§ ì§¢ì§¤ì§§ì§¬ì§­ì§¯ì§°ì§±ì§¸ì§¹ì§¼ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨©ì©ì©ì©ì©ì©ì©ì©ì© ì©¡ì©¨ì©½ìªìªìª¼ìª½ì«ì«ì«ì«ì«ì«ì«ì«ì«ì« ì«¬ì«´ì¬ì¬ì¬ì¬ì¬ ì¬¡ì­ì­ì­ì­ì­ì­ì­ì­ì­¤ì­¸ì­¹ì®ì®¸ì¯ì¯¤ì¯§ì¯©ì°ì°ì°ì°ì°ì°ì°¡ì°¢ì°§ì°¨ì°©ì°¬ì°®ì°°ì°¸ì°¹ì°»"],["c341","í½í¾í¿ííííííííííííííííííí",4],["c361","í¢",4,"í¨íª",5,"í²í³íµ",11],["c381","íííí",5,"íííííí",7,"íí í¢",5,"í©íªì°¼ì°½ì°¾ì±ì±ì±ì±ì±ì±ì±ì±ì±ì± ì±¤ì±¦ì±¨ì±°ì±µì²ì²ì²ì² ì²¨ì²©ì²«ì²¬ì²­ì²´ì²µì²¸ì²¼ì³ì³ì³ì³ì³ì³ì³¤ì³¬ì³°ì´ì´ì´ì´ì´ì´ì´ì´ì´ì´¤ì´¨ì´¬ì´¹ìµìµ ìµ¤ìµ¬ìµ­ìµ¯ìµ±ìµ¸ì¶ì¶ì¶ì¶ì¶ì¶¤ì¶¥ì¶§ì¶©ì¶°ì·ì·ì·ì·¨ì·¬ì·°ì·¸ì·¹ì·»ì·½ì¸ì¸ì¸ì¸ì¸ì¸ ì¸¡ì¸¤ì¸¨ì¸°ì¸±ì¸³ì¸µ"],["c441","í«í­í®í¯í±",7,"íºí¼",7,"ííííí"],["c461","íííííííííí",5,"í¡í¢í£í¥í¦í§í©",4],["c481","í®í¯í±í²í³í´í¶",5,"í¾í¿íííí",11,"íííì¹ì¹ì¹ì¹ì¹ ì¹¡ì¹¨ì¹©ì¹«ì¹­ì¹´ì¹µì¹¸ì¹¼ìºìºìºìºìºìºìºìºìº ìº¡ìº£ìº¤ìº¥ìº¬ìº­ì»ì»¤ì»¥ì»¨ì»«ì»¬ì»´ì»µì»·ì»¸ì»¹ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ ì¼¤ì¼¬ì¼­ì¼¯ì¼°ì¼±ì¼¸ì½ì½ì½ì½ì½¤ì½¥ì½§ì½©ì½°ì½±ì½´ì½¸ì¾ì¾ì¾ì¾¡ì¾¨ì¾°ì¿ì¿ ì¿¡ì¿¤ì¿¨ì¿°ì¿±ì¿³ì¿µì¿¼ííííí­í´íµí¸í¼"],["c541","ííííííííí¡",6,"íªí¬í®",5,"í¶í·í¹"],["c561","íºí»í½",6,"íííí",5,"íííí",4],["c581","íí¢í¤í¦í§í¨íªí«í­í®í¯í±í²í³íµ",6,"í¾í¿íí",5,"íííííííííí í¬í­í°í´í¼í½íí¤í¥í¨í¬í´íµí·í¹ííííííííííííí í¤í¬í­í¯í°í±í¸íí°í±í´í¸íºííííííííííííí¡í¨í¬í¼ííí í¡í¤í¨í°í±í³íµíºí¼ííí´í¸íííí¬í­í°í´í¼í½í¿ííí"],["c641","íííí",6,"ííí",5],["c6a1","í¤ííííííííí í¤í¬í±í¸í¹í¼í¿ííííííííí¤í¥í°í±í´í¸íííííííííííííí í¡í¥í¨í©í¬í°í¸í¹í»í¼í½ííí¼í½ííííííííííí í¨í©í«í­í´í¸í¼ííííííí¡í£í¬í­í°í´í¼í½í¿í"],["c7a1","íííííí í¤í­í¯í¸í¹í¼í¿íííííííí©íííííí¨í¬í°í¸í»í½ííííííí¼í½íííííííííí í¥í¨í©í«í­í´íµí¸í¼ííííííí¥íííííííííí¤í¥í¨í¬í´íµí·í¹ííííííííííí "],["c8a1","í¤í­í¸í¹í¼íííííííííííí§í©í°í±í´ííííííííí¡í¨í¬í°í¹í»ííííííííí í¤í¨í°íµí¼í½ííííííí í¨í©í«í­í´íµí¸í¼ííííííííííí í¡í£í¥í©í¬í°í´í¼í½ííííííííí"],["caa1","ä¼½ä½³åå¹å å¯åµå¥åå«å®¶ææ¶æ·æ¯æ­ççç¨¼èèè¡è¢è¨¶è³è·è»»è¿¦é§å»å´åæªæ¤æ®¼çèè¦ºè§é£ä¾åå¢¾å¥¸å§¦å¹²å¹¹ææææ¬æ¡¿æ¾ççç£µç¨ç«¿ç°¡èè®è±è««éä¹«åæ·æ¸´ç¢£ç«­èè¤èé¨ååå ªåµææ¾æ¡æ¢ææ©æ¸çç³ç£ç°ç´ºé¯ééé¾"],["cba1","å£å²¬ç²èééåå å§å²¡å´åº·å¼ºå½æ·æ±çºçç³ çµ³ç¶±ç¾èè¡èè¥è¬é¼éé±ä»ä»·åå±å¡æ·æ¾æ¨æ¹æ§ªæ¼ç¥ççç®è¥èï¤é§éåå®¢åï¤ç²³ç¾¹éµå¨å»å±å·¨ææ®ææ§æ¸ ç¬ç¥è·è¸ï¤é½éé¸ä¹¾ä»¶å¥å·¾å»ºææ¥è±èè¹éµé¨«ä¹åæ°æ¡åååæª¢"],["cca1","ç¼éé»å«æ¯è¿²åæ©æ­ææ ¼æªæ¿èè¦¡éå ç½ç¬ççµ¹ç¹­è©è¦è­´é£éµææ±ºæ½çµç¼ºè¨£å¼æç®è¬ééäº¬ä¿åå¾åååå¿å°å¢åºå¾æ¶æ¬ææ¬æ¯æ»æ´æ¢æ¶çç±çç¥ççç¡¬ç£¬ç«ç«¶çµç¶èè¿èèè­¦è¼éé¡é é ¸é©é¯¨ä¿åå ºå¥å­£å±æ¸ææ¡æ¢°"],["cda1","æ£¨æºªçç¸ç£ç¨½ç³»ç¹«ç¹¼è¨èª¡è°¿éé·å¤å©åå±åºå§å­¤å°»åº«æ·æ·ææ²æ æ¯æ§æ²½ç¼çç¾ç¨¿ç¾èè¡èè¦è½è°èè ±è¢´èª¥ï¤è¾é®éé¡§é«é¼å­ææ²æ¢ç©è°·éµ å°å¤å´ææ¢±æ£æ»¾ç¨è¢é¯¤æ±¨ï¤éª¨ä¾å¬å±åå­å·¥ææ­æ±æ§æ»çç©ºè£è²¢éä¸²å¯¡ææç"],["cea1","ç§èèªèª²è·¨ééé¡å»æ§¨è¿é­ï¤å å®å¯¬æ£æ£ºæ¬¾çç¯çç®¡ç½èè§è²«éé¤¨å®ææ¬éä¾åå¡å£å»£æ æ´¸çççç­è±éå¦æç½«ä¹åå¡å£æªæ§ææ§é­å®ç´è±è½äº¤åå¬å¬å¬å¶ å·§æªææ ¡æ©ç¡çç¯çµç¿¹è èèè¼è½éé¤é©é®«ä¸ä¹ä¹ä»ä¿±å·å¾"],["cfa1","åå£å¥åååµå¢å¯å¶å»æ¼æææ¸æ©æ§æ­æ¯æ¯¬æ±æºç¸çççç¿ç©ç©¶çµ¿èè¼èèèè¡¢è¬³è³¼è»éé±é¤é¶é§é©é³©é·é¾åå±èé é«éº´åçªç¾¤è£è»é¡å å±æçªå®®å¼ç©¹çª®èèº¬å¦å¸å¸å·åæ³æ²æ¬æ·ç·å¥çè¨è¹¶éæºæ«æ½°è©­è»é¥ï¤æ·æ­¸è²´"],["d0a1","é¬¼ï¤å«å­å¥ææ§»çªç¡çªºç«ç³¾èµè¦èµ³éµé¨å»åçç­ èéï¤æ©åååææ£æ¥µéåå¤å¤ææ¤æ ¹æ§¿ç¾ç­è¹è«è¦²è¬¹è¿é¥ï¤ä»å¦æææªç´ç¦ç¦½è©è¡¾è¡¿è¥ï¤é¦ä¼åæ¥æ±æ±²ç´çµ¦äºå¢çè¯ä¼ä¼å¶ååå¨å»åºå¼å¤å¥å¦å¯å²å´å·±å¹¾å¿æææ£"],["d1a1","ææææ£æ£æ©æ¬ºæ°£æ±½æ²æ·çç¦çªçç£ç¸ç¿ç¢ç£¯ç¥ç¥ç¥ç¥ºç®ç´ç¶ºç¾èè­èè¨è­è±èµ·é¡é¤é£¢é¥é¨é¨é©¥éºç·ä½¶åæ®æ¡éå«åºï¤ï¤å¨æ¦ï¤ææ¿ï¤",5,"é£ï¤",4,"è«¾ï¤ï¤ï¤ï¤æï¤çï¤ï¤é£ï¤ ææºåï¤¡ææ¥ æ¹³ï¤¢ç·ï¤£ï¤¤ï¤¥"],["d2a1","ç´ï¤¦ï¤§è¡²åå¨ï¤¨",4,"ä¹ï¤­å§å¥æ°èï¤®å¥³å¹´æç§å¿µæ¬ææ»å¯§å¯åªï¤¯å¥´å¼©æï¤°ï¤±ï¤²çï¤³",5,"é§ï¤¹",10,"æ¿ï¥ï¥è¿è¾²æ±ï¥ï¥è¦ï¥ï¥å°¿ï¥",7,"å«©è¨¥æ»ç´ï¥",5,"è½ï¥ï¥å°¼æ³¥å¿æººå¤è¶"],["d3a1","ä¸¹äº¶ä½å®åå£å½æ·æ¦æªæ®µæ¹ç­ç«¯ç°ç·èè¢é²éæ»æ¾¾çºç¸éååæºæææ·¡æ¹æ½­æ¾¹ç°èè½èè¦è«è­éæ²çç­è¸éåå å¡å¹¢æææ£ ç¶ç³è³é»¨ä»£åå®å¤§å°å²±å¸¶å¾æ´æ¡ç³èºè¢è²¸éé»å®å¾·æ³ååå°åå µå¡å°å± å³¶å¶åº¦å¾æ¼ææææ¡"],["d4a1","æ£¹æ«æ·æ¸¡æ»æ¿¤ç¾çç¹ç¦±ç¨»èè¦©è³­è·³è¹éééé½éé¶éæ¯ççç¢ç¨ç£ç¦¿ç¯¤çºè®å¢©ææ¦æ½æ¾æ²ççè±é ä¹­çªä»å¬åååæ§æ±æ¡æ£æ´æ½¼ç¼ç³ç«¥è´è£éåæææçç«è³ï¥è±éé ­å±¯èèéé¯éå¾å¶æ©çç»ç­è¤è¬é§é¨°åæ¶ï¥ç©ç¾"],["d5a1","è¿èºè£¸éï¥æ´çççµ¡è½ï¥éªé§±ï¥äºåµæ¬æ¬ç¾çè­é¸åè¾£åµæ¥æ¬æ¬æ¿«ç±çºèè¥¤è¦½æèè å»ææµªç¼çç¯èéä¾å´å¾ èå·æ ç¥äº®åå©åæ¢æ¨ç²®ç²±ç³§è¯è«è¼éä¾¶å·åµåå»¬æ®æ¾ææ«æ¿¾ç¤ªèè £é­é©¢é©ªéºé»åææ­·çç¤«è½¢éæææ£æ¼£"],["d6a1","ççç·´è¯è®è¼¦é£éå½åå£æ´çè£å»ææ®®æ¿ç°¾çµä»¤ä¼¶å¹ï¥å²ºå¶ºæç²ç¬­ç¾ç¿èéé´é¶éé é½¡ä¾æ¾§ç¦®é´é·åï¥ æææ«æ½ççç§èèèè·¯è¼é²é­¯é·ºé¹µç¢ç¥¿ç¶ èéé¹¿éºè«å£å¼æ§ç§çç± è¾å¡ç¨ç¢ç£è³è³è³´é·äºåå¯®å»æççç­èè¼"],["d7a1","é¼é¬§é¾å£å©å±¢æ¨æ·æ¼ç»ç´¯ç¸·èè¤¸é¤éåææ³æ¦´æµæºççç çç¤ç¡«è¬¬é¡å­æ®é¸ä¾å«å´æ·ªç¶¸è¼ªå¾ææ ï¥¡éåèååæ¥ç¨ç¶¾è±éµä¿å©åååå±¥æ§ææ¢¨æµ¬çç¸ççï¥¢ç¢ç±¬ç½¹ç¾¸èè£è£¡ééé¢é¯åæ½¾ççèºèºªé£é±éºææ·ç³è¨éç ¬"],["d8a1","ç«ç¬ ç²æ©çªç²ç¢¼ç£¨é¦¬é­éº»å¯å¹æ¼ èè«éä¸åå¨©å·å½æ¢æ½æ©æ¼æ»¿æ¼«ç£çè¬èè »è¼é¥é°»åæ¹æ«æ²«èè¥ªéºäº¡å¦å¿å¿æç¶²ç½èè«è½è¼éåå¦¹åªå¯æ§ææ¢æ¯ç¤ç½µè²·è³£éé­èè²éé©éº¥å­æ°çç²çèåªè¦åååæ£æ²çç ç¶¿ç·¬é¢éºµæ»"],["d9a1","èå¥åå½æææ¤§æºç¿çèèèé©éé³´è¢ä¾®ååå§å¸½ææ¸æ¹æ®ææ¨¡æ¯æ¯çç¡çç¸çèè¼èè¬è¬¨è²æ¨æ²ç§ç®ç¦ç©é¶©æ­¿æ²å¤¢æ¦èå¯å¢å¦å»ææ´æ³æ¸ºç«ç«èé¨åå·«æ®ææææ«æ æ¥æ­¦æ¯ç¡ç·çç¹èèèªèª£è²¿é§éµ¡å¢¨é»ååå»åæ"],["daa1","æ±¶ç´ç´èèéé¯å¿æ²ç©å³åªå°¾åµå½å¾®æªæ¢¶æ¥£æ¸¼æ¹çç±³ç¾èè¬è¿·é¡é»´å²·æ¶ææ«ææ»æ¼æ°æ³¯ççç·¡éå¯èè¬ååæææ²æ´æ¨¸æ³ççç®ç²ç¸èè¶èè¿«é¹é§ä¼´åååææ¬æææ§æ³®æ½ç­çç¢ç¤ç¼ç£ç£»ç¤¬çµè¬è è¿é é£¯åææ¥æ¸¤æ½"],["dba1","ç¼è·é±é¢é«®é­å£ååå¦¨å°¨å¹å½·æ¿æ¾æ¹ææææ¦æ»ç£ç´¡èªèè«è³è¡èè¨ªè¬é¦é²é¾åä¿³ï¥£å¹å¾æææ¯æ¹ççèèè£´è£µè¤è³ è¼©ééªä¼¯ä½°å¸ææ ¢ç½ç¾é­å¹¡æ¨ç©ççªï¥¤ç¹èè©é£ä¼ç­ç½°é¥å¡å¸æ¢µæ°¾æ±æ³ç¯ç¯èæ³çºå»åå£ææªç§ç"],["dca1","ç¢§èé¢é¹ï¥¥åå¼è®è¾¨è¾¯éå¥ç¥é±é¼ä¸ååµå±å¹·ææºææ£ç³ççç§ç«è¼§é¤ é¨ä¿å ¡å ±å¯¶æ®æ­¥æ´æ¹ºæ½½ç¤ç«è©è£è¤è­è¼ä¼åååå®å¾©æç¦è¹è¯èè¤è¦è¼¹è¼»é¦¥é°æ¬ä¹¶ä¿¸å¥å°å³¯å³°æ§æ£ç½ç¢ç«ç¸«è¬èé¢éé³³ä¸ä»ä¿¯ååå¯å¦åå å¤«å©¦"],["dda1","å­å­µå¯åºï¥¦æ¶æ·æ§æµ®æº¥ç¶ç¬¦ç°¿ç¼¶èèèèèè©è¨è² è³¦è³»èµ´è¶ºé¨éééé§é³§ååå©å´å¢³å¥å¥®å¿¿æ¤æ®ææ±¾ççç²ç³ç´è¬è³é°ï¥§ä½å¼å½¿æå´©ææ£ç¡¼ç¹éµ¬ä¸åååªåå¦å©¢åºæ²æææ¹æææ¦§æ¯æ¯æ¯æ¯æ²¸ï¥¨çµçºç ç¢ç§ç§ç²ç·ç¿¡è¥"],["dea1","è¾èè²èè£¨èª¹è­¬è²»ééé£é¼»å¬å¬ªå½¬ææª³æ®¯æµæ¿±ççç­è²§è³é »ææ°·èé¨ä¹äºäºä»ä¼ºä¼¼ä½¿ä¿å¿å²å¸åå£åå£«å¥¢å¨å¯«å¯ºå°å·³å¸«å¾ææ¨ææ¯æ¶æ»æ¢­æ­»æ²æ³æ¸£ççç ç¤¾ç¥ç¥ ç§ç¯©ç´çµ²èèèèèè£è©è©è¬è³èµ¦è¾­éªé£¼é§éºåï¥©æï¥ª"],["dfa1","ååªå±±æ£æ±çç£çç®èé¸é°ä¹·ææ®ºçè©ä¸ï¥«ææ£®æ¸èèè¡«æ·æ¾éé¢¯ä¸å·ååååªåå­å°å³ å¸¸åºåº å»æ³æ¡æ©¡æ¹ç½ççç¸ç¥¥ç®±ç¿è£³è§´è©³è±¡è³éå¡ç½è³½åï¥¬ç©¡ç´¢è²ç²çç¥ï¥­ç¬å¢å£»å¶¼åºåº¶å¾æææ¿ææææ¸æ æ£²ççç­®çµ®ç·ç½²"],["e0a1","è¥èè¯è¥¿èªéé¤é»é¼ å¤å¥­å¸­æææ³ææ±æ·æ½ç³ç¢©èéé«ä»åååå¬å®£ææ¾ææ¸²ç½çççç¿ç¬ç¦ªç·ç¹ç¾¨èºè³è¹èè¬è©µè·£é¸éé¥é¥é®®å¨å±æ¥æ³æ´©æ¸«èèè¤»è¨­èªªéªé½§å¡æ¹æ®²çºè¾è´ééææ¶ç®ï¥®åå§å®¬æ§æºæææç©ç¹ççç­¬"],["e1a1","èè²è¥èª éä¸å¢æ­²æ´ç¨ç¬¹ç´°ï¥¯è²°å¬å¯å¡å®µå°å°å·¢ææææ­æ¢³æ²¼æ¶æº¯çç¤çç¦çççç¬ç¯ ç°«ç´ ç´¹è¬è­èè¨´éé¡éµé·é¶é¨·ä¿å±¬ææ¶ç²çºè¬è´éå­«å·½æèéé£¡çå®ææ¾æ·è¨èª¦éé å·ï¥°çç¢éè¡°éä¿®åå½ååå£½å«å®å²«å³å¸¥æ"],["e2a1","æææææ¶æ¸æ¨¹æ®æ°´æ´æ¼±ç§ç©ç¸çç²ç¦ç¡ç§ç©ç«ªç²¹ç¶ç¶¬ç¹¡ç¾è©è±èèèªè¢èª°è®è¼¸ééé¬éé¹éé§é¨ééé é¦é«é¬åå¡¾å¤å­°å®¿æ·æ½çç¡ç¹èè½å·¡å¾å¾ªææ¬æ æ¥¯æ©æ®æ´µæ·³ç£ç¾ç¬ç­ç´è£èèè´è£è©¢è«ééé é¦´æè¡è¿°é¥å´å´§"],["e3a1","åµ©çèè¨æ¿æ¾ç¿è¤¶è¥²ä¸ä¹å§ååæ¿æç¹©è éä¾åå¶å§åª¤å°¸å±å±å¸å¼ææ½æ¯ææ¾æ´çç¢ç¤ºç¿èèè¦è©¦è©©è«¡è±è±ºå´å¯å¼æ¯æ­æ¤æ®æ¹çç¯èè­è»¾é£é£¾ä¼¸ä¾ä¿¡å»å¨ å®¸æ¼æ°æ¨ç¼ç³ç¥ç´³èè£èèªèèè¨èº«è¾ï¥±è¿å¤±å®¤å¯¦æå¯©å°å¿æ²"],["e4a1","ï¥²æ·±ççè¯è«¶ä»åï¥³éæ°äºä¿ååå¨¥å³¨æçè½èªè¾è¡è¨é¿éé¤é´éµå å²³å¶½å¹æ¡ææ¡æ¨æ¸¥ééé¡é°é½·å®å²¸æææ¡ç¼ééé¡é®æ¡è¬è»é¼åµå²©å·åºµæçè´éå£æ¼çé´¨ä»°å¤®ææ»æ®ç§§é´¦åååå´æææ¶¯ç¢è¾ééåæ¼ææ¶²ç¸èé¡"],["e5a1","æ«»ç½é¶¯é¸ä¹å»å¶å¤æ¹æ¶æ¤°çºè¶ï¥´éå¼±ï¥µï¥¶ç´è¥è¯è»è¥èºï¥·ä½¯ï¥¸ï¥¹å£¤å­ææææ­æï¥ºæ¥æ¨£æ´çç¬ççç¦³ç©°ï¥»ç¾ï¥¼è¥ï¥½è®éé½ï¥¾é¤åå¾¡æ¼æ¼çç¦¦èªé¦­é­é½¬åæ¶ææªèåå °å½¦çè¨è«ºå­¼èä¿ºå¼å´å¥æ©æ·¹å¶ªæ¥­åäºä½ï¥¿ï¦ï¦å¦ï¦"],["e6a1","ï¦æ­æ±ï¦çµç¤ï¦èèè¹è¼¿è½ï¦é¤ï¦ï¦ï¦äº¦ï¦åå½¹æï¦ï¦ç«ç¹¹è­¯ï¦éé©å¥å §å§¸å¨å®´ï¦å»¶ï¦ï¦ææ»ï¦æ¤½æ²æ²¿æ¶æ¶æ·µæ¼ï¦çç¶çï¦ççï¦ç¡ç¡¯ï¦ç­µç·£ï¦ç¸¯ï¦è¡è»ï¦ï¦ï¦éï¦é³¶ï¦ï¦ï¦ææ¶ï¦ç±ï¦ ï¦¡é±å­ï¦¢ï¦£ï¦¤æï¦¥çç°ç°è¶è"],["e7a1","ï¦¦é»é«¥é¹½æï¦§çèï¦¨ï¦©å¡ï¦ªï¦«å¶¸å½±ï¦¬æ ææ¥¹æ¦®æ°¸æ³³æ¸¶æ½æ¿çç¯ççç°ï¦­çï¦®ççç©çºï¦¯ï¦°è±è© è¿ï¦±éï¦²éï¦³ï¦´ä¹åªï¦µåå¡æ³æ±­æ¿çç¿ç©¢è®èèï¦¶è£è©£è­½è±«ï¦·é³ï¦¸éé äºä¼ä¿å²åå¾å³åå¡¢å¢ºå¥§å¨å¯¤æï¦¹æææ¿æ¤æ¢§æ±æ¾³"],["e8a1","çç¬çç­½èèª¤é°²é¼å±æ²ççéºæº«ç¥çç©©ç¸èåå£æç®çç°ç¿ééé¥æ¸¦ç¦çª©çªªè¥èè¸è¨å©å®å®æ¢¡æ¤æµ£ç©çç¬ç¢ç·©ç¿«èèèè±é®é æ°å¾æºææ±ªçå­å¨æ­ªç®å¤åµ¬å·ç¥çï¦ºï¦»å¥å¹å ¯å¤­å¦å§å¯¥ï¦¼ï¦½å¶¢ææææ¾ï¦¾æï¦¿æ©ï§ç¿ç¤ï§"],["e9a1","çªçª¯ç¹ç¹èè°ï§è¯è¦è¬ éï§éé¥æ¾æ¬²æµ´ç¸è¤¥è¾±ä¿å­åååå¢å®¹åº¸ææ¦æ¶æ¹§æº¶çç¢ç¨ç¬è³è¸èè¸ééï§äºä½å¶åªååå³å®å¯å°¤æææ´ççççç¥ç¦ç¦¹ç´ç¾½èèèè¿ééµéªéé¨é©åå½§æ­æ±æ ¯çç¨¶éé äºï§æ©æ®æ¾çèè¸è"],["eaa1","ééé²é»èé¬±äºçéååå¡ååå£åªå«å¯æ¨æ¿æ´æ²æ´¹æ¹²æºç°ç¿çèè¢è½é ï§é¢é¡é´æè¶éä½ååå±åå§å¨å°æ°ææ¸­ç²çç·¯èèè¦è¿èè¡è¤è¬ééé­ä¹³ä¾ååªï§å¯å©å­ºå®¥å¹¼å¹½åº¾æ æææææ¸æï§ææï§æ¥¡æ¥¢æ²¹æ´§ï§æ¸¸ï§"],["eba1","æ¿¡ç¶ç·ï§çç±ï§çï§ï§ç¶­è¾è¸è£èªè«è«­è¸°è¹éé¾éºééé®ï§ï§å ï§æ¯èè²ï§ï§åå¥«å°¹ï§ï§æ½¤ç§è¤è´ï§ééï§ï§ï§ï§è¿æççµ¨èï§å æ©ææ®·èª¾éé±ä¹åæ·«è­é°é³é£®ææ³£éåæèºé·¹ä¾ååå®ææ¿æ¬æ¤æ¯çç£ç¾©è¤èè»è¡£èª¼"],["eca1","è­°é«äºä»¥ä¼ï§ï§å¤·å§¨ï§å·²å¼å½æ¡ï§ ï§¡ï§¢ï§£ç¾ç¥ï§¤ç°çï§¥ç§»ï§¦èè³èè¡èï§§ï§¨è²½è²³éï§©ï§ªé£´é¤ï§«ï§¬ç·çç¿ç¿ç¿¼è¬äººä»åå°ï§­å½å å§»å¯å¼å¿æ¹®ï§®ï§¯çµªèµï§°èèªï§±é­é·ï§²ï§³ä¸ä½ä½¾å£¹æ¥æº¢é¸é°é¦¹ä»»å£¬å¦å§æï§´ï§µç¨ï§¶èè³å¥å"],["eda1","ï§·ï§¸ï§¹ä»å©å­è¿ä»åºå¨å§å§¿å­å­å­æ£ææ»çç®çç·çµç£ç´«èèªè¨èèè«®è³éä½åºå¼æ«æ¨ç¼ç¸çµç¶½èéééµ²å­±æ£§æ®æ½ºçå²æ«æ½ç®´ç°ªè ¶éä¸ä»å å ´å¢»å£¯å¥¬å°å¸³åºå¼µææ²ææ¨æª£æ¬æ¼¿çï§ºççç« ç²§è¸èè§èè¬è£èèè£è´é¬é·"],["eea1","éååå¨å®°æææ ½æ¢æ¸½æ»ç½ç¸¡è£è²¡è¼é½é½ç­ç®è«éä½ä½å²åå§åºæµæµæ¥®æ¨æ²®æ¸ççªç½ç®¸ç´µè§è¹èè·è©è²¯èºéé¸éé½å£åå«¡å¯ææµæ»´çï§»çç©ç¬ç±ç¸¾ç¿è»è¬«è³èµ¤è·¡è¹è¿ªè¿¹é©éä½ä½ºå³å¨å¸ååªå¡¡å¡¼å¥ å°å±å»ææ°æ æ®¿æ°æ¾±"],["efa1","çç ç°ç¸çç²ç­ç®ç®­ç¯çºè©®è¼¾è½é¿éé¢é«é»é¡é¡«é¤åæªææµç¤ç«ç¯çµ¶å å²¾åºæ¼¸ç¹ç²éé®é»æ¥æºè¶ä¸äºäº­ååµåå§å®å¹åº­å»·å¾ææºæ¿æ´ææ¶æ¸æ¾æ¥¨æªæ­£æ±æ·æ·¨æ¸æ¹çç¡çç½çºçç¢ç¦ç¨ç©½ç²¾ç¶èè¨è«ªè²é­ééé¦éé éé"],["f0a1","éé é¼å¶åå¼å ¤å¸å¼æææ¢¯æ¿ç¥­ç¬¬èèºè£½è«¸è¹éé¤éé½é¡é½ä¿ååå©å²å¼å½«æªææ©ææºæ¹ææ¢æ£æ§½æ¼æ½®ç§ç¥çªçªçºç¥ç¥ç§ç¨ çªç²ç³çµç¹°èè»è¤è©èª¿è¶èºé é­é£é»éé³¥æç°è¶³éå­å°åæçå§å®å¾æ°æ«æ£æ·ç®ç¨®çµç¶ç¸±è«"],["f1a1","è¸ªè¸µé¾éä½åå·¦åº§æ«ç½ªä¸»ä½ä¾åå§èåªå¨å¾å¥å®å·å»ææ±æ±æ ªæ³¨æ´²æ¹æ¾ç·ç çç±ç´ç´¬ç¶¢èèè¨»èªèµ°èºè¼³é±éééé§ç«¹ç²¥ä¿åååå¯¯å³»ææ¨½æµæºæ¿¬çç¯ç«£è ¢é¡éµéé§¿èä¸­ä»²è¡éå½æ«æ¥«æ±èºå¢ææ¾æ¯çççç¹è¸è­è´ä¹åª"],["f2a1","å«å°åå¿æææ¯æ¯æ¨æºææ³æ­¢æ± æ²æ¼¬ç¥ç ¥ç¥ç¥ç´è¢èè³èè·èèªï§¼è´è¶¾é²ç´ç¨ç¨·ç¹è·ååå¡µæ¯æ¢æææ¡­æ¦æ®æ´¥æº±çç¨ç¡çç¹ç¡ççç§¦ç¸ç¸è»è¯è¢è¨ºè³è»«è¾°é²é­é£é³éä¾å±å§ªå«å¸æ¡çç¾ç§©çªè£è­è³ªè·è¿­ææï§½å·æ½ç·è¼¯"],["f3a1","é¶éå¾µæ²æ¾ä¸ä¾ååååµ¯å·®æ¬¡æ­¤ç£ç®ï§¾è¹è»é®ææ¾ççªé¯é¿é½ªæ°æ¾¯ç¦ç¨çç«ç°çºç²²çºè®è´é½é¤é¥å¹å¯æ¦æ­ç´®å­åå¡¹æææºæ¬ç«è®è®åå¡åµå±å¨¼å» å½°æ´æææ¶æ¢æ§æ»æ¼²çç¡çªè¹èèè¼åµå°å¯å¯¨å½©æ¡ç ¦ç¶µèè¡ééµåæµç­"],["f4a1","è²¬åå¦»æ½èåï§¿åå°ºæ½æææ²æ¥æ»ç èè¹ éé»ä»ååå¤©å·ææ³æ·ºçç©¿èè¦è³¤è¸é·é§é¡é¡éå¸å²åå¾¹æ¤æ¾ç¶´è¼è½éµåå°æ²¾æ·»çç»ç°½ç±¤è©¹è«å å¦¾å¸æ·ççç«è«è²¼è¼å»³æ´æ·¸è½èè«éé¯ï¨åæ¿æ¶æ»¯ç· è«¦é®éé«åå¿å¨ææææ¢¢"],["f5a1","æ¤æ¥æ¨µçç¦ç¡ç¤ç¤ç§ç¨èè¸èèèè²è¶é¢éé®ä¿åç­çèè§¸å¯¸å¿æé¨å¢å¡å¯µæ¤ææ ç¸½è°è¥éæ®å¬å´æå¢æ½æ¨æ¤æ¥¸æ¨æ¹«çºç§è»è©è«è¶¨è¿½éééééééé¨¶é°ä¸çç¥ç«ºç­ç¯ç¸®èè¹è¹´è»¸éæ¥æ¤¿çåºæ®é»åå¿ æ²è²è¡è¡·æ´èµè"],["f6a1","è´åå¹å´å¨¶å°±çç¿ èèè­è¶£éé©é·²å´ä»å æ»æ¸¬å±¤ä¾å¤å¤å³å¹æ¥æ¢æ²»æ·ç¾çç´ç¡ç¨ç©ç·ç·»ç½®è´è©è¼éé¦³é½ååé£­è¦ªä¸ææ¼ä¾µå¯¢ææ²æµ¸çç §éé¼èç§¤ç¨±å¿«ä»å¤å¾å¢®å¦¥æ°æææ¶æ¥èµéé¦±é§å¬ååå¼ï¨æï¨æ¢æ«ææ¿æ¿¯ç¢ç¸è¨"],["f7a1","é¸ååå¦å½ææ­çç­ç¶»èªå¥ªè«æ¢çè½è²ªå¡æ­æ¦»å®å¸æ¹¯ï¨è©åå°å¤ªæ ææ®æ±°æ³°ç¬èèè·é°é¢±ï¨ææ¾¤ææåååè¨ææ¡¶ï¨çç­çµ±éå æ§è¿è¤ªéé ¹å¸å¥å¦¬æéé¬ªæç¹éå¡å©å·´ææ­æºæ·æ³¢æ´¾ç¬ç¶ç ´ç½·è­è·é å¤åæ¿çç£è²©è¾¦é"],["f8a1","éªå«å­æä½©åæææ²æµ¿çç½ç¨è¦è²å½­æ¾ç¹è¨æä¾¿åæçç¯ç·¨ç¿©éé­é¨è²¶åªå¹³æ°èè©å å¬å¹£å»¢å¼æèºè½ééä½åååååºåå¸æææ±æï¨æ³¡æµ¦ç±ç ²èè¯èè¡è²è¢è¤ééªé£½é®å¹æ´æççï¨ä¿µå½å½ªæææ¨æ¼ç¢ç¥¨è¡¨è±¹é£é£é©"],["f9a1","åç¨æ¥è«·è±é¢¨é¦®å½¼æ«ç²ç®è¢«é¿éå¹å¼¼å¿æ³çç¢çç­è¾é¦ä¹é¼ä¸ä½å¦å¤å»æ°æ²³çè·è¦è³ééé°å£å­¸èè¬é¶´å¯æ¨ææ±æ±æ¼¢æ¾£çç½ç¿°ééééå²è½å½å«å¸å£åæª»æ¶µç·è¦éé·é¹¹ååçè¤é¤ééäº¢ä¼å§®å«¦å··æææ­æ¡æ²æ¸¯ç¼¸èèª"],["faa1","ï¨ï¨é äº¥åå³åå¥å­©å®³ææ¥·æµ·ç£è¹è§£è©²è«§éé§­éª¸å¾æ ¸åå¹¸æèè¡äº«åå®ç¦éé¿é¤é¥é¦åå¢èè¨±æ²æ«¶ç»è»æ­éªé©å¥çèµ«é©ä¿å³´å¼¦æ¸ææ³«ç«çç¹ç¾ç©ççµçµ¢ç¸£è·è¡ï¨è³¢éé¡¯å­ç©´è¡é å«ä¿ åå¤¾å³½æ¾æµ¹ç¹èèè¢éé °äº¨ååå"],["fba1","å½¢æ³æ»ççç¯çç©ç©èè¢è¡¡éé¢é£é¦¨å®å½æ æ§æ³èè¹é¯éä¹äºå¼å£å£ºå¥½å²µå¼§æ¶æææ§æ¯«æµ©æ·æ¹æ»¸æ¾æ¿ æ¿©ççç¥çç çç¥ç³ç¸è¡è¦è«è¿èèè´è­·è±ªé¬é é¡¥ææé·å©ææ··æ¸¾ç¿é­å¿½æç¬åå¼æ±æ³æ´ªçç´è¹è¨é´»ååå¬æ¨ºç«çµ"],["fca1","ç¦ç¦¾è±è¯è©±è­è²¨é´ï¨æ´æ«ç¢ºç¢»ç©«ä¸¸åå¥å®¦å¹»æ£ææ­¡æ¥æ¡æ¸ç¥ç°ç´éé©©é°¥æ´»æ»ç¾è±éå°å¹å¾¨ææ¶æ°ææææ¦¥æ³æ¹æ»æ½¢çççç¯ç°§èèééé»å¯åå»»å¾æ¢ææ·æ¦ææªæ·®æ¾®ç°çªç¹ªè¾è´èèª¨è³åç²å®æ©«éå®åå­ææææ¢æ¶æ·"],["fda1","ç»è´éµé©ä¾¯åååå¼ååå¸¿å¾æ½ç¦çéåå³å¡¤å£ççç»è°è¨æè¨å§æçè±ååæ¯å½å¾½æ®æçè«±è¼éº¾ä¼æºçç¦è§æ¤è­é·¸åå¶åæ´¶è¸é»ææ¬£ççåå±¹ç´è¨æ¬ æ¬½æ­å¸æ°æ´½ç¿èåååå«åå§¬å¬å¸æææ±ææ¦çç¹çºç§ç¦§ç¨ç¾²è©°"]]');
            }
          ),
          /***/
          74284: (
            /***/
            function(u) {
              u.exports = JSON.parse('[["0","\\u0000",127],["a140","ãï¼ããï¼â§ï¼ï¼ï¼ï¼ï¸°â¦â¥ï¹ï¹ï¹Â·ï¹ï¹ï¹ï¹ï½âï¸±âï¸³â´ï¸´ï¹ï¼ï¼ï¸µï¸¶ï½ï½ï¸·ï¸¸ããï¸¹ï¸ºããï¸»ï¸¼ããï¸½ï¸¾ããï¸¿ï¹ããï¹ï¹ããï¹ï¹ï¹ï¹"],["a1a1","ï¹ï¹ï¹ï¹ââââããâµâ²ï¼ï¼ï¼â»Â§ãâââ³â²ââââââ¡â â½â¼ã£âÂ¯ï¿£ï¼¿Ëï¹ï¹ï¹ï¹ï¹ï¹ï¹ï¹ ï¹¡ï¼ï¼ÃÃ·Â±âï¼ï¼ï¼â¦â§â âââ¡ï¹¢",4,"ï½â©âªâ¥â ââ¿ããâ«â®âµâ´âââââââââââââ¥â£ï¼"],["a240","ï¼¼âï¹¨ï¼ï¿¥ãï¿ ï¿¡ï¼ï¼ ââï¹©ï¹ªï¹«ãããããã¡ãããÂ°ååååå¡å£å§ç©ç³â",7,"ââââââââ¼â´â¬â¤ââââââââââ­"],["a2a1","â®â°â¯âââªâ¡â¢â£â¥â¤â±â²â³ï¼",9,"â ",9,"ã¡",8,"åååï¼¡",25,"ï½",21],["a340","ï½ï½ï½ï½Î",16,"Î£",6,"Î±",16,"Ï",6,"ã",10],["a3a1","ã",25,"ËËËËË"],["a3e1","â¬"],["a440","ä¸ä¹ä¸ä¸ä¹ä¹äºäºäººå¿å¥å«å åååååååä¸ä¸ä¸ä¸ä¸«ä¸¸å¡ä¹ä¹ä¹ä¹äºäº¡åååºååå£åå£«å¤å¤§å¥³å­å­å­å¯¸å°å°¢å°¸å±±å·å·¥å·±å·²å·³å·¾å¹²å»¾å¼å¼æ"],["a4a1","ä¸ä¸ä¸ä¸­ä¸°ä¸¹ä¹å°¹äºäºäºäºäºäº¢ä»ä»ä»ä»ä»ä»ä»ä»ä»ååå§å­å®å¬åå¶åååå»å¾å¿åå¹ååååååååå£¬å¤©å¤«å¤ªå¤­å­å°å°¤å°ºå±¯å·´å¹»å»¿å¼å¼å¿ææ¶æææ¯æææ¤æ¹æ¥æ°ææ¨æ¬ æ­¢æ­¹æ¯æ¯æ¯æ°æ°´ç«çªç¶ç»çççç¬çä¸"],["a540","ä¸ä¸ä¸ä¸ä¸»ä¹ä¹ä¹ä»¥ä»ä»ä»ä»ä»ä»£ä»¤ä»ä»ååååå¬å¹åºå¸åå åååååä»ååå¡å å¯å®å»å¯å¤å³å¬å®å©å¨å¼å¸åµå«å¦åªå²å±å°å¥å­å»ååå¤"],["a5a1","å¤®å¤±å¥´å¥¶å­å®å°¼å·¨å·§å·¦å¸å¸å¹³å¹¼å¼å¼å¼å¿ææææææ¥æ¦æ®æ¬æªæ«æ­æ­£æ¯æ°æ°æ°¸æ±æ±æ°¾ç¯çççç¦ççç¨ç©ç°ç±ç²ç³çç½ç®ç¿ç®çç¢ç³ç¤ºç¦¾ç©´ç«ä¸ä¸ä¹ä¹ä¹©äºäº¤äº¦äº¥ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä»²ä»¶ä»»ä»°ä»³ä»½ä¼ä¼ååååå¨"],["a640","å±åå°åååååå£åå¡å å°å±åååååååååååååååå ååå³å°å¨å­å¬å¯å©å¤å¤å¤·å¤¸å¦å¥¸å¦å¥½å¥¹å¦å¦å­å­å®å®å®å®å¯ºå°å±¹å·å¸å¹¶å¹´"],["a6a1","å¼å¼å¿å¿æææææ£æææ¶æ©æ¨æ¬æ­æ²æ³ææ½æ´æ±æµæ¬¡æ­¤æ­»æ°æ±æ±æ±æ±æ± æ±æ±æ±¡æ±æ±æ±ç°ççç¾ç«¹ç±³ç³¸ç¼¶ç¾ç¾½èèèèè³è¿èèèè£èªè³è¼èèèè®è²è¾è«è¡è¡è¡£è¥¿é¡ä¸²äº¨ä½ä½ä½ä½ä½ä¼´ä½ä½ä¼°ä½ä½ä¼½ä¼ºä¼¸ä½ä½ä¼¼ä½ä½£"],["a740","ä½ä½ ä¼¯ä½ä¼¶ä½ä½ä½ä½ååååµå¶å·å¥å¤å©åªå¨å«å©åªå¬å£å³åµåå­åå¾å¦åå§ååå³åååå©åå¹å»å¸å®åµå¶å å¼åå±å«åå¬åªå°å¤å«åååå"],["a7a1","ååå¾ååå»å£¯å¤¾å¦å¦å¦¨å¦å¦£å¦å¦å¦å¦¤å¦å¦å¦¥å­å­å­å­å®å®å®å°¬å±å±å°¿å°¾å²å²å²å²å·«å¸åºåºåºå»·å¼å¼å½¤å½¢å½·å½¹å¿å¿å¿å¿å¿±å¿«å¿¸å¿ªæææææææ¶ææ­ææ¼æ¾æ¹æ³ææ¯ææ®æææææ¹æ»æ¸æ±æ´æææææææææææ "],["a840","æææ­¥æ¯æ±æ±æ²æ²æ²æ²æ²æ²æ±ªæ±ºæ²æ±°æ²æ±¨æ²æ²æ±½æ²æ±²æ±¾æ±´æ²æ±¶æ²æ²æ²æ²ç¶ç¼ç½ç¸ç¢ç¡ç çççç¬ç«ç·ç¸çç¯ç£ç§ç§ç¦¿ç©¶ç³»ç½èèèèèèè²è¯è"],["a8a1","èèè¦è§è¨è°·è±è±è²èµ¤èµ°è¶³èº«è»è¾è¾°è¿è¿è¿è¿å·¡éé¢éªé¦é£éééé²é®é±éªé¬ä¸¦ä¹ä¹³äºäºäºäº«äº¬ä½¯ä¾ä¾ä½³ä½¿ä½¬ä¾ä¾ä¾ä¾ä½°ä½µä¾ä½©ä½»ä¾ä½¾ä¾ä¾ä½ºåååå©å·å¶å¸å½å½å»å¸å·åºå°å®å¶åå¾å»ååååå¦å·å¸å¹åååå³åµ"],["a940","åå¸ååå»å·åååå¼åå±å¶ååå¢å¨åå½ååºåå·åªå©å¡å¦å¤å¼å¤å¥å¥å¥å¥å¥å¦¾å¦»å§å¦¹å¦®å§å§å§å§å§å§å§å¦¯å¦³å§å§å­å­¤å­£å®å®å®å®å®å®å°å±å±"],["a9a1","å±å²·å²¡å²¸å²©å²«å²±å²³å¸å¸å¸å¸å¸å¸å¹¸åºåºåºåºåºå»¶å¼¦å¼§å¼©å¾å¾å½¿å½¼å¿å¿ å¿½å¿µå¿¿æææ¯æµææªææ¡æ§æ©æ«ææææ¿æ¾ææ¿ææææ¿ææ¹æææ«æææææ¨æ½æ¼æææææµææ±æææææ¬ææ¾æ§æ¼æºææææææææææ"],["aa40","ææææ­æææ±ææ³æ·ææææ¯æ°æ¿ææ¾ææµæææ¼æªæ²æ¬£æ­¦æ­§æ­¿æ°æ°æ³£æ³¨æ³³æ²±æ³æ³¥æ²³æ²½æ²¾æ²¼æ³¢æ²«æ³æ³æ²¸æ³æ²¹æ³æ²®æ³æ³æ³±æ²¿æ²»æ³¡æ³æ³æ²¬æ³¯æ³æ³æ³ "],["aaa1","çççççç¬ç­ç¸çç§ç©çççççç©ç¨çç«ç¥ç½çççççç²ç´ç¥ç½ç¤¾ç¥ç¥ç§ç§ç©ºç©¹ç«ºç³¾ç½ç¾ç¾èèºè¥è¢è±è¡è«è©è´èªè¯è¥è¾èè³èèè­è½èè¹è±è¬è¥è¯è¸è£è°è¾è·èè±åè¡¨è»è¿è¿è¿éµé¸é±é¶ééé·éééé¿é»é"],["ab40","éé¹é¨ééäºäº­äº®ä¿¡ä¾µä¾¯ä¾¿ä¿ ä¿ä¿ä¿ä¿ä¾¶ä¿ä¿ä¿ä¿ä¾®ä¿ä¿ä¿ä¿ä¿ä¿ä¾·åååå åååååååååååååå»ååå¬åå¨ååå¸å¦å³ååå½åªå"],["aba1","ååå¯å«å±å»å©å§å¿å¿ååå å£å¢åå®åå¥å¥å¥å¥å¥å§å§å§¿å§£å§¨å¨å§¥å§ªå§å§¦å¨å§»å­©å®£å®¦å®¤å®¢å®¥å°å±å±å±å±å³å³å··å¸å¸¥å¸å¹½åº åº¦å»ºå¼å¼­å½¥å¾å¾å¾å¾å¾å¾å¾æææ æ¥ææ¨ææ°æ¨æ¢æææ¬æ«æªæ¤æææææ¼æ­ææ®æ½ææ±æ·"],["ac40","æ¯æ¬æ¾æ´æææ¿ææ«æ½æ¢æ¥æ­æ æ§æ¯ææ¨æ±æ¤æ·æ¿ææ±æææ¬æ¶æ¯æµæ©æ¯æææ´ææ¥æ¸æææ³æ°ææ¢æææ­ªæ®æ®æ®µæ¯æ¯æ°æ³æ´æ´²æ´ªæµæ´¥æ´æ´±æ´æ´"],["aca1","æ´»æ´½æ´¾æ´¶æ´æ³µæ´¹æ´§æ´¸æ´©æ´®æ´µæ´æ´«ç«çºç³ç¬ç¯ç­ç¸ç®ç¤ç°ç²ç¯ç´ç©ç ç¡ç·çç»ç²ççç³çç­ççççç«ç¤ç¥ç¢ç£ç¸ççççççççç¹ç¸ççç¾ç¼ççç ç ç ç ç¥ç¥ç¥ç¥ç¦¹ç¦ºç§ç§ç§ç©¿çªç«¿ç«½ç±½ç´ç´ç´ç´ç´ç´ç´ç¼¸ç¾ç¾¿è"],["ad40","èèèè¶èè¥èèèèè¡èèèè¤èè´è¢è§èèè£èè¦èè¥èèèèè±èèèèèèèè¯èèè¹è»èºè¡è¡«è¦è§è¨è¨è¨è²è² èµ´èµ³è¶´è»è»è¿°è¿¦è¿¢è¿ªè¿¥"],["ada1","è¿­è¿«è¿¤è¿¨ééééééééééééé¢é©éé­é³é é¢¨é£é£é¦é¦ä¹äº³ååå£ä¿¯å¦å¥ä¿¸å©ååå¼ååååä¿ºååå¨ä¿±å¡åååä¿³ä¿®å­åªä¿¾å«åå¼å¤å¥å¢ååååååååååªå¿åååå¨ååå·å¼å¥å²ååºåå©å­å¡åå®åª"],["ae40","å¦å§åå½åååååååå å¤å¥å¥å¥å¨å¨å¨å¨å¨å¨å§¬å¨ å¨£å¨©å¨¥å¨å¨å­«å±å®°å®³å®¶å®´å®®å®µå®¹å®¸å°å±å±å±å³­å³½å³»å³ªå³¨å³°å³¶å´å³´å·®å¸­å¸«åº«åº­åº§å¼±å¾å¾å¾æ"],["aea1","æ£æ¥æææ­æ©æ¯ææææææææææ³ææ¿ææ¾æ¯ææææææºææ½æªæ«æ¨ææææææææææææææææ¸ææææ ¡æ ¸æ¡æ¡æ¡æ ¹æ¡æ¡æ ©æ¢³æ æ¡æ¡æ ½æ´æ¡æ¡æ ¼æ¡æ ªæ¡æ æ æ¡æ®æ®æ®·æ°£æ°§æ°¨æ°¦æ°¤æ³°æµªæ¶æ¶æ¶æµ¦æµ¸æµ·æµæ¶"],["af40","æµ¬æ¶æµ®æµæµ´æµ©æ¶æ¶æµ¹æ¶æµ¥æ¶ççç¤çççç¹ç¹ç¼ç¹ç½ç¸ç·çç­çç®ç çªççççççç¾ççç²ç³ç½ç¼ç¹çç¸çç°çççç©çç ç¨ç©ç °ç §ç ¸ç ç ´ç ·"],["afa1","ç ¥ç ­ç  ç ç ²ç¥ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ç§¤ç§£ç§§ç§ç§¦ç§©ç§çªçªç«ç¬ç¬ç²ç´¡ç´ç´ç´ç´ ç´¢ç´ç´ç´ç´ç´ç´ç´ç´ç¼ºç½ç¾ç¿ç¿èèèèèè½è¿è±èè°èè­è´èè¸è³èè½èè¼è¯è­è¬èèèªè«è¨è¬è»è«èèèè¸èèèµè´èè²è¹è¶èèè±è¨è"],["b040","èèèªèè¤è©èè£èè¡°è¡·è¢è¢è¡½è¡¹è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è±è±ºè±¹è²¡è²¢èµ·èº¬è»è»è»è¾±ééè¿·éè¿ºè¿´éè¿½éè¿¸éé¡éé¢éééééééééé¢é£é¡"],["b0a1","ééé¤ééé»é£¢é¦¬éª¨é«é¬¥é¬²é¬¼ä¹¾åºå½ååååååå¥å¶åååµå´å·ååå¯å­ååå°åªå¯åååååååå¿åå¾åæ¼ååªå¦ååå¡ååå±åååå¯å¤å¸å®åå¬å£å³ååååååå å å å å¤åºå å µå·å¹å¤ å¥¢å¨¶å©å©å©¦å©ªå©"],["b140","å¨¼å©¢å©å©å©å­°å¯å¯å¯å¯å®¿å¯å°å°å°å± å±å±å´å´å´å´å´å´¢å´å´©å´å´å´¤å´§å´å·¢å¸¸å¸¶å¸³å¸·åº·åº¸åº¶åºµåº¾å¼µå¼·å½å½¬å½©å½«å¾å¾å¾å¾å¾¡å¾ å¾æ¿æ£ææ æ¨ææ´æ¦æ½"],["b1a1","ææ»æµææ¼æææææ¸ææææææ æ§æ²ææ¢æ¥æ·æ§ææªæ±æ©ææææ«æ¨ææææ¡æ¬ææææ»æ©æ¨æºæææææåæææææææ¬æææææææ¤æ¨æ¦ææ¹åææ¢æ¢¯æ¢¢æ¢æ¢µæ¡¿æ¡¶æ¢±æ¢§æ¢æ¢°æ¢æ£æ¢­æ¢æ¢æ¢æ¢æ¢¨æ¢æ¢¡æ¢æ¬²æ®º"],["b240","æ¯«æ¯¬æ°«æ¶æ¶¼æ·³æ·æ¶²æ·¡æ·æ·¤æ·»æ·ºæ¸æ·æ·æ¶¯æ·æ¶®æ·æ·¹æ¶¸æ··æ·µæ·æ·æ¸æ¶µæ·æ·«æ·æ·ªæ·±æ·®æ·¨æ·æ·æ¶ªæ·¬æ¶¿æ·¦ç¹ççç½ç¯ç½ç½çççççççççççç¾çç ç¶"],["b2a1","ç·çç¢ç¥ç¦ç¢ç°ççççµççççççç·ç¾ç¼ç¶ç¸çºç¡«ç¡ç¡ç¥¥ç¥¨ç¥­ç§»çªçªç¬ ç¬¨ç¬ç¬¬ç¬¦ç¬ç¬ç¬®ç²ç²ç²çµçµçµ±ç´®ç´¹ç´¼çµç´°ç´³çµç´¯çµç´²ç´±ç¼½ç¾ç¾ç¿ç¿ç¿èèèè¯èè£è«è©è°è¤èèµè·è¶è¹èèèè¸è¢èè½è«èèèèè è·è»è¼"],["b340","èè§èå½ªèèè¶èèµèèè±è¯èè¡è¢è¢è¢«è¢è¢è¢è¢è¦è¦è¨ªè¨è¨£è¨¥è¨±è¨­è¨è¨è¨¢è±è±è²©è²¬è²«è²¨è²ªè²§èµ§èµ¦è¶¾è¶ºè»è»ééééé£éééééé éé¢ééé"],["b3a1","é¨é­é½éééµé¦é£é§é­é©ééªéµé³é¸é°é´é¶é·é¬ééªé©ç« ç«é é é­é³¥é¹µé¹¿éº¥éº»å¢ååååååååæå±å²å´åµå©ååååå¥å»åå§å¼ååååååªååååå³å®åå¾å²åå»å¬å±å¾åå«ååå ¯å ªå ´å ¤å °å ±å ¡å å  å£¹å£ºå¥ "],["b440","å©·åªå©¿åªåªåª§å­³å­±å¯å¯å¯å¯å°å°å°±åµåµå´´åµå·½å¹å¸½å¹å¹å¹¾å»å»å»å»å¼¼å½­å¾©å¾ªå¾¨ææ¡æ²æ¶æ ææ£æºææ°æ»æ´æ¨æ±ææ¶ææææææ£ææææ©æææ"],["b4a1","ææ£ææ¡ææ­æ®æ¶æ´æªææææ¹ææ¦æ¢æ£æææ¯æ®æ°æ´æ¶æ¯ææºæ¾æ·æ¾æ¿æææ£ºæ£æ£ æ£æ£æ¤æ£æ£µæ£®æ£§æ£¹æ£æ£²æ££æ£æ£æ¤æ¤æ¤æ£æ£æ¥®æ£»æ¬¾æ¬ºæ¬½æ®æ®æ®¼æ¯¯æ°®æ°¯æ°¬æ¸¯æ¸¸æ¹æ¸¡æ¸²æ¹§æ¹æ¸ æ¸¥æ¸£æ¸æ¹æ¹æ¸¤æ¹æ¹®æ¸­æ¸¦æ¹¯æ¸´æ¹æ¸ºæ¸¬æ¹æ¸æ¸¾æ»"],["b540","æºæ¸æ¹æ¹£æ¹æ¹²æ¹©æ¹ççç¦ç°ç¡ç¶ç®ççççç¶ç¥ç´ç©çºçªç³ç¢ç¥çµç¶ç´ç¯çç¦ç¨ç¥ç¦ç«çªç¢çç£çççç ç»ç¼ççç´ççç­ç¡ç¡¬ç¡¯ç¨ç¨ç¨ç¨ç¨çª"],["b5a1","çªçªç«¥ç«£ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç²ç²¥çµçµçµ¨çµç´«çµ®çµ²çµ¡çµ¦çµ¢çµ°çµ³åç¿ç¿èèèèèèèèè¹èè¾èèè´èèè©èè¸èè èèèè¯è±è´èèè°èèè½è²èè¸èèèèèèèèèè­èèè¤èèè¡è£è£è¢±è¦è¦è¨»è© è©è©è¨¼è©"],["b640","è©è©è©è©è¨´è¨ºè¨¶è©è±¡è²è²¯è²¼è²³è²½è³è²»è³è²´è²·è²¶è²¿è²¸è¶è¶è¶è·è·è·è·è·è·è·è·è»»è»¸è»¼è¾é®éµé±é¸é²é¶ééµéé¾é£é¥éééé£éééééééééé"],["b6a1","ééééééé½éééé²ééééééé¯é²éé é é é£§é£ªé£¯é£©é£²é£­é¦®é¦­é»é»é»äºå­åµå²å³åå¾å¬å·å»å¯åå¿å·å½åå¦å¤å¢å£å¯åå¨åå¦ååååå£å¤å¯åå¡ååå¥åååå¡å¡å¡å¡å¡å¡å¡«å¡å¡­å¡å¡¢å¡å¡å¥§å«å«å«åª¾åª½åª¼"],["b740","åª³å«åª²åµ©åµ¯å¹å¹¹å»å»å¼å½å¾¬å¾®æææææ³ææ¹æææææææ¾æ´æ§æææ·æ¡æ¢ææ¾ææªæ­æ½æ¬æææææ¶ææææ¬ææ°ææææææææææ¦æ¥­"],["b7a1","æ¥æ¥·æ¥ æ¥æ¥µæ¤°æ¦æ¥æ¥¨æ¥«æ¥æ¥æ¥¹æ¦æ¥æ¥£æ¥æ­æ­²æ¯æ®¿æ¯æ¯½æº¢æº¯æ»æº¶æ»æºæºæ»æ»æº¥æºæº¼æººæº«æ»æºæºæ»æ»æºªæº§æº´ççç©ç¤çç§çç¬ç¦çç¥ççç¨ççºçç·çç¿ç¾ç¯çççççç¿çççç¶ç¸çç°çç²ç±çºç¿ç´ç³çççç«ç¦çç£"],["b840","ç¹çªç¬çç¥ç¨ç¢ç®ç¢ç¢°ç¢ç¢ç¢ç¢ç¡¼ç¢ç¢ç¡¿ç¥ºç¥¿ç¦è¬ç¦½ç¨ç¨ç¨ ç¨ç¨ç¨çªçª ç­·ç¯ç­ ç­®ç­§ç²±ç²³ç²µç¶çµ¹ç¶ç¶ç¶çµç½®ç½©ç½ªç½²ç¾©ç¾¨ç¾¤èèèèè±è°è¸è¥è®è³è«"],["b8a1","è¹èºè¦èèèè·è½è±èµè¦è«èè¬èè¼èµè¡è£è©è­èèèèè¹èèèèè¾è»èèèèè¡è£è£è£è£è£è£è£¡è£è£è£è¦è§£è©«è©²è©³è©¦è©©è©°èªè©¼è©£èª è©±èªè©­è©¢è©®è©¬è©¹è©»è¨¾è©¨è±¢è²è²è³è³è³è³è²²è³è³è³è·¡è·è·¨è·¯è·³è·ºè·ªè·¤è·¦èº²è¼è¼è»¾è¼"],["b940","è¾è¾²éééééé¼éééééééé¾éééé¬éªé©éé·éé¸é½éé¾ééé¤éé´éééé¹é¿éééééééééé·é»é¹é¶éé´é¶é é é é é é é£¼é£´"],["b9a1","é£½é£¾é¦³é¦±é¦´é«¡é³©éºé¼é¼é¼ å§å®å¥åå­ååååå±åå©å¢å³ååå±å­å¾åååå½åååååå·ååååå¶ååå¡µå¡¾å¢å¢å¢å¡¹å¢å¡½å£½å¤¥å¤¢å¤¤å¥ªå¥©å«¡å«¦å«©å«å«å«å«£å­µå¯å¯§å¯¡å¯¥å¯¦å¯¨å¯¢å¯¤å¯å°å±¢å¶å¶å¹å¹£å¹å¹å¹å»å»å¼å½å½°å¾¹æ"],["ba40","æ¿ææ·æ¢æ£ææææµæªææææ¤æ¸ææºææ§æ´æ­æ»æ²æ¡æææ¢æ¨ææ¦æ¦¨æ¦æ§æ¦®æ§æ§æ¦æ¦·æ¦»æ¦«æ¦´æ§æ§æ¦­æ§æ¦¦æ§æ¦£æ­æ­æ°³æ¼³æ¼æ»¾æ¼æ»´æ¼©æ¼¾æ¼ æ¼¬æ¼æ¼æ¼¢"],["baa1","æ»¿æ»¯æ¼æ¼±æ¼¸æ¼²æ¼£æ¼æ¼«æ¼¯æ¾æ¼ªæ»¬æ¼æ»²æ»æ»·ççç½çççç¾ççççç¤ç£çªç°ç­ççç§ççççç¡ç£çç½ç¿ç¡ç£ç¢ç¢§ç¢³ç¢©ç¢£ç¦ç¦ç¦ç¨®ç¨±çªªçª©ç«­ç«¯ç®¡ç®ç®ç­µç®ç®ç®ç®ç®¸ç®ç®ç²¹ç²½ç²¾ç¶»ç¶°ç¶ç¶½ç¶¾ç¶ ç·ç¶´ç¶²ç¶±ç¶ºç¶¢ç¶¿ç¶µç¶¸ç¶­ç·ç·ç¶¬"],["bb40","ç½°ç¿ ç¿¡ç¿èèèèèèèèè¿èè§èºèèèèèè¿èèèèè²èèè¸èèèè¼èèè¿èè»è¢è¥è´èèè·è©è£³è¤è£´è£¹è£¸è£½è£¨è¤è£¯èª¦èªèªèª£èªèª¡èªèª¤"],["bba1","èªªèª¥èª¨èªèªèªèª§è±ªè²è²è³è³è³èµ«è¶è¶è·¼è¼è¼è¼è¼è¾£é ééé£ééé¢ééééééµé¸é·é´é¸ééééé»ééé¨é¼éé¡é¨é©é£é¥é¤ééééééé¼éé¶é é é¢¯é¢±é¤é¤é¤é¤é§éª¯éª°é«¦é­é­é³´é³¶é³³éº¼é¼»é½ååå»åµå¹ååååå"],["bc40","åååååå°å²å®å»å¹å²å¿å´å©åååå´å¶å¯å°å¢å¢å¢å¢³å¢å¢®å¢©å¢¦å¥­å¬å«»å¬å«µå¬å¬å¯®å¯¬å¯©å¯«å±¤å±¥å¶å¶å¹¢å¹å¹¡å»¢å»å»å»å»£å» å½å½±å¾·å¾µæ¶æ§æ®æææ"],["bca1","æ¼æ°æ«æ¾æ§ææ«ææ¬ææ¤ææ®æ®æ©æ¯æ¹ææ²æææ°æ¥æææ©ææ®æ­æ«ææ¬ææ¢æ³æµæ·æ¸æ®æ«æ´æ±æ¨£æ¨æ§¨æ¨æ¨æ¨æ§½æ¨¡æ¨æ¨æ§³æ¨æ¨æ§­æ¨æ­æ­æ®¤æ¯æ¯æ¼¿æ½¼æ¾æ½æ½¦æ½æ¾æ½­æ½æ½¸æ½®æ¾æ½ºæ½°æ½¤æ¾æ½æ»æ½¯æ½ æ½çç¬ç±ç¨ççççç©çç"],["bd40","ç¾çç¿ç ç©çç¤ç¦ç¡ç¢ççºç¤çççççç£ç£ç¢ºç£ç¢¾ç£ç¢¼ç£ç¨¿ç¨¼ç©ç¨½ç¨·ç¨»çª¯çª®ç®­ç®±ç¯ç®´ç¯ç¯ç¯ç® ç¯ç³ç· ç·´ç·¯ç·»ç·ç·¬ç·ç·¨ç·£ç·ç·ç·©ç¶ç·ç·²ç·¹ç½µç½·ç¾¯"],["bda1","ç¿©è¦èèèè èèèè½èè®è¬è­èèè£è¡èè¬è¥è¿èèè´è¶è è¦è¸è¨èèèèè¡è¡è¤è¤è¤è¤è¤è¤èª¼è«è«è«èªè«è«¸èª²è«è«èª¿èª°è«è«èª¶èª¹è«è±è±è±¬è³ è³è³¦è³¤è³¬è³­è³¢è³£è³è³ªè³¡èµ­è¶è¶£è¸«è¸è¸è¸¢è¸è¸©è¸è¸¡è¸èººè¼è¼è¼è¼©è¼¦è¼ªè¼è¼"],["be40","è¼¥é©é®é¨é­é·é°é­é§é±éééééé»é·éªé¬é¤éé³é¼ééé°é²é­é±ééééé éééé ¡é «é é¢³é¤é¤é¤é¤é§é§é§é§é§é§é§é§éª·é«®é«¯é¬§é­é­é­·é­¯é´é´"],["bea1","é´éº©éº¾é»å¢¨é½åååååååªåååå³åå«å¹å©å¤å¸åªå¨å¥å±å¯å¬å¢å¶å£å¢¾å£å£å¥®å¬å¬´å­¸å¯°å°å½æ²ææ©æææ¶æ¾æææ°ææææ»æ¼ææææææ¿æææ¾æ´æææ¹æææ¸æ¨½æ¨¸æ¨ºæ©æ©«æ©æ¨¹æ©æ©¢æ©¡æ©æ©æ¨µæ©æ©æ­æ­·æ°æ¿æ¾±æ¾¡"],["bf40","æ¿æ¾¤æ¿æ¾§æ¾³æ¿æ¾¹æ¾¶æ¾¦æ¾ æ¾´ç¾çççççç¹çççççç¨çç£çççç¢ççç´ç¸çºç§ç¥ç ççç¥ç£¨ç£ç£¬ç£§ç¦¦ç©ç©ç©ç©ç©çªºç¯ç°ç¯ç¯¤ç¯ç¯¡ç¯©ç¯¦ç³ç³ç¸"],["bfa1","ç¸ç¸ç¸ç¸£ç¸ç¸ç¸ç¸ç½¹ç¾²ç¿°ç¿±ç¿®è¨è³è©è¨è»èèèèèèè¨è©èèè­èªèèèèè¢èè¡¡è¤ªè¤²è¤¥è¤«è¤¡è¦ªè¦¦è«¦è«ºè««è«±è¬è«è«§è«®è«¾è¬è¬è«·è«­è«³è«¶è«¼è±«è±­è²è³´è¹è¸±è¸´è¹è¸¹è¸µè¼»è¼¯è¼¸è¼³è¾¨è¾¦éµé´é¸é²é¼éºé´éé é¶é¸é³é¯é¢é¼é«éé"],["c040","éé¦é¡éé®éé»é§é¨éªéééééééééé¦éé °é ¸é »é ·é ­é ¹é ¤é¤é¤¨é¤é¤é¤¡é¤é§­é§¢é§±éª¸éª¼é«»é«­é¬¨é®é´é´£é´¦é´¨é´é´é»é»é¾é¾åªåå¡å²åµååååå"],["c0a1","åå£å£å£å£å¬°å¬ªå¬¤å­ºå°·å±¨å¶¼å¶ºå¶½å¶¸å¹«å½å¾½ææææ¦ææ²æ´ææææ æ°æ¦æ¬æ±æ¢æ­æææææªæªæªæª¢æªæ«æª£æ©¾æªæªæª æ­æ®®æ¯æ°æ¿æ¿±æ¿æ¿ æ¿æ¿¤æ¿«æ¿¯æ¾æ¿¬æ¿¡æ¿©æ¿æ¿®æ¿°ç§çç®ç¦ç¥ç­ç¬ç´ç çµçç°ç²ç©ç°ç¦ç¨ççççªç³çªç°ç¬"],["c140","ç§ç­ç¯ç£·ç£ºç£´ç£¯ç¤ç¦§ç¦ªç©çª¿ç°ç°ç¯¾ç¯·ç°ç¯ ç³ ç³ç³ç³¢ç³ç³ç³ç¸®ç¸¾ç¹ç¸·ç¸²ç¹ç¸«ç¸½ç¸±ç¹ç¹ç¸´ç¸¹ç¹ç¸µç¸¿ç¸¯ç½ç¿³ç¿¼è±è²è°è¯è³èèèºèèè¿è½èè¾è¨èè±èª"],["c1a1","èè¾èèèè¯èèè¨èè§èèè³èèè«è»èºèèè¤»è¤¶è¥è¤¸è¤½è¦¬è¬è¬è¬è¬è¬è¬ è¬è¬è¬è±è°¿è±³è³ºè³½è³¼è³¸è³»è¶¨è¹è¹è¹è¹è½è¼¾è½è½è¼¿é¿é½ééééé¹é£ééééé¨éµéé¥ééé¾é¬éé°éééééééé±é¸éééé éé¡é¢¶é¤µé¨"],["c240","é§¿é®®é®«é®ªé®­é´»é´¿éºé»é»é»é»é»é¼¾é½å¢åå®å£å£å¬¸å½æ£æ³æ´æ²æ¾ææºæ»æ·æ·ææ¦æª³æª¬æ«æª»æª¸æ«æª®æª¯æ­æ­¸æ®¯ççæ¿¾çæ¿ºççç»ç¼ç¾ç¸ç·çµç§ç¿ççç"],["c2a1","çç½ç¿ç»ç¼ç¤ç¦®ç©¡ç©¢ç© ç«ç«ç°«ç°§ç°ªç°ç°£ç°¡ç³§ç¹ç¹ç¹ç¹ç¹¡ç¹ç¹ç½ç¿¹ç¿»è·è¶èèèèè©èèèè°èºè¹è¦è¯è¬è²è è¦è¦²è§´è¬¨è¬¹è¬¬è¬«è±è´è¹è¹£è¹¦è¹¤è¹è¹è»è½è½éééé«é¬ééééé¢é³é®é¬é°éééééééé¢ééééé¤é£é¦"],["c340","é­é¹é¡é¡é¡é¡é¡é¢ºé¤¾é¤¿é¤½é¤®é¦¥é¨é«é¬é¬é­é­é­é¯é¯é¯½é¯é¯éµéµéµ é» é¼é¼¬å³å¥å£å£å£¢å¯µé¾å»¬æ²æ·æ¶æµæææ ææ«¥æ«æ«æ«ççç¨çççççççç¢ç¸"],["c3a1","çºç½çç£çççç¡çç¤ç¦±ç©«ç©©ç°¾ç°¿ç°¸ç°½ç°·ç±ç¹«ç¹­ç¹¹ç¹©ç¹ªç¾ç¹³ç¾¶ç¾¹ç¾¸èè©èèªèè¤è¥è·è»è è è¹è¾è¥ è¥è¥è¥è­è­è­è­è­è­è­è­è­è´è´è¹¼è¹²èºè¹¶è¹¬è¹ºè¹´è½è½è¾­ééé±é®é¡éééééééé¢ééé¤éé¨éé´é£éªé§é¡éé»é¡"],["c440","é¡é¡é¢¼é¥é¥é¨é¨é¬é¯¨é¯§é¯é¯é¶éµ¡éµ²éµªéµ¬éºéºéºéº´å¸å¨å·å¶å´å¼å£¤å­å­å­½å¯¶å·æ¸æºææææ¦æ§æ«¬ç¾ç°ç²çç»çç¢ç¥ç¤¦ç¤ªç¤¬ç¤«ç«ç«¶ç±ç±ç±ç³¯ç³°è¾®ç¹½ç¹¼"],["c4a1","çºç½èèè¦è»è¹èèºèèèèè è è¥¤è¦ºè§¸è­°è­¬è­¦è­¯è­è­«è´è´èºèºèºèºé´éééé½é¡é°é£é¥é¥é¦¨é¨«é¨°é¨·é¨µé°é°é¹¹éºµé»¨é¼¯é½é½£é½¡å·å¸åååå¤å±¬å·æ¼æ¾ææææ©æ«»æ¬æ«ºæ®²ççç§ççç©çç±çºçºç¾¼èè­èè £è ¢è ¡è è¥ªè¥¬è¦½è­´"],["c540","è­·è­½è´èºèºèºè½è¾¯éºé®é³éµéºé¸é²é«é¢é¸é¹é²é¿é¡§é¡¥é¥é©é©é©é¨¾é«é­é­é°­é°¥é¶¯é¶´é·é¶¸éºé»¯é¼é½é½¦é½§å¼å»åååå­¿å·å·å½æ¿æ¤æ¬æ­¡çççç¤çç®ç¬"],["c5a1","ç¦³ç± ç±è¾è½èè¥²è¥¯è§¼è®è´è´èºèºè½¡ééééé½é¾ééé¡«é¥é©é©é«é¬é±é°±é°¾é°»é·é·é¼´é½¬é½ªé¾åå·ææ£æ«æªæ¬æ¬çç«ç±¤ç±£ç±¥çºçºçºè¢è¸è¿è ±è®ééé£é é¤é¨é¡¯é¥é©é©é©é«é«é«é±é±é±é·¥éºé»´åå£©æ¬çç±ç²çç½ç¾è ¶è ¹è¡¢è®è®"],["c640","è®è·è´ééªééééé¡°é©é¬¢é­é±é·¹é·ºé¹¼é¹½é¼é½·é½²å»³æ¬ç£ç±¬ç±®è »è§èº¡éé²é°é¡±é¥é«é¬£é»ç¤çè®é·éé©¢é©¥çºè®èºªéé½é¾é¼é±·é±¸é»·è±é¿é¸ç¨é©ªé¬±é¸é¸ç±²"],["c940","ä¹ä¹åµååä¸ä¸ä¹äºåï¨å±®å½³ä¸åä¸ä¸®äºä»ä»ä»åå¼å¬å¹å å¤å¤¬å°å·¿æ¡æ®³æ¯æ°ç¿ä¸±ä¸¼ä»¨ä»ä»©ä»¡ä»ä»åååå¢å£å¤å¤¯å®å®å°å°»å±´å±³å¸åºåºå¿æææ°"],["c9a1","æ°¶æ±æ°¿æ°»ç®ç°çç¦¸èéä¼ä¼ä¼¬ä»µä¼ä»±ä¼ä»·ä¼ä¼ä¼ä¼ä¼¢ä¼ä¼ä»´ä¼å±åååå¦å¢ååååå¡åå®åªå´å¤¼å¦å¥¼å¦å¥»å¥¾å¥·å¥¿å­å°å°¥å±¼å±ºå±»å±¾å·å¹µåºå¼å¼å½´å¿å¿å¿æææ¤æ¡æ¦æ¢ææ ææ¥æ¯æ®æ¾æ¹æ¸æ»æºæ¿æ¼æ³æ°æ±æ±æ±æ±æ±æ±æ±"],["ca40","æ±ç±çç´çµççªç¿ç©µç½è¸è¼èè½è¿èè¥¾éééééé¢é¤é é£ä½ä¼»ä½¢ä½ä½ä½¤ä¼¾ä½§ä½ä½ä½ä½ä¼­ä¼³ä¼¿ä½¡åå¹ååå¡å­å®åå£å²ååå°å·åªååååå¥å"],["caa1","å½ååå¨å¤åå®å§å¥ååååååå¤å¥å¦¦å¦å¦ å¦å¦å¦¢å¦å¦å¦§å¦¡å®å®å°¨å°ªå²å²å²å²å²å²å²å²å²å²å· å¸å¸åºåºåºåºåºå¼å¼å½¸å½¶å¿å¿å¿å¿­å¿¨å¿®å¿³å¿¡å¿¤å¿£å¿ºå¿¯å¿·å¿»æå¿´æºæææææææ±æ»æºæ°æææ·æ½æ²æ´æ·æ°æ´æ³æ²æµææ"],["cb40","æææææææææ¯æ°æ°æ±¸æ±§æ±«æ²æ²æ²æ±±æ±¯æ±©æ²æ±­æ²æ²æ²æ±¦æ±³æ±¥æ±»æ²ç´çºç£ç¿ç½ççççºçççççççºç¹çççç¤½è´èèèèèèèèèèè"],["cba1","èèèè±¸è¿è¾¿éé¡é¥éé§é é°é¨é¯é­ä¸³ä¾ä½¼ä¾ä½½ä¾ä¾ä½¶ä½´ä¾ä¾ä½·ä½ä¾ä½ªä¾ä½¹ä¾ä½¸ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä½«ä½®åå¼å¾åµå²å³åå±å¼ååå¼åååå¿ååååå«åºå¾å¥å¬å´å¦åå¯å¡å åå£å§å¤å·å¹å¯å²å­å«å±å°å¶ååµå»å³å´å¢"],["cc40","å¨å½å¤å¥å¦µå¦ºå§å§å¦²å§å§å¦¶å¦¼å§å§å¦±å¦½å§å§å¦´å§å­¢å­¥å®å®å±å±å²®å²¤å² å²µå²¯å²¨å²¬å²å²£å²­å²¢å²ªå²§å²å²¥å²¶å²°å²¦å¸å¸å¸å¼¨å¼¢å¼£å¼¤å½å¾å½¾å½½å¿å¿¥æ­æ¦ææ²æ"],["cca1","æ´æææ³æææ¬æ¢æææ®æææææææ½æ­æ´ææ¾æªæ¶ææ®æ³æ¯æ»æ©æ°æ¸æ½æ¨æ»ææ¼ææææ»æææææ½æææ¶æææ¬æææ¶æ»ææææ´æææºæææææ½ææ¸æ¹ææ¬¥æ®æ­¾æ¯æ°æ²æ³¬æ³«æ³®æ³æ²¶æ³æ²­æ³§æ²·æ³æ³æ²ºæ³æ³æ³­æ³²"],["cd40","æ³æ³æ²´æ²æ²æ²æ³æ³æ´°æ³æ³æ²°æ³¹æ³æ³©æ³ççççççççççççªççççççççççç¤ç¡ç­ç¦ç¢ç ç¬ççç¨ç¿çç¾ççç¯ç³ç±ç°çµç¸ç¼ç¹ç»çº"],["cda1","ç·ç¥ç¤¿ç§ç©¸ç©»ç«»ç±µç³½èµèè®è£è¸èµè­è è èè«èèèèµè§è®è¼èèºè´è¨è¡è©èè¤èè¶è¢è°è¯è­è®è±è¿è¿è¿è¿è¿è¿è¿é²é´é¯é³é°é¹é½é¼éºéä¿ä¿ä¿ä¾²ä¿ä¿ä¿ä¿ä¿ä¿ä¾»ä¾³ä¿ä¿ä¿ä¾ºä¿ä¾¹ä¿¬ååååå½å¼åååååºå¡å­å¥å"],["ce40","åèå·å®åå¶ååå å°å¼å¢å¾å²åå°åµååå¤ååååååååå¥ååå£´å¤å¥å§¡å§å§®å¨å§±å§å§ºå§½å§¼å§¶å§¤å§²å§·å§å§©å§³å§µå§ å§¾å§´å§­å®¨å±å³å³å³å³å³å³"],["cea1","å³å³å³å³å³å³å³å³å³å³å³å³å³å³¸å·¹å¸¡å¸¢å¸£å¸ å¸¤åº°åº¤åº¢åºåº£åº¥å¼å¼®å½å¾æ·æ¹ææ²æææææææææææ¤æææ¦æ®ææææææµæææ«æ¹æææ¸æ¶ææææºææ»æ°æææªæ¿æ¶æ¡æ²æµææ¦æ¢æ³æ«æºææ´æ¹æ®ææææ²ææº"],["cf40","ææ»æ¸æææ·ææ«æ¤ææµææ³æ·æ¶æ®æ£ææ¹ææ§æ°æ²æ¼ææ­ææ®æ¦ææºææææªææ¬¨æ®æ®æ®¶æ¯æ¯æ¯ æ° æ°¡æ´¨æ´´æ´­æ´æ´¼æ´¿æ´æ´æ³æ´³æ´æ´æ´ºæ´æ´æ´æ´æµ"],["cfa1","æ´æ´æ´·æ´æ´æµæ´æ´ æ´¬æ´æ´¢æ´æ´ç·çç¾ç±ç°ç¡ç´çµç©çççç¬ç°ç³ç®çç¤ç¨ç«ççªç¦ç£çççççç¹ç¶çµç´ç«ç¿çç¾ççç¸çç¬ç®ç®ççç§çªç¹ççççççç·ç»çºç§ç¨ç ç ç ç ç ç ç ç ç ç ç¥ç¥ç¥ç¥ç¥ç§ç§ç§ç§ç§çª"],["d040","ç©¾ç«ç¬ç¬ç±ºç±¸ç±¹ç±¿ç²ç²ç´ç´ç´ç½ç¾ç¾ç¾¾èèèèè·èèè èèèèèè£èèèèèèèè¦èè¿è¡èèè¾è¹èè¨èèèºè«èè´è¬è¡è²èµèè»è¶è°èª"],["d0a1","è¤è èºè³è­è·è´è¼è³è¡è¡è¡§è¡ªè¡©è§è¨è¨èµ²è¿£è¿¡è¿®è¿ é±é½é¿ééé¾éééééééééééååååå¢å°åä¿µä¿´å³å·å¬ä¿¶ä¿·ååå å§åµå¯å±åååååååååå¡åååååå¢åååå¦å¢ååå§å³å¤åå¿ååå«ååå±"],["d140","åå»å·å¸å ååååååå ²åååºåå½å¼å¸å¶å¿ååå¹åå¤å¥å¨å¨å¨­å¨®å¨å¨å¨å¨å¨å¨³å­¬å®§å®­å®¬å°å±å±å³¬å³¿å³®å³±å³·å´å³¹å¸©å¸¨åº¨åº®åºªåº¬å¼³å¼°å½§æææ§"],["d1a1","ææ¢æææææææææææææææ²æææ¬æææ¶ææ¤æ¹æææ¼æ©ææ´ææææ­ææ³æææ¸ææææææææææææææææ æ æ¡æ ²æ ³æ »æ¡æ¡æ æ ±æ æ µæ «æ ­æ ¯æ¡æ¡æ ´æ æ æ æ ¦æ ¨æ ®æ¡æ ºæ ¥æ  æ¬¬æ¬¯æ¬­æ¬±æ¬´æ­­èæ®æ¯¦æ¯¤"],["d240","æ¯¨æ¯£æ¯¢æ¯§æ°¥æµºæµ£æµ¤æµ¶æ´æµ¡æ¶æµæµ¢æµ­æµ¯æ¶æ¶æ·¯æµ¿æ¶æµæµ§æµ æ¶æµ°æµ¼æµæ¶æ¶æ´¯æµ¨æ¶æµ¾æ¶æ¶æ´æ¶æµ»æµ½æµµæ¶çççççç¼¹ç¢çççç çççççççç¡çç¸"],["d2a1","ç·ç¶ççºç´ç¾ç¶ç³ç»çççç¥çç¼ç§ç£ç©ççççççççç¨ççç´çµç¡ççç°çç»ççç¿ç¶çºçççççççç£ççççç¢ç§ç £ç ¬ç ¢ç µç ¯ç ¨ç ®ç «ç ¡ç ©ç ³ç ªç ±ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç§«ç§¬ç§ ç§®ç§­ç§ªç§ç§ç§çªçªçªçªçªçªçªç«ç¬"],["d340","ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç²ç²ç²ç²ç²ç²ç²ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç½ç½¡ç½ç½ ç½ç½ç¾ç¾ç¿ç¿ç¿èè¾è¹èºè²è¹èµèè»èèè¯è¥è³è­èèèè¥èè¿èè¦èè¢"],["d3a1","èèèèªèè¼èèè¤è è·è¯è©èèèèèè¬èè§èèèè¢è¨èèèèèèèèèèè¥èè¡è§èèèèèèè¡è¡è¡­è¡µè¡¶è¡²è¢è¡±è¡¿è¡¯è¢è¡¾è¡´è¡¼è¨è±è±è±»è²¤è²£èµ¶èµ¸è¶µè¶·è¶¶è»è»è¿¾è¿µéè¿¿è¿»éè¿¼è¿¶éé ééé£éé¥ééééé¤é"],["d440","éééé¢éééé¼é££é«é¬¯ä¹¿å°åªå¡åå åååå²åååååå¢åååå©å«å£å¤ååå®å³åååå«å­å¬å®ååå­ååµå¶å¼ååå´åªåå¢å¶åµå°åå"],["d4a1","åå²å¥åå¹åå­å»ååååå»å å¢å¶åå´å å­å½å å¸å å³åå å®å£å²å¥å¬å¡å å¼å å§å å å±å©å°å å å¥å© å©å©å©§å©å¨¸å¨µå©­å©å©å©¥å©¬å©å©¤å©å©å©å©å©å©å©åªå¨¾å©å¨¹å©å©°å©©å©å©å©å©å©å­²å­®å¯å¯å±å´å´å´å´å´ å´å´¨å´å´¦å´¥å´"],["d540","å´°å´å´£å´å´®å¸¾å¸´åº±åº´åº¹åº²åº³å¼¶å¼¸å¾å¾å¾ææææ¾æ°æºææææ¤ææææ±ææ·ææ¿ææææ²æ¥æææ½æ½ææ­æææ«ææ¯æææ®æ¯æµææ­æ®æ¼æ¤æ»æ"],["d5a1","æ¸æææææ°æææ¥æ¡ææææ¢ææ¡¹æ¢æ¢æ¢æ¡­æ¡®æ¢®æ¢«æ¥æ¡¯æ¢£æ¢¬æ¢©æ¡µæ¡´æ¢²æ¢æ¡·æ¢æ¡¼æ¡«æ¡²æ¢ªæ¢æ¡±æ¡¾æ¢æ¢æ¢æ¢ æ¢æ¢¤æ¡¸æ¡»æ¢æ¢æ¢æ¡½æ¬¶æ¬³æ¬·æ¬¸æ®æ®æ®æ®æ®æ°ªæ·æ¶«æ¶´æ¶³æ¹´æ¶¬æ·©æ·¢æ¶·æ·¶æ·æ¸æ·æ· æ·æ·æ¶¾æ·¥æ·æ·æ·æ·´æ·æ¶½æ·­æ·°æ¶ºæ·æ·æ·æ·"],["d640","æ·æ·²æ·æ·½æ·æ·æ·£æ¶»çºçç·çç´çç°çç³çç¼ç¿çççç¸ç¶çççç¾ç»ç¼ç¿çççççççç¿çççç¶ç¸çµççç½çççºç¼ç¿ççç´çç¤ç£ççç"],["d6a1","çççççççç¹ç¯ç­ç±ç²ç´ç³ç½ç¥ç»çµç¡ç¡ç¡ç¡ç¡ç¡ç ¦ç¡ç¡ç¥¤ç¥§ç¥©ç¥ªç¥£ç¥«ç¥¡ç¦»ç§ºç§¸ç§¶ç§·çªçªçªç¬µç­ç¬´ç¬¥ç¬°ç¬¢ç¬¤ç¬³ç¬ç¬ªç¬ç¬±ç¬«ç¬­ç¬¯ç¬²ç¬¸ç¬ç¬£ç²ç²ç²ç²£ç´µç´½ç´¸ç´¶ç´ºçµç´¬ç´©çµçµç´¾ç´¿çµç´»ç´¨ç½£ç¾ç¾ç¾ç¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿è"],["d740","èèèèèèè¥èèè­èè¬èè¡èè§èè¢èè¸è³èºè´è²è´èè£è¨èèºè³è¤è´èèèèèµèè©è½èèèèèªèè¾è¥è¯èèè°è¿è¦èè®è¶èèèè¿è·"],["d7a1","èèèèºè°èè¹è³è¸èè´è»è¼èè½è¾è¡è¢è¢è¢¨è¢¢è¢ªè¢è¢è¢¡è¢è¢è¢§è¢è¢è¢è¢¤è¢¬è¢è¢è¢è¦è§è§è§è¨°è¨§è¨¬è¨è°¹è°»è±è±è±½è²¥èµ½èµ»èµ¹è¶¼è·è¶¹è¶¿è·è»è»è»è»è»è» è»¡é¤ééééé¡é¯éªé°é´é²é³éé«é¬é©éééééé¬é´é±é³é¸é¤é¹éª"],["d840","é«é·é¨é®éºééé¼é­é«é±é¯é¿éªé é£¥é¦åååååå£ååååå¨ååååååååå¤å§åå¨å¥å­å·åå¢ååååµåå£åå¤å½åå¦å¿åå¡ååå ©å ·"],["d8a1","å å å §å £å ¨åµå¡å ¥å å å ³å ¿å ¶å ®å ¹å ¸å ­å ¬å »å¥¡åª¯åªåªå©ºåª¢åªå©¸åª¦å©¼åª¥åª¬åªåª®å¨·åªåªåªåªåªåª©å©»å©½åªåªåªåªåªå¯ªå¯å¯å¯å¯å¯å¯å°å°°å´·åµåµ«åµåµå´¿å´µåµåµåµå´³å´ºåµå´½å´±åµåµå´¹åµå´¸å´¼å´²å´¶åµåµå¹å¹å½å¾¦å¾¥å¾«ææ¹ææ¢æææ"],["d940","æ²ææææµææ¸æ¼æ¾ææææææ¿æææææ±æ°ææ¥æ¨æ¯æææ³ææ æ¶ææ²æµæ¡ææ¾æææææææææææ°æææ²æ§æªæ¤ææ¨æ¥ææææ®ææ"],["d9a1","æ¼æ¬æ»ææ±æ¹æªæ²ææ¤æ£æ¤æ£æ¤ªæ£¬æ£ªæ£±æ¤æ£æ£·æ£«æ£¤æ£¶æ¤æ¤æ£³æ£¡æ¤æ£æ¤æ¥°æ¢´æ¤æ£¯æ£æ¤æ£¸æ£æ£½æ£¼æ£¨æ¤æ¤æ¤æ£æ£æ£æ£æ£¦æ£´æ£æ¤æ£æ£©æ¤æ¤¥æ£æ¬¹æ¬»æ¬¿æ¬¼æ®æ®æ®æ®æ®½æ¯°æ¯²æ¯³æ°°æ·¼æ¹æ¹æ¸æ¹æºæ¸¼æ¸½æ¹æ¹¢æ¸«æ¸¿æ¹æ¹æ¹³æ¸æ¸³æ¹æ¹æ¹æ¸»æ¸æ¸®æ¹"],["da40","æ¹¨æ¹æ¹¡æ¸±æ¸¨æ¹ æ¹±æ¹«æ¸¹æ¸¢æ¸°æ¹æ¹¥æ¸§æ¹¸æ¹¤æ¹·æ¹æ¹¹æ¹æ¹¦æ¸µæ¸¶æ¹ç çç¯ç»ç®ç±ç£ç¥ç¢ç²çç¨çºççççççççççç°ç¢ç±ç³ç§ç²ç­ç¦ç£çµçç®ç¬ç°ç«ç"],["daa1","çç¡ç­ç±ç¤ç£çç©ç ç²ç»ç¯ç¯ç¬ç§çç¡ç¦ççç¤ççççççççççççççç¬ç¡ ç¡¤ç¡¥ç¡ç¡­ç¡±ç¡ªç¡®ç¡°ç¡©ç¡¨ç¡ç¡¢ç¥´ç¥³ç¥²ç¥°ç¨ç¨ç¨ç¨ç¨çªç«¦ç«¤ç­ç¬»ç­ç­ç­ç­ç­ç­ç­ç²¢ç²ç²¨ç²¡çµçµ¯çµ£çµçµçµ§çµªçµçµ­çµçµ«çµçµçµ©çµçµçµç¼¾ç¼¿ç½¥"],["db40","ç½¦ç¾¢ç¾ ç¾¡ç¿èèèè¾èèèèèèè½èèºè¦è®è·è¸è¹èè¼è½è¿èµè»èè¹è£èè¨èè§è¤è¼è¶èèèè«è£è¿èèè¥èè¿è¡èèèèµèèèèèèèè³"],["dba1","èèºèèèªèèè¬è®èè»èè¢èèè¾èè¢è¦èè£èèªèè«èè¬è©èè¨èè¡è¡è¡è¢ºè£è¢¹è¢¸è£è¢¾è¢¶è¢¼è¢·è¢½è¢²è¤è£è¦è¦è¦è§è§è§è©è©è¨¹è©è©è©è©è©è©è©è©è©è©è©è©è±è²è²è²ºè²¾è²°è²¹è²µè¶è¶è¶è·è·è·è·è·è·è·è·è·è·è·è·è»¯è»·è»º"],["dc40","è»¹è»¦è»®è»¥è»µè»§è»¨è»¶è»«è»±è»¬è»´è»©é­é´é¯éé¬éé¿é¼éé¹é»éééééé¡é¤éé¢é ééé¥ééé¦ééééé¿é½ééé§ééé¤ééééé»ééééé¾é"],["dca1","ééééééé±é°é¬é°é®é é¢©é£«é³¦é»¹äºäºäº¶å½å¿åå®ååå´ååå°ååºå±ååå¶å¸ååºå¸å»å¼ååååååååååå©å¿ååååå¢ååå²ååååå¡å¡¨å¡¤å¡å¡å¡å¡¯å¡å¡å¡å¡å¡¥å¡å ½å¡£å¡±å£¼å«å«å«åªºåª¸åª±åªµåª°åª¿å«åª»å«"],["dd40","åª·å«å«åª´åª¶å«åª¹åªå¯å¯å¯å°å°³åµ±åµ£åµåµ¥åµ²åµ¬åµåµ¨åµ§åµ¢å·°å¹å¹å¹å¹å¹å»å»å»å»å»å½å¾¯å¾­æ·æææ«ææ¶æ²æ®ææ¯ææ©ææ é¨æ£æ¥æ¤ææ±æ«ææææ æ¤"],["dda1","æ³æææææ¹æ·æ¢æ£ææ¦æ°æ¨ææµæ¯ææææ¥æ§ææ§ææ®æ¡ææ¯æææææææææææ¸æ æ¥¦æ¥æ¤¸æ¥æ¥¢æ¥±æ¤¿æ¥æ¥ªæ¤¹æ¥æ¥æ¥æ¥ºæ¥æ¥æ¤µæ¥¬æ¤³æ¤½æ¥¥æ£°æ¥¸æ¤´æ¥©æ¥æ¥¯æ¥æ¥¶æ¥æ¥æ¥´æ¥æ¤»æ¥æ¤·æ¥æ¥æ¥æ¤²æ¥æ¤¯æ¥»æ¤¼æ­æ­æ­æ­æ­æ­æ®ï¨æ¯»æ¯¼"],["de40","æ¯¹æ¯·æ¯¸æºæ»æ»æºæ»æºæºæºæº æº±æº¹æ»æ»æº½æ»æºæ»æº·æº°æ»æº¦æ»æº²æº¾æ»æ»æ»æºæºæºæºæº¤æº¡æº¿æº³æ»æ»æºæº®æº£çççç£ç ççç¢ç²ç¸çªç¡ççççç°ççç"],["dea1","çççççççççç¼çç»çºçççççççççççççççççç¡ç¿ç¾ç½çç¹ç·æ¦ç¯ççç·ç¾ç¼ç¹ç¸çç»ç¶ç­çµç½ççµçççç çççç©ç§ççç­ç ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢¡ç¢ç¡¹ç¢ç¢ç¢ç¡»ç¥¼ç¦ç¥½ç¥¹ç¨ç¨ç¨ç¨ç¨ç¨ç¨¢ç¨"],["df40","ç¨ç¨çª£çª¢çªç««ç­¦ç­¤ç­­ç­´ç­©ç­²ç­¥ç­³ç­±ç­°ç­¡ç­¸ç­¶ç­£ç²²ç²´ç²¯ç¶ç¶ç¶ç¶çµ¿ç¶çµºç¶çµ»ç¶çµ¼ç¶ç¶ç¶çµ½ç¶ç½­ç½«ç½§ç½¨ç½¬ç¾¦ç¾¥ç¾§ç¿ç¿è¡è¤è è·èè©èè¢è²æ¡èè¶è§è¯"],["dfa1","èè¡èèèèèèè±è¿èè¶è¹èèè¥èèèè§è°èè½èèè´è³èèèè·èºè´èºèè¸è²èè©èèè¯èè­èè°è¹èèèè¯èèè»èè¶è³è¨è¾èè«è èè®èèèè·èèºèèµèè¸èèèè¶èèè£è£è£è£è£è£è£è£è£è¦è¦è§è§¥è§¤"],["e040","è§¡è§ è§¢è§è§¦è©¶èªè©¿è©¡è¨¿è©·èªèªè©µèªèªè©´è©ºè°¼è±è±è±¥è±¤è±¦è²è²è²è³èµ¨èµ©è¶è¶è¶è¶è¶è¶è¶è¶è¶è·°è· è·¬è·±è·®è·è·©è·£è·¢è·§è·²è·«è·´è¼è»¿è¼è¼è¼è¼è¼è¼è¼éé¿"],["e0a1","ééé½ééééééééé®é¯ééé°éºé¦é³é¥ééé®ééé­é¬éé é§é¯é¶é¡é°é±éé£éé²ééééé²ééééééééééºé½é¸éµé³é·é¸é²é é é é¢¬é£¶é£¹é¦¯é¦²é¦°é¦µéª­éª«é­é³ªé³­é³§éºé»½å¦ååå¨å³ååªåå¤åå¬å°å¯å£å "],["e140","åååå©å«å°å¬å§åååå¼ååååååºååå¿å¹å¢å¡¼å¢å¢å¢å¢å¡¿å¡´å¢å¡ºå¢å¢å¢å¡¶å¢å¢å¡»å¢å¢å£¾å¥«å«å«®å«¥å«å«ªå«å«­å««å«³å«¢å« å«å«¬å«å«å«å«¨å«å­·å¯ "],["e1a1","å¯£å±£å¶å¶åµ½å¶åµºå¶åµ·å¶å¶å¶åµ¾åµ¼å¶åµ¹åµ¿å¹å¹å¹å»å»å»å»å»å»å»å»å»å½å½å½¯å¾¶æ¬æ¨æææ±æ³æææ²æ¬ææ´ææºææ¥æ»æªæ¡ææ©æ§æ«æ«ææææ´æ¶æ²æ³æ½æµæ¦æ¦æææææææ ææ¿æ¿æ¬æ«ææ¥æ·æ³æ æ¡æ ææææ¢æ¦±æ¦¶æ§"],["e240","æ¦ æ§æ¦æ¦°æ¦¬æ¦¼æ¦æ¦æ¦æ¦§æ¦æ¦©æ¦¾æ¦¯æ¦¿æ§æ¦½æ¦¤æ§æ¦¹æ§æ¦æ§æ¦³æ¦æ¦ªæ¦¡æ¦æ§æ¦æ¦æ§æ¦µæ¦¥æ§æ­æ­æ­æ®æ®æ® æ¯æ¯æ¯¾æ»æ»µæ»±æ¼æ¼¥æ»¸æ¼·æ»»æ¼®æ¼æ½æ¼æ¼æ¼§æ¼æ¼»æ¼æ»­æ¼"],["e2a1","æ¼¶æ½³æ»¹æ»®æ¼­æ½æ¼°æ¼¼æ¼µæ»«æ¼æ¼æ½æ¼æ»½æ»¶æ¼¹æ¼æ»¼æ¼ºæ¼æ¼æ¼æ¼æ¼¡çççççççç»ççççççççççççç¢ç³ç±çµç²ç§ç®çççç½ççççççççç¸çç¼ççç®çç¯ç¾çç¢²ç¢ªç¢´ç¢­ç¢¨ç¡¾ç¢«ç¢ç¢¥ç¢ ç¢¬ç¢¢ç¢¤ç¦ç¦ç¦ç¦ç¦ç¦ç¦"],["e340","ç¦ç¦ç¦ç¦ç¨«ç©ç¨°ç¨¯ç¨¨ç¨¦çª¨çª«çª¬ç«®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®åç®ç®¤ç®ç²»ç²¿ç²¼ç²ºç¶§ç¶·ç·ç¶£ç¶ªç·ç·ç·ç¶ç·ç·ç·ç·ç·ç¶¯ç¶¹ç¶ç¶¼ç¶ç¶¦ç¶®ç¶©ç¶¡ç·ç½³ç¿¢ç¿£ç¿¥ç¿"],["e3a1","è¤èèèèèèèèèèèè¤è¡èèºèèè¬è®è«è¹è´èèèªèè±èèè§è»è¢èèèèè©è¯è¨èèè¶èè èèèèè°èè¡è³è£è¨è«èè®èè¡èèèè¬èè¾èè è²èªè­è¼èèºè±èµèè¦è§è¸è¤èè°èè£·è£§è£±è£²è£ºè£¾è£®è£¼è£¶è£»"],["e440","è£°è£¬è£«è¦è¦¡è¦è¦è§©è§«è§¨èª«èªèªèªèªèªè°½è±¨è±©è³è³è³è¶è¸è¸è·¿è¸è·½è¸è¸è¸è¸è¸è·¾è¸è¸è¼è¼è¼è¼é£éé é¢éééé¤é¡ééºé²é¹é³é¥é¤é¶ééºé ééªé"],["e4a1","é¦éé«é¹éé¿é£é®éééé¢é½éé¡ééééé§é¾éé©ééé­éé¡é¿éé½éºé¾éééé»ééé¿ééé é¢­é¢®é¤é¤é¤é¦é¦é§é¦¹é¦»é¦ºé§é¦½é§éª±é«£é«§é¬¾é¬¿é­ é­¡é­é³±é³²é³µéº§å¿åå°å¸ååå¶å¾ååå½åååå±å¯ååååµååååå"],["e540","ååå³å½å¬å¾å¸åªåºåå¢«å¢å¢±å¢ å¢£å¢¯å¢¬å¢¥å¢¡å£¿å«¿å«´å«½å«·å«¶å¬å«¸å¬å«¹å¬å¬å¬å¬å±§å¶å¶å¶å¶å¶¢å¶å¶å¶ å¶å¶¡å¶å¶å¹©å¹å¹ å¹ç·³å»å»å»¡å½å¾²æææ¹æ±æ°æ¢æ"],["e5a1","æææ¯æ­æææªæ¡ææ¦æ³æ­æ®æ°ææ ææææææææ£ææ¨æ±ææ¶æºæ¹æ»æ²æ³æµæ°æ©æ²æ·æªæ¯æ¨æ¨æ¨æ§¥æ§¸æ¨æ§±æ§¤æ¨ æ§¿æ§¬æ§¢æ¨æ¨æ§¾æ¨§æ§²æ§®æ¨æ§·æ§§æ©æ¨æ§¦æ§»æ¨æ§¼æ§«æ¨æ¨æ¨æ¨¥æ¨æ§¶æ¨¦æ¨æ§´æ¨æ­æ®¥æ®£æ®¢æ®¦æ°æ°æ¯¿æ°æ½æ¼¦æ½¾æ¾æ¿æ¾"],["e640","æ¾æ¾æ¾æ½¢æ½æ¾æ½æ¾æ½¶æ½¬æ¾æ½æ½²æ½æ½æ½æ¾æ¾æ½æ¼æ½¡æ½«æ½½æ½§æ¾æ½æ¾æ½©æ½¿æ¾æ½£æ½·æ½ªæ½»ç²ç¯çç°ç çç©çµçç¥çç¤ç¡çªçç§ç³ççççççç ççç¡çç"],["e6a1","ç¢çççççç½ççç¼ç¹ççç¾ç¥ççççç£çç¨çççççççççç£ç¢»ç£ç£ç£ç£ç£ç£ç£ç£ç£ç¦ç¦¡ç¦ ç¦ç¦¢ç¦æ­¶ç¨¹çª²çª´çª³ç®·ç¯ç®¾ç®¬ç¯ç®¯ç®¹ç¯ç®µç³ç³ç³ç³ç··ç·ç·ªç·§ç·ç·¡ç¸ç·ºç·¦ç·¶ç·±ç·°ç·®ç·ç½¶ç¾¬ç¾°ç¾­ç¿­ç¿«ç¿ªç¿¬ç¿¦ç¿¨è¤è§è£è"],["e740","èèè¢èèèèèèèèèè¤è»èèè©èèèèèè§èè»è«èºèèè´èªè²èè·è«è³è¼èèªè©èè¾è¨èè®èè½èè¶è±è¦è§è¨è°è¯è¹èè è°èèè¯è¢"],["e7a1","èè£è¤è·è¡è³èèèèè¡èèèè­èªèèèèè¯è¬èºè®èè¥èè»èµè¢è§è©è¡è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¦¢è¦¤è¦£è§­è§°è§¬è«è«èª¸è«è«è«è«èª»è«èª¾è«è«è«è«èªºèª½è«è°¾è±è²è³¥è³è³è³¨è³è³è³§è¶ è¶è¶¡è¶è¸ è¸£è¸¥è¸¤è¸®è¸è¸è¸è¸è¸è¸¦è¸§"],["e840","è¸è¸è¸è¸è¸è¸è¸è¼¬è¼¤è¼è¼è¼ è¼£è¼è¼é³é°é¯é§é«é¯é«é©éªé²é¦é®ééééééééééééé¶éé±ééé©éééé¯éé¨éééé¦éééé éé§éé"],["e8a1","éµé¡éé´é¼é¬é«é®é°é¤é¢ééééééééééé é é ¦é ©é ¨é  é é §é¢²é¤é£ºé¤é¤é¤é¤é¤é§é§é§é§é§é§é§é§é§é§é§é§éª³é«¬é««é«³é«²é«±é­é­é­§é­´é­±é­¦é­¶é­µé­°é­¨é­¤é­¬é³¼é³ºé³½é³¿é³·é´é´é³¹é³»é´é´é´éºé»é¼é¼ååååååå´å¡å°å å®"],["e940","å³å¦å£å­å²åå·ååå£å¢½å£å¢¿å¢ºå£å¢¼å£å¬å¬å¬å¬¡å¬å¬å¬å¬å¬¨å¬å¬ å¬å¯¯å¶¬å¶±å¶©å¶§å¶µå¶°å¶®å¶ªå¶¨å¶²å¶­å¶¯å¶´å¹§å¹¨å¹¦å¹¯å»©å»§å»¦å»¨å»¥å½å¾¼ææ¨æææ´ææææº"],["e9a1","æ¿æ¸æææææææ½ææææ³ææ³æ¿æ¼æ¢ææ¾æææææ½æ»æºææ£æ¨´æ©¦æ©æ©§æ¨²æ©¨æ¨¾æ©æ©­æ©¶æ©æ©æ¨¨æ©æ¨»æ¨¿æ©æ©ªæ©¤æ©æ©æ©æ©¯æ©©æ© æ¨¼æ©æ©æ©æ©æ©æ©æ­æ­æ­æ®§æ®ªæ®«æ¯æ¯æ°æ°æ°æ¾­æ¿æ¾£æ¿æ¾¼æ¿æ¿æ½æ¿æ¾½æ¾æ¿æ¾¨çæ¾¥æ¾®æ¾ºæ¾¬æ¾ªæ¿æ¾¿æ¾¸"],["ea40","æ¾¢æ¿æ¾«æ¿æ¾¯æ¾²æ¾°ççç¿ç¸ççççççççç½çç¼çççççç©ç¦ç§ç¬ç¥ç«çªç¿çç çççç¡ççç¯ç­ç±ç½ç³ç¼çµç²ç°ç»ç¦ççç¡ççç¢ç£çç"],["eaa1","çç£ç£©ç£¥ç£ªç£ç££ç£ç£¡ç£¢ç£­ç£ç£ ç¦¤ç©ç©ç©çª¶çª¸çªµçª±çª·ç¯ç¯£ç¯§ç¯ç¯ç¯¥ç¯ç¯¨ç¯¹ç¯ç¯ªç¯¢ç¯ç¯«ç¯ç¯ç³ç³ç³ç³ç³ç¸ç¸¡ç¸ç¸ç¸ç¸ ç¸ç¸ç¸ç¸ç¸ç¸¢ç¸ç¸ç¸ç¸ç¸ç¸¥ç¸¤ç½ç½»ç½¼ç½ºç¾±ç¿¯èªè©è¬è±è¦è®è¹èµè«è°è¬è´è²è·è§è²èèèèèè«èèè¡è"],["eb40","èèè¤èè¢èèèè£è¾èè±èè®èµèè§è èè¦èèè¥è¬è£è¥è¤èèèèèèèèèè¹èè£èèèèèèèèèè¤è¤¦è¤°è¤­è¤®è¤§è¤±è¤¢è¤©è¤£è¤¯è¤¬è¤è§±è« "],["eba1","è«¢è«²è«´è«µè«è¬è«¤è«è«°è«è«è«¡è«¨è«¿è«¯è«»è²è²è²è³µè³®è³±è³°è³³èµ¬èµ®è¶¥è¶§è¸³è¸¾è¸¸è¹è¹è¸¶è¸¼è¸½è¹è¸°è¸¿èº½è¼¶è¼®è¼µè¼²è¼¹è¼·è¼´é¶é¹é»ééºé³éµé¶éééééé§ééééééºé¸é¼éé£éééé­éééééºé¥éé¹é·é´éé¤é¿é©é¹éµéªéé"],["ec40","éé¾ééé»éé¼éé¾é¹éºé¶é¿éµé½é©éééééééé°é¸é µé ¯é ²é¤¤é¤é¤§é¤©é¦é§®é§¬é§¥é§¤é§°é§£é§ªé§©é§§éª¹éª¿éª´éª»é«¶é«ºé«¹é«·é¬³é®é®é®é­¼é­¾é­»é®é®é®é®é­ºé®"],["eca1","é­½é®é´¥é´é´ é´é´é´©é´é´é´¢é´é´é´éºéºéºéº®éº­é»é»é»ºé¼é¼½å¦å¥å¢å¤å å©å´ååååååå¾åå¿åå£å£å£å£å¬­å¬¥å¬²å¬£å¬¬å¬§å¬¦å¬¯å¬®å­»å¯±å¯²å¶·å¹¬å¹ªå¾¾å¾»ææµæ¼æ§æ æ¥æ¤æ¨ææ¯æ©æ£æ«æ¤æ¨æææ¶æææªæªæªæª¥æªæªæªæª¡æªæªæªæª"],["ed40","æªæªæª¨æª¤æªæ©¿æª¦æªæªæªæªæ­æ®­æ°æ¿æ¾©æ¿´æ¿æ¿£æ¿æ¿­æ¿§æ¿¦æ¿æ¿²æ¿æ¿¢æ¿¨ç¡ç±ç¨ç²ç¤ç°ç¢ç³ç®ç¯çç²ç«ççªç­ç±ç¥ç¯çççççççççç¤ç©çµç«ç²ç·ç¶"],["eda1","ç´ç±ç¨ç°ç£³ç£½ç¤ç£»ç£¼ç£²ç¤ç£¹ç£¾ç¤ç¦«ç¦¨ç©ç©ç©ç©ç©ç©çª¾ç«ç«ç°ç°ç¯²ç°ç¯¿ç¯»ç°ç¯´ç°ç¯³ç°ç°ç°ç°ç¯¸ç¯½ç°ç¯°ç¯±ç°ç°ç³¨ç¸­ç¸¼ç¹ç¸³é¡ç¸¸ç¸ªç¹ç¹ç¹ç¸©ç¹ç¸°ç¸»ç¸¶ç¹ç¸ºç½ç½¿ç½¾ç½½ç¿´ç¿²è¬è»èèèèèè¼è©èèèèèèè§èè èè£è»è¤èè"],["ee40","è·è¼èè¡èºè¸èèèèèèèèè¢èèèè¹è¶èèèè¨è¾èªè­èè°è¬è¹èµè¼è®èèèèè·è¯èèè´è¶è¿è¸è½èè²è¤µè¤³è¤¼è¤¾è¥è¥è¤·è¥è¦­è¦¯è¦®è§²è§³è¬"],["eea1","è¬è¬è¬è¬è¬è¬¢è¬è¬è¬è¬è¬è¬è¬è¬è¬è¬è±è±°è±²è±±è±¯è²è²è³¹èµ¯è¹è¹è¹è¹è¹è¹è½è½éé¾é¸éé¢éééé¡éé é¡éé¯é¤ééé¼ééé¶éééé é­éééªé¹ééééé±é·é»é¡éé£é§ééééééééé·é®é°é¬é éééééé¡é"],["ef40","ééééé±é¡é¡é¡é¡é¡é¡é¤¥é¤«é¤¬é¤ªé¤³é¤²é¤¯é¤­é¤±é¤°é¦é¦£é¦¡é¨é§ºé§´é§·é§¹é§¸é§¶é§»é§½é§¾é§¼é¨éª¾é«¾é«½é¬é«¼é­é®é®¨é®é®é®¦é®¡é®¥é®¤é®é®¢é® é®¯é´³éµéµ§é´¶é´®é´¯é´±é´¸é´°"],["efa1","éµéµéµé´¾é´·éµé´½ç¿µé´­éºéºéºéº°é»é»é»»é»¿é¼¤é¼£é¼¢é½é¾ å±å­å®ååååååå¥°å¬¼å±©å±ªå·å¹­å¹®æææ­æ®æ±æªæ°æ«ææ©æ¿ææ½æ¸æææ¼ææææææ«æª¹æª½æ«¡æ«æªºæª¶æª·æ«æª´æª­æ­æ¯æ°çççççççæ¿¿çæ¿»ç¦æ¿¼æ¿·ççç¿ç¹çç½ç¶"],["f040","ç¸ççµçç¾ç¶ç»ççççç¤çççççç¦ç½ç¬ççºç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¦­ç¦¬ç©ç°ç°©ç°ç° ç°ç°­ç°ç°¦ç°¨ç°¢ç°¥ç°°ç¹ç¹ç¹ç¹£ç¹ç¹¢ç¹ç¹ç¹ ç¹ç¹ç¾µç¾³ç¿·ç¿¸èµèè"],["f0a1","èèèè´èèèèè³èµè½èèè¿èèèèè±è¶èè¤è¸è·è¾è©è§è¦è¢èè«èªè¥èè³è¤èèèè­èè£è¤èèè è´è¨èè¥è¥è¥è¥è¥è¥è¥è¥è¬ªè¬§è¬£è¬³è¬°è¬µè­è¬¯è¬¼è¬¾è¬±è¬¥è¬·è¬¦è¬¶è¬®è¬¤è¬»è¬½è¬ºè±è±µè²è²è²è³¾è´è´è´è¹è¹¢è¹ è¹è¹è¹è¹¥è¹§"],["f140","è¹è¹è¹¡è¹è¹©è¹è½è½è½è½é¨éºé»é¾é¨é¥é§é¯éªéµééé·éééé§ééªéé¦éééééé±éé²é¤é¨é´é£é¥éééé³ééå·éééé£é¢é¥é¬é®é¨é«é¤éª"],["f1a1","é¢é¥éééééºé¡é¡é¡é¢¸é¥é¤¼é¤ºé¨é¨é¨é¨é¨é¨é¨é¨é¨é¨é«é«é¬é¬é¬é¬©é¬µé­é­é­é¯é¯é¯é®¿é¯é®µé®¸é¯é®¶é¯é®¹é®½éµéµéµéµéµéµéµéµéµéµéµéµéµéµéµéºéºé»é¼é¼é¼é¼¥é¼«é¼ªé¼©é¼¨é½é½å´åµåå·å´å«å­å¦å§åªå¬å£å£å£å¤å¬½å¬¾å¬¿å·å¹°"],["f240","å¾¿æ»æææææææææææ«§æ« æ«æ«æ«æ«æ«æ«æ«æ««æ«æ«æ«æ­ æ®°æ°çç§ç çç«ç¡ç¢ç£ç©çç¤ççªçççççç¥ç¦ç¤ç£ç¡ççç·ççç çççç±ç¤ç¤"],["f2a1","ç¤¡ç¤ç¤ç¤ç¦°ç©§ç©¨ç°³ç°¼ç°¹ç°¬ç°»ç³¬ç³ªç¹¶ç¹µç¹¸ç¹°ç¹·ç¹¯ç¹ºç¹²ç¹´ç¹¨ç½ç½ç¾ç¾ç¾·ç¿½ç¿¾è¸èèè¤è¡è£è«è±è­èè¡è¨èèè¬è²è¸èèè£èèè°è¦è¯èè¢è èºè è¶è·è è è è è¼è è¿è è è¥¢è¥è¥è¥è¥¡è¥è¥è¥è¥è¦è¦·è¦¶è§¶è­è­è­è­è­è­è­è­è­"],["f340","è­è­è­è­è±è±·è±¶è²è´è´è´è¶¬è¶ªè¶­è¶«è¹­è¹¸è¹³è¹ªè¹¯è¹»è»è½è½è½è½è½è¾´éé¿é°é­ééééééé¹é¬ééé©é¦ééé®é£éééééé§é½ééé¡é©é«é¬é¨é¦"],["f3a1","é³é·é¶éééé¡é¡é¡é¡é¢¿é¢½é¢»é¢¾é¥é¥é¥é¦¦é¦§é¨é¨é¨¥é¨é¨¤é¨é¨¢é¨ é¨§é¨£é¨é¨é¨é«é¬é¬é¬é¬é¬·é¯ªé¯«é¯ é¯é¯¤é¯¦é¯¢é¯°é¯é¯é¯¬é¯é¯é¯¥é¯é¯¡é¯éµ·é¶é¶é¶é¶éµ±é¶éµ¸é¶é¶é¶éµ½éµ«éµ´éµµéµ°éµ©é¶éµ³éµ»é¶éµ¯éµ¹éµ¿é¶éµ¨éºéºé»é»¼é¼­é½é½é½é½é½é½å·å²"],["f440","åµå³å££å­å·å·å»®å»¯å¿å¿æ¹ææææææ¨æ£æ¤æ«³æ«°æ«ªæ«¨æ«¹æ«±æ«®æ«¯ç¼çµç¯ç·ç´ç±çç¸ç¿çºç¹çç»ç³çççç¨ç½ç¼çºç«çªç¾ç­ççççç²ç¤¥ç¤£ç¤§ç¤¨ç¤¤ç¤©"],["f4a1","ç¦²ç©®ç©¬ç©­ç«·ç±ç±ç±ç±ç±ç³®ç¹»ç¹¾çºçºç¾ºç¿¿è¹èèèè¨è©è¢è¿èè¾èèè¶èèèèè½è è è è è è è¥£è¥¦è¦¹è§·è­ è­ªè­è­¨è­£è­¥è­§è­­è¶®èºèºèºè½è½è½è½è½è½éééé·éµé²é³ééé»é ééé¾ééé¨éééµéé·éééééºéé¸éé¿"],["f540","é¼éé¶éééé éé®é¯é¹é»é½é¾é¡ é¡¢é¡£é¡é£é£é¥é¥é¥é¥é¥é¥é¨²é¨´é¨±é¨¬é¨ªé¨¶é¨©é¨®é¨¸é¨­é«é«é«é¬é¬é¬é°é°é¯·é°é°é¯¸é±é°é°é°é°é°é°é¶é¶é¶¤é¶é¶é¶é¶é¶"],["f5a1","é¶ é¶é¶é¶ªé¶é¶¡é¶é¶¢é¶¨é¶é¶£é¶¿é¶©é¶é¶¦é¶§éºéºéºé»¥é»¤é»§é»¦é¼°é¼®é½é½ é½é½é½é¾åºå¹åååå½å¾å­å­å·å·å»±æ½ææ¬æ«¼æ¬æ«¸æ¬ççççççççççç¾ççªçç¤­ç¤±ç¤¯ç±ç±ç³²çºçºçºçºçºçºç½ç¾»è°èèèªè¦èè£èèè§è®è¡è è©èè¥"],["f640","è ©è è è  è ¤è è «è¡è¥­è¥©è¥®è¥«è§ºè­¹è­¸è­è­ºè­»è´è´è¶¯èºèºè½è½è½éééé¹é¿é»é¶é©é½é¼é°é¹éªé·é¬éé±é¥é¤é£éµéºé¿é¡é¡¤é£é£é£é¥é¥é¨¹é¨½é©é©é©é©é¨º"],["f6a1","é¨¿é«é¬é¬é¬é¬é¬ºé­é°«é°é°é°¬é°£é°¨é°©é°¤é°¡é¶·é¶¶é¶¼é·é·é·é·é¶¾é·é·é¶»é¶µé·é¶¹é¶ºé¶¬é·é¶±é¶­é·é¶³é·é¶²é¹ºéºé»«é»®é»­é¼é¼é¼é¼±é½é½¥é½¤é¾äº¹åååå¥±å­å­å·å·å»²æ¡æ æ¦æ¢æ¬æ¬æ¬æ°ççççççç©ç¿ççççç­ç­ç¤µç¦´ç©°ç©±ç±ç±ç±ç±ç±"],["f740","ç³´ç³±çºç½ç¾èè«è´èµè³è¬è²è¶è ¬è ¨è ¦è ªè ¥è¥±è¦¿è¦¾è§»è­¾è®è®è®è®è­¿è´èºèºèºèºèºèºèºè½ è½¢éééééééééééé¿é£é¡ªé¡©é£é¥é¥é©é©é©é©é©é©é©"],["f7a1","é©é©é©é«é¬é¬«é¬»é­é­é±é±é°¿é±é°¹é°³é±é°¼é°·é°´é°²é°½é°¶é·é·é·é·é·é·é·é·é·é·©é·é·é·é·µé·é·éº¶é»°é¼µé¼³é¼²é½é½«é¾é¾¢å½åå£¨å£§å¥²å­å·è ¯å½ææææ©æ¥ææ«æ¬æ¬æ¬æ¯ççç¢çççç°çç±§ç±¦çºè¬èºèè¹è¼è±è»è¾è °è ²è ®è ³è¥¶è¥´è¥³è§¾"],["f840","è®è®è®è®è±è´èºè½¤è½£é¼é¢ééééééé é©é©é¬é¬é¬ é±é±é±é±é±é±é±é±é±é±é·»é··é·¯é·£é·«é·¸é·¤é·¶é·¡é·®é·¦é·²é·°é·¢é·¬é·´é·³é·¨é·­é»é»é»²é»³é¼é¼é¼¸é¼·é¼¶é½é½"],["f8a1","é½±é½°é½®é½¯ååå­å±­æ­æ­æ®æ¬çç¡çç ç£çç¥çç¤¸ç¦·ç¦¶ç±ªçºç¾è­èè ¸è ·è µè¡è®è®èºèºèº èºé¾é½éé«é¨é©é¥ééééé¥é©é«é­é±£é±§é±¦é±¢é±é± é¸é·¾é¸é¸é¸é¸é¸é¸é¸é·¿é·½é¸éº é¼é½é½´é½µé½¶åæ®æ¸æ¬æ¬æ¬æ¬ç¢ç¦çªççç¤¹ç±©ç±«ç³¶çº"],["f940","çºçºçºè è¡èèèè¥¹è¥ºè¥¼è¥»è§¿è®è®èº¥èº¤èº£é®é­é¯é±é³éé¡²é¥é±¨é±®é±­é¸é¸é¸é¸é¸é¸éº¡é»µé¼é½é½¸é½»é½ºé½¹åç¦ç±¯è ¼è¶²èº¦éé´é¸é¶éµé© é±´é±³é±±é±µé¸é¸é»¶é¼"],["f9a1","é¾¤ç¨ç¥ç³·èªè ¾è ½è ¿è®è²èº©è»éé¡³é¡´é£é¥¡é¦«é©¤é©¦é©§é¬¤é¸é¸é½ææ¬ç§èèº¨éééé©©é©¨é¬®é¸ç©èè®éé±¹éº·çµé©«é±ºé¸ç©çªéº¤é½¾é½é¾ç¢é¹è£å¢»æç²§å«ºââ¦ââ â¬â£ââ©âââ¤âââªâ¡ââ§âââ¥âââ«â¢ââ¨ââââ­â®â°â¯â"]]');
            }
          ),
          /***/
          31532: (
            /***/
            function(u) {
              u.exports = JSON.parse('[["0","\\u0000",127],["8ea1","ï½¡",62],["a1a1","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±ÃÃ·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââ"],["a2a1","ââ¡â â³â²â½â¼â»ãââââã"],["a2ba","âââââââªâ©"],["a2ca","â§â¨ï¿¢ââââ"],["a2dc","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["a2f2","â«â°â¯â­âªâ â¡Â¶"],["a2fe","â¯"],["a3b0","ï¼",9],["a3c1","ï¼¡",25],["a3e1","ï½",25],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a8a1","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["ada1","â ",19,"â ",9],["adc0","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["addf","ã»ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["b0a1","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["b1a1","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­ååå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿"],["b2a1","æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["b3a1","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±"],["b4a1","ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["b5a1","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥ææ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬"],["b6a1","ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["b7a1","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²"],["b8a1","æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["b9a1","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤éé é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼"],["baa1","æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["bba1","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºæææ"],["bca1","æ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["bda1","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·å"],["bea1","åå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["bfa1","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾"],["c0a1","æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["c1a1","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æ"],["c2a1","èèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["c3a1","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­èéç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µ"],["c4a1","å¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["c5a1","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°"],["c6a1","è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["c7a1","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦"],["c8a1","å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["c9a1","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æ"],["caa1","ç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["cba1","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡çæ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æº"],["cca1","æ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["cda1","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨çç"],["cea1","ç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["cfa1","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["d0a1","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["d1a1","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨"],["d2a1","è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["d3a1","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿åå"],["d4a1","ååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["d5a1","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±"],["d6a1","å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["d7a1","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææ"],["d8a1","ææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["d9a1","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼"],["daa1","æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["dba1","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£"],["dca1","æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["dda1","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾"],["dea1","æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["dfa1","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®çççççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼"],["e0a1","ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e1a1","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°"],["e2a1","ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e3a1","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­"],["e4a1","ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e5a1","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼º"],["e6a1","ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e7a1","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèè"],["e8a1","èµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e9a1","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®è"],["eaa1","èè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["eba1","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«"],["eca1","è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["eda1","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸"],["eea1","ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["efa1","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿éééééééé é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·éé"],["f0a1","ééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["f1a1","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·"],["f2a1","é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["f3a1","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ "],["f4a1","å ¯æ§éç¤åç"],["f9a1","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·"],["faa1","å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["fba1","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§é"],["fca1","ééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["fcf1","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["8fa2af","ËËÂ¸ËËÂ¯ËËï½ÎÎ"],["8fa2c2","Â¡Â¦Â¿"],["8fa2eb","ÂºÂªÂ©Â®â¢Â¤â"],["8fa6e1","ÎÎÎÎÎª"],["8fa6e7","Î"],["8fa6e9","ÎÎ«"],["8fa6ec","Î"],["8fa6f1","Î¬Î­Î®Î¯ÏÎÏÏÏÏÎ°Ï"],["8fa7c2","Ð",10,"ÐÐ"],["8fa7f2","Ñ",10,"ÑÑ"],["8fa9a1","ÃÄ"],["8fa9a4","Ä¦"],["8fa9a6","Ä²"],["8fa9a8","ÅÄ¿"],["8fa9ab","ÅÃÅ"],["8fa9af","Å¦Ã"],["8fa9c1","Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÅÅÃ¸ÅÃÅ§Ã¾"],["8faaa1","ÃÃÃÃÄÇÄÄÃÃÄÄÄÃÄÄÃÃÃÃÄÄÄÄ"],["8faaba","ÄÄÄ¢Ä Ä¤ÃÃÃÃÇÄ°ÄªÄ®Ä¨Ä´Ä¶Ä¹Ä½Ä»ÅÅÅÃÃÃÃÃÇÅÅÃÅÅÅÅÅÅ ÅÅ¤Å¢ÃÃÃÃÅ¬ÇÅ°ÅªÅ²Å®Å¨ÇÇÇÇÅ´ÃÅ¸Å¶Å¹Å½Å»"],["8faba1","Ã¡Ã Ã¤Ã¢ÄÇÄÄÃ¥Ã£ÄÄÄÃ§ÄÄÃ©Ã¨Ã«ÃªÄÄÄÄÇµÄÄ"],["8fabbd","Ä¡Ä¥Ã­Ã¬Ã¯Ã®Ç"],["8fabc5","Ä«Ä¯Ä©ÄµÄ·ÄºÄ¾Ä¼ÅÅÅÃ±Ã³Ã²Ã¶Ã´ÇÅÅÃµÅÅÅÅÅÅ¡ÅÅ¥Å£ÃºÃ¹Ã¼Ã»Å­ÇÅ±Å«Å³Å¯Å©ÇÇÇÇÅµÃ½Ã¿Å·ÅºÅ¾Å¼"],["8fb0a1","ä¸ä¸ä¸ä¸ä¸ä¸ä¸£ä¸¤ä¸¨ä¸«ä¸®ä¸¯ä¸°ä¸µä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹£ä¹¨ä¹©ä¹´ä¹µä¹¹ä¹¿äºäºäºäºäº¯äº¹ä»ä»ä»ä»ä» ä»¡ä»¢ä»¨ä»¯ä»±ä»³ä»µä»½ä»¾ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼®ä¼±ä½ ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½£ä½ªä½¬ä½®ä½±ä½·ä½¸ä½¹ä½ºä½½ä½¾ä¾ä¾ä¾"],["8fb1a1","ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾²ä¾·ä¾¹ä¾»ä¾¼ä¾½ä¾¾ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ ä¿¢ä¿°ä¿²ä¿¼ä¿½ä¿¿åååååååååååååååå¢å§å®å°å²å³åµååååååååååååååå å¢å£å¦å§åªå­å°å±å»åååååååå"],["8fb2a1","ååååååå",4,"åªå¯å°å¹åºå½åååååååååååååå¢å¤å¦å¨å©å¯å±å¶åºå¾ååååååååå²åååååååå£å§å¨å¬å­å¯å±å³å´åµå¸å¹ååååååååå¤å¦å¾ååååååå¡å£å­å¸åºå¼å¾å¿å"],["8fb3a1","ååååååååå¢å¥å®å²å³å´å·ååååååååå¢å¨å±å²åµå¼ååååååååå å¡å¦å®å·å¸å¹ååååååååååååå¤å¥å¦å§å¯å°å¶å·å¸åºå»å½åååååååååååå¡å¥å¨å©åªå¬å°å±å´å¶å·åååå"],["8fb4a1","ååååååååå¥å§å¨å©å«å¬å­å°å²åµå¼å½å¾åååååå¡å£å¥å¬å­å²å¹å¾ååååååååå¡å¤åªå«å¯å²å´åµå·å¸åºå½åååååååååå å¦å§åµåååå¡å§å¨åªå¯å±å´åµååååååå¢å¤å¦å§å©å«å­å®å´å¿"],["8fb5a1","åååååååååååå¡å¦å§å©åªå­å®å±å·å¹åºå»å¿ååååå åªå¬å¯å¶å¼å¾å¿ååååååååååªå«å²åµå¶å»å¼å½åååååååååååå å¡å¤å¦å¿åååååååååååå£å¤å­å²å¿ååååååååå"],["8fb6a1","åååååå¢å©å¶å¿åååå",5,"åå¬å°å³åµå·å¹å»å¼å½å¿åååååååååååå å¡å¢å£å¦å©å­å¯å±å²åµåååååååååååå¦å§å¨å©å«å¬å­å±å³å·å¾ååååååååååååå¡å¤",4,"å±å«å­"],["8fb7a1","å¶å·ååååååååååå å¢å£å¤å¥å©åªå¬å®å¯å³å´å½å¾å¿åååååå¢å¥å§å¨å«å­",4,"å³å´åµå·å¹åºå»å¼å¾åååååååååååå¡åå§å¨å©å¬å¸å½åååååååå¤å¦å§å©å­å°åµå¶å¸å½å¾å¿å å å å å¡"],["8fb8a1","å å å å å å  å ¦å §å ­å ²å ¹å ¿å¡å¡å¡å¡å¡å¡å¡å¡¡å¡¤å¡§å¡¨å¡¸å¡¼å¡¿å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢ å¢¡å¢¢å¢¦å¢©å¢±å¢²å£å¢¼å£å£å£å£å£å£å£å£å£å£å£¡å£¢å£©å£³å¤å¤å¤å¤å¤å¤å¤èå¤å¤¡å¤£å¤¤å¤¨å¤¯å¤°å¤³å¤µå¤¶å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥¡å¥£å¥«å¥­"],["8fb9a1","å¥¯å¥²å¥µå¥¶å¥¹å¥»å¥¼å¦å¦å¦å¦å¦å¦å¦å¦¤å¦§å¦­å¦®å¦¯å¦°å¦³å¦·å¦ºå¦¼å§å§å§å§å§å§å§å§å§å§å§£å§¤å§§å§®å§¯å§±å§²å§´å§·å¨å¨å¨å¨å¨å¨å¨å¨å¨£å¨¤å¨§å¨¨å¨ªå¨­å¨°å©å©å©å©å©å©å©å©å©£å©¥å©§å©­å©·å©ºå©»å©¾åªåªåªåªåªåªåªåªåª åª¢åª§åª¬åª±åª²åª³åªµåª¸åªºåª»åª¿"],["8fbaa1","å«å«å«å«å«å«å« å«¥å«ªå«®å«µå«¶å«½å¬å¬å¬å¬å¬´å¬å¬å¬å¬¡å¬¥å¬­å¬¸å­å­å­å­å­å­å­¨å­®å­¯å­¼å­½å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®¨å®©å®¬å®­å®¯å®±å®²å®·å®ºå®¼å¯å¯å¯å¯å¯",4,"å¯ å¯¯å¯±å¯´å¯½å°å°å°å°å°£å°¦å°©å°«å°¬å°®å°°å°²å°µå°¶å±å±å±å±¢å±£å±§å±¨å±©"],["8fbba1","å±­å±°å±´å±µå±ºå±»å±¼å±½å²å²å²å²å²å²å²å² å²¢å²£å²¦å²ªå²²å²´å²µå²ºå³å³å³å³å³å³®å³±å³²å³´å´å´å´å´å´«å´£å´¤å´¦å´§å´±å´´å´¹å´½å´¿åµåµåµåµåµåµåµåµåµåµ åµ¡åµ¢åµ¤åµªåµ­åµ°åµ¹åµºåµ¾åµ¿å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶ å¶§å¶«å¶°å¶´å¶¸å¶¹å·å·å·å·å·å·å·å· å·¤"],["8fbca1","å·©å·¸å·¹å¸å¸å¸å¸å¸å¸å¸å¸å¸ å¸®å¸¨å¸²å¸µå¸¾å¹å¹å¹å¹å¹å¹å¹å¹å¹å¹¨å¹ª",4,"å¹°åºåºåºåº¢åº¤åº¥åº¨åºªåº¬åº±åº³åº½åº¾åº¿å»å»å»å»å»å»å»å»å»å»å»¥å»«å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤å¼¨å¼«å¼¬å¼®å¼°å¼´å¼¶å¼»å¼½å¼¿å½å½å½å½å½å½å½å½å½å½ å½£å½¤å½§"],["8fbda1","å½¯å½²å½´å½µå½¸å½ºå½½å½¾å¾å¾å¾å¾å¾å¾å¾¢å¾§å¾«å¾¤å¾¬å¾¯å¾°å¾±å¾¸å¿å¿å¿å¿å¿å¿",4,"å¿å¿¡å¿¢å¿¨å¿©å¿ªå¿¬å¿­å¿®å¿¯å¿²å¿³å¿¶å¿ºå¿¼ææææææææææ¤æ­æ³æµæææææææææææ¡æ§æ±æ¾æ¿ææææææææææææ¢æ¤æ¥æ¨æ°æ±æ·"],["8fbea1","æ»æ¾æææææææææææææææ¢æ¥æ²æµæ¸æ¼æ½æææææ",4,"ææææææ¢æªæ«æ°æ±æµæ¶æ·æ¹ææææææ æ¬æ²æ¸æ»æ¼æ¿ææææææææææææææ æ¥æ¨æªæ­æ¸æ¹æ¼æææææææææææ¡æ¢æ§æ©æ¥"],["8fbfa1","æ¬æ­æ¯ææææææææ æ¢æ£æ§æ©æ«æ¹æ½æææææææææææææ¤æ­æ¯æ³æºæ½æææææ¦æ¨æ³æ¶æ·æºæ¾æ¿ææææææªæ²æ´æ¼æ½ææææææææææ©æªæ­æµæ¶æ¹æ¼ææææææææææææææ¥æ¦æ¬æ­æ±æ´æµ"],["8fc0a1","æ¸æ¼æ½æ¿æææææææææææ¤æ¦æ­æ®æ¯æ½ææææææææææ æ¥æªæ¬æ²æ³æµæ¸æ¹ææææææææ æ¢æ¤æ¥æ©æªæ¯æ°æµæ½æ¿ææææææææææææ æ¡æ£æ­æ³æ´æ»æ½æææææææææææ¡æ£æ¦æ¨æ¬æ³æ½æ¾æ¿"],["8fc1a1","æææææææææææ¤æ¥æ©æªæ­æ°æµæ·æ»æ¿ææææææææææææææ¢æ¦æ©æ®æ±æºæ¼æ½ææææææææ æ§æ«æºæ½ææææææææ æ£æ¦æ®æ²æ³æ´æ¿ææææææææææ°æ²æ´æµæ¹æ¾æ¿ææææææææææ"],["8fc2a1","ææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ±æ³æ¹æ·æææææææææææææ æ¡æ»æªæ«æ¬æ¾æ³æµæ¿æ·æ¸æ¹æ»ææ¼æææææææææææ æ¤æ­æ±æ²æµæ»æ¿æææææææææææ¨æ«æ¬æ®æºæææææææ æ¢æ³æ¾æææææææ"],["8fc3a1","æ¦æ¬æ®æ´æ¶æ»æææææææææææ°æ±æ²æµæ»æ¼æ½æ¹æææææææææææ¡æ¦æ°æ²æ¶æ·æ¡æ æ æ æ æ ¨æ §æ ¬æ ­æ ¯æ °æ ±æ ³æ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡«æ¡®",4,"æ¡µæ¡¹æ¡ºæ¡»æ¡¼æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢¡æ¢£æ¢¥æ¢©æ¢ªæ¢®æ¢²æ¢»æ£æ£æ£æ£"],["8fc4a1","æ£æ£æ£æ£æ£æ£æ£æ£¥æ£¨æ£ªæ£«æ£¬æ£­æ£°æ£±æ£µæ£¶æ£»æ£¼æ£½æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤±æ¤³æ¤µæ¤¸æ¤»æ¥æ¥æ¥æ¥æ¥æ¥æ¥£æ¥¤æ¥¥æ¥¦æ¥¨æ¥©æ¥¬æ¥°æ¥±æ¥²æ¥ºæ¥»æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦¡æ¦¥æ¦¦æ¦¨æ¦«æ¦­æ¦¯æ¦·æ¦¸æ¦ºæ¦¼æ§æ§æ§æ§æ§æ§¢æ§¥æ§®æ§¯æ§±æ§³æ§µæ§¾æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨ æ¨¤æ¨¨æ¨°æ¨²"],["8fc5a1","æ¨´æ¨·æ¨»æ¨¾æ¨¿æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©¤æ©§æ©ªæ©±æ©³æ©¾æªæªæªæªæªæªæªæªæªæªæªæª¥æª«æª¯æª°æª±æª´æª½æª¾æª¿æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«¤æ«§æ«¬æ«°æ«±æ«²æ«¼æ«½æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬¤æ¬¨æ¬«æ¬¬æ¬¯æ¬µæ¬¶æ¬»æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­ æ­§æ­«æ­®æ­°æ­µæ­½"],["8fc6a1","æ­¾æ®æ®æ®æ®æ®æ® æ®¢æ®£æ®¨æ®©æ®¬æ®­æ®®æ®°æ®¸æ®¹æ®½æ®¾æ¯æ¯æ¯æ¯æ¯æ¯æ¯¡æ¯£æ¯¦æ¯§æ¯®æ¯±æ¯·æ¯¹æ¯¿æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°¦æ°§æ°¨æ°¬æ°®æ°³æ°µæ°¶æ°ºæ°»æ°¿æ±æ±æ±æ±æ±æ±æ±æ±æ±æ±«æ±­æ±¯æ±´æ±¶æ±¸æ±¹æ±»æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²°æ²²æ²´æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["8fc7a1","æ³æ³æ³ æ³§æ³©æ³«æ³¬æ³®æ³²æ³´æ´æ´æ´æ´æ´æ´æ´æ´æ´¦æ´§æ´¨æ±§æ´®æ´¯æ´±æ´¹æ´¼æ´¿æµæµæµæµ¡æµ¥æµ§æµ¯æµ°æµ¼æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶ªæ¶¬æ¶´æ¶·æ¶¹æ¶½æ¶¿æ·æ·æ·æ·æ·æ·æ·æ·æ·æ· æ·¢æ·¥æ·©æ·¯æ·°æ·´æ·¶æ·¼æ¸æ¸æ¸æ¸¢æ¸§æ¸²æ¸¶æ¸¹æ¸»æ¸¼æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹"],["8fc8a1","æ¹¢æ¹£æ¹¨æ¹³æ¹»æ¹½æºæºæºæº æº§æº­æº®æº±æº³æº»æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»«æ»­æ»®æ»¹æ»»æ»½æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼¦æ¼©æ¼ªæ¼¯æ¼°æ¼³æ¼¶æ¼»æ¼¼æ¼­æ½æ½æ½æ½æ½æ½æ½æ½æ½æ½¡æ½¢æ½¨æ½¬æ½½æ½¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾ æ¾¥æ¾¦æ¾§æ¾¨æ¾®æ¾¯æ¾°æ¾µæ¾¶æ¾¼æ¿æ¿æ¿æ¿"],["8fc9a1","æ¿æ¿æ¿¨æ¿©æ¿°æ¿µæ¿¹æ¿¼æ¿½ççççççç ç£ç¯ç´ç·ç¹ç¼çççççççççççç¤ç¥ç¬ç®çµç¶ç¾çççç",4,"çç¤ç«ç°ç±ç´ç·ççççççççç¤çºç",4,"ççççç ç«ç­ç¯ç°ç±ç¸ççççççççççççç "],["8fcaa1","ç¨ç¹çççççççç ç¢ç¯ç°ç²ç³çºç¿ççççççççççç¸ç¾çççççççççç¤ç«ç¯ç´ç¸ç¹çççççççççççççç ç£ç¨ç«ç®ç¯ç±ç·ç¸ç»ç¼ç¿ççççççç¨ç­ç®ç±ç´ç¾ççççççççç¥ç³ç´çºç»"],["8fcba1","ç¾çççççççççççç¢ç¤ç§ç¨ç¬ç±ç²çµçºç»ç½çççççççççç ç¦ç§ç©ç«ç¬ç®ç¯ç±ç·ç¹ç¼ççççççççççççççç ç¢ç¥ç¦çªç«ç­çµç·ç¹ç¼ç½ç¿çççççççççççç¡ç£ç¦ç§ç©ç´çµç·ç¹çºç»ç½"],["8fcca1","ç¿ççççççççç¤ç¦ç¨",9,"ç¹çççççççççççç¢ç¦ç§ç¨ç«ç­ç®ç±ç²çççççççççççççççç ç¡ç£ç¦ç¨ç©çªç«ç®ç¯ç±ç²çµç¹ç»ç¿ççççççççççç¤ç¨çªç«ç¯ç´çºç»ç¼ç¿ç"],["8fcda1","çççç ç¡ç¤ç§ç©çªç¯ç¶ç¹ç½ç¾ç¿ççççççççççç¡ç¯ç±ç¹",5,"ççççççççç¢ç¤ç´çºç¿ççççççççççç ç¡ç¤ç§ç¬ç®ç¯ç±ç¹ççççççççççççççççççç£ç¥ç¦ç©ç­ç²ç³çµç¸ç¹"],["8fcea1","çºç¼çççççççççççç¤ç¥ç­ç®ç¯ç±ç´çççççççççç ç¢",6,"çªç­ç½ççççççççç ç¦ç¨ç¬ç°ç±ç¶ç¹ç¼çççççççççççç¢ç¨ç­ç®ç¯ç´çµç¶ç¹ç½ç¾çççççççççççççç ç¢"],["8fcfa1","ç¤ç§çªç¬ç°ç²ç³ç´çºç½çççççççççç¢ç§çªç®ç¯ç±çµç¾ççççççççç ç¤ç¦çªç¬ç°ç±ç´ç¸ç»ç ç ç ç ç ç ç ç ¡ç ¢ç £ç ­ç ®ç °ç µç ·ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ ç¡¡ç¡£ç¡¤ç¡¨ç¡ªç¡®ç¡ºç¡¾ç¢ç¢ç¢ç¢ç¢¡ç¢ç¢ç¢ç¢¤ç¢¨ç¢¬ç¢­ç¢°ç¢±ç¢²ç¢³"],["8fd0a1","ç¢»ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£¤ç£ç£ç£ ç£¡ç£¦ç£ªç£²ç£³ç¤ç£¶ç£·ç£ºç£»ç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¤ ç¤¥ç¤§ç¤©ç¤­ç¤±ç¤´ç¤µç¤»ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥§ç¥©ç¥«ç¥²ç¥¹ç¥»ç¥¼ç¥¾ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦¡ç¦¨ç¦©ç¦«ç¦¯ç¦±ç¦´ç¦¸ç¦»ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§"],["8fd1a1","ç§ ç§¢ç§¥ç§ªç§«ç§­ç§±ç§¸ç§¼ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨¡ç¨§ç¨«ç¨­ç¨¯ç¨°ç¨´ç¨µç¨¸ç¨¹ç¨ºç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç© ç©¥ç©§ç©ªç©­ç©µç©¸ç©¾çªçªçªçªçªçªçªçªçªçªçª çª£çª¬çª³çªµçª¹çª»çª¼ç«ç«ç«ç«ç«ç«ç«¨ç«©ç««ç«¬ç«±ç«´ç«»ç«½ç«¾ç¬ç¬ç¬ç¬£ç¬§ç¬©ç¬ªç¬«ç¬­ç¬®ç¬¯ç¬°"],["8fd2a1","ç¬±ç¬´ç¬½ç¬¿ç­ç­ç­ç­ç­ç­ ç­¤ç­¦ç­©ç­ªç­­ç­¯ç­²ç­³ç­·ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®¥ç®¬ç®¯ç®°ç®²ç®µç®¶ç®ºç®»ç®¼ç®½ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯¨ç¯ªç¯²ç¯´ç¯µç¯¸ç¯¹ç¯ºç¯¼ç¯¾ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç° ç°¥ç°¦ç°¨ç°¬ç°±ç°³ç°´ç°¶ç°¹ç°ºç±ç±ç±ç±ç±ç±ç±",5],["8fd3a1","ç±¡ç±£ç±§ç±©ç±­ç±®ç±°ç±²ç±¹ç±¼ç±½ç²ç²ç²ç²ç²ç² ç²¦ç²°ç²¶ç²·ç²ºç²»ç²¼ç²¿ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³¦ç³©ç³«ç³µç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´£ç´¦ç´ªç´­ç´±ç´¼ç´½ç´¾çµçµçµçµçµçµçµçµçµçµçµçµçµ¥çµ§çµªçµ°çµ¸çµºçµ»çµ¿ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶"],["8fd4a1","ç¶ç¶¦ç¶§ç¶ªç¶³ç¶¶ç¶·ç¶¹ç·",4,"ç·ç·ç·ç·ç·ç¸ç·¢ç·¥ç·¦ç·ªç·«ç·­ç·±ç·µç·¶ç·¹ç·ºç¸ç¸ç¸ç¸ç¸ç¸ç¸ç¸ ç¸§ç¸¨ç¸¬ç¸­ç¸¯ç¸³ç¸¶ç¸¿ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹¡ç¹¢ç¹¥ç¹«ç¹®ç¹¯ç¹³ç¹¸ç¹¾çºçºçºçºçºçºçºçºçºçºçºç¼¼ç¼»ç¼½ç¼¾ç¼¿ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½¡ç½£ç½¤ç½¥ç½¦ç½­"],["8fd5a1","ç½±ç½½ç½¾ç½¿ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾¡ç¾¢ç¾¦ç¾ªç¾­ç¾´ç¾¼ç¾¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿£ç¿¥ç¿¨ç¿¬ç¿®ç¿¯ç¿²ç¿ºç¿½ç¿¾ç¿¿èèèèèèèèèèèèèè è¤è¦è¬è®è°è´èµè·è¹èºè¼è¾èèè è¤è¦è­è±èµèèèèèè¦è§è«è¸è¹èèèèèèèèè è­è®"],["8fd6a1","è°è²è³è¶è¹èºè¾èèèèèèèè è¤è§è¬è°èµèºè¼èèèèèèè è¡è§è¨è©è­è¯è·èèèèèèèèèèèè¢è®è²è´è»èèèèèèèèèèèè¡è¤è«è¬è°è±è²èµè¶è¸è¹è½è¿èèèèèèèèè¡è¢è¨è²è´èºèèèè"],["8fd7a1","èèèèèèè è£è§è­è´è»è½è¿èèèèèèèèèèèèèèè è¡è£è¤è§è¨è©èªè®è°è²è´è·èºè¼è¾è¿èèèèè è¢è¤è¨èªè­è¯è¶è·è½è¾èèèèèèèèèèèè¡è¢è¬è­è®è°è³è·èºè¼è½èèèèèèèèèèè°è¸"],["8fd8a1","è½è¿èèèèèèèèèèèèèè¦è§è©è¬è¾è¿èèèèèèèèèè¨èªè¶è¸è¹è¼èèèèèèèè­è¯è¹èèèèèèèèèèèèèè è¤è¥è§èªè°è³è´è¶è¸è¼è½èèèèèèè¦è¨è©èªè¯è±è´èºè½è¾èèèèèèè"],["8fd9a1","èè§èªè¯è°è±è²è·è²èºè»è½èèèèèèèèè¢è£è¤è¥è§èªè«è¯è³è´è¶è¿èè",4,"èèè",6,"è¤è«è¯è¹èºè»è½è¿èèèèèèèèèèèè è¢è¥è§è´è¶è·è¸è¼è½è¾è¿èèèèèè­èèèè è¦è¨è­è³è¶è¼"],["8fdaa1","è¿èèèèèèèèèèèèè¡è§è©è¶è¸èºè¼è½èèèèèèèèèèè ",4,"è©è¬è¯èµè¶è·èºèèèèèèè¡è¦è§è¨è­è±è³è´èµè·è¸è¹è¿èèèèèèèèèèè è£è¥è§èèºè¼è½èèèèèèèèèèèèè¡è£"],["8fdba1","è¨è®è¯è±è²è¹èºè¼è½è¾èèèèèèè¡è¤è¥è¯è±è²è»è",6,"èèèèèèèèèè è£è§è¬è­è®è±èµè¾è¿èèèèèèèèèèèè¢è£è¤èªè«è­è±è³è¸èºè¿è è è è è è è è è è è è è è è è è è ¨è ­è ®è °è ²è µ"],["8fdca1","è ºè ¼è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡ è¡¤è¡©è¡±è¡¹è¡»è¢è¢è¢è¢è¢è¢è¢ è¢¨è¢ªè¢ºè¢½è¢¾è£è£",4,"è£è£è£è£è£è£§è£¯è£°è£±è£µè£·è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤ è¤¦è¤§è¤¨è¤°è¤±è¤²è¤µè¤¹è¤ºè¤¾è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥¡è¥¢è¥£è¥«è¥®è¥°è¥³è¥µè¥º"],["8fdda1","è¥»è¥¼è¥½è¦è¦è¦è¦è¦è¦è¦è¦è¦ è¦¥è¦°è¦´è¦µè¦¶è¦·è¦¼è§",4,"è§¥è§©è§«è§­è§±è§³è§¶è§¹è§½è§¿è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨ è¨¢è¨¤è¨¦è¨«è¨¬è¨¯è¨µè¨·è¨½è¨¾è©è©è©è©è©è©è©è©è©è©è©è©è©è©¡è©¥è©§è©µè©¶è©·è©¹è©ºè©»è©¾è©¿èªèªèªèªèªèªèªèªèªèªèªèª§èª©èª®èª¯èª³"],["8fdea1","èª¶èª·èª»èª¾è«è«è«è«è«è«è«è«è«è«è«è«è«¬è«°è«´è«µè«¶è«¼è«¿è¬è¬è¬è¬è¬è¬è¬è¬è¬­è¬°è¬·è¬¼è­",4,"è­è­è­è­è­è­è­è­£è­­è­¶è­¸è­¹è­¼è­¾è®è®è®è®è®è®è®è®è®è®è®è°¸è°¹è°½è°¾è±è±è±è±è±è±è±è±è±è±è±è±è±è±£è±¤è±¦è±¨è±©è±­è±³è±µè±¶è±»è±¾è²"],["8fdfa1","è²è²è²è²è²è²è²è²è²¤è²¹è²ºè³è³è³è³è³è³è³è³è³è³¡è³¨è³¬è³¯è³°è³²è³µè³·è³¸è³¾è³¿è´è´è´è´è´è´èµ¥èµ©èµ¬èµ®èµ¿è¶è¶è¶è¶è¶è¶è¶è¶è¶è¶ è¶¦è¶«è¶¬è¶¯è¶²è¶µè¶·è¶¹è¶»è·è·è·è·è·è·è·è·è·è·è·è·è·¤è·¥è·§è·¬è·°è¶¼è·±è·²è·´è·½è¸è¸è¸è¸è¸è¸è¸è¸è¸ è¸¡è¸¢"],["8fe0a1","è¸£è¸¦è¸§è¸±è¸³è¸¶è¸·è¸¸è¸¹è¸½è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹¡è¹¢è¹©è¹¬è¹­è¹¯è¹°è¹±è¹¹è¹ºè¹»èºèºèºèºèºèºèºèºèºèºèº¢èº§èº©èº­èº®èº³èºµèººèº»è»è»è»è»è»è»è»è»è»è»¨è»®è»°è»±è»·è»¹è»ºè»­è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼ è¼¡è¼£è¼¥è¼§è¼¨è¼¬è¼­è¼®è¼´è¼µè¼¶è¼·è¼ºè½è½"],["8fe1a1","è½è½è½è½",4,"è½è½è½è½¥è¾è¾ è¾¡è¾¤è¾¥è¾¦è¾µè¾¶è¾¸è¾¾è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿ è¿£è¿¤è¿¨è¿®è¿±è¿µè¿¶è¿»è¿¾ééééééé¨é©é¯éªé¬é­é³é´é·é¿éééééé¢é¦é§é¬é°é´é¹éééééééééééé é¡é¢é¥é°é²é³é´é¶é½éé¾é"],["8fe2a1","éééééééééééé¥éé¶é«é¯é°é´é¾é¿ééééééééééééééé é¥é¢é£é§é©é®é¯é±é´é¶é·é¹éºé¼é½éééééééééé¡é¤é§é­é´é¹éºé»ééééééééééééé¡é¦é¨é¬é­é®é°é±é²é³é¶é»é¼é½é¿"],["8fe3a1","éééééééééé¤é¥é©éªé¬",5,"é·é¹é»é½ééééééééééééééééé£é¤é¥é¦é¨é®é¯é°é³éµé¶é¸é¹éºé¼é¾ééééééééééééééé é¡é¥é§é¨é©é®é¯é°éµ",4,"é»é¼é½é¿ééééééé"],["8fe4a1","ééé é¤é¥é§é¨é«é¯é²é¶é¸éºé»é¼é½é¿",4,"éééééééééééééééééé é¡é£é¥é§é¨é¬é®é°é¹é»é¿éééééééééééé¡é¤é¥é§é©éªé³é´é¶é·éééééééééééé¤é¥é§é©éªé­é¯é°é±é³é´é¶"],["8fe5a1","éºé½é¿éééééééééééééé¡é£é¤é¦é¨é«é´éµé¶éºé©éééééé",4,"éééééé¢é¦é§é¹é·é¸éºé»é½ééééééééééééé®é¯é±é²é³é´é»é¿é½éééééééééé¡é£é¨é«é­é®é¯é±é²ééé¸é¹"],["8fe6a1","é¾ééééééééé¡é¦é©é«é¬é´é¶éºé½é¿éééééééééééééé é¤é¦ééé¢é¤é¥é¦é¬é±é³é·é¸é¹éºé¼é½ééééééé¡é®é´é»é¼é¾é¿ééééééééééé¤é¥é¦é©é®é¯é³éºééå¶²éééééé©é¯é±éºé"],["8fe7a1","ééééééé¡é¢é£é¨é±é³ééééééééééé£é§éªé®é³é¶é·é¸é»é½é¿éééééééééé¢é¬é®é±é²éµé¶é¸é¹éºé¼é¾é¿éééééééééééééééééé éé¡é¤é¯é±é´é·é¸éºé é é é é é é é é é  é £é ¦"],["8fe8a1","é «é ®é ¯é °é ²é ³é µé ¥é ¾é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡¢é¡£é¡¥é¡¦é¡ªé¡¬é¢«é¢­é¢®é¢°é¢´é¢·é¢¸é¢ºé¢»é¢¿é£é£é£é£é£¡é££é£¥é£¦é£§é£ªé£³é£¶é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤¢é¤¦é¤§é¤«é¤±",4,"é¤¹é¤ºé¤»é¤¼é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥ é¦é¦é¦é¦¦é¦°é¦±é¦²é¦µ"],["8fe9a1","é¦¹é¦ºé¦½é¦¿é§é§é§é§é§é§é§é§é§§é§ªé§«é§¬é§°é§´é§µé§¹é§½é§¾é¨é¨é¨é¨é¨é¨é¨é¨é¨é¨ é¨¢é¨£é¨¤é¨§é¨­é¨®é¨³é¨µé¨¶é¨¸é©é©é©é©é©é©é©é©é©é©é©éªªéª¬éª®éª¯éª²éª´éªµéª¶éª¹éª»éª¾éª¿é«é«é«é«é«é«é«é«é«é«é«é«é« é«¤é«¥é«§é«©é«¬é«²é«³é«µé«¹é«ºé«½é«¿",4],["8feaa1","é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬ é¬¦é¬«é¬­é¬³é¬´é¬µé¬·é¬¹é¬ºé¬½é­é­é­é­é­é­é­é­é­¡é­£é­¥é­¦é­¨é­ª",4,"é­³é­µé­·é­¸é­¹é­¿é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®¦é®§é®©é®¬é®°é®±é®²é®·é®¸é®»é®¼é®¾é®¿é¯é¯é¯é¯é¯é¯é¯é¯é¯é¯¥é¯§é¯ªé¯«é¯¯é¯³é¯·é¯¸"],["8feba1","é¯¹é¯ºé¯½é¯¿é°é°é°é°é°é°é°é°é°é°é°é°¢é°£é°¦",4,"é°±é°µé°¶é°·é°½é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±£é±©é±ªé±é±«é±¨é±®é±°é±²é±µé±·é±»é³¦é³²é³·é³¹é´é´é´é´é´é´é´é´é´¯é´°é´²é´³é´´é´ºé´¼éµé´½éµéµéµéµéµéµéµéµ£éµ¢éµ¥éµ©éµªéµ«éµ°éµ¶éµ·éµ»"],["8feca1","éµ¼éµ¾é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶¡é¶ªé¶¬é¶®é¶±é¶µé¶¹é¶¼é¶¿é·é·é·é·é·é·é·é·é·é·é·é· é·¥é·§é·©é·«é·®é·°é·³é·´é·¾é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¹ºé¹»é¹¼éºéºéºéºéºéºéºéºéºéºéºéºéº¤éº¨éº¬éº®éº¯éº°éº³éº´éºµé»é»é»é»é»é»¤é»§é»¬é»­é»®é»°é»±é»²é»µ"],["8feda1","é»¸é»¿é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼¢é¼¦é¼ªé¼«é¼¯é¼±é¼²é¼´é¼·é¼¹é¼ºé¼¼é¼½é¼¿é½é½",4,"é½é½é½é½é½é½é½é½é½¨é½©é½­",4,"é½³é½µé½ºé½½é¾é¾é¾é¾é¾é¾é¾é¾é¾¡é¾¢é¾£é¾¥"]]');
            }
          ),
          /***/
          36258: (
            /***/
            function(u) {
              u.exports = JSON.parse('{"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}');
            }
          ),
          /***/
          44346: (
            /***/
            function(u) {
              u.exports = JSON.parse('[["a140","î",62],["a180","î",32],["a240","î¦",62],["a280","î¥",32],["a2ab","î¦",5],["a2e3","â¬î­"],["a2ef","î®î¯"],["a2fd","î°î±"],["a340","î",62],["a380","î",31,"ã"],["a440","î¦",62],["a480","î¥",32],["a4f4","î²",10],["a540","î",62],["a580","î",32],["a5f7","î½",7],["a640","î¦",62],["a680","î¥",32],["a6b9","î",7],["a6d9","î",6],["a6ec","îî"],["a6f3","î"],["a6f6","î",8],["a740","î",62],["a780","î",32],["a7c2","î ",14],["a7f2","î¯",12],["a896","î¼",10],["a8bc","á¸¿"],["a8bf","Ç¹"],["a8c1","îîîî"],["a8ea","î",20],["a958","î¢"],["a95b","î£"],["a95d","î¤î¥î¦"],["a989","ã¾â¿°",11],["a997","î´",12],["a9f0","î ",14],["aaa1","î",93],["aba1","î",93],["aca1","î¼",93],["ada1","î",93],["aea1","î¸",93],["afa1","î",93],["d7fa","î ",4],["f8a1","î´",93],["f9a1","î",93],["faa1","î°",93],["fba1","î",93],["fca1","î¬",93],["fda1","î",93],["fe50","âºî î î âºã³ãâºâºî ãããâºâºã¥®ã¤î ¦ã§ã§ã©³ã§î «î ¬ã­ã±®ã³ âº§î ±î ²âºªääâº®ä·âº³âº¶âº·î »ä±ä¬âº»äää¡äî¡"],["fe80","ä£ä©ä¼äâ»ä¥ä¥ºä¥½ä¦ä¦ä¦ä¦ä¦ä¦ä¦·ä¦¶î¡î¡ä²£ä²ä² ä²¡ä±·ä²¢ä´",6,"ä¶®î¡¤î¨",93],["8135f437","î"]]');
            }
          ),
          /***/
          27014: (
            /***/
            function(u) {
              u.exports = JSON.parse('[["0","\\u0000",128],["a1","ï½¡",62],["8140","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±Ã"],["8180","Ã·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââââ¡â â³â²â½â¼â»ãââââã"],["81b8","âââââââªâ©"],["81c8","â§â¨ï¿¢ââââ"],["81da","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["81f0","â«â°â¯â­âªâ â¡Â¶"],["81fc","â¯"],["824f","ï¼",9],["8260","ï¼¡",25],["8281","ï½",25],["829f","ã",82],["8340","ã¡",62],["8380","ã ",22],["839f","Î",16,"Î£",6],["83bf","Î±",16,"Ï",6],["8440","Ð",5,"ÐÐ",25],["8470","Ð°",5,"ÑÐ¶",7],["8480","Ð¾",17],["849f","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["8740","â ",19,"â ",9],["875f","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["877e","ã»"],["8780","ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["889f","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["8940","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­å"],["8980","åå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["8a40","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«"],["8a80","æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["8b40","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥æ"],["8b80","æ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["8c40","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨"],["8c80","åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["8d40","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤é"],["8d80","é é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["8e40","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢"],["8e80","æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºææææ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["8f40","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³"],["8f80","æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·ååå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["9040","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨"],["9080","éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["9140","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»"],["9180","ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æèèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["9240","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­è"],["9280","éç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µå¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["9340","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬"],["9380","åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["9440","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢"],["9480","æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["9540","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·"],["9580","æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["9640","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡ç"],["9680","æ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æºæ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["9740","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²"],["9780","æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨ççç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["9840","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["989f","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["9940","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­"],["9980","å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["9a40","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸"],["9a80","å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿ååååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["9b40","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®"],["9b80","å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["9c40","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ "],["9c80","æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["9d40","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«"],["9d80","æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["9e40","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡"],["9e80","æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["9f40","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯"],["9f80","éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["e040","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®ççç"],["e080","ççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e140","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿"],["e180","ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e240","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°"],["e280","çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e340","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·"],["e380","ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼ºç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e440","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤"],["e480","è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèèèµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e540","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬"],["e580","èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®èèè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["e640","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§"],["e680","è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["e740","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½"],["e780","è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["e840","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿ééééééé"],["e880","é é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·ééééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["e940","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©"],["e980","é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["ea40","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯"],["ea80","é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ å ¯æ§éç¤åç"],["ed40","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨"],["ed80","ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["ee40","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èè"],["ee80","è«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["eeef","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["f040","î",62],["f080","î¿",124],["f140","î¼",62],["f180","î»",124],["f240","î¸",62],["f280","î·",124],["f340","î´",62],["f380","î³",124],["f440","î°",62],["f480","î¯",124],["f540","î¬",62],["f580","î«",124],["f640","î¨",62],["f680","î§",124],["f740","î¤",62],["f780","î£",124],["f840","î ",62],["f880","î",124],["f940","î"],["fa40","â°",9,"â ",9,"ï¿¢ï¿¤ï¼ï¼ã±ââ¡âµçºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´åå"],["fa80","å¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯"],["fb40","æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨"],["fb80","ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«"],["fc40","é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"]]');
            }
          )
          /******/
        }, A = {};
        function R(u) {
          var d = A[u];
          if (d !== void 0)
            return d.exports;
          var t = A[u] = {
            /******/
            id: u,
            /******/
            loaded: !1,
            /******/
            exports: {}
            /******/
          };
          return b[u].call(t.exports, t, t.exports, R), t.loaded = !0, t.exports;
        }
        (function() {
          R.g = function() {
            if (typeof globalThis == "object")
              return globalThis;
            try {
              return this || new Function("return this")();
            } catch {
              if (typeof window == "object")
                return window;
            }
          }();
        })(), function() {
          R.nmd = function(u) {
            return u.paths = [], u.children || (u.children = []), u;
          };
        }();
        var B = R(26949);
        return B;
      }()
    );
  });
})(Pd);
/*! Buttons for DataTables 3.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
let Ee = Ca;
var Bd = 0, Rd = 0, Vn = ge.ext.buttons, bs = null;
function Vs(s, p, b) {
  Ee.fn.animate ? s.stop().fadeIn(p, b) : (s.css("display", "block"), b && b.call(s));
}
function Xs(s, p, b) {
  Ee.fn.animate ? s.stop().fadeOut(p, b) : (s.css("display", "none"), b && b.call(s));
}
var en = function(s, p) {
  if (!ge.versionCheck("2"))
    throw "Warning: Buttons requires DataTables 2 or newer";
  if (!(this instanceof en))
    return function(b) {
      return new en(b, s).container();
    };
  typeof p > "u" && (p = {}), p === !0 && (p = {}), Array.isArray(p) && (p = { buttons: p }), this.c = Ee.extend(!0, {}, en.defaults, p), p.buttons && (this.c.buttons = p.buttons), this.s = {
    dt: new ge.Api(s),
    buttons: [],
    listenKeys: "",
    namespace: "dtb" + Bd++
  }, this.dom = {
    container: Ee("<" + this.c.dom.container.tag + "/>").addClass(
      this.c.dom.container.className
    )
  }, this._constructor();
};
Ee.extend(en.prototype, {
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Public methods
   */
  /**
   * Get the action of a button
   * @param  {int|string} Button index
   * @return {function}
   */
  /**
  * Set the action of a button
  * @param  {node} node Button element
  * @param  {function} action Function to set
  * @return {Buttons} Self for chaining
  */
  action: function(s, p) {
    var b = this._nodeToButton(s);
    return p === void 0 ? b.conf.action : (b.conf.action = p, this);
  },
  /**
   * Add an active class to the button to make to look active or get current
   * active state.
   * @param  {node} node Button element
   * @param  {boolean} [flag] Enable / disable flag
   * @return {Buttons} Self for chaining or boolean for getter
   */
  active: function(s, p) {
    var b = this._nodeToButton(s), A = this.c.dom.button.active, R = Ee(b.node);
    return b.inCollection && this.c.dom.collection.button && this.c.dom.collection.button.active !== void 0 && (A = this.c.dom.collection.button.active), p === void 0 ? R.hasClass(A) : (R.toggleClass(A, p === void 0 ? !0 : p), this);
  },
  /**
   * Add a new button
   * @param {object} config Button configuration object, base string name or function
   * @param {int|string} [idx] Button index for where to insert the button
   * @param {boolean} [draw=true] Trigger a draw. Set a false when adding
   *   lots of buttons, until the last button.
   * @return {Buttons} Self for chaining
   */
  add: function(s, p, b) {
    var A = this.s.buttons;
    if (typeof p == "string") {
      for (var R = p.split("-"), B = this.s, u = 0, d = R.length - 1; u < d; u++)
        B = B.buttons[R[u] * 1];
      A = B.buttons, p = R[R.length - 1] * 1;
    }
    return this._expandButton(
      A,
      s,
      s !== void 0 ? s.split : void 0,
      (s === void 0 || s.split === void 0 || s.split.length === 0) && B !== void 0,
      !1,
      p
    ), (b === void 0 || b === !0) && this._draw(), this;
  },
  /**
   * Clear buttons from a collection and then insert new buttons
   */
  collectionRebuild: function(s, p) {
    var b = this._nodeToButton(s);
    if (p !== void 0) {
      var A;
      for (A = b.buttons.length - 1; A >= 0; A--)
        this.remove(b.buttons[A].node);
      for (b.conf.prefixButtons && p.unshift.apply(p, b.conf.prefixButtons), b.conf.postfixButtons && p.push.apply(p, b.conf.postfixButtons), A = 0; A < p.length; A++) {
        var R = p[A];
        this._expandButton(
          b.buttons,
          R,
          R !== void 0 && R.config !== void 0 && R.config.split !== void 0,
          !0,
          R.parentConf !== void 0 && R.parentConf.split !== void 0,
          null,
          R.parentConf
        );
      }
    }
    this._draw(b.collection, b.buttons);
  },
  /**
   * Get the container node for the buttons
   * @return {jQuery} Buttons node
   */
  container: function() {
    return this.dom.container;
  },
  /**
   * Disable a button
   * @param  {node} node Button node
   * @return {Buttons} Self for chaining
   */
  disable: function(s) {
    var p = this._nodeToButton(s);
    return Ee(p.node).addClass(this.c.dom.button.disabled).prop("disabled", !0), this;
  },
  /**
   * Destroy the instance, cleaning up event handlers and removing DOM
   * elements
   * @return {Buttons} Self for chaining
   */
  destroy: function() {
    Ee("body").off("keyup." + this.s.namespace);
    var s = this.s.buttons.slice(), p, b;
    for (p = 0, b = s.length; p < b; p++)
      this.remove(s[p].node);
    this.dom.container.remove();
    var A = this.s.dt.settings()[0];
    for (p = 0, b = A.length; p < b; p++)
      if (A.inst === this) {
        A.splice(p, 1);
        break;
      }
    return this;
  },
  /**
   * Enable / disable a button
   * @param  {node} node Button node
   * @param  {boolean} [flag=true] Enable / disable flag
   * @return {Buttons} Self for chaining
   */
  enable: function(s, p) {
    if (p === !1)
      return this.disable(s);
    var b = this._nodeToButton(s);
    return Ee(b.node).removeClass(this.c.dom.button.disabled).prop("disabled", !1), this;
  },
  /**
   * Get a button's index
   *
   * This is internally recursive
   * @param {element} node Button to get the index of
   * @return {string} Button index
   */
  index: function(s, p, b) {
    p || (p = "", b = this.s.buttons);
    for (var A = 0, R = b.length; A < R; A++) {
      var B = b[A].buttons;
      if (b[A].node === s)
        return p + A;
      if (B && B.length) {
        var u = this.index(s, A + "-", B);
        if (u !== null)
          return u;
      }
    }
    return null;
  },
  /**
   * Get the instance name for the button set selector
   * @return {string} Instance name
   */
  name: function() {
    return this.c.name;
  },
  /**
   * Get a button's node of the buttons container if no button is given
   * @param  {node} [node] Button node
   * @return {jQuery} Button element, or container
   */
  node: function(s) {
    if (!s)
      return this.dom.container;
    var p = this._nodeToButton(s);
    return Ee(p.node);
  },
  /**
   * Set / get a processing class on the selected button
   * @param {element} node Triggering button node
   * @param  {boolean} flag true to add, false to remove, undefined to get
   * @return {boolean|Buttons} Getter value or this if a setter.
   */
  processing: function(s, p) {
    var b = this.s.dt, A = this._nodeToButton(s);
    return p === void 0 ? Ee(A.node).hasClass("processing") : (Ee(A.node).toggleClass("processing", p), Ee(b.table().node()).triggerHandler("buttons-processing.dt", [
      p,
      b.button(s),
      b,
      Ee(s),
      A.conf
    ]), this);
  },
  /**
   * Remove a button.
   * @param  {node} node Button node
   * @return {Buttons} Self for chaining
   */
  remove: function(s) {
    var p = this._nodeToButton(s), b = this._nodeToHost(s), A = this.s.dt;
    if (p.buttons.length)
      for (var R = p.buttons.length - 1; R >= 0; R--)
        this.remove(p.buttons[R].node);
    p.conf.destroying = !0, p.conf.destroy && p.conf.destroy.call(A.button(s), A, Ee(s), p.conf), this._removeKey(p.conf), Ee(p.node).remove();
    var B = Ee.inArray(p, b);
    return b.splice(B, 1), this;
  },
  /**
   * Get the text for a button
   * @param  {int|string} node Button index
   * @return {string} Button text
   */
  /**
  * Set the text for a button
  * @param  {int|string|function} node Button index
  * @param  {string} label Text
  * @return {Buttons} Self for chaining
  */
  text: function(s, p) {
    var b = this._nodeToButton(s), A = b.textNode, R = this.s.dt, B = Ee(b.node), u = function(d) {
      return typeof d == "function" ? d(R, B, b.conf) : d;
    };
    return p === void 0 ? u(b.conf.text) : (b.conf.text = p, A.html(u(p)), this);
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Constructor
   */
  /**
   * Buttons constructor
   * @private
   */
  _constructor: function() {
    var s = this, p = this.s.dt, b = p.settings()[0], A = this.c.buttons;
    b._buttons || (b._buttons = []), b._buttons.push({
      inst: this,
      name: this.c.name
    });
    for (var R = 0, B = A.length; R < B; R++)
      this.add(A[R]);
    p.on("destroy", function(u, d) {
      d === b && s.destroy();
    }), Ee("body").on("keyup." + this.s.namespace, function(u) {
      if (!document.activeElement || document.activeElement === document.body) {
        var d = String.fromCharCode(u.keyCode).toLowerCase();
        s.s.listenKeys.toLowerCase().indexOf(d) !== -1 && s._keypress(d, u);
      }
    });
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Private methods
   */
  /**
   * Add a new button to the key press listener
   * @param {object} conf Resolved button configuration object
   * @private
   */
  _addKey: function(s) {
    s.key && (this.s.listenKeys += Ee.isPlainObject(s.key) ? s.key.key : s.key);
  },
  /**
   * Insert the buttons into the container. Call without parameters!
   * @param  {node} [container] Recursive only - Insert point
   * @param  {array} [buttons] Recursive only - Buttons array
   * @private
   */
  _draw: function(s, p) {
    s || (s = this.dom.container, p = this.s.buttons), s.children().detach();
    for (var b = 0, A = p.length; b < A; b++)
      s.append(p[b].inserter), s.append(" "), p[b].buttons && p[b].buttons.length && this._draw(p[b].collection, p[b].buttons);
  },
  /**
   * Create buttons from an array of buttons
   * @param  {array} attachTo Buttons array to attach to
   * @param  {object} button Button definition
   * @param  {boolean} inCollection true if the button is in a collection
   * @private
   */
  _expandButton: function(s, p, b, A, R, B, u) {
    var d = this.s.dt, t = !1, o = this.c.dom.collection, r = Array.isArray(p) ? p : [p];
    p === void 0 && (r = Array.isArray(b) ? b : [b]);
    for (var n = 0, i = r.length; n < i; n++) {
      var f = this._resolveExtends(r[n]);
      if (f) {
        if (t = !!(f.config && f.config.split), Array.isArray(f)) {
          this._expandButton(
            s,
            f,
            l !== void 0 && l.conf !== void 0 ? l.conf.split : void 0,
            A,
            u !== void 0 && u.split !== void 0,
            B,
            u
          );
          continue;
        }
        var l = this._buildButton(
          f,
          A,
          f.split !== void 0 || f.config !== void 0 && f.config.split !== void 0,
          R
        );
        if (l) {
          if (B != null ? (s.splice(B, 0, l), B++) : s.push(l), l.conf.buttons && (l.collection = Ee(
            "<" + o.container.content.tag + "/>"
          ), l.conf._collection = l.collection, Ee(l.node).append(o.action.dropHtml), this._expandButton(
            l.buttons,
            l.conf.buttons,
            l.conf.split,
            !t,
            t,
            B,
            l.conf
          )), l.conf.split) {
            l.collection = Ee("<" + o.container.tag + "/>"), l.conf._collection = l.collection;
            for (var c = 0; c < l.conf.split.length; c++) {
              var h = l.conf.split[c];
              typeof h == "object" && (h.parent = u, h.collectionLayout === void 0 && (h.collectionLayout = l.conf.collectionLayout), h.dropup === void 0 && (h.dropup = l.conf.dropup), h.fade === void 0 && (h.fade = l.conf.fade));
            }
            this._expandButton(
              l.buttons,
              l.conf.buttons,
              l.conf.split,
              !t,
              t,
              B,
              l.conf
            );
          }
          l.conf.parent = u, f.init && f.init.call(d.button(l.node), d, Ee(l.node), f);
        }
      }
    }
  },
  /**
   * Create an individual button
   * @param  {object} config            Resolved button configuration
   * @param  {boolean} inCollection `true` if a collection button
   * @return {object} Completed button description object
   * @private
   */
  _buildButton: function(s, p, b, A) {
    var R = this, B = this.c.dom, u, d = this.s.dt, t = function(I) {
      return typeof I == "function" ? I(d, n, s) : I;
    }, o = Ee.extend(!0, {}, B.button);
    if (p && b && B.collection.split ? Ee.extend(!0, o, B.collection.split.action) : A || p ? Ee.extend(!0, o, B.collection.button) : b && Ee.extend(!0, o, B.split.button), s.spacer) {
      var r = Ee("<" + o.spacer.tag + "/>").addClass(
        "dt-button-spacer " + s.style + " " + o.spacer.className
      ).html(t(s.text));
      return {
        conf: s,
        node: r,
        inserter: r,
        buttons: [],
        inCollection: p,
        isSplit: b,
        collection: null,
        textNode: r
      };
    }
    if (s.available && !s.available(d, s) && !s.html)
      return !1;
    var n;
    if (s.html)
      n = Ee(s.html);
    else {
      var i = function(I, T, C, E, F) {
        E.action.call(T.button(C), I, T, C, E, F), Ee(T.table().node()).triggerHandler("buttons-action.dt", [
          T.button(C),
          T,
          C,
          E
        ]);
      }, f = function(I, T, C, E) {
        E.async ? (R.processing(C[0], !0), setTimeout(function() {
          i(I, T, C, E, function() {
            R.processing(C[0], !1);
          });
        }, E.async)) : i(I, T, C, E, function() {
        });
      }, l = s.tag || o.tag, c = s.clickBlurs === void 0 ? !0 : s.clickBlurs;
      if (n = Ee("<" + l + "/>").addClass(o.className).attr("tabindex", this.s.dt.settings()[0].iTabIndex).attr("aria-controls", this.s.dt.table().node().id).on("click.dtb", function(I) {
        I.preventDefault(), !n.hasClass(o.disabled) && s.action && f(I, d, n, s), c && n.trigger("blur");
      }).on("keypress.dtb", function(I) {
        I.keyCode === 13 && (I.preventDefault(), !n.hasClass(o.disabled) && s.action && f(I, d, n, s));
      }), l.toLowerCase() === "a" && n.attr("href", "#"), l.toLowerCase() === "button" && n.attr("type", "button"), o.liner.tag) {
        var h = Ee("<" + o.liner.tag + "/>").html(t(s.text)).addClass(o.liner.className);
        o.liner.tag.toLowerCase() === "a" && h.attr("href", "#"), n.append(h), u = h;
      } else
        n.html(t(s.text)), u = n;
      s.enabled === !1 && n.addClass(o.disabled), s.className && n.addClass(s.className), s.titleAttr && n.attr("title", t(s.titleAttr)), s.attr && n.attr(s.attr), s.namespace || (s.namespace = ".dt-button-" + Rd++), s.config !== void 0 && s.config.split && (s.split = s.config.split);
    }
    var a = this.c.dom.buttonContainer, v;
    a && a.tag ? v = Ee("<" + a.tag + "/>").addClass(a.className).append(n) : v = n, this._addKey(s), this.c.buttonCreated && (v = this.c.buttonCreated(s, v));
    var y;
    if (b) {
      var g = p ? Ee.extend(!0, this.c.dom.split, this.c.dom.collection.split) : this.c.dom.split, e = g.wrapper;
      y = Ee("<" + e.tag + "/>").addClass(e.className).append(n);
      var m = Ee.extend(s, {
        align: g.dropdown.align,
        attr: {
          "aria-haspopup": "dialog",
          "aria-expanded": !1
        },
        className: g.dropdown.className,
        closeButton: !1,
        splitAlignClass: g.dropdown.splitAlignClass,
        text: g.dropdown.text
      });
      this._addKey(m);
      var w = function(I, T, C, E) {
        Vn.split.action.call(
          T.button(y),
          I,
          T,
          C,
          E
        ), Ee(T.table().node()).triggerHandler("buttons-action.dt", [
          T.button(C),
          T,
          C,
          E
        ]), C.attr("aria-expanded", !0);
      }, D = Ee(
        '<button class="' + g.dropdown.className + ' dt-button"></button>'
      ).html(g.dropdown.dropHtml).on("click.dtb", function(I) {
        I.preventDefault(), I.stopPropagation(), D.hasClass(o.disabled) || w(I, d, D, m), c && D.trigger("blur");
      }).on("keypress.dtb", function(I) {
        I.keyCode === 13 && (I.preventDefault(), D.hasClass(o.disabled) || w(I, d, D, m));
      });
      s.split.length === 0 && D.addClass("dtb-hide-drop"), y.append(D).attr(m.attr);
    }
    return {
      conf: s,
      node: b ? y.get(0) : n.get(0),
      inserter: b ? y : v,
      buttons: [],
      inCollection: p,
      isSplit: b,
      inSplit: A,
      collection: null,
      textNode: u
    };
  },
  /**
   * Get the button object from a node (recursive)
   * @param  {node} node Button node
   * @param  {array} [buttons] Button array, uses base if not defined
   * @return {object} Button object
   * @private
   */
  _nodeToButton: function(s, p) {
    p || (p = this.s.buttons);
    for (var b = 0, A = p.length; b < A; b++) {
      if (p[b].node === s)
        return p[b];
      if (p[b].buttons.length) {
        var R = this._nodeToButton(s, p[b].buttons);
        if (R)
          return R;
      }
    }
  },
  /**
   * Get container array for a button from a button node (recursive)
   * @param  {node} node Button node
   * @param  {array} [buttons] Button array, uses base if not defined
   * @return {array} Button's host array
   * @private
   */
  _nodeToHost: function(s, p) {
    p || (p = this.s.buttons);
    for (var b = 0, A = p.length; b < A; b++) {
      if (p[b].node === s)
        return p;
      if (p[b].buttons.length) {
        var R = this._nodeToHost(s, p[b].buttons);
        if (R)
          return R;
      }
    }
  },
  /**
   * Handle a key press - determine if any button's key configured matches
   * what was typed and trigger the action if so.
   * @param  {string} character The character pressed
   * @param  {object} e Key event that triggered this call
   * @private
   */
  _keypress: function(s, p) {
    if (!p._buttonsHandled) {
      var b = function(R, B) {
        if (R.key) {
          if (R.key === s)
            p._buttonsHandled = !0, Ee(B).click();
          else if (Ee.isPlainObject(R.key)) {
            if (R.key.key !== s || R.key.shiftKey && !p.shiftKey || R.key.altKey && !p.altKey || R.key.ctrlKey && !p.ctrlKey || R.key.metaKey && !p.metaKey)
              return;
            p._buttonsHandled = !0, Ee(B).click();
          }
        }
      }, A = function(R) {
        for (var B = 0, u = R.length; B < u; B++)
          b(R[B].conf, R[B].node), R[B].buttons.length && A(R[B].buttons);
      };
      A(this.s.buttons);
    }
  },
  /**
   * Remove a key from the key listener for this instance (to be used when a
   * button is removed)
   * @param  {object} conf Button configuration
   * @private
   */
  _removeKey: function(s) {
    if (s.key) {
      var p = Ee.isPlainObject(s.key) ? s.key.key : s.key, b = this.s.listenKeys.split(""), A = Ee.inArray(p, b);
      b.splice(A, 1), this.s.listenKeys = b.join("");
    }
  },
  /**
   * Resolve a button configuration
   * @param  {string|function|object} conf Button config to resolve
   * @return {object} Button configuration
   * @private
   */
  _resolveExtends: function(s) {
    var p = this, b = this.s.dt, A, R, B = function(r) {
      for (var n = 0; !Ee.isPlainObject(r) && !Array.isArray(r); ) {
        if (r === void 0)
          return;
        if (typeof r == "function") {
          if (r = r.call(p, b, s), !r)
            return !1;
        } else if (typeof r == "string") {
          if (!Vn[r])
            return { html: r };
          r = Vn[r];
        }
        if (n++, n > 30)
          throw "Buttons: Too many iterations";
      }
      return Array.isArray(r) ? r : Ee.extend({}, r);
    };
    for (s = B(s); s && s.extend; ) {
      if (!Vn[s.extend])
        throw "Cannot extend unknown button type: " + s.extend;
      var u = B(Vn[s.extend]);
      if (Array.isArray(u))
        return u;
      if (!u)
        return !1;
      var d = u.className;
      s.config !== void 0 && u.config !== void 0 && (s.config = Ee.extend({}, u.config, s.config)), s = Ee.extend({}, u, s), d && s.className !== d && (s.className = d + " " + s.className), s.extend = u.extend;
    }
    var t = s.postfixButtons;
    if (t)
      for (s.buttons || (s.buttons = []), A = 0, R = t.length; A < R; A++)
        s.buttons.push(t[A]);
    var o = s.prefixButtons;
    if (o)
      for (s.buttons || (s.buttons = []), A = 0, R = o.length; A < R; A++)
        s.buttons.splice(A, 0, o[A]);
    return s;
  },
  /**
   * Display (and replace if there is an existing one) a popover attached to a button
   * @param {string|node} content Content to show
   * @param {DataTable.Api} hostButton DT API instance of the button
   * @param {object} inOpts Options (see object below for all options)
   */
  _popover: function(s, p, b) {
    var A = p, R = this.c, B = !1, u = Ee.extend(
      {
        align: "button-left",
        // button-right, dt-container, split-left, split-right
        autoClose: !1,
        background: !0,
        backgroundClassName: "dt-button-background",
        closeButton: !0,
        containerClassName: R.dom.collection.container.className,
        contentClassName: R.dom.collection.container.content.className,
        collectionLayout: "",
        collectionTitle: "",
        dropup: !1,
        fade: 400,
        popoverTitle: "",
        rightAlignClassName: "dt-button-right",
        tag: R.dom.collection.container.tag
      },
      b
    ), d = u.tag + "." + u.containerClassName.replace(/ /g, "."), t = p.node(), o = function() {
      B = !0, Xs(Ee(d), u.fade, function() {
        Ee(this).detach();
      }), Ee(
        A.buttons('[aria-haspopup="dialog"][aria-expanded="true"]').nodes()
      ).attr("aria-expanded", "false"), Ee("div.dt-button-background").off("click.dtb-collection"), en.background(
        !1,
        u.backgroundClassName,
        u.fade,
        t
      ), Ee(window).off("resize.resize.dtb-collection"), Ee("body").off(".dtb-collection"), A.off("buttons-action.b-internal"), A.off("destroy");
    };
    if (s === !1) {
      o();
      return;
    }
    var r = Ee(
      A.buttons('[aria-haspopup="dialog"][aria-expanded="true"]').nodes()
    );
    r.length && (t.closest(d).length && (t = r.eq(0)), o());
    var n = Ee(".dt-button", s).length, i = "";
    n === 3 ? i = "dtb-b3" : n === 2 ? i = "dtb-b2" : n === 1 && (i = "dtb-b1");
    var f = Ee("<" + u.tag + "/>").addClass(u.containerClassName).addClass(u.collectionLayout).addClass(u.splitAlignClass).addClass(i).css("display", "none").attr({
      "aria-modal": !0,
      role: "dialog"
    });
    s = Ee(s).addClass(u.contentClassName).attr("role", "menu").appendTo(f), t.attr("aria-expanded", "true"), t.parents("body")[0] !== document.body && (t = document.body.lastChild), u.popoverTitle ? f.prepend(
      '<div class="dt-button-collection-title">' + u.popoverTitle + "</div>"
    ) : u.collectionTitle && f.prepend(
      '<div class="dt-button-collection-title">' + u.collectionTitle + "</div>"
    ), u.closeButton && f.prepend('<div class="dtb-popover-close">&times;</div>').addClass("dtb-collection-closeable"), Vs(f.insertAfter(t), u.fade);
    var l = Ee(p.table().container()), c = f.css("position");
    if ((u.span === "container" || u.align === "dt-container") && (t = t.parent(), f.css("width", l.width())), c === "absolute") {
      var h = Ee(t[0].offsetParent), a = t.position(), v = t.offset(), y = h.offset(), g = h.position(), e = window.getComputedStyle(h[0]);
      y.height = h.outerHeight(), y.width = h.width() + parseFloat(e.paddingLeft), y.right = y.left + y.width, y.bottom = y.top + y.height;
      var m = a.top + t.outerHeight(), w = a.left;
      f.css({
        top: m,
        left: w
      }), e = window.getComputedStyle(f[0]);
      var D = f.offset();
      D.height = f.outerHeight(), D.width = f.outerWidth(), D.right = D.left + D.width, D.bottom = D.top + D.height, D.marginTop = parseFloat(e.marginTop), D.marginBottom = parseFloat(e.marginBottom), u.dropup && (m = a.top - D.height - D.marginTop - D.marginBottom), (u.align === "button-right" || f.hasClass(u.rightAlignClassName)) && (w = a.left - D.width + t.outerWidth()), (u.align === "dt-container" || u.align === "container") && w < a.left && (w = -a.left), g.left + w + D.width > Ee(window).width() && (w = Ee(window).width() - D.width - g.left), v.left + w < 0 && (w = -v.left), g.top + m + D.height > Ee(window).height() + Ee(window).scrollTop() && (m = a.top - D.height - D.marginTop - D.marginBottom), g.top + m < Ee(window).scrollTop() && (m = a.top + t.outerHeight()), f.css({
        top: m,
        left: w
      });
    } else {
      var I = function() {
        var T = Ee(window).height() / 2, C = f.height() / 2;
        C > T && (C = T), f.css("marginTop", C * -1);
      };
      I(), Ee(window).on("resize.dtb-collection", function() {
        I();
      });
    }
    u.background && en.background(
      !0,
      u.backgroundClassName,
      u.fade,
      u.backgroundHost || t
    ), Ee("div.dt-button-background").on(
      "click.dtb-collection",
      function() {
      }
    ), u.autoClose && setTimeout(function() {
      A.on("buttons-action.b-internal", function(T, C, E, F) {
        F[0] !== t[0] && o();
      });
    }, 0), Ee(f).trigger("buttons-popover.dt"), A.on("destroy", o), setTimeout(function() {
      B = !1, Ee("body").on("click.dtb-collection", function(T) {
        if (!B) {
          var C = Ee.fn.addBack ? "addBack" : "andSelf", E = Ee(T.target).parent()[0];
          (!Ee(T.target).parents()[C]().filter(s).length && !Ee(E).hasClass("dt-buttons") || Ee(T.target).hasClass("dt-button-background")) && o();
        }
      }).on("keyup.dtb-collection", function(T) {
        T.keyCode === 27 && o();
      }).on("keydown.dtb-collection", function(T) {
        var C = Ee("a, button", s), E = document.activeElement;
        T.keyCode === 9 && (C.index(E) === -1 ? (C.first().focus(), T.preventDefault()) : T.shiftKey ? E === C[0] && (C.last().focus(), T.preventDefault()) : E === C.last()[0] && (C.first().focus(), T.preventDefault()));
      });
    }, 0);
  }
});
en.background = function(s, p, b, A) {
  b === void 0 && (b = 400), A || (A = document.body), s ? Vs(
    Ee("<div/>").addClass(p).css("display", "none").insertAfter(A),
    b
  ) : Xs(Ee("div." + p), b, function() {
    Ee(this).removeClass(p).remove();
  });
};
en.instanceSelector = function(s, p) {
  if (s == null)
    return Ee.map(p, function(B) {
      return B.inst;
    });
  var b = [], A = Ee.map(p, function(B) {
    return B.name;
  }), R = function(B) {
    if (Array.isArray(B)) {
      for (var u = 0, d = B.length; u < d; u++)
        R(B[u]);
      return;
    }
    if (typeof B == "string")
      if (B.indexOf(",") !== -1)
        R(B.split(","));
      else {
        var t = Ee.inArray(B.trim(), A);
        t !== -1 && b.push(p[t].inst);
      }
    else
      typeof B == "number" ? b.push(p[B].inst) : typeof B == "object" && b.push(B);
  };
  return R(s), b;
};
en.buttonSelector = function(s, p) {
  for (var b = [], A = function(t, o, r) {
    for (var n, i, f = 0, l = o.length; f < l; f++)
      n = o[f], n && (i = r !== void 0 ? r + f : f + "", t.push({
        node: n.node,
        name: n.conf.name,
        idx: i
      }), n.buttons && A(t, n.buttons, i + "-"));
  }, R = function(t, o) {
    var r, n, i = [];
    A(i, o.s.buttons);
    var f = Ee.map(i, function(v) {
      return v.node;
    });
    if (Array.isArray(t) || t instanceof Ee) {
      for (r = 0, n = t.length; r < n; r++)
        R(t[r], o);
      return;
    }
    if (t == null || t === "*")
      for (r = 0, n = i.length; r < n; r++)
        b.push({
          inst: o,
          node: i[r].node
        });
    else if (typeof t == "number")
      o.s.buttons[t] && b.push({
        inst: o,
        node: o.s.buttons[t].node
      });
    else if (typeof t == "string")
      if (t.indexOf(",") !== -1) {
        var l = t.split(",");
        for (r = 0, n = l.length; r < n; r++)
          R(l[r].trim(), o);
      } else if (t.match(/^\d+(\-\d+)*$/)) {
        var c = Ee.map(i, function(v) {
          return v.idx;
        });
        b.push({
          inst: o,
          node: i[Ee.inArray(t, c)].node
        });
      } else if (t.indexOf(":name") !== -1) {
        var h = t.replace(":name", "");
        for (r = 0, n = i.length; r < n; r++)
          i[r].name === h && b.push({
            inst: o,
            node: i[r].node
          });
      } else
        Ee(f).filter(t).each(function() {
          b.push({
            inst: o,
            node: this
          });
        });
    else if (typeof t == "object" && t.nodeName) {
      var a = Ee.inArray(t, f);
      a !== -1 && b.push({
        inst: o,
        node: f[a]
      });
    }
  }, B = 0, u = s.length; B < u; B++) {
    var d = s[B];
    R(p, d);
  }
  return b;
};
en.stripData = function(s, p) {
  return typeof s != "string" || (s = s.replace(
    /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
    ""
  ), s = s.replace(/<!\-\-.*?\-\->/g, ""), (!p || p.stripHtml) && (s = s.replace(/<[^>]*>/g, "")), (!p || p.trim) && (s = s.replace(/^\s+|\s+$/g, "")), (!p || p.stripNewlines) && (s = s.replace(/\n/g, " ")), (!p || p.decodeEntities) && (bs ? s = bs(s) : (rf.innerHTML = s, s = rf.value))), s;
};
en.entityDecoder = function(s) {
  bs = s;
};
en.defaults = {
  buttons: ["copy", "excel", "csv", "pdf", "print"],
  name: "main",
  tabIndex: 0,
  dom: {
    container: {
      tag: "div",
      className: "dt-buttons"
    },
    collection: {
      action: {
        // action button
        dropHtml: '<span class="dt-button-down-arrow">&#x25BC;</span>'
      },
      container: {
        // The element used for the dropdown
        className: "dt-button-collection",
        content: {
          className: "",
          tag: "div"
        },
        tag: "div"
      }
      // optionally
      // , button: IButton - buttons inside the collection container
      // , split: ISplit - splits inside the collection container
    },
    button: {
      tag: "button",
      className: "dt-button",
      active: "dt-button-active",
      // class name
      disabled: "disabled",
      // class name
      spacer: {
        className: "dt-button-spacer",
        tag: "span"
      },
      liner: {
        tag: "span",
        className: ""
      }
    },
    split: {
      action: {
        // action button
        className: "dt-button-split-drop-button dt-button",
        tag: "button"
      },
      dropdown: {
        // button to trigger the dropdown
        align: "split-right",
        className: "dt-button-split-drop",
        dropHtml: '<span class="dt-button-down-arrow">&#x25BC;</span>',
        splitAlignClass: "dt-button-split-left",
        tag: "button"
      },
      wrapper: {
        // wrap around both
        className: "dt-button-split",
        tag: "div"
      }
    }
  }
};
en.version = "3.0.0";
Ee.extend(Vn, {
  collection: {
    text: function(s) {
      return s.i18n("buttons.collection", "Collection");
    },
    className: "buttons-collection",
    closeButton: !1,
    init: function(s, p) {
      p.attr("aria-expanded", !1);
    },
    action: function(s, p, b, A) {
      A._collection.parents("body").length ? this.popover(!1, A) : this.popover(A._collection, A), s.type === "keypress" && Ee("a, button", A._collection).eq(0).focus();
    },
    attr: {
      "aria-haspopup": "dialog"
    }
    // Also the popover options, defined in Buttons.popover
  },
  split: {
    text: function(s) {
      return s.i18n("buttons.split", "Split");
    },
    className: "buttons-split",
    closeButton: !1,
    init: function(s, p) {
      return p.attr("aria-expanded", !1);
    },
    action: function(s, p, b, A) {
      this.popover(A._collection, A);
    },
    attr: {
      "aria-haspopup": "dialog"
    }
    // Also the popover options, defined in Buttons.popover
  },
  copy: function() {
    if (Vn.copyHtml5)
      return "copyHtml5";
  },
  csv: function(s, p) {
    if (Vn.csvHtml5 && Vn.csvHtml5.available(s, p))
      return "csvHtml5";
  },
  excel: function(s, p) {
    if (Vn.excelHtml5 && Vn.excelHtml5.available(s, p))
      return "excelHtml5";
  },
  pdf: function(s, p) {
    if (Vn.pdfHtml5 && Vn.pdfHtml5.available(s, p))
      return "pdfHtml5";
  },
  pageLength: function(s) {
    var p = s.settings()[0].aLengthMenu, b = [], A = [], R = function(d) {
      return d.i18n(
        "buttons.pageLength",
        {
          "-1": "Show all rows",
          _: "Show %d rows"
        },
        d.page.len()
      );
    };
    if (Array.isArray(p[0]))
      b = p[0], A = p[1];
    else
      for (var B = 0; B < p.length; B++) {
        var u = p[B];
        Ee.isPlainObject(u) ? (b.push(u.value), A.push(u.label)) : (b.push(u), A.push(u));
      }
    return {
      extend: "collection",
      text: R,
      className: "buttons-page-length",
      autoClose: !0,
      buttons: Ee.map(b, function(d, t) {
        return {
          text: A[t],
          className: "button-page-length",
          action: function(o, r) {
            r.page.len(d).draw();
          },
          init: function(o, r, n) {
            var i = this, f = function() {
              i.active(o.page.len() === d);
            };
            o.on("length.dt" + n.namespace, f), f();
          },
          destroy: function(o, r, n) {
            o.off("length.dt" + n.namespace);
          }
        };
      }),
      init: function(d, t, o) {
        var r = this;
        d.on("length.dt" + o.namespace, function() {
          r.text(o.text);
        });
      },
      destroy: function(d, t, o) {
        d.off("length.dt" + o.namespace);
      }
    };
  },
  spacer: {
    style: "empty",
    spacer: !0,
    text: function(s) {
      return s.i18n("buttons.spacer", "");
    }
  }
});
ge.Api.register("buttons()", function(s, p) {
  p === void 0 && (p = s, s = void 0), this.selector.buttonGroup = s;
  var b = this.iterator(
    !0,
    "table",
    function(A) {
      if (A._buttons)
        return en.buttonSelector(
          en.instanceSelector(s, A._buttons),
          p
        );
    },
    !0
  );
  return b._groupSelector = s, b;
});
ge.Api.register("button()", function(s, p) {
  var b = this.buttons(s, p);
  return b.length > 1 && b.splice(1, b.length), b;
});
ge.Api.registerPlural(
  "buttons().active()",
  "button().active()",
  function(s) {
    return s === void 0 ? this.map(function(p) {
      return p.inst.active(p.node);
    }) : this.each(function(p) {
      p.inst.active(p.node, s);
    });
  }
);
ge.Api.registerPlural(
  "buttons().action()",
  "button().action()",
  function(s) {
    return s === void 0 ? this.map(function(p) {
      return p.inst.action(p.node);
    }) : this.each(function(p) {
      p.inst.action(p.node, s);
    });
  }
);
ge.Api.registerPlural(
  "buttons().collectionRebuild()",
  "button().collectionRebuild()",
  function(s) {
    return this.each(function(p) {
      for (var b = 0; b < s.length; b++)
        typeof s[b] == "object" && (s[b].parentConf = p);
      p.inst.collectionRebuild(p.node, s);
    });
  }
);
ge.Api.register(
  ["buttons().enable()", "button().enable()"],
  function(s) {
    return this.each(function(p) {
      p.inst.enable(p.node, s);
    });
  }
);
ge.Api.register(
  ["buttons().disable()", "button().disable()"],
  function() {
    return this.each(function(s) {
      s.inst.disable(s.node);
    });
  }
);
ge.Api.register("button().index()", function() {
  var s = null;
  return this.each(function(p) {
    var b = p.inst.index(p.node);
    b !== null && (s = b);
  }), s;
});
ge.Api.registerPlural(
  "buttons().nodes()",
  "button().node()",
  function() {
    var s = Ee();
    return Ee(
      this.each(function(p) {
        s = s.add(p.inst.node(p.node));
      })
    ), s;
  }
);
ge.Api.registerPlural(
  "buttons().processing()",
  "button().processing()",
  function(s) {
    return s === void 0 ? this.map(function(p) {
      return p.inst.processing(p.node);
    }) : this.each(function(p) {
      p.inst.processing(p.node, s);
    });
  }
);
ge.Api.registerPlural(
  "buttons().text()",
  "button().text()",
  function(s) {
    return s === void 0 ? this.map(function(p) {
      return p.inst.text(p.node);
    }) : this.each(function(p) {
      p.inst.text(p.node, s);
    });
  }
);
ge.Api.registerPlural(
  "buttons().trigger()",
  "button().trigger()",
  function() {
    return this.each(function(s) {
      s.inst.node(s.node).trigger("click");
    });
  }
);
ge.Api.register("button().popover()", function(s, p) {
  return this.map(function(b) {
    return b.inst._popover(s, this.button(this[0].node), p);
  });
});
ge.Api.register("buttons().containers()", function() {
  var s = Ee(), p = this._groupSelector;
  return this.iterator(!0, "table", function(b) {
    if (b._buttons)
      for (var A = en.instanceSelector(p, b._buttons), R = 0, B = A.length; R < B; R++)
        s = s.add(A[R].container());
  }), s;
});
ge.Api.register("buttons().container()", function() {
  return this.containers().eq(0);
});
ge.Api.register("button().add()", function(s, p, b) {
  var A = this.context;
  if (A.length) {
    var R = en.instanceSelector(
      this._groupSelector,
      A[0]._buttons
    );
    R.length && R[0].add(p, s, b);
  }
  return this.button(this._groupSelector, s);
});
ge.Api.register("buttons().destroy()", function() {
  return this.pluck("inst").unique().each(function(s) {
    s.destroy();
  }), this;
});
ge.Api.registerPlural(
  "buttons().remove()",
  "buttons().remove()",
  function() {
    return this.each(function(s) {
      s.inst.remove(s.node);
    }), this;
  }
);
var Ui;
ge.Api.register("buttons.info()", function(s, p, b) {
  var A = this;
  return s === !1 ? (this.off("destroy.btn-info"), Xs(Ee("#datatables_buttons_info"), 400, function() {
    Ee(this).remove();
  }), clearTimeout(Ui), Ui = null, this) : (Ui && clearTimeout(Ui), Ee("#datatables_buttons_info").length && Ee("#datatables_buttons_info").remove(), s = s ? "<h2>" + s + "</h2>" : "", Vs(
    Ee('<div id="datatables_buttons_info" class="dt-button-info"/>').html(s).append(
      Ee("<div/>")[typeof p == "string" ? "html" : "append"](
        p
      )
    ).css("display", "none").appendTo("body")
  ), b !== void 0 && b !== 0 && (Ui = setTimeout(function() {
    A.buttons.info(!1);
  }, b)), this.on("destroy.btn-info", function() {
    A.buttons.info(!1);
  }), this);
});
ge.Api.register("buttons.exportData()", function(s) {
  if (this.context.length)
    return Md(new ge.Api(this.context[0]), s);
});
ge.Api.register("buttons.exportInfo()", function(s) {
  return s || (s = {}), {
    filename: Ld(s, this),
    title: Nd(s, this),
    messageTop: ef(this, s, s.message || s.messageTop, "top"),
    messageBottom: ef(this, s, s.messageBottom, "bottom")
  };
});
var Ld = function(s, p) {
  var b = s.filename === "*" && s.title !== "*" && s.title !== void 0 && s.title !== null && s.title !== "" ? s.title : s.filename;
  if (typeof b == "function" && (b = b(s, p)), b == null)
    return null;
  b.indexOf("*") !== -1 && (b = b.replace("*", Ee("head > title").text()).trim()), b = b.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, "");
  var A = Zs(s.extension, s, p);
  return A || (A = ""), b + A;
}, Zs = function(s, p, b) {
  return s == null ? null : typeof s == "function" ? s(p, b) : s;
}, Nd = function(s, p) {
  var b = Zs(s.title, s, p);
  return b === null ? null : b.indexOf("*") !== -1 ? b.replace("*", Ee("head > title").text() || "Exported data") : b;
}, ef = function(s, p, b, A) {
  var R = Zs(b, p, s);
  if (R === null)
    return null;
  var B = Ee("caption", s.table().container()).eq(0);
  if (R === "*") {
    var u = B.css("caption-side");
    return u !== A ? null : B.length ? B.text() : "";
  }
  return R;
}, rf = Ee("<textarea/>")[0], Md = function(s, p) {
  var b = Ee.extend(
    !0,
    {},
    {
      rows: null,
      columns: "",
      modifier: {
        search: "applied",
        order: "applied"
      },
      orthogonal: "display",
      stripHtml: !0,
      stripNewlines: !0,
      decodeEntities: !0,
      trim: !0,
      format: {
        header: function(g) {
          return en.stripData(g, b);
        },
        footer: function(g) {
          return en.stripData(g, b);
        },
        body: function(g) {
          return en.stripData(g, b);
        }
      },
      customizeData: null
    },
    p
  ), A = s.columns(b.columns).indexes().map(function(g) {
    var e = s.column(g);
    return b.format.header(e.title(), g, e.header());
  }).toArray(), R = s.table().footer() ? s.columns(b.columns).indexes().map(function(g) {
    var e = s.column(g).footer();
    return b.format.footer(
      e ? Ee(".dt-column-title", e).html() : "",
      g,
      e
    );
  }).toArray() : null, B = Ee.extend({}, b.modifier);
  s.select && typeof s.select.info == "function" && B.selected === void 0 && s.rows(b.rows, Ee.extend({ selected: !0 }, B)).any() && Ee.extend(B, { selected: !0 });
  for (var u = s.rows(b.rows, B).indexes().toArray(), d = s.cells(u, b.columns, {
    order: B.order
  }), t = d.render(b.orthogonal).toArray(), o = d.nodes().toArray(), r = d.indexes().toArray(), n = A.length, i = n > 0 ? t.length / n : 0, f = [], l = 0, c = 0, h = i; c < h; c++) {
    for (var a = [n], v = 0; v < n; v++)
      a[v] = b.format.body(
        t[l],
        r[c + v].row,
        r[c + v].column,
        o[l]
      ), l++;
    f[c] = a;
  }
  var y = {
    header: A,
    headerStructure: s.table().header.structure(b.columns),
    footer: R,
    footerStructure: s.table().footer.structure(b.columns),
    body: f
  };
  return b.customizeData && b.customizeData(y), y;
};
Ee.fn.dataTable.Buttons = en;
Ee.fn.DataTable.Buttons = en;
Ee(document).on("init.dt plugin-init.dt", function(s, p) {
  if (s.namespace === "dt") {
    var b = p.oInit.buttons || ge.defaults.buttons;
    b && !p._buttons && new en(p, b).container();
  }
});
function Uf(s, p) {
  var b = new ge.Api(s), A = p || b.init().buttons || ge.defaults.buttons;
  return new en(b, A).container();
}
ge.ext.feature.push({
  fnInit: Uf,
  cFeature: "B"
});
ge.feature && ge.feature.register("buttons", Uf);
/*!
 * Column visibility buttons for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
let kd = Ca;
kd.extend(ge.ext.buttons, {
  // A collection of column visibility buttons
  colvis: function(s, p) {
    var b = null, A = {
      extend: "collection",
      init: function(R, B) {
        b = B;
      },
      text: function(R) {
        return R.i18n("buttons.colvis", "Column visibility");
      },
      className: "buttons-colvis",
      closeButton: !1,
      buttons: [
        {
          extend: "columnsToggle",
          columns: p.columns,
          columnText: p.columnText
        }
      ]
    };
    return s.on("column-reorder.dt" + p.namespace, function() {
      s.button(null, s.button(null, b).node()).collectionRebuild([
        {
          extend: "columnsToggle",
          columns: p.columns,
          columnText: p.columnText
        }
      ]);
    }), A;
  },
  // Selected columns with individual buttons - toggle column visibility
  columnsToggle: function(s, p) {
    var b = s.columns(p.columns).indexes().map(function(A) {
      return {
        extend: "columnToggle",
        columns: A,
        columnText: p.columnText
      };
    }).toArray();
    return b;
  },
  // Single button to toggle column visibility
  columnToggle: function(s, p) {
    return {
      extend: "columnVisibility",
      columns: p.columns,
      columnText: p.columnText
    };
  },
  // Selected columns with individual buttons - set column visibility
  columnsVisibility: function(s, p) {
    var b = s.columns(p.columns).indexes().map(function(A) {
      return {
        extend: "columnVisibility",
        columns: A,
        visibility: p.visibility,
        columnText: p.columnText
      };
    }).toArray();
    return b;
  },
  // Single button to set column visibility
  columnVisibility: {
    columns: void 0,
    // column selector
    text: function(s, p, b) {
      return b._columnText(s, b);
    },
    className: "buttons-columnVisibility",
    action: function(s, p, b, A) {
      var R = p.columns(A.columns), B = R.visible();
      R.visible(
        A.visibility !== void 0 ? A.visibility : !(B.length && B[0])
      );
    },
    init: function(s, p, b) {
      var A = this;
      p.attr("data-cv-idx", b.columns), s.on("column-visibility.dt" + b.namespace, function(R, B) {
        !B.bDestroying && B.nTable == s.settings()[0].nTable && A.active(s.column(b.columns).visible());
      }).on("column-reorder.dt" + b.namespace, function() {
        b.destroying || s.columns(b.columns).count() === 1 && (A.text(b._columnText(s, b)), A.active(s.column(b.columns).visible()));
      }), this.active(s.column(b.columns).visible());
    },
    destroy: function(s, p, b) {
      s.off("column-visibility.dt" + b.namespace).off(
        "column-reorder.dt" + b.namespace
      );
    },
    _columnText: function(s, p) {
      if (typeof p.text == "string")
        return p.text;
      var b = s.column(p.columns).index(), A = s.settings()[0].aoColumns[b].sTitle;
      return A || (A = s.column(b).header().innerHTML), A = A.replace(/\n/g, " ").replace(/<br\s*\/?>/gi, " ").replace(/<select(.*?)<\/select>/g, "").replace(/<!\-\-.*?\-\->/g, "").replace(/<.*?>/g, "").replace(/^\s+|\s+$/g, ""), p.columnText ? p.columnText(s, b, A) : A;
    }
  },
  colvisRestore: {
    className: "buttons-colvisRestore",
    text: function(s) {
      return s.i18n("buttons.colvisRestore", "Restore visibility");
    },
    init: function(s, p, b) {
      s.columns().every(function() {
        var A = this.init();
        A.__visOriginal === void 0 && (A.__visOriginal = this.visible());
      });
    },
    action: function(s, p, b, A) {
      p.columns().every(function(R) {
        var B = this.init();
        this.visible(B.__visOriginal);
      });
    }
  },
  colvisGroup: {
    className: "buttons-colvisGroup",
    action: function(s, p, b, A) {
      p.columns(A.show).visible(!0, !1), p.columns(A.hide).visible(!1, !1), p.columns.adjust();
    },
    show: [],
    hide: []
  }
});
/*!
 * HTML5 export buttons for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 *
 * FileSaver.js (1.3.3) - MIT license
 * Copyright Â© 2016 Eli Grey - http://eligrey.com
 */
let pn = Ca;
var zf, Wf;
function ws() {
  return zf || window.JSZip;
}
function Ss() {
  return Wf || window.pdfMake;
}
ge.Buttons.pdfMake = function(s) {
  if (!s)
    return Ss();
  Wf = s;
};
ge.Buttons.jszip = function(s) {
  if (!s)
    return ws();
  zf = s;
};
var Ro = function(s) {
  if (!(typeof s > "u" || typeof navigator < "u" && /MSIE [1-9]\./.test(navigator.userAgent))) {
    var p = s.document, b = function() {
      return s.URL || s.webkitURL || s;
    }, A = p.createElementNS("http://www.w3.org/1999/xhtml", "a"), R = "download" in A, B = function(a) {
      var v = new MouseEvent("click");
      a.dispatchEvent(v);
    }, u = /constructor/i.test(s.HTMLElement) || s.safari, d = /CriOS\/[\d]+/.test(navigator.userAgent), t = function(a) {
      (s.setImmediate || s.setTimeout)(function() {
        throw a;
      }, 0);
    }, o = "application/octet-stream", r = 1e3 * 40, n = function(a) {
      var v = function() {
        typeof a == "string" ? b().revokeObjectURL(a) : a.remove();
      };
      setTimeout(v, r);
    }, i = function(a, v, y) {
      v = [].concat(v);
      for (var g = v.length; g--; ) {
        var e = a["on" + v[g]];
        if (typeof e == "function")
          try {
            e.call(a, y || a);
          } catch (m) {
            t(m);
          }
      }
    }, f = function(a) {
      return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
        a.type
      ) ? new Blob([String.fromCharCode(65279), a], {
        type: a.type
      }) : a;
    }, l = function(a, v, y) {
      y || (a = f(a));
      var g = this, e = a.type, m = e === o, w, D = function() {
        i(
          g,
          "writestart progress write writeend".split(" ")
        );
      }, I = function() {
        if ((d || m && u) && s.FileReader) {
          var T = new FileReader();
          T.onloadend = function() {
            var E = d ? T.result : T.result.replace(
              /^data:[^;]*;/,
              "data:attachment/file;"
            ), F = s.open(E, "_blank");
            F || (s.location.href = E), E = void 0, g.readyState = g.DONE, D();
          }, T.readAsDataURL(a), g.readyState = g.INIT;
          return;
        }
        if (w || (w = b().createObjectURL(a)), m)
          s.location.href = w;
        else {
          var C = s.open(w, "_blank");
          C || (s.location.href = w);
        }
        g.readyState = g.DONE, D(), n(w);
      };
      if (g.readyState = g.INIT, R) {
        w = b().createObjectURL(a), setTimeout(function() {
          A.href = w, A.download = v, B(A), D(), n(w), g.readyState = g.DONE;
        });
        return;
      }
      I();
    }, c = l.prototype, h = function(a, v, y) {
      return new l(
        a,
        v || a.name || "download",
        y
      );
    };
    return typeof navigator < "u" && navigator.msSaveOrOpenBlob ? function(a, v, y) {
      return v = v || a.name || "download", y || (a = f(a)), navigator.msSaveOrOpenBlob(a, v);
    } : (c.abort = function() {
    }, c.readyState = c.INIT = 0, c.WRITING = 1, c.DONE = 2, c.error = c.onwritestart = c.onprogress = c.onwrite = c.onabort = c.onerror = c.onwriteend = null, h);
  }
}(
  typeof self < "u" && self || typeof window < "u" && window || globalThis.content
);
ge.fileSave = Ro;
var nf = function(s) {
  var p = "Sheet1";
  return s.sheetName && (p = s.sheetName.replace(/[\[\]\*\/\\\?\:]/g, "")), p;
}, Hf = function(s) {
  return s.newline ? s.newline : navigator.userAgent.match(/Windows/) ? `\r
` : `
`;
}, jf = function(s, p) {
  var b = Hf(p), A = s.buttons.exportData(p.exportOptions), R = p.fieldBoundary, B = p.fieldSeparator, u = new RegExp(R, "g"), d = p.escapeChar !== void 0 ? p.escapeChar : "\\", t = function(l) {
    for (var c = "", h = 0, a = l.length; h < a; h++)
      h > 0 && (c += B), c += R ? R + ("" + l[h]).replace(u, d + R) + R : l[h];
    return c;
  }, o = "", r = "", n = [];
  p.header && (o = A.headerStructure.map(function(l) {
    return t(
      l.map(function(c) {
        return c ? c.title : "";
      })
    );
  }).join(b) + b), p.footer && A.footer && (r = A.footerStructure.map(function(l) {
    return t(
      l.map(function(c) {
        return c ? c.title : "";
      })
    );
  }).join(b) + b);
  for (var i = 0, f = A.body.length; i < f; i++)
    n.push(t(A.body[i]));
  return {
    str: o + n.join(b) + r,
    rows: n.length
  };
}, Gf = function() {
  var s = navigator.userAgent.indexOf("Safari") !== -1 && navigator.userAgent.indexOf("Chrome") === -1 && navigator.userAgent.indexOf("Opera") === -1;
  if (!s)
    return !1;
  var p = navigator.userAgent.match(/AppleWebKit\/(\d+\.\d+)/);
  return !!(p && p.length > 1 && p[1] * 1 < 603.1);
};
function Hi(s) {
  for (var p = "A".charCodeAt(0), b = "Z".charCodeAt(0), A = b - p + 1, R = ""; s >= 0; )
    R = String.fromCharCode(s % A + p) + R, s = Math.floor(s / A) - 1;
  return R;
}
try {
  var As = new XMLSerializer(), Ao;
} catch {
}
function Vf(s, p) {
  Ao === void 0 && (Ao = As.serializeToString(
    new window.DOMParser().parseFromString(
      Xf["xl/worksheets/sheet1.xml"],
      "text/xml"
    )
  ).indexOf("xmlns:r") === -1), pn.each(p, function(b, A) {
    if (pn.isPlainObject(A)) {
      var R = s.folder(b);
      Vf(R, A);
    } else {
      if (Ao) {
        var B = A.childNodes[0], u, d, t = [];
        for (u = B.attributes.length - 1; u >= 0; u--) {
          var o = B.attributes[u].nodeName, r = B.attributes[u].nodeValue;
          o.indexOf(":") !== -1 && (t.push({ name: o, value: r }), B.removeAttribute(o));
        }
        for (u = 0, d = t.length; u < d; u++) {
          var n = A.createAttribute(
            t[u].name.replace(":", "_dt_b_namespace_token_")
          );
          n.value = t[u].value, B.setAttributeNode(n);
        }
      }
      var i = As.serializeToString(A);
      Ao && (i.indexOf("<?xml") === -1 && (i = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' + i), i = i.replace(/_dt_b_namespace_token_/g, ":"), i = i.replace(/xmlns:NS[\d]+="" NS[\d]+:/g, "")), i = i.replace(/<([^<>]*?) xmlns=""([^<>]*?)>/g, "<$1 $2>"), s.file(b, i);
    }
  });
}
function Gn(s, p, b) {
  var A = s.createElement(p);
  return b && (b.attr && pn(A).attr(b.attr), b.children && pn.each(b.children, function(R, B) {
    A.appendChild(B);
  }), b.text !== null && b.text !== void 0 && A.appendChild(s.createTextNode(b.text))), A;
}
function Ud(s, p) {
  var b = s.header[p].length, A, R, B;
  s.footer && s.footer[p].length > b && (b = s.footer[p].length);
  for (var u = 0, d = s.body.length; u < d; u++) {
    var t = s.body[u][p];
    if (B = t != null ? t.toString() : "", B.indexOf(`
`) !== -1 ? (R = B.split(`
`), R.sort(function(o, r) {
      return r.length - o.length;
    }), A = R[0].length) : A = B.length, A > b && (b = A), b > 40)
      return 54;
  }
  return b *= 1.35, b > 6 ? b : 6;
}
var Xf = {
  "_rels/.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',
  "xl/_rels/workbook.xml.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',
  "[Content_Types].xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
  "xl/workbook.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="Sheet1" sheetId="1" r:id="rId1"/></sheets><definedNames/></workbook>',
  "xl/worksheets/sheet1.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/><mergeCells count="0"/></worksheet>',
  "xl/styles.xml": '<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><numFmts count="6"><numFmt numFmtId="164" formatCode="[$$-409]#,##0.00;-[$$-409]#,##0.00"/><numFmt numFmtId="165" formatCode="&quot;Â£&quot;#,##0.00"/><numFmt numFmtId="166" formatCode="[$â¬-2] #,##0.00"/><numFmt numFmtId="167" formatCode="0.0%"/><numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/><numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/></numFmts><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="68"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf><xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="14" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'
}, af = [
  {
    match: /^\-?\d+\.\d%$/,
    style: 60,
    fmt: function(s) {
      return s / 100;
    }
  },
  // Percent with d.p.
  {
    match: /^\-?\d+\.?\d*%$/,
    style: 56,
    fmt: function(s) {
      return s / 100;
    }
  },
  // Percent
  { match: /^\-?\$[\d,]+.?\d*$/, style: 57 },
  // Dollars
  { match: /^\-?Â£[\d,]+.?\d*$/, style: 58 },
  // Pounds
  { match: /^\-?â¬[\d,]+.?\d*$/, style: 59 },
  // Euros
  { match: /^\-?\d+$/, style: 65 },
  // Numbers without thousand separators
  { match: /^\-?\d+\.\d{2}$/, style: 66 },
  // Numbers 2 d.p. without thousands separators
  {
    match: /^\([\d,]+\)$/,
    style: 61,
    fmt: function(s) {
      return -1 * s.replace(/[\(\)]/g, "");
    }
  },
  // Negative numbers indicated by brackets
  {
    match: /^\([\d,]+\.\d{2}\)$/,
    style: 62,
    fmt: function(s) {
      return -1 * s.replace(/[\(\)]/g, "");
    }
  },
  // Negative numbers indicated by brackets - 2d.p.
  { match: /^\-?[\d,]+$/, style: 63 },
  // Numbers with thousand separators
  { match: /^\-?[\d,]+\.\d{2}$/, style: 64 },
  {
    match: /^[\d]{4}\-[01][\d]\-[0123][\d]$/,
    style: 67,
    fmt: function(s) {
      return Math.round(25569 + Date.parse(s) / (86400 * 1e3));
    }
  }
  //Date yyyy-mm-dd
], Co = function(s, p, b, A, R) {
  var B = pn("mergeCells", s);
  B[0].appendChild(
    Gn(s, "mergeCell", {
      attr: {
        ref: Hi(b) + p + ":" + Hi(b + R - 1) + (p + A - 1)
      }
    })
  ), B.attr("count", parseFloat(B.attr("count")) + 1);
};
ge.ext.buttons.copyHtml5 = {
  className: "buttons-copy buttons-html5",
  text: function(s) {
    return s.i18n("buttons.copy", "Copy");
  },
  action: function(s, p, b, A, R) {
    var B = jf(p, A), u = p.buttons.exportInfo(A), d = Hf(A), t = B.str, o = pn("<div/>").css({
      height: 1,
      width: 1,
      overflow: "hidden",
      position: "fixed",
      top: 0,
      left: 0
    });
    u.title && (t = u.title + d + d + t), u.messageTop && (t = u.messageTop + d + d + t), u.messageBottom && (t = t + d + d + u.messageBottom), A.customize && (t = A.customize(t, A, p));
    var r = pn("<textarea readonly/>").val(t).appendTo(o);
    if (document.queryCommandSupported("copy")) {
      o.appendTo(p.table().container()), r[0].focus(), r[0].select();
      try {
        var n = document.execCommand("copy");
        if (o.remove(), n) {
          p.buttons.info(
            p.i18n("buttons.copyTitle", "Copy to clipboard"),
            p.i18n(
              "buttons.copySuccess",
              {
                1: "Copied one row to clipboard",
                _: "Copied %d rows to clipboard"
              },
              B.rows
            ),
            2e3
          ), R();
          return;
        }
      } catch {
      }
    }
    var i = pn(
      "<span>" + p.i18n(
        "buttons.copyKeys",
        "Press <i>ctrl</i> or <i>â</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape."
      ) + "</span>"
    ).append(o);
    p.buttons.info(
      p.i18n("buttons.copyTitle", "Copy to clipboard"),
      i,
      0
    ), r[0].focus(), r[0].select();
    var f = pn(i).closest(".dt-button-info"), l = function() {
      f.off("click.buttons-copy"), pn(document).off(".buttons-copy"), p.buttons.info(!1);
    };
    f.on("click.buttons-copy", l), pn(document).on("keydown.buttons-copy", function(c) {
      c.keyCode === 27 && (l(), R());
    }).on("copy.buttons-copy cut.buttons-copy", function() {
      l(), R();
    });
  },
  async: 100,
  exportOptions: {},
  fieldSeparator: "	",
  fieldBoundary: "",
  header: !0,
  footer: !1,
  title: "*",
  messageTop: "*",
  messageBottom: "*"
};
ge.ext.buttons.csvHtml5 = {
  bom: !1,
  className: "buttons-csv buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && window.Blob;
  },
  text: function(s) {
    return s.i18n("buttons.csv", "CSV");
  },
  action: function(s, p, b, A, R) {
    var B = jf(p, A).str, u = p.buttons.exportInfo(A), d = A.charset;
    A.customize && (B = A.customize(B, A, p)), d !== !1 ? (d || (d = document.characterSet || document.charset), d && (d = ";charset=" + d)) : d = "", A.bom && (B = String.fromCharCode(65279) + B), Ro(
      new Blob([B], { type: "text/csv" + d }),
      u.filename,
      !0
    ), R();
  },
  async: 100,
  filename: "*",
  extension: ".csv",
  exportOptions: {},
  fieldSeparator: ",",
  fieldBoundary: '"',
  escapeChar: '"',
  charset: null,
  header: !0,
  footer: !1
};
ge.ext.buttons.excelHtml5 = {
  className: "buttons-excel buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && ws() !== void 0 && !Gf() && As;
  },
  text: function(s) {
    return s.i18n("buttons.excel", "Excel");
  },
  action: function(s, p, b, A, R) {
    var B = 0, u, d, t = function(E) {
      var F = Xf[E];
      return pn.parseXML(F);
    }, o = t("xl/worksheets/sheet1.xml"), r = o.getElementsByTagName("sheetData")[0], n = {
      _rels: {
        ".rels": t("_rels/.rels")
      },
      xl: {
        _rels: {
          "workbook.xml.rels": t("xl/_rels/workbook.xml.rels")
        },
        "workbook.xml": t("xl/workbook.xml"),
        "styles.xml": t("xl/styles.xml"),
        worksheets: {
          "sheet1.xml": o
        }
      },
      "[Content_Types].xml": t("[Content_Types].xml")
    }, i = p.buttons.exportData(A.exportOptions), f, l, c = function(E) {
      f = B + 1, l = Gn(o, "row", { attr: { r: f } });
      for (var F = 0, x = E.length; F < x; F++) {
        var P = Hi(F) + "" + f, L = null;
        if (E[F] === null || E[F] === void 0 || E[F] === "")
          if (A.createEmptyCells === !0)
            E[F] = "";
          else
            continue;
        var N = E[F];
        E[F] = typeof E[F].trim == "function" ? E[F].trim() : E[F];
        for (var M = 0, K = af.length; M < K; M++) {
          var ut = af[M];
          if (E[F].match && !E[F].match(/^0\d+/) && E[F].match(ut.match)) {
            var J = E[F].replace(/[^\d\.\-]/g, "");
            ut.fmt && (J = ut.fmt(J)), L = Gn(o, "c", {
              attr: {
                r: P,
                s: ut.style
              },
              children: [Gn(o, "v", { text: J })]
            });
            break;
          }
        }
        if (!L)
          if (typeof E[F] == "number" || E[F].match && E[F].match(/^-?\d+(\.\d+)?([eE]\-?\d+)?$/) && // Includes exponential format
          !E[F].match(/^0\d+/))
            L = Gn(o, "c", {
              attr: {
                t: "n",
                r: P
              },
              children: [Gn(o, "v", { text: E[F] })]
            });
          else {
            var rt = N.replace ? N.replace(
              /[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g,
              ""
            ) : N;
            L = Gn(o, "c", {
              attr: {
                t: "inlineStr",
                r: P
              },
              children: {
                row: Gn(o, "is", {
                  children: {
                    row: Gn(o, "t", {
                      text: rt,
                      attr: {
                        "xml:space": "preserve"
                      }
                    })
                  }
                })
              }
            });
          }
        l.appendChild(L);
      }
      r.appendChild(l), B++;
    }, h = function(E) {
      E.forEach(function(F) {
        c(
          F.map(function(x) {
            return x ? x.title : "";
          })
        ), pn("row:last c", o).attr("s", "2"), F.forEach(function(x, P) {
          x && (x.colSpan > 1 || x.rowSpan > 1) && Co(
            o,
            B,
            P,
            x.rowSpan,
            x.colSpan
          );
        });
      });
    };
    A.customizeData && A.customizeData(i);
    var a = p.buttons.exportInfo(A);
    a.title && (c([a.title]), Co(o, B, 0, 1, i.header.length), pn("row:last c", o).attr("s", "51")), a.messageTop && (c([a.messageTop]), Co(o, B, 0, 1, i.header.length)), A.header && h(i.headerStructure), u = B;
    for (var v = 0, y = i.body.length; v < y; v++)
      c(i.body[v]);
    d = B, A.footer && i.footer && h(i.footerStructure), a.messageBottom && (c([a.messageBottom]), Co(o, B, 0, 1, i.header.length));
    var g = Gn(o, "cols");
    pn("worksheet", o).prepend(g);
    for (var e = 0, m = i.header.length; e < m; e++)
      g.appendChild(
        Gn(o, "col", {
          attr: {
            min: e + 1,
            max: e + 1,
            width: Ud(i, e),
            customWidth: 1
          }
        })
      );
    var w = n.xl["workbook.xml"];
    pn("sheets sheet", w).attr("name", nf(A)), A.autoFilter && (pn("mergeCells", o).before(
      Gn(o, "autoFilter", {
        attr: {
          ref: "A" + u + ":" + Hi(i.header.length - 1) + d
        }
      })
    ), pn("definedNames", w).append(
      Gn(w, "definedName", {
        attr: {
          name: "_xlnm._FilterDatabase",
          localSheetId: "0",
          hidden: 1
        },
        text: nf(A) + "!$A$" + u + ":" + Hi(i.header.length - 1) + d
      })
    )), A.customize && A.customize(n, A, p), pn("mergeCells", o).children().length === 0 && pn("mergeCells", o).remove();
    var D = ws(), I = new D(), T = {
      compression: "DEFLATE",
      type: "blob",
      mimeType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    };
    Vf(I, n);
    var C = a.filename;
    C > 175 && (C = C.substr(0, 175)), I.generateAsync ? I.generateAsync(T).then(function(E) {
      Ro(E, C), R();
    }) : (Ro(I.generate(T), C), R());
  },
  async: 100,
  filename: "*",
  extension: ".xlsx",
  exportOptions: {},
  header: !0,
  footer: !0,
  title: "*",
  messageTop: "*",
  messageBottom: "*",
  createEmptyCells: !1,
  autoFilter: !1,
  sheetName: ""
};
ge.ext.buttons.pdfHtml5 = {
  className: "buttons-pdf buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && Ss();
  },
  text: function(s) {
    return s.i18n("buttons.pdf", "PDF");
  },
  action: function(s, p, b, A, R) {
    var B = p.buttons.exportData(A.exportOptions), u = p.buttons.exportInfo(A), d = [];
    A.header && B.headerStructure.forEach(function(i) {
      d.push(
        i.map(function(f) {
          return f ? {
            text: f.title,
            colSpan: f.colspan,
            rowSpan: f.rowspan,
            style: "tableHeader"
          } : {};
        })
      );
    });
    for (var t = 0, o = B.body.length; t < o; t++)
      d.push(
        B.body[t].map(function(i) {
          return {
            text: i == null ? "" : typeof i == "string" ? i : i.toString()
          };
        })
      );
    A.footer && B.footerStructure.forEach(function(i) {
      d.push(
        i.map(function(f) {
          return f ? {
            text: f.title,
            colSpan: f.colspan,
            rowSpan: f.rowspan,
            style: "tableHeader"
          } : {};
        })
      );
    });
    var r = {
      pageSize: A.pageSize,
      pageOrientation: A.orientation,
      content: [
        {
          style: "table",
          table: {
            headerRows: B.headerStructure.length,
            footerRows: B.footerStructure.length,
            // Used for styling, doesn't do anything in pdfmake
            body: d
          },
          layout: {
            hLineWidth: function(i, f) {
              return i === 0 || i === f.table.body.length ? 0 : 0.5;
            },
            vLineWidth: function() {
              return 0;
            },
            hLineColor: function(i, f) {
              return i === f.table.headerRows || i === f.table.body.length - f.table.footerRows ? "#333" : "#ddd";
            },
            fillColor: function(i) {
              return i < B.headerStructure.length ? "#fff" : i % 2 === 0 ? "#f3f3f3" : null;
            },
            paddingTop: function() {
              return 5;
            },
            paddingBottom: function() {
              return 5;
            }
          }
        }
      ],
      styles: {
        tableHeader: {
          bold: !0,
          fontSize: 11,
          alignment: "center"
        },
        tableFooter: {
          bold: !0,
          fontSize: 11
        },
        table: {
          margin: [0, 5, 0, 5]
        },
        title: {
          alignment: "center",
          fontSize: 13
        },
        message: {}
      },
      defaultStyle: {
        fontSize: 10
      }
    };
    u.messageTop && r.content.unshift({
      text: u.messageTop,
      style: "message",
      margin: [0, 0, 0, 12]
    }), u.messageBottom && r.content.push({
      text: u.messageBottom,
      style: "message",
      margin: [0, 0, 0, 12]
    }), u.title && r.content.unshift({
      text: u.title,
      style: "title",
      margin: [0, 0, 0, 12]
    }), A.customize && A.customize(r, A, p);
    var n = Ss().createPdf(r);
    A.download === "open" && !Gf() ? n.open() : n.download(u.filename), R();
  },
  async: 100,
  title: "*",
  filename: "*",
  extension: ".pdf",
  exportOptions: {},
  orientation: "portrait",
  // This isn't perfect, but it is close
  pageSize: navigator.language === "en-US" || navigator.language === "en-CA" ? "LETTER" : "A4",
  header: !0,
  footer: !0,
  messageTop: "*",
  messageBottom: "*",
  customize: null,
  download: "download"
};
/*!
 * Print button for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
let ii = Ca;
var ni = document.createElement("a"), zd = function(s) {
  var p = ii(s).clone()[0];
  return p.nodeName.toLowerCase() === "link" && (p.href = Zf(p.href)), p.outerHTML;
}, Zf = function(s) {
  ni.href = s;
  var p = ni.host;
  return p.indexOf("/") === -1 && ni.pathname.indexOf("/") !== 0 && (p += "/"), ni.protocol + "//" + p + ni.pathname + ni.search;
};
ge.ext.buttons.print = {
  className: "buttons-print",
  text: function(s) {
    return s.i18n("buttons.print", "Print");
  },
  action: function(s, p, b, A, R) {
    var B = p.buttons.exportData(
      ii.extend({ decodeEntities: !1 }, A.exportOptions)
      // XSS protection
    ), u = p.buttons.exportInfo(A), d = p.columns(A.exportOptions.columns).nodes().map(function(a) {
      return a.className;
    }).toArray(), t = function(a, v) {
      for (var y = "<tr>", g = 0, e = a.length; g < e; g++) {
        var m = a[g] === null || a[g] === void 0 ? "" : a[g], w = d[g] ? 'class="' + d[g] + '"' : "";
        y += "<" + v + " " + w + ">" + m + "</" + v + ">";
      }
      return y + "</tr>";
    }, o = '<table class="' + p.table().node().className + '">';
    if (A.header) {
      var r = B.headerStructure.map(function(a) {
        return "<tr>" + a.map(function(v) {
          return v ? '<th colspan="' + v.colspan + '" rowspan="' + v.rowspan + '">' + v.title + "</th>" : "";
        }).join("") + "</tr>";
      });
      o += "<thead>" + r.join("") + "</thead>";
    }
    o += "<tbody>";
    for (var n = 0, i = B.body.length; n < i; n++)
      o += t(B.body[n], "td");
    if (o += "</tbody>", A.footer && B.footer) {
      var f = B.footerStructure.map(function(a) {
        return "<tr>" + a.map(function(v) {
          return v ? '<th colspan="' + v.colspan + '" rowspan="' + v.rowspan + '">' + v.title + "</th>" : "";
        }).join("") + "</tr>";
      });
      o += "<tfoot>" + f.join("") + "</tfoot>";
    }
    o += "</table>";
    var l = window.open("", "");
    if (!l) {
      p.buttons.info(
        p.i18n("buttons.printErrorTitle", "Unable to open print view"),
        p.i18n(
          "buttons.printErrorMsg",
          "Please allow popups in your browser for this site to be able to view the print view."
        ),
        5e3
      );
      return;
    }
    l.document.close();
    var c = "<title>" + u.title + "</title>";
    ii("style, link").each(function() {
      c += zd(this);
    });
    try {
      l.document.head.innerHTML = c;
    } catch {
      ii(l.document.head).html(c);
    }
    l.document.body.innerHTML = "<h1>" + u.title + "</h1><div>" + (u.messageTop || "") + "</div>" + o + "<div>" + (u.messageBottom || "") + "</div>", ii(l.document.body).addClass("dt-print-view"), ii("img", l.document.body).each(function(a, v) {
      v.setAttribute("src", Zf(v.getAttribute("src")));
    }), A.customize && A.customize(l, A, p);
    var h = function() {
      A.autoPrint && (l.print(), l.close());
    };
    l.setTimeout(h, 1e3), R();
  },
  async: 100,
  title: "*",
  messageTop: "*",
  messageBottom: "*",
  exportOptions: {},
  header: !0,
  footer: !1,
  autoPrint: !0,
  customize: null
};
class of extends Error {
  constructor(p) {
    super(`Configuration Error : ${p}`), this.name = "ConfigError", this.stack = new Error().stack;
  }
}
class Wd {
  instance;
  constructor() {
  }
  initEvent = (p) => new CustomEvent("datatable:init", {
    detail: p
  });
  validateConfig(p) {
    if (!p)
      throw new of("Object not found");
    if (!p.data && !p.lxConfig?.url)
      throw new of("You must provide data source or an URL");
    if (p.lxConfig && p.lxConfig.row_action) {
      if (!p.lxConfig.row_action.width)
        throw new Error("Param width is missing from row_action");
      if (!p.lxConfig.row_action.actions)
        throw new Error("Param actions is missing from row_action");
      if (!Array.isArray(p.lxConfig.row_action.actions))
        throw new TypeError("Param actions must be of type Array");
    }
    return p;
  }
  _splitConfig(p) {
    let b = null, A = null;
    return "lxConfig" in p && (b = p.lxConfig, delete p.lxConfig), A = p, { standardConfig: A, lxConfig: b };
  }
}
var Wi = /* @__PURE__ */ ((s) => (s.NONE = "NONE", s))(Wi || {});
class Hd {
  config;
  headersGroup;
  cols;
  constructor(p) {
    this.config = p, this.headersGroup = [], this.cols = [];
  }
  setColsDef(p) {
    return this.config = p, this;
  }
  generate() {
    return !this.config || !this.config?.headers ? this : (this.headersGroup = this.generateHeadersGroup(this.config.headers), this);
  }
  generateHeadersGroup(p) {
    const b = /* @__PURE__ */ new Set();
    return p.map((A) => {
      A.headerGroup && b.add(A.headerGroup), A.columns.forEach((R) => this.cols.push(R));
    }), Array.from(b);
  }
  groupByHeadersGroup = (p) => {
    const b = {};
    for (let A = 0; A < p.length; A++) {
      const R = p[A], B = R.headerGroup ?? `NONE_${A}`;
      b[B] = R.columns;
    }
    return b;
  };
  getColumns = () => this.cols;
  getGroupHeaders = () => this.headersGroup;
  getConfig = () => this.config;
}
class jd {
  #t;
  #e = [];
  constructor(p) {
    this.#t = p;
  }
  get value() {
    return this.#t;
  }
  set value(p) {
    this.#t = p;
  }
  getState(p) {
    return p != null ? this.#t[p] : this.#t;
  }
  setState(p) {
    return p instanceof Function ? this.#t = p(this.#t) : this.#t = p, this.#e.forEach((b) => b(this.#t)), this.#t;
  }
  subscribe(p) {
    return this.#e.push(p), () => {
      this.#e = this.#e.filter((b) => b !== p);
    };
  }
}
class Yf extends Error {
  constructor(p) {
    super(`Data Acquisition Error : ${p}`), this.name = "DaoError", this.stack = new Error().stack;
  }
}
class Gd {
  state;
  constructor() {
    this.state = new jd({
      loading: !1,
      error: null,
      data: null
    });
  }
  async fetchData(p) {
    if (!p)
      throw new Yf("you must provide data or an URL");
    this.state.setState((b) => (b.loading = !1, b));
    try {
      if (!p)
        throw new Error("Error : Url is not defined");
      const b = await fetch(p);
      if (b.ok) {
        const A = await b.json();
        this.state.setState((R) => (R.data = A, R));
      } else
        this.state.setState((A) => (A.error = new Error(
          `Error during fetch => Status : ${b.status}`
        ), A));
    } catch (b) {
      process.env.NODE_ENV !== "test" && console.error(b), this.state.setState((A) => (A.error = b, A));
    } finally {
      return this.state.setState((A) => (A.loading = !1, A)), this.state.getState();
    }
  }
}
class Vd {
  getDataFormatted(p, b) {
    return p.map((A) => {
      const R = {};
      return b.forEach((B) => {
        A[B.name] && (R[B.name] = A[B.name]);
      }), R;
    }).filter((A) => Object.keys(A).length > 0);
  }
}
class vs {
  #t;
  constructor(p) {
    this.#t = p;
  }
  get colsDef() {
    return this.#t;
  }
  setColsDef(p) {
    return this.#t = p, this;
  }
  /**
   * @description set default value from columnsDefaultKey config key
   */
  static setDefaultKeyValue(p = null, b) {
    return p && b.forEach((A) => {
      Object.entries(p).map(([R, B]) => {
        R in A || (A[R] = B);
      });
    }), b;
  }
  static mergeColumns(p, b) {
    const A = {};
    for (let R = 0; R < p.length; R++) {
      const B = p[R];
      A[B.name] = B;
    }
    for (let R = 0; R < b.length; R++) {
      const B = b[R];
      A[B.name] ? A[B.name] = {
        ...A[B.name],
        ...B
      } : A[B.name] = B;
    }
    return Object.values(A);
  }
}
class Ys {
  $element(p, {
    classList: b,
    attributes: A,
    content: R,
    children: B,
    html: u,
    style: d,
    onClick: t,
    onChange: o
  }) {
    const r = document.createElement(p);
    if (b && b.forEach((n) => r.classList.add(n)), R && (r.textContent = R), B && r.append(...B), u && (r.innerHTML = u), d)
      for (const [n, i] of Object.entries(d))
        r.style[n] = String(i);
    return A && Object.entries(A).forEach(([n, i]) => {
      typeof i == "boolean" ? r.toggleAttribute(n, i) : r.setAttribute(n, i);
    }), t && t.forEach((n) => n), o && o.forEach((n) => n), r;
  }
}
class Xd extends Error {
  constructor(p) {
    super(`DOM Error : ${p}`), this.name = "DomError", this.stack = new Error().stack;
  }
}
class Zd extends Ys {
  tableRef;
  headerRef = null;
  config;
  headers;
  MAIN_HEADER_ID = "main_header";
  GROUP_HEADER_ID = "group_header";
  constructor(p, { headers: b, config: A }) {
    super(), this.tableRef = p, this.headers = b, this.config = A, this.appendTableHeader(), this.getHeaderElement();
  }
  appendTableHeader = () => this.tableRef?.append(this.$element("thead", {}));
  getHeaderElement = () => (this.headerRef = this.tableRef?.querySelector("thead") ?? null, this.headerRef);
  $headerWrapper = (p, b, A) => this.$element("tr", {
    attributes: { class: b, id: p },
    children: A
  });
  async build() {
    if (!this.headerRef)
      throw new Xd("Cannot select the dom header ref");
    if (!this.headers.getConfig())
      return this.headerRef;
    const p = this.headers.groupByHeadersGroup(
      this.config.headers ?? []
    );
    if (!Object.keys(p).length)
      return this.headerRef;
    if (Object.keys(p).length === 1 && Object.keys(p).some((b) => b.startsWith(Wi.NONE))) {
      const b = this.$mainRowHeader(p), A = this.$headerWrapper(
        this.MAIN_HEADER_ID,
        "main_header",
        b
      );
      this.headerRef?.append(A);
    } else {
      const [b, A] = await Promise.all([
        this.$groupHeaders(p),
        this.$mainHeader(p)
      ]), R = this.$headerWrapper(
        this.GROUP_HEADER_ID,
        "group_header",
        b
      ), B = this.$headerWrapper(
        this.MAIN_HEADER_ID,
        "main_header",
        A
      );
      this.headerRef?.append(R, B);
    }
    return this.headerRef;
  }
  /**
   * Build main headers columns
   */
  async $mainHeader(p) {
    const b = [];
    for (const [A, R] of Object.entries(p))
      if (!A.startsWith(Wi.NONE))
        for (let B = 0; B < R.length; B++)
          b.push(
            this.$element("th", {
              classList: ["colspan-border"],
              attributes: {
                rowspan: "1",
                colspan: "1"
              },
              content: R[B].title,
              style: R[B].style
            })
          );
    return b;
  }
  $mainRowHeader(p) {
    const b = [];
    for (const [A, R] of Object.entries(p))
      for (let B = 0; B < R.length; B++)
        A.startsWith(Wi.NONE) && b.push(
          this.$element("th", {
            classList: ["colspan-border"],
            attributes: {
              rowspan: "1",
              colspan: "1"
            },
            content: R[B].title,
            style: R[B].style
          })
        );
    return b;
  }
  /**
   * Build Group headers
   */
  async $groupHeaders(p) {
    const b = [];
    for (const [A, R] of Object.entries(p))
      if (!A.startsWith(Wi.NONE))
        b.push(
          this.$element("th", {
            classList: ["colspan-border"],
            attributes: {
              rowspan: "1",
              colspan: String(R.length)
            },
            content: A
          })
        );
      else
        for (let B = 0; B < R.length; B++)
          b.push(
            this.$element("th", {
              classList: ["colspan-border"],
              attributes: {
                rowspan: "2",
                colspan: "1"
              },
              content: R[B].title,
              style: R[B].style
            })
          );
    return b;
  }
}
class Yd {
  transformers;
  constructor() {
    this.transformers = [];
  }
  /**
   * Add transformer to the data submitted
   */
  add = (p) => this.transformers.push(p);
  /**
   * Execute each transformer
   */
  exec = (p) => (this.transformers.forEach((b) => {
    p = b(p);
  }), p);
}
class ai extends Error {
  constructor(p) {
    super(`Action plugin Error : ${p}`), this.name = "ActionError", this.stack = new Error().stack;
  }
}
class Kd extends Ys {
  constructor() {
    super();
  }
  $actionButton({
    name: p,
    label: b,
    iconTitle: A,
    icon: R,
    style: B,
    effect: u
  }) {
    const d = {
      padding: "4px"
    };
    let t;
    return A && (t = this.$element("i", {
      classList: ["fa", A]
    })), R && (t = R.cloneNode(!0)), this.$element("button", {
      classList: ["btn"],
      children: [t],
      attributes: {
        name: p,
        "aria-label": b ?? p
      },
      style: { ...d, ...B },
      onClick: Array.isArray(u) ? u : [u]
    });
  }
  defineDefaultCellStyle(p) {
    p.style.display = "flex", p.style.justifyContent = "center", p.style.alignItems = "center", p.style.gap = "6px";
  }
}
class Jd {
  static async fetchUrl(p) {
    try {
      return await (await fetch(p)).json();
    } catch (b) {
      throw b;
    }
  }
}
class Qd {
  customActions;
  constructor(p, b) {
    this.customActions = [
      {
        name: "SURVEA_EDIT",
        effect: async (A) => {
          if (!p.url)
            throw new Error("URL is not defined");
          try {
            const R = b(p.url, A), B = await Jd.fetchUrl(R);
            B.url || window.open(B.url, p.blank ? "_blank" : "_self");
          } catch (R) {
            throw R;
          }
        }
      }
    ];
  }
  retrieve = () => this.customActions;
}
class $d {
  actions;
  customActions;
  #t;
  #e;
  #r;
  #n;
  constructor({ width: p, className: b, actions: A }) {
    this.actions = [], this.#t = p, this.#r = b, this.#e = A, this.#n = new Kd();
  }
  async generateColDefConfig() {
    return {
      data: null,
      defaultContent: "",
      targets: -1,
      width: this.#t,
      createdCell: async (p, b) => {
        for (const A of this.#e)
          if (A.effect)
            this.#a(p, b, A);
          else if (A.customAction) {
            if (!A.url || A.url === "")
              throw new Error("Cannnot open URL, URL is missing");
            new Qd(A, this.parseUrlString.bind(this)).retrieve().map((R) => {
              R.name === A.customAction && (A.effect = R.effect, this.#a(
                p,
                b,
                A
              ));
            });
          } else
            A.effect = (R) => {
              if (!A.url || A.url === "")
                throw new Error("Cannnot open URL, URL is missing");
              const B = this.parseUrlString(A.url, R);
              window.open(B, A.blank ? "_blank" : "_self");
            }, this.#a(p, b, A);
      }
    };
  }
  #a(p, b, A) {
    const R = this.#n.$actionButton(A);
    R.addEventListener("click", async () => {
      try {
        await A.effect(b), A.onComplete && A.onComplete(b);
      } catch (B) {
        A.onError && A.onError(B, b);
      }
    }), this.#n.defineDefaultCellStyle(p), this.#r && p.classList.add(this.#r), p.appendChild(R);
  }
  _getUrlParams(p) {
    const b = Array.from(p.matchAll(/\{(.+?)\}/g)), A = Array.from(b).filter((R) => R[1] !== "}{").map((R) => R[1]);
    return Array.from(new Set(A));
  }
  parseUrlString(p, b) {
    const A = this._getUrlParams(p);
    return A.length && A.forEach((R) => {
      p.includes(`{${R}}`) && b[R] && (p = p.replaceAll(`{${R}}`, b[R]));
    }), p;
  }
  /**
   * @throws ActionError if an error occured
   */
  validateConfig() {
    return this.#e.map((p) => {
      if (!p.icon && !p.iconTitle)
        throw new ai("You must provide an icon name or an icon title");
      if (p.icon && !(p.icon instanceof HTMLElement))
        throw new ai("Icon must be of type HTMLElement");
      if (!p.name)
        throw new ai("Name is not set");
      if (!p.effect && !p.url)
        throw new ai("You must provide an URL or an Effect function");
      if (p.url && p.url === "")
        throw new ai("Invalid URL");
      if (p.effect && !(p.effect instanceof Function))
        throw new ai("Effect must be a function");
    }), this;
  }
}
class qd {
  getDefaults() {
    return [
      "copyHtml5",
      "excelHtml5",
      "csvHtml5",
      {
        text: "JSON",
        action: function(p, b) {
          var A = b.buttons.exportData({ orthogonal: "export_json" });
          Ca.fn.dataTable.fileSave(
            new Blob([JSON.stringify(A)]),
            "Exported_data.json"
          );
        }
      },
      "colvis"
    ];
  }
  parse(p) {
    return Array.isArray(p) && p.forEach((b) => {
    }), p;
  }
}
class _d extends Ys {
  #t;
  constructor(p) {
    super(), this.#t = p;
  }
  generate(p, b, A) {
    const R = this.$headerGroup();
    for (let B = 0; B < p; B++) {
      const u = this.$filterInputs(), d = this.$filterIcon(), t = this.$element("div", {
        style: {
          position: "relative",
          width: "100%"
        },
        children: [u, d]
      });
      u.dataset.index = String(B), u.addEventListener("keyup", A.bind(b));
      const o = this.$element("th", {
        children: [t]
      });
      R.appendChild(o);
    }
    return this.#t.appendChild(R), this.#t;
  }
  $headerGroup() {
    return this.$element("tr", {
      classList: ["header_search"]
    });
  }
  $filterInputs() {
    return this.$element("input", {
      classList: ["colum_search"],
      style: {
        height: "22px",
        padding: "0 8px",
        lineHeight: " 20px",
        fontStyle: "italic",
        textAlign: "left",
        fontWeight: " normal",
        color: " #999",
        width: "100%",
        position: "relative",
        borderRadius: "3px",
        paddingRight: "18px"
      }
    });
  }
  $filterIcon() {
    return this.$element("i", {
      classList: ["fa", "fa-search"],
      style: {
        position: "absolute",
        top: "6px",
        right: "5px"
      }
    });
  }
}
class t1 {
  #t;
  #e;
  #r;
  constructor(p, b) {
    this.#e = this.#n(p), this.#r = b;
  }
  #n(p) {
    let b = 0;
    return p.columns && (b += p.columns.length), p.lxConfig && p.lxConfig.headers && p.lxConfig.headers.forEach((A) => {
      b += A.columns.length;
    }), b;
  }
  init(p) {
    if (p) {
      if (!this.#r)
        throw new Error("Instance is not defined");
      return this.#t = new _d(p), this.#t.generate(
        this.#e,
        this.#r,
        this._filterEvent
      );
    }
  }
  _filterEvent(p) {
    const b = p.target;
    this.column(b.dataset.index).search(b.value).draw();
  }
}
1.005.toFixed(2) == "1.01" || function(s) {
  const p = function(A) {
    if (Math.abs(A) < 1) {
      var R = parseInt(A.toString().split("e-")[1]);
      R && (A *= Math.pow(10, R - 1), A = "0." + new Array(R).join("0") + A.toString().substring(2));
    } else {
      var R = parseInt(A.toString().split("+")[1]);
      R > 20 && (R -= 20, A /= Math.pow(10, R), A += new Array(R + 1).join("0"));
    }
    return A;
  };
  var b = s.toFixed;
  s.toFixed = function(A) {
    var R = p(this).toString().split("."), B = +(R[1] ? R.join(".") + (R[1].length > A && "1" || "") : R[0]);
    return b.call(B, A);
  };
}(Number.prototype);
var Kf = { exports: {} };
(function(s, p) {
  (function(b, A) {
    s.exports = A();
  })(oi, function() {
    var b = 1e3, A = 6e4, R = 36e5, B = "millisecond", u = "second", d = "minute", t = "hour", o = "day", r = "week", n = "month", i = "quarter", f = "year", l = "date", c = "Invalid Date", h = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, a = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, v = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(x) {
      var P = ["th", "st", "nd", "rd"], L = x % 100;
      return "[" + x + (P[(L - 20) % 10] || P[L] || P[0]) + "]";
    } }, y = function(x, P, L) {
      var N = String(x);
      return !N || N.length >= P ? x : "" + Array(P + 1 - N.length).join(L) + x;
    }, g = { s: y, z: function(x) {
      var P = -x.utcOffset(), L = Math.abs(P), N = Math.floor(L / 60), M = L % 60;
      return (P <= 0 ? "+" : "-") + y(N, 2, "0") + ":" + y(M, 2, "0");
    }, m: function x(P, L) {
      if (P.date() < L.date())
        return -x(L, P);
      var N = 12 * (L.year() - P.year()) + (L.month() - P.month()), M = P.clone().add(N, n), K = L - M < 0, ut = P.clone().add(N + (K ? -1 : 1), n);
      return +(-(N + (L - M) / (K ? M - ut : ut - M)) || 0);
    }, a: function(x) {
      return x < 0 ? Math.ceil(x) || 0 : Math.floor(x);
    }, p: function(x) {
      return { M: n, y: f, w: r, d: o, D: l, h: t, m: d, s: u, ms: B, Q: i }[x] || String(x || "").toLowerCase().replace(/s$/, "");
    }, u: function(x) {
      return x === void 0;
    } }, e = "en", m = {};
    m[e] = v;
    var w = "$isDayjsObject", D = function(x) {
      return x instanceof E || !(!x || !x[w]);
    }, I = function x(P, L, N) {
      var M;
      if (!P)
        return e;
      if (typeof P == "string") {
        var K = P.toLowerCase();
        m[K] && (M = K), L && (m[K] = L, M = K);
        var ut = P.split("-");
        if (!M && ut.length > 1)
          return x(ut[0]);
      } else {
        var J = P.name;
        m[J] = P, M = J;
      }
      return !N && M && (e = M), M || !N && e;
    }, T = function(x, P) {
      if (D(x))
        return x.clone();
      var L = typeof P == "object" ? P : {};
      return L.date = x, L.args = arguments, new E(L);
    }, C = g;
    C.l = I, C.i = D, C.w = function(x, P) {
      return T(x, { locale: P.$L, utc: P.$u, x: P.$x, $offset: P.$offset });
    };
    var E = function() {
      function x(L) {
        this.$L = I(L.locale, null, !0), this.parse(L), this.$x = this.$x || L.x || {}, this[w] = !0;
      }
      var P = x.prototype;
      return P.parse = function(L) {
        this.$d = function(N) {
          var M = N.date, K = N.utc;
          if (M === null)
            return /* @__PURE__ */ new Date(NaN);
          if (C.u(M))
            return /* @__PURE__ */ new Date();
          if (M instanceof Date)
            return new Date(M);
          if (typeof M == "string" && !/Z$/i.test(M)) {
            var ut = M.match(h);
            if (ut) {
              var J = ut[2] - 1 || 0, rt = (ut[7] || "0").substring(0, 3);
              return K ? new Date(Date.UTC(ut[1], J, ut[3] || 1, ut[4] || 0, ut[5] || 0, ut[6] || 0, rt)) : new Date(ut[1], J, ut[3] || 1, ut[4] || 0, ut[5] || 0, ut[6] || 0, rt);
            }
          }
          return new Date(M);
        }(L), this.init();
      }, P.init = function() {
        var L = this.$d;
        this.$y = L.getFullYear(), this.$M = L.getMonth(), this.$D = L.getDate(), this.$W = L.getDay(), this.$H = L.getHours(), this.$m = L.getMinutes(), this.$s = L.getSeconds(), this.$ms = L.getMilliseconds();
      }, P.$utils = function() {
        return C;
      }, P.isValid = function() {
        return this.$d.toString() !== c;
      }, P.isSame = function(L, N) {
        var M = T(L);
        return this.startOf(N) <= M && M <= this.endOf(N);
      }, P.isAfter = function(L, N) {
        return T(L) < this.startOf(N);
      }, P.isBefore = function(L, N) {
        return this.endOf(N) < T(L);
      }, P.$g = function(L, N, M) {
        return C.u(L) ? this[N] : this.set(M, L);
      }, P.unix = function() {
        return Math.floor(this.valueOf() / 1e3);
      }, P.valueOf = function() {
        return this.$d.getTime();
      }, P.startOf = function(L, N) {
        var M = this, K = !!C.u(N) || N, ut = C.p(L), J = function(Q, pt) {
          var ct = C.w(M.$u ? Date.UTC(M.$y, pt, Q) : new Date(M.$y, pt, Q), M);
          return K ? ct : ct.endOf(o);
        }, rt = function(Q, pt) {
          return C.w(M.toDate()[Q].apply(M.toDate("s"), (K ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(pt)), M);
        }, yt = this.$W, xt = this.$M, Et = this.$D, Ft = "set" + (this.$u ? "UTC" : "");
        switch (ut) {
          case f:
            return K ? J(1, 0) : J(31, 11);
          case n:
            return K ? J(1, xt) : J(0, xt + 1);
          case r:
            var Rt = this.$locale().weekStart || 0, Ut = (yt < Rt ? yt + 7 : yt) - Rt;
            return J(K ? Et - Ut : Et + (6 - Ut), xt);
          case o:
          case l:
            return rt(Ft + "Hours", 0);
          case t:
            return rt(Ft + "Minutes", 1);
          case d:
            return rt(Ft + "Seconds", 2);
          case u:
            return rt(Ft + "Milliseconds", 3);
          default:
            return this.clone();
        }
      }, P.endOf = function(L) {
        return this.startOf(L, !1);
      }, P.$set = function(L, N) {
        var M, K = C.p(L), ut = "set" + (this.$u ? "UTC" : ""), J = (M = {}, M[o] = ut + "Date", M[l] = ut + "Date", M[n] = ut + "Month", M[f] = ut + "FullYear", M[t] = ut + "Hours", M[d] = ut + "Minutes", M[u] = ut + "Seconds", M[B] = ut + "Milliseconds", M)[K], rt = K === o ? this.$D + (N - this.$W) : N;
        if (K === n || K === f) {
          var yt = this.clone().set(l, 1);
          yt.$d[J](rt), yt.init(), this.$d = yt.set(l, Math.min(this.$D, yt.daysInMonth())).$d;
        } else
          J && this.$d[J](rt);
        return this.init(), this;
      }, P.set = function(L, N) {
        return this.clone().$set(L, N);
      }, P.get = function(L) {
        return this[C.p(L)]();
      }, P.add = function(L, N) {
        var M, K = this;
        L = Number(L);
        var ut = C.p(N), J = function(xt) {
          var Et = T(K);
          return C.w(Et.date(Et.date() + Math.round(xt * L)), K);
        };
        if (ut === n)
          return this.set(n, this.$M + L);
        if (ut === f)
          return this.set(f, this.$y + L);
        if (ut === o)
          return J(1);
        if (ut === r)
          return J(7);
        var rt = (M = {}, M[d] = A, M[t] = R, M[u] = b, M)[ut] || 1, yt = this.$d.getTime() + L * rt;
        return C.w(yt, this);
      }, P.subtract = function(L, N) {
        return this.add(-1 * L, N);
      }, P.format = function(L) {
        var N = this, M = this.$locale();
        if (!this.isValid())
          return M.invalidDate || c;
        var K = L || "YYYY-MM-DDTHH:mm:ssZ", ut = C.z(this), J = this.$H, rt = this.$m, yt = this.$M, xt = M.weekdays, Et = M.months, Ft = M.meridiem, Rt = function(pt, ct, ot, mt) {
          return pt && (pt[ct] || pt(N, K)) || ot[ct].slice(0, mt);
        }, Ut = function(pt) {
          return C.s(J % 12 || 12, pt, "0");
        }, Q = Ft || function(pt, ct, ot) {
          var mt = pt < 12 ? "AM" : "PM";
          return ot ? mt.toLowerCase() : mt;
        };
        return K.replace(a, function(pt, ct) {
          return ct || function(ot) {
            switch (ot) {
              case "YY":
                return String(N.$y).slice(-2);
              case "YYYY":
                return C.s(N.$y, 4, "0");
              case "M":
                return yt + 1;
              case "MM":
                return C.s(yt + 1, 2, "0");
              case "MMM":
                return Rt(M.monthsShort, yt, Et, 3);
              case "MMMM":
                return Rt(Et, yt);
              case "D":
                return N.$D;
              case "DD":
                return C.s(N.$D, 2, "0");
              case "d":
                return String(N.$W);
              case "dd":
                return Rt(M.weekdaysMin, N.$W, xt, 2);
              case "ddd":
                return Rt(M.weekdaysShort, N.$W, xt, 3);
              case "dddd":
                return xt[N.$W];
              case "H":
                return String(J);
              case "HH":
                return C.s(J, 2, "0");
              case "h":
                return Ut(1);
              case "hh":
                return Ut(2);
              case "a":
                return Q(J, rt, !0);
              case "A":
                return Q(J, rt, !1);
              case "m":
                return String(rt);
              case "mm":
                return C.s(rt, 2, "0");
              case "s":
                return String(N.$s);
              case "ss":
                return C.s(N.$s, 2, "0");
              case "SSS":
                return C.s(N.$ms, 3, "0");
              case "Z":
                return ut;
            }
            return null;
          }(pt) || ut.replace(":", "");
        });
      }, P.utcOffset = function() {
        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
      }, P.diff = function(L, N, M) {
        var K, ut = this, J = C.p(N), rt = T(L), yt = (rt.utcOffset() - this.utcOffset()) * A, xt = this - rt, Et = function() {
          return C.m(ut, rt);
        };
        switch (J) {
          case f:
            K = Et() / 12;
            break;
          case n:
            K = Et();
            break;
          case i:
            K = Et() / 3;
            break;
          case r:
            K = (xt - yt) / 6048e5;
            break;
          case o:
            K = (xt - yt) / 864e5;
            break;
          case t:
            K = xt / R;
            break;
          case d:
            K = xt / A;
            break;
          case u:
            K = xt / b;
            break;
          default:
            K = xt;
        }
        return M ? K : C.a(K);
      }, P.daysInMonth = function() {
        return this.endOf(n).$D;
      }, P.$locale = function() {
        return m[this.$L];
      }, P.locale = function(L, N) {
        if (!L)
          return this.$L;
        var M = this.clone(), K = I(L, N, !0);
        return K && (M.$L = K), M;
      }, P.clone = function() {
        return C.w(this.$d, this);
      }, P.toDate = function() {
        return new Date(this.valueOf());
      }, P.toJSON = function() {
        return this.isValid() ? this.toISOString() : null;
      }, P.toISOString = function() {
        return this.$d.toISOString();
      }, P.toString = function() {
        return this.$d.toUTCString();
      }, x;
    }(), F = E.prototype;
    return T.prototype = F, [["$ms", B], ["$s", u], ["$m", d], ["$H", t], ["$W", o], ["$M", n], ["$y", f], ["$D", l]].forEach(function(x) {
      F[x[1]] = function(P) {
        return this.$g(P, x[0], x[1]);
      };
    }), T.extend = function(x, P) {
      return x.$i || (x(P, E, T), x.$i = !0), T;
    }, T.locale = I, T.isDayjs = D, T.unix = function(x) {
      return T(1e3 * x);
    }, T.en = m[e], T.Ls = m, T.p = {}, T;
  });
})(Kf);
var e1 = Kf.exports;
const Eo = /* @__PURE__ */ Mf(e1);
Ca.fn.dataTable.render.multi = (s) => (p, b, A, R) => (s.forEach((B) => {
  B && (p = B(p, b, A, R));
}), p);
class r1 {
  renderers;
  constructor(p) {
    this.renderers = [], p.headers && p.headers.map((b) => {
      for (const A of b.columns) {
        if (!A.renderer)
          continue;
        Array.isArray(A.renderer) || (A.renderer = Array(A.renderer));
        const R = A.renderer.map((B) => {
          if (typeof B == "string") {
            if (B.startsWith("DATE_TO_FORMAT_"))
              return (u) => {
                const d = B.split("_").pop();
                return Eo(u).format(d);
              };
            switch (B) {
              case "DATE_DAY":
                return (u) => Eo(u).format("DD/MM/YYYY");
              case "DATE":
                return (u) => Eo(u).format("DD/MM/YYYY HH:mm");
              case "DATE_WITH_SECOND":
                return (u) => Eo(u).format("DD/MM/YYYY HH:mm:ss");
              case "LOCAL_NUMBER":
                return (u) => u.toLocaleString();
              case "BOOLEAN_YESNO":
                return this.booleanString;
              case "NUMBER_FIXED_2":
                return this.numberToFixed;
              case "NUMBER_2_DIGIT_MAX":
                return this.number2DigitMax;
              case "CUT_LONG_TEXT":
                return this.cutLongText;
              case "PARSE_INT":
                return (u) => parseInt(u);
              case "CHECKBOX":
                A.checkboxes = {
                  selectRow: !0
                };
                break;
              case "UPPERCASE":
                return this.uppercase;
            }
          }
        });
        A.render = Ca.fn.dataTable.render.multi(R);
      }
    });
  }
  number2DigitMax(p) {
    if (typeof p == "number")
      return p % 1 === 0 ? p : p.toFixed(2);
    if (typeof p == "string") {
      const b = parseFloat(p);
      return isNaN(b) || b % 1 === 0 ? p : b.toFixed(2);
    } else
      return p;
  }
  booleanString = (p) => p === !0 ? "Oui" : "Non";
  cutLongText = (p) => {
    if (p.length < 30)
      return p;
    var b = function(B) {
      return B.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
    };
    const A = b(p).substr(0, 30), R = b(p);
    return '<span class="ellipsis" title="' + b(R) + '">' + A + "&#8230;</span>";
  };
  uppercase = (p) => typeof p == "string" ? p.toUpperCase() : p;
  numberToFixed = (p) => {
    if (typeof p == "number")
      return p.toFixed(2);
    if (typeof p == "string") {
      const b = parseFloat(p);
      return isNaN(b) ? p : b.toFixed(2);
    }
  };
}
window.JSZip = Od;
class a1 extends Wd {
  config;
  _ref;
  refElement;
  dao;
  dto;
  tranformer;
  #t;
  #e;
  #r;
  #n;
  constructor(p, b) {
    super(), this._ref = p, this.refElement = document.querySelector(p), this.config = b, this.dao = new Gd(), this.dto = new Vd(), this.tranformer = new Yd();
  }
  /**
   * Get the default datatable config if not set
   */
  setDefaults(p) {
    return !p.dom && !p.layout && (p.dom = '<"top"Bf>rt<"bottom"lip><"clear">'), p.scrollX || (p.scrollX = p.scrollX ?? !0), p.fixedHeader || (p.fixedHeader = p.fixedHeader ?? !0), p.paging || (p.paging = p.paging ?? !0), p.lxConfig && (p.lxConfig.filters = p.lxConfig.filters ?? !0, p.lxConfig.handleBootrapTabChange = p.lxConfig.handleBootrapTabChange ?? !0), p;
  }
  /**
   * Main function of datatable
   *
   * Instantiating the lx datatable
   * Generate cols, create dom content etc...
   */
  async init() {
    try {
      this.config = this.validateConfig(this.config);
    } catch (B) {
      return console.error(B.message), this;
    }
    this.setDefaults(this.config);
    let p = [], b = [];
    if (!this.refElement)
      throw new DOMException("Error: element selected doesn't exist");
    const { standardConfig: A, lxConfig: R } = this._splitConfig(this.config);
    if (this.#t = new vs(), this.#e = new Hd(), this.#r = new qd(), A && (p = this.#t.setColsDef(A.columns).colsDef ?? []), R) {
      new r1(R);
      const B = this.#e.setColsDef(R).generate();
      b = B.getColumns();
      const u = new Zd(this.refElement, {
        headers: B,
        config: R
      });
      if (this.#n = await u.build(), !this.config.data)
        try {
          const { data: d, error: t } = await this.dao.fetchData(R.url);
          if (t)
            throw new Yf(t.message);
          this.config.data = d ?? [];
        } catch (d) {
          return console.error(d.message), this;
        }
    }
    if (this.config.columns = vs.setDefaultKeyValue(
      this.#e.getConfig()?.columnsDefaultKey,
      b
    ), this.config.columns = vs.mergeColumns(
      p,
      b
    ), !this.config.data)
      throw new Error("Error : no data provided");
    if (this.config.data = this.tranformer.exec(this.config.data), R?.row_action && R.row_action.actions.length) {
      const B = new $d(R.row_action);
      try {
        const u = await B.validateConfig().generateColDefConfig();
        this.config.columnDefs ? this.config.columnDefs = [...this.config.columnDefs, u] : this.config.columnDefs = Array(u);
      } catch (u) {
        console.error(u.message);
      }
    }
    return this.config.buttons || (this.config.buttons = this.#r.getDefaults()), this.#r.parse(this.config.buttons), window.lxConfig = this.config, this.instance = new ge(`${this._ref}`, this.config), this.refElement.dispatchEvent(this.initEvent(this.instance)), R && R.filters && (this.#n = new t1(this.config, this.instance).init(
      this.#n
    )), R && R.handleBootrapTabChange && this.handleBootrapTabChange(this.instance), this;
  }
  __filterDataWithKey() {
  }
  handleBootrapTabChange(p) {
    document.querySelectorAll('button[data-bs-toggle="tab"]').forEach((b) => {
      b.addEventListener("shown.bs.tab", () => {
        p.draw();
      });
    });
  }
}
export {
  a1 as default
};
