var Rd = Object.defineProperty;
var Tl = Object.getOwnPropertySymbols;
var Ld = Object.prototype.hasOwnProperty, Nd = Object.prototype.propertyIsEnumerable;
var zs = (n, v, g) => v in n ? Rd(n, v, { enumerable: !0, configurable: !0, writable: !0, value: g }) : n[v] = g, Yo = (n, v) => {
  for (var g in v || (v = {}))
    Ld.call(v, g) && zs(n, g, v[g]);
  if (Tl)
    for (var g of Tl(v))
      Nd.call(v, g) && zs(n, g, v[g]);
  return n;
};
var pr = (n, v, g) => (zs(n, typeof v != "symbol" ? v + "" : v, g), g), Ws = (n, v, g) => {
  if (!v.has(n))
    throw TypeError("Cannot " + g);
};
var dn = (n, v, g) => (Ws(n, v, "read from private field"), g ? g.call(n) : v.get(n)), Qn = (n, v, g) => {
  if (v.has(n))
    throw TypeError("Cannot add the same private member more than once");
  v instanceof WeakSet ? v.add(n) : v.set(n, g);
}, Rn = (n, v, g, w) => (Ws(n, v, "write to private field"), w ? w.call(n, g) : v.set(n, g), g);
var Ko = (n, v, g) => (Ws(n, v, "access private method"), g);
var _n = (n, v, g) => new Promise((w, I) => {
  var F = (t) => {
    try {
      c(g.next(t));
    } catch (s) {
      I(s);
    }
  }, l = (t) => {
    try {
      c(g.throw(t));
    } catch (s) {
      I(s);
    }
  }, c = (t) => t.done ? w(t.value) : Promise.resolve(t.value).then(F, l);
  c((g = g.apply(n, v)).next());
});
import Ln from "jquery";
/*! DataTables 2.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
var Zt = Ln, se = function(n, v) {
  if (se.factory(n, v))
    return se;
  if (this instanceof se)
    return Zt(n).DataTable(v);
  v = n;
  var g = this, w = v === void 0, I = this.length;
  return w && (v = {}), this.api = function() {
    return new Er(this);
  }, this.each(function() {
    var F = {}, l = I > 1 ? (
      // optimisation for single table case
      Nl(F, v, !0)
    ) : v, c = 0, t, s = this.getAttribute("id"), r = !1, a = se.defaults, o = Zt(this);
    if (this.nodeName.toLowerCase() != "table") {
      la(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
      return;
    }
    Zt(this).trigger("options.dt", l), Fl(a), ef(a.column), ja(a, a, !0), ja(a.column, a.column, !0), ja(a, Zt.extend(l, o.data()), !0);
    var f = se.settings;
    for (c = 0, t = f.length; c < t; c++) {
      var u = f[c];
      if (u.nTable == this || u.nTHead && u.nTHead.parentNode == this || u.nTFoot && u.nTFoot.parentNode == this) {
        var h = l.bRetrieve !== void 0 ? l.bRetrieve : a.bRetrieve, d = l.bDestroy !== void 0 ? l.bDestroy : a.bDestroy;
        if (w || h)
          return u.oInstance;
        if (d) {
          new se.Api(u).destroy();
          break;
        } else {
          la(u, 0, "Cannot reinitialise DataTable", 3);
          return;
        }
      }
      if (u.sTableId == this.id) {
        f.splice(c, 1);
        break;
      }
    }
    (s === null || s === "") && (s = "DataTables_Table_" + se.ext._unique++, this.id = s);
    var i = Zt.extend(!0, {}, se.models.oSettings, {
      sDestroyWidth: o[0].style.width,
      sInstance: s,
      sTableId: s,
      colgroup: Zt("<colgroup>").prependTo(this),
      fastData: function(A, E, D) {
        return ua(i, A, E, D);
      }
    });
    i.nTable = this, i.oInit = l, f.push(i), i.api = new Er(i), i.oInstance = g.length === 1 ? g : o.dataTable(), Fl(l), l.aLengthMenu && !l.iDisplayLength && (l.iDisplayLength = Array.isArray(l.aLengthMenu[0]) ? l.aLengthMenu[0][0] : Zt.isPlainObject(l.aLengthMenu[0]) ? l.aLengthMenu[0].value : l.aLengthMenu[0]), l = Nl(Zt.extend(!0, {}, a), l), Va(i.oFeatures, l, [
      "bPaginate",
      "bLengthChange",
      "bFilter",
      "bSort",
      "bSortMulti",
      "bInfo",
      "bProcessing",
      "bAutoWidth",
      "bSortClasses",
      "bServerSide",
      "bDeferRender"
    ]), Va(i, l, [
      "ajax",
      "fnFormatNumber",
      "sServerMethod",
      "aaSorting",
      "aaSortingFixed",
      "aLengthMenu",
      "sPaginationType",
      "iStateDuration",
      "bSortCellsTop",
      "iTabIndex",
      "sDom",
      "fnStateLoadCallback",
      "fnStateSaveCallback",
      "renderer",
      "searchDelay",
      "rowId",
      "caption",
      "layout",
      ["iCookieDuration", "iStateDuration"],
      // backwards compat
      ["oSearch", "oPreviousSearch"],
      ["aoSearchCols", "aoPreSearchCols"],
      ["iDisplayLength", "_iDisplayLength"]
    ]), Va(i.oScroll, l, [
      ["sScrollX", "sX"],
      ["sScrollXInner", "sXInner"],
      ["sScrollY", "sY"],
      ["bScrollCollapse", "bCollapse"]
    ]), Va(i.oLanguage, l, "fnInfoCallback"), sa(i, "aoDrawCallback", l.fnDrawCallback), sa(i, "aoStateSaveParams", l.fnStateSaveParams), sa(i, "aoStateLoadParams", l.fnStateLoadParams), sa(i, "aoStateLoaded", l.fnStateLoaded), sa(i, "aoRowCallback", l.fnRowCallback), sa(i, "aoRowCreatedCallback", l.fnCreatedRow), sa(i, "aoHeaderCallback", l.fnHeaderCallback), sa(i, "aoFooterCallback", l.fnFooterCallback), sa(i, "aoInitComplete", l.fnInitComplete), sa(i, "aoPreDrawCallback", l.fnPreDrawCallback), i.rowIdFn = Oi(l.rowId), Hd(i);
    var p = i.oClasses;
    Zt.extend(p, se.ext.classes, l.oClasses), o.addClass(p.table), i.oFeatures.bPaginate || (l.iDisplayStart = 0), i.iInitDisplayStart === void 0 && (i.iInitDisplayStart = l.iDisplayStart, i._iDisplayStart = l.iDisplayStart);
    var y = i.oLanguage;
    Zt.extend(!0, y, l.oLanguage), y.sUrl ? (Zt.ajax({
      dataType: "json",
      url: y.sUrl,
      success: function(A) {
        ja(a.oLanguage, A), Zt.extend(!0, y, A, i.oInit.oLanguage), Ur(i, null, "i18n", [i]), ts(i);
      },
      error: function() {
        la(i, 0, "i18n file loading error", 21), ts(i);
      }
    }), r = !0) : Ur(i, null, "i18n", [i]);
    var m = [], e = this.getElementsByTagName("thead"), x = uf(i, e[0]);
    if (l.aoColumns)
      m = l.aoColumns;
    else if (x.length)
      for (c = 0, t = x[0].length; c < t; c++)
        m.push(null);
    for (c = 0, t = m.length; c < t; c++)
      rf(i);
    Vd(i, l.aoColumnDefs, m, x, function(A, E) {
      $s(i, A, E);
    });
    var S = o.children("tbody").find("tr").eq(0);
    if (S.length) {
      var P = function(A, E) {
        return A.getAttribute("data-" + E) !== null ? E : null;
      };
      Zt(S[0]).children("th, td").each(function(A, E) {
        var D = i.aoColumns[A];
        if (D || la(i, 0, "Incorrect column count", 18), D.mData === A) {
          var b = P(E, "sort") || P(E, "order"), R = P(E, "filter") || P(E, "search");
          (b !== null || R !== null) && (D.mData = {
            _: A + ".display",
            sort: b !== null ? A + ".@data-" + b : void 0,
            type: b !== null ? A + ".@data-" + b : void 0,
            filter: R !== null ? A + ".@data-" + R : void 0
          }, D._isArrayHost = !0, $s(i, A));
        }
      });
    }
    var O = i.oFeatures, T = function() {
      if (l.aaSorting === void 0) {
        var A = i.aaSorting;
        for (c = 0, t = A.length; c < t; c++)
          A[c][1] = i.aoColumns[c].asSorting[0];
      }
      t0(i), sa(i, "aoDrawCallback", function() {
        (i.bSorted || ra(i) === "ssp" || O.bDeferRender) && t0(i);
      });
      var E = o.children("caption");
      i.caption && (E.length === 0 && (E = Zt("<caption/>").appendTo(o)), E.html(i.caption)), E.length && (E[0]._captionSide = E.css("caption-side"), i.captionNode = E[0]), e.length === 0 && (e = Zt("<thead/>").appendTo(o)), i.nTHead = e[0], Zt("tr", e).addClass(p.thead.row);
      var D = o.children("tbody");
      D.length === 0 && (D = Zt("<tbody/>").insertAfter(e)), i.nTBody = D[0];
      var b = o.children("tfoot");
      if (b.length === 0 && (b = Zt("<tfoot/>").appendTo(o)), i.nTFoot = b[0], Zt("tr", b).addClass(p.tfoot.row), l.aaData)
        for (c = 0; c < l.aaData.length; c++)
          ai(i, l.aaData[c]);
      else
        ra(i) == "dom" && d0(i, Zt(i.nTBody).children("tr"));
      i.aiDisplay = i.aiDisplayMaster.slice(), i.bInitialised = !0, r === !1 && ts(i);
    };
    sa(i, "aoDrawCallback", ps), l.bStateSave ? (O.bStateSave = !0, f1(i, l, T)) : T();
  }), g = null, this;
};
se.ext = Yr = {
  /**
   * Buttons. For use with the Buttons extension for DataTables. This is
   * defined here so other extensions can define buttons regardless of load
   * order. It is _not_ used by DataTables core.
   *
   *  @type object
   *  @default {}
   */
  buttons: {},
  /**
   * Element class names
   *
   *  @type object
   *  @default {}
   */
  classes: {},
  /**
   * DataTables build type (expanded by the download builder)
   *
   *  @type string
   */
  builder: "-source-",
  /**
   * Error reporting.
   * 
   * How should DataTables report an error. Can take the value 'alert',
   * 'throw', 'none' or a function.
   *
   *  @type string|function
   *  @default alert
   */
  errMode: "alert",
  /**
   * Legacy so v1 plug-ins don't throw js errors on load
   */
  feature: [],
  /**
   * Feature plug-ins.
   * 
   * This is an object of callbacks which provide the features for DataTables
   * to be initialised via the `layout` option.
   */
  features: {},
  /**
   * Row searching.
   * 
   * This method of searching is complimentary to the default type based
   * searching, and a lot more comprehensive as it allows you complete control
   * over the searching logic. Each element in this array is a function
   * (parameters described below) that is called for every row in the table,
   * and your logic decides if it should be included in the searching data set
   * or not.
   *
   * Searching functions have the following input parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{array|object}` Data for the row to be processed (same as the
   *    original format that was passed in as the data source, or an array
   *    from a DOM data source
   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
   *    can be useful to retrieve the `TR` element if you need DOM interaction.
   *
   * And the following return is expected:
   *
   * * {boolean} Include the row in the searched result set (true) or not
   *   (false)
   *
   * Note that as with the main search ability in DataTables, technically this
   * is "filtering", since it is subtractive. However, for consistency in
   * naming we call it searching here.
   *
   *  @type array
   *  @default []
   *
   *  @example
   *    // The following example shows custom search being applied to the
   *    // fourth column (i.e. the data[3] index) based on two input values
   *    // from the end-user, matching the data in a certain range.
   *    $.fn.dataTable.ext.search.push(
   *      function( settings, data, dataIndex ) {
   *        var min = document.getElementById('min').value * 1;
   *        var max = document.getElementById('max').value * 1;
   *        var version = data[3] == "-" ? 0 : data[3]*1;
   *
   *        if ( min == "" && max == "" ) {
   *          return true;
   *        }
   *        else if ( min == "" && version < max ) {
   *          return true;
   *        }
   *        else if ( min < version && "" == max ) {
   *          return true;
   *        }
   *        else if ( min < version && version < max ) {
   *          return true;
   *        }
   *        return false;
   *      }
   *    );
   */
  search: [],
  /**
   * Selector extensions
   *
   * The `selector` option can be used to extend the options available for the
   * selector modifier options (`selector-modifier` object data type) that
   * each of the three built in selector types offer (row, column and cell +
   * their plural counterparts). For example the Select extension uses this
   * mechanism to provide an option to select only rows, columns and cells
   * that have been marked as selected by the end user (`{selected: true}`),
   * which can be used in conjunction with the existing built in selector
   * options.
   *
   * Each property is an array to which functions can be pushed. The functions
   * take three attributes:
   *
   * * Settings object for the host table
   * * Options object (`selector-modifier` object type)
   * * Array of selected item indexes
   *
   * The return is an array of the resulting item indexes after the custom
   * selector has been applied.
   *
   *  @type object
   */
  selector: {
    cell: [],
    column: [],
    row: []
  },
  /**
   * Legacy configuration options. Enable and disable legacy options that
   * are available in DataTables.
   *
   *  @type object
   */
  legacy: {
    /**
     * Enable / disable DataTables 1.9 compatible server-side processing
     * requests
     *
     *  @type boolean
     *  @default null
     */
    ajax: null
  },
  /**
   * Pagination plug-in methods.
   * 
   * Each entry in this object is a function and defines which buttons should
   * be shown by the pagination rendering method that is used for the table:
   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
   * buttons are displayed in the document, while the functions here tell it
   * what buttons to display. This is done by returning an array of button
   * descriptions (what each button will do).
   *
   * Pagination types (the four built in options and any additional plug-in
   * options defined here) can be used through the `paginationType`
   * initialisation parameter.
   *
   * The functions defined take two parameters:
   *
   * 1. `{int} page` The current page index
   * 2. `{int} pages` The number of pages in the table
   *
   * Each function is expected to return an array where each element of the
   * array can be one of:
   *
   * * `first` - Jump to first page when activated
   * * `last` - Jump to last page when activated
   * * `previous` - Show previous page when activated
   * * `next` - Show next page when activated
   * * `{int}` - Show page of the index given
   * * `{array}` - A nested array containing the above elements to add a
   *   containing 'DIV' element (might be useful for styling).
   *
   * Note that DataTables v1.9- used this object slightly differently whereby
   * an object with two functions would be defined for each plug-in. That
   * ability is still supported by DataTables 1.10+ to provide backwards
   * compatibility, but this option of use is now decremented and no longer
   * documented in DataTables 1.10+.
   *
   *  @type object
   *  @default {}
   *
   *  @example
   *    // Show previous, next and current page buttons only
   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
   *      return [ 'previous', page, 'next' ];
   *    };
   */
  pager: {},
  renderer: {
    pageButton: {},
    header: {}
  },
  /**
   * Ordering plug-ins - custom data source
   * 
   * The extension options for ordering of data available here is complimentary
   * to the default type based ordering that DataTables typically uses. It
   * allows much greater control over the the data that is being used to
   * order a column, but is necessarily therefore more complex.
   * 
   * This type of ordering is useful if you want to do ordering based on data
   * live from the DOM (for example the contents of an 'input' element) rather
   * than just the static string that DataTables knows of.
   * 
   * The way these plug-ins work is that you create an array of the values you
   * wish to be ordering for the column in question and then return that
   * array. The data in the array much be in the index order of the rows in
   * the table (not the currently ordering order!). Which order data gathering
   * function is run here depends on the `dt-init columns.orderDataType`
   * parameter that is used for the column (if any).
   *
   * The functions defined take two parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{int}` Target column index
   *
   * Each function is expected to return an array:
   *
   * * `{array}` Data for the column to be ordering upon
   *
   *  @type array
   *
   *  @example
   *    // Ordering using `input` node values
   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
   *    {
   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
   *        return $('input', td).val();
   *      } );
   *    }
   */
  order: {},
  /**
   * Type based plug-ins.
   *
   * Each column in DataTables has a type assigned to it, either by automatic
   * detection or by direct assignment using the `type` option for the column.
   * The type of a column will effect how it is ordering and search (plug-ins
   * can also make use of the column type if required).
   *
   * @namespace
   */
  type: {
    /**
     * Automatic column class assignment
     */
    className: {},
    /**
     * Type detection functions.
     *
     * The functions defined in this object are used to automatically detect
     * a column's type, making initialisation of DataTables super easy, even
     * when complex data is in the table.
     *
     * The functions defined take two parameters:
     *
        *  1. `{*}` Data from the column cell to be analysed
        *  2. `{settings}` DataTables settings object. This can be used to
        *     perform context specific type detection - for example detection
        *     based on language settings such as using a comma for a decimal
        *     place. Generally speaking the options from the settings will not
        *     be required
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Data type detected, or null if unknown (and thus
     *   pass it on to the other type detection functions.
     *
     *  @type array
     *
     *  @example
     *    // Currency type detection plug-in:
     *    $.fn.dataTable.ext.type.detect.push(
     *      function ( data, settings ) {
     *        // Check the numeric part
     *        if ( ! data.substring(1).match(/[0-9]/) ) {
     *          return null;
     *        }
     *
     *        // Check prefixed by currency
     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
     *          return 'currency';
     *        }
     *        return null;
     *      }
     *    );
     */
    detect: [],
    /**
     * Automatic renderer assignment
     */
    render: {},
    /**
     * Type based search formatting.
     *
     * The type based searching functions can be used to pre-format the
     * data to be search on. For example, it can be used to strip HTML
     * tags or to de-format telephone numbers for numeric only searching.
     *
     * Note that is a search is not defined for a column of a given type,
     * no search formatting will be performed.
     * 
     * Pre-processing of searching data plug-ins - When you assign the sType
     * for a column (or have it automatically detected for you by DataTables
     * or a type detection plug-in), you will typically be using this for
     * custom sorting, but it can also be used to provide custom searching
     * by allowing you to pre-processing the data and returning the data in
     * the format that should be searched upon. This is done by adding
     * functions this object with a parameter name which matches the sType
     * for that target column. This is the corollary of <i>afnSortData</i>
     * for searching data.
     *
     * The functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for searching
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Formatted string that will be used for the searching.
     *
     *  @type object
     *  @default {}
     *
     *  @example
     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
     *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
     *    }
     */
    search: {},
    /**
     * Type based ordering.
     *
     * The column type tells DataTables what ordering to apply to the table
     * when a column is sorted upon. The order for each type that is defined,
     * is defined by the functions available in this object.
     *
     * Each ordering option can be described by three properties added to
     * this object:
     *
     * * `{type}-pre` - Pre-formatting function
     * * `{type}-asc` - Ascending order function
     * * `{type}-desc` - Descending order function
     *
     * All three can be used together, only `{type}-pre` or only
     * `{type}-asc` and `{type}-desc` together. It is generally recommended
     * that only `{type}-pre` is used, as this provides the optimal
     * implementation in terms of speed, although the others are provided
     * for compatibility with existing Javascript sort functions.
     *
     * `{type}-pre`: Functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for ordering
     *
     * And return:
     *
     * * `{*}` Data to be sorted upon
     *
     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
     * functions, taking two parameters:
     *
        *  1. `{*}` Data to compare to the second parameter
        *  2. `{*}` Data to compare to the first parameter
     *
     * And returning:
     *
     * * `{*}` Ordering match: <0 if first parameter should be sorted lower
     *   than the second parameter, ===0 if the two parameters are equal and
     *   >0 if the first parameter should be sorted height than the second
     *   parameter.
     * 
     *  @type object
     *  @default {}
     *
     *  @example
     *    // Numeric ordering of formatted numbers with a pre-formatter
     *    $.extend( $.fn.dataTable.ext.type.order, {
     *      "string-pre": function(x) {
     *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
     *        return parseFloat( a );
     *      }
     *    } );
     *
     *  @example
     *    // Case-sensitive string ordering, with no pre-formatting method
     *    $.extend( $.fn.dataTable.ext.order, {
     *      "string-case-asc": function(x,y) {
     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
     *      },
     *      "string-case-desc": function(x,y) {
     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
     *      }
     *    } );
     */
    order: {}
  },
  /**
   * Unique DataTables instance counter
   *
   * @type int
   * @private
   */
  _unique: 0,
  //
  // Depreciated
  // The following properties are retained for backwards compatibility only.
  // The should not be used in new projects and will be removed in a future
  // version
  //
  /**
   * Version check function.
   *  @type function
   *  @depreciated Since 1.10
   */
  fnVersionCheck: se.fnVersionCheck,
  /**
   * Index for what 'this' index API functions should use
   *  @type int
   *  @deprecated Since v1.10
   */
  iApiIndex: 0,
  /**
   * Software version
   *  @type string
   *  @deprecated Since v1.10
   */
  sVersion: se.version
};
Zt.extend(Yr, {
  afnFiltering: Yr.search,
  aTypes: Yr.type.detect,
  ofnSearch: Yr.type.search,
  oSort: Yr.type.order,
  afnSortData: Yr.order,
  aoFeatures: Yr.feature,
  oStdClasses: Yr.classes,
  oPagination: Yr.pager
});
Zt.extend(se.ext.classes, {
  container: "dt-container",
  empty: {
    row: "dt-empty"
  },
  info: {
    container: "dt-info"
  },
  length: {
    container: "dt-length",
    select: "dt-input"
  },
  order: {
    canAsc: "dt-orderable-asc",
    canDesc: "dt-orderable-desc",
    isAsc: "dt-ordering-asc",
    isDesc: "dt-ordering-desc",
    none: "dt-orderable-none",
    position: "sorting_"
  },
  processing: {
    container: "dt-processing"
  },
  scrolling: {
    body: "dt-scroll-body",
    container: "dt-scroll",
    footer: {
      self: "dt-scroll-foot",
      inner: "dt-scroll-footInner"
    },
    header: {
      self: "dt-scroll-head",
      inner: "dt-scroll-headInner"
    }
  },
  search: {
    container: "dt-search",
    input: "dt-input"
  },
  table: "dataTable",
  tbody: {
    cell: "",
    row: ""
  },
  thead: {
    cell: "",
    row: ""
  },
  tfoot: {
    cell: "",
    row: ""
  },
  paging: {
    active: "current",
    button: "dt-paging-button",
    container: "dt-paging",
    disabled: "disabled"
  }
});
var Yr, Er, Je, Kr, Hs = {}, Md = /[\r\n\u2028]/g, o0 = /<.*?>/g, kd = /^\d{2,4}[./-]\d{1,2}[./-]\d{1,2}([T ]{1}\d{1,2}[:.]\d{2}([.:]\d{2})?)?$/, Ud = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")", "g"), s0 = /['\u00A0,$Â£â¬Â¥%\u2009\u202F\u20BD\u20a9\u20BArfkÉÎ]/gi, La = function(n) {
  return !n || n === !0 || n === "-";
}, _l = function(n) {
  var v = parseInt(n, 10);
  return !isNaN(v) && isFinite(n) ? v : null;
}, $l = function(n, v) {
  return Hs[v] || (Hs[v] = new RegExp(qs(v), "g")), typeof n == "string" && v !== "." ? n.replace(/\./g, "").replace(Hs[v], ".") : n;
}, l0 = function(n, v, g) {
  var w = typeof n, I = w === "string";
  return w === "number" || w === "bigint" || La(n) ? !0 : (v && I && (n = $l(n, v)), g && I && (n = n.replace(s0, "")), !isNaN(parseFloat(n)) && isFinite(n));
}, zd = function(n) {
  return La(n) || typeof n == "string";
}, ql = function(n, v, g) {
  if (La(n))
    return !0;
  if (typeof n == "string" && n.match(/<(input|select)/i))
    return null;
  var w = zd(n);
  return w && l0(Di(n), v, g) ? !0 : null;
}, ea = function(n, v, g) {
  var w = [], I = 0, F = n.length;
  if (g !== void 0)
    for (; I < F; I++)
      n[I] && n[I][v] && w.push(n[I][v][g]);
  else
    for (; I < F; I++)
      n[I] && w.push(n[I][v]);
  return w;
}, po = function(n, v, g, w) {
  var I = [], F = 0, l = v.length;
  if (w !== void 0)
    for (; F < l; F++)
      n[v[F]][g] && I.push(n[v[F]][g][w]);
  else
    for (; F < l; F++)
      n[v[F]] && I.push(n[v[F]][g]);
  return I;
}, Ha = function(n, v) {
  var g = [], w;
  v === void 0 ? (v = 0, w = n) : (w = v, v = n);
  for (var I = v; I < w; I++)
    g.push(I);
  return g;
}, tf = function(n) {
  for (var v = [], g = 0, w = n.length; g < w; g++)
    n[g] && v.push(n[g]);
  return v;
}, Di = function(n) {
  return n.replace(o0, "").replace(/<script/i, "");
}, bi = function(n) {
  return Array.isArray(n) && (n = n.join(",")), typeof n == "string" ? n.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;") : n;
}, _s = function(n, v) {
  if (typeof n != "string")
    return n;
  var g = n.normalize("NFD");
  return g.length !== n.length ? (v === !0 ? n + " " : "") + g.replace(/[\u0300-\u036f]/g, "") : g;
}, Wd = function(n) {
  if (n.length < 2)
    return !0;
  for (var v = n.slice().sort(), g = v[0], w = 1, I = v.length; w < I; w++) {
    if (v[w] === g)
      return !1;
    g = v[w];
  }
  return !0;
}, ni = function(n) {
  if (Array.from && Set)
    return Array.from(new Set(n));
  if (Wd(n))
    return n.slice();
  var v = [], g, w, I = n.length, F, l = 0;
  t:
    for (w = 0; w < I; w++) {
      for (g = n[w], F = 0; F < l; F++)
        if (v[F] === g)
          continue t;
      v.push(g), l++;
    }
  return v;
}, f0 = function(n, v) {
  if (Array.isArray(v))
    for (var g = 0; g < v.length; g++)
      f0(n, v[g]);
  else
    n.push(v);
  return n;
};
function wi(n, v) {
  v && v.split(" ").forEach(function(g) {
    g && n.classList.add(g);
  });
}
se.util = {
  /**
   * Return a string with diacritic characters decomposed
   * @param {*} mixed Function or string to normalize
   * @param {*} both Return original string and the normalized string
   * @returns String or undefined
   */
  diacritics: function(n, v) {
    var g = typeof n;
    if (g !== "function")
      return _s(n, v);
    _s = n;
  },
  /**
   * Debounce a function
   *
   * @param {function} fn Function to be called
   * @param {integer} freq Call frequency in mS
   * @return {function} Wrapped function
   */
  debounce: function(n, v) {
    var g;
    return function() {
      var w = this, I = arguments;
      clearTimeout(g), g = setTimeout(function() {
        n.apply(w, I);
      }, v || 250);
    };
  },
  /**
   * Throttle the calls to a function. Arguments and context are maintained
   * for the throttled function.
   *
   * @param {function} fn Function to be called
   * @param {integer} freq Call frequency in mS
   * @return {function} Wrapped function
   */
  throttle: function(n, v) {
    var g = v !== void 0 ? v : 200, w, I;
    return function() {
      var F = this, l = +/* @__PURE__ */ new Date(), c = arguments;
      w && l < w + g ? (clearTimeout(I), I = setTimeout(function() {
        w = void 0, n.apply(F, c);
      }, g)) : (w = l, n.apply(F, c));
    };
  },
  /**
   * Escape a string such that it can be used in a regular expression
   *
   *  @param {string} val string to escape
   *  @returns {string} escaped string
   */
  escapeRegex: function(n) {
    return n.replace(Ud, "\\$1");
  },
  /**
   * Create a function that will write to a nested object or array
   * @param {*} source JSON notation string
   * @returns Write function
   */
  set: function(n) {
    if (Zt.isPlainObject(n))
      return se.util.set(n._);
    if (n === null)
      return function() {
      };
    if (typeof n == "function")
      return function(g, w, I) {
        n(g, "set", w, I);
      };
    if (typeof n == "string" && (n.indexOf(".") !== -1 || n.indexOf("[") !== -1 || n.indexOf("(") !== -1)) {
      var v = function(g, w, I) {
        for (var F = Dl(I), l, c = F[F.length - 1], t, s, r, a, o = 0, f = F.length - 1; o < f; o++) {
          if (F[o] === "__proto__" || F[o] === "constructor")
            throw new Error("Cannot set prototype values");
          if (t = F[o].match(ao), s = F[o].match(vi), t) {
            if (F[o] = F[o].replace(ao, ""), g[F[o]] = [], l = F.slice(), l.splice(0, o + 1), a = l.join("."), Array.isArray(w))
              for (var u = 0, h = w.length; u < h; u++)
                r = {}, v(r, w[u], a), g[F[o]].push(r);
            else
              g[F[o]] = w;
            return;
          } else
            s && (F[o] = F[o].replace(vi, ""), g = g[F[o]](w));
          (g[F[o]] === null || g[F[o]] === void 0) && (g[F[o]] = {}), g = g[F[o]];
        }
        c.match(vi) ? g = g[c.replace(vi, "")](w) : g[c.replace(ao, "")] = w;
      };
      return function(g, w) {
        return v(g, w, n);
      };
    } else
      return function(g, w) {
        g[n] = w;
      };
  },
  /**
   * Create a function that will read nested objects from arrays, based on JSON notation
   * @param {*} source JSON notation string
   * @returns Value read
   */
  get: function(n) {
    if (Zt.isPlainObject(n)) {
      var v = {};
      return Zt.each(n, function(w, I) {
        I && (v[w] = se.util.get(I));
      }), function(w, I, F, l) {
        var c = v[I] || v._;
        return c !== void 0 ? c(w, I, F, l) : w;
      };
    } else {
      if (n === null)
        return function(w) {
          return w;
        };
      if (typeof n == "function")
        return function(w, I, F, l) {
          return n(w, I, F, l);
        };
      if (typeof n == "string" && (n.indexOf(".") !== -1 || n.indexOf("[") !== -1 || n.indexOf("(") !== -1)) {
        var g = function(w, I, F) {
          var l, c, t, s;
          if (F !== "")
            for (var r = Dl(F), a = 0, o = r.length; a < o; a++) {
              if (l = r[a].match(ao), c = r[a].match(vi), l) {
                if (r[a] = r[a].replace(ao, ""), r[a] !== "" && (w = w[r[a]]), t = [], r.splice(0, a + 1), s = r.join("."), Array.isArray(w))
                  for (var f = 0, u = w.length; f < u; f++)
                    t.push(g(w[f], I, s));
                var h = l[0].substring(1, l[0].length - 1);
                w = h === "" ? t : t.join(h);
                break;
              } else if (c) {
                r[a] = r[a].replace(vi, ""), w = w[r[a]]();
                continue;
              }
              if (w === null || w[r[a]] === null)
                return null;
              if (w === void 0 || w[r[a]] === void 0)
                return;
              w = w[r[a]];
            }
          return w;
        };
        return function(w, I) {
          return g(w, I, n);
        };
      } else
        return function(w) {
          return w[n];
        };
    }
  },
  stripHtml: function(n) {
    var v = typeof n;
    if (v === "function") {
      Di = n;
      return;
    } else if (v === "string")
      return Di(n);
    return n;
  },
  escapeHtml: function(n) {
    var v = typeof n;
    if (v === "function") {
      bi = n;
      return;
    } else if (v === "string" || Array.isArray(n))
      return bi(n);
    return n;
  },
  unique: ni
};
function fs(n) {
  var v = "a aa ai ao as b fn i m o s ", g, w, I = {};
  Zt.each(n, function(F) {
    g = F.match(/^([^A-Z]+?)([A-Z])/), g && v.indexOf(g[1] + " ") !== -1 && (w = F.replace(g[0], g[2].toLowerCase()), I[w] = F, g[1] === "o" && fs(n[F]));
  }), n._hungarianMap = I;
}
function ja(n, v, g) {
  n._hungarianMap || fs(n);
  var w;
  Zt.each(v, function(I) {
    w = n._hungarianMap[I], w !== void 0 && (g || v[w] === void 0) && (w.charAt(0) === "o" ? (v[w] || (v[w] = {}), Zt.extend(!0, v[w], v[I]), ja(n[w], v[w], g)) : v[w] = v[I]);
  });
}
var Yn = function(n, v, g) {
  n[v] !== void 0 && (n[g] = n[v]);
};
function Fl(n) {
  Yn(n, "ordering", "bSort"), Yn(n, "orderMulti", "bSortMulti"), Yn(n, "orderClasses", "bSortClasses"), Yn(n, "orderCellsTop", "bSortCellsTop"), Yn(n, "order", "aaSorting"), Yn(n, "orderFixed", "aaSortingFixed"), Yn(n, "paging", "bPaginate"), Yn(n, "pagingType", "sPaginationType"), Yn(n, "pageLength", "iDisplayLength"), Yn(n, "searching", "bFilter"), typeof n.sScrollX == "boolean" && (n.sScrollX = n.sScrollX ? "100%" : ""), typeof n.scrollX == "boolean" && (n.scrollX = n.scrollX ? "100%" : "");
  var v = n.aoSearchCols;
  if (v)
    for (var g = 0, w = v.length; g < w; g++)
      v[g] && ja(se.models.oSearch, v[g]);
  n.serverSide && !n.searchDelay && (n.searchDelay = 400);
}
function ef(n) {
  Yn(n, "orderable", "bSortable"), Yn(n, "orderData", "aDataSort"), Yn(n, "orderSequence", "asSorting"), Yn(n, "orderDataType", "sortDataType");
  var v = n.aDataSort;
  typeof v == "number" && !Array.isArray(v) && (n.aDataSort = [v]);
}
function Hd(n) {
  if (!se.__browser) {
    var v = {};
    se.__browser = v;
    var g = Zt("<div/>").css({
      position: "fixed",
      top: 0,
      left: -1 * window.pageXOffset,
      // allow for scrolling
      height: 1,
      width: 1,
      overflow: "hidden"
    }).append(
      Zt("<div/>").css({
        position: "absolute",
        top: 1,
        left: 1,
        width: 100,
        overflow: "scroll"
      }).append(
        Zt("<div/>").css({
          width: "100%",
          height: 10
        })
      )
    ).appendTo("body"), w = g.children(), I = w.children();
    v.barWidth = w[0].offsetWidth - w[0].clientWidth, v.bScrollbarLeft = Math.round(I.offset().left) !== 1, g.remove();
  }
  Zt.extend(n.oBrowser, se.__browser), n.oScroll.iBarWidth = se.__browser.barWidth;
}
function rf(n) {
  var v = se.defaults.column, g = n.aoColumns.length, w = Zt.extend({}, se.models.oColumn, v, {
    aDataSort: v.aDataSort ? v.aDataSort : [g],
    mData: v.mData ? v.mData : g,
    idx: g,
    searchFixed: {},
    colEl: Zt("<col>")
  });
  n.aoColumns.push(w);
  var I = n.aoPreSearchCols;
  I[g] = Zt.extend({}, se.models.oSearch, I[g]);
}
function $s(n, v, g) {
  var w = n.aoColumns[v];
  if (g != null) {
    ef(g), ja(se.defaults.column, g, !0), g.mDataProp !== void 0 && !g.mData && (g.mData = g.mDataProp), g.sType && (w._sManualType = g.sType), g.className && !g.sClass && (g.sClass = g.className);
    var I = w.sClass;
    Zt.extend(w, g), Va(w, g, "sWidth", "sWidthOrig"), I !== w.sClass && (w.sClass = I + " " + w.sClass), g.iDataSort !== void 0 && (w.aDataSort = [g.iDataSort]), Va(w, g, "aDataSort");
  }
  var F = w.mData, l = Oi(F);
  if (w.mRender && Array.isArray(w.mRender)) {
    var c = w.mRender.slice(), t = c.shift();
    w.mRender = se.render[t].apply(window, c);
  }
  w._render = w.mRender ? Oi(w.mRender) : null;
  var s = function(r) {
    return typeof r == "string" && r.indexOf("@") !== -1;
  };
  w._bAttrSrc = Zt.isPlainObject(F) && (s(F.sort) || s(F.type) || s(F.filter)), w._setter = null, w.fnGetData = function(r, a, o) {
    var f = l(r, a, void 0, o);
    return w._render && a ? w._render(f, a, r, o) : f;
  }, w.fnSetData = function(r, a, o) {
    return ti(F)(r, a, o);
  }, typeof F != "number" && !w._isArrayHost && (n._rowReadObject = !0), n.oFeatures.bSort || (w.bSortable = !1);
}
function us(n) {
  n1(n), jd(n);
  var v = n.oScroll;
  (v.sY !== "" || v.sX !== "") && df(n), Ur(n, null, "column-sizing", [n]);
}
function jd(n) {
  for (var v = n.aoColumns, g = 0; g < v.length; g++) {
    var w = af(n, [g], !1, !1);
    v[g].colEl.css("width", w);
  }
}
function nf(n, v) {
  var g = u0(n, "bVisible");
  return typeof g[v] == "number" ? g[v] : null;
}
function go(n, v) {
  var g = u0(n, "bVisible"), w = g.indexOf(v);
  return w !== -1 ? w : null;
}
function cs(n) {
  var v = n.aoHeader, g = n.aoColumns, w = 0;
  if (v.length)
    for (var I = 0, F = v[0].length; I < F; I++)
      g[I].bVisible && Zt(v[0][I].cell).css("display") !== "none" && w++;
  return w;
}
function u0(n, v) {
  var g = [];
  return n.aoColumns.map(function(w, I) {
    w[v] && g.push(I);
  }), g;
}
function c0(n) {
  var v = n.aoColumns, g = n.aoData, w = se.ext.type.detect, I, F, l, c, t, s, r, a, o;
  for (I = 0, F = v.length; I < F; I++) {
    if (r = v[I], o = [], !r.sType && r._sManualType)
      r.sType = r._sManualType;
    else if (!r.sType) {
      for (l = 0, c = w.length; l < c; l++) {
        for (t = 0, s = g.length; t < s && !(g[t] && (o[t] === void 0 && (o[t] = ua(n, t, I, "type")), a = w[l](o[t], n), !a && l !== w.length - 2 || a === "html" && !La(o[t]))); t++)
          ;
        if (a) {
          r.sType = a;
          break;
        }
      }
      r.sType || (r.sType = "string");
    }
    var f = Yr.type.className[r.sType];
    f && (Il(n.aoHeader, I, f), Il(n.aoFooter, I, f));
    var u = Yr.type.render[r.sType];
    u && !r._render && (r._render = se.util.get(u), Gd(n, I));
  }
}
function Gd(n, v) {
  for (var g = n.aoData, w = 0; w < g.length; w++)
    if (g[w].nTr) {
      var I = ua(n, w, v, "display");
      g[w].displayData[v] = I, rs(g[w].anCells[v], I);
    }
}
function Il(n, v, g) {
  n.forEach(function(w) {
    w[v].unique && wi(w[v].cell, g);
  });
}
function Vd(n, v, g, w, I) {
  var F, l, c, t, s, r, a, o = n.aoColumns;
  if (g)
    for (F = 0, l = g.length; F < l; F++)
      g[F] && g[F].name && (o[F].sName = g[F].name);
  if (v)
    for (F = v.length - 1; F >= 0; F--) {
      a = v[F];
      var f = a.target !== void 0 ? a.target : a.targets !== void 0 ? a.targets : a.aTargets;
      for (Array.isArray(f) || (f = [f]), c = 0, t = f.length; c < t; c++) {
        var u = f[c];
        if (typeof u == "number" && u >= 0) {
          for (; o.length <= u; )
            rf(n);
          I(u, a);
        } else if (typeof u == "number" && u < 0)
          I(o.length + u, a);
        else if (typeof u == "string")
          for (s = 0, r = o.length; s < r; s++)
            u.indexOf(":name") !== -1 ? o[s].sName === u.replace(":name", "") && I(s, a) : w.forEach(function(h) {
              var d = Zt(h[s].cell);
              u.match(/^[a-z][\w-]*$/i) && (u = "." + u), (u === "_all" || d.is(u)) && I(s, a);
            });
      }
    }
  if (g)
    for (F = 0, l = g.length; F < l; F++)
      I(F, g[F]);
}
function af(n, v, g, w) {
  Array.isArray(v) || (v = h0(v));
  for (var I = 0, F, l = n.aoColumns, c = 0, t = v.length; c < t; c++) {
    var s = l[v[c]], r = g ? s.sWidthOrig : s.sWidth;
    if (!(!w && s.bVisible === !1)) {
      if (r == null)
        return null;
      if (typeof r == "number")
        F = "px", I += r;
      else {
        var a = r.match(/([\d\.]+)([^\d]*)/);
        a && (I += a[1] * 1, F = a.length === 3 ? a[2] : "px");
      }
    }
  }
  return I + F;
}
function h0(n) {
  var v = Zt(n).closest("[data-dt-column]").attr("data-dt-column");
  return v ? v.split(",").map(function(g) {
    return g * 1;
  }) : [];
}
function ai(n, v, g, w) {
  var I = n.aoData.length, F = Zt.extend(!0, {}, se.models.oRow, {
    src: g ? "dom" : "data",
    idx: I
  });
  F._aData = v, n.aoData.push(F);
  for (var l = n.aoColumns, c = 0, t = l.length; c < t; c++)
    l[c].sType = null;
  n.aiDisplayMaster.push(I);
  var s = n.rowIdFn(v);
  return s !== void 0 && (n.aIds[s] = F), (g || !n.oFeatures.bDeferRender) && sf(n, I, g, w), I;
}
function d0(n, v) {
  var g;
  return v instanceof Zt || (v = Zt(v)), v.map(function(w, I) {
    return g = of(n, I), ai(n, g.data, I, g.cells);
  });
}
function ua(n, v, g, w) {
  w === "search" ? w = "filter" : w === "order" && (w = "sort");
  var I = n.iDraw, F = n.aoColumns[g], l = n.aoData[v]._aData, c = F.sDefaultContent, t = F.fnGetData(l, w, {
    settings: n,
    row: v,
    col: g
  });
  if (w !== "display" && t && typeof t == "object" && t.nodeName && (t = t.innerHTML), t === void 0)
    return n.iDrawError != I && c === null && (la(n, 0, "Requested unknown parameter " + (typeof F.mData == "function" ? "{function}" : "'" + F.mData + "'") + " for row " + v + ", column " + g, 4), n.iDrawError = I), c;
  if ((t === l || t === null) && c !== null && w !== void 0)
    t = c;
  else if (typeof t == "function")
    return t.call(l);
  if (t === null && w === "display")
    return "";
  if (w === "filter") {
    var s = se.ext.type.search;
    s[F.sType] && (t = s[F.sType](t));
  }
  return t;
}
function Xd(n, v, g, w) {
  var I = n.aoColumns[g], F = n.aoData[v]._aData;
  I.fnSetData(F, w, {
    settings: n,
    row: v,
    col: g
  });
}
function rs(n, v) {
  v && typeof v == "object" && v.nodeName ? Zt(n).empty().append(v) : n.innerHTML = v;
}
var ao = /\[.*?\]$/, vi = /\(\)$/;
function Dl(n) {
  var v = n.match(/(\\.|[^.])+/g) || [""];
  return v.map(function(g) {
    return g.replace(/\\\./g, ".");
  });
}
var Oi = se.util.get, ti = se.util.set;
function Ol(n) {
  return ea(n.aoData, "_aData");
}
function v0(n) {
  n.aoData.length = 0, n.aiDisplayMaster.length = 0, n.aiDisplay.length = 0, n.aIds = {};
}
function hs(n, v, g, w) {
  var I = n.aoData[v], F, l;
  if (I._aSortData = null, I._aFilterData = null, I.displayData = null, g === "dom" || (!g || g === "auto") && I.src === "dom")
    I._aData = of(
      n,
      I,
      w,
      w === void 0 ? void 0 : I._aData
    ).data;
  else {
    var c = I.anCells, t = p0(n, v);
    if (c)
      if (w !== void 0)
        rs(c[w], t[w]);
      else
        for (F = 0, l = c.length; F < l; F++)
          rs(c[F], t[F]);
  }
  var s = n.aoColumns;
  if (w !== void 0)
    s[w].sType = null, s[w].maxLenString = null;
  else {
    for (F = 0, l = s.length; F < l; F++)
      s[F].sType = null, s[F].maxLenString = null;
    lf(n, I);
  }
}
function of(n, v, g, w) {
  var I = [], F = v.firstChild, l, c, t = 0, s, r = n.aoColumns, a = n._rowReadObject;
  w = w !== void 0 ? w : a ? {} : [];
  var o = function(p, y) {
    if (typeof p == "string") {
      var m = p.indexOf("@");
      if (m !== -1) {
        var e = p.substring(m + 1), x = ti(p);
        x(w, y.getAttribute(e));
      }
    }
  }, f = function(p) {
    if (g === void 0 || g === t)
      if (c = r[t], s = p.innerHTML.trim(), c && c._bAttrSrc) {
        var y = ti(c.mData._);
        y(w, s), o(c.mData.sort, p), o(c.mData.type, p), o(c.mData.filter, p);
      } else
        a ? (c._setter || (c._setter = ti(c.mData)), c._setter(w, s)) : w[t] = s;
    t++;
  };
  if (F)
    for (; F; )
      l = F.nodeName.toUpperCase(), (l == "TD" || l == "TH") && (f(F), I.push(F)), F = F.nextSibling;
  else {
    I = v.anCells;
    for (var u = 0, h = I.length; u < h; u++)
      f(I[u]);
  }
  var d = v.firstChild ? v : v.nTr;
  if (d) {
    var i = d.getAttribute("id");
    i && ti(n.rowId)(w, i);
  }
  return {
    data: w,
    cells: I
  };
}
function p0(n, v) {
  let g = n.aoData[v], w = n.aoColumns;
  if (!g.displayData) {
    g.displayData = [];
    for (var I = 0, F = w.length; I < F; I++)
      g.displayData.push(
        ua(n, v, I, "display")
      );
  }
  return g.displayData;
}
function sf(n, v, g, w) {
  var I = n.aoData[v], F = I._aData, l = [], c, t, s, r, a, o, f = n.oClasses.tbody.row;
  if (I.nTr === null) {
    for (c = g || document.createElement("tr"), I.nTr = c, I.anCells = l, wi(c, f), c._DT_RowIndex = v, lf(n, I), r = 0, a = n.aoColumns.length; r < a; r++) {
      s = n.aoColumns[r], o = !g, t = o ? document.createElement(s.sCellType) : w[r], t || la(n, 0, "Incorrect column count", 18), t._DT_CellIndex = {
        row: v,
        column: r
      }, l.push(t);
      var u = p0(n, v);
      (o || (s.mRender || s.mData !== r) && (!Zt.isPlainObject(s.mData) || s.mData._ !== r + ".display")) && rs(t, u[r]), s.bVisible && !g ? c.appendChild(t) : !s.bVisible && g && t.parentNode.removeChild(t), s.fnCreatedCell && s.fnCreatedCell.call(
        n.oInstance,
        t,
        ua(n, v, r),
        F,
        v,
        r
      );
    }
    Ur(n, "aoRowCreatedCallback", "row-created", [c, F, v, l]);
  } else
    wi(I.nTr, f);
}
function lf(n, v) {
  var g = v.nTr, w = v._aData;
  if (g) {
    var I = n.rowIdFn(w);
    if (I && (g.id = I), w.DT_RowClass) {
      var F = w.DT_RowClass.split(" ");
      v.__rowc = v.__rowc ? ni(v.__rowc.concat(F)) : F, Zt(g).removeClass(v.__rowc.join(" ")).addClass(w.DT_RowClass);
    }
    w.DT_RowAttr && Zt(g).attr(w.DT_RowAttr), w.DT_RowData && Zt(g).data(w.DT_RowData);
  }
}
function Pl(n, v) {
  var g = n.oClasses, w = n.aoColumns, I, F, l, c = v === "header" ? n.nTHead : n.nTFoot, t = v === "header" ? "sTitle" : v;
  if (c) {
    if (Zt("th, td", c).length === 0 && (v === "header" || ea(n.aoColumns, t).join("")))
      for (l = Zt("<tr/>").appendTo(c), I = 0, F = w.length; I < F; I++)
        Zt("<th/>").html(w[I][t] || "").appendTo(l);
    var s = uf(n, c, !0);
    v === "header" ? n.aoHeader = s : n.aoFooter = s, Zt(c).children("tr").attr("role", "row"), Zt(c).children("tr").children("th, td").each(function() {
      is(n, v)(
        n,
        Zt(this),
        g
      );
    });
  }
}
function ff(n, v, g) {
  var w, I, F, l = [], c = [], t = n.aoColumns, s = t.length, r, a;
  if (v) {
    for (g || (g = Ha(s).filter(function(f) {
      return t[f].bVisible;
    })), w = 0; w < v.length; w++)
      l[w] = v[w].slice().filter(function(f, u) {
        return g.includes(u);
      }), c.push([]);
    for (w = 0; w < l.length; w++)
      for (I = 0; I < l[w].length; I++)
        if (r = 1, a = 1, c[w][I] === void 0) {
          for (F = l[w][I].cell; l[w + r] !== void 0 && l[w][I].cell == l[w + r][I].cell; )
            c[w + r][I] = null, r++;
          for (; l[w][I + a] !== void 0 && l[w][I].cell == l[w][I + a].cell; ) {
            for (var o = 0; o < r; o++)
              c[w + o][I + a] = null;
            a++;
          }
          c[w][I] = {
            cell: F,
            colspan: a,
            rowspan: r,
            title: Zt("span.dt-column-title", F).html()
          };
        }
    return c;
  }
}
function ns(n, v) {
  for (var g = ff(n, v), w, I, F = 0; F < v.length; F++) {
    if (w = v[F].row, w)
      for (; I = w.firstChild; )
        w.removeChild(I);
    for (var l = 0; l < g[F].length; l++) {
      var c = g[F][l];
      c && Zt(c.cell).appendTo(w).attr("rowspan", c.rowspan).attr("colspan", c.colspan);
    }
  }
}
function Ri(n, v) {
  Kd(n);
  var g = Ur(n, "aoPreDrawCallback", "preDraw", [n]);
  if (g.indexOf(!1) !== -1) {
    fa(n, !1);
    return;
  }
  var w = [], I = 0, F = ra(n) == "ssp", l = n.aiDisplay, c = n._iDisplayStart, t = n.fnDisplayEnd(), s = n.aoColumns, r = Zt(n.nTBody);
  if (n.bDrawing = !0, !F)
    n.iDraw++;
  else if (!n.bDestroying && !v) {
    n.iDraw === 0 && r.empty().append(Bl(n)), Jd(n);
    return;
  }
  if (l.length !== 0)
    for (var a = F ? 0 : c, o = F ? n.aoData.length : t, f = a; f < o; f++) {
      var u = l[f], h = n.aoData[u];
      h.nTr === null && sf(n, u);
      for (var d = h.nTr, i = 0; i < s.length; i++) {
        var p = s[i], y = h.anCells[i];
        wi(y, Yr.type.className[p.sType]), wi(y, p.sClass), wi(y, n.oClasses.tbody.cell);
      }
      Ur(
        n,
        "aoRowCallback",
        null,
        [d, h._aData, I, f, u]
      ), w.push(d), I++;
    }
  else
    w[0] = Bl(n);
  Ur(n, "aoHeaderCallback", "header", [
    Zt(n.nTHead).children("tr")[0],
    Ol(n),
    c,
    t,
    l
  ]), Ur(n, "aoFooterCallback", "footer", [
    Zt(n.nTFoot).children("tr")[0],
    Ol(n),
    c,
    t,
    l
  ]), r.children().detach(), r.append(Zt(w)), Zt(n.nTableWrapper).toggleClass("dt-empty-footer", Zt("tr", n.nTFoot).length === 0), Ur(n, "aoDrawCallback", "draw", [n], !0), n.bSorted = !1, n.bFiltered = !1, n.bDrawing = !1;
}
function Pi(n, v, g) {
  var w = n.oFeatures, I = w.bSort, F = w.bFilter;
  (g === void 0 || g === !0) && (I && y0(n), F ? uo(n, n.oPreviousSearch) : n.aiDisplay = n.aiDisplayMaster.slice()), v !== !0 && (n._iDisplayStart = 0), n._drawHold = v, Ri(n), n._drawHold = !1;
}
function Bl(n) {
  var v = n.oLanguage, g = v.sZeroRecords, w = ra(n);
  return n.iDraw <= 1 && (w === "ajax" || w === "ssp") ? g = v.sLoadingRecords : v.sEmptyTable && n.fnRecordsTotal() === 0 && (g = v.sEmptyTable), Zt("<tr/>").append(Zt("<td />", {
    colSpan: cs(n),
    class: n.oClasses.empty.row
  }).html(g))[0];
}
function Rl(n, v, g) {
  var w = {};
  Zt.each(v, function(t, s) {
    if (s !== null) {
      var r = t.replace(/([A-Z])/g, " $1").split(" ");
      w[r[0]] || (w[r[0]] = {});
      var a = r.length === 1 ? "full" : r[1].toLowerCase(), o = w[r[0]];
      Zt.isPlainObject(s) ? s.contents ? o[a] = s : o[a] = {
        contents: Object.keys(s).map(function(f) {
          return {
            feature: f,
            opts: s[f]
          };
        })
      } : o[a] = {
        contents: s
      }, Array.isArray(o[a].contents) || (o[a].contents = [o[a].contents]);
    }
  });
  var I = Object.keys(w).map(function(t) {
    return t.indexOf(g) !== 0 ? null : {
      name: t,
      val: w[t]
    };
  }).filter(function(t) {
    return t !== null;
  });
  I.sort(function(t, s) {
    var r = t.name.replace(/[^0-9]/g, "") * 1, a = s.name.replace(/[^0-9]/g, "") * 1;
    return a - r;
  }), g === "bottom" && I.reverse();
  for (var F = [], l = 0, c = I.length; l < c; l++)
    I[l].val.full && (F.push({ full: I[l].val.full }), Ll(n, F[F.length - 1]), delete I[l].val.full), Object.keys(I[l].val).length && (F.push(I[l].val), Ll(n, F[F.length - 1]));
  return F;
}
function Ll(n, v) {
  var g = function(I, F) {
    return Yr.features[I] || la(n, 0, "Unknown feature: " + I), Yr.features[I].apply(this, [n, F]);
  }, w = function(I) {
    for (var F = v[I].contents, l = 0, c = F.length; l < c; l++)
      if (F[l]) {
        if (typeof F[l] == "string")
          F[l] = g(F[l], null);
        else if (Zt.isPlainObject(F[l]))
          F[l] = g(F[l].feature, F[l].opts);
        else if (typeof F[l].node == "function")
          F[l] = F[l].node(n);
        else if (typeof F[l] == "function") {
          var t = F[l](n);
          F[l] = typeof t.node == "function" ? t.node() : t;
        }
      } else
        continue;
  };
  Zt.each(v, function(I) {
    w(I);
  });
}
function Zd(n) {
  var v = n.oClasses, g = Zt(n.nTable), w = Zt("<div/>").attr({
    id: n.sTableId + "_wrapper",
    class: v.container
  }).insertBefore(g);
  n.nTableWrapper = w[0];
  var I = Rl(n, n.layout, "top"), F = Rl(n, n.layout, "bottom"), l = is(n, "layout");
  n.sDom ? Yd(n, n.sDom, w) : (I.forEach(function(c) {
    l(n, w, c);
  }), l(n, w, {
    full: {
      table: !0,
      contents: [hf(n)]
    }
  }), F.forEach(function(c) {
    l(n, w, c);
  })), r1(n);
}
function Yd(n, v, g) {
  for (var w = v.match(/(".*?")|('.*?')|./g), I, F, l, c, t, s = 0; s < w.length; s++) {
    if (I = null, F = w[s], F == "<") {
      if (l = Zt("<div/>"), c = w[s + 1], c[0] == "'" || c[0] == '"') {
        t = c.replace(/['"]/g, "");
        var r = "", a;
        if (t.indexOf(".") != -1) {
          var o = t.split(".");
          r = o[0], a = o[1];
        } else
          t[0] == "#" ? r = t : a = t;
        l.attr("id", r.substring(1)).addClass(a), s++;
      }
      g.append(l), g = l;
    } else
      F == ">" ? g = g.parent() : F == "t" ? I = hf(n) : se.ext.feature.forEach(function(f) {
        F == f.cFeature && (I = f.fnInit(n));
      });
    I && g.append(I);
  }
}
function uf(n, v, g) {
  var w = n.aoColumns, I = Zt(v).children("tr"), F, l, c, t, s, r, a, o, f, u, h = v && v.nodeName.toLowerCase() === "thead", d = [], i, p = function(S, P, O) {
    for (var T = S[P]; T[O]; )
      O++;
    return O;
  };
  for (c = 0, r = I.length; c < r; c++)
    d.push([]);
  for (c = 0, r = I.length; c < r; c++)
    for (F = I[c], o = 0, l = F.firstChild; l; ) {
      if (l.nodeName.toUpperCase() == "TD" || l.nodeName.toUpperCase() == "TH") {
        var y = [];
        if (f = l.getAttribute("colspan") * 1, u = l.getAttribute("rowspan") * 1, f = !f || f === 0 || f === 1 ? 1 : f, u = !u || u === 0 || u === 1 ? 1 : u, a = p(d, c, o), i = f === 1, g) {
          if (i) {
            $s(n, a, Zt(l).data());
            var m = w[a], e = l.getAttribute("width") || null, x = l.style.width.match(/width:\s*(\d+[pxem%]+)/);
            x && (e = x[1]), m.sWidthOrig = m.sWidth || e, h ? (m.sTitle !== null && !m.autoTitle && (l.innerHTML = m.sTitle), !m.sTitle && i && (m.sTitle = l.innerHTML.replace(/<.*?>/g, ""), m.autoTitle = !0)) : m.footer && (l.innerHTML = m.footer), m.ariaTitle || (m.ariaTitle = Zt(l).attr("aria-label") || m.sTitle), m.className && Zt(l).addClass(m.className);
          }
          Zt("span.dt-column-title", l).length === 0 && Zt("<span>").addClass("dt-column-title").append(l.childNodes).appendTo(l), h && Zt("span.dt-column-order", l).length === 0 && Zt("<span>").addClass("dt-column-order").appendTo(l);
        }
        for (s = 0; s < f; s++) {
          for (t = 0; t < u; t++)
            d[c + t][a + s] = {
              cell: l,
              unique: i
            }, d[c + t].row = F;
          y.push(a + s);
        }
        l.setAttribute("data-dt-column", ni(y).join(","));
      }
      l = l.nextSibling;
    }
  return d;
}
function Kd(n) {
  var v = ra(n) == "ssp", g = n.iInitDisplayStart;
  g !== void 0 && g !== -1 && (n._iDisplayStart = v ? g : g >= n.fnRecordsDisplay() ? 0 : g, n.iInitDisplayStart = -1);
}
function g0(n, v, g) {
  var w, I = n.ajax, F = n.oInstance, l = function(s) {
    var r = n.jqXHR ? n.jqXHR.status : null;
    (s === null || typeof r == "number" && r == 204) && (s = {}, ds(n, s, []));
    var a = s.error || s.sError;
    a && la(n, 0, a), n.json = s, Ur(n, null, "xhr", [n, s, n.jqXHR], !0), g(s);
  };
  if (Zt.isPlainObject(I) && I.data) {
    w = I.data;
    var c = typeof w == "function" ? w(v, n) : (
      // fn can manipulate data or return
      w
    );
    v = typeof w == "function" && c ? c : Zt.extend(!0, v, c), delete I.data;
  }
  var t = {
    url: typeof I == "string" ? I : "",
    data: v,
    success: l,
    dataType: "json",
    cache: !1,
    type: n.sServerMethod,
    error: function(s, r) {
      var a = Ur(n, null, "xhr", [n, null, n.jqXHR], !0);
      a.indexOf(!0) === -1 && (r == "parsererror" ? la(n, 0, "Invalid JSON response", 1) : s.readyState === 4 && la(n, 0, "Ajax error", 7)), fa(n, !1);
    }
  };
  Zt.isPlainObject(I) && Zt.extend(t, I), n.oAjaxData = v, Ur(n, null, "preXhr", [n, v, t], !0), typeof I == "function" ? n.jqXHR = I.call(F, v, l, n) : I.url === "" ? l({}) : (n.jqXHR = Zt.ajax(t), w && (I.data = w));
}
function Jd(n) {
  n.iDraw++, fa(n, !0), g0(
    n,
    Qd(n),
    function(v) {
      _d(n, v);
    }
  );
}
function Qd(n) {
  var v = n.aoColumns, g = n.oFeatures, w = n.oPreviousSearch, I = n.aoPreSearchCols, F = function(l, c) {
    return typeof v[l][c] == "function" ? "function" : v[l][c];
  };
  return {
    draw: n.iDraw,
    columns: v.map(function(l, c) {
      return {
        data: F(c, "mData"),
        name: l.sName,
        searchable: l.bSearchable,
        orderable: l.bSortable,
        search: {
          value: I[c].search,
          regex: I[c].regex,
          fixed: Object.keys(l.searchFixed).map(function(t) {
            return {
              name: t,
              term: l.searchFixed[t].toString()
            };
          })
        }
      };
    }),
    order: vs(n).map(function(l) {
      return {
        column: l.col,
        dir: l.dir,
        name: F(l.col, "sName")
      };
    }),
    start: n._iDisplayStart,
    length: g.bPaginate ? n._iDisplayLength : -1,
    search: {
      value: w.search,
      regex: w.regex,
      fixed: Object.keys(n.searchFixed).map(function(l) {
        return {
          name: l,
          term: n.searchFixed[l].toString()
        };
      })
    }
  };
}
function _d(n, v) {
  var g = ds(n, v), w = js(n, "draw", v), I = js(n, "recordsTotal", v), F = js(n, "recordsFiltered", v);
  if (w !== void 0) {
    if (w * 1 < n.iDraw)
      return;
    n.iDraw = w * 1;
  }
  g || (g = []), v0(n), n._iRecordsTotal = parseInt(I, 10), n._iRecordsDisplay = parseInt(F, 10);
  for (var l = 0, c = g.length; l < c; l++)
    ai(n, g[l]);
  n.aiDisplay = n.aiDisplayMaster.slice(), Ri(n, !0), as(n), fa(n, !1);
}
function ds(n, v, g) {
  var w = "data";
  if (Zt.isPlainObject(n.ajax) && n.ajax.dataSrc !== void 0) {
    var I = n.ajax.dataSrc;
    typeof I == "string" || typeof I == "function" ? w = I : I.data !== void 0 && (w = I.data);
  }
  if (!g)
    return w === "data" ? v.aaData || v[w] : w !== "" ? Oi(w)(v) : v;
  ti(w)(v, g);
}
function js(n, v, g) {
  var w = Zt.isPlainObject(n.ajax) ? n.ajax.dataSrc : null;
  if (w && w[v])
    return Oi(w[v])(g);
  var I = "";
  return v === "draw" ? I = "sEcho" : v === "recordsTotal" ? I = "iTotalRecords" : v === "recordsFiltered" && (I = "iTotalDisplayRecords"), g[I] !== void 0 ? g[I] : g[v];
}
function uo(n, v) {
  var g = n.aoPreSearchCols;
  if (c0(n), ra(n) != "ssp") {
    e1(n), n.aiDisplay = n.aiDisplayMaster.slice(), Jo(n.aiDisplay, n, v.search, v), Zt.each(n.searchFixed, function(F, l) {
      Jo(n.aiDisplay, n, l, {});
    });
    for (var w = 0; w < g.length; w++) {
      var I = g[w];
      Jo(
        n.aiDisplay,
        n,
        I.search,
        I,
        w
      ), Zt.each(n.aoColumns[w].searchFixed, function(F, l) {
        Jo(n.aiDisplay, n, l, {}, w);
      });
    }
    $d(n);
  }
  n.bFiltered = !0, Ur(n, null, "search", [n]);
}
function $d(n) {
  for (var v = se.ext.search, g = n.aiDisplay, w, I, F = 0, l = v.length; F < l; F++) {
    for (var c = [], t = 0, s = g.length; t < s; t++)
      I = g[t], w = n.aoData[I], v[F](n, w._aFilterData, I, w._aData, t) && c.push(I);
    g.length = 0, g.push.apply(g, c);
  }
}
function Jo(n, v, g, w, I) {
  if (g !== "")
    for (var F = 0, l = typeof g == "function" ? g : null, c = g instanceof RegExp ? g : l ? null : qd(g, w); F < n.length; ) {
      var t = v.aoData[n[F]], s = I === void 0 ? t._sFilterRow : t._aFilterData[I];
      (l && !l(s, t._aData, n[F], I) || c && !c.test(s)) && (n.splice(F, 1), F--), F++;
    }
}
function qd(n, v) {
  var g = [], w = Zt.extend({}, {
    boundary: !1,
    caseInsensitive: !0,
    exact: !1,
    regex: !1,
    smart: !0
  }, v);
  if (typeof n != "string" && (n = n.toString()), w.exact)
    return new RegExp(
      "^" + qs(n) + "$",
      w.caseInsensitive ? "i" : ""
    );
  if (n = w.regex ? n : qs(n), w.smart) {
    var I = n.match(/!?["\u201C][^"\u201D]+["\u201D]|[^ ]+/g) || [""], F = I.map(function(t) {
      var s = !1, r;
      return t.charAt(0) === "!" && (s = !0, t = t.substring(1)), t.charAt(0) === '"' ? (r = t.match(/^"(.*)"$/), t = r ? r[1] : t) : t.charAt(0) === "â" && (r = t.match(/^\u201C(.*)\u201D$/), t = r ? r[1] : t), s && (t.length > 1 && g.push("(?!" + t + ")"), t = ""), t.replace('"', "");
    }), l = g.length ? g.join("") : "", c = w.boundary ? "\\b" : "";
    n = "^(?=.*?" + c + F.join(")(?=.*?" + c) + ")(" + l + ".)*$";
  }
  return new RegExp(n, w.caseInsensitive ? "i" : "");
}
var qs = se.util.escapeRegex, qo = Zt("<div>")[0], t1 = qo.textContent !== void 0;
function e1(n) {
  for (var v = n.aoColumns, g = n.aoData, w, I, F, l, c, t, s = !1, r = 0; r < g.length; r++)
    if (g[r] && (t = g[r], !t._aFilterData)) {
      for (l = [], I = 0, F = v.length; I < F; I++)
        w = v[I], w.bSearchable ? (c = ua(n, r, I, "filter"), c === null && (c = ""), typeof c != "string" && c.toString && (c = c.toString())) : c = "", c.indexOf && c.indexOf("&") !== -1 && (qo.innerHTML = c, c = t1 ? qo.textContent : qo.innerText), c.replace && (c = c.replace(/[\r\n\u2028]/g, "")), l.push(c);
      t._aFilterData = l, t._sFilterRow = l.join("  "), s = !0;
    }
  return s;
}
function ts(n) {
  var v, g = n.iInitDisplayStart;
  if (!n.bInitialised) {
    setTimeout(function() {
      ts(n);
    }, 200);
    return;
  }
  Pl(n, "header"), Pl(n, "footer"), ns(n, n.aoHeader), ns(n, n.aoFooter), Zd(n), i1(n), vf(n), fa(n, !0), Ur(n, null, "preInit", [n], !0), Pi(n);
  var w = ra(n);
  w != "ssp" && (w == "ajax" ? g0(n, {}, function(I) {
    var F = ds(n, I);
    for (v = 0; v < F.length; v++)
      ai(n, F[v]);
    n.iInitDisplayStart = g, Pi(n), fa(n, !1), as(n);
  }) : (as(n), fa(n, !1)));
}
function as(n) {
  if (!n._bInitComplete) {
    var v = [n, n.json];
    n._bInitComplete = !0, us(n), Ur(n, null, "plugin-init", v, !0), Ur(n, "aoInitComplete", "init", v, !0);
  }
}
function cf(n, v) {
  var g = parseInt(v, 10);
  n._iDisplayLength = g, mf(n), Ur(n, null, "length", [n, g]);
}
function m0(n, v, g) {
  var w = n._iDisplayStart, I = n._iDisplayLength, F = n.fnRecordsDisplay();
  if (F === 0 || I === -1)
    w = 0;
  else if (typeof v == "number")
    w = v * I, w > F && (w = 0);
  else if (v == "first")
    w = 0;
  else if (v == "previous")
    w = I >= 0 ? w - I : 0, w < 0 && (w = 0);
  else if (v == "next")
    w + I < F && (w += I);
  else if (v == "last")
    w = Math.floor((F - 1) / I) * I;
  else {
    if (v === "ellipsis")
      return;
    la(n, 0, "Unknown paging action: " + v, 5);
  }
  var l = n._iDisplayStart !== w;
  return n._iDisplayStart = w, Ur(n, null, l ? "page" : "page-nc", [n]), l && g && Ri(n), l;
}
function r1(n) {
  var v = n.nTable;
  if (n.oFeatures.bProcessing) {
    var g = Zt("<div/>", {
      id: n.sTableId + "_processing",
      class: n.oClasses.processing.container,
      role: "status"
    }).html(n.oLanguage.sProcessing).append("<div><div></div><div></div><div></div><div></div></div>").insertBefore(v);
    Zt(v).on("processing.dt.DT", function(w, I, F) {
      g.css("display", F ? "block" : "none");
    });
  }
}
function fa(n, v) {
  Ur(n, null, "processing", [n, v]);
}
function hf(n) {
  var v = Zt(n.nTable), g = n.oScroll;
  if (g.sX === "" && g.sY === "")
    return n.nTable;
  var w = g.sX, I = g.sY, F = n.oClasses.scrolling, l = n.captionNode, c = l ? l._captionSide : null, t = Zt(v[0].cloneNode(!1)), s = Zt(v[0].cloneNode(!1)), r = v.children("tfoot"), a = "<div/>", o = function(p) {
    return p ? Ga(p) : null;
  };
  r.length || (r = null);
  var f = Zt(a, { class: F.container }).append(
    Zt(a, { class: F.header.self }).css({
      overflow: "hidden",
      position: "relative",
      border: 0,
      width: w ? o(w) : "100%"
    }).append(
      Zt(a, { class: F.header.inner }).css({
        "box-sizing": "content-box",
        width: g.sXInner || "100%"
      }).append(
        t.removeAttr("id").css("margin-left", 0).append(c === "top" ? l : null).append(
          v.children("thead")
        )
      )
    )
  ).append(
    Zt(a, { class: F.body }).css({
      position: "relative",
      overflow: "auto",
      width: o(w)
    }).append(v)
  );
  r && f.append(
    Zt(a, { class: F.footer.self }).css({
      overflow: "hidden",
      border: 0,
      width: w ? o(w) : "100%"
    }).append(
      Zt(a, { class: F.footer.inner }).append(
        s.removeAttr("id").css("margin-left", 0).append(c === "bottom" ? l : null).append(
          v.children("tfoot")
        )
      )
    )
  );
  var u = f.children(), h = u[0], d = u[1], i = r ? u[2] : null;
  return Zt(d).on("scroll.DT", function() {
    var p = this.scrollLeft;
    h.scrollLeft = p, r && (i.scrollLeft = p);
  }), Zt("th, td", h).on("focus", function() {
    var p = h.scrollLeft;
    d.scrollLeft = p, r && (d.scrollLeft = p);
  }), Zt(d).css("max-height", I), g.bCollapse || Zt(d).css("height", I), n.nScrollHead = h, n.nScrollBody = d, n.nScrollFoot = i, n.aoDrawCallback.push(df), f[0];
}
function df(n) {
  var v = n.oScroll, g = v.iBarWidth, w = Zt(n.nScrollHead), I = w.children("div"), F = I.children("table"), l = n.nScrollBody, c = Zt(l), t = Zt(n.nScrollFoot), s = t.children("div"), r = s.children("table"), a = Zt(n.nTHead), o = Zt(n.nTable), f = n.nTFoot && Zt("th, td", n.nTFoot).length ? Zt(n.nTFoot) : null, u = n.oBrowser, h, d, i = l.scrollHeight > l.clientHeight;
  if (n.scrollBarVis !== i && n.scrollBarVis !== void 0) {
    n.scrollBarVis = i, us(n);
    return;
  } else
    n.scrollBarVis = i;
  if (o.children("thead, tfoot").remove(), h = a.clone().prependTo(o), h.find("th, td").removeAttr("tabindex"), h.find("[id]").removeAttr("id"), f && (d = f.clone().prependTo(o), d.find("[id]").removeAttr("id")), n.aiDisplay.length) {
    var p = o.find("tbody tr").eq(0).find("th, td").map(function() {
      return Zt(this).outerWidth();
    });
    Zt("col", n.colgroup).each(function(x) {
      var S = this.style.width.replace("px", "");
      S !== p[x] && (this.style.width = p[x] + "px");
    });
  }
  F.find("colgroup").remove(), F.append(n.colgroup.clone()), f && (r.find("colgroup").remove(), r.append(n.colgroup.clone())), Zt("th, td", h).each(function() {
    Zt(this).children().wrapAll('<div class="dt-scroll-sizing">');
  }), f && Zt("th, td", d).each(function() {
    Zt(this).children().wrapAll('<div class="dt-scroll-sizing">');
  });
  var y = Math.floor(o.height()) > l.clientHeight || c.css("overflow-y") == "scroll", m = "padding" + (u.bScrollbarLeft ? "Left" : "Right"), e = o.outerWidth();
  F.css("width", Ga(e)), I.css("width", Ga(e)).css(m, y ? g + "px" : "0px"), f && (r.css("width", Ga(e)), s.css("width", Ga(e)).css(m, y ? g + "px" : "0px")), o.children("colgroup").prependTo(o), c.trigger("scroll"), (n.bSorted || n.bFiltered) && !n._drawHold && (l.scrollTop = 0);
}
function n1(n) {
  if (n.oFeatures.bAutoWidth) {
    var v = n.nTable, g = n.aoColumns, w = n.oScroll, I = w.sY, F = w.sX, l = w.sXInner, c = u0(n, "bVisible"), t = v.getAttribute("width"), s = v.parentNode, r, a, o, f = v.style.width;
    f && f.indexOf("%") !== -1 && (t = f), Ur(
      n,
      null,
      "column-calc",
      { visible: c },
      !1
    );
    var u = Zt(v.cloneNode()).css("visibility", "hidden").removeAttr("id");
    u.append("<tbody>");
    var h = Zt("<tr/>").appendTo(u.find("tbody"));
    for (u.append(Zt(n.nTHead).clone()).append(Zt(n.nTFoot).clone()), u.find("tfoot th, tfoot td").css("width", ""), u.find("thead th, thead td").each(function() {
      var O = af(n, this, !0, !1);
      O ? (this.style.width = O, F && Zt(this).append(Zt("<div/>").css({
        width: O,
        margin: 0,
        padding: 0,
        border: 0,
        height: 1
      }))) : this.style.width = "";
    }), r = 0; r < c.length; r++) {
      o = c[r], a = g[o];
      var d = a1(n, o), i = Yr.type.className[a.sType], p = d + a.sContentPadding, y = d.indexOf("<") === -1 ? document.createTextNode(p) : p;
      Zt("<td/>").addClass(i).addClass(a.sClass).append(y).appendTo(h);
    }
    Zt("[name]", u).removeAttr("name");
    var m = Zt("<div/>").css(
      F || I ? {
        position: "absolute",
        top: 0,
        left: 0,
        height: 1,
        right: 0,
        overflow: "hidden"
      } : {}
    ).append(u).appendTo(s);
    F && l ? u.width(l) : F ? (u.css("width", "auto"), u.removeAttr("width"), u.width() < s.clientWidth && t && u.width(s.clientWidth)) : I ? u.width(s.clientWidth) : t && u.width(t);
    var e = 0, x = u.find("tbody tr").eq(0).children();
    for (r = 0; r < c.length; r++) {
      var S = x[r].getBoundingClientRect().width;
      e += S, g[c[r]].sWidth = Ga(S);
    }
    if (v.style.width = Ga(e), m.remove(), t && (v.style.width = Ga(t)), (t || F) && !n._reszEvt) {
      var P = function() {
        Zt(window).on("resize.DT-" + n.sInstance, se.util.throttle(function() {
          n.bDestroying || us(n);
        }));
      };
      P(), n._reszEvt = !0;
    }
  }
}
function a1(n, v) {
  var g = n.aoColumns[v];
  if (!g.maxLenString) {
    for (var w, I = "", F = -1, l = 0, c = n.aiDisplayMaster.length; l < c; l++) {
      var t = n.aiDisplayMaster[l], s = p0(n, t)[v], r = s && typeof s == "object" && s.nodeType ? s.innerHTML : s + "";
      r = r.replace(/id=".*?"/g, "").replace(/name=".*?"/g, ""), w = Di(r).replace(/&nbsp;/g, " "), w.length > F && (I = r, F = w.length);
    }
    g.maxLenString = I;
  }
  return g.maxLenString;
}
function Ga(n) {
  return n === null ? "0px" : typeof n == "number" ? n < 0 ? "0px" : n + "px" : n.match(/\d$/) ? n + "px" : n;
}
function vf(n) {
  var v = n.aoColumns;
  for (n.colgroup.empty(), pa = 0; pa < v.length; pa++)
    v[pa].bVisible && n.colgroup.append(v[pa].colEl);
}
function i1(n) {
  var v = n.nTHead, g = v.querySelectorAll("tr"), w = n.bSortCellsTop, I = ':not([data-dt-order="disable"]):not([data-dt-order="icon-only"])';
  w === !0 ? v = g[0] : w === !1 && (v = g[g.length - 1]), pf(
    n,
    v,
    v === n.nTHead ? "tr" + I + " th" + I + ", tr" + I + " td" + I : "th" + I + ", td" + I
  );
  var F = [];
  so(n, F, n.aaSorting), n.aaSorting = F;
}
function pf(n, v, g, w, I) {
  gf(v, g, function(F) {
    var l = w === void 0 ? h0(F.target) : [w];
    l.length && (fa(n, !0), setTimeout(function() {
      for (var c = 0, t = l.length; c < t; c++) {
        var s = F.shiftKey || c > 0;
        s1(n, l[c], s);
      }
      y0(n), o1(n), Pi(n, !1, !1), fa(n, !1), I && I();
    }, 0));
  });
}
function o1(n) {
  var v = n.aiDisplay, g = n.aiDisplayMaster;
  v.sort(function(w, I) {
    return g.indexOf(w) - g.indexOf(I);
  });
}
function so(n, v, g) {
  var w = function(F) {
    if (Zt.isPlainObject(F)) {
      if (F.idx !== void 0)
        v.push([F.idx, F.dir]);
      else if (F.name) {
        var l = ea(n.aoColumns, "sName"), c = l.indexOf(F.name);
        c !== -1 && v.push([c, F.dir]);
      }
    } else
      v.push(F);
  };
  if (Zt.isPlainObject(g))
    w(g);
  else if (g.length && typeof g[0] == "number")
    w(g);
  else if (g.length)
    for (var I = 0; I < g.length; I++)
      w(g[I]);
}
function vs(n) {
  var v, g, w, I = [], F = se.ext.type.order, l = n.aoColumns, c, t, s, r, a = n.aaSortingFixed, o = Zt.isPlainObject(a), f = [];
  if (!n.oFeatures.bSort)
    return I;
  for (Array.isArray(a) && so(n, f, a), o && a.pre && so(n, f, a.pre), so(n, f, n.aaSorting), o && a.post && so(n, f, a.post), v = 0; v < f.length; v++)
    if (r = f[v][0], l[r])
      for (c = l[r].aDataSort, g = 0, w = c.length; g < w; g++)
        t = c[g], s = l[t].sType || "string", f[v]._idx === void 0 && (f[v]._idx = l[t].asSorting.indexOf(f[v][1])), f[v][1] && I.push({
          src: r,
          col: t,
          dir: f[v][1],
          index: f[v]._idx,
          type: s,
          formatter: F[s + "-pre"],
          sorter: F[s + "-" + f[v][1]]
        });
  return I;
}
function y0(n, v, g) {
  var w, I, F, l = [], c = se.ext.type.order, t = n.aoData, s, r = n.aiDisplayMaster, a;
  if (c0(n), v !== void 0) {
    var o = n.aoColumns[v];
    a = [{
      src: v,
      col: v,
      dir: g,
      index: 0,
      type: o.sType,
      formatter: c[o.sType + "-pre"],
      sorter: c[o.sType + "-" + g]
    }], r = r.slice();
  } else
    a = vs(n);
  for (w = 0, I = a.length; w < I; w++)
    s = a[w], l1(n, s.col);
  if (ra(n) != "ssp" && a.length !== 0) {
    for (w = 0, F = r.length; w < F; w++)
      l[w] = w;
    a.length && a[0].dir === "desc" && l.reverse(), r.sort(function(f, u) {
      var h, d, i, p, y, m = a.length, e = t[f]._aSortData, x = t[u]._aSortData;
      for (i = 0; i < m; i++)
        if (y = a[i], h = e[y.col], d = x[y.col], y.sorter) {
          if (p = y.sorter(h, d), p !== 0)
            return p;
        } else if (p = h < d ? -1 : h > d ? 1 : 0, p !== 0)
          return y.dir === "asc" ? p : -p;
      return h = l[f], d = l[u], h < d ? -1 : h > d ? 1 : 0;
    });
  } else
    a.length === 0 && r.sort(function(f, u) {
      return f < u ? -1 : f > u ? 1 : 0;
    });
  return v === void 0 && (n.bSorted = !0, Ur(n, null, "order", [n, a])), r;
}
function s1(n, v, g) {
  var w = n.aoColumns[v], I = n.aaSorting, F = w.asSorting, l, c = function(s, r) {
    var a = s._idx;
    return a === void 0 && (a = F.indexOf(s[1])), a + 1 < F.length ? a + 1 : r ? null : 0;
  };
  if (w.bSortable)
    if (typeof I[0] == "number" && (I = n.aaSorting = [I]), g && n.oFeatures.bSortMulti) {
      var t = ea(I, "0").indexOf(v);
      t !== -1 ? (l = c(I[t], !0), l === null && I.length === 1 && (l = 0), l === null ? I.splice(t, 1) : (I[t][1] = F[l], I[t]._idx = l)) : (I.push([v, F[0], 0]), I[I.length - 1]._idx = 0);
    } else
      I.length && I[0][0] == v ? (l = c(I[0]), I.length = 1, I[0][1] = F[l], I[0]._idx = l) : (I.length = 0, I.push([v, F[0]]), I[0]._idx = 0);
}
function t0(n) {
  var v = n.aLastSort, g = n.oClasses.order.position, w = vs(n), I = n.oFeatures, F, l, c;
  if (I.bSort && I.bSortClasses) {
    for (F = 0, l = v.length; F < l; F++)
      c = v[F].src, Zt(ea(n.aoData, "anCells", c)).removeClass(g + (F < 2 ? F + 1 : 3));
    for (F = 0, l = w.length; F < l; F++)
      c = w[F].src, Zt(ea(n.aoData, "anCells", c)).addClass(g + (F < 2 ? F + 1 : 3));
  }
  n.aLastSort = w;
}
function l1(n, v) {
  var g = n.aoColumns[v], w = se.ext.order[g.sSortDataType], I;
  w && (I = w.call(
    n.oInstance,
    n,
    v,
    go(n, v)
  ));
  for (var F, l, c = se.ext.type.order[g.sType + "-pre"], t = n.aoData, s = 0; s < t.length; s++)
    t[s] && (F = t[s], F._aSortData || (F._aSortData = []), (!F._aSortData[v] || w) && (l = w ? I[s] : (
      // If there was a custom sort function, use data from there
      ua(n, s, v, "sort")
    ), F._aSortData[v] = c ? c(l, n) : l));
}
function ps(n) {
  if (!n._bLoadingState) {
    var v = {
      time: +/* @__PURE__ */ new Date(),
      start: n._iDisplayStart,
      length: n._iDisplayLength,
      order: Zt.extend(!0, [], n.aaSorting),
      search: Zt.extend({}, n.oPreviousSearch),
      columns: n.aoColumns.map(function(g, w) {
        return {
          visible: g.bVisible,
          search: Zt.extend({}, n.aoPreSearchCols[w])
        };
      })
    };
    n.oSavedState = v, Ur(n, "aoStateSaveParams", "stateSaveParams", [n, v]), n.oFeatures.bStateSave && !n.bDestroying && n.fnStateSaveCallback.call(n.oInstance, n, v);
  }
}
function f1(n, v, g) {
  if (!n.oFeatures.bStateSave) {
    g();
    return;
  }
  var w = function(F) {
    e0(n, F, g);
  }, I = n.fnStateLoadCallback.call(n.oInstance, n, w);
  return I !== void 0 && e0(n, I, g), !0;
}
function e0(n, v, g) {
  var w, I, F = n.aoColumns;
  n._bLoadingState = !0;
  var l = n._bInitComplete ? new se.Api(n) : null;
  if (!v || !v.time) {
    n._bLoadingState = !1, g();
    return;
  }
  var c = n.iStateDuration;
  if (c > 0 && v.time < +/* @__PURE__ */ new Date() - c * 1e3) {
    n._bLoadingState = !1, g();
    return;
  }
  var t = Ur(n, "aoStateLoadParams", "stateLoadParams", [n, v]);
  if (t.indexOf(!1) !== -1) {
    n._bLoadingState = !1, g();
    return;
  }
  if (v.columns && F.length !== v.columns.length) {
    n._bLoadingState = !1, g();
    return;
  }
  if (n.oLoadedState = Zt.extend(!0, {}, v), Ur(n, null, "stateLoadInit", [n, v], !0), v.length !== void 0 && (l ? l.page.len(v.length) : n._iDisplayLength = v.length), v.start !== void 0 && (l === null ? (n._iDisplayStart = v.start, n.iInitDisplayStart = v.start) : m0(n, v.start / n._iDisplayLength)), v.order !== void 0 && (n.aaSorting = [], Zt.each(v.order, function(r, a) {
    n.aaSorting.push(
      a[0] >= F.length ? [0, a[1]] : a
    );
  })), v.search !== void 0 && Zt.extend(n.oPreviousSearch, v.search), v.columns) {
    for (w = 0, I = v.columns.length; w < I; w++) {
      var s = v.columns[w];
      s.visible !== void 0 && (l ? l.column(w).visible(s.visible, !1) : F[w].bVisible = s.visible), s.search !== void 0 && Zt.extend(n.aoPreSearchCols[w], s.search);
    }
    l && l.columns.adjust();
  }
  n._bLoadingState = !1, Ur(n, "aoStateLoaded", "stateLoaded", [n, v]), g();
}
function la(n, v, g, w) {
  if (g = "DataTables warning: " + (n ? "table id=" + n.sTableId + " - " : "") + g, w && (g += ". For more information about this error, please see https://datatables.net/tn/" + w), v)
    window.console && console.log && console.log(g);
  else {
    var I = se.ext, F = I.sErrMode || I.errMode;
    if (n && Ur(n, null, "dt-error", [n, w, g], !0), F == "alert")
      alert(g);
    else {
      if (F == "throw")
        throw new Error(g);
      typeof F == "function" && F(n, w, g);
    }
  }
}
function Va(n, v, g, w) {
  if (Array.isArray(g)) {
    Zt.each(g, function(I, F) {
      Array.isArray(F) ? Va(n, v, F[0], F[1]) : Va(n, v, F);
    });
    return;
  }
  w === void 0 && (w = g), v[g] !== void 0 && (n[w] = v[g]);
}
function Nl(n, v, g) {
  var w;
  for (var I in v)
    Object.prototype.hasOwnProperty.call(v, I) && (w = v[I], Zt.isPlainObject(w) ? (Zt.isPlainObject(n[I]) || (n[I] = {}), Zt.extend(!0, n[I], w)) : g && I !== "data" && I !== "aaData" && Array.isArray(w) ? n[I] = w.slice() : n[I] = w);
  return n;
}
function gf(n, v, g) {
  Zt(n).on("click.DT", v, function(w) {
    g(w);
  }).on("keypress.DT", v, function(w) {
    w.which === 13 && (w.preventDefault(), g(w));
  }).on("selectstart.DT", v, function() {
    return !1;
  });
}
function sa(n, v, g) {
  g && n[v].push(g);
}
function Ur(n, v, g, w, I) {
  var F = [];
  if (v && (F = n[v].slice().reverse().map(function(t) {
    return t.apply(n.oInstance, w);
  })), g !== null) {
    var l = Zt.Event(g + ".dt"), c = Zt(n.nTable);
    l.dt = n.api, c[I ? "trigger" : "triggerHandler"](l, w), I && c.parents("body").length === 0 && Zt("body").trigger(l, w), F.push(l.result);
  }
  return F;
}
function mf(n) {
  var v = n._iDisplayStart, g = n.fnDisplayEnd(), w = n._iDisplayLength;
  v >= g && (v = g - w), v -= v % w, (w === -1 || v < 0) && (v = 0), n._iDisplayStart = v;
}
function is(n, v) {
  var g = n.renderer, w = se.ext.renderer[v];
  return Zt.isPlainObject(g) && g[v] ? w[g[v]] || w._ : typeof g == "string" && w[g] || w._;
}
function ra(n) {
  return n.oFeatures.bServerSide ? "ssp" : n.ajax ? "ajax" : "dom";
}
function x0(n, v, g) {
  var w = n.fnFormatNumber, I = n._iDisplayStart + 1, F = n._iDisplayLength, l = n.fnRecordsDisplay(), c = n.fnRecordsTotal(), t = F === -1;
  return v.replace(/_START_/g, w.call(n, I)).replace(/_END_/g, w.call(n, n.fnDisplayEnd())).replace(/_MAX_/g, w.call(n, c)).replace(/_TOTAL_/g, w.call(n, l)).replace(/_PAGE_/g, w.call(n, t ? 1 : Math.ceil(I / F))).replace(/_PAGES_/g, w.call(n, t ? 1 : Math.ceil(l / F))).replace(/_ENTRIES_/g, n.api.i18n("entries", "", g)).replace(/_ENTRIES-MAX_/g, n.api.i18n("entries", "", c)).replace(/_ENTRIES-TOTAL_/g, n.api.i18n("entries", "", l));
}
var b0 = [], Hn = Array.prototype, u1 = function(n) {
  var v, g, w = se.settings, I = ea(w, "nTable");
  if (n) {
    if (n.nTable && n.oFeatures)
      return [n];
    if (n.nodeName && n.nodeName.toLowerCase() === "table")
      return v = I.indexOf(n), v !== -1 ? [w[v]] : null;
    if (n && typeof n.settings == "function")
      return n.settings().toArray();
    typeof n == "string" ? g = Zt(n).get() : n instanceof Zt && (g = n.get());
  } else
    return [];
  if (g)
    return w.filter(function(F, l) {
      return g.includes(I[l]);
    });
};
Er = function(n, v) {
  if (!(this instanceof Er))
    return new Er(n, v);
  var g = [], w = function(l) {
    var c = u1(l);
    c && g.push.apply(g, c);
  };
  if (Array.isArray(n))
    for (var I = 0, F = n.length; I < F; I++)
      w(n[I]);
  else
    w(n);
  this.context = g.length > 1 ? ni(g) : g, v && this.push.apply(this, v), this.selector = {
    rows: null,
    cols: null,
    opts: null
  }, Er.extend(this, this, b0);
};
se.Api = Er;
Zt.extend(Er.prototype, {
  any: function() {
    return this.count() !== 0;
  },
  context: [],
  // array of table settings objects
  count: function() {
    return this.flatten().length;
  },
  each: function(n) {
    for (var v = 0, g = this.length; v < g; v++)
      n.call(this, this[v], v, this);
    return this;
  },
  eq: function(n) {
    var v = this.context;
    return v.length > n ? new Er(v[n], this[n]) : null;
  },
  filter: function(n) {
    var v = Hn.filter.call(this, n, this);
    return new Er(this.context, v);
  },
  flatten: function() {
    var n = [];
    return new Er(this.context, n.concat.apply(n, this.toArray()));
  },
  get: function(n) {
    return this[n];
  },
  join: Hn.join,
  includes: function(n) {
    return this.indexOf(n) !== -1;
  },
  indexOf: Hn.indexOf,
  iterator: function(n, v, g, w) {
    var I = [], F, l, c, t, s, r = this.context, a, o, f, u = this.selector;
    for (typeof n == "string" && (w = g, g = v, v = n, n = !1), l = 0, c = r.length; l < c; l++) {
      var h = new Er(r[l]);
      if (v === "table")
        F = g.call(h, r[l], l), F !== void 0 && I.push(F);
      else if (v === "columns" || v === "rows")
        F = g.call(h, r[l], this[l], l), F !== void 0 && I.push(F);
      else if (v === "every" || v === "column" || v === "column-rows" || v === "row" || v === "cell")
        for (o = this[l], v === "column-rows" && (a = gs(r[l], u.opts)), t = 0, s = o.length; t < s; t++)
          f = o[t], v === "cell" ? F = g.call(h, r[l], f.row, f.column, l, t) : F = g.call(h, r[l], f, l, t, a), F !== void 0 && I.push(F);
    }
    if (I.length || w) {
      var d = new Er(r, n ? I.concat.apply([], I) : I), i = d.selector;
      return i.rows = u.rows, i.cols = u.cols, i.opts = u.opts, d;
    }
    return this;
  },
  lastIndexOf: Hn.lastIndexOf,
  length: 0,
  map: function(n) {
    var v = Hn.map.call(this, n, this);
    return new Er(this.context, v);
  },
  pluck: function(n) {
    var v = se.util.get(n);
    return this.map(function(g) {
      return v(g);
    });
  },
  pop: Hn.pop,
  push: Hn.push,
  reduce: Hn.reduce,
  reduceRight: Hn.reduceRight,
  reverse: Hn.reverse,
  // Object with rows, columns and opts
  selector: null,
  shift: Hn.shift,
  slice: function() {
    return new Er(this.context, this);
  },
  sort: Hn.sort,
  splice: Hn.splice,
  toArray: function() {
    return Hn.slice.call(this);
  },
  to$: function() {
    return Zt(this);
  },
  toJQuery: function() {
    return Zt(this);
  },
  unique: function() {
    return new Er(this.context, ni(this.toArray()));
  },
  unshift: Hn.unshift
});
function c1(n, v, g) {
  return function() {
    var w = v.apply(n || this, arguments);
    return Er.extend(w, w, g.methodExt), w;
  };
}
function h1(n, v) {
  for (var g = 0, w = n.length; g < w; g++)
    if (n[g].name === v)
      return n[g];
  return null;
}
window.__apiStruct = b0;
Er.extend = function(n, v, g) {
  if (!(!g.length || !v || !(v instanceof Er) && !v.__dt_wrapper)) {
    var w, I, F;
    for (w = 0, I = g.length; w < I; w++)
      F = g[w], v[F.name] = F.type === "function" ? c1(n, F.val, F) : F.type === "object" ? {} : F.val, v[F.name].__dt_wrapper = !0, Er.extend(n, v[F.name], F.propExt);
  }
};
Er.register = Je = function(n, v) {
  if (Array.isArray(n)) {
    for (var g = 0, w = n.length; g < w; g++)
      Er.register(n[g], v);
    return;
  }
  var I, F, l = n.split("."), c = b0, t, s;
  for (I = 0, F = l.length; I < F; I++) {
    s = l[I].indexOf("()") !== -1, t = s ? l[I].replace("()", "") : l[I];
    var r = h1(c, t);
    r || (r = {
      name: t,
      val: {},
      methodExt: [],
      propExt: [],
      type: "object"
    }, c.push(r)), I === F - 1 ? (r.val = v, r.type = typeof v == "function" ? "function" : Zt.isPlainObject(v) ? "object" : "other") : c = s ? r.methodExt : r.propExt;
  }
};
Er.registerPlural = Kr = function(n, v, g) {
  Er.register(n, g), Er.register(v, function() {
    var w = g.apply(this, arguments);
    return w === this ? this : w instanceof Er ? w.length ? Array.isArray(w[0]) ? new Er(w.context, w[0]) : (
      // Array results are 'enhanced'
      w[0]
    ) : void 0 : w;
  });
};
var yf = function(n, v) {
  if (Array.isArray(n)) {
    var g = [];
    return n.forEach(function(I) {
      var F = yf(I, v);
      g.push.apply(g, F);
    }), g.filter(function(I) {
      return I;
    });
  }
  if (typeof n == "number")
    return [v[n]];
  var w = v.map(function(I) {
    return I.nTable;
  });
  return Zt(w).filter(n).map(function() {
    var I = w.indexOf(this);
    return v[I];
  }).toArray();
};
Je("tables()", function(n) {
  return n != null ? new Er(yf(n, this.context)) : this;
});
Je("table()", function(n) {
  var v = this.tables(n), g = v.context;
  return g.length ? new Er(g[0]) : v;
});
[
  ["nodes", "node", "nTable"],
  ["body", "body", "nTBody"],
  ["header", "header", "nTHead"],
  ["footer", "footer", "nTFoot"]
].forEach(function(n) {
  Kr(
    "tables()." + n[0] + "()",
    "table()." + n[1] + "()",
    function() {
      return this.iterator("table", function(v) {
        return v[n[2]];
      }, 1);
    }
  );
});
[
  ["header", "aoHeader"],
  ["footer", "aoFooter"]
].forEach(function(n) {
  Je("table()." + n[0] + ".structure()", function(v) {
    var g = this.columns(v).indexes().flatten(), w = this.context[0];
    return ff(w, w[n[1]], g);
  });
});
Kr("tables().containers()", "table().container()", function() {
  return this.iterator("table", function(n) {
    return n.nTableWrapper;
  }, 1);
});
Je("tables().every()", function(n) {
  var v = this;
  return this.iterator("table", function(g, w) {
    n.call(v.table(w), w);
  });
});
Je("caption()", function(n, v) {
  var g = this.context;
  if (n === void 0) {
    var w = g[0].captionNode;
    return w && g.length ? w.innerHTML : null;
  }
  return this.iterator("table", function(I) {
    var F = Zt(I.nTable), l = Zt(I.captionNode), c = Zt(I.nTableWrapper);
    if (l.length || (l = Zt("<caption/>").html(n), I.captionNode = l[0], v || (F.prepend(l), v = l.css("caption-side"))), l.html(n), v && (l.css("caption-side", v), l[0]._captionSide = v), c.find("div.dataTables_scroll").length) {
      var t = v === "top" ? "Head" : "Foot";
      c.find("div.dataTables_scroll" + t + " table").prepend(l);
    } else
      F.prepend(l);
  }, 1);
});
Je("caption.node()", function() {
  var n = this.context;
  return n.length ? n[0].captionNode : null;
});
Je("draw()", function(n) {
  return this.iterator("table", function(v) {
    n === "page" ? Ri(v) : (typeof n == "string" && (n = n !== "full-hold"), Pi(v, n === !1));
  });
});
Je("page()", function(n) {
  return n === void 0 ? this.page.info().page : this.iterator("table", function(v) {
    m0(v, n);
  });
});
Je("page.info()", function() {
  if (this.context.length !== 0) {
    var n = this.context[0], v = n._iDisplayStart, g = n.oFeatures.bPaginate ? n._iDisplayLength : -1, w = n.fnRecordsDisplay(), I = g === -1;
    return {
      page: I ? 0 : Math.floor(v / g),
      pages: I ? 1 : Math.ceil(w / g),
      start: v,
      end: n.fnDisplayEnd(),
      length: g,
      recordsTotal: n.fnRecordsTotal(),
      recordsDisplay: w,
      serverSide: ra(n) === "ssp"
    };
  }
});
Je("page.len()", function(n) {
  return n === void 0 ? this.context.length !== 0 ? this.context[0]._iDisplayLength : void 0 : this.iterator("table", function(v) {
    cf(v, n);
  });
});
var xf = function(n, v, g) {
  if (g) {
    var w = new Er(n);
    w.one("draw", function() {
      g(w.ajax.json());
    });
  }
  if (ra(n) == "ssp")
    Pi(n, v);
  else {
    fa(n, !0);
    var I = n.jqXHR;
    I && I.readyState !== 4 && I.abort(), g0(n, {}, function(F) {
      v0(n);
      for (var l = ds(n, F), c = 0, t = l.length; c < t; c++)
        ai(n, l[c]);
      Pi(n, v), as(n), fa(n, !1);
    });
  }
};
Je("ajax.json()", function() {
  var n = this.context;
  if (n.length > 0)
    return n[0].json;
});
Je("ajax.params()", function() {
  var n = this.context;
  if (n.length > 0)
    return n[0].oAjaxData;
});
Je("ajax.reload()", function(n, v) {
  return this.iterator("table", function(g) {
    xf(g, v === !1, n);
  });
});
Je("ajax.url()", function(n) {
  var v = this.context;
  return n === void 0 ? v.length === 0 ? void 0 : (v = v[0], Zt.isPlainObject(v.ajax) ? v.ajax.url : v.ajax) : this.iterator("table", function(g) {
    Zt.isPlainObject(g.ajax) ? g.ajax.url = n : g.ajax = n;
  });
});
Je("ajax.url().load()", function(n, v) {
  return this.iterator("table", function(g) {
    xf(g, v === !1, n);
  });
});
var w0 = function(n, v, g, w, I) {
  var F = [], l, c, t, s, r, a, o = typeof v;
  for ((!v || o === "string" || o === "function" || v.length === void 0) && (v = [v]), t = 0, s = v.length; t < s; t++)
    for (c = v[t] && v[t].split && !v[t].match(/[[(:]/) ? v[t].split(",") : [v[t]], r = 0, a = c.length; r < a; r++)
      l = g(typeof c[r] == "string" ? c[r].trim() : c[r]), l = l.filter(function(u) {
        return u != null;
      }), l && l.length && (F = F.concat(l));
  var f = Yr.selector[n];
  if (f.length)
    for (t = 0, s = f.length; t < s; t++)
      F = f[t](w, I, F);
  return ni(F);
}, S0 = function(n) {
  return n || (n = {}), n.filter && n.search === void 0 && (n.search = n.filter), Zt.extend({
    search: "none",
    order: "current",
    page: "all"
  }, n);
}, C0 = function(n) {
  let v = new Er(n.context[0]);
  return n.length && v.push(n[0]), v.selector = n.selector, v.length && v[0].length > 1 && v[0].splice(1), v;
}, gs = function(n, v) {
  var g, w, I, F = [], l = n.aiDisplay, c = n.aiDisplayMaster, t = v.search, s = v.order, r = v.page;
  if (ra(n) == "ssp")
    return t === "removed" ? [] : Ha(0, c.length);
  if (r == "current")
    for (g = n._iDisplayStart, w = n.fnDisplayEnd(); g < w; g++)
      F.push(l[g]);
  else if (s == "current" || s == "applied") {
    if (t == "none")
      F = c.slice();
    else if (t == "applied")
      F = l.slice();
    else if (t == "removed") {
      var a = {};
      for (g = 0, w = l.length; g < w; g++)
        a[l[g]] = null;
      c.forEach(function(f) {
        Object.prototype.hasOwnProperty.call(a, f) || F.push(f);
      });
    }
  } else if (s == "index" || s == "original")
    for (g = 0, w = n.aoData.length; g < w; g++)
      n.aoData[g] && (t == "none" ? F.push(g) : (I = l.indexOf(g), (I === -1 && t == "removed" || I >= 0 && t == "applied") && F.push(g)));
  else if (typeof s == "number") {
    var o = y0(n, s, "asc");
    if (t === "none")
      F = o;
    else
      for (g = 0; g < o.length; g++)
        I = l.indexOf(o[g]), (I === -1 && t == "removed" || I >= 0 && t == "applied") && F.push(o[g]);
  }
  return F;
}, d1 = function(n, v, g) {
  var w, I = function(c) {
    var t = _l(c), s = n.aoData;
    if (t !== null && !g)
      return [t];
    if (w || (w = gs(n, g)), t !== null && w.indexOf(t) !== -1)
      return [t];
    if (c == null || c === "")
      return w;
    if (typeof c == "function")
      return w.map(function(h) {
        var d = s[h];
        return c(h, d._aData, d.nTr) ? h : null;
      });
    if (c.nodeName) {
      var r = c._DT_RowIndex, a = c._DT_CellIndex;
      if (r !== void 0)
        return s[r] && s[r].nTr === c ? [r] : [];
      if (a)
        return s[a.row] && s[a.row].nTr === c.parentNode ? [a.row] : [];
      var o = Zt(c).closest("*[data-dt-row]");
      return o.length ? [o.data("dt-row")] : [];
    }
    if (typeof c == "string" && c.charAt(0) === "#") {
      var f = n.aIds[c.replace(/^#/, "")];
      if (f !== void 0)
        return [f.idx];
    }
    var u = tf(
      po(n.aoData, w, "nTr")
    );
    return Zt(u).filter(c).map(function() {
      return this._DT_RowIndex;
    }).toArray();
  }, F = w0("row", v, I, n, g);
  if (g.order === "current" || g.order === "applied") {
    var l = n.aiDisplayMaster;
    F.sort(function(c, t) {
      return l.indexOf(c) - l.indexOf(t);
    });
  }
  return F;
};
Je("rows()", function(n, v) {
  n === void 0 ? n = "" : Zt.isPlainObject(n) && (v = n, n = ""), v = S0(v);
  var g = this.iterator("table", function(w) {
    return d1(w, n, v);
  }, 1);
  return g.selector.rows = n, g.selector.opts = v, g;
});
Je("rows().nodes()", function() {
  return this.iterator("row", function(n, v) {
    return n.aoData[v].nTr || void 0;
  }, 1);
});
Je("rows().data()", function() {
  return this.iterator(!0, "rows", function(n, v) {
    return po(n.aoData, v, "_aData");
  }, 1);
});
Kr("rows().cache()", "row().cache()", function(n) {
  return this.iterator("row", function(v, g) {
    var w = v.aoData[g];
    return n === "search" ? w._aFilterData : w._aSortData;
  }, 1);
});
Kr("rows().invalidate()", "row().invalidate()", function(n) {
  return this.iterator("row", function(v, g) {
    hs(v, g, n);
  });
});
Kr("rows().indexes()", "row().index()", function() {
  return this.iterator("row", function(n, v) {
    return v;
  }, 1);
});
Kr("rows().ids()", "row().id()", function(n) {
  for (var v = [], g = this.context, w = 0, I = g.length; w < I; w++)
    for (var F = 0, l = this[w].length; F < l; F++) {
      var c = g[w].rowIdFn(g[w].aoData[this[w][F]]._aData);
      v.push((n === !0 ? "#" : "") + c);
    }
  return new Er(g, v);
});
Kr("rows().remove()", "row().remove()", function() {
  return this.iterator("row", function(n, v) {
    var g = n.aoData, w = g[v], I = n.aiDisplayMaster.indexOf(v);
    I !== -1 && n.aiDisplayMaster.splice(I, 1), I = n.aiDisplay.indexOf(v), I !== -1 && n.aiDisplay.splice(I, 1), n._iRecordsDisplay > 0 && n._iRecordsDisplay--, mf(n);
    var F = n.rowIdFn(w._aData);
    F !== void 0 && delete n.aIds[F], g[v] = null;
  }), this;
});
Je("rows.add()", function(n) {
  var v = this.iterator("table", function(w) {
    var I, F, l, c = [];
    for (F = 0, l = n.length; F < l; F++)
      I = n[F], I.nodeName && I.nodeName.toUpperCase() === "TR" ? c.push(d0(w, I)[0]) : c.push(ai(w, I));
    return c;
  }, 1), g = this.rows(-1);
  return g.pop(), g.push.apply(g, v), g;
});
Je("row()", function(n, v) {
  return C0(this.rows(n, v));
});
Je("row().data()", function(n) {
  var v = this.context;
  if (n === void 0)
    return v.length && this.length && this[0].length ? v[0].aoData[this[0]]._aData : void 0;
  var g = v[0].aoData[this[0]];
  return g._aData = n, Array.isArray(n) && g.nTr && g.nTr.id && ti(v[0].rowId)(n, g.nTr.id), hs(v[0], this[0], "data"), this;
});
Je("row().node()", function() {
  var n = this.context;
  return n.length && this.length && this[0].length && n[0].aoData[this[0]].nTr || null;
});
Je("row.add()", function(n) {
  n instanceof Zt && n.length && (n = n[0]);
  var v = this.iterator("table", function(g) {
    return n.nodeName && n.nodeName.toUpperCase() === "TR" ? d0(g, n)[0] : ai(g, n);
  });
  return this.row(v[0]);
});
Zt(document).on("plugin-init.dt", function(n, v) {
  var g = new Er(v);
  g.on("stateSaveParams.DT", function(w, I, F) {
    for (var l = I.rowIdFn, c = I.aiDisplayMaster, t = [], s = 0; s < c.length; s++) {
      var r = c[s], a = I.aoData[r];
      a._detailsShow && t.push("#" + l(a._aData));
    }
    F.childRows = t;
  }), g.on("stateLoaded.DT", function(w, I, F) {
    Ml(g, F);
  }), Ml(g, g.state.loaded());
});
var Ml = function(n, v) {
  v && v.childRows && n.rows(v.childRows.map(function(g) {
    return g.replace(/:/g, "\\:");
  })).every(function() {
    Ur(n.settings()[0], null, "requestChild", [this]);
  });
}, v1 = function(n, v, g, w) {
  var I = [], F = function(l, c) {
    if (Array.isArray(l) || l instanceof Zt) {
      for (var t = 0, s = l.length; t < s; t++)
        F(l[t], c);
      return;
    }
    if (l.nodeName && l.nodeName.toLowerCase() === "tr")
      l.setAttribute("data-dt-row", v.idx), I.push(l);
    else {
      var r = Zt("<tr><td></td></tr>").attr("data-dt-row", v.idx).addClass(c);
      Zt("td", r).addClass(c).html(l)[0].colSpan = cs(n), I.push(r[0]);
    }
  };
  F(g, w), v._details && v._details.detach(), v._details = Zt(I), v._detailsShow && v._details.insertAfter(v.nTr);
}, bf = se.util.throttle(
  function(n) {
    ps(n[0]);
  },
  500
), A0 = function(n, v) {
  var g = n.context;
  if (g.length) {
    var w = g[0].aoData[v !== void 0 ? v : n[0]];
    w && w._details && (w._details.remove(), w._detailsShow = void 0, w._details = void 0, Zt(w.nTr).removeClass("dt-hasChild"), bf(g));
  }
}, wf = function(n, v) {
  var g = n.context;
  if (g.length && n.length) {
    var w = g[0].aoData[n[0]];
    w._details && (w._detailsShow = v, v ? (w._details.insertAfter(w.nTr), Zt(w.nTr).addClass("dt-hasChild")) : (w._details.detach(), Zt(w.nTr).removeClass("dt-hasChild")), Ur(g[0], null, "childRow", [v, n.row(n[0])]), p1(g[0]), bf(g));
  }
}, p1 = function(n) {
  var v = new Er(n), g = ".dt.DT_details", w = "draw" + g, I = "column-sizing" + g, F = "destroy" + g, l = n.aoData;
  v.off(w + " " + I + " " + F), ea(l, "_details").length > 0 && (v.on(w, function(c, t) {
    n === t && v.rows({ page: "current" }).eq(0).each(function(s) {
      var r = l[s];
      r._detailsShow && r._details.insertAfter(r.nTr);
    });
  }), v.on(I, function(c, t) {
    if (n === t)
      for (var s, r = cs(t), a = 0, o = l.length; a < o; a++)
        s = l[a], s._details && s._details.each(function() {
          var f = Zt(this).children("td");
          f.length == 1 && f.attr("colspan", r);
        });
  }), v.on(F, function(c, t) {
    if (n === t)
      for (var s = 0, r = l.length; s < r; s++)
        l[s]._details && A0(v, s);
  }));
}, g1 = "", mo = g1 + "row().child", ms = mo + "()";
Je(ms, function(n, v) {
  var g = this.context;
  return n === void 0 ? g.length && this.length ? g[0].aoData[this[0]]._details : void 0 : (n === !0 ? this.child.show() : n === !1 ? A0(this) : g.length && this.length && v1(g[0], g[0].aoData[this[0]], n, v), this);
});
Je([
  mo + ".show()",
  ms + ".show()"
  // only when `child()` was called with parameters (without
], function() {
  return wf(this, !0), this;
});
Je([
  mo + ".hide()",
  ms + ".hide()"
  // only when `child()` was called with parameters (without
], function() {
  return wf(this, !1), this;
});
Je([
  mo + ".remove()",
  ms + ".remove()"
  // only when `child()` was called with parameters (without
], function() {
  return A0(this), this;
});
Je(mo + ".isShown()", function() {
  var n = this.context;
  return n.length && this.length && n[0].aoData[this[0]]._detailsShow || !1;
});
var m1 = /^([^:]+):(name|title|visIdx|visible)$/, E0 = function(n, v, g, w, I, F) {
  for (var l = [], c = 0, t = I.length; c < t; c++)
    l.push(ua(n, I[c], v, F));
  return l;
}, y1 = function(n, v, g) {
  var w = n.aoColumns, I = ea(w, "sName"), F = ea(w, "sTitle"), l = se.util.get("[].[].cell")(n.aoHeader), c = ni(f0([], l)), t = function(s) {
    var r = _l(s);
    if (s === "")
      return Ha(w.length);
    if (r !== null)
      return [
        r >= 0 ? r : (
          // Count from left
          w.length + r
        )
        // Count from right (+ because its a negative value)
      ];
    if (typeof s == "function") {
      var a = gs(n, g);
      return w.map(function(i, p) {
        return s(
          p,
          E0(n, p, 0, 0, a)
        ) ? p : null;
      });
    }
    var o = typeof s == "string" ? s.match(m1) : "";
    if (o)
      switch (o[2]) {
        case "visIdx":
        case "visible":
          var f = parseInt(o[1], 10);
          if (f < 0) {
            var u = w.map(function(i, p) {
              return i.bVisible ? p : null;
            });
            return [u[u.length + f]];
          }
          return [nf(n, f)];
        case "name":
          return I.map(function(i, p) {
            return i === o[1] ? p : null;
          });
        case "title":
          return F.map(function(i, p) {
            return i === o[1] ? p : null;
          });
        default:
          return [];
      }
    if (s.nodeName && s._DT_CellIndex)
      return [s._DT_CellIndex.column];
    var h = Zt(c).filter(s).map(function() {
      return h0(this);
    }).toArray();
    if (h.length || !s.nodeName)
      return h;
    var d = Zt(s).closest("*[data-dt-column]");
    return d.length ? [d.data("dt-column")] : [];
  };
  return w0("column", v, t, n, g);
}, x1 = function(n, v, g) {
  var w = n.aoColumns, I = w[v], F = n.aoData, l, c, t, s;
  if (g === void 0)
    return I.bVisible;
  if (I.bVisible === g)
    return !1;
  if (g) {
    var r = ea(w, "bVisible").indexOf(!0, v + 1);
    for (c = 0, t = F.length; c < t; c++)
      F[c] && (s = F[c].nTr, l = F[c].anCells, s && s.insertBefore(l[v], l[r] || null));
  } else
    Zt(ea(n.aoData, "anCells", v)).detach();
  return I.bVisible = g, vf(n), !0;
};
Je("columns()", function(n, v) {
  n === void 0 ? n = "" : Zt.isPlainObject(n) && (v = n, n = ""), v = S0(v);
  var g = this.iterator("table", function(w) {
    return y1(w, n, v);
  }, 1);
  return g.selector.cols = n, g.selector.opts = v, g;
});
Kr("columns().header()", "column().header()", function(n) {
  return this.iterator("column", function(v, g) {
    var w = v.aoHeader, I = n !== void 0 ? n : v.bSortCellsTop ? 0 : w.length - 1;
    return w[I][g].cell;
  }, 1);
});
Kr("columns().footer()", "column().footer()", function(n) {
  return this.iterator("column", function(v, g) {
    var w = v.aoFooter;
    return w.length ? v.aoFooter[n !== void 0 ? n : 0][g].cell : null;
  }, 1);
});
Kr("columns().data()", "column().data()", function() {
  return this.iterator("column-rows", E0, 1);
});
Kr("columns().render()", "column().render()", function(n) {
  return this.iterator("column-rows", function(v, g, w, I, F) {
    return E0(v, g, w, I, F, n);
  }, 1);
});
Kr("columns().dataSrc()", "column().dataSrc()", function() {
  return this.iterator("column", function(n, v) {
    return n.aoColumns[v].mData;
  }, 1);
});
Kr("columns().cache()", "column().cache()", function(n) {
  return this.iterator("column-rows", function(v, g, w, I, F) {
    return po(
      v.aoData,
      F,
      n === "search" ? "_aFilterData" : "_aSortData",
      g
    );
  }, 1);
});
Kr("columns().init()", "column().init()", function() {
  return this.iterator("column", function(n, v) {
    return n.aoColumns[v];
  }, 1);
});
Kr("columns().nodes()", "column().nodes()", function() {
  return this.iterator("column-rows", function(n, v, g, w, I) {
    return po(n.aoData, I, "anCells", v);
  }, 1);
});
Kr("columns().titles()", "column().title()", function(n, v) {
  return this.iterator("column", function(g, w) {
    typeof n == "number" && (v = n, n = void 0);
    var I = Zt("span.dt-column-title", this.column(w).header(v));
    return n !== void 0 ? (I.html(n), this) : I.html();
  }, 1);
});
Kr("columns().types()", "column().type()", function() {
  return this.iterator("column", function(n, v) {
    var g = n.aoColumns[v].sType;
    return g || c0(n), g;
  }, 1);
});
Kr("columns().visible()", "column().visible()", function(n, v) {
  var g = this, w = [], I = this.iterator("column", function(F, l) {
    if (n === void 0)
      return F.aoColumns[l].bVisible;
    x1(F, l, n) && w.push(l);
  });
  return n !== void 0 && this.iterator("table", function(F) {
    ns(F, F.aoHeader), ns(F, F.aoFooter), F.aiDisplay.length || Zt(F.nTBody).find("td[colspan]").attr("colspan", cs(F)), ps(F), g.iterator("column", function(l, c) {
      w.includes(c) && Ur(l, null, "column-visibility", [l, c, n, v]);
    }), w.length && (v === void 0 || v) && g.columns.adjust();
  }), I;
});
Kr("columns().widths()", "column().width()", function() {
  var n = this.columns(":visible").count(), v = Zt("<tr>").html("<td>" + Array(n).join("</td><td>") + "</td>");
  Zt(this.table().body()).append(v);
  var g = v.children().map(function() {
    return Zt(this).outerWidth();
  });
  return v.remove(), this.iterator("column", function(w, I) {
    var F = go(w, I);
    return F !== null ? g[F] : 0;
  }, 1);
});
Kr("columns().indexes()", "column().index()", function(n) {
  return this.iterator("column", function(v, g) {
    return n === "visible" ? go(v, g) : g;
  }, 1);
});
Je("columns.adjust()", function() {
  return this.iterator("table", function(n) {
    us(n);
  }, 1);
});
Je("column.index()", function(n, v) {
  if (this.context.length !== 0) {
    var g = this.context[0];
    if (n === "fromVisible" || n === "toData")
      return nf(g, v);
    if (n === "fromData" || n === "toVisible")
      return go(g, v);
  }
});
Je("column()", function(n, v) {
  return C0(this.columns(n, v));
});
var b1 = function(n, v, g) {
  var w = n.aoData, I = gs(n, g), F = tf(po(w, I, "anCells")), l = Zt(f0([], F)), c, t = n.aoColumns.length, s, r, a, o, f, u, h = function(d) {
    var i = typeof d == "function";
    if (d == null || i) {
      for (s = [], r = 0, a = I.length; r < a; r++)
        for (c = I[r], o = 0; o < t; o++)
          f = {
            row: c,
            column: o
          }, i ? (u = w[c], d(f, ua(n, c, o), u.anCells ? u.anCells[o] : null) && s.push(f)) : s.push(f);
      return s;
    }
    if (Zt.isPlainObject(d))
      return d.column !== void 0 && d.row !== void 0 && I.indexOf(d.row) !== -1 ? [d] : [];
    var p = l.filter(d).map(function(y, m) {
      return {
        // use a new object, in case someone changes the values
        row: m._DT_CellIndex.row,
        column: m._DT_CellIndex.column
      };
    }).toArray();
    return p.length || !d.nodeName ? p : (u = Zt(d).closest("*[data-dt-row]"), u.length ? [{
      row: u.data("dt-row"),
      column: u.data("dt-column")
    }] : []);
  };
  return w0("cell", v, h, n, g);
};
Je("cells()", function(n, v, g) {
  if (Zt.isPlainObject(n) && (n.row === void 0 ? (g = n, n = null) : (g = v, v = null)), Zt.isPlainObject(v) && (g = v, v = null), v == null)
    return this.iterator("table", function(o) {
      return b1(o, n, S0(g));
    });
  var w = g ? {
    page: g.page,
    order: g.order,
    search: g.search
  } : {}, I = this.columns(v, w), F = this.rows(n, w), l, c, t, s, r = this.iterator("table", function(o, f) {
    var u = [];
    for (l = 0, c = F[f].length; l < c; l++)
      for (t = 0, s = I[f].length; t < s; t++)
        u.push({
          row: F[f][l],
          column: I[f][t]
        });
    return u;
  }, 1), a = g && g.selected ? this.cells(r, g) : r;
  return Zt.extend(a.selector, {
    cols: v,
    rows: n,
    opts: g
  }), a;
});
Kr("cells().nodes()", "cell().node()", function() {
  return this.iterator("cell", function(n, v, g) {
    var w = n.aoData[v];
    return w && w.anCells ? w.anCells[g] : void 0;
  }, 1);
});
Je("cells().data()", function() {
  return this.iterator("cell", function(n, v, g) {
    return ua(n, v, g);
  }, 1);
});
Kr("cells().cache()", "cell().cache()", function(n) {
  return n = n === "search" ? "_aFilterData" : "_aSortData", this.iterator("cell", function(v, g, w) {
    return v.aoData[g][n][w];
  }, 1);
});
Kr("cells().render()", "cell().render()", function(n) {
  return this.iterator("cell", function(v, g, w) {
    return ua(v, g, w, n);
  }, 1);
});
Kr("cells().indexes()", "cell().index()", function() {
  return this.iterator("cell", function(n, v, g) {
    return {
      row: v,
      column: g,
      columnVisible: go(n, g)
    };
  }, 1);
});
Kr("cells().invalidate()", "cell().invalidate()", function(n) {
  return this.iterator("cell", function(v, g, w) {
    hs(v, g, n, w);
  });
});
Je("cell()", function(n, v, g) {
  return C0(this.cells(n, v, g));
});
Je("cell().data()", function(n) {
  var v = this.context, g = this[0];
  return n === void 0 ? v.length && g.length ? ua(v[0], g[0].row, g[0].column) : void 0 : (Xd(v[0], g[0].row, g[0].column, n), hs(v[0], g[0].row, "data", g[0].column), this);
});
Je("order()", function(n, v) {
  var g = this.context, w = Array.prototype.slice.call(arguments);
  return n === void 0 ? g.length !== 0 ? g[0].aaSorting : void 0 : (typeof n == "number" ? n = [[n, v]] : w.length > 1 && (n = w), this.iterator("table", function(I) {
    I.aaSorting = Array.isArray(n) ? n.slice() : n;
  }));
});
Je("order.listener()", function(n, v, g) {
  return this.iterator("table", function(w) {
    pf(w, n, {}, v, g);
  });
});
Je("order.fixed()", function(n) {
  if (!n) {
    var v = this.context, g = v.length ? v[0].aaSortingFixed : void 0;
    return Array.isArray(g) ? { pre: g } : g;
  }
  return this.iterator("table", function(w) {
    w.aaSortingFixed = Zt.extend(!0, {}, n);
  });
});
Je([
  "columns().order()",
  "column().order()"
], function(n) {
  var v = this;
  return n ? this.iterator("table", function(g, w) {
    g.aaSorting = v[w].map(function(I) {
      return [I, n];
    });
  }) : this.iterator("column", function(g, w) {
    for (var I = vs(g), F = 0, l = I.length; F < l; F++)
      if (I[F].col === w)
        return I[F].dir;
    return null;
  }, 1);
});
Kr("columns().orderable()", "column().orderable()", function(n) {
  return this.iterator("column", function(v, g) {
    var w = v.aoColumns[g];
    return n ? w.asSorting : w.bSortable;
  }, 1);
});
Je("processing()", function(n) {
  return this.iterator("table", function(v) {
    fa(v, n);
  });
});
Je("search()", function(n, v, g, w) {
  var I = this.context;
  return n === void 0 ? I.length !== 0 ? I[0].oPreviousSearch.search : void 0 : this.iterator("table", function(F) {
    F.oFeatures.bFilter && (typeof v == "object" ? uo(F, Zt.extend(F.oPreviousSearch, v, {
      search: n
    })) : uo(F, Zt.extend(F.oPreviousSearch, {
      search: n,
      regex: v === null ? !1 : v,
      smart: g === null ? !0 : g,
      caseInsensitive: w === null ? !0 : w
    })));
  });
});
Je("search.fixed()", function(n, v) {
  var g = this.iterator(!0, "table", function(w) {
    var I = w.searchFixed;
    if (n) {
      if (v === void 0)
        return I[n];
      v === null ? delete I[n] : I[n] = v;
    } else
      return Object.keys(I);
    return this;
  });
  return n !== void 0 && v === void 0 ? g[0] : g;
});
Kr(
  "columns().search()",
  "column().search()",
  function(n, v, g, w) {
    return this.iterator("column", function(I, F) {
      var l = I.aoPreSearchCols;
      if (n === void 0)
        return l[F].search;
      I.oFeatures.bFilter && (typeof v == "object" ? Zt.extend(l[F], v, {
        search: n
      }) : Zt.extend(l[F], {
        search: n,
        regex: v === null ? !1 : v,
        smart: g === null ? !0 : g,
        caseInsensitive: w === null ? !0 : w
      }), uo(I, I.oPreviousSearch));
    });
  }
);
Je(
  [
    "columns().search.fixed()",
    "column().search.fixed()"
  ],
  function(n, v) {
    var g = this.iterator(!0, "column", function(w, I) {
      var F = w.aoColumns[I].searchFixed;
      if (n) {
        if (v === void 0)
          return F[n];
        v === null ? delete F[n] : F[n] = v;
      } else
        return Object.keys(F);
      return this;
    });
    return n !== void 0 && v === void 0 ? g[0] : g;
  }
);
Je("state()", function(n, v) {
  if (!n)
    return this.context.length ? this.context[0].oSavedState : null;
  var g = Zt.extend(!0, {}, n);
  return this.iterator("table", function(w) {
    v !== !1 && (g.time = +/* @__PURE__ */ new Date() + 100), e0(w, g, function() {
    });
  });
});
Je("state.clear()", function() {
  return this.iterator("table", function(n) {
    n.fnStateSaveCallback.call(n.oInstance, n, {});
  });
});
Je("state.loaded()", function() {
  return this.context.length ? this.context[0].oLoadedState : null;
});
Je("state.save()", function() {
  return this.iterator("table", function(n) {
    ps(n);
  });
});
se.use = function(n, v) {
  v === "lib" || n.fn ? Zt = n : v == "win" || n.document ? (window = n, document = n.document) : (v === "datetime" || n.type === "DateTime") && (se.DateTime = n);
};
se.factory = function(n, v) {
  var g = !1;
  return n && n.document && (window = n, document = n.document), v && v.fn && v.fn.jquery && (Zt = v, g = !0), g;
};
se.versionCheck = function(n, v) {
  for (var g = v ? v.split(".") : se.version.split("."), w = n.split("."), I, F, l = 0, c = w.length; l < c; l++)
    if (I = parseInt(g[l], 10) || 0, F = parseInt(w[l], 10) || 0, I !== F)
      return I > F;
  return !0;
};
se.isDataTable = function(n) {
  var v = Zt(n).get(0), g = !1;
  return n instanceof se.Api ? !0 : (Zt.each(se.settings, function(w, I) {
    var F = I.nScrollHead ? Zt("table", I.nScrollHead)[0] : null, l = I.nScrollFoot ? Zt("table", I.nScrollFoot)[0] : null;
    (I.nTable === v || F === v || l === v) && (g = !0);
  }), g);
};
se.tables = function(n) {
  var v = !1;
  Zt.isPlainObject(n) && (v = n.api, n = n.visible);
  var g = se.settings.filter(function(w) {
    return !!(!n || n && Zt(w.nTable).is(":visible"));
  }).map(function(w) {
    return w.nTable;
  });
  return v ? new Er(g) : g;
};
se.camelToHungarian = ja;
Je("$()", function(n, v) {
  var g = this.rows(v).nodes(), w = Zt(g);
  return Zt([].concat(
    w.filter(n).toArray(),
    w.find(n).toArray()
  ));
});
Zt.each(["on", "one", "off"], function(n, v) {
  Je(v + "()", function() {
    var g = Array.prototype.slice.call(arguments);
    g[0] = g[0].split(/\s/).map(function(I) {
      return I.match(/\.dt\b/) ? I : I + ".dt";
    }).join(" ");
    var w = Zt(this.tables().nodes());
    return w[v].apply(w, g), this;
  });
});
Je("clear()", function() {
  return this.iterator("table", function(n) {
    v0(n);
  });
});
Je("error()", function(n) {
  return this.iterator("table", function(v) {
    la(v, 0, n);
  });
});
Je("settings()", function() {
  return new Er(this.context, this.context);
});
Je("init()", function() {
  var n = this.context;
  return n.length ? n[0].oInit : null;
});
Je("data()", function() {
  return this.iterator("table", function(n) {
    return ea(n.aoData, "_aData");
  }).flatten();
});
Je("trigger()", function(n, v, g) {
  return this.iterator("table", function(w) {
    return Ur(w, null, n, v, g);
  }).flatten();
});
Je("ready()", function(n) {
  var v = this.context;
  return n ? this.tables().every(function() {
    this.context[0]._bInitComplete ? n.call(this) : this.on("init", function() {
      n.call(this);
    });
  }) : v.length ? v[0]._bInitComplete || !1 : null;
});
Je("destroy()", function(n) {
  return n = n || !1, this.iterator("table", function(v) {
    var g = v.oClasses, w = v.nTable, I = v.nTBody, F = v.nTHead, l = v.nTFoot, c = Zt(w), t = Zt(I), s = Zt(v.nTableWrapper), r = v.aoData.map(function(d) {
      return d ? d.nTr : null;
    }), a = g.order;
    v.bDestroying = !0, Ur(v, "aoDestroyCallback", "destroy", [v], !0), n || new Er(v).columns().visible(!0), s.off(".DT").find(":not(tbody *)").off(".DT"), Zt(window).off(".DT-" + v.sInstance), w != F.parentNode && (c.children("thead").detach(), c.append(F)), l && w != l.parentNode && (c.children("tfoot").detach(), c.append(l)), v.aaSorting = [], v.aaSortingFixed = [], t0(v), Zt("th, td", F).removeClass(
      a.canAsc + " " + a.canDesc + " " + a.isAsc + " " + a.isDesc
    ).css("width", ""), t.children().detach(), t.append(r);
    var o = v.nTableWrapper.parentNode, f = v.nTableWrapper.nextSibling, u = n ? "remove" : "detach";
    c[u](), s[u](), !n && o && (o.insertBefore(w, f), c.css("width", v.sDestroyWidth).removeClass(g.table));
    var h = se.settings.indexOf(v);
    h !== -1 && se.settings.splice(h, 1);
  });
});
Zt.each(["column", "row", "cell"], function(n, v) {
  Je(v + "s().every()", function(g) {
    var w = this.selector.opts, I = this, F, l = 0;
    return this.iterator("every", function(c, t, s) {
      F = I[v](t, w), v === "cell" ? g.call(F, F[0][0].row, F[0][0].column, s, l) : g.call(F, t, s, l), l++;
    });
  });
});
Je("i18n()", function(n, v, g) {
  var w = this.context[0], I = Oi(n)(w.oLanguage);
  return I === void 0 && (I = v), Zt.isPlainObject(I) && (I = g !== void 0 && I[g] !== void 0 ? I[g] : I._), typeof I == "string" ? I.replace("%d", g) : I;
});
se.version = "2.0.0";
se.settings = [];
se.models = {};
se.models.oSearch = {
  /**
   * Flag to indicate if the filtering should be case insensitive or not
   */
  caseInsensitive: !0,
  /**
   * Applied search term
   */
  search: "",
  /**
   * Flag to indicate if the search term should be interpreted as a
   * regular expression (true) or not (false) and therefore and special
   * regex characters escaped.
   */
  regex: !1,
  /**
   * Flag to indicate if DataTables is to use its smart filtering or not.
   */
  smart: !0,
  /**
   * Flag to indicate if DataTables should only trigger a search when
   * the return key is pressed.
   */
  return: !1
};
se.models.oRow = {
  /**
   * TR element for the row
   */
  nTr: null,
  /**
   * Array of TD elements for each row. This is null until the row has been
   * created.
   */
  anCells: null,
  /**
   * Data object from the original data source for the row. This is either
   * an array if using the traditional form of DataTables, or an object if
   * using mData options. The exact type will depend on the passed in
   * data from the data source, or will be an array if using DOM a data
   * source.
   */
  _aData: [],
  /**
   * Sorting data cache - this array is ostensibly the same length as the
   * number of columns (although each index is generated only as it is
   * needed), and holds the data that is used for sorting each column in the
   * row. We do this cache generation at the start of the sort in order that
   * the formatting of the sort data need be done only once for each cell
   * per sort. This array should not be read from or written to by anything
   * other than the master sorting methods.
   */
  _aSortData: null,
  /**
   * Per cell filtering data cache. As per the sort data cache, used to
   * increase the performance of the filtering in DataTables
   */
  _aFilterData: null,
  /**
   * Filtering data cache. This is the same as the cell filtering cache, but
   * in this case a string rather than an array. This is easily computed with
   * a join on `_aFilterData`, but is provided as a cache so the join isn't
   * needed on every search (memory traded for performance)
   */
  _sFilterRow: null,
  /**
   * Denote if the original data source was from the DOM, or the data source
   * object. This is used for invalidating data, so DataTables can
   * automatically read data from the original source, unless uninstructed
   * otherwise.
   */
  src: null,
  /**
   * Index in the aoData array. This saves an indexOf lookup when we have the
   * object, but want to know the index
   */
  idx: -1,
  /**
   * Cached display value
   */
  displayData: null
};
se.models.oColumn = {
  /**
   * Column index.
   */
  idx: null,
  /**
   * A list of the columns that sorting should occur on when this column
   * is sorted. That this property is an array allows multi-column sorting
   * to be defined for a column (for example first name / last name columns
   * would benefit from this). The values are integers pointing to the
   * columns to be sorted on (typically it will be a single integer pointing
   * at itself, but that doesn't need to be the case).
   */
  aDataSort: null,
  /**
   * Define the sorting directions that are applied to the column, in sequence
   * as the column is repeatedly sorted upon - i.e. the first value is used
   * as the sorting direction when the column if first sorted (clicked on).
   * Sort it again (click again) and it will move on to the next index.
   * Repeat until loop.
   */
  asSorting: null,
  /**
   * Flag to indicate if the column is searchable, and thus should be included
   * in the filtering or not.
   */
  bSearchable: null,
  /**
   * Flag to indicate if the column is sortable or not.
   */
  bSortable: null,
  /**
   * Flag to indicate if the column is currently visible in the table or not
   */
  bVisible: null,
  /**
   * Store for manual type assignment using the `column.type` option. This
   * is held in store so we can manipulate the column's `sType` property.
   */
  _sManualType: null,
  /**
   * Flag to indicate if HTML5 data attributes should be used as the data
   * source for filtering or sorting. True is either are.
   */
  _bAttrSrc: !1,
  /**
   * Developer definable function that is called whenever a cell is created (Ajax source,
   * etc) or processed for input (DOM source). This can be used as a compliment to mRender
   * allowing you to modify the DOM element (add background colour for example) when the
   * element is available.
   */
  fnCreatedCell: null,
  /**
   * Function to get data from a cell in a column. You should <b>never</b>
   * access data directly through _aData internally in DataTables - always use
   * the method attached to this property. It allows mData to function as
   * required. This function is automatically assigned by the column
   * initialisation method
   */
  fnGetData: null,
  /**
   * Function to set data for a cell in the column. You should <b>never</b>
   * set the data directly to _aData internally in DataTables - always use
   * this method. It allows mData to function as required. This function
   * is automatically assigned by the column initialisation method
   */
  fnSetData: null,
  /**
   * Property to read the value for the cells in the column from the data
   * source array / object. If null, then the default content is used, if a
   * function is given then the return from the function is used.
   */
  mData: null,
  /**
   * Partner property to mData which is used (only when defined) to get
   * the data - i.e. it is basically the same as mData, but without the
   * 'set' option, and also the data fed to it is the result from mData.
   * This is the rendering method to match the data method of mData.
   */
  mRender: null,
  /**
   * The class to apply to all TD elements in the table's TBODY for the column
   */
  sClass: null,
  /**
   * When DataTables calculates the column widths to assign to each column,
   * it finds the longest string in each column and then constructs a
   * temporary table and reads the widths from that. The problem with this
   * is that "mmm" is much wider then "iiii", but the latter is a longer
   * string - thus the calculation can go wrong (doing it properly and putting
   * it into an DOM object and measuring that is horribly(!) slow). Thus as
   * a "work around" we provide this option. It will append its value to the
   * text that is found to be the longest string for the column - i.e. padding.
   */
  sContentPadding: null,
  /**
   * Allows a default value to be given for a column's data, and will be used
   * whenever a null data source is encountered (this can be because mData
   * is set to null, or because the data source itself is null).
   */
  sDefaultContent: null,
  /**
   * Name for the column, allowing reference to the column by name as well as
   * by index (needs a lookup to work by name).
   */
  sName: null,
  /**
   * Custom sorting data type - defines which of the available plug-ins in
   * afnSortData the custom sorting will use - if any is defined.
   */
  sSortDataType: "std",
  /**
   * Class to be applied to the header element when sorting on this column
   */
  sSortingClass: null,
  /**
   * Title of the column - what is seen in the TH element (nTh).
   */
  sTitle: null,
  /**
   * Column sorting and filtering type
   */
  sType: null,
  /**
   * Width of the column
   */
  sWidth: null,
  /**
   * Width of the column when it was first "encountered"
   */
  sWidthOrig: null,
  /** Cached string which is the longest in the column */
  maxLenString: null,
  /**
   * Store for named searches
   */
  searchFixed: null
};
se.defaults = {
  /**
   * An array of data to use for the table, passed in at initialisation which
   * will be used in preference to any data which is already in the DOM. This is
   * particularly useful for constructing tables purely in Javascript, for
   * example with a custom Ajax call.
   */
  aaData: null,
  /**
   * If ordering is enabled, then DataTables will perform a first pass sort on
   * initialisation. You can define which column(s) the sort is performed
   * upon, and the sorting direction, with this variable. The `sorting` array
   * should contain an array for each column to be sorted initially containing
   * the column's index and a direction string ('asc' or 'desc').
   */
  aaSorting: [[0, "asc"]],
  /**
   * This parameter is basically identical to the `sorting` parameter, but
   * cannot be overridden by user interaction with the table. What this means
   * is that you could have a column (visible or hidden) which the sorting
   * will always be forced on first - any sorting after that (from the user)
   * will then be performed as required. This can be useful for grouping rows
   * together.
   */
  aaSortingFixed: [],
  /**
   * DataTables can be instructed to load data to display in the table from a
   * Ajax source. This option defines how that Ajax call is made and where to.
   *
   * The `ajax` property has three different modes of operation, depending on
   * how it is defined. These are:
   *
   * * `string` - Set the URL from where the data should be loaded from.
   * * `object` - Define properties for `jQuery.ajax`.
   * * `function` - Custom data get function
   *
   * `string`
   * --------
   *
   * As a string, the `ajax` property simply defines the URL from which
   * DataTables will load data.
   *
   * `object`
   * --------
   *
   * As an object, the parameters in the object are passed to
   * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control
   * of the Ajax request. DataTables has a number of default parameters which
   * you can override using this option. Please refer to the jQuery
   * documentation for a full description of the options available, although
   * the following parameters provide additional options in DataTables or
   * require special consideration:
   *
   * * `data` - As with jQuery, `data` can be provided as an object, but it
   *   can also be used as a function to manipulate the data DataTables sends
   *   to the server. The function takes a single parameter, an object of
   *   parameters with the values that DataTables has readied for sending. An
   *   object may be returned which will be merged into the DataTables
   *   defaults, or you can add the items to the object that was passed in and
   *   not return anything from the function. This supersedes `fnServerParams`
   *   from DataTables 1.9-.
   *
   * * `dataSrc` - By default DataTables will look for the property `data` (or
   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
   *   from an Ajax source or for server-side processing - this parameter
   *   allows that property to be changed. You can use Javascript dotted
   *   object notation to get a data source for multiple levels of nesting, or
   *   it my be used as a function. As a function it takes a single parameter,
   *   the JSON returned from the server, which can be manipulated as
   *   required, with the returned value being that used by DataTables as the
   *   data source for the table.
   *
   * * `success` - Should not be overridden it is used internally in
   *   DataTables. To manipulate / transform the data returned by the server
   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
   *
   * `function`
   * ----------
   *
   * As a function, making the Ajax call is left up to yourself allowing
   * complete control of the Ajax request. Indeed, if desired, a method other
   * than Ajax could be used to obtain the required data, such as Web storage
   * or an AIR database.
   *
   * The function is given four parameters and no return is required. The
   * parameters are:
   *
   * 1. _object_ - Data to send to the server
   * 2. _function_ - Callback function that must be executed when the required
   *    data has been obtained. That data should be passed into the callback
   *    as the only parameter
   * 3. _object_ - DataTables settings object for the table
   */
  ajax: null,
  /**
   * This parameter allows you to readily specify the entries in the length drop
   * down menu that DataTables shows when pagination is enabled. It can be
   * either a 1D array of options which will be used for both the displayed
   * option and the value, or a 2D array which will use the array in the first
   * position as the value, and the array in the second position as the
   * displayed options (useful for language strings such as 'All').
   *
   * Note that the `pageLength` property will be automatically set to the
   * first value given in this array, unless `pageLength` is also provided.
   */
  aLengthMenu: [10, 25, 50, 100],
  /**
   * The `columns` option in the initialisation parameter allows you to define
   * details about the way individual columns behave. For a full list of
   * column options that can be set, please see
   * {@link DataTable.defaults.column}. Note that if you use `columns` to
   * define your columns, you must have an entry in the array for every single
   * column that you have in your table (these can be null if you don't which
   * to specify any options).
   */
  aoColumns: null,
  /**
   * Very similar to `columns`, `columnDefs` allows you to target a specific
   * column, multiple columns, or all columns, using the `targets` property of
   * each object in the array. This allows great flexibility when creating
   * tables, as the `columnDefs` arrays can be of any length, targeting the
   * columns you specifically want. `columnDefs` may use any of the column
   * options available: {@link DataTable.defaults.column}, but it _must_
   * have `targets` defined in each object in the array. Values in the `targets`
   * array may be:
   *   <ul>
   *     <li>a string - class name will be matched on the TH for the column</li>
   *     <li>0 or a positive integer - column index counting from the left</li>
   *     <li>a negative integer - column index counting from the right</li>
   *     <li>the string "_all" - all columns (i.e. assign a default)</li>
   *   </ul>
   */
  aoColumnDefs: null,
  /**
   * Basically the same as `search`, this parameter defines the individual column
   * filtering state at initialisation time. The array must be of the same size
   * as the number of columns, and each element be an object with the parameters
   * `search` and `escapeRegex` (the latter is optional). 'null' is also
   * accepted and the default will be used.
   */
  aoSearchCols: [],
  /**
   * Enable or disable automatic column width calculation. This can be disabled
   * as an optimisation (it takes some time to calculate the widths) if the
   * tables widths are passed in using `columns`.
   */
  bAutoWidth: !0,
  /**
   * Deferred rendering can provide DataTables with a huge speed boost when you
   * are using an Ajax or JS data source for the table. This option, when set to
   * true, will cause DataTables to defer the creation of the table elements for
   * each row until they are needed for a draw - saving a significant amount of
   * time.
   */
  bDeferRender: !0,
  /**
   * Replace a DataTable which matches the given selector and replace it with
   * one which has the properties of the new initialisation object passed. If no
   * table matches the selector, then the new DataTable will be constructed as
   * per normal.
   */
  bDestroy: !1,
  /**
   * Enable or disable filtering of data. Filtering in DataTables is "smart" in
   * that it allows the end user to input multiple words (space separated) and
   * will match a row containing those words, even if not in the order that was
   * specified (this allow matching across multiple columns). Note that if you
   * wish to use filtering in DataTables this must remain 'true' - to remove the
   * default filtering input box and retain filtering abilities, please use
   * {@link DataTable.defaults.dom}.
   */
  bFilter: !0,
  /**
   * Used only for compatiblity with DT1
   * @deprecated
   */
  bInfo: !0,
  /**
   * Used only for compatiblity with DT1
   * @deprecated
   */
  bLengthChange: !0,
  /**
   * Enable or disable pagination.
   */
  bPaginate: !0,
  /**
   * Enable or disable the display of a 'processing' indicator when the table is
   * being processed (e.g. a sort). This is particularly useful for tables with
   * large amounts of data where it can take a noticeable amount of time to sort
   * the entries.
   */
  bProcessing: !1,
  /**
   * Retrieve the DataTables object for the given selector. Note that if the
   * table has already been initialised, this parameter will cause DataTables
   * to simply return the object that has already been set up - it will not take
   * account of any changes you might have made to the initialisation object
   * passed to DataTables (setting this parameter to true is an acknowledgement
   * that you understand this). `destroy` can be used to reinitialise a table if
   * you need.
   */
  bRetrieve: !1,
  /**
   * When vertical (y) scrolling is enabled, DataTables will force the height of
   * the table's viewport to the given height at all times (useful for layout).
   * However, this can look odd when filtering data down to a small data set,
   * and the footer is left "floating" further down. This parameter (when
   * enabled) will cause DataTables to collapse the table's viewport down when
   * the result set will fit within the given Y height.
   */
  bScrollCollapse: !1,
  /**
   * Configure DataTables to use server-side processing. Note that the
   * `ajax` parameter must also be given in order to give DataTables a
   * source to obtain the required data for each draw.
   */
  bServerSide: !1,
  /**
   * Enable or disable sorting of columns. Sorting of individual columns can be
   * disabled by the `sortable` option for each column.
   */
  bSort: !0,
  /**
   * Enable or display DataTables' ability to sort multiple columns at the
   * same time (activated by shift-click by the user).
   */
  bSortMulti: !0,
  /**
   * Allows control over whether DataTables should use the top (true) unique
   * cell that is found for a single column, or the bottom (false - default).
   * This is useful when using complex headers.
   */
  bSortCellsTop: null,
  /**
   * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
   * `sorting\_3` to the columns which are currently being sorted on. This is
   * presented as a feature switch as it can increase processing time (while
   * classes are removed and added) so for large data sets you might want to
   * turn this off.
   */
  bSortClasses: !0,
  /**
   * Enable or disable state saving. When enabled HTML5 `localStorage` will be
   * used to save table display information such as pagination information,
   * display length, filtering and sorting. As such when the end user reloads
   * the page the display display will match what thy had previously set up.
   */
  bStateSave: !1,
  /**
   * This function is called when a TR element is created (and all TD child
   * elements have been inserted), or registered if using a DOM source, allowing
   * manipulation of the TR element (adding classes etc).
   */
  fnCreatedRow: null,
  /**
   * This function is called on every 'draw' event, and allows you to
   * dynamically modify any aspect you want about the created DOM.
   */
  fnDrawCallback: null,
  /**
   * Identical to fnHeaderCallback() but for the table footer this function
   * allows you to modify the table footer on every 'draw' event.
   */
  fnFooterCallback: null,
  /**
   * When rendering large numbers in the information element for the table
   * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
   * to have a comma separator for the 'thousands' units (e.g. 1 million is
   * rendered as "1,000,000") to help readability for the end user. This
   * function will override the default method DataTables uses.
   */
  fnFormatNumber: function(n) {
    return n.toString().replace(
      /\B(?=(\d{3})+(?!\d))/g,
      this.oLanguage.sThousands
    );
  },
  /**
   * This function is called on every 'draw' event, and allows you to
   * dynamically modify the header row. This can be used to calculate and
   * display useful information about the table.
   */
  fnHeaderCallback: null,
  /**
   * The information element can be used to convey information about the current
   * state of the table. Although the internationalisation options presented by
   * DataTables are quite capable of dealing with most customisations, there may
   * be times where you wish to customise the string further. This callback
   * allows you to do exactly that.
   */
  fnInfoCallback: null,
  /**
   * Called when the table has been initialised. Normally DataTables will
   * initialise sequentially and there will be no need for this function,
   * however, this does not hold true when using external language information
   * since that is obtained using an async XHR call.
   */
  fnInitComplete: null,
  /**
   * Called at the very start of each table draw and can be used to cancel the
   * draw by returning false, any other return (including undefined) results in
   * the full draw occurring).
   */
  fnPreDrawCallback: null,
  /**
   * This function allows you to 'post process' each row after it have been
   * generated for each table draw, but before it is rendered on screen. This
   * function might be used for setting the row class name etc.
   */
  fnRowCallback: null,
  /**
   * Load the table state. With this function you can define from where, and how, the
   * state of a table is loaded. By default DataTables will load from `localStorage`
   * but you might wish to use a server-side database or cookies.
   */
  fnStateLoadCallback: function(n) {
    try {
      return JSON.parse(
        (n.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
          "DataTables_" + n.sInstance + "_" + location.pathname
        )
      );
    } catch (v) {
      return {};
    }
  },
  /**
   * Callback which allows modification of the saved state prior to loading that state.
   * This callback is called when the table is loading state from the stored data, but
   * prior to the settings object being modified by the saved state. Note that for
   * plug-in authors, you should use the `stateLoadParams` event to load parameters for
   * a plug-in.
   */
  fnStateLoadParams: null,
  /**
   * Callback that is called when the state has been loaded from the state saving method
   * and the DataTables settings object has been modified as a result of the loaded state.
   */
  fnStateLoaded: null,
  /**
   * Save the table state. This function allows you to define where and how the state
   * information for the table is stored By default DataTables will use `localStorage`
   * but you might wish to use a server-side database or cookies.
   */
  fnStateSaveCallback: function(n, v) {
    try {
      (n.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
        "DataTables_" + n.sInstance + "_" + location.pathname,
        JSON.stringify(v)
      );
    } catch (g) {
    }
  },
  /**
   * Callback which allows modification of the state to be saved. Called when the table
   * has changed state a new state save is required. This method allows modification of
   * the state saving object prior to actually doing the save, including addition or
   * other state properties or modification. Note that for plug-in authors, you should
   * use the `stateSaveParams` event to save parameters for a plug-in.
   */
  fnStateSaveParams: null,
  /**
   * Duration for which the saved state information is considered valid. After this period
   * has elapsed the state will be returned to the default.
   * Value is given in seconds.
   */
  iStateDuration: 7200,
  /**
   * Number of rows to display on a single page when using pagination. If
   * feature enabled (`lengthChange`) then the end user will be able to override
   * this to a custom setting using a pop-up menu.
   */
  iDisplayLength: 10,
  /**
   * Define the starting point for data display when using DataTables with
   * pagination. Note that this parameter is the number of records, rather than
   * the page number, so if you have 10 records per page and want to start on
   * the third page, it should be "20".
   */
  iDisplayStart: 0,
  /**
   * By default DataTables allows keyboard navigation of the table (sorting, paging,
   * and filtering) by adding a `tabindex` attribute to the required elements. This
   * allows you to tab through the controls and press the enter key to activate them.
   * The tabindex is default 0, meaning that the tab follows the flow of the document.
   * You can overrule this using this parameter if you wish. Use a value of -1 to
   * disable built-in keyboard navigation.
   */
  iTabIndex: 0,
  /**
   * Classes that DataTables assigns to the various components and features
   * that it adds to the HTML table. This allows classes to be configured
   * during initialisation in addition to through the static
   * {@link DataTable.ext.oStdClasses} object).
   */
  oClasses: {},
  /**
   * All strings that DataTables uses in the user interface that it creates
   * are defined in this object, allowing you to modified them individually or
   * completely replace them all as required.
   */
  oLanguage: {
    /**
     * Strings that are used for WAI-ARIA labels and controls only (these are not
     * actually visible on the page, but will be read by screenreaders, and thus
     * must be internationalised as well).
     */
    oAria: {
      /**
       * ARIA label that is added to the table headers when the column may be sorted
       */
      orderable: ": Activate to sort",
      /**
       * ARIA label that is added to the table headers when the column is currently being sorted
       */
      orderableReverse: ": Activate to invert sorting",
      /**
       * ARIA label that is added to the table headers when the column is currently being 
       * sorted and next step is to remove sorting
       */
      orderableRemove: ": Activate to remove sorting",
      paginate: {
        first: "First",
        last: "Last",
        next: "Next",
        previous: "Previous"
      }
    },
    /**
     * Pagination string used by DataTables for the built-in pagination
     * control types.
     */
    oPaginate: {
      /**
       * Label and character for first page button
       */
      sFirst: "Â«",
      /**
       * Last page button
       */
      sLast: "Â»",
      /**
       * Next page button
       */
      sNext: "âº",
      /**
       * Previous page button
       */
      sPrevious: "â¹"
    },
    /**
     * Plural object for the data type the table is showing
     */
    entries: {
      _: "entries",
      1: "entry"
    },
    /**
     * This string is shown in preference to `zeroRecords` when the table is
     * empty of data (regardless of filtering). Note that this is an optional
     * parameter - if it is not given, the value of `zeroRecords` will be used
     * instead (either the default or given value).
     */
    sEmptyTable: "No data available in table",
    /**
     * This string gives information to the end user about the information
     * that is current on display on the page. The following tokens can be
     * used in the string and will be dynamically replaced as the table
     * display updates. This tokens can be placed anywhere in the string, or
     * removed as needed by the language requires:
     *
     * * `\_START\_` - Display index of the first record on the current page
     * * `\_END\_` - Display index of the last record on the current page
     * * `\_TOTAL\_` - Number of records in the table after filtering
     * * `\_MAX\_` - Number of records in the table without filtering
     * * `\_PAGE\_` - Current page number
     * * `\_PAGES\_` - Total number of pages of data in the table
     */
    sInfo: "Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_",
    /**
     * Display information string for when the table is empty. Typically the
     * format of this string should match `info`.
     */
    sInfoEmpty: "Showing 0 to 0 of 0 _ENTRIES-TOTAL_",
    /**
     * When a user filters the information in a table, this string is appended
     * to the information (`info`) to give an idea of how strong the filtering
     * is. The variable _MAX_ is dynamically updated.
     */
    sInfoFiltered: "(filtered from _MAX_ total _ENTRIES-MAX_)",
    /**
     * If can be useful to append extra information to the info string at times,
     * and this variable does exactly that. This information will be appended to
     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
     * being used) at all times.
     */
    sInfoPostFix: "",
    /**
     * This decimal place operator is a little different from the other
     * language options since DataTables doesn't output floating point
     * numbers, so it won't ever use this for display of a number. Rather,
     * what this parameter does is modify the sort methods of the table so
     * that numbers which are in a format which has a character other than
     * a period (`.`) as a decimal place will be sorted numerically.
     *
     * Note that numbers with different decimal places cannot be shown in
     * the same table and still be sortable, the table must be consistent.
     * However, multiple different tables on the page can use different
     * decimal place characters.
     */
    sDecimal: "",
    /**
     * DataTables has a build in number formatter (`formatNumber`) which is
     * used to format large numbers that are used in the table information.
     * By default a comma is used, but this can be trivially changed to any
     * character you wish with this parameter.
     */
    sThousands: ",",
    /**
     * Detail the action that will be taken when the drop down menu for the
     * pagination length option is changed. The '_MENU_' variable is replaced
     * with a default select list of 10, 25, 50 and 100, and can be replaced
     * with a custom select box if required.
     */
    sLengthMenu: "_MENU_ _ENTRIES_ per page",
    /**
     * When using Ajax sourced data and during the first draw when DataTables is
     * gathering the data, this message is shown in an empty row in the table to
     * indicate to the end user the the data is being loaded. Note that this
     * parameter is not used when loading data by server-side processing, just
     * Ajax sourced data with client-side processing.
     */
    sLoadingRecords: "Loading...",
    /**
     * Text which is displayed when the table is processing a user action
     * (usually a sort command or similar).
     */
    sProcessing: "",
    /**
     * Details the actions that will be taken when the user types into the
     * filtering input text box. The variable "_INPUT_", if used in the string,
     * is replaced with the HTML text box for the filtering input allowing
     * control over where it appears in the string. If "_INPUT_" is not given
     * then the input box is appended to the string automatically.
     */
    sSearch: "Search:",
    /**
     * Assign a `placeholder` attribute to the search `input` element
     *  @type string
     *  @default 
     *
     *  @dtopt Language
     *  @name DataTable.defaults.language.searchPlaceholder
     */
    sSearchPlaceholder: "",
    /**
     * All of the language information can be stored in a file on the
     * server-side, which DataTables will look up if this parameter is passed.
     * It must store the URL of the language file, which is in a JSON format,
     * and the object has the same properties as the oLanguage object in the
     * initialiser object (i.e. the above parameters). Please refer to one of
     * the example language files to see how this works in action.
     */
    sUrl: "",
    /**
     * Text shown inside the table records when the is no information to be
     * displayed after filtering. `emptyTable` is shown when there is simply no
     * information in the table at all (regardless of filtering).
     */
    sZeroRecords: "No matching records found"
  },
  /**
   * This parameter allows you to have define the global filtering state at
   * initialisation time. As an object the `search` parameter must be
   * defined, but all other parameters are optional. When `regex` is true,
   * the search string will be treated as a regular expression, when false
   * (default) it will be treated as a straight string. When `smart`
   * DataTables will use it's smart filtering methods (to word match at
   * any point in the data), when false this will not be done.
   */
  oSearch: Zt.extend({}, se.models.oSearch),
  /**
   * Table and control layout. This replaces the legacy `dom` option.
   */
  layout: {
    topStart: "pageLength",
    topEnd: "search",
    bottomStart: "info",
    bottomEnd: "paging"
  },
  /**
   * Legacy DOM layout option
   */
  sDom: null,
  /**
   * Search delay option. This will throttle full table searches that use the
   * DataTables provided search input element (it does not effect calls to
   * `dt-api search()`, providing a delay before the search is made.
   */
  searchDelay: null,
  /**
   * DataTables features six different built-in options for the buttons to
   * display for pagination control:
   *
   * * `numbers` - Page number buttons only
   * * `simple` - 'Previous' and 'Next' buttons only
   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers
   */
  sPaginationType: "full_numbers",
  /**
   * Enable horizontal scrolling. When a table is too wide to fit into a
   * certain layout, or you have a large number of columns in the table, you
   * can enable x-scrolling to show the table in a viewport, which can be
   * scrolled. This property can be `true` which will allow the table to
   * scroll horizontally when needed, or any CSS unit, or a number (in which
   * case it will be treated as a pixel measurement). Setting as simply `true`
   * is recommended.
   */
  sScrollX: "",
  /**
   * This property can be used to force a DataTable to use more width than it
   * might otherwise do when x-scrolling is enabled. For example if you have a
   * table which requires to be well spaced, this parameter is useful for
   * "over-sizing" the table, and thus forcing scrolling. This property can by
   * any CSS unit, or a number (in which case it will be treated as a pixel
   * measurement).
   */
  sScrollXInner: "",
  /**
   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
   * to the given height, and enable scrolling for any data which overflows the
   * current viewport. This can be used as an alternative to paging to display
   * a lot of data in a small area (although paging and scrolling can both be
   * enabled at the same time). This property can be any CSS unit, or a number
   * (in which case it will be treated as a pixel measurement).
   */
  sScrollY: "",
  /**
   * __Deprecated__ The functionality provided by this parameter has now been
   * superseded by that provided through `ajax`, which should be used instead.
   *
   * Set the HTTP method that is used to make the Ajax call for server-side
   * processing or Ajax sourced data.
   */
  sServerMethod: "GET",
  /**
   * DataTables makes use of renderers when displaying HTML elements for
   * a table. These renderers can be added or modified by plug-ins to
   * generate suitable mark-up for a site. For example the Bootstrap
   * integration plug-in for DataTables uses a paging button renderer to
   * display pagination buttons in the mark-up required by Bootstrap.
   *
   * For further information about the renderers available see
   * DataTable.ext.renderer
   */
  renderer: null,
  /**
   * Set the data property name that DataTables should use to get a row's id
   * to set as the `id` property in the node.
   */
  rowId: "DT_RowId",
  /**
   * Caption value
   */
  caption: null
};
fs(se.defaults);
se.defaults.column = {
  /**
   * Define which column(s) an order will occur on for this column. This
   * allows a column's ordering to take multiple columns into account when
   * doing a sort or use the data from a different column. For example first
   * name / last name columns make sense to do a multi-column sort over the
   * two columns.
   */
  aDataSort: null,
  iDataSort: -1,
  ariaTitle: "",
  /**
   * You can control the default ordering direction, and even alter the
   * behaviour of the sort handler (i.e. only allow ascending ordering etc)
   * using this parameter.
   */
  asSorting: ["asc", "desc", ""],
  /**
   * Enable or disable filtering on the data in this column.
   */
  bSearchable: !0,
  /**
   * Enable or disable ordering on this column.
   */
  bSortable: !0,
  /**
   * Enable or disable the display of this column.
   */
  bVisible: !0,
  /**
   * Developer definable function that is called whenever a cell is created (Ajax source,
   * etc) or processed for input (DOM source). This can be used as a compliment to mRender
   * allowing you to modify the DOM element (add background colour for example) when the
   * element is available.
   */
  fnCreatedCell: null,
  /**
   * This property can be used to read data from any data source property,
   * including deeply nested objects / properties. `data` can be given in a
   * number of different ways which effect its behaviour:
   *
   * * `integer` - treated as an array index for the data source. This is the
   *   default that DataTables uses (incrementally increased for each column).
   * * `string` - read an object property from the data source. There are
   *   three 'special' options that can be used in the string to alter how
   *   DataTables reads the data from the source object:
   *    * `.` - Dotted Javascript notation. Just as you use a `.` in
   *      Javascript to read from nested objects, so to can the options
   *      specified in `data`. For example: `browser.version` or
   *      `browser.name`. If your object parameter name contains a period, use
   *      `\\` to escape it - i.e. `first\\.name`.
   *    * `[]` - Array notation. DataTables can automatically combine data
   *      from and array source, joining the data with the characters provided
   *      between the two brackets. For example: `name[, ]` would provide a
   *      comma-space separated list from the source array. If no characters
   *      are provided between the brackets, the original array source is
   *      returned.
   *    * `()` - Function notation. Adding `()` to the end of a parameter will
   *      execute a function of the name given. For example: `browser()` for a
   *      simple function on the data source, `browser.version()` for a
   *      function in a nested property or even `browser().version` to get an
   *      object property if the function called returns an object. Note that
   *      function notation is recommended for use in `render` rather than
   *      `data` as it is much simpler to use as a renderer.
   * * `null` - use the original data source for the row rather than plucking
   *   data directly from it. This action has effects on two other
   *   initialisation options:
   *    * `defaultContent` - When null is given as the `data` option and
   *      `defaultContent` is specified for the column, the value defined by
   *      `defaultContent` will be used for the cell.
   *    * `render` - When null is used for the `data` option and the `render`
   *      option is specified for the column, the whole data source for the
   *      row is used for the renderer.
   * * `function` - the function given will be executed whenever DataTables
   *   needs to set or get the data for a cell in the column. The function
   *   takes three parameters:
   *    * Parameters:
   *      * `{array|object}` The data source for the row
   *      * `{string}` The type call data requested - this will be 'set' when
   *        setting data or 'filter', 'display', 'type', 'sort' or undefined
   *        when gathering data. Note that when `undefined` is given for the
   *        type DataTables expects to get the raw data for the object back<
   *      * `{*}` Data to set when the second parameter is 'set'.
   *    * Return:
   *      * The return value from the function is not required when 'set' is
   *        the type of call, but otherwise the return is what will be used
   *        for the data requested.
   *
   * Note that `data` is a getter and setter option. If you just require
   * formatting of data for output, you will likely want to use `render` which
   * is simply a getter and thus simpler to use.
   *
   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
   * name change reflects the flexibility of this property and is consistent
   * with the naming of mRender. If 'mDataProp' is given, then it will still
   * be used by DataTables, as it automatically maps the old name to the new
   * if required.
   */
  mData: null,
  /**
   * This property is the rendering partner to `data` and it is suggested that
   * when you want to manipulate data for display (including filtering,
   * sorting etc) without altering the underlying data for the table, use this
   * property. `render` can be considered to be the the read only companion to
   * `data` which is read / write (then as such more complex). Like `data`
   * this option can be given in a number of different ways to effect its
   * behaviour:
   *
   * * `integer` - treated as an array index for the data source. This is the
   *   default that DataTables uses (incrementally increased for each column).
   * * `string` - read an object property from the data source. There are
   *   three 'special' options that can be used in the string to alter how
   *   DataTables reads the data from the source object:
   *    * `.` - Dotted Javascript notation. Just as you use a `.` in
   *      Javascript to read from nested objects, so to can the options
   *      specified in `data`. For example: `browser.version` or
   *      `browser.name`. If your object parameter name contains a period, use
   *      `\\` to escape it - i.e. `first\\.name`.
   *    * `[]` - Array notation. DataTables can automatically combine data
   *      from and array source, joining the data with the characters provided
   *      between the two brackets. For example: `name[, ]` would provide a
   *      comma-space separated list from the source array. If no characters
   *      are provided between the brackets, the original array source is
   *      returned.
   *    * `()` - Function notation. Adding `()` to the end of a parameter will
   *      execute a function of the name given. For example: `browser()` for a
   *      simple function on the data source, `browser.version()` for a
   *      function in a nested property or even `browser().version` to get an
   *      object property if the function called returns an object.
   * * `object` - use different data for the different data types requested by
   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
   *   of the object is the data type the property refers to and the value can
   *   defined using an integer, string or function using the same rules as
   *   `render` normally does. Note that an `_` option _must_ be specified.
   *   This is the default value to use if you haven't specified a value for
   *   the data type requested by DataTables.
   * * `function` - the function given will be executed whenever DataTables
   *   needs to set or get the data for a cell in the column. The function
   *   takes three parameters:
   *    * Parameters:
   *      * {array|object} The data source for the row (based on `data`)
   *      * {string} The type call data requested - this will be 'filter',
   *        'display', 'type' or 'sort'.
   *      * {array|object} The full data source for the row (not based on
   *        `data`)
   *    * Return:
   *      * The return value from the function is what will be used for the
   *        data requested.
   */
  mRender: null,
  /**
   * Change the cell type created for the column - either TD cells or TH cells. This
   * can be useful as TH cells have semantic meaning in the table body, allowing them
   * to act as a header for a row (you may wish to add scope='row' to the TH elements).
   */
  sCellType: "td",
  /**
   * Class to give to each cell in this column.
   */
  sClass: "",
  /**
   * When DataTables calculates the column widths to assign to each column,
   * it finds the longest string in each column and then constructs a
   * temporary table and reads the widths from that. The problem with this
   * is that "mmm" is much wider then "iiii", but the latter is a longer
   * string - thus the calculation can go wrong (doing it properly and putting
   * it into an DOM object and measuring that is horribly(!) slow). Thus as
   * a "work around" we provide this option. It will append its value to the
   * text that is found to be the longest string for the column - i.e. padding.
   * Generally you shouldn't need this!
   */
  sContentPadding: "",
  /**
   * Allows a default value to be given for a column's data, and will be used
   * whenever a null data source is encountered (this can be because `data`
   * is set to null, or because the data source itself is null).
   */
  sDefaultContent: null,
  /**
   * This parameter is only used in DataTables' server-side processing. It can
   * be exceptionally useful to know what columns are being displayed on the
   * client side, and to map these to database fields. When defined, the names
   * also allow DataTables to reorder information from the server if it comes
   * back in an unexpected order (i.e. if you switch your columns around on the
   * client-side, your server-side code does not also need updating).
   */
  sName: "",
  /**
   * Defines a data source type for the ordering which can be used to read
   * real-time information from the table (updating the internally cached
   * version) prior to ordering. This allows ordering to occur on user
   * editable elements such as form inputs.
   */
  sSortDataType: "std",
  /**
   * The title of this column.
   */
  sTitle: null,
  /**
   * The type allows you to specify how the data for this column will be
   * ordered. Four types (string, numeric, date and html (which will strip
   * HTML tags before ordering)) are currently available. Note that only date
   * formats understood by Javascript's Date() object will be accepted as type
   * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
   * 'numeric', 'date' or 'html' (by default). Further types can be adding
   * through plug-ins.
   */
  sType: null,
  /**
   * Defining the width of the column, this parameter may take any CSS value
   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
   * been given a specific width through this interface ensuring that the table
   * remains readable.
   */
  sWidth: null
};
fs(se.defaults.column);
se.models.oSettings = {
  /**
   * Primary features of DataTables and their enablement state.
   */
  oFeatures: {
    /**
     * Flag to say if DataTables should automatically try to calculate the
     * optimum table and columns widths (true) or not (false).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bAutoWidth: null,
    /**
     * Delay the creation of TR and TD elements until they are actually
     * needed by a driven page draw. This can give a significant speed
     * increase for Ajax source and Javascript source data, but makes no
     * difference at all for DOM and server-side processing tables.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bDeferRender: null,
    /**
     * Enable filtering on the table or not. Note that if this is disabled
     * then there is no filtering at all on the table, including fnFilter.
     * To just remove the filtering input use sDom and remove the 'f' option.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bFilter: null,
    /**
     * Used only for compatiblity with DT1
     * @deprecated
     */
    bInfo: !0,
    /**
     * Used only for compatiblity with DT1
     * @deprecated
     */
    bLengthChange: !0,
    /**
     * Pagination enabled or not. Note that if this is disabled then length
     * changing must also be disabled.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bPaginate: null,
    /**
     * Processing indicator enable flag whenever DataTables is enacting a
     * user request - typically an Ajax request for server-side processing.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bProcessing: null,
    /**
     * Server-side processing enabled flag - when enabled DataTables will
     * get all data from the server for every draw - there is no filtering,
     * sorting or paging done on the client-side.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bServerSide: null,
    /**
     * Sorting enablement flag.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSort: null,
    /**
     * Multi-column sorting
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSortMulti: null,
    /**
     * Apply a class to the columns which are being sorted to provide a
     * visual highlight or not. This can slow things down when enabled since
     * there is a lot of DOM interaction.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSortClasses: null,
    /**
     * State saving enablement flag.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bStateSave: null
  },
  /**
   * Scrolling settings for a table.
   */
  oScroll: {
    /**
     * When the table is shorter in height than sScrollY, collapse the
     * table container down to the height of the table (when true).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bCollapse: null,
    /**
     * Width of the scrollbar for the web-browser's platform. Calculated
     * during table initialisation.
     */
    iBarWidth: 0,
    /**
     * Viewport width for horizontal scrolling. Horizontal scrolling is
     * disabled if an empty string.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    sX: null,
    /**
     * Width to expand the table to when using x-scrolling. Typically you
     * should not need to use this.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @deprecated
     */
    sXInner: null,
    /**
     * Viewport height for vertical scrolling. Vertical scrolling is disabled
     * if an empty string.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    sY: null
  },
  /**
   * Language information for the table.
   */
  oLanguage: {
    /**
     * Information callback function. See
     * {@link DataTable.defaults.fnInfoCallback}
     */
    fnInfoCallback: null
  },
  /**
   * Browser support parameters
   */
  oBrowser: {
    /**
     * Determine if the vertical scrollbar is on the right or left of the
     * scrolling container - needed for rtl language layout, although not
     * all browsers move the scrollbar (Safari).
     */
    bScrollbarLeft: !1,
    /**
     * Browser scrollbar width
     */
    barWidth: 0
  },
  ajax: null,
  /**
   * Array referencing the nodes which are used for the features. The
   * parameters of this object match what is allowed by sDom - i.e.
   *   <ul>
   *     <li>'l' - Length changing</li>
   *     <li>'f' - Filtering input</li>
   *     <li>'t' - The table!</li>
   *     <li>'i' - Information</li>
   *     <li>'p' - Pagination</li>
   *     <li>'r' - pRocessing</li>
   *   </ul>
   */
  aanFeatures: [],
  /**
   * Store data information - see {@link DataTable.models.oRow} for detailed
   * information.
   */
  aoData: [],
  /**
   * Array of indexes which are in the current display (after filtering etc)
   */
  aiDisplay: [],
  /**
   * Array of indexes for display - no filtering
   */
  aiDisplayMaster: [],
  /**
   * Map of row ids to data indexes
   */
  aIds: {},
  /**
   * Store information about each column that is in use
   */
  aoColumns: [],
  /**
   * Store information about the table's header
   */
  aoHeader: [],
  /**
   * Store information about the table's footer
   */
  aoFooter: [],
  /**
   * Store the applied global search information in case we want to force a
   * research or compare the old search to a new one.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  oPreviousSearch: {},
  /**
   * Store for named searches
   */
  searchFixed: {},
  /**
   * Store the applied search for each column - see
   * {@link DataTable.models.oSearch} for the format that is used for the
   * filtering information for each column.
   */
  aoPreSearchCols: [],
  /**
   * Sorting that is applied to the table. Note that the inner arrays are
   * used in the following manner:
   * <ul>
   *   <li>Index 0 - column number</li>
   *   <li>Index 1 - current sorting direction</li>
   * </ul>
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aaSorting: null,
  /**
   * Sorting that is always applied to the table (i.e. prefixed in front of
   * aaSorting).
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aaSortingFixed: [],
  /**
   * If restoring a table - we should restore its width
   */
  sDestroyWidth: 0,
  /**
   * Callback functions array for every time a row is inserted (i.e. on a draw).
   */
  aoRowCallback: [],
  /**
   * Callback functions for the header on each draw.
   */
  aoHeaderCallback: [],
  /**
   * Callback function for the footer on each draw.
   */
  aoFooterCallback: [],
  /**
   * Array of callback functions for draw callback functions
   */
  aoDrawCallback: [],
  /**
   * Array of callback functions for row created function
   */
  aoRowCreatedCallback: [],
  /**
   * Callback functions for just before the table is redrawn. A return of
   * false will be used to cancel the draw.
   */
  aoPreDrawCallback: [],
  /**
   * Callback functions for when the table has been initialised.
   */
  aoInitComplete: [],
  /**
   * Callbacks for modifying the settings to be stored for state saving, prior to
   * saving state.
   */
  aoStateSaveParams: [],
  /**
   * Callbacks for modifying the settings that have been stored for state saving
   * prior to using the stored values to restore the state.
   */
  aoStateLoadParams: [],
  /**
   * Callbacks for operating on the settings object once the saved state has been
   * loaded
   */
  aoStateLoaded: [],
  /**
   * Cache the table ID for quick access
   */
  sTableId: "",
  /**
   * The TABLE node for the main table
   */
  nTable: null,
  /**
   * Permanent ref to the thead element
   */
  nTHead: null,
  /**
   * Permanent ref to the tfoot element - if it exists
   */
  nTFoot: null,
  /**
   * Permanent ref to the tbody element
   */
  nTBody: null,
  /**
   * Cache the wrapper node (contains all DataTables controlled elements)
   */
  nTableWrapper: null,
  /**
   * Indicate if all required information has been read in
   */
  bInitialised: !1,
  /**
   * Information about open rows. Each object in the array has the parameters
   * 'nTr' and 'nParent'
   */
  aoOpenRows: [],
  /**
   * Dictate the positioning of DataTables' control elements - see
   * {@link DataTable.model.oInit.sDom}.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sDom: null,
  /**
   * Search delay (in mS)
   */
  searchDelay: null,
  /**
   * Which type of pagination should be used.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sPaginationType: "two_button",
  /**
   * Number of paging controls on the page. Only used for backwards compatibility
   */
  pagingControls: 0,
  /**
   * The state duration (for `stateSave`) in seconds.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  iStateDuration: 0,
  /**
   * Array of callback functions for state saving. Each array element is an
   * object with the following parameters:
   *   <ul>
   *     <li>function:fn - function to call. Takes two parameters, oSettings
   *       and the JSON string to save that has been thus far created. Returns
   *       a JSON string to be inserted into a json object
   *       (i.e. '"param": [ 0, 1, 2]')</li>
   *     <li>string:sName - name of callback</li>
   *   </ul>
   */
  aoStateSave: [],
  /**
   * Array of callback functions for state loading. Each array element is an
   * object with the following parameters:
   *   <ul>
   *     <li>function:fn - function to call. Takes two parameters, oSettings
   *       and the object stored. May return false to cancel state loading</li>
   *     <li>string:sName - name of callback</li>
   *   </ul>
   */
  aoStateLoad: [],
  /**
   * State that was saved. Useful for back reference
   */
  oSavedState: null,
  /**
   * State that was loaded. Useful for back reference
   */
  oLoadedState: null,
  /**
   * Note if draw should be blocked while getting data
   */
  bAjaxDataGet: !0,
  /**
   * The last jQuery XHR object that was used for server-side data gathering.
   * This can be used for working with the XHR information in one of the
   * callbacks
   */
  jqXHR: null,
  /**
   * JSON returned from the server in the last Ajax request
   */
  json: void 0,
  /**
   * Data submitted as part of the last Ajax request
   */
  oAjaxData: void 0,
  /**
   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
   * required).
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sServerMethod: null,
  /**
   * Format numbers for display.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  fnFormatNumber: null,
  /**
   * List of options that can be used for the user selectable length menu.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aLengthMenu: null,
  /**
   * Counter for the draws that the table does. Also used as a tracker for
   * server-side processing
   */
  iDraw: 0,
  /**
   * Indicate if a redraw is being done - useful for Ajax
   */
  bDrawing: !1,
  /**
   * Draw index (iDraw) of the last error when parsing the returned data
   */
  iDrawError: -1,
  /**
   * Paging display length
   */
  _iDisplayLength: 10,
  /**
   * Paging start point - aiDisplay index
   */
  _iDisplayStart: 0,
  /**
   * Server-side processing - number of records in the result set
   * (i.e. before filtering), Use fnRecordsTotal rather than
   * this property to get the value of the number of records, regardless of
   * the server-side processing setting.
   */
  _iRecordsTotal: 0,
  /**
   * Server-side processing - number of records in the current display set
   * (i.e. after filtering). Use fnRecordsDisplay rather than
   * this property to get the value of the number of records, regardless of
   * the server-side processing setting.
   */
  _iRecordsDisplay: 0,
  /**
   * The classes to use for the table
   */
  oClasses: {},
  /**
   * Flag attached to the settings object so you can check in the draw
   * callback if filtering has been done in the draw. Deprecated in favour of
   * events.
   *  @deprecated
   */
  bFiltered: !1,
  /**
   * Flag attached to the settings object so you can check in the draw
   * callback if sorting has been done in the draw. Deprecated in favour of
   * events.
   *  @deprecated
   */
  bSorted: !1,
  /**
   * Indicate that if multiple rows are in the header and there is more than
   * one unique cell per column, if the top one (true) or bottom one (false)
   * should be used for sorting / title by DataTables.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  bSortCellsTop: null,
  /**
   * Initialisation object that is used for the table
   */
  oInit: null,
  /**
   * Destroy callback functions - for plug-ins to attach themselves to the
   * destroy so they can clean up markup and events.
   */
  aoDestroyCallback: [],
  /**
   * Get the number of records in the current record set, before filtering
   */
  fnRecordsTotal: function() {
    return ra(this) == "ssp" ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;
  },
  /**
   * Get the number of records in the current record set, after filtering
   */
  fnRecordsDisplay: function() {
    return ra(this) == "ssp" ? this._iRecordsDisplay * 1 : this.aiDisplay.length;
  },
  /**
   * Get the display end point - aiDisplay index
   */
  fnDisplayEnd: function() {
    var n = this._iDisplayLength, v = this._iDisplayStart, g = v + n, w = this.aiDisplay.length, I = this.oFeatures, F = I.bPaginate;
    return I.bServerSide ? F === !1 || n === -1 ? v + w : Math.min(v + n, this._iRecordsDisplay) : !F || g > w || n === -1 ? w : g;
  },
  /**
   * The DataTables object for this table
   */
  oInstance: null,
  /**
   * Unique identifier for each instance of the DataTables object. If there
   * is an ID on the table node, then it takes that value, otherwise an
   * incrementing internal counter is used.
   */
  sInstance: null,
  /**
   * tabindex attribute value that is added to DataTables control elements, allowing
   * keyboard navigation of the table and its controls.
   */
  iTabIndex: 0,
  /**
   * DIV container for the footer scrolling table if scrolling
   */
  nScrollHead: null,
  /**
   * DIV container for the footer scrolling table if scrolling
   */
  nScrollFoot: null,
  /**
   * Last applied sort
   */
  aLastSort: [],
  /**
   * Stored plug-in instances
   */
  oPlugins: {},
  /**
   * Function used to get a row's id from the row's data
   */
  rowIdFn: null,
  /**
   * Data location where to store a row's id
   */
  rowId: null,
  caption: "",
  captionNode: null,
  colgroup: null
};
se.ext = Yr = {
  /**
   * Buttons. For use with the Buttons extension for DataTables. This is
   * defined here so other extensions can define buttons regardless of load
   * order. It is _not_ used by DataTables core.
   *
   *  @type object
   *  @default {}
   */
  buttons: {},
  /**
   * Element class names
   *
   *  @type object
   *  @default {}
   */
  classes: {},
  /**
   * DataTables build type (expanded by the download builder)
   *
   *  @type string
   */
  builder: "-source-",
  /**
   * Error reporting.
   * 
   * How should DataTables report an error. Can take the value 'alert',
   * 'throw', 'none' or a function.
   *
   *  @type string|function
   *  @default alert
   */
  errMode: "alert",
  /**
   * Legacy so v1 plug-ins don't throw js errors on load
   */
  feature: [],
  /**
   * Feature plug-ins.
   * 
   * This is an object of callbacks which provide the features for DataTables
   * to be initialised via the `layout` option.
   */
  features: {},
  /**
   * Row searching.
   * 
   * This method of searching is complimentary to the default type based
   * searching, and a lot more comprehensive as it allows you complete control
   * over the searching logic. Each element in this array is a function
   * (parameters described below) that is called for every row in the table,
   * and your logic decides if it should be included in the searching data set
   * or not.
   *
   * Searching functions have the following input parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{array|object}` Data for the row to be processed (same as the
   *    original format that was passed in as the data source, or an array
   *    from a DOM data source
   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
   *    can be useful to retrieve the `TR` element if you need DOM interaction.
   *
   * And the following return is expected:
   *
   * * {boolean} Include the row in the searched result set (true) or not
   *   (false)
   *
   * Note that as with the main search ability in DataTables, technically this
   * is "filtering", since it is subtractive. However, for consistency in
   * naming we call it searching here.
   *
   *  @type array
   *  @default []
   *
   *  @example
   *    // The following example shows custom search being applied to the
   *    // fourth column (i.e. the data[3] index) based on two input values
   *    // from the end-user, matching the data in a certain range.
   *    $.fn.dataTable.ext.search.push(
   *      function( settings, data, dataIndex ) {
   *        var min = document.getElementById('min').value * 1;
   *        var max = document.getElementById('max').value * 1;
   *        var version = data[3] == "-" ? 0 : data[3]*1;
   *
   *        if ( min == "" && max == "" ) {
   *          return true;
   *        }
   *        else if ( min == "" && version < max ) {
   *          return true;
   *        }
   *        else if ( min < version && "" == max ) {
   *          return true;
   *        }
   *        else if ( min < version && version < max ) {
   *          return true;
   *        }
   *        return false;
   *      }
   *    );
   */
  search: [],
  /**
   * Selector extensions
   *
   * The `selector` option can be used to extend the options available for the
   * selector modifier options (`selector-modifier` object data type) that
   * each of the three built in selector types offer (row, column and cell +
   * their plural counterparts). For example the Select extension uses this
   * mechanism to provide an option to select only rows, columns and cells
   * that have been marked as selected by the end user (`{selected: true}`),
   * which can be used in conjunction with the existing built in selector
   * options.
   *
   * Each property is an array to which functions can be pushed. The functions
   * take three attributes:
   *
   * * Settings object for the host table
   * * Options object (`selector-modifier` object type)
   * * Array of selected item indexes
   *
   * The return is an array of the resulting item indexes after the custom
   * selector has been applied.
   *
   *  @type object
   */
  selector: {
    cell: [],
    column: [],
    row: []
  },
  /**
   * Legacy configuration options. Enable and disable legacy options that
   * are available in DataTables.
   *
   *  @type object
   */
  legacy: {
    /**
     * Enable / disable DataTables 1.9 compatible server-side processing
     * requests
     *
     *  @type boolean
     *  @default null
     */
    ajax: null
  },
  /**
   * Pagination plug-in methods.
   * 
   * Each entry in this object is a function and defines which buttons should
   * be shown by the pagination rendering method that is used for the table:
   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
   * buttons are displayed in the document, while the functions here tell it
   * what buttons to display. This is done by returning an array of button
   * descriptions (what each button will do).
   *
   * Pagination types (the four built in options and any additional plug-in
   * options defined here) can be used through the `paginationType`
   * initialisation parameter.
   *
   * The functions defined take two parameters:
   *
   * 1. `{int} page` The current page index
   * 2. `{int} pages` The number of pages in the table
   *
   * Each function is expected to return an array where each element of the
   * array can be one of:
   *
   * * `first` - Jump to first page when activated
   * * `last` - Jump to last page when activated
   * * `previous` - Show previous page when activated
   * * `next` - Show next page when activated
   * * `{int}` - Show page of the index given
   * * `{array}` - A nested array containing the above elements to add a
   *   containing 'DIV' element (might be useful for styling).
   *
   * Note that DataTables v1.9- used this object slightly differently whereby
   * an object with two functions would be defined for each plug-in. That
   * ability is still supported by DataTables 1.10+ to provide backwards
   * compatibility, but this option of use is now decremented and no longer
   * documented in DataTables 1.10+.
   *
   *  @type object
   *  @default {}
   *
   *  @example
   *    // Show previous, next and current page buttons only
   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
   *      return [ 'previous', page, 'next' ];
   *    };
   */
  pager: {},
  renderer: {
    pageButton: {},
    header: {}
  },
  /**
   * Ordering plug-ins - custom data source
   * 
   * The extension options for ordering of data available here is complimentary
   * to the default type based ordering that DataTables typically uses. It
   * allows much greater control over the the data that is being used to
   * order a column, but is necessarily therefore more complex.
   * 
   * This type of ordering is useful if you want to do ordering based on data
   * live from the DOM (for example the contents of an 'input' element) rather
   * than just the static string that DataTables knows of.
   * 
   * The way these plug-ins work is that you create an array of the values you
   * wish to be ordering for the column in question and then return that
   * array. The data in the array much be in the index order of the rows in
   * the table (not the currently ordering order!). Which order data gathering
   * function is run here depends on the `dt-init columns.orderDataType`
   * parameter that is used for the column (if any).
   *
   * The functions defined take two parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{int}` Target column index
   *
   * Each function is expected to return an array:
   *
   * * `{array}` Data for the column to be ordering upon
   *
   *  @type array
   *
   *  @example
   *    // Ordering using `input` node values
   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
   *    {
   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
   *        return $('input', td).val();
   *      } );
   *    }
   */
  order: {},
  /**
   * Type based plug-ins.
   *
   * Each column in DataTables has a type assigned to it, either by automatic
   * detection or by direct assignment using the `type` option for the column.
   * The type of a column will effect how it is ordering and search (plug-ins
   * can also make use of the column type if required).
   *
   * @namespace
   */
  type: {
    /**
     * Automatic column class assignment
     */
    className: {},
    /**
     * Type detection functions.
     *
     * The functions defined in this object are used to automatically detect
     * a column's type, making initialisation of DataTables super easy, even
     * when complex data is in the table.
     *
     * The functions defined take two parameters:
     *
        *  1. `{*}` Data from the column cell to be analysed
        *  2. `{settings}` DataTables settings object. This can be used to
        *     perform context specific type detection - for example detection
        *     based on language settings such as using a comma for a decimal
        *     place. Generally speaking the options from the settings will not
        *     be required
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Data type detected, or null if unknown (and thus
     *   pass it on to the other type detection functions.
     *
     *  @type array
     *
     *  @example
     *    // Currency type detection plug-in:
     *    $.fn.dataTable.ext.type.detect.push(
     *      function ( data, settings ) {
     *        // Check the numeric part
     *        if ( ! data.substring(1).match(/[0-9]/) ) {
     *          return null;
     *        }
     *
     *        // Check prefixed by currency
     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
     *          return 'currency';
     *        }
     *        return null;
     *      }
     *    );
     */
    detect: [],
    /**
     * Automatic renderer assignment
     */
    render: {},
    /**
     * Type based search formatting.
     *
     * The type based searching functions can be used to pre-format the
     * data to be search on. For example, it can be used to strip HTML
     * tags or to de-format telephone numbers for numeric only searching.
     *
     * Note that is a search is not defined for a column of a given type,
     * no search formatting will be performed.
     * 
     * Pre-processing of searching data plug-ins - When you assign the sType
     * for a column (or have it automatically detected for you by DataTables
     * or a type detection plug-in), you will typically be using this for
     * custom sorting, but it can also be used to provide custom searching
     * by allowing you to pre-processing the data and returning the data in
     * the format that should be searched upon. This is done by adding
     * functions this object with a parameter name which matches the sType
     * for that target column. This is the corollary of <i>afnSortData</i>
     * for searching data.
     *
     * The functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for searching
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Formatted string that will be used for the searching.
     *
     *  @type object
     *  @default {}
     *
     *  @example
     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
     *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
     *    }
     */
    search: {},
    /**
     * Type based ordering.
     *
     * The column type tells DataTables what ordering to apply to the table
     * when a column is sorted upon. The order for each type that is defined,
     * is defined by the functions available in this object.
     *
     * Each ordering option can be described by three properties added to
     * this object:
     *
     * * `{type}-pre` - Pre-formatting function
     * * `{type}-asc` - Ascending order function
     * * `{type}-desc` - Descending order function
     *
     * All three can be used together, only `{type}-pre` or only
     * `{type}-asc` and `{type}-desc` together. It is generally recommended
     * that only `{type}-pre` is used, as this provides the optimal
     * implementation in terms of speed, although the others are provided
     * for compatibility with existing Javascript sort functions.
     *
     * `{type}-pre`: Functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for ordering
     *
     * And return:
     *
     * * `{*}` Data to be sorted upon
     *
     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
     * functions, taking two parameters:
     *
        *  1. `{*}` Data to compare to the second parameter
        *  2. `{*}` Data to compare to the first parameter
     *
     * And returning:
     *
     * * `{*}` Ordering match: <0 if first parameter should be sorted lower
     *   than the second parameter, ===0 if the two parameters are equal and
     *   >0 if the first parameter should be sorted height than the second
     *   parameter.
     * 
     *  @type object
     *  @default {}
     *
     *  @example
     *    // Numeric ordering of formatted numbers with a pre-formatter
     *    $.extend( $.fn.dataTable.ext.type.order, {
     *      "string-pre": function(x) {
     *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
     *        return parseFloat( a );
     *      }
     *    } );
     *
     *  @example
     *    // Case-sensitive string ordering, with no pre-formatting method
     *    $.extend( $.fn.dataTable.ext.order, {
     *      "string-case-asc": function(x,y) {
     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
     *      },
     *      "string-case-desc": function(x,y) {
     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
     *      }
     *    } );
     */
    order: {}
  },
  /**
   * Unique DataTables instance counter
   *
   * @type int
   * @private
   */
  _unique: 0,
  //
  // Depreciated
  // The following properties are retained for backwards compatibility only.
  // The should not be used in new projects and will be removed in a future
  // version
  //
  /**
   * Version check function.
   *  @type function
   *  @depreciated Since 1.10
   */
  fnVersionCheck: se.fnVersionCheck,
  /**
   * Index for what 'this' index API functions should use
   *  @type int
   *  @deprecated Since v1.10
   */
  iApiIndex: 0,
  /**
   * Software version
   *  @type string
   *  @deprecated Since v1.10
   */
  sVersion: se.version
};
Zt.extend(Yr, {
  afnFiltering: Yr.search,
  aTypes: Yr.type.detect,
  ofnSearch: Yr.type.search,
  oSort: Yr.type.order,
  afnSortData: Yr.order,
  aoFeatures: Yr.feature,
  oStdClasses: Yr.classes,
  oPagination: Yr.pager
});
Zt.extend(se.ext.classes, {
  container: "dt-container",
  empty: {
    row: "dt-empty"
  },
  info: {
    container: "dt-info"
  },
  length: {
    container: "dt-length",
    select: "dt-input"
  },
  order: {
    canAsc: "dt-orderable-asc",
    canDesc: "dt-orderable-desc",
    isAsc: "dt-ordering-asc",
    isDesc: "dt-ordering-desc",
    none: "dt-orderable-none",
    position: "sorting_"
  },
  processing: {
    container: "dt-processing"
  },
  scrolling: {
    body: "dt-scroll-body",
    container: "dt-scroll",
    footer: {
      self: "dt-scroll-foot",
      inner: "dt-scroll-footInner"
    },
    header: {
      self: "dt-scroll-head",
      inner: "dt-scroll-headInner"
    }
  },
  search: {
    container: "dt-search",
    input: "dt-input"
  },
  table: "dataTable",
  tbody: {
    cell: "",
    row: ""
  },
  thead: {
    cell: "",
    row: ""
  },
  tfoot: {
    cell: "",
    row: ""
  },
  paging: {
    active: "current",
    button: "dt-paging-button",
    container: "dt-paging",
    disabled: "disabled"
  }
});
var w1 = se.ext.pager;
Zt.extend(w1, {
  simple: function() {
    return ["previous", "next"];
  },
  full: function() {
    return ["first", "previous", "next", "last"];
  },
  numbers: function() {
    return ["numbers"];
  },
  simple_numbers: function() {
    return ["previous", "numbers", "next"];
  },
  full_numbers: function() {
    return ["first", "previous", "numbers", "next", "last"];
  },
  first_last: function() {
    return ["first", "last"];
  },
  first_last_numbers: function() {
    return ["first", "numbers", "last"];
  },
  // For testing and plug-ins to use
  _numbers: Tf,
  // Number of number buttons - legacy, use `numbers` option for paging feature
  numbers_length: 7
});
Zt.extend(!0, se.ext.renderer, {
  pagingButton: {
    _: function(n, v, g, w, I) {
      var F = n.oClasses.paging, l = [F.button], c;
      return w && l.push(F.active), I && l.push(F.disabled), v === "ellipsis" ? c = Zt('<span class="ellipsis"></span>').html(g)[0] : c = Zt("<button>", {
        class: l.join(" "),
        role: "link",
        type: "button"
      }).html(g), {
        display: c,
        clicker: c
      };
    }
  },
  pagingContainer: {
    _: function(n, v) {
      return v;
    }
  }
});
var ys = function(n, v) {
  return function(g) {
    return La(g) || typeof g != "string" || (g = g.replace(Md, " "), n && (g = Di(g)), v && (g = _s(g, !0))), g;
  };
};
function Sf(n) {
  return n.replace(/[\W]/g, "_");
}
function kl(n, v, g, w, I) {
  return window.moment ? n[v](I) : window.luxon ? n[g](I) : w ? n[w](I) : n;
}
var Ul = !1;
function os(n, v, g) {
  var w;
  if (window.moment) {
    if (w = window.moment.utc(n, v, g, !0), !w.isValid())
      return null;
  } else if (window.luxon) {
    if (w = v && typeof n == "string" ? window.luxon.DateTime.fromFormat(n, v) : window.luxon.DateTime.fromISO(n), !w.isValid)
      return null;
    w.setLocale(g);
  } else
    v ? (Ul || alert("DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17"), Ul = !0) : w = new Date(n);
  return w;
}
function Gs(n) {
  return function(v, g, w, I) {
    arguments.length === 0 ? (w = "en", g = null, v = null) : arguments.length === 1 ? (w = "en", g = v, v = null) : arguments.length === 2 && (w = g, g = v, v = null);
    var F = "datetime" + (g ? "-" + Sf(g) : "");
    return se.ext.type.order[F] || se.type(F, {
      detect: function(l) {
        return l === F ? F : !1;
      },
      order: {
        pre: function(l) {
          return l.valueOf();
        }
      },
      className: "dt-right"
    }), function(l, c) {
      if (l == null)
        if (I === "--now") {
          var t = /* @__PURE__ */ new Date();
          l = new Date(Date.UTC(
            t.getFullYear(),
            t.getMonth(),
            t.getDate(),
            t.getHours(),
            t.getMinutes(),
            t.getSeconds()
          ));
        } else
          l = "";
      if (c === "type")
        return F;
      if (l === "")
        return c !== "sort" ? "" : os("0000-01-01 00:00:00", null, w);
      if (g !== null && v === g && c !== "sort" && c !== "type" && !(l instanceof Date))
        return l;
      var s = os(l, v, w);
      if (s === null)
        return l;
      if (c === "sort")
        return s;
      var r = g === null ? kl(s, "toDate", "toJSDate", "")[n]() : kl(s, "format", "toFormat", "toISOString", g);
      return c === "display" ? bi(r) : r;
    };
  };
}
var Cf = ",", Af = ".";
if (window.Intl !== void 0)
  try {
    for (var io = new Intl.NumberFormat().formatToParts(100000.1), pa = 0; pa < io.length; pa++)
      io[pa].type === "group" ? Cf = io[pa].value : io[pa].type === "decimal" && (Af = io[pa].value);
  } catch (n) {
  }
se.datetime = function(n, v) {
  var g = "datetime-detect-" + Sf(n);
  v || (v = "en"), se.ext.type.order[g] || se.type(g, {
    detect: function(w) {
      var I = os(w, n, v);
      return w === "" || I ? g : !1;
    },
    order: {
      pre: function(w) {
        return os(w, n, v) || 0;
      }
    },
    className: "dt-right"
  });
};
se.render = {
  date: Gs("toLocaleDateString"),
  datetime: Gs("toLocaleString"),
  time: Gs("toLocaleTimeString"),
  number: function(n, v, g, w, I) {
    return n == null && (n = Cf), v == null && (v = Af), {
      display: function(F) {
        if (typeof F != "number" && typeof F != "string" || F === "" || F === null)
          return F;
        var l = F < 0 ? "-" : "", c = parseFloat(F), t = Math.abs(c);
        if (t >= 1e11 || t < 1e-4 && t !== 0) {
          var s = c.toExponential(g).split(/e\+?/);
          return s[0] + " x 10<sup>" + s[1] + "</sup>";
        }
        if (isNaN(c))
          return bi(F);
        c = c.toFixed(g), F = Math.abs(c);
        var r = parseInt(F, 10), a = g ? v + (F - r).toFixed(g).substring(2) : "";
        return r === 0 && parseFloat(a) === 0 && (l = ""), l + (w || "") + r.toString().replace(
          /\B(?=(\d{3})+(?!\d))/g,
          n
        ) + a + (I || "");
      }
    };
  },
  text: function() {
    return {
      display: bi,
      filter: bi
    };
  }
};
var jn = se.ext.type;
se.type = function(n, v, g) {
  if (!v)
    return {
      className: jn.className[n],
      detect: jn.detect.find(function(l) {
        return l.name === n;
      }),
      order: {
        pre: jn.order[n + "-pre"],
        asc: jn.order[n + "-asc"],
        desc: jn.order[n + "-desc"]
      },
      render: jn.render[n],
      search: jn.search[n]
    };
  var w = function(l, c) {
    jn[l][n] = c;
  }, I = function(l) {
    var c = function(s, r) {
      var a = l(s, r);
      return a === !0 ? n : a;
    };
    Object.defineProperty(c, "name", { value: n });
    var t = jn.detect.findIndex(function(s) {
      return s.name === n;
    });
    t === -1 ? jn.detect.unshift(c) : jn.detect.splice(t, 1, c);
  }, F = function(l) {
    jn.order[n + "-pre"] = l.pre, jn.order[n + "-asc"] = l.asc, jn.order[n + "-desc"] = l.desc;
  };
  g || (g = v, v = null), v === "className" ? w("className", g) : v === "detect" ? I(g) : v === "order" ? F(g) : v === "render" ? w("render", g) : v === "search" ? w("search", g) : v || (g.className && w("className", g.className), g.detect !== void 0 && I(g.detect), g.order && F(g.order), g.render !== void 0 && w("render", g.render), g.search !== void 0 && w("search", g.search));
};
se.types = function() {
  return jn.detect.map(function(n) {
    return n.name;
  });
};
se.type("string", {
  detect: function() {
    return "string";
  },
  order: {
    pre: function(n) {
      return La(n) ? "" : typeof n == "string" ? n.toLowerCase() : n.toString ? n.toString() : "";
    }
  },
  search: ys(!1, !0)
});
se.type("html", {
  detect: function(n) {
    return La(n) || typeof n == "string" && n.indexOf("<") !== -1 ? "html" : null;
  },
  order: {
    pre: function(n) {
      return La(n) ? "" : n.replace ? Di(n).trim().toLowerCase() : n + "";
    }
  },
  search: ys(!0, !0)
});
se.type("date", {
  className: "dt-type-date",
  detect: function(n) {
    if (n && !(n instanceof Date) && !kd.test(n))
      return null;
    var v = Date.parse(n);
    return v !== null && !isNaN(v) || La(n) ? "date" : null;
  },
  order: {
    pre: function(n) {
      var v = Date.parse(n);
      return isNaN(v) ? -1 / 0 : v;
    }
  }
});
se.type("html-num-fmt", {
  className: "dt-type-numeric",
  detect: function(n, v) {
    var g = v.oLanguage.sDecimal;
    return ql(n, g, !0) ? "html-num-fmt" : null;
  },
  order: {
    pre: function(n, v) {
      var g = v.oLanguage.sDecimal;
      return xs(n, g, o0, s0);
    }
  },
  search: ys(!0, !0)
});
se.type("html-num", {
  className: "dt-type-numeric",
  detect: function(n, v) {
    var g = v.oLanguage.sDecimal;
    return ql(n, g) ? "html-num" : null;
  },
  order: {
    pre: function(n, v) {
      var g = v.oLanguage.sDecimal;
      return xs(n, g, o0);
    }
  },
  search: ys(!0, !0)
});
se.type("num-fmt", {
  className: "dt-type-numeric",
  detect: function(n, v) {
    var g = v.oLanguage.sDecimal;
    return l0(n, g, !0) ? "num-fmt" : null;
  },
  order: {
    pre: function(n, v) {
      var g = v.oLanguage.sDecimal;
      return xs(n, g, s0);
    }
  }
});
se.type("num", {
  className: "dt-type-numeric",
  detect: function(n, v) {
    var g = v.oLanguage.sDecimal;
    return l0(n, g) ? "num" : null;
  },
  order: {
    pre: function(n, v) {
      var g = v.oLanguage.sDecimal;
      return xs(n, g);
    }
  }
});
var xs = function(n, v, g, w) {
  if (n !== 0 && (!n || n === "-"))
    return -1 / 0;
  var I = typeof n;
  return I === "number" || I === "bigint" ? n : (v && (n = $l(n, v)), n.replace && (g && (n = n.replace(g, "")), w && (n = n.replace(w, ""))), n * 1);
};
Zt.extend(!0, se.ext.renderer, {
  footer: {
    _: function(n, v, g) {
      v.addClass(g.tfoot.cell);
    }
  },
  header: {
    _: function(n, v, g) {
      v.addClass(g.thead.cell), n.oFeatures.bSort || v.addClass(g.order.none);
      var w = n.bSortCellsTop, I = v.closest("thead").find("tr"), F = v.parent().index();
      // Cells and rows which have the attribute to disable the icons
      v.attr("data-dt-order") === "disable" || v.parent().attr("data-dt-order") === "disable" || // Legacy support for `orderCellsTop`. If it is set, then cells
      // which are not in the top or bottom row of the header (depending
      // on the value) do not get the sorting classes applied to them
      w === !0 && F !== 0 || w === !1 && F !== I.length - 1 || Zt(n.nTable).on("order.dt.DT", function(l, c, t) {
        if (n === c) {
          var s = g.order, r = c.api.columns(v), a = n.aoColumns[r.flatten()[0]], o = r.orderable().includes(!0), f = "", u = r.indexes(), h = r.orderable(!0).flatten(), d = t.map(function(e) {
            return e.col;
          }).join(",");
          v.removeClass(
            s.isAsc + " " + s.isDesc
          ).toggleClass(s.none, !o).toggleClass(s.canAsc, o && h.includes("asc")).toggleClass(s.canDesc, o && h.includes("desc"));
          var i = d.indexOf(u.toArray().join(","));
          if (i !== -1) {
            var p = r.order();
            v.addClass(
              p.includes("asc") ? s.isAsc : "" + p.includes("desc") ? s.isDesc : ""
            );
          }
          if (i === 0 && d.length === u.count()) {
            var y = t[0], m = a.asSorting;
            v.attr("aria-sort", y.dir === "asc" ? "ascending" : "descending"), f = m[y.index + 1] ? "Reverse" : "Remove";
          } else
            v.removeAttr("aria-sort");
          v.attr(
            "aria-label",
            o ? a.ariaTitle + c.api.i18n("oAria.orderable" + f) : a.ariaTitle
          ), o && (v.find(".dt-column-title").attr("role", "button"), v.attr("tabindex", 0));
        }
      });
    }
  },
  layout: {
    _: function(n, v, g) {
      var w = Zt("<div/>").addClass("dt-layout-row").appendTo(v);
      Zt.each(g, function(I, F) {
        var l = F.table ? "" : "dt-" + I + " ";
        F.table && w.addClass("dt-layout-table"), Zt("<div/>").attr({
          id: F.id || null,
          class: "dt-layout-cell " + l + (F.className || "")
        }).append(F.contents).appendTo(w);
      });
    }
  }
});
se.feature = {};
se.feature.register = function(n, v, g) {
  se.ext.features[n] = v, g && Yr.feature.push({
    cFeature: g,
    fnInit: v
  });
};
se.feature.register("info", function(n, v) {
  if (!n.oFeatures.bInfo)
    return null;
  var g = n.oLanguage, w = n.sTableId, I = Zt("<div/>", {
    class: n.oClasses.info.container
  });
  return v = Zt.extend({
    callback: g.fnInfoCallback,
    empty: g.sInfoEmpty,
    postfix: g.sInfoPostFix,
    search: g.sInfoFiltered,
    text: g.sInfo
  }, v), n.aoDrawCallback.push(function(F) {
    S1(F, v, I);
  }), Zt("#" + w + "_info", n.nWrapper).length || (I.attr({
    "aria-live": "polite",
    id: w + "_info",
    role: "status"
  }), Zt(n.nTable).attr("aria-describedby", w + "_info")), I;
}, "i");
function S1(n, v, g) {
  var w = n._iDisplayStart + 1, I = n.fnDisplayEnd(), F = n.fnRecordsTotal(), l = n.fnRecordsDisplay(), c = l ? v.text : v.empty;
  l !== F && (c += " " + v.search), c += v.postfix, c = x0(n, c), v.callback && (c = v.callback.call(
    n.oInstance,
    n,
    w,
    I,
    F,
    l,
    c
  )), g.html(c), Ur(n, null, "info", [n, g[0], c]);
}
var Vs = 0;
se.feature.register("search", function(n, v) {
  if (!n.oFeatures.bFilter)
    return null;
  var g = n.oClasses.search, w = n.sTableId, I = n.oLanguage, F = n.oPreviousSearch, l = '<input type="search" class="' + g.input + '"/>';
  v = Zt.extend({
    placeholder: I.sSearchPlaceholder,
    text: I.sSearch
  }, v), v.text.indexOf("_INPUT_") === -1 && (v.text += "_INPUT_"), v.text = x0(n, v.text);
  var c = v.text.match(/_INPUT_$/), t = v.text.match(/^_INPUT_/), s = v.text.replace(/_INPUT_/, ""), r = "<label>" + v.text + "</label>";
  t ? r = "_INPUT_<label>" + s + "</label>" : c && (r = "<label>" + s + "</label>_INPUT_");
  var a = Zt("<div>").addClass(g.container).append(r.replace(/_INPUT_/, l));
  a.find("label").attr("for", "dt-search-" + Vs), a.find("input").attr("id", "dt-search-" + Vs), Vs++;
  var o = function(h) {
    var d = this.value;
    F.return && h.key !== "Enter" || d != F.search && (F.search = d, uo(n, F), n._iDisplayStart = 0, Ri(n));
  }, f = n.searchDelay !== null ? n.searchDelay : 0, u = Zt("input", a).val(F.search).attr("placeholder", v.placeholder).on(
    "keyup.DT search.DT input.DT paste.DT cut.DT",
    f ? se.util.debounce(o, f) : o
  ).on("mouseup.DT", function(h) {
    setTimeout(function() {
      o.call(u[0], h);
    }, 10);
  }).on("keypress.DT", function(h) {
    if (h.keyCode == 13)
      return !1;
  }).attr("aria-controls", w);
  return Zt(n.nTable).on("search.dt.DT", function(h, d) {
    n === d && u[0] !== document.activeElement && u.val(
      typeof F.search != "function" ? F.search : ""
    );
  }), a;
}, "f");
se.feature.register("paging", function(n, v) {
  if (!n.oFeatures.bPaginate)
    return null;
  v = Zt.extend({
    numbers: se.ext.pager.numbers_length,
    type: n.sPaginationType
  }, v);
  var g = Zt("<div/>").addClass(n.oClasses.paging.container + " paging_" + v.type), w = function() {
    Ef(n, g, v);
  };
  return n.aoDrawCallback.push(w), Zt(n.nTable).on("column-sizing.dt.DT", w), g;
}, "p");
function Ef(n, v, g) {
  if (n._bInitComplete) {
    for (var w = se.ext.pager[g.type], I = n.oLanguage.oAria.paginate || {}, F = n._iDisplayStart, l = n._iDisplayLength, c = n.fnRecordsDisplay(), t = l === -1, s = t ? 0 : Math.ceil(F / l), r = t ? 1 : Math.ceil(c / l), a = w().map(function(y) {
      return y === "numbers" ? Tf(s, r, g.numbers) : y;
    }).flat(), o = [], f = 0; f < a.length; f++) {
      var u = a[f], h = C1(n, u, s, r), d = is(n, "pagingButton")(
        n,
        u,
        h.display,
        h.active,
        h.disabled
      );
      Zt(d.clicker).attr({
        "aria-controls": n.sTableId,
        "aria-disabled": h.disabled ? "true" : null,
        "aria-current": h.active ? "page" : null,
        "aria-label": I[u],
        "data-dt-idx": u,
        tabIndex: h.disabled ? -1 : n.iTabIndex
      }), typeof u != "number" && Zt(d.clicker).addClass(u), gf(
        d.clicker,
        { action: u },
        function(y) {
          y.preventDefault(), m0(n, y.data.action, !0);
        }
      ), o.push(d.display);
    }
    var i = is(n, "pagingContainer")(
      n,
      o
    ), p = v.find(document.activeElement).data("dt-idx");
    v.empty().append(i), p !== void 0 && v.find("[data-dt-idx=" + p + "]").trigger("focus"), o.length && // any buttons
    g.numbers > 1 && // prevent infinite
    Zt(v).outerHeight() >= Zt(o[0]).outerHeight() * 2 - 10 && Ef(n, v, Zt.extend({}, g, { numbers: g.numbers - 2 }));
  }
}
function C1(n, v, g, w) {
  var I = n.oLanguage.oPaginate, F = {
    display: "",
    active: !1,
    disabled: !1
  };
  switch (v) {
    case "ellipsis":
      F.display = "&#x2026;", F.disabled = !0;
      break;
    case "first":
      F.display = I.sFirst, g === 0 && (F.disabled = !0);
      break;
    case "previous":
      F.display = I.sPrevious, g === 0 && (F.disabled = !0);
      break;
    case "next":
      F.display = I.sNext, (w === 0 || g === w - 1) && (F.disabled = !0);
      break;
    case "last":
      F.display = I.sLast, (w === 0 || g === w - 1) && (F.disabled = !0);
      break;
    default:
      typeof v == "number" && (F.display = n.fnFormatNumber(v + 1), g === v && (F.active = !0));
      break;
  }
  return F;
}
function Tf(n, v, g) {
  var w = [], I = Math.floor(g / 2);
  return v <= g ? w = Ha(0, v) : g === 1 ? w = [n] : g === 3 ? n <= 1 ? w = [0, 1, "ellipsis"] : n >= v - 2 ? (w = Ha(v - 2, v), w.unshift("ellipsis")) : w = ["ellipsis", n, "ellipsis"] : n <= I ? (w = Ha(0, g - 2), w.push("ellipsis", v - 1)) : n >= v - 1 - I ? (w = Ha(v - (g - 2), v), w.unshift(0, "ellipsis")) : (w = Ha(n - I + 2, n + I - 1), w.push("ellipsis", v - 1), w.unshift(0, "ellipsis")), w;
}
var Xs = 0;
se.feature.register("pageLength", function(n, v) {
  var g = n.oFeatures;
  if (!g.bPaginate || !g.bLengthChange)
    return null;
  v = Zt.extend({
    menu: n.aLengthMenu,
    text: n.oLanguage.sLengthMenu
  }, v);
  var w = n.oClasses.length, I = n.sTableId, F = v.menu, l = [], c = [], t;
  if (Array.isArray(F[0]))
    l = F[0], c = F[1];
  else
    for (t = 0; t < F.length; t++)
      Zt.isPlainObject(F[t]) ? (l.push(F[t].value), c.push(F[t].label)) : (l.push(F[t]), c.push(F[t]));
  var s = v.text.match(/_MENU_$/), r = v.text.match(/^_MENU_/), a = v.text.replace(/_MENU_/, ""), o = "<label>" + v.text + "</label>";
  r ? o = "_MENU_<label>" + a + "</label>" : s && (o = "<label>" + a + "</label>_MENU_");
  var f = Zt("<div/>").addClass(w.container).append(
    o.replace("_MENU_", "<span></span>")
  ), u = [];
  f.find("label")[0].childNodes.forEach(function(i) {
    i.nodeType === Node.TEXT_NODE && u.push({
      el: i,
      text: i.textContent
    });
  });
  var h = function(i) {
    u.forEach(function(p) {
      p.el.textContent = x0(n, p.text, i);
    });
  }, d = Zt("<select/>", {
    name: I + "_length",
    "aria-controls": I,
    class: w.select
  });
  for (t = 0; t < l.length; t++)
    d[0][t] = new Option(
      typeof c[t] == "number" ? n.fnFormatNumber(c[t]) : c[t],
      l[t]
    );
  return f.find("label").attr("for", "dt-length-" + Xs), d.attr("id", "dt-length-" + Xs), Xs++, f.find("span").replaceWith(d), Zt("select", f).val(n._iDisplayLength).on("change.DT", function() {
    cf(n, Zt(this).val()), Ri(n);
  }), Zt(n.nTable).on("length.dt.DT", function(i, p, y) {
    n === p && (Zt("select", f).val(y), h(y));
  }), h(n._iDisplayLength), f;
}, "l");
Zt.fn.dataTable = se;
se.$ = Zt;
Zt.fn.dataTableSettings = se.settings;
Zt.fn.dataTableExt = se.ext;
Zt.fn.DataTable = function(n) {
  return Zt(this).dataTable(n).api();
};
Zt.each(se, function(n, v) {
  Zt.fn.DataTable[n] = v;
});
/*! FixedHeader 4.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
let ur = Ln;
var A1 = 0, Xa = function(n, v) {
  if (!se.versionCheck("2"))
    throw "Warning: FixedHeader requires DataTables 2 or newer";
  if (!(this instanceof Xa))
    throw "FixedHeader must be initialised with the 'new' keyword.";
  v === !0 && (v = {}), n = new se.Api(n), this.c = ur.extend(!0, {}, Xa.defaults, v), this.s = {
    dt: n,
    position: {
      theadTop: 0,
      tbodyTop: 0,
      tfootTop: 0,
      tfootBottom: 0,
      width: 0,
      left: 0,
      tfootHeight: 0,
      theadHeight: 0,
      windowHeight: ur(window).height(),
      visible: !0
    },
    headerMode: null,
    footerMode: null,
    autoWidth: n.settings()[0].oFeatures.bAutoWidth,
    namespace: ".dtfc" + A1++,
    scrollLeft: {
      header: -1,
      footer: -1
    },
    enable: !0,
    autoDisable: !1
  }, this.dom = {
    floatingHeader: null,
    thead: ur(n.table().header()),
    tbody: ur(n.table().body()),
    tfoot: ur(n.table().footer()),
    header: {
      host: null,
      floating: null,
      floatingParent: ur('<div class="dtfh-floatingparent"><div></div></div>'),
      placeholder: null
    },
    footer: {
      host: null,
      floating: null,
      floatingParent: ur('<div class="dtfh-floatingparent"><div></div></div>'),
      placeholder: null
    }
  }, this.dom.header.host = this.dom.thead.parent(), this.dom.footer.host = this.dom.tfoot.parent();
  var g = n.settings()[0];
  if (g._fixedHeader)
    throw "FixedHeader already initialised on table " + g.nTable.id;
  g._fixedHeader = this, this._constructor();
};
ur.extend(Xa.prototype, {
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * API methods
   */
  /**
   * Kill off FH and any events
   */
  destroy: function() {
    var n = this.dom;
    this.s.dt.off(".dtfc"), ur(window).off(this.s.namespace), n.header.rightBlocker && n.header.rightBlocker.remove(), n.header.leftBlocker && n.header.leftBlocker.remove(), n.footer.rightBlocker && n.footer.rightBlocker.remove(), n.footer.leftBlocker && n.footer.leftBlocker.remove(), this.c.header && this._modeChange("in-place", "header", !0), this.c.footer && n.tfoot.length && this._modeChange("in-place", "footer", !0);
  },
  /**
   * Enable / disable the fixed elements
   *
   * @param  {boolean} enable `true` to enable, `false` to disable
   */
  enable: function(n, v, g) {
    this.s.enable = n, this.s.enableType = g, (v || v === void 0) && (this._positions(), this._scroll(!0));
  },
  /**
   * Get enabled status
   */
  enabled: function() {
    return this.s.enable;
  },
  /**
   * Set header offset
   *
   * @param  {int} new value for headerOffset
   */
  headerOffset: function(n) {
    return n !== void 0 && (this.c.headerOffset = n, this.update()), this.c.headerOffset;
  },
  /**
   * Set footer offset
   *
   * @param  {int} new value for footerOffset
   */
  footerOffset: function(n) {
    return n !== void 0 && (this.c.footerOffset = n, this.update()), this.c.footerOffset;
  },
  /**
   * Recalculate the position of the fixed elements and force them into place
   */
  update: function(n) {
    var v = this.s.dt.table().node();
    !this.s.enable && !this.s.autoDisable || (ur(v).is(":visible") ? (this.s.autoDisable = !1, this.enable(!0, !1)) : (this.s.autoDisable = !0, this.enable(!1, !1)), ur(v).children("thead").length !== 0 && (this._positions(), this._scroll(n !== void 0 ? n : !0)));
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Constructor
   */
  /**
   * FixedHeader constructor - adding the required event listeners and
   * simple initialisation
   *
   * @private
   */
  _constructor: function() {
    var n = this, v = this.s.dt;
    ur(window).on("scroll" + this.s.namespace, function() {
      n._scroll();
    }).on(
      "resize" + this.s.namespace,
      se.util.throttle(function() {
        n.s.position.windowHeight = ur(window).height(), n.update();
      }, 50)
    );
    var g = ur(".fh-fixedHeader");
    !this.c.headerOffset && g.length && (this.c.headerOffset = g.outerHeight());
    var w = ur(".fh-fixedFooter");
    !this.c.footerOffset && w.length && (this.c.footerOffset = w.outerHeight()), v.on(
      "column-reorder.dt.dtfc column-visibility.dt.dtfc column-sizing.dt.dtfc responsive-display.dt.dtfc",
      function(I, F) {
        n.update();
      }
    ).on("draw.dt.dtfc", function(I, F) {
      n.update(F !== v.settings()[0]);
    }), v.on("destroy.dtfc", function() {
      n.destroy();
    }), this._positions(), this._scroll();
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Private methods
   */
  /**
   * Clone a fixed item to act as a place holder for the original element
   * which is moved into a clone of the table element, and moved around the
   * document to give the fixed effect.
   *
   * @param  {string}  item  'header' or 'footer'
   * @param  {boolean} force Force the clone to happen, or allow automatic
   *   decision (reuse existing if available)
   * @private
   */
  _clone: function(n, v) {
    var g = this, w = this.s.dt, I = this.dom[n], F = n === "header" ? this.dom.thead : this.dom.tfoot;
    if (!(n === "footer" && this._scrollEnabled()))
      if (!v && I.floating)
        I.floating.removeClass(
          "fixedHeader-floating fixedHeader-locked"
        );
      else {
        I.floating && (I.placeholder !== null && I.placeholder.remove(), I.floating.children().detach(), I.floating.remove());
        var l = ur(w.table().node()), c = ur(l.parent()), t = this._scrollEnabled();
        I.floating = ur(w.table().node().cloneNode(!1)).attr("aria-hidden", "true").css({
          top: 0,
          left: 0
        }).removeAttr("id"), I.floatingParent.css({
          width: c[0].offsetWidth,
          overflow: "hidden",
          height: "fit-content",
          position: "fixed",
          left: t ? l.offset().left + c.scrollLeft() : 0
        }).css(
          n === "header" ? {
            top: this.c.headerOffset,
            bottom: ""
          } : {
            top: "",
            bottom: this.c.footerOffset
          }
        ).addClass(
          n === "footer" ? "dtfh-floatingparent-foot" : "dtfh-floatingparent-head"
        ).appendTo("body").children().eq(0).append(I.floating), this._stickyPosition(I.floating, "-");
        var s = function() {
          var u = c.scrollLeft();
          g.s.scrollLeft = { footer: u, header: u }, I.floatingParent.scrollLeft(g.s.scrollLeft.header);
        };
        s(), c.off("scroll.dtfh").on("scroll.dtfh", s), I.floatingParent.children().css({
          width: "fit-content",
          paddingRight: g.s.dt.settings()[0].oBrowser.barWidth
        });
        let f = ur(
          n === "footer" ? "div.dtfc-bottom-blocker" : "div.dtfc-top-blocker",
          w.table().container()
        );
        f.length && f.clone().appendTo(I.floatingParent).css({
          position: "fixed",
          right: f.width()
        }), I.placeholder = F.clone(!1), I.placeholder.find("*[id]").removeAttr("id"), I.host.prepend(I.placeholder), I.floating.append(F);
        for (var r = I.placeholder.parent().find("colgroup").clone().appendTo(I.floating).find("col"), a = this.s.dt.columns({ visible: !0 }).widths(), o = 0; o < a.length; o++)
          r.eq(o).css("width", a[o]);
      }
  },
  /**
   * This method sets the sticky position of the header elements to match fixed columns
   * @param {JQuery<HTMLElement>} el
   * @param {string} sign
   */
  _stickyPosition: function(n, v) {
    if (this._scrollEnabled()) {
      var g = this, w = ur(g.s.dt.table().node()).css("direction") === "rtl";
      n.find("th").each(function() {
        if (ur(this).css("position") === "sticky") {
          var I = ur(this).css("right"), F = ur(this).css("left"), l;
          I !== "auto" && !w ? (l = +I.replace(/px/g, ""), ur(this).css("right", l > 0 ? l : 0)) : F !== "auto" && w && (l = +F.replace(/px/g, ""), ur(this).css("left", l > 0 ? l : 0));
        }
      });
    }
  },
  /**
   * Reposition the floating elements to take account of horizontal page
   * scroll
   *
   * @param  {string} item       The `header` or `footer`
   * @param  {int}    scrollLeft Document scrollLeft
   * @private
   */
  _horizontal: function(n, v) {
    var g = this.dom[n], w = this.s.scrollLeft;
    if (g.floating && w[n] !== v) {
      if (this._scrollEnabled()) {
        var I = ur(
          ur(this.s.dt.table().node()).parent()
        ).scrollLeft();
        g.floating.scrollLeft(I), g.floatingParent.scrollLeft(I);
      }
      w[n] = v;
    }
  },
  /**
   * Change from one display mode to another. Each fixed item can be in one
   * of:
   *
   * * `in-place` - In the main DataTable
   * * `in` - Floating over the DataTable
   * * `below` - (Header only) Fixed to the bottom of the table body
   * * `above` - (Footer only) Fixed to the top of the table body
   *
   * @param  {string}  mode        Mode that the item should be shown in
   * @param  {string}  item        'header' or 'footer'
   * @param  {boolean} forceChange Force a redraw of the mode, even if already
   *     in that mode.
   * @private
   */
  _modeChange: function(n, v, g) {
    var w = this.dom[v], I = this.s.position, F = this._scrollEnabled();
    if (!(v === "footer" && F)) {
      var l = function(y) {
        w.floating[0].style.setProperty("width", y + "px", "important"), F || w.floatingParent[0].style.setProperty("width", y + "px", "important");
      }, c = this.dom[v === "footer" ? "tfoot" : "thead"], t = ur.contains(c[0], document.activeElement) ? document.activeElement : null, s = ur(ur(this.s.dt.table().node()).parent());
      if (n === "in-place")
        w.placeholder && (w.placeholder.remove(), w.placeholder = null), v === "header" ? w.host.prepend(c) : w.host.append(c), w.floating && (w.floating.remove(), w.floating = null, this._stickyPosition(w.host, "+")), w.floatingParent && (w.floatingParent.find("div.dtfc-top-blocker").remove(), w.floatingParent.remove()), ur(ur(w.host.parent()).parent()).scrollLeft(
          s.scrollLeft()
        );
      else if (n === "in") {
        this._clone(v, g);
        var r = s.offset(), a = ur(document).scrollTop(), o = ur(window).height(), f = a + o, u = F ? r.top : I.tbodyTop, h = F ? r.top + s.outerHeight() : I.tfootTop, d;
        v === "footer" ? d = u > f ? I.tfootHeight : u + I.tfootHeight - f : d = a + this.c.headerOffset + I.theadHeight - h;
        var i = v === "header" ? "top" : "bottom", p = this.c[v + "Offset"] - (d > 0 ? d : 0);
        w.floating.addClass("fixedHeader-floating"), w.floatingParent.css(i, p).css({
          left: I.left,
          "z-index": 3
        }), l(I.width), v === "footer" && w.floating.css("top", "");
      } else
        n === "below" ? (this._clone(v, g), w.floating.addClass("fixedHeader-locked"), w.floatingParent.css({
          position: "absolute",
          top: I.tfootTop - I.theadHeight,
          left: I.left + "px"
        }), l(I.width)) : n === "above" && (this._clone(v, g), w.floating.addClass("fixedHeader-locked"), w.floatingParent.css({
          position: "absolute",
          top: I.tbodyTop,
          left: I.left + "px"
        }), l(I.width));
      t && t !== document.activeElement && setTimeout(function() {
        t.focus();
      }, 10), this.s.scrollLeft.header = -1, this.s.scrollLeft.footer = -1, this.s[v + "Mode"] = n;
    }
  },
  /**
   * Cache the positional information that is required for the mode
   * calculations that FixedHeader performs.
   *
   * @private
   */
  _positions: function() {
    var n = this.s.dt, v = n.table(), g = this.s.position, w = this.dom, I = ur(v.node()), F = this._scrollEnabled(), l = ur(n.table().header()), c = ur(n.table().footer()), t = w.tbody, s = I.parent();
    g.visible = I.is(":visible"), g.width = I.outerWidth(), g.left = I.offset().left, g.theadTop = l.offset().top, g.tbodyTop = F ? s.offset().top : t.offset().top, g.tbodyHeight = F ? s.outerHeight() : t.outerHeight(), g.theadHeight = l.outerHeight(), g.theadBottom = g.theadTop + g.theadHeight, g.tfootTop = g.tbodyTop + g.tbodyHeight, c.length ? (g.tfootBottom = g.tfootTop + c.outerHeight(), g.tfootHeight = c.outerHeight()) : (g.tfootBottom = g.tfootTop, g.tfootHeight = 0);
  },
  /**
   * Mode calculation - determine what mode the fixed items should be placed
   * into.
   *
   * @param  {boolean} forceChange Force a redraw of the mode, even if already
   *     in that mode.
   * @private
   */
  _scroll: function(n) {
    if (!this.s.dt.settings()[0].bDestroying) {
      var v = this._scrollEnabled(), g = ur(this.s.dt.table().node()).parent(), w = g.offset(), I = g.outerHeight(), F = ur(document).scrollLeft(), l = ur(document).scrollTop(), c = ur(window).height(), t = c + l, s = this.s.position, r, a, o = v ? w.top : s.tbodyTop, f = v ? w.left : s.left, u = v ? w.top + I : s.tfootTop, h = v ? g.outerWidth() : s.tbodyWidth;
      this.c.header && (this.s.enable ? !s.visible || l + this.c.headerOffset + s.theadHeight <= o ? r = "in-place" : /* The scrolling plus the header offset plus the height of the header is lower than the top of the body */ l + this.c.headerOffset + s.theadHeight > o && // And the scrolling at the top plus the header offset is above the bottom of the body
      l + this.c.headerOffset + s.theadHeight < u ? (r = "in", l + this.c.headerOffset + s.theadHeight > u || this.dom.header.floatingParent === void 0 ? n = !0 : this.dom.header.floatingParent.css({
        top: this.c.headerOffset,
        position: "fixed"
      }).children().eq(0).append(this.dom.header.floating)) : r = "below" : r = "in-place", (n || r !== this.s.headerMode) && this._modeChange(r, "header", n), this._horizontal("header", F));
      var d = {
        offset: { top: 0, left: 0 },
        height: 0
      }, i = {
        offset: { top: 0, left: 0 },
        height: 0
      };
      if (this.c.footer && this.dom.tfoot.length && this.dom.tfoot.find("th, td").length) {
        this.s.enable ? !s.visible || s.tfootBottom + this.c.footerOffset <= t ? a = "in-place" : u + s.tfootHeight + this.c.footerOffset > t && o + this.c.footerOffset < t ? (a = "in", n = !0) : a = "above" : a = "in-place", (n || a !== this.s.footerMode) && this._modeChange(a, "footer", n), this._horizontal("footer", F);
        var p = function(x) {
          return {
            offset: x.offset(),
            height: x.outerHeight()
          };
        };
        if (d = this.dom.header.floating ? p(this.dom.header.floating) : p(this.dom.thead), i = this.dom.footer.floating ? p(this.dom.footer.floating) : p(this.dom.tfoot), v && i.offset.top > l) {
          var y = l - w.top, m = t + // If the gap between the top of the scrollbody and the window is more than
          //  the height of the header then the top of the table is still visible so add that gap
          // Doing this has effectively calculated the height from the top of the table to the bottom of the current page
          (y > -d.height ? y : 0) - // Take from that
          // The top of the header plus
          (d.offset.top + // The header height if the standard header is present
          (y < -d.height ? d.height : 0) + // And the height of the footer
          i.height);
          m < 0 && (m = 0), g.outerHeight(m), Math.round(g.outerHeight()) >= Math.round(m) ? ur(this.dom.tfoot.parent()).addClass("fixedHeader-floating") : ur(this.dom.tfoot.parent()).removeClass(
            "fixedHeader-floating"
          );
        }
      }
      if (this.dom.header.floating && this.dom.header.floatingParent.css("left", f - F), this.dom.footer.floating && this.dom.footer.floatingParent.css("left", f - F), this.s.dt.settings()[0]._fixedColumns !== void 0) {
        var e = function(x, S, P) {
          if (P === void 0) {
            var O = ur(
              "div.dtfc-" + x + "-" + S + "-blocker"
            );
            P = O.length === 0 ? null : O.clone().css("z-index", 1);
          }
          return P !== null && (r === "in" || r === "below" ? P.appendTo("body").css({
            top: S === "top" ? d.offset.top : i.offset.top,
            left: x === "right" ? f + h - P.width() : f
          }) : P.detach()), P;
        };
        this.dom.header.rightBlocker = e(
          "right",
          "top",
          this.dom.header.rightBlocker
        ), this.dom.header.leftBlocker = e(
          "left",
          "top",
          this.dom.header.leftBlocker
        ), this.dom.footer.rightBlocker = e(
          "right",
          "bottom",
          this.dom.footer.rightBlocker
        ), this.dom.footer.leftBlocker = e(
          "left",
          "bottom",
          this.dom.footer.leftBlocker
        );
      }
    }
  },
  /**
   * Function to check if scrolling is enabled on the table or not
   * @returns Boolean value indicating if scrolling on the table is enabled or not
   */
  _scrollEnabled: function() {
    var n = this.s.dt.settings()[0].oScroll;
    return n.sY !== "" || n.sX !== "";
  }
});
Xa.version = "4.0.0";
Xa.defaults = {
  header: !0,
  footer: !1,
  headerOffset: 0,
  footerOffset: 0
};
ur.fn.dataTable.FixedHeader = Xa;
ur.fn.DataTable.FixedHeader = Xa;
ur(document).on("init.dt.dtfh", function(n, v, g) {
  if (n.namespace === "dt") {
    var w = v.oInit.fixedHeader, I = se.defaults.fixedHeader;
    if ((w || I) && !v._fixedHeader) {
      var F = ur.extend({}, I, w);
      w !== !1 && new Xa(v, F);
    }
  }
});
se.Api.register("fixedHeader()", function() {
});
se.Api.register("fixedHeader.adjust()", function() {
  return this.iterator("table", function(n) {
    var v = n._fixedHeader;
    v && v.update();
  });
});
se.Api.register("fixedHeader.enable()", function(n) {
  return this.iterator("table", function(v) {
    var g = v._fixedHeader;
    n = n !== void 0 ? n : !0, g && n !== g.enabled() && g.enable(n);
  });
});
se.Api.register("fixedHeader.enabled()", function() {
  if (this.context.length) {
    var n = this.context[0]._fixedHeader;
    if (n)
      return n.enabled();
  }
  return !1;
});
se.Api.register("fixedHeader.disable()", function() {
  return this.iterator("table", function(n) {
    var v = n._fixedHeader;
    v && v.enabled() && v.enable(!1);
  });
});
ur.each(["header", "footer"], function(n, v) {
  se.Api.register("fixedHeader." + v + "Offset()", function(g) {
    var w = this.context;
    return g === void 0 ? w.length && w[0]._fixedHeader ? w[0]._fixedHeader[v + "Offset"]() : void 0 : this.iterator("table", function(I) {
      var F = I._fixedHeader;
      F && F[v + "Offset"](g);
    });
  });
});
var xi = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
function Ff(n) {
  return n && n.__esModule && Object.prototype.hasOwnProperty.call(n, "default") ? n.default : n;
}
function Qo(n) {
  throw new Error('Could not dynamically require "' + n + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var If = { exports: {} };
/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/
(function(n, v) {
  (function(g) {
    n.exports = g();
  })(function() {
    return function g(w, I, F) {
      function l(s, r) {
        if (!I[s]) {
          if (!w[s]) {
            var a = typeof Qo == "function" && Qo;
            if (!r && a)
              return a(s, !0);
            if (c)
              return c(s, !0);
            var o = new Error("Cannot find module '" + s + "'");
            throw o.code = "MODULE_NOT_FOUND", o;
          }
          var f = I[s] = { exports: {} };
          w[s][0].call(f.exports, function(u) {
            var h = w[s][1][u];
            return l(h || u);
          }, f, f.exports, g, w, I, F);
        }
        return I[s].exports;
      }
      for (var c = typeof Qo == "function" && Qo, t = 0; t < F.length; t++)
        l(F[t]);
      return l;
    }({ 1: [function(g, w, I) {
      var F = g("./utils"), l = g("./support"), c = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      I.encode = function(t) {
        for (var s, r, a, o, f, u, h, d = [], i = 0, p = t.length, y = p, m = F.getTypeOf(t) !== "string"; i < t.length; )
          y = p - i, a = m ? (s = t[i++], r = i < p ? t[i++] : 0, i < p ? t[i++] : 0) : (s = t.charCodeAt(i++), r = i < p ? t.charCodeAt(i++) : 0, i < p ? t.charCodeAt(i++) : 0), o = s >> 2, f = (3 & s) << 4 | r >> 4, u = 1 < y ? (15 & r) << 2 | a >> 6 : 64, h = 2 < y ? 63 & a : 64, d.push(c.charAt(o) + c.charAt(f) + c.charAt(u) + c.charAt(h));
        return d.join("");
      }, I.decode = function(t) {
        var s, r, a, o, f, u, h = 0, d = 0, i = "data:";
        if (t.substr(0, i.length) === i)
          throw new Error("Invalid base64 input, it looks like a data url.");
        var p, y = 3 * (t = t.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
        if (t.charAt(t.length - 1) === c.charAt(64) && y--, t.charAt(t.length - 2) === c.charAt(64) && y--, y % 1 != 0)
          throw new Error("Invalid base64 input, bad content length.");
        for (p = l.uint8array ? new Uint8Array(0 | y) : new Array(0 | y); h < t.length; )
          s = c.indexOf(t.charAt(h++)) << 2 | (o = c.indexOf(t.charAt(h++))) >> 4, r = (15 & o) << 4 | (f = c.indexOf(t.charAt(h++))) >> 2, a = (3 & f) << 6 | (u = c.indexOf(t.charAt(h++))), p[d++] = s, f !== 64 && (p[d++] = r), u !== 64 && (p[d++] = a);
        return p;
      };
    }, { "./support": 30, "./utils": 32 }], 2: [function(g, w, I) {
      var F = g("./external"), l = g("./stream/DataWorker"), c = g("./stream/Crc32Probe"), t = g("./stream/DataLengthProbe");
      function s(r, a, o, f, u) {
        this.compressedSize = r, this.uncompressedSize = a, this.crc32 = o, this.compression = f, this.compressedContent = u;
      }
      s.prototype = { getContentWorker: function() {
        var r = new l(F.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new t("data_length")), a = this;
        return r.on("end", function() {
          if (this.streamInfo.data_length !== a.uncompressedSize)
            throw new Error("Bug : uncompressed data size mismatch");
        }), r;
      }, getCompressedWorker: function() {
        return new l(F.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
      } }, s.createWorkerFrom = function(r, a, o) {
        return r.pipe(new c()).pipe(new t("uncompressedSize")).pipe(a.compressWorker(o)).pipe(new t("compressedSize")).withStreamInfo("compression", a);
      }, w.exports = s;
    }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(g, w, I) {
      var F = g("./stream/GenericWorker");
      I.STORE = { magic: "\0\0", compressWorker: function() {
        return new F("STORE compression");
      }, uncompressWorker: function() {
        return new F("STORE decompression");
      } }, I.DEFLATE = g("./flate");
    }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(g, w, I) {
      var F = g("./utils"), l = function() {
        for (var c, t = [], s = 0; s < 256; s++) {
          c = s;
          for (var r = 0; r < 8; r++)
            c = 1 & c ? 3988292384 ^ c >>> 1 : c >>> 1;
          t[s] = c;
        }
        return t;
      }();
      w.exports = function(c, t) {
        return c !== void 0 && c.length ? F.getTypeOf(c) !== "string" ? function(s, r, a, o) {
          var f = l, u = o + a;
          s ^= -1;
          for (var h = o; h < u; h++)
            s = s >>> 8 ^ f[255 & (s ^ r[h])];
          return -1 ^ s;
        }(0 | t, c, c.length, 0) : function(s, r, a, o) {
          var f = l, u = o + a;
          s ^= -1;
          for (var h = o; h < u; h++)
            s = s >>> 8 ^ f[255 & (s ^ r.charCodeAt(h))];
          return -1 ^ s;
        }(0 | t, c, c.length, 0) : 0;
      };
    }, { "./utils": 32 }], 5: [function(g, w, I) {
      I.base64 = !1, I.binary = !1, I.dir = !1, I.createFolders = !0, I.date = null, I.compression = null, I.compressionOptions = null, I.comment = null, I.unixPermissions = null, I.dosPermissions = null;
    }, {}], 6: [function(g, w, I) {
      var F = null;
      F = typeof Promise != "undefined" ? Promise : g("lie"), w.exports = { Promise: F };
    }, { lie: 37 }], 7: [function(g, w, I) {
      var F = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Uint32Array != "undefined", l = g("pako"), c = g("./utils"), t = g("./stream/GenericWorker"), s = F ? "uint8array" : "array";
      function r(a, o) {
        t.call(this, "FlateWorker/" + a), this._pako = null, this._pakoAction = a, this._pakoOptions = o, this.meta = {};
      }
      I.magic = "\b\0", c.inherits(r, t), r.prototype.processChunk = function(a) {
        this.meta = a.meta, this._pako === null && this._createPako(), this._pako.push(c.transformTo(s, a.data), !1);
      }, r.prototype.flush = function() {
        t.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], !0);
      }, r.prototype.cleanUp = function() {
        t.prototype.cleanUp.call(this), this._pako = null;
      }, r.prototype._createPako = function() {
        this._pako = new l[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
        var a = this;
        this._pako.onData = function(o) {
          a.push({ data: o, meta: a.meta });
        };
      }, I.compressWorker = function(a) {
        return new r("Deflate", a);
      }, I.uncompressWorker = function() {
        return new r("Inflate", {});
      };
    }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(g, w, I) {
      function F(f, u) {
        var h, d = "";
        for (h = 0; h < u; h++)
          d += String.fromCharCode(255 & f), f >>>= 8;
        return d;
      }
      function l(f, u, h, d, i, p) {
        var y, m, e = f.file, x = f.compression, S = p !== s.utf8encode, P = c.transformTo("string", p(e.name)), O = c.transformTo("string", s.utf8encode(e.name)), T = e.comment, A = c.transformTo("string", p(T)), E = c.transformTo("string", s.utf8encode(T)), D = O.length !== e.name.length, b = E.length !== T.length, R = "", L = "", N = "", M = e.dir, K = e.date, ct = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
        u && !h || (ct.crc32 = f.crc32, ct.compressedSize = f.compressedSize, ct.uncompressedSize = f.uncompressedSize);
        var J = 0;
        u && (J |= 8), S || !D && !b || (J |= 2048);
        var nt = 0, yt = 0;
        M && (nt |= 16), i === "UNIX" ? (yt = 798, nt |= function(Tt, It) {
          var Lt = Tt;
          return Tt || (Lt = It ? 16893 : 33204), (65535 & Lt) << 16;
        }(e.unixPermissions, M)) : (yt = 20, nt |= function(Tt) {
          return 63 & (Tt || 0);
        }(e.dosPermissions)), y = K.getUTCHours(), y <<= 6, y |= K.getUTCMinutes(), y <<= 5, y |= K.getUTCSeconds() / 2, m = K.getUTCFullYear() - 1980, m <<= 4, m |= K.getUTCMonth() + 1, m <<= 5, m |= K.getUTCDate(), D && (L = F(1, 1) + F(r(P), 4) + O, R += "up" + F(L.length, 2) + L), b && (N = F(1, 1) + F(r(A), 4) + E, R += "uc" + F(N.length, 2) + N);
        var bt = "";
        return bt += `
\0`, bt += F(J, 2), bt += x.magic, bt += F(y, 2), bt += F(m, 2), bt += F(ct.crc32, 4), bt += F(ct.compressedSize, 4), bt += F(ct.uncompressedSize, 4), bt += F(P.length, 2), bt += F(R.length, 2), { fileRecord: a.LOCAL_FILE_HEADER + bt + P + R, dirRecord: a.CENTRAL_FILE_HEADER + F(yt, 2) + bt + F(A.length, 2) + "\0\0\0\0" + F(nt, 4) + F(d, 4) + P + R + A };
      }
      var c = g("../utils"), t = g("../stream/GenericWorker"), s = g("../utf8"), r = g("../crc32"), a = g("../signature");
      function o(f, u, h, d) {
        t.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = u, this.zipPlatform = h, this.encodeFileName = d, this.streamFiles = f, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
      }
      c.inherits(o, t), o.prototype.push = function(f) {
        var u = f.meta.percent || 0, h = this.entriesCount, d = this._sources.length;
        this.accumulate ? this.contentBuffer.push(f) : (this.bytesWritten += f.data.length, t.prototype.push.call(this, { data: f.data, meta: { currentFile: this.currentFile, percent: h ? (u + 100 * (h - d - 1)) / h : 100 } }));
      }, o.prototype.openedSource = function(f) {
        this.currentSourceOffset = this.bytesWritten, this.currentFile = f.file.name;
        var u = this.streamFiles && !f.file.dir;
        if (u) {
          var h = l(f, u, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          this.push({ data: h.fileRecord, meta: { percent: 0 } });
        } else
          this.accumulate = !0;
      }, o.prototype.closedSource = function(f) {
        this.accumulate = !1;
        var u = this.streamFiles && !f.file.dir, h = l(f, u, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
        if (this.dirRecords.push(h.dirRecord), u)
          this.push({ data: function(d) {
            return a.DATA_DESCRIPTOR + F(d.crc32, 4) + F(d.compressedSize, 4) + F(d.uncompressedSize, 4);
          }(f), meta: { percent: 100 } });
        else
          for (this.push({ data: h.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
            this.push(this.contentBuffer.shift());
        this.currentFile = null;
      }, o.prototype.flush = function() {
        for (var f = this.bytesWritten, u = 0; u < this.dirRecords.length; u++)
          this.push({ data: this.dirRecords[u], meta: { percent: 100 } });
        var h = this.bytesWritten - f, d = function(i, p, y, m, e) {
          var x = c.transformTo("string", e(m));
          return a.CENTRAL_DIRECTORY_END + "\0\0\0\0" + F(i, 2) + F(i, 2) + F(p, 4) + F(y, 4) + F(x.length, 2) + x;
        }(this.dirRecords.length, h, f, this.zipComment, this.encodeFileName);
        this.push({ data: d, meta: { percent: 100 } });
      }, o.prototype.prepareNextSource = function() {
        this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
      }, o.prototype.registerPrevious = function(f) {
        this._sources.push(f);
        var u = this;
        return f.on("data", function(h) {
          u.processChunk(h);
        }), f.on("end", function() {
          u.closedSource(u.previous.streamInfo), u._sources.length ? u.prepareNextSource() : u.end();
        }), f.on("error", function(h) {
          u.error(h);
        }), this;
      }, o.prototype.resume = function() {
        return !!t.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
      }, o.prototype.error = function(f) {
        var u = this._sources;
        if (!t.prototype.error.call(this, f))
          return !1;
        for (var h = 0; h < u.length; h++)
          try {
            u[h].error(f);
          } catch (d) {
          }
        return !0;
      }, o.prototype.lock = function() {
        t.prototype.lock.call(this);
        for (var f = this._sources, u = 0; u < f.length; u++)
          f[u].lock();
      }, w.exports = o;
    }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(g, w, I) {
      var F = g("../compressions"), l = g("./ZipFileWorker");
      I.generateWorker = function(c, t, s) {
        var r = new l(t.streamFiles, s, t.platform, t.encodeFileName), a = 0;
        try {
          c.forEach(function(o, f) {
            a++;
            var u = function(p, y) {
              var m = p || y, e = F[m];
              if (!e)
                throw new Error(m + " is not a valid compression method !");
              return e;
            }(f.options.compression, t.compression), h = f.options.compressionOptions || t.compressionOptions || {}, d = f.dir, i = f.date;
            f._compressWorker(u, h).withStreamInfo("file", { name: o, dir: d, date: i, comment: f.comment || "", unixPermissions: f.unixPermissions, dosPermissions: f.dosPermissions }).pipe(r);
          }), r.entriesCount = a;
        } catch (o) {
          r.error(o);
        }
        return r;
      };
    }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(g, w, I) {
      function F() {
        if (!(this instanceof F))
          return new F();
        if (arguments.length)
          throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
        this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
          var l = new F();
          for (var c in this)
            typeof this[c] != "function" && (l[c] = this[c]);
          return l;
        };
      }
      (F.prototype = g("./object")).loadAsync = g("./load"), F.support = g("./support"), F.defaults = g("./defaults"), F.version = "3.10.1", F.loadAsync = function(l, c) {
        return new F().loadAsync(l, c);
      }, F.external = g("./external"), w.exports = F;
    }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(g, w, I) {
      var F = g("./utils"), l = g("./external"), c = g("./utf8"), t = g("./zipEntries"), s = g("./stream/Crc32Probe"), r = g("./nodejsUtils");
      function a(o) {
        return new l.Promise(function(f, u) {
          var h = o.decompressed.getContentWorker().pipe(new s());
          h.on("error", function(d) {
            u(d);
          }).on("end", function() {
            h.streamInfo.crc32 !== o.decompressed.crc32 ? u(new Error("Corrupted zip : CRC32 mismatch")) : f();
          }).resume();
        });
      }
      w.exports = function(o, f) {
        var u = this;
        return f = F.extend(f || {}, { base64: !1, checkCRC32: !1, optimizedBinaryString: !1, createFolders: !1, decodeFileName: c.utf8decode }), r.isNode && r.isStream(o) ? l.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : F.prepareContent("the loaded zip file", o, !0, f.optimizedBinaryString, f.base64).then(function(h) {
          var d = new t(f);
          return d.load(h), d;
        }).then(function(h) {
          var d = [l.Promise.resolve(h)], i = h.files;
          if (f.checkCRC32)
            for (var p = 0; p < i.length; p++)
              d.push(a(i[p]));
          return l.Promise.all(d);
        }).then(function(h) {
          for (var d = h.shift(), i = d.files, p = 0; p < i.length; p++) {
            var y = i[p], m = y.fileNameStr, e = F.resolve(y.fileNameStr);
            u.file(e, y.decompressed, { binary: !0, optimizedBinaryString: !0, date: y.date, dir: y.dir, comment: y.fileCommentStr.length ? y.fileCommentStr : null, unixPermissions: y.unixPermissions, dosPermissions: y.dosPermissions, createFolders: f.createFolders }), y.dir || (u.file(e).unsafeOriginalName = m);
          }
          return d.zipComment.length && (u.comment = d.zipComment), u;
        });
      };
    }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(g, w, I) {
      var F = g("../utils"), l = g("../stream/GenericWorker");
      function c(t, s) {
        l.call(this, "Nodejs stream input adapter for " + t), this._upstreamEnded = !1, this._bindStream(s);
      }
      F.inherits(c, l), c.prototype._bindStream = function(t) {
        var s = this;
        (this._stream = t).pause(), t.on("data", function(r) {
          s.push({ data: r, meta: { percent: 0 } });
        }).on("error", function(r) {
          s.isPaused ? this.generatedError = r : s.error(r);
        }).on("end", function() {
          s.isPaused ? s._upstreamEnded = !0 : s.end();
        });
      }, c.prototype.pause = function() {
        return !!l.prototype.pause.call(this) && (this._stream.pause(), !0);
      }, c.prototype.resume = function() {
        return !!l.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
      }, w.exports = c;
    }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(g, w, I) {
      var F = g("readable-stream").Readable;
      function l(c, t, s) {
        F.call(this, t), this._helper = c;
        var r = this;
        c.on("data", function(a, o) {
          r.push(a) || r._helper.pause(), s && s(o);
        }).on("error", function(a) {
          r.emit("error", a);
        }).on("end", function() {
          r.push(null);
        });
      }
      g("../utils").inherits(l, F), l.prototype._read = function() {
        this._helper.resume();
      }, w.exports = l;
    }, { "../utils": 32, "readable-stream": 16 }], 14: [function(g, w, I) {
      w.exports = { isNode: typeof Buffer != "undefined", newBufferFrom: function(F, l) {
        if (Buffer.from && Buffer.from !== Uint8Array.from)
          return Buffer.from(F, l);
        if (typeof F == "number")
          throw new Error('The "data" argument must not be a number');
        return new Buffer(F, l);
      }, allocBuffer: function(F) {
        if (Buffer.alloc)
          return Buffer.alloc(F);
        var l = new Buffer(F);
        return l.fill(0), l;
      }, isBuffer: function(F) {
        return Buffer.isBuffer(F);
      }, isStream: function(F) {
        return F && typeof F.on == "function" && typeof F.pause == "function" && typeof F.resume == "function";
      } };
    }, {}], 15: [function(g, w, I) {
      function F(e, x, S) {
        var P, O = c.getTypeOf(x), T = c.extend(S || {}, r);
        T.date = T.date || /* @__PURE__ */ new Date(), T.compression !== null && (T.compression = T.compression.toUpperCase()), typeof T.unixPermissions == "string" && (T.unixPermissions = parseInt(T.unixPermissions, 8)), T.unixPermissions && 16384 & T.unixPermissions && (T.dir = !0), T.dosPermissions && 16 & T.dosPermissions && (T.dir = !0), T.dir && (e = i(e)), T.createFolders && (P = d(e)) && p.call(this, P, !0);
        var A = O === "string" && T.binary === !1 && T.base64 === !1;
        S && S.binary !== void 0 || (T.binary = !A), (x instanceof a && x.uncompressedSize === 0 || T.dir || !x || x.length === 0) && (T.base64 = !1, T.binary = !0, x = "", T.compression = "STORE", O = "string");
        var E = null;
        E = x instanceof a || x instanceof t ? x : u.isNode && u.isStream(x) ? new h(e, x) : c.prepareContent(e, x, T.binary, T.optimizedBinaryString, T.base64);
        var D = new o(e, E, T);
        this.files[e] = D;
      }
      var l = g("./utf8"), c = g("./utils"), t = g("./stream/GenericWorker"), s = g("./stream/StreamHelper"), r = g("./defaults"), a = g("./compressedObject"), o = g("./zipObject"), f = g("./generate"), u = g("./nodejsUtils"), h = g("./nodejs/NodejsStreamInputAdapter"), d = function(e) {
        e.slice(-1) === "/" && (e = e.substring(0, e.length - 1));
        var x = e.lastIndexOf("/");
        return 0 < x ? e.substring(0, x) : "";
      }, i = function(e) {
        return e.slice(-1) !== "/" && (e += "/"), e;
      }, p = function(e, x) {
        return x = x !== void 0 ? x : r.createFolders, e = i(e), this.files[e] || F.call(this, e, null, { dir: !0, createFolders: x }), this.files[e];
      };
      function y(e) {
        return Object.prototype.toString.call(e) === "[object RegExp]";
      }
      var m = { load: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, forEach: function(e) {
        var x, S, P;
        for (x in this.files)
          P = this.files[x], (S = x.slice(this.root.length, x.length)) && x.slice(0, this.root.length) === this.root && e(S, P);
      }, filter: function(e) {
        var x = [];
        return this.forEach(function(S, P) {
          e(S, P) && x.push(P);
        }), x;
      }, file: function(e, x, S) {
        if (arguments.length !== 1)
          return e = this.root + e, F.call(this, e, x, S), this;
        if (y(e)) {
          var P = e;
          return this.filter(function(T, A) {
            return !A.dir && P.test(T);
          });
        }
        var O = this.files[this.root + e];
        return O && !O.dir ? O : null;
      }, folder: function(e) {
        if (!e)
          return this;
        if (y(e))
          return this.filter(function(O, T) {
            return T.dir && e.test(O);
          });
        var x = this.root + e, S = p.call(this, x), P = this.clone();
        return P.root = S.name, P;
      }, remove: function(e) {
        e = this.root + e;
        var x = this.files[e];
        if (x || (e.slice(-1) !== "/" && (e += "/"), x = this.files[e]), x && !x.dir)
          delete this.files[e];
        else
          for (var S = this.filter(function(O, T) {
            return T.name.slice(0, e.length) === e;
          }), P = 0; P < S.length; P++)
            delete this.files[S[P].name];
        return this;
      }, generate: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, generateInternalStream: function(e) {
        var x, S = {};
        try {
          if ((S = c.extend(e || {}, { streamFiles: !1, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: l.utf8encode })).type = S.type.toLowerCase(), S.compression = S.compression.toUpperCase(), S.type === "binarystring" && (S.type = "string"), !S.type)
            throw new Error("No output type specified.");
          c.checkSupport(S.type), S.platform !== "darwin" && S.platform !== "freebsd" && S.platform !== "linux" && S.platform !== "sunos" || (S.platform = "UNIX"), S.platform === "win32" && (S.platform = "DOS");
          var P = S.comment || this.comment || "";
          x = f.generateWorker(this, S, P);
        } catch (O) {
          (x = new t("error")).error(O);
        }
        return new s(x, S.type || "string", S.mimeType);
      }, generateAsync: function(e, x) {
        return this.generateInternalStream(e).accumulate(x);
      }, generateNodeStream: function(e, x) {
        return (e = e || {}).type || (e.type = "nodebuffer"), this.generateInternalStream(e).toNodejsStream(x);
      } };
      w.exports = m;
    }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(g, w, I) {
      w.exports = g("stream");
    }, { stream: void 0 }], 17: [function(g, w, I) {
      var F = g("./DataReader");
      function l(c) {
        F.call(this, c);
        for (var t = 0; t < this.data.length; t++)
          c[t] = 255 & c[t];
      }
      g("../utils").inherits(l, F), l.prototype.byteAt = function(c) {
        return this.data[this.zero + c];
      }, l.prototype.lastIndexOfSignature = function(c) {
        for (var t = c.charCodeAt(0), s = c.charCodeAt(1), r = c.charCodeAt(2), a = c.charCodeAt(3), o = this.length - 4; 0 <= o; --o)
          if (this.data[o] === t && this.data[o + 1] === s && this.data[o + 2] === r && this.data[o + 3] === a)
            return o - this.zero;
        return -1;
      }, l.prototype.readAndCheckSignature = function(c) {
        var t = c.charCodeAt(0), s = c.charCodeAt(1), r = c.charCodeAt(2), a = c.charCodeAt(3), o = this.readData(4);
        return t === o[0] && s === o[1] && r === o[2] && a === o[3];
      }, l.prototype.readData = function(c) {
        if (this.checkOffset(c), c === 0)
          return [];
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + c);
        return this.index += c, t;
      }, w.exports = l;
    }, { "../utils": 32, "./DataReader": 18 }], 18: [function(g, w, I) {
      var F = g("../utils");
      function l(c) {
        this.data = c, this.length = c.length, this.index = 0, this.zero = 0;
      }
      l.prototype = { checkOffset: function(c) {
        this.checkIndex(this.index + c);
      }, checkIndex: function(c) {
        if (this.length < this.zero + c || c < 0)
          throw new Error("End of data reached (data length = " + this.length + ", asked index = " + c + "). Corrupted zip ?");
      }, setIndex: function(c) {
        this.checkIndex(c), this.index = c;
      }, skip: function(c) {
        this.setIndex(this.index + c);
      }, byteAt: function() {
      }, readInt: function(c) {
        var t, s = 0;
        for (this.checkOffset(c), t = this.index + c - 1; t >= this.index; t--)
          s = (s << 8) + this.byteAt(t);
        return this.index += c, s;
      }, readString: function(c) {
        return F.transformTo("string", this.readData(c));
      }, readData: function() {
      }, lastIndexOfSignature: function() {
      }, readAndCheckSignature: function() {
      }, readDate: function() {
        var c = this.readInt(4);
        return new Date(Date.UTC(1980 + (c >> 25 & 127), (c >> 21 & 15) - 1, c >> 16 & 31, c >> 11 & 31, c >> 5 & 63, (31 & c) << 1));
      } }, w.exports = l;
    }, { "../utils": 32 }], 19: [function(g, w, I) {
      var F = g("./Uint8ArrayReader");
      function l(c) {
        F.call(this, c);
      }
      g("../utils").inherits(l, F), l.prototype.readData = function(c) {
        this.checkOffset(c);
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + c);
        return this.index += c, t;
      }, w.exports = l;
    }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(g, w, I) {
      var F = g("./DataReader");
      function l(c) {
        F.call(this, c);
      }
      g("../utils").inherits(l, F), l.prototype.byteAt = function(c) {
        return this.data.charCodeAt(this.zero + c);
      }, l.prototype.lastIndexOfSignature = function(c) {
        return this.data.lastIndexOf(c) - this.zero;
      }, l.prototype.readAndCheckSignature = function(c) {
        return c === this.readData(4);
      }, l.prototype.readData = function(c) {
        this.checkOffset(c);
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + c);
        return this.index += c, t;
      }, w.exports = l;
    }, { "../utils": 32, "./DataReader": 18 }], 21: [function(g, w, I) {
      var F = g("./ArrayReader");
      function l(c) {
        F.call(this, c);
      }
      g("../utils").inherits(l, F), l.prototype.readData = function(c) {
        if (this.checkOffset(c), c === 0)
          return new Uint8Array(0);
        var t = this.data.subarray(this.zero + this.index, this.zero + this.index + c);
        return this.index += c, t;
      }, w.exports = l;
    }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(g, w, I) {
      var F = g("../utils"), l = g("../support"), c = g("./ArrayReader"), t = g("./StringReader"), s = g("./NodeBufferReader"), r = g("./Uint8ArrayReader");
      w.exports = function(a) {
        var o = F.getTypeOf(a);
        return F.checkSupport(o), o !== "string" || l.uint8array ? o === "nodebuffer" ? new s(a) : l.uint8array ? new r(F.transformTo("uint8array", a)) : new c(F.transformTo("array", a)) : new t(a);
      };
    }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(g, w, I) {
      I.LOCAL_FILE_HEADER = "PK", I.CENTRAL_FILE_HEADER = "PK", I.CENTRAL_DIRECTORY_END = "PK", I.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", I.ZIP64_CENTRAL_DIRECTORY_END = "PK", I.DATA_DESCRIPTOR = "PK\x07\b";
    }, {}], 24: [function(g, w, I) {
      var F = g("./GenericWorker"), l = g("../utils");
      function c(t) {
        F.call(this, "ConvertWorker to " + t), this.destType = t;
      }
      l.inherits(c, F), c.prototype.processChunk = function(t) {
        this.push({ data: l.transformTo(this.destType, t.data), meta: t.meta });
      }, w.exports = c;
    }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(g, w, I) {
      var F = g("./GenericWorker"), l = g("../crc32");
      function c() {
        F.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
      }
      g("../utils").inherits(c, F), c.prototype.processChunk = function(t) {
        this.streamInfo.crc32 = l(t.data, this.streamInfo.crc32 || 0), this.push(t);
      }, w.exports = c;
    }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(g, w, I) {
      var F = g("../utils"), l = g("./GenericWorker");
      function c(t) {
        l.call(this, "DataLengthProbe for " + t), this.propName = t, this.withStreamInfo(t, 0);
      }
      F.inherits(c, l), c.prototype.processChunk = function(t) {
        if (t) {
          var s = this.streamInfo[this.propName] || 0;
          this.streamInfo[this.propName] = s + t.data.length;
        }
        l.prototype.processChunk.call(this, t);
      }, w.exports = c;
    }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(g, w, I) {
      var F = g("../utils"), l = g("./GenericWorker");
      function c(t) {
        l.call(this, "DataWorker");
        var s = this;
        this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, t.then(function(r) {
          s.dataIsReady = !0, s.data = r, s.max = r && r.length || 0, s.type = F.getTypeOf(r), s.isPaused || s._tickAndRepeat();
        }, function(r) {
          s.error(r);
        });
      }
      F.inherits(c, l), c.prototype.cleanUp = function() {
        l.prototype.cleanUp.call(this), this.data = null;
      }, c.prototype.resume = function() {
        return !!l.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, F.delay(this._tickAndRepeat, [], this)), !0);
      }, c.prototype._tickAndRepeat = function() {
        this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (F.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
      }, c.prototype._tick = function() {
        if (this.isPaused || this.isFinished)
          return !1;
        var t = null, s = Math.min(this.max, this.index + 16384);
        if (this.index >= this.max)
          return this.end();
        switch (this.type) {
          case "string":
            t = this.data.substring(this.index, s);
            break;
          case "uint8array":
            t = this.data.subarray(this.index, s);
            break;
          case "array":
          case "nodebuffer":
            t = this.data.slice(this.index, s);
        }
        return this.index = s, this.push({ data: t, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
      }, w.exports = c;
    }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(g, w, I) {
      function F(l) {
        this.name = l || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
      }
      F.prototype = { push: function(l) {
        this.emit("data", l);
      }, end: function() {
        if (this.isFinished)
          return !1;
        this.flush();
        try {
          this.emit("end"), this.cleanUp(), this.isFinished = !0;
        } catch (l) {
          this.emit("error", l);
        }
        return !0;
      }, error: function(l) {
        return !this.isFinished && (this.isPaused ? this.generatedError = l : (this.isFinished = !0, this.emit("error", l), this.previous && this.previous.error(l), this.cleanUp()), !0);
      }, on: function(l, c) {
        return this._listeners[l].push(c), this;
      }, cleanUp: function() {
        this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
      }, emit: function(l, c) {
        if (this._listeners[l])
          for (var t = 0; t < this._listeners[l].length; t++)
            this._listeners[l][t].call(this, c);
      }, pipe: function(l) {
        return l.registerPrevious(this);
      }, registerPrevious: function(l) {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.streamInfo = l.streamInfo, this.mergeStreamInfo(), this.previous = l;
        var c = this;
        return l.on("data", function(t) {
          c.processChunk(t);
        }), l.on("end", function() {
          c.end();
        }), l.on("error", function(t) {
          c.error(t);
        }), this;
      }, pause: function() {
        return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
      }, resume: function() {
        if (!this.isPaused || this.isFinished)
          return !1;
        var l = this.isPaused = !1;
        return this.generatedError && (this.error(this.generatedError), l = !0), this.previous && this.previous.resume(), !l;
      }, flush: function() {
      }, processChunk: function(l) {
        this.push(l);
      }, withStreamInfo: function(l, c) {
        return this.extraStreamInfo[l] = c, this.mergeStreamInfo(), this;
      }, mergeStreamInfo: function() {
        for (var l in this.extraStreamInfo)
          Object.prototype.hasOwnProperty.call(this.extraStreamInfo, l) && (this.streamInfo[l] = this.extraStreamInfo[l]);
      }, lock: function() {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.isLocked = !0, this.previous && this.previous.lock();
      }, toString: function() {
        var l = "Worker " + this.name;
        return this.previous ? this.previous + " -> " + l : l;
      } }, w.exports = F;
    }, {}], 29: [function(g, w, I) {
      var F = g("../utils"), l = g("./ConvertWorker"), c = g("./GenericWorker"), t = g("../base64"), s = g("../support"), r = g("../external"), a = null;
      if (s.nodestream)
        try {
          a = g("../nodejs/NodejsStreamOutputAdapter");
        } catch (u) {
        }
      function o(u, h) {
        return new r.Promise(function(d, i) {
          var p = [], y = u._internalType, m = u._outputType, e = u._mimeType;
          u.on("data", function(x, S) {
            p.push(x), h && h(S);
          }).on("error", function(x) {
            p = [], i(x);
          }).on("end", function() {
            try {
              var x = function(S, P, O) {
                switch (S) {
                  case "blob":
                    return F.newBlob(F.transformTo("arraybuffer", P), O);
                  case "base64":
                    return t.encode(P);
                  default:
                    return F.transformTo(S, P);
                }
              }(m, function(S, P) {
                var O, T = 0, A = null, E = 0;
                for (O = 0; O < P.length; O++)
                  E += P[O].length;
                switch (S) {
                  case "string":
                    return P.join("");
                  case "array":
                    return Array.prototype.concat.apply([], P);
                  case "uint8array":
                    for (A = new Uint8Array(E), O = 0; O < P.length; O++)
                      A.set(P[O], T), T += P[O].length;
                    return A;
                  case "nodebuffer":
                    return Buffer.concat(P);
                  default:
                    throw new Error("concat : unsupported type '" + S + "'");
                }
              }(y, p), e);
              d(x);
            } catch (S) {
              i(S);
            }
            p = [];
          }).resume();
        });
      }
      function f(u, h, d) {
        var i = h;
        switch (h) {
          case "blob":
          case "arraybuffer":
            i = "uint8array";
            break;
          case "base64":
            i = "string";
        }
        try {
          this._internalType = i, this._outputType = h, this._mimeType = d, F.checkSupport(i), this._worker = u.pipe(new l(i)), u.lock();
        } catch (p) {
          this._worker = new c("error"), this._worker.error(p);
        }
      }
      f.prototype = { accumulate: function(u) {
        return o(this, u);
      }, on: function(u, h) {
        var d = this;
        return u === "data" ? this._worker.on(u, function(i) {
          h.call(d, i.data, i.meta);
        }) : this._worker.on(u, function() {
          F.delay(h, arguments, d);
        }), this;
      }, resume: function() {
        return F.delay(this._worker.resume, [], this._worker), this;
      }, pause: function() {
        return this._worker.pause(), this;
      }, toNodejsStream: function(u) {
        if (F.checkSupport("nodestream"), this._outputType !== "nodebuffer")
          throw new Error(this._outputType + " is not supported by this method");
        return new a(this, { objectMode: this._outputType !== "nodebuffer" }, u);
      } }, w.exports = f;
    }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(g, w, I) {
      if (I.base64 = !0, I.array = !0, I.string = !0, I.arraybuffer = typeof ArrayBuffer != "undefined" && typeof Uint8Array != "undefined", I.nodebuffer = typeof Buffer != "undefined", I.uint8array = typeof Uint8Array != "undefined", typeof ArrayBuffer == "undefined")
        I.blob = !1;
      else {
        var F = new ArrayBuffer(0);
        try {
          I.blob = new Blob([F], { type: "application/zip" }).size === 0;
        } catch (c) {
          try {
            var l = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            l.append(F), I.blob = l.getBlob("application/zip").size === 0;
          } catch (t) {
            I.blob = !1;
          }
        }
      }
      try {
        I.nodestream = !!g("readable-stream").Readable;
      } catch (c) {
        I.nodestream = !1;
      }
    }, { "readable-stream": 16 }], 31: [function(g, w, I) {
      for (var F = g("./utils"), l = g("./support"), c = g("./nodejsUtils"), t = g("./stream/GenericWorker"), s = new Array(256), r = 0; r < 256; r++)
        s[r] = 252 <= r ? 6 : 248 <= r ? 5 : 240 <= r ? 4 : 224 <= r ? 3 : 192 <= r ? 2 : 1;
      s[254] = s[254] = 1;
      function a() {
        t.call(this, "utf-8 decode"), this.leftOver = null;
      }
      function o() {
        t.call(this, "utf-8 encode");
      }
      I.utf8encode = function(f) {
        return l.nodebuffer ? c.newBufferFrom(f, "utf-8") : function(u) {
          var h, d, i, p, y, m = u.length, e = 0;
          for (p = 0; p < m; p++)
            (64512 & (d = u.charCodeAt(p))) == 55296 && p + 1 < m && (64512 & (i = u.charCodeAt(p + 1))) == 56320 && (d = 65536 + (d - 55296 << 10) + (i - 56320), p++), e += d < 128 ? 1 : d < 2048 ? 2 : d < 65536 ? 3 : 4;
          for (h = l.uint8array ? new Uint8Array(e) : new Array(e), p = y = 0; y < e; p++)
            (64512 & (d = u.charCodeAt(p))) == 55296 && p + 1 < m && (64512 & (i = u.charCodeAt(p + 1))) == 56320 && (d = 65536 + (d - 55296 << 10) + (i - 56320), p++), d < 128 ? h[y++] = d : (d < 2048 ? h[y++] = 192 | d >>> 6 : (d < 65536 ? h[y++] = 224 | d >>> 12 : (h[y++] = 240 | d >>> 18, h[y++] = 128 | d >>> 12 & 63), h[y++] = 128 | d >>> 6 & 63), h[y++] = 128 | 63 & d);
          return h;
        }(f);
      }, I.utf8decode = function(f) {
        return l.nodebuffer ? F.transformTo("nodebuffer", f).toString("utf-8") : function(u) {
          var h, d, i, p, y = u.length, m = new Array(2 * y);
          for (h = d = 0; h < y; )
            if ((i = u[h++]) < 128)
              m[d++] = i;
            else if (4 < (p = s[i]))
              m[d++] = 65533, h += p - 1;
            else {
              for (i &= p === 2 ? 31 : p === 3 ? 15 : 7; 1 < p && h < y; )
                i = i << 6 | 63 & u[h++], p--;
              1 < p ? m[d++] = 65533 : i < 65536 ? m[d++] = i : (i -= 65536, m[d++] = 55296 | i >> 10 & 1023, m[d++] = 56320 | 1023 & i);
            }
          return m.length !== d && (m.subarray ? m = m.subarray(0, d) : m.length = d), F.applyFromCharCode(m);
        }(f = F.transformTo(l.uint8array ? "uint8array" : "array", f));
      }, F.inherits(a, t), a.prototype.processChunk = function(f) {
        var u = F.transformTo(l.uint8array ? "uint8array" : "array", f.data);
        if (this.leftOver && this.leftOver.length) {
          if (l.uint8array) {
            var h = u;
            (u = new Uint8Array(h.length + this.leftOver.length)).set(this.leftOver, 0), u.set(h, this.leftOver.length);
          } else
            u = this.leftOver.concat(u);
          this.leftOver = null;
        }
        var d = function(p, y) {
          var m;
          for ((y = y || p.length) > p.length && (y = p.length), m = y - 1; 0 <= m && (192 & p[m]) == 128; )
            m--;
          return m < 0 || m === 0 ? y : m + s[p[m]] > y ? m : y;
        }(u), i = u;
        d !== u.length && (l.uint8array ? (i = u.subarray(0, d), this.leftOver = u.subarray(d, u.length)) : (i = u.slice(0, d), this.leftOver = u.slice(d, u.length))), this.push({ data: I.utf8decode(i), meta: f.meta });
      }, a.prototype.flush = function() {
        this.leftOver && this.leftOver.length && (this.push({ data: I.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
      }, I.Utf8DecodeWorker = a, F.inherits(o, t), o.prototype.processChunk = function(f) {
        this.push({ data: I.utf8encode(f.data), meta: f.meta });
      }, I.Utf8EncodeWorker = o;
    }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(g, w, I) {
      var F = g("./support"), l = g("./base64"), c = g("./nodejsUtils"), t = g("./external");
      function s(h) {
        return h;
      }
      function r(h, d) {
        for (var i = 0; i < h.length; ++i)
          d[i] = 255 & h.charCodeAt(i);
        return d;
      }
      g("setimmediate"), I.newBlob = function(h, d) {
        I.checkSupport("blob");
        try {
          return new Blob([h], { type: d });
        } catch (p) {
          try {
            var i = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            return i.append(h), i.getBlob(d);
          } catch (y) {
            throw new Error("Bug : can't construct the Blob.");
          }
        }
      };
      var a = { stringifyByChunk: function(h, d, i) {
        var p = [], y = 0, m = h.length;
        if (m <= i)
          return String.fromCharCode.apply(null, h);
        for (; y < m; )
          d === "array" || d === "nodebuffer" ? p.push(String.fromCharCode.apply(null, h.slice(y, Math.min(y + i, m)))) : p.push(String.fromCharCode.apply(null, h.subarray(y, Math.min(y + i, m)))), y += i;
        return p.join("");
      }, stringifyByChar: function(h) {
        for (var d = "", i = 0; i < h.length; i++)
          d += String.fromCharCode(h[i]);
        return d;
      }, applyCanBeUsed: { uint8array: function() {
        try {
          return F.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
        } catch (h) {
          return !1;
        }
      }(), nodebuffer: function() {
        try {
          return F.nodebuffer && String.fromCharCode.apply(null, c.allocBuffer(1)).length === 1;
        } catch (h) {
          return !1;
        }
      }() } };
      function o(h) {
        var d = 65536, i = I.getTypeOf(h), p = !0;
        if (i === "uint8array" ? p = a.applyCanBeUsed.uint8array : i === "nodebuffer" && (p = a.applyCanBeUsed.nodebuffer), p)
          for (; 1 < d; )
            try {
              return a.stringifyByChunk(h, i, d);
            } catch (y) {
              d = Math.floor(d / 2);
            }
        return a.stringifyByChar(h);
      }
      function f(h, d) {
        for (var i = 0; i < h.length; i++)
          d[i] = h[i];
        return d;
      }
      I.applyFromCharCode = o;
      var u = {};
      u.string = { string: s, array: function(h) {
        return r(h, new Array(h.length));
      }, arraybuffer: function(h) {
        return u.string.uint8array(h).buffer;
      }, uint8array: function(h) {
        return r(h, new Uint8Array(h.length));
      }, nodebuffer: function(h) {
        return r(h, c.allocBuffer(h.length));
      } }, u.array = { string: o, array: s, arraybuffer: function(h) {
        return new Uint8Array(h).buffer;
      }, uint8array: function(h) {
        return new Uint8Array(h);
      }, nodebuffer: function(h) {
        return c.newBufferFrom(h);
      } }, u.arraybuffer = { string: function(h) {
        return o(new Uint8Array(h));
      }, array: function(h) {
        return f(new Uint8Array(h), new Array(h.byteLength));
      }, arraybuffer: s, uint8array: function(h) {
        return new Uint8Array(h);
      }, nodebuffer: function(h) {
        return c.newBufferFrom(new Uint8Array(h));
      } }, u.uint8array = { string: o, array: function(h) {
        return f(h, new Array(h.length));
      }, arraybuffer: function(h) {
        return h.buffer;
      }, uint8array: s, nodebuffer: function(h) {
        return c.newBufferFrom(h);
      } }, u.nodebuffer = { string: o, array: function(h) {
        return f(h, new Array(h.length));
      }, arraybuffer: function(h) {
        return u.nodebuffer.uint8array(h).buffer;
      }, uint8array: function(h) {
        return f(h, new Uint8Array(h.length));
      }, nodebuffer: s }, I.transformTo = function(h, d) {
        if (d = d || "", !h)
          return d;
        I.checkSupport(h);
        var i = I.getTypeOf(d);
        return u[i][h](d);
      }, I.resolve = function(h) {
        for (var d = h.split("/"), i = [], p = 0; p < d.length; p++) {
          var y = d[p];
          y === "." || y === "" && p !== 0 && p !== d.length - 1 || (y === ".." ? i.pop() : i.push(y));
        }
        return i.join("/");
      }, I.getTypeOf = function(h) {
        return typeof h == "string" ? "string" : Object.prototype.toString.call(h) === "[object Array]" ? "array" : F.nodebuffer && c.isBuffer(h) ? "nodebuffer" : F.uint8array && h instanceof Uint8Array ? "uint8array" : F.arraybuffer && h instanceof ArrayBuffer ? "arraybuffer" : void 0;
      }, I.checkSupport = function(h) {
        if (!F[h.toLowerCase()])
          throw new Error(h + " is not supported by this platform");
      }, I.MAX_VALUE_16BITS = 65535, I.MAX_VALUE_32BITS = -1, I.pretty = function(h) {
        var d, i, p = "";
        for (i = 0; i < (h || "").length; i++)
          p += "\\x" + ((d = h.charCodeAt(i)) < 16 ? "0" : "") + d.toString(16).toUpperCase();
        return p;
      }, I.delay = function(h, d, i) {
        setImmediate(function() {
          h.apply(i || null, d || []);
        });
      }, I.inherits = function(h, d) {
        function i() {
        }
        i.prototype = d.prototype, h.prototype = new i();
      }, I.extend = function() {
        var h, d, i = {};
        for (h = 0; h < arguments.length; h++)
          for (d in arguments[h])
            Object.prototype.hasOwnProperty.call(arguments[h], d) && i[d] === void 0 && (i[d] = arguments[h][d]);
        return i;
      }, I.prepareContent = function(h, d, i, p, y) {
        return t.Promise.resolve(d).then(function(m) {
          return F.blob && (m instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(m)) !== -1) && typeof FileReader != "undefined" ? new t.Promise(function(e, x) {
            var S = new FileReader();
            S.onload = function(P) {
              e(P.target.result);
            }, S.onerror = function(P) {
              x(P.target.error);
            }, S.readAsArrayBuffer(m);
          }) : m;
        }).then(function(m) {
          var e = I.getTypeOf(m);
          return e ? (e === "arraybuffer" ? m = I.transformTo("uint8array", m) : e === "string" && (y ? m = l.decode(m) : i && p !== !0 && (m = function(x) {
            return r(x, F.uint8array ? new Uint8Array(x.length) : new Array(x.length));
          }(m))), m) : t.Promise.reject(new Error("Can't read the data of '" + h + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
        });
      };
    }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(g, w, I) {
      var F = g("./reader/readerFor"), l = g("./utils"), c = g("./signature"), t = g("./zipEntry"), s = g("./support");
      function r(a) {
        this.files = [], this.loadOptions = a;
      }
      r.prototype = { checkSignature: function(a) {
        if (!this.reader.readAndCheckSignature(a)) {
          this.reader.index -= 4;
          var o = this.reader.readString(4);
          throw new Error("Corrupted zip or bug: unexpected signature (" + l.pretty(o) + ", expected " + l.pretty(a) + ")");
        }
      }, isSignature: function(a, o) {
        var f = this.reader.index;
        this.reader.setIndex(a);
        var u = this.reader.readString(4) === o;
        return this.reader.setIndex(f), u;
      }, readBlockEndOfCentral: function() {
        this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
        var a = this.reader.readData(this.zipCommentLength), o = s.uint8array ? "uint8array" : "array", f = l.transformTo(o, a);
        this.zipComment = this.loadOptions.decodeFileName(f);
      }, readBlockZip64EndOfCentral: function() {
        this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
        for (var a, o, f, u = this.zip64EndOfCentralSize - 44; 0 < u; )
          a = this.reader.readInt(2), o = this.reader.readInt(4), f = this.reader.readData(o), this.zip64ExtensibleData[a] = { id: a, length: o, value: f };
      }, readBlockZip64EndOfCentralLocator: function() {
        if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
          throw new Error("Multi-volumes zip are not supported");
      }, readLocalFiles: function() {
        var a, o;
        for (a = 0; a < this.files.length; a++)
          o = this.files[a], this.reader.setIndex(o.localHeaderOffset), this.checkSignature(c.LOCAL_FILE_HEADER), o.readLocalPart(this.reader), o.handleUTF8(), o.processAttributes();
      }, readCentralDir: function() {
        var a;
        for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(c.CENTRAL_FILE_HEADER); )
          (a = new t({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(a);
        if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0)
          throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
      }, readEndOfCentral: function() {
        var a = this.reader.lastIndexOfSignature(c.CENTRAL_DIRECTORY_END);
        if (a < 0)
          throw this.isSignature(0, c.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
        this.reader.setIndex(a);
        var o = a;
        if (this.checkSignature(c.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === l.MAX_VALUE_16BITS || this.diskWithCentralDirStart === l.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === l.MAX_VALUE_16BITS || this.centralDirRecords === l.MAX_VALUE_16BITS || this.centralDirSize === l.MAX_VALUE_32BITS || this.centralDirOffset === l.MAX_VALUE_32BITS) {
          if (this.zip64 = !0, (a = this.reader.lastIndexOfSignature(c.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
          if (this.reader.setIndex(a), this.checkSignature(c.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, c.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(c.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
          this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(c.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
        }
        var f = this.centralDirOffset + this.centralDirSize;
        this.zip64 && (f += 20, f += 12 + this.zip64EndOfCentralSize);
        var u = o - f;
        if (0 < u)
          this.isSignature(o, c.CENTRAL_FILE_HEADER) || (this.reader.zero = u);
        else if (u < 0)
          throw new Error("Corrupted zip: missing " + Math.abs(u) + " bytes.");
      }, prepareReader: function(a) {
        this.reader = F(a);
      }, load: function(a) {
        this.prepareReader(a), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
      } }, w.exports = r;
    }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(g, w, I) {
      var F = g("./reader/readerFor"), l = g("./utils"), c = g("./compressedObject"), t = g("./crc32"), s = g("./utf8"), r = g("./compressions"), a = g("./support");
      function o(f, u) {
        this.options = f, this.loadOptions = u;
      }
      o.prototype = { isEncrypted: function() {
        return (1 & this.bitFlag) == 1;
      }, useUTF8: function() {
        return (2048 & this.bitFlag) == 2048;
      }, readLocalPart: function(f) {
        var u, h;
        if (f.skip(22), this.fileNameLength = f.readInt(2), h = f.readInt(2), this.fileName = f.readData(this.fileNameLength), f.skip(h), this.compressedSize === -1 || this.uncompressedSize === -1)
          throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
        if ((u = function(d) {
          for (var i in r)
            if (Object.prototype.hasOwnProperty.call(r, i) && r[i].magic === d)
              return r[i];
          return null;
        }(this.compressionMethod)) === null)
          throw new Error("Corrupted zip : compression " + l.pretty(this.compressionMethod) + " unknown (inner file : " + l.transformTo("string", this.fileName) + ")");
        this.decompressed = new c(this.compressedSize, this.uncompressedSize, this.crc32, u, f.readData(this.compressedSize));
      }, readCentralPart: function(f) {
        this.versionMadeBy = f.readInt(2), f.skip(2), this.bitFlag = f.readInt(2), this.compressionMethod = f.readString(2), this.date = f.readDate(), this.crc32 = f.readInt(4), this.compressedSize = f.readInt(4), this.uncompressedSize = f.readInt(4);
        var u = f.readInt(2);
        if (this.extraFieldsLength = f.readInt(2), this.fileCommentLength = f.readInt(2), this.diskNumberStart = f.readInt(2), this.internalFileAttributes = f.readInt(2), this.externalFileAttributes = f.readInt(4), this.localHeaderOffset = f.readInt(4), this.isEncrypted())
          throw new Error("Encrypted zip are not supported");
        f.skip(u), this.readExtraFields(f), this.parseZIP64ExtraField(f), this.fileComment = f.readData(this.fileCommentLength);
      }, processAttributes: function() {
        this.unixPermissions = null, this.dosPermissions = null;
        var f = this.versionMadeBy >> 8;
        this.dir = !!(16 & this.externalFileAttributes), f == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), f == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = !0);
      }, parseZIP64ExtraField: function() {
        if (this.extraFields[1]) {
          var f = F(this.extraFields[1].value);
          this.uncompressedSize === l.MAX_VALUE_32BITS && (this.uncompressedSize = f.readInt(8)), this.compressedSize === l.MAX_VALUE_32BITS && (this.compressedSize = f.readInt(8)), this.localHeaderOffset === l.MAX_VALUE_32BITS && (this.localHeaderOffset = f.readInt(8)), this.diskNumberStart === l.MAX_VALUE_32BITS && (this.diskNumberStart = f.readInt(4));
        }
      }, readExtraFields: function(f) {
        var u, h, d, i = f.index + this.extraFieldsLength;
        for (this.extraFields || (this.extraFields = {}); f.index + 4 < i; )
          u = f.readInt(2), h = f.readInt(2), d = f.readData(h), this.extraFields[u] = { id: u, length: h, value: d };
        f.setIndex(i);
      }, handleUTF8: function() {
        var f = a.uint8array ? "uint8array" : "array";
        if (this.useUTF8())
          this.fileNameStr = s.utf8decode(this.fileName), this.fileCommentStr = s.utf8decode(this.fileComment);
        else {
          var u = this.findExtraFieldUnicodePath();
          if (u !== null)
            this.fileNameStr = u;
          else {
            var h = l.transformTo(f, this.fileName);
            this.fileNameStr = this.loadOptions.decodeFileName(h);
          }
          var d = this.findExtraFieldUnicodeComment();
          if (d !== null)
            this.fileCommentStr = d;
          else {
            var i = l.transformTo(f, this.fileComment);
            this.fileCommentStr = this.loadOptions.decodeFileName(i);
          }
        }
      }, findExtraFieldUnicodePath: function() {
        var f = this.extraFields[28789];
        if (f) {
          var u = F(f.value);
          return u.readInt(1) !== 1 || t(this.fileName) !== u.readInt(4) ? null : s.utf8decode(u.readData(f.length - 5));
        }
        return null;
      }, findExtraFieldUnicodeComment: function() {
        var f = this.extraFields[25461];
        if (f) {
          var u = F(f.value);
          return u.readInt(1) !== 1 || t(this.fileComment) !== u.readInt(4) ? null : s.utf8decode(u.readData(f.length - 5));
        }
        return null;
      } }, w.exports = o;
    }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(g, w, I) {
      function F(u, h, d) {
        this.name = u, this.dir = d.dir, this.date = d.date, this.comment = d.comment, this.unixPermissions = d.unixPermissions, this.dosPermissions = d.dosPermissions, this._data = h, this._dataBinary = d.binary, this.options = { compression: d.compression, compressionOptions: d.compressionOptions };
      }
      var l = g("./stream/StreamHelper"), c = g("./stream/DataWorker"), t = g("./utf8"), s = g("./compressedObject"), r = g("./stream/GenericWorker");
      F.prototype = { internalStream: function(u) {
        var h = null, d = "string";
        try {
          if (!u)
            throw new Error("No output type specified.");
          var i = (d = u.toLowerCase()) === "string" || d === "text";
          d !== "binarystring" && d !== "text" || (d = "string"), h = this._decompressWorker();
          var p = !this._dataBinary;
          p && !i && (h = h.pipe(new t.Utf8EncodeWorker())), !p && i && (h = h.pipe(new t.Utf8DecodeWorker()));
        } catch (y) {
          (h = new r("error")).error(y);
        }
        return new l(h, d, "");
      }, async: function(u, h) {
        return this.internalStream(u).accumulate(h);
      }, nodeStream: function(u, h) {
        return this.internalStream(u || "nodebuffer").toNodejsStream(h);
      }, _compressWorker: function(u, h) {
        if (this._data instanceof s && this._data.compression.magic === u.magic)
          return this._data.getCompressedWorker();
        var d = this._decompressWorker();
        return this._dataBinary || (d = d.pipe(new t.Utf8EncodeWorker())), s.createWorkerFrom(d, u, h);
      }, _decompressWorker: function() {
        return this._data instanceof s ? this._data.getContentWorker() : this._data instanceof r ? this._data : new c(this._data);
      } };
      for (var a = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], o = function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, f = 0; f < a.length; f++)
        F.prototype[a[f]] = o;
      w.exports = F;
    }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(g, w, I) {
      (function(F) {
        var l, c, t = F.MutationObserver || F.WebKitMutationObserver;
        if (t) {
          var s = 0, r = new t(u), a = F.document.createTextNode("");
          r.observe(a, { characterData: !0 }), l = function() {
            a.data = s = ++s % 2;
          };
        } else if (F.setImmediate || F.MessageChannel === void 0)
          l = "document" in F && "onreadystatechange" in F.document.createElement("script") ? function() {
            var h = F.document.createElement("script");
            h.onreadystatechange = function() {
              u(), h.onreadystatechange = null, h.parentNode.removeChild(h), h = null;
            }, F.document.documentElement.appendChild(h);
          } : function() {
            setTimeout(u, 0);
          };
        else {
          var o = new F.MessageChannel();
          o.port1.onmessage = u, l = function() {
            o.port2.postMessage(0);
          };
        }
        var f = [];
        function u() {
          var h, d;
          c = !0;
          for (var i = f.length; i; ) {
            for (d = f, f = [], h = -1; ++h < i; )
              d[h]();
            i = f.length;
          }
          c = !1;
        }
        w.exports = function(h) {
          f.push(h) !== 1 || c || l();
        };
      }).call(this, typeof xi != "undefined" ? xi : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
    }, {}], 37: [function(g, w, I) {
      var F = g("immediate");
      function l() {
      }
      var c = {}, t = ["REJECTED"], s = ["FULFILLED"], r = ["PENDING"];
      function a(i) {
        if (typeof i != "function")
          throw new TypeError("resolver must be a function");
        this.state = r, this.queue = [], this.outcome = void 0, i !== l && h(this, i);
      }
      function o(i, p, y) {
        this.promise = i, typeof p == "function" && (this.onFulfilled = p, this.callFulfilled = this.otherCallFulfilled), typeof y == "function" && (this.onRejected = y, this.callRejected = this.otherCallRejected);
      }
      function f(i, p, y) {
        F(function() {
          var m;
          try {
            m = p(y);
          } catch (e) {
            return c.reject(i, e);
          }
          m === i ? c.reject(i, new TypeError("Cannot resolve promise with itself")) : c.resolve(i, m);
        });
      }
      function u(i) {
        var p = i && i.then;
        if (i && (typeof i == "object" || typeof i == "function") && typeof p == "function")
          return function() {
            p.apply(i, arguments);
          };
      }
      function h(i, p) {
        var y = !1;
        function m(S) {
          y || (y = !0, c.reject(i, S));
        }
        function e(S) {
          y || (y = !0, c.resolve(i, S));
        }
        var x = d(function() {
          p(e, m);
        });
        x.status === "error" && m(x.value);
      }
      function d(i, p) {
        var y = {};
        try {
          y.value = i(p), y.status = "success";
        } catch (m) {
          y.status = "error", y.value = m;
        }
        return y;
      }
      (w.exports = a).prototype.finally = function(i) {
        if (typeof i != "function")
          return this;
        var p = this.constructor;
        return this.then(function(y) {
          return p.resolve(i()).then(function() {
            return y;
          });
        }, function(y) {
          return p.resolve(i()).then(function() {
            throw y;
          });
        });
      }, a.prototype.catch = function(i) {
        return this.then(null, i);
      }, a.prototype.then = function(i, p) {
        if (typeof i != "function" && this.state === s || typeof p != "function" && this.state === t)
          return this;
        var y = new this.constructor(l);
        return this.state !== r ? f(y, this.state === s ? i : p, this.outcome) : this.queue.push(new o(y, i, p)), y;
      }, o.prototype.callFulfilled = function(i) {
        c.resolve(this.promise, i);
      }, o.prototype.otherCallFulfilled = function(i) {
        f(this.promise, this.onFulfilled, i);
      }, o.prototype.callRejected = function(i) {
        c.reject(this.promise, i);
      }, o.prototype.otherCallRejected = function(i) {
        f(this.promise, this.onRejected, i);
      }, c.resolve = function(i, p) {
        var y = d(u, p);
        if (y.status === "error")
          return c.reject(i, y.value);
        var m = y.value;
        if (m)
          h(i, m);
        else {
          i.state = s, i.outcome = p;
          for (var e = -1, x = i.queue.length; ++e < x; )
            i.queue[e].callFulfilled(p);
        }
        return i;
      }, c.reject = function(i, p) {
        i.state = t, i.outcome = p;
        for (var y = -1, m = i.queue.length; ++y < m; )
          i.queue[y].callRejected(p);
        return i;
      }, a.resolve = function(i) {
        return i instanceof this ? i : c.resolve(new this(l), i);
      }, a.reject = function(i) {
        var p = new this(l);
        return c.reject(p, i);
      }, a.all = function(i) {
        var p = this;
        if (Object.prototype.toString.call(i) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var y = i.length, m = !1;
        if (!y)
          return this.resolve([]);
        for (var e = new Array(y), x = 0, S = -1, P = new this(l); ++S < y; )
          O(i[S], S);
        return P;
        function O(T, A) {
          p.resolve(T).then(function(E) {
            e[A] = E, ++x !== y || m || (m = !0, c.resolve(P, e));
          }, function(E) {
            m || (m = !0, c.reject(P, E));
          });
        }
      }, a.race = function(i) {
        var p = this;
        if (Object.prototype.toString.call(i) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var y = i.length, m = !1;
        if (!y)
          return this.resolve([]);
        for (var e = -1, x = new this(l); ++e < y; )
          S = i[e], p.resolve(S).then(function(P) {
            m || (m = !0, c.resolve(x, P));
          }, function(P) {
            m || (m = !0, c.reject(x, P));
          });
        var S;
        return x;
      };
    }, { immediate: 36 }], 38: [function(g, w, I) {
      var F = {};
      (0, g("./lib/utils/common").assign)(F, g("./lib/deflate"), g("./lib/inflate"), g("./lib/zlib/constants")), w.exports = F;
    }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(g, w, I) {
      var F = g("./zlib/deflate"), l = g("./utils/common"), c = g("./utils/strings"), t = g("./zlib/messages"), s = g("./zlib/zstream"), r = Object.prototype.toString, a = 0, o = -1, f = 0, u = 8;
      function h(i) {
        if (!(this instanceof h))
          return new h(i);
        this.options = l.assign({ level: o, method: u, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: f, to: "" }, i || {});
        var p = this.options;
        p.raw && 0 < p.windowBits ? p.windowBits = -p.windowBits : p.gzip && 0 < p.windowBits && p.windowBits < 16 && (p.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new s(), this.strm.avail_out = 0;
        var y = F.deflateInit2(this.strm, p.level, p.method, p.windowBits, p.memLevel, p.strategy);
        if (y !== a)
          throw new Error(t[y]);
        if (p.header && F.deflateSetHeader(this.strm, p.header), p.dictionary) {
          var m;
          if (m = typeof p.dictionary == "string" ? c.string2buf(p.dictionary) : r.call(p.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(p.dictionary) : p.dictionary, (y = F.deflateSetDictionary(this.strm, m)) !== a)
            throw new Error(t[y]);
          this._dict_set = !0;
        }
      }
      function d(i, p) {
        var y = new h(p);
        if (y.push(i, !0), y.err)
          throw y.msg || t[y.err];
        return y.result;
      }
      h.prototype.push = function(i, p) {
        var y, m, e = this.strm, x = this.options.chunkSize;
        if (this.ended)
          return !1;
        m = p === ~~p ? p : p === !0 ? 4 : 0, typeof i == "string" ? e.input = c.string2buf(i) : r.call(i) === "[object ArrayBuffer]" ? e.input = new Uint8Array(i) : e.input = i, e.next_in = 0, e.avail_in = e.input.length;
        do {
          if (e.avail_out === 0 && (e.output = new l.Buf8(x), e.next_out = 0, e.avail_out = x), (y = F.deflate(e, m)) !== 1 && y !== a)
            return this.onEnd(y), !(this.ended = !0);
          e.avail_out !== 0 && (e.avail_in !== 0 || m !== 4 && m !== 2) || (this.options.to === "string" ? this.onData(c.buf2binstring(l.shrinkBuf(e.output, e.next_out))) : this.onData(l.shrinkBuf(e.output, e.next_out)));
        } while ((0 < e.avail_in || e.avail_out === 0) && y !== 1);
        return m === 4 ? (y = F.deflateEnd(this.strm), this.onEnd(y), this.ended = !0, y === a) : m !== 2 || (this.onEnd(a), !(e.avail_out = 0));
      }, h.prototype.onData = function(i) {
        this.chunks.push(i);
      }, h.prototype.onEnd = function(i) {
        i === a && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = l.flattenChunks(this.chunks)), this.chunks = [], this.err = i, this.msg = this.strm.msg;
      }, I.Deflate = h, I.deflate = d, I.deflateRaw = function(i, p) {
        return (p = p || {}).raw = !0, d(i, p);
      }, I.gzip = function(i, p) {
        return (p = p || {}).gzip = !0, d(i, p);
      };
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(g, w, I) {
      var F = g("./zlib/inflate"), l = g("./utils/common"), c = g("./utils/strings"), t = g("./zlib/constants"), s = g("./zlib/messages"), r = g("./zlib/zstream"), a = g("./zlib/gzheader"), o = Object.prototype.toString;
      function f(h) {
        if (!(this instanceof f))
          return new f(h);
        this.options = l.assign({ chunkSize: 16384, windowBits: 0, to: "" }, h || {});
        var d = this.options;
        d.raw && 0 <= d.windowBits && d.windowBits < 16 && (d.windowBits = -d.windowBits, d.windowBits === 0 && (d.windowBits = -15)), !(0 <= d.windowBits && d.windowBits < 16) || h && h.windowBits || (d.windowBits += 32), 15 < d.windowBits && d.windowBits < 48 && !(15 & d.windowBits) && (d.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new r(), this.strm.avail_out = 0;
        var i = F.inflateInit2(this.strm, d.windowBits);
        if (i !== t.Z_OK)
          throw new Error(s[i]);
        this.header = new a(), F.inflateGetHeader(this.strm, this.header);
      }
      function u(h, d) {
        var i = new f(d);
        if (i.push(h, !0), i.err)
          throw i.msg || s[i.err];
        return i.result;
      }
      f.prototype.push = function(h, d) {
        var i, p, y, m, e, x, S = this.strm, P = this.options.chunkSize, O = this.options.dictionary, T = !1;
        if (this.ended)
          return !1;
        p = d === ~~d ? d : d === !0 ? t.Z_FINISH : t.Z_NO_FLUSH, typeof h == "string" ? S.input = c.binstring2buf(h) : o.call(h) === "[object ArrayBuffer]" ? S.input = new Uint8Array(h) : S.input = h, S.next_in = 0, S.avail_in = S.input.length;
        do {
          if (S.avail_out === 0 && (S.output = new l.Buf8(P), S.next_out = 0, S.avail_out = P), (i = F.inflate(S, t.Z_NO_FLUSH)) === t.Z_NEED_DICT && O && (x = typeof O == "string" ? c.string2buf(O) : o.call(O) === "[object ArrayBuffer]" ? new Uint8Array(O) : O, i = F.inflateSetDictionary(this.strm, x)), i === t.Z_BUF_ERROR && T === !0 && (i = t.Z_OK, T = !1), i !== t.Z_STREAM_END && i !== t.Z_OK)
            return this.onEnd(i), !(this.ended = !0);
          S.next_out && (S.avail_out !== 0 && i !== t.Z_STREAM_END && (S.avail_in !== 0 || p !== t.Z_FINISH && p !== t.Z_SYNC_FLUSH) || (this.options.to === "string" ? (y = c.utf8border(S.output, S.next_out), m = S.next_out - y, e = c.buf2string(S.output, y), S.next_out = m, S.avail_out = P - m, m && l.arraySet(S.output, S.output, y, m, 0), this.onData(e)) : this.onData(l.shrinkBuf(S.output, S.next_out)))), S.avail_in === 0 && S.avail_out === 0 && (T = !0);
        } while ((0 < S.avail_in || S.avail_out === 0) && i !== t.Z_STREAM_END);
        return i === t.Z_STREAM_END && (p = t.Z_FINISH), p === t.Z_FINISH ? (i = F.inflateEnd(this.strm), this.onEnd(i), this.ended = !0, i === t.Z_OK) : p !== t.Z_SYNC_FLUSH || (this.onEnd(t.Z_OK), !(S.avail_out = 0));
      }, f.prototype.onData = function(h) {
        this.chunks.push(h);
      }, f.prototype.onEnd = function(h) {
        h === t.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = l.flattenChunks(this.chunks)), this.chunks = [], this.err = h, this.msg = this.strm.msg;
      }, I.Inflate = f, I.inflate = u, I.inflateRaw = function(h, d) {
        return (d = d || {}).raw = !0, u(h, d);
      }, I.ungzip = u;
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(g, w, I) {
      var F = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Int32Array != "undefined";
      I.assign = function(t) {
        for (var s = Array.prototype.slice.call(arguments, 1); s.length; ) {
          var r = s.shift();
          if (r) {
            if (typeof r != "object")
              throw new TypeError(r + "must be non-object");
            for (var a in r)
              r.hasOwnProperty(a) && (t[a] = r[a]);
          }
        }
        return t;
      }, I.shrinkBuf = function(t, s) {
        return t.length === s ? t : t.subarray ? t.subarray(0, s) : (t.length = s, t);
      };
      var l = { arraySet: function(t, s, r, a, o) {
        if (s.subarray && t.subarray)
          t.set(s.subarray(r, r + a), o);
        else
          for (var f = 0; f < a; f++)
            t[o + f] = s[r + f];
      }, flattenChunks: function(t) {
        var s, r, a, o, f, u;
        for (s = a = 0, r = t.length; s < r; s++)
          a += t[s].length;
        for (u = new Uint8Array(a), s = o = 0, r = t.length; s < r; s++)
          f = t[s], u.set(f, o), o += f.length;
        return u;
      } }, c = { arraySet: function(t, s, r, a, o) {
        for (var f = 0; f < a; f++)
          t[o + f] = s[r + f];
      }, flattenChunks: function(t) {
        return [].concat.apply([], t);
      } };
      I.setTyped = function(t) {
        t ? (I.Buf8 = Uint8Array, I.Buf16 = Uint16Array, I.Buf32 = Int32Array, I.assign(I, l)) : (I.Buf8 = Array, I.Buf16 = Array, I.Buf32 = Array, I.assign(I, c));
      }, I.setTyped(F);
    }, {}], 42: [function(g, w, I) {
      var F = g("./common"), l = !0, c = !0;
      try {
        String.fromCharCode.apply(null, [0]);
      } catch (a) {
        l = !1;
      }
      try {
        String.fromCharCode.apply(null, new Uint8Array(1));
      } catch (a) {
        c = !1;
      }
      for (var t = new F.Buf8(256), s = 0; s < 256; s++)
        t[s] = 252 <= s ? 6 : 248 <= s ? 5 : 240 <= s ? 4 : 224 <= s ? 3 : 192 <= s ? 2 : 1;
      function r(a, o) {
        if (o < 65537 && (a.subarray && c || !a.subarray && l))
          return String.fromCharCode.apply(null, F.shrinkBuf(a, o));
        for (var f = "", u = 0; u < o; u++)
          f += String.fromCharCode(a[u]);
        return f;
      }
      t[254] = t[254] = 1, I.string2buf = function(a) {
        var o, f, u, h, d, i = a.length, p = 0;
        for (h = 0; h < i; h++)
          (64512 & (f = a.charCodeAt(h))) == 55296 && h + 1 < i && (64512 & (u = a.charCodeAt(h + 1))) == 56320 && (f = 65536 + (f - 55296 << 10) + (u - 56320), h++), p += f < 128 ? 1 : f < 2048 ? 2 : f < 65536 ? 3 : 4;
        for (o = new F.Buf8(p), h = d = 0; d < p; h++)
          (64512 & (f = a.charCodeAt(h))) == 55296 && h + 1 < i && (64512 & (u = a.charCodeAt(h + 1))) == 56320 && (f = 65536 + (f - 55296 << 10) + (u - 56320), h++), f < 128 ? o[d++] = f : (f < 2048 ? o[d++] = 192 | f >>> 6 : (f < 65536 ? o[d++] = 224 | f >>> 12 : (o[d++] = 240 | f >>> 18, o[d++] = 128 | f >>> 12 & 63), o[d++] = 128 | f >>> 6 & 63), o[d++] = 128 | 63 & f);
        return o;
      }, I.buf2binstring = function(a) {
        return r(a, a.length);
      }, I.binstring2buf = function(a) {
        for (var o = new F.Buf8(a.length), f = 0, u = o.length; f < u; f++)
          o[f] = a.charCodeAt(f);
        return o;
      }, I.buf2string = function(a, o) {
        var f, u, h, d, i = o || a.length, p = new Array(2 * i);
        for (f = u = 0; f < i; )
          if ((h = a[f++]) < 128)
            p[u++] = h;
          else if (4 < (d = t[h]))
            p[u++] = 65533, f += d - 1;
          else {
            for (h &= d === 2 ? 31 : d === 3 ? 15 : 7; 1 < d && f < i; )
              h = h << 6 | 63 & a[f++], d--;
            1 < d ? p[u++] = 65533 : h < 65536 ? p[u++] = h : (h -= 65536, p[u++] = 55296 | h >> 10 & 1023, p[u++] = 56320 | 1023 & h);
          }
        return r(p, u);
      }, I.utf8border = function(a, o) {
        var f;
        for ((o = o || a.length) > a.length && (o = a.length), f = o - 1; 0 <= f && (192 & a[f]) == 128; )
          f--;
        return f < 0 || f === 0 ? o : f + t[a[f]] > o ? f : o;
      };
    }, { "./common": 41 }], 43: [function(g, w, I) {
      w.exports = function(F, l, c, t) {
        for (var s = 65535 & F | 0, r = F >>> 16 & 65535 | 0, a = 0; c !== 0; ) {
          for (c -= a = 2e3 < c ? 2e3 : c; r = r + (s = s + l[t++] | 0) | 0, --a; )
            ;
          s %= 65521, r %= 65521;
        }
        return s | r << 16 | 0;
      };
    }, {}], 44: [function(g, w, I) {
      w.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
    }, {}], 45: [function(g, w, I) {
      var F = function() {
        for (var l, c = [], t = 0; t < 256; t++) {
          l = t;
          for (var s = 0; s < 8; s++)
            l = 1 & l ? 3988292384 ^ l >>> 1 : l >>> 1;
          c[t] = l;
        }
        return c;
      }();
      w.exports = function(l, c, t, s) {
        var r = F, a = s + t;
        l ^= -1;
        for (var o = s; o < a; o++)
          l = l >>> 8 ^ r[255 & (l ^ c[o])];
        return -1 ^ l;
      };
    }, {}], 46: [function(g, w, I) {
      var F, l = g("../utils/common"), c = g("./trees"), t = g("./adler32"), s = g("./crc32"), r = g("./messages"), a = 0, o = 4, f = 0, u = -2, h = -1, d = 4, i = 2, p = 8, y = 9, m = 286, e = 30, x = 19, S = 2 * m + 1, P = 15, O = 3, T = 258, A = T + O + 1, E = 42, D = 113, b = 1, R = 2, L = 3, N = 4;
      function M(G, Ft) {
        return G.msg = r[Ft], Ft;
      }
      function K(G) {
        return (G << 1) - (4 < G ? 9 : 0);
      }
      function ct(G) {
        for (var Ft = G.length; 0 <= --Ft; )
          G[Ft] = 0;
      }
      function J(G) {
        var Ft = G.state, z = Ft.pending;
        z > G.avail_out && (z = G.avail_out), z !== 0 && (l.arraySet(G.output, Ft.pending_buf, Ft.pending_out, z, G.next_out), G.next_out += z, Ft.pending_out += z, G.total_out += z, G.avail_out -= z, Ft.pending -= z, Ft.pending === 0 && (Ft.pending_out = 0));
      }
      function nt(G, Ft) {
        c._tr_flush_block(G, 0 <= G.block_start ? G.block_start : -1, G.strstart - G.block_start, Ft), G.block_start = G.strstart, J(G.strm);
      }
      function yt(G, Ft) {
        G.pending_buf[G.pending++] = Ft;
      }
      function bt(G, Ft) {
        G.pending_buf[G.pending++] = Ft >>> 8 & 255, G.pending_buf[G.pending++] = 255 & Ft;
      }
      function Tt(G, Ft) {
        var z, C, k = G.max_chain_length, V = G.strstart, ot = G.prev_length, et = G.nice_match, tt = G.strstart > G.w_size - A ? G.strstart - (G.w_size - A) : 0, At = G.window, Nt = G.w_mask, Kt = G.prev, Vt = G.strstart + T, Ot = At[V + ot - 1], ie = At[V + ot];
        G.prev_length >= G.good_match && (k >>= 2), et > G.lookahead && (et = G.lookahead);
        do
          if (At[(z = Ft) + ot] === ie && At[z + ot - 1] === Ot && At[z] === At[V] && At[++z] === At[V + 1]) {
            V += 2, z++;
            do
              ;
            while (At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && At[++V] === At[++z] && V < Vt);
            if (C = T - (Vt - V), V = Vt - T, ot < C) {
              if (G.match_start = Ft, et <= (ot = C))
                break;
              Ot = At[V + ot - 1], ie = At[V + ot];
            }
          }
        while ((Ft = Kt[Ft & Nt]) > tt && --k != 0);
        return ot <= G.lookahead ? ot : G.lookahead;
      }
      function It(G) {
        var Ft, z, C, k, V, ot, et, tt, At, Nt, Kt = G.w_size;
        do {
          if (k = G.window_size - G.lookahead - G.strstart, G.strstart >= Kt + (Kt - A)) {
            for (l.arraySet(G.window, G.window, Kt, Kt, 0), G.match_start -= Kt, G.strstart -= Kt, G.block_start -= Kt, Ft = z = G.hash_size; C = G.head[--Ft], G.head[Ft] = Kt <= C ? C - Kt : 0, --z; )
              ;
            for (Ft = z = Kt; C = G.prev[--Ft], G.prev[Ft] = Kt <= C ? C - Kt : 0, --z; )
              ;
            k += Kt;
          }
          if (G.strm.avail_in === 0)
            break;
          if (ot = G.strm, et = G.window, tt = G.strstart + G.lookahead, At = k, Nt = void 0, Nt = ot.avail_in, At < Nt && (Nt = At), z = Nt === 0 ? 0 : (ot.avail_in -= Nt, l.arraySet(et, ot.input, ot.next_in, Nt, tt), ot.state.wrap === 1 ? ot.adler = t(ot.adler, et, Nt, tt) : ot.state.wrap === 2 && (ot.adler = s(ot.adler, et, Nt, tt)), ot.next_in += Nt, ot.total_in += Nt, Nt), G.lookahead += z, G.lookahead + G.insert >= O)
            for (V = G.strstart - G.insert, G.ins_h = G.window[V], G.ins_h = (G.ins_h << G.hash_shift ^ G.window[V + 1]) & G.hash_mask; G.insert && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[V + O - 1]) & G.hash_mask, G.prev[V & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = V, V++, G.insert--, !(G.lookahead + G.insert < O)); )
              ;
        } while (G.lookahead < A && G.strm.avail_in !== 0);
      }
      function Lt(G, Ft) {
        for (var z, C; ; ) {
          if (G.lookahead < A) {
            if (It(G), G.lookahead < A && Ft === a)
              return b;
            if (G.lookahead === 0)
              break;
          }
          if (z = 0, G.lookahead >= O && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + O - 1]) & G.hash_mask, z = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), z !== 0 && G.strstart - z <= G.w_size - A && (G.match_length = Tt(G, z)), G.match_length >= O)
            if (C = c._tr_tally(G, G.strstart - G.match_start, G.match_length - O), G.lookahead -= G.match_length, G.match_length <= G.max_lazy_match && G.lookahead >= O) {
              for (G.match_length--; G.strstart++, G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + O - 1]) & G.hash_mask, z = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart, --G.match_length != 0; )
                ;
              G.strstart++;
            } else
              G.strstart += G.match_length, G.match_length = 0, G.ins_h = G.window[G.strstart], G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + 1]) & G.hash_mask;
          else
            C = c._tr_tally(G, 0, G.window[G.strstart]), G.lookahead--, G.strstart++;
          if (C && (nt(G, !1), G.strm.avail_out === 0))
            return b;
        }
        return G.insert = G.strstart < O - 1 ? G.strstart : O - 1, Ft === o ? (nt(G, !0), G.strm.avail_out === 0 ? L : N) : G.last_lit && (nt(G, !1), G.strm.avail_out === 0) ? b : R;
      }
      function zt(G, Ft) {
        for (var z, C, k; ; ) {
          if (G.lookahead < A) {
            if (It(G), G.lookahead < A && Ft === a)
              return b;
            if (G.lookahead === 0)
              break;
          }
          if (z = 0, G.lookahead >= O && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + O - 1]) & G.hash_mask, z = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), G.prev_length = G.match_length, G.prev_match = G.match_start, G.match_length = O - 1, z !== 0 && G.prev_length < G.max_lazy_match && G.strstart - z <= G.w_size - A && (G.match_length = Tt(G, z), G.match_length <= 5 && (G.strategy === 1 || G.match_length === O && 4096 < G.strstart - G.match_start) && (G.match_length = O - 1)), G.prev_length >= O && G.match_length <= G.prev_length) {
            for (k = G.strstart + G.lookahead - O, C = c._tr_tally(G, G.strstart - 1 - G.prev_match, G.prev_length - O), G.lookahead -= G.prev_length - 1, G.prev_length -= 2; ++G.strstart <= k && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + O - 1]) & G.hash_mask, z = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), --G.prev_length != 0; )
              ;
            if (G.match_available = 0, G.match_length = O - 1, G.strstart++, C && (nt(G, !1), G.strm.avail_out === 0))
              return b;
          } else if (G.match_available) {
            if ((C = c._tr_tally(G, 0, G.window[G.strstart - 1])) && nt(G, !1), G.strstart++, G.lookahead--, G.strm.avail_out === 0)
              return b;
          } else
            G.match_available = 1, G.strstart++, G.lookahead--;
        }
        return G.match_available && (C = c._tr_tally(G, 0, G.window[G.strstart - 1]), G.match_available = 0), G.insert = G.strstart < O - 1 ? G.strstart : O - 1, Ft === o ? (nt(G, !0), G.strm.avail_out === 0 ? L : N) : G.last_lit && (nt(G, !1), G.strm.avail_out === 0) ? b : R;
      }
      function Q(G, Ft, z, C, k) {
        this.good_length = G, this.max_lazy = Ft, this.nice_length = z, this.max_chain = C, this.func = k;
      }
      function gt() {
        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = p, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new l.Buf16(2 * S), this.dyn_dtree = new l.Buf16(2 * (2 * e + 1)), this.bl_tree = new l.Buf16(2 * (2 * x + 1)), ct(this.dyn_ltree), ct(this.dyn_dtree), ct(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new l.Buf16(P + 1), this.heap = new l.Buf16(2 * m + 1), ct(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new l.Buf16(2 * m + 1), ct(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
      }
      function ht(G) {
        var Ft;
        return G && G.state ? (G.total_in = G.total_out = 0, G.data_type = i, (Ft = G.state).pending = 0, Ft.pending_out = 0, Ft.wrap < 0 && (Ft.wrap = -Ft.wrap), Ft.status = Ft.wrap ? E : D, G.adler = Ft.wrap === 2 ? 0 : 1, Ft.last_flush = a, c._tr_init(Ft), f) : M(G, u);
      }
      function st(G) {
        var Ft = ht(G);
        return Ft === f && function(z) {
          z.window_size = 2 * z.w_size, ct(z.head), z.max_lazy_match = F[z.level].max_lazy, z.good_match = F[z.level].good_length, z.nice_match = F[z.level].nice_length, z.max_chain_length = F[z.level].max_chain, z.strstart = 0, z.block_start = 0, z.lookahead = 0, z.insert = 0, z.match_length = z.prev_length = O - 1, z.match_available = 0, z.ins_h = 0;
        }(G.state), Ft;
      }
      function xt(G, Ft, z, C, k, V) {
        if (!G)
          return u;
        var ot = 1;
        if (Ft === h && (Ft = 6), C < 0 ? (ot = 0, C = -C) : 15 < C && (ot = 2, C -= 16), k < 1 || y < k || z !== p || C < 8 || 15 < C || Ft < 0 || 9 < Ft || V < 0 || d < V)
          return M(G, u);
        C === 8 && (C = 9);
        var et = new gt();
        return (G.state = et).strm = G, et.wrap = ot, et.gzhead = null, et.w_bits = C, et.w_size = 1 << et.w_bits, et.w_mask = et.w_size - 1, et.hash_bits = k + 7, et.hash_size = 1 << et.hash_bits, et.hash_mask = et.hash_size - 1, et.hash_shift = ~~((et.hash_bits + O - 1) / O), et.window = new l.Buf8(2 * et.w_size), et.head = new l.Buf16(et.hash_size), et.prev = new l.Buf16(et.w_size), et.lit_bufsize = 1 << k + 6, et.pending_buf_size = 4 * et.lit_bufsize, et.pending_buf = new l.Buf8(et.pending_buf_size), et.d_buf = 1 * et.lit_bufsize, et.l_buf = 3 * et.lit_bufsize, et.level = Ft, et.strategy = V, et.method = z, st(G);
      }
      F = [new Q(0, 0, 0, 0, function(G, Ft) {
        var z = 65535;
        for (z > G.pending_buf_size - 5 && (z = G.pending_buf_size - 5); ; ) {
          if (G.lookahead <= 1) {
            if (It(G), G.lookahead === 0 && Ft === a)
              return b;
            if (G.lookahead === 0)
              break;
          }
          G.strstart += G.lookahead, G.lookahead = 0;
          var C = G.block_start + z;
          if ((G.strstart === 0 || G.strstart >= C) && (G.lookahead = G.strstart - C, G.strstart = C, nt(G, !1), G.strm.avail_out === 0) || G.strstart - G.block_start >= G.w_size - A && (nt(G, !1), G.strm.avail_out === 0))
            return b;
        }
        return G.insert = 0, Ft === o ? (nt(G, !0), G.strm.avail_out === 0 ? L : N) : (G.strstart > G.block_start && (nt(G, !1), G.strm.avail_out), b);
      }), new Q(4, 4, 8, 4, Lt), new Q(4, 5, 16, 8, Lt), new Q(4, 6, 32, 32, Lt), new Q(4, 4, 16, 16, zt), new Q(8, 16, 32, 32, zt), new Q(8, 16, 128, 128, zt), new Q(8, 32, 128, 256, zt), new Q(32, 128, 258, 1024, zt), new Q(32, 258, 258, 4096, zt)], I.deflateInit = function(G, Ft) {
        return xt(G, Ft, p, 15, 8, 0);
      }, I.deflateInit2 = xt, I.deflateReset = st, I.deflateResetKeep = ht, I.deflateSetHeader = function(G, Ft) {
        return G && G.state ? G.state.wrap !== 2 ? u : (G.state.gzhead = Ft, f) : u;
      }, I.deflate = function(G, Ft) {
        var z, C, k, V;
        if (!G || !G.state || 5 < Ft || Ft < 0)
          return G ? M(G, u) : u;
        if (C = G.state, !G.output || !G.input && G.avail_in !== 0 || C.status === 666 && Ft !== o)
          return M(G, G.avail_out === 0 ? -5 : u);
        if (C.strm = G, z = C.last_flush, C.last_flush = Ft, C.status === E)
          if (C.wrap === 2)
            G.adler = 0, yt(C, 31), yt(C, 139), yt(C, 8), C.gzhead ? (yt(C, (C.gzhead.text ? 1 : 0) + (C.gzhead.hcrc ? 2 : 0) + (C.gzhead.extra ? 4 : 0) + (C.gzhead.name ? 8 : 0) + (C.gzhead.comment ? 16 : 0)), yt(C, 255 & C.gzhead.time), yt(C, C.gzhead.time >> 8 & 255), yt(C, C.gzhead.time >> 16 & 255), yt(C, C.gzhead.time >> 24 & 255), yt(C, C.level === 9 ? 2 : 2 <= C.strategy || C.level < 2 ? 4 : 0), yt(C, 255 & C.gzhead.os), C.gzhead.extra && C.gzhead.extra.length && (yt(C, 255 & C.gzhead.extra.length), yt(C, C.gzhead.extra.length >> 8 & 255)), C.gzhead.hcrc && (G.adler = s(G.adler, C.pending_buf, C.pending, 0)), C.gzindex = 0, C.status = 69) : (yt(C, 0), yt(C, 0), yt(C, 0), yt(C, 0), yt(C, 0), yt(C, C.level === 9 ? 2 : 2 <= C.strategy || C.level < 2 ? 4 : 0), yt(C, 3), C.status = D);
          else {
            var ot = p + (C.w_bits - 8 << 4) << 8;
            ot |= (2 <= C.strategy || C.level < 2 ? 0 : C.level < 6 ? 1 : C.level === 6 ? 2 : 3) << 6, C.strstart !== 0 && (ot |= 32), ot += 31 - ot % 31, C.status = D, bt(C, ot), C.strstart !== 0 && (bt(C, G.adler >>> 16), bt(C, 65535 & G.adler)), G.adler = 1;
          }
        if (C.status === 69)
          if (C.gzhead.extra) {
            for (k = C.pending; C.gzindex < (65535 & C.gzhead.extra.length) && (C.pending !== C.pending_buf_size || (C.gzhead.hcrc && C.pending > k && (G.adler = s(G.adler, C.pending_buf, C.pending - k, k)), J(G), k = C.pending, C.pending !== C.pending_buf_size)); )
              yt(C, 255 & C.gzhead.extra[C.gzindex]), C.gzindex++;
            C.gzhead.hcrc && C.pending > k && (G.adler = s(G.adler, C.pending_buf, C.pending - k, k)), C.gzindex === C.gzhead.extra.length && (C.gzindex = 0, C.status = 73);
          } else
            C.status = 73;
        if (C.status === 73)
          if (C.gzhead.name) {
            k = C.pending;
            do {
              if (C.pending === C.pending_buf_size && (C.gzhead.hcrc && C.pending > k && (G.adler = s(G.adler, C.pending_buf, C.pending - k, k)), J(G), k = C.pending, C.pending === C.pending_buf_size)) {
                V = 1;
                break;
              }
              V = C.gzindex < C.gzhead.name.length ? 255 & C.gzhead.name.charCodeAt(C.gzindex++) : 0, yt(C, V);
            } while (V !== 0);
            C.gzhead.hcrc && C.pending > k && (G.adler = s(G.adler, C.pending_buf, C.pending - k, k)), V === 0 && (C.gzindex = 0, C.status = 91);
          } else
            C.status = 91;
        if (C.status === 91)
          if (C.gzhead.comment) {
            k = C.pending;
            do {
              if (C.pending === C.pending_buf_size && (C.gzhead.hcrc && C.pending > k && (G.adler = s(G.adler, C.pending_buf, C.pending - k, k)), J(G), k = C.pending, C.pending === C.pending_buf_size)) {
                V = 1;
                break;
              }
              V = C.gzindex < C.gzhead.comment.length ? 255 & C.gzhead.comment.charCodeAt(C.gzindex++) : 0, yt(C, V);
            } while (V !== 0);
            C.gzhead.hcrc && C.pending > k && (G.adler = s(G.adler, C.pending_buf, C.pending - k, k)), V === 0 && (C.status = 103);
          } else
            C.status = 103;
        if (C.status === 103 && (C.gzhead.hcrc ? (C.pending + 2 > C.pending_buf_size && J(G), C.pending + 2 <= C.pending_buf_size && (yt(C, 255 & G.adler), yt(C, G.adler >> 8 & 255), G.adler = 0, C.status = D)) : C.status = D), C.pending !== 0) {
          if (J(G), G.avail_out === 0)
            return C.last_flush = -1, f;
        } else if (G.avail_in === 0 && K(Ft) <= K(z) && Ft !== o)
          return M(G, -5);
        if (C.status === 666 && G.avail_in !== 0)
          return M(G, -5);
        if (G.avail_in !== 0 || C.lookahead !== 0 || Ft !== a && C.status !== 666) {
          var et = C.strategy === 2 ? function(tt, At) {
            for (var Nt; ; ) {
              if (tt.lookahead === 0 && (It(tt), tt.lookahead === 0)) {
                if (At === a)
                  return b;
                break;
              }
              if (tt.match_length = 0, Nt = c._tr_tally(tt, 0, tt.window[tt.strstart]), tt.lookahead--, tt.strstart++, Nt && (nt(tt, !1), tt.strm.avail_out === 0))
                return b;
            }
            return tt.insert = 0, At === o ? (nt(tt, !0), tt.strm.avail_out === 0 ? L : N) : tt.last_lit && (nt(tt, !1), tt.strm.avail_out === 0) ? b : R;
          }(C, Ft) : C.strategy === 3 ? function(tt, At) {
            for (var Nt, Kt, Vt, Ot, ie = tt.window; ; ) {
              if (tt.lookahead <= T) {
                if (It(tt), tt.lookahead <= T && At === a)
                  return b;
                if (tt.lookahead === 0)
                  break;
              }
              if (tt.match_length = 0, tt.lookahead >= O && 0 < tt.strstart && (Kt = ie[Vt = tt.strstart - 1]) === ie[++Vt] && Kt === ie[++Vt] && Kt === ie[++Vt]) {
                Ot = tt.strstart + T;
                do
                  ;
                while (Kt === ie[++Vt] && Kt === ie[++Vt] && Kt === ie[++Vt] && Kt === ie[++Vt] && Kt === ie[++Vt] && Kt === ie[++Vt] && Kt === ie[++Vt] && Kt === ie[++Vt] && Vt < Ot);
                tt.match_length = T - (Ot - Vt), tt.match_length > tt.lookahead && (tt.match_length = tt.lookahead);
              }
              if (tt.match_length >= O ? (Nt = c._tr_tally(tt, 1, tt.match_length - O), tt.lookahead -= tt.match_length, tt.strstart += tt.match_length, tt.match_length = 0) : (Nt = c._tr_tally(tt, 0, tt.window[tt.strstart]), tt.lookahead--, tt.strstart++), Nt && (nt(tt, !1), tt.strm.avail_out === 0))
                return b;
            }
            return tt.insert = 0, At === o ? (nt(tt, !0), tt.strm.avail_out === 0 ? L : N) : tt.last_lit && (nt(tt, !1), tt.strm.avail_out === 0) ? b : R;
          }(C, Ft) : F[C.level].func(C, Ft);
          if (et !== L && et !== N || (C.status = 666), et === b || et === L)
            return G.avail_out === 0 && (C.last_flush = -1), f;
          if (et === R && (Ft === 1 ? c._tr_align(C) : Ft !== 5 && (c._tr_stored_block(C, 0, 0, !1), Ft === 3 && (ct(C.head), C.lookahead === 0 && (C.strstart = 0, C.block_start = 0, C.insert = 0))), J(G), G.avail_out === 0))
            return C.last_flush = -1, f;
        }
        return Ft !== o ? f : C.wrap <= 0 ? 1 : (C.wrap === 2 ? (yt(C, 255 & G.adler), yt(C, G.adler >> 8 & 255), yt(C, G.adler >> 16 & 255), yt(C, G.adler >> 24 & 255), yt(C, 255 & G.total_in), yt(C, G.total_in >> 8 & 255), yt(C, G.total_in >> 16 & 255), yt(C, G.total_in >> 24 & 255)) : (bt(C, G.adler >>> 16), bt(C, 65535 & G.adler)), J(G), 0 < C.wrap && (C.wrap = -C.wrap), C.pending !== 0 ? f : 1);
      }, I.deflateEnd = function(G) {
        var Ft;
        return G && G.state ? (Ft = G.state.status) !== E && Ft !== 69 && Ft !== 73 && Ft !== 91 && Ft !== 103 && Ft !== D && Ft !== 666 ? M(G, u) : (G.state = null, Ft === D ? M(G, -3) : f) : u;
      }, I.deflateSetDictionary = function(G, Ft) {
        var z, C, k, V, ot, et, tt, At, Nt = Ft.length;
        if (!G || !G.state || (V = (z = G.state).wrap) === 2 || V === 1 && z.status !== E || z.lookahead)
          return u;
        for (V === 1 && (G.adler = t(G.adler, Ft, Nt, 0)), z.wrap = 0, Nt >= z.w_size && (V === 0 && (ct(z.head), z.strstart = 0, z.block_start = 0, z.insert = 0), At = new l.Buf8(z.w_size), l.arraySet(At, Ft, Nt - z.w_size, z.w_size, 0), Ft = At, Nt = z.w_size), ot = G.avail_in, et = G.next_in, tt = G.input, G.avail_in = Nt, G.next_in = 0, G.input = Ft, It(z); z.lookahead >= O; ) {
          for (C = z.strstart, k = z.lookahead - (O - 1); z.ins_h = (z.ins_h << z.hash_shift ^ z.window[C + O - 1]) & z.hash_mask, z.prev[C & z.w_mask] = z.head[z.ins_h], z.head[z.ins_h] = C, C++, --k; )
            ;
          z.strstart = C, z.lookahead = O - 1, It(z);
        }
        return z.strstart += z.lookahead, z.block_start = z.strstart, z.insert = z.lookahead, z.lookahead = 0, z.match_length = z.prev_length = O - 1, z.match_available = 0, G.next_in = et, G.input = tt, G.avail_in = ot, z.wrap = V, f;
      }, I.deflateInfo = "pako deflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(g, w, I) {
      w.exports = function() {
        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
      };
    }, {}], 48: [function(g, w, I) {
      w.exports = function(F, l) {
        var c, t, s, r, a, o, f, u, h, d, i, p, y, m, e, x, S, P, O, T, A, E, D, b, R;
        c = F.state, t = F.next_in, b = F.input, s = t + (F.avail_in - 5), r = F.next_out, R = F.output, a = r - (l - F.avail_out), o = r + (F.avail_out - 257), f = c.dmax, u = c.wsize, h = c.whave, d = c.wnext, i = c.window, p = c.hold, y = c.bits, m = c.lencode, e = c.distcode, x = (1 << c.lenbits) - 1, S = (1 << c.distbits) - 1;
        t:
          do {
            y < 15 && (p += b[t++] << y, y += 8, p += b[t++] << y, y += 8), P = m[p & x];
            e:
              for (; ; ) {
                if (p >>>= O = P >>> 24, y -= O, (O = P >>> 16 & 255) === 0)
                  R[r++] = 65535 & P;
                else {
                  if (!(16 & O)) {
                    if (!(64 & O)) {
                      P = m[(65535 & P) + (p & (1 << O) - 1)];
                      continue e;
                    }
                    if (32 & O) {
                      c.mode = 12;
                      break t;
                    }
                    F.msg = "invalid literal/length code", c.mode = 30;
                    break t;
                  }
                  T = 65535 & P, (O &= 15) && (y < O && (p += b[t++] << y, y += 8), T += p & (1 << O) - 1, p >>>= O, y -= O), y < 15 && (p += b[t++] << y, y += 8, p += b[t++] << y, y += 8), P = e[p & S];
                  r:
                    for (; ; ) {
                      if (p >>>= O = P >>> 24, y -= O, !(16 & (O = P >>> 16 & 255))) {
                        if (!(64 & O)) {
                          P = e[(65535 & P) + (p & (1 << O) - 1)];
                          continue r;
                        }
                        F.msg = "invalid distance code", c.mode = 30;
                        break t;
                      }
                      if (A = 65535 & P, y < (O &= 15) && (p += b[t++] << y, (y += 8) < O && (p += b[t++] << y, y += 8)), f < (A += p & (1 << O) - 1)) {
                        F.msg = "invalid distance too far back", c.mode = 30;
                        break t;
                      }
                      if (p >>>= O, y -= O, (O = r - a) < A) {
                        if (h < (O = A - O) && c.sane) {
                          F.msg = "invalid distance too far back", c.mode = 30;
                          break t;
                        }
                        if (D = i, (E = 0) === d) {
                          if (E += u - O, O < T) {
                            for (T -= O; R[r++] = i[E++], --O; )
                              ;
                            E = r - A, D = R;
                          }
                        } else if (d < O) {
                          if (E += u + d - O, (O -= d) < T) {
                            for (T -= O; R[r++] = i[E++], --O; )
                              ;
                            if (E = 0, d < T) {
                              for (T -= O = d; R[r++] = i[E++], --O; )
                                ;
                              E = r - A, D = R;
                            }
                          }
                        } else if (E += d - O, O < T) {
                          for (T -= O; R[r++] = i[E++], --O; )
                            ;
                          E = r - A, D = R;
                        }
                        for (; 2 < T; )
                          R[r++] = D[E++], R[r++] = D[E++], R[r++] = D[E++], T -= 3;
                        T && (R[r++] = D[E++], 1 < T && (R[r++] = D[E++]));
                      } else {
                        for (E = r - A; R[r++] = R[E++], R[r++] = R[E++], R[r++] = R[E++], 2 < (T -= 3); )
                          ;
                        T && (R[r++] = R[E++], 1 < T && (R[r++] = R[E++]));
                      }
                      break;
                    }
                }
                break;
              }
          } while (t < s && r < o);
        t -= T = y >> 3, p &= (1 << (y -= T << 3)) - 1, F.next_in = t, F.next_out = r, F.avail_in = t < s ? s - t + 5 : 5 - (t - s), F.avail_out = r < o ? o - r + 257 : 257 - (r - o), c.hold = p, c.bits = y;
      };
    }, {}], 49: [function(g, w, I) {
      var F = g("../utils/common"), l = g("./adler32"), c = g("./crc32"), t = g("./inffast"), s = g("./inftrees"), r = 1, a = 2, o = 0, f = -2, u = 1, h = 852, d = 592;
      function i(E) {
        return (E >>> 24 & 255) + (E >>> 8 & 65280) + ((65280 & E) << 8) + ((255 & E) << 24);
      }
      function p() {
        this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new F.Buf16(320), this.work = new F.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
      }
      function y(E) {
        var D;
        return E && E.state ? (D = E.state, E.total_in = E.total_out = D.total = 0, E.msg = "", D.wrap && (E.adler = 1 & D.wrap), D.mode = u, D.last = 0, D.havedict = 0, D.dmax = 32768, D.head = null, D.hold = 0, D.bits = 0, D.lencode = D.lendyn = new F.Buf32(h), D.distcode = D.distdyn = new F.Buf32(d), D.sane = 1, D.back = -1, o) : f;
      }
      function m(E) {
        var D;
        return E && E.state ? ((D = E.state).wsize = 0, D.whave = 0, D.wnext = 0, y(E)) : f;
      }
      function e(E, D) {
        var b, R;
        return E && E.state ? (R = E.state, D < 0 ? (b = 0, D = -D) : (b = 1 + (D >> 4), D < 48 && (D &= 15)), D && (D < 8 || 15 < D) ? f : (R.window !== null && R.wbits !== D && (R.window = null), R.wrap = b, R.wbits = D, m(E))) : f;
      }
      function x(E, D) {
        var b, R;
        return E ? (R = new p(), (E.state = R).window = null, (b = e(E, D)) !== o && (E.state = null), b) : f;
      }
      var S, P, O = !0;
      function T(E) {
        if (O) {
          var D;
          for (S = new F.Buf32(512), P = new F.Buf32(32), D = 0; D < 144; )
            E.lens[D++] = 8;
          for (; D < 256; )
            E.lens[D++] = 9;
          for (; D < 280; )
            E.lens[D++] = 7;
          for (; D < 288; )
            E.lens[D++] = 8;
          for (s(r, E.lens, 0, 288, S, 0, E.work, { bits: 9 }), D = 0; D < 32; )
            E.lens[D++] = 5;
          s(a, E.lens, 0, 32, P, 0, E.work, { bits: 5 }), O = !1;
        }
        E.lencode = S, E.lenbits = 9, E.distcode = P, E.distbits = 5;
      }
      function A(E, D, b, R) {
        var L, N = E.state;
        return N.window === null && (N.wsize = 1 << N.wbits, N.wnext = 0, N.whave = 0, N.window = new F.Buf8(N.wsize)), R >= N.wsize ? (F.arraySet(N.window, D, b - N.wsize, N.wsize, 0), N.wnext = 0, N.whave = N.wsize) : (R < (L = N.wsize - N.wnext) && (L = R), F.arraySet(N.window, D, b - R, L, N.wnext), (R -= L) ? (F.arraySet(N.window, D, b - R, R, 0), N.wnext = R, N.whave = N.wsize) : (N.wnext += L, N.wnext === N.wsize && (N.wnext = 0), N.whave < N.wsize && (N.whave += L))), 0;
      }
      I.inflateReset = m, I.inflateReset2 = e, I.inflateResetKeep = y, I.inflateInit = function(E) {
        return x(E, 15);
      }, I.inflateInit2 = x, I.inflate = function(E, D) {
        var b, R, L, N, M, K, ct, J, nt, yt, bt, Tt, It, Lt, zt, Q, gt, ht, st, xt, G, Ft, z, C, k = 0, V = new F.Buf8(4), ot = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        if (!E || !E.state || !E.output || !E.input && E.avail_in !== 0)
          return f;
        (b = E.state).mode === 12 && (b.mode = 13), M = E.next_out, L = E.output, ct = E.avail_out, N = E.next_in, R = E.input, K = E.avail_in, J = b.hold, nt = b.bits, yt = K, bt = ct, Ft = o;
        t:
          for (; ; )
            switch (b.mode) {
              case u:
                if (b.wrap === 0) {
                  b.mode = 13;
                  break;
                }
                for (; nt < 16; ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                if (2 & b.wrap && J === 35615) {
                  V[b.check = 0] = 255 & J, V[1] = J >>> 8 & 255, b.check = c(b.check, V, 2, 0), nt = J = 0, b.mode = 2;
                  break;
                }
                if (b.flags = 0, b.head && (b.head.done = !1), !(1 & b.wrap) || (((255 & J) << 8) + (J >> 8)) % 31) {
                  E.msg = "incorrect header check", b.mode = 30;
                  break;
                }
                if ((15 & J) != 8) {
                  E.msg = "unknown compression method", b.mode = 30;
                  break;
                }
                if (nt -= 4, G = 8 + (15 & (J >>>= 4)), b.wbits === 0)
                  b.wbits = G;
                else if (G > b.wbits) {
                  E.msg = "invalid window size", b.mode = 30;
                  break;
                }
                b.dmax = 1 << G, E.adler = b.check = 1, b.mode = 512 & J ? 10 : 12, nt = J = 0;
                break;
              case 2:
                for (; nt < 16; ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                if (b.flags = J, (255 & b.flags) != 8) {
                  E.msg = "unknown compression method", b.mode = 30;
                  break;
                }
                if (57344 & b.flags) {
                  E.msg = "unknown header flags set", b.mode = 30;
                  break;
                }
                b.head && (b.head.text = J >> 8 & 1), 512 & b.flags && (V[0] = 255 & J, V[1] = J >>> 8 & 255, b.check = c(b.check, V, 2, 0)), nt = J = 0, b.mode = 3;
              case 3:
                for (; nt < 32; ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                b.head && (b.head.time = J), 512 & b.flags && (V[0] = 255 & J, V[1] = J >>> 8 & 255, V[2] = J >>> 16 & 255, V[3] = J >>> 24 & 255, b.check = c(b.check, V, 4, 0)), nt = J = 0, b.mode = 4;
              case 4:
                for (; nt < 16; ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                b.head && (b.head.xflags = 255 & J, b.head.os = J >> 8), 512 & b.flags && (V[0] = 255 & J, V[1] = J >>> 8 & 255, b.check = c(b.check, V, 2, 0)), nt = J = 0, b.mode = 5;
              case 5:
                if (1024 & b.flags) {
                  for (; nt < 16; ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  b.length = J, b.head && (b.head.extra_len = J), 512 & b.flags && (V[0] = 255 & J, V[1] = J >>> 8 & 255, b.check = c(b.check, V, 2, 0)), nt = J = 0;
                } else
                  b.head && (b.head.extra = null);
                b.mode = 6;
              case 6:
                if (1024 & b.flags && (K < (Tt = b.length) && (Tt = K), Tt && (b.head && (G = b.head.extra_len - b.length, b.head.extra || (b.head.extra = new Array(b.head.extra_len)), F.arraySet(b.head.extra, R, N, Tt, G)), 512 & b.flags && (b.check = c(b.check, R, Tt, N)), K -= Tt, N += Tt, b.length -= Tt), b.length))
                  break t;
                b.length = 0, b.mode = 7;
              case 7:
                if (2048 & b.flags) {
                  if (K === 0)
                    break t;
                  for (Tt = 0; G = R[N + Tt++], b.head && G && b.length < 65536 && (b.head.name += String.fromCharCode(G)), G && Tt < K; )
                    ;
                  if (512 & b.flags && (b.check = c(b.check, R, Tt, N)), K -= Tt, N += Tt, G)
                    break t;
                } else
                  b.head && (b.head.name = null);
                b.length = 0, b.mode = 8;
              case 8:
                if (4096 & b.flags) {
                  if (K === 0)
                    break t;
                  for (Tt = 0; G = R[N + Tt++], b.head && G && b.length < 65536 && (b.head.comment += String.fromCharCode(G)), G && Tt < K; )
                    ;
                  if (512 & b.flags && (b.check = c(b.check, R, Tt, N)), K -= Tt, N += Tt, G)
                    break t;
                } else
                  b.head && (b.head.comment = null);
                b.mode = 9;
              case 9:
                if (512 & b.flags) {
                  for (; nt < 16; ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  if (J !== (65535 & b.check)) {
                    E.msg = "header crc mismatch", b.mode = 30;
                    break;
                  }
                  nt = J = 0;
                }
                b.head && (b.head.hcrc = b.flags >> 9 & 1, b.head.done = !0), E.adler = b.check = 0, b.mode = 12;
                break;
              case 10:
                for (; nt < 32; ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                E.adler = b.check = i(J), nt = J = 0, b.mode = 11;
              case 11:
                if (b.havedict === 0)
                  return E.next_out = M, E.avail_out = ct, E.next_in = N, E.avail_in = K, b.hold = J, b.bits = nt, 2;
                E.adler = b.check = 1, b.mode = 12;
              case 12:
                if (D === 5 || D === 6)
                  break t;
              case 13:
                if (b.last) {
                  J >>>= 7 & nt, nt -= 7 & nt, b.mode = 27;
                  break;
                }
                for (; nt < 3; ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                switch (b.last = 1 & J, nt -= 1, 3 & (J >>>= 1)) {
                  case 0:
                    b.mode = 14;
                    break;
                  case 1:
                    if (T(b), b.mode = 20, D !== 6)
                      break;
                    J >>>= 2, nt -= 2;
                    break t;
                  case 2:
                    b.mode = 17;
                    break;
                  case 3:
                    E.msg = "invalid block type", b.mode = 30;
                }
                J >>>= 2, nt -= 2;
                break;
              case 14:
                for (J >>>= 7 & nt, nt -= 7 & nt; nt < 32; ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                if ((65535 & J) != (J >>> 16 ^ 65535)) {
                  E.msg = "invalid stored block lengths", b.mode = 30;
                  break;
                }
                if (b.length = 65535 & J, nt = J = 0, b.mode = 15, D === 6)
                  break t;
              case 15:
                b.mode = 16;
              case 16:
                if (Tt = b.length) {
                  if (K < Tt && (Tt = K), ct < Tt && (Tt = ct), Tt === 0)
                    break t;
                  F.arraySet(L, R, N, Tt, M), K -= Tt, N += Tt, ct -= Tt, M += Tt, b.length -= Tt;
                  break;
                }
                b.mode = 12;
                break;
              case 17:
                for (; nt < 14; ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                if (b.nlen = 257 + (31 & J), J >>>= 5, nt -= 5, b.ndist = 1 + (31 & J), J >>>= 5, nt -= 5, b.ncode = 4 + (15 & J), J >>>= 4, nt -= 4, 286 < b.nlen || 30 < b.ndist) {
                  E.msg = "too many length or distance symbols", b.mode = 30;
                  break;
                }
                b.have = 0, b.mode = 18;
              case 18:
                for (; b.have < b.ncode; ) {
                  for (; nt < 3; ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  b.lens[ot[b.have++]] = 7 & J, J >>>= 3, nt -= 3;
                }
                for (; b.have < 19; )
                  b.lens[ot[b.have++]] = 0;
                if (b.lencode = b.lendyn, b.lenbits = 7, z = { bits: b.lenbits }, Ft = s(0, b.lens, 0, 19, b.lencode, 0, b.work, z), b.lenbits = z.bits, Ft) {
                  E.msg = "invalid code lengths set", b.mode = 30;
                  break;
                }
                b.have = 0, b.mode = 19;
              case 19:
                for (; b.have < b.nlen + b.ndist; ) {
                  for (; Q = (k = b.lencode[J & (1 << b.lenbits) - 1]) >>> 16 & 255, gt = 65535 & k, !((zt = k >>> 24) <= nt); ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  if (gt < 16)
                    J >>>= zt, nt -= zt, b.lens[b.have++] = gt;
                  else {
                    if (gt === 16) {
                      for (C = zt + 2; nt < C; ) {
                        if (K === 0)
                          break t;
                        K--, J += R[N++] << nt, nt += 8;
                      }
                      if (J >>>= zt, nt -= zt, b.have === 0) {
                        E.msg = "invalid bit length repeat", b.mode = 30;
                        break;
                      }
                      G = b.lens[b.have - 1], Tt = 3 + (3 & J), J >>>= 2, nt -= 2;
                    } else if (gt === 17) {
                      for (C = zt + 3; nt < C; ) {
                        if (K === 0)
                          break t;
                        K--, J += R[N++] << nt, nt += 8;
                      }
                      nt -= zt, G = 0, Tt = 3 + (7 & (J >>>= zt)), J >>>= 3, nt -= 3;
                    } else {
                      for (C = zt + 7; nt < C; ) {
                        if (K === 0)
                          break t;
                        K--, J += R[N++] << nt, nt += 8;
                      }
                      nt -= zt, G = 0, Tt = 11 + (127 & (J >>>= zt)), J >>>= 7, nt -= 7;
                    }
                    if (b.have + Tt > b.nlen + b.ndist) {
                      E.msg = "invalid bit length repeat", b.mode = 30;
                      break;
                    }
                    for (; Tt--; )
                      b.lens[b.have++] = G;
                  }
                }
                if (b.mode === 30)
                  break;
                if (b.lens[256] === 0) {
                  E.msg = "invalid code -- missing end-of-block", b.mode = 30;
                  break;
                }
                if (b.lenbits = 9, z = { bits: b.lenbits }, Ft = s(r, b.lens, 0, b.nlen, b.lencode, 0, b.work, z), b.lenbits = z.bits, Ft) {
                  E.msg = "invalid literal/lengths set", b.mode = 30;
                  break;
                }
                if (b.distbits = 6, b.distcode = b.distdyn, z = { bits: b.distbits }, Ft = s(a, b.lens, b.nlen, b.ndist, b.distcode, 0, b.work, z), b.distbits = z.bits, Ft) {
                  E.msg = "invalid distances set", b.mode = 30;
                  break;
                }
                if (b.mode = 20, D === 6)
                  break t;
              case 20:
                b.mode = 21;
              case 21:
                if (6 <= K && 258 <= ct) {
                  E.next_out = M, E.avail_out = ct, E.next_in = N, E.avail_in = K, b.hold = J, b.bits = nt, t(E, bt), M = E.next_out, L = E.output, ct = E.avail_out, N = E.next_in, R = E.input, K = E.avail_in, J = b.hold, nt = b.bits, b.mode === 12 && (b.back = -1);
                  break;
                }
                for (b.back = 0; Q = (k = b.lencode[J & (1 << b.lenbits) - 1]) >>> 16 & 255, gt = 65535 & k, !((zt = k >>> 24) <= nt); ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                if (Q && !(240 & Q)) {
                  for (ht = zt, st = Q, xt = gt; Q = (k = b.lencode[xt + ((J & (1 << ht + st) - 1) >> ht)]) >>> 16 & 255, gt = 65535 & k, !(ht + (zt = k >>> 24) <= nt); ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  J >>>= ht, nt -= ht, b.back += ht;
                }
                if (J >>>= zt, nt -= zt, b.back += zt, b.length = gt, Q === 0) {
                  b.mode = 26;
                  break;
                }
                if (32 & Q) {
                  b.back = -1, b.mode = 12;
                  break;
                }
                if (64 & Q) {
                  E.msg = "invalid literal/length code", b.mode = 30;
                  break;
                }
                b.extra = 15 & Q, b.mode = 22;
              case 22:
                if (b.extra) {
                  for (C = b.extra; nt < C; ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  b.length += J & (1 << b.extra) - 1, J >>>= b.extra, nt -= b.extra, b.back += b.extra;
                }
                b.was = b.length, b.mode = 23;
              case 23:
                for (; Q = (k = b.distcode[J & (1 << b.distbits) - 1]) >>> 16 & 255, gt = 65535 & k, !((zt = k >>> 24) <= nt); ) {
                  if (K === 0)
                    break t;
                  K--, J += R[N++] << nt, nt += 8;
                }
                if (!(240 & Q)) {
                  for (ht = zt, st = Q, xt = gt; Q = (k = b.distcode[xt + ((J & (1 << ht + st) - 1) >> ht)]) >>> 16 & 255, gt = 65535 & k, !(ht + (zt = k >>> 24) <= nt); ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  J >>>= ht, nt -= ht, b.back += ht;
                }
                if (J >>>= zt, nt -= zt, b.back += zt, 64 & Q) {
                  E.msg = "invalid distance code", b.mode = 30;
                  break;
                }
                b.offset = gt, b.extra = 15 & Q, b.mode = 24;
              case 24:
                if (b.extra) {
                  for (C = b.extra; nt < C; ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  b.offset += J & (1 << b.extra) - 1, J >>>= b.extra, nt -= b.extra, b.back += b.extra;
                }
                if (b.offset > b.dmax) {
                  E.msg = "invalid distance too far back", b.mode = 30;
                  break;
                }
                b.mode = 25;
              case 25:
                if (ct === 0)
                  break t;
                if (Tt = bt - ct, b.offset > Tt) {
                  if ((Tt = b.offset - Tt) > b.whave && b.sane) {
                    E.msg = "invalid distance too far back", b.mode = 30;
                    break;
                  }
                  It = Tt > b.wnext ? (Tt -= b.wnext, b.wsize - Tt) : b.wnext - Tt, Tt > b.length && (Tt = b.length), Lt = b.window;
                } else
                  Lt = L, It = M - b.offset, Tt = b.length;
                for (ct < Tt && (Tt = ct), ct -= Tt, b.length -= Tt; L[M++] = Lt[It++], --Tt; )
                  ;
                b.length === 0 && (b.mode = 21);
                break;
              case 26:
                if (ct === 0)
                  break t;
                L[M++] = b.length, ct--, b.mode = 21;
                break;
              case 27:
                if (b.wrap) {
                  for (; nt < 32; ) {
                    if (K === 0)
                      break t;
                    K--, J |= R[N++] << nt, nt += 8;
                  }
                  if (bt -= ct, E.total_out += bt, b.total += bt, bt && (E.adler = b.check = b.flags ? c(b.check, L, bt, M - bt) : l(b.check, L, bt, M - bt)), bt = ct, (b.flags ? J : i(J)) !== b.check) {
                    E.msg = "incorrect data check", b.mode = 30;
                    break;
                  }
                  nt = J = 0;
                }
                b.mode = 28;
              case 28:
                if (b.wrap && b.flags) {
                  for (; nt < 32; ) {
                    if (K === 0)
                      break t;
                    K--, J += R[N++] << nt, nt += 8;
                  }
                  if (J !== (4294967295 & b.total)) {
                    E.msg = "incorrect length check", b.mode = 30;
                    break;
                  }
                  nt = J = 0;
                }
                b.mode = 29;
              case 29:
                Ft = 1;
                break t;
              case 30:
                Ft = -3;
                break t;
              case 31:
                return -4;
              case 32:
              default:
                return f;
            }
        return E.next_out = M, E.avail_out = ct, E.next_in = N, E.avail_in = K, b.hold = J, b.bits = nt, (b.wsize || bt !== E.avail_out && b.mode < 30 && (b.mode < 27 || D !== 4)) && A(E, E.output, E.next_out, bt - E.avail_out) ? (b.mode = 31, -4) : (yt -= E.avail_in, bt -= E.avail_out, E.total_in += yt, E.total_out += bt, b.total += bt, b.wrap && bt && (E.adler = b.check = b.flags ? c(b.check, L, bt, E.next_out - bt) : l(b.check, L, bt, E.next_out - bt)), E.data_type = b.bits + (b.last ? 64 : 0) + (b.mode === 12 ? 128 : 0) + (b.mode === 20 || b.mode === 15 ? 256 : 0), (yt == 0 && bt === 0 || D === 4) && Ft === o && (Ft = -5), Ft);
      }, I.inflateEnd = function(E) {
        if (!E || !E.state)
          return f;
        var D = E.state;
        return D.window && (D.window = null), E.state = null, o;
      }, I.inflateGetHeader = function(E, D) {
        var b;
        return E && E.state && 2 & (b = E.state).wrap ? ((b.head = D).done = !1, o) : f;
      }, I.inflateSetDictionary = function(E, D) {
        var b, R = D.length;
        return E && E.state ? (b = E.state).wrap !== 0 && b.mode !== 11 ? f : b.mode === 11 && l(1, D, R, 0) !== b.check ? -3 : A(E, D, R, R) ? (b.mode = 31, -4) : (b.havedict = 1, o) : f;
      }, I.inflateInfo = "pako inflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(g, w, I) {
      var F = g("../utils/common"), l = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], c = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], t = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], s = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
      w.exports = function(r, a, o, f, u, h, d, i) {
        var p, y, m, e, x, S, P, O, T, A = i.bits, E = 0, D = 0, b = 0, R = 0, L = 0, N = 0, M = 0, K = 0, ct = 0, J = 0, nt = null, yt = 0, bt = new F.Buf16(16), Tt = new F.Buf16(16), It = null, Lt = 0;
        for (E = 0; E <= 15; E++)
          bt[E] = 0;
        for (D = 0; D < f; D++)
          bt[a[o + D]]++;
        for (L = A, R = 15; 1 <= R && bt[R] === 0; R--)
          ;
        if (R < L && (L = R), R === 0)
          return u[h++] = 20971520, u[h++] = 20971520, i.bits = 1, 0;
        for (b = 1; b < R && bt[b] === 0; b++)
          ;
        for (L < b && (L = b), E = K = 1; E <= 15; E++)
          if (K <<= 1, (K -= bt[E]) < 0)
            return -1;
        if (0 < K && (r === 0 || R !== 1))
          return -1;
        for (Tt[1] = 0, E = 1; E < 15; E++)
          Tt[E + 1] = Tt[E] + bt[E];
        for (D = 0; D < f; D++)
          a[o + D] !== 0 && (d[Tt[a[o + D]]++] = D);
        if (S = r === 0 ? (nt = It = d, 19) : r === 1 ? (nt = l, yt -= 257, It = c, Lt -= 257, 256) : (nt = t, It = s, -1), E = b, x = h, M = D = J = 0, m = -1, e = (ct = 1 << (N = L)) - 1, r === 1 && 852 < ct || r === 2 && 592 < ct)
          return 1;
        for (; ; ) {
          for (P = E - M, T = d[D] < S ? (O = 0, d[D]) : d[D] > S ? (O = It[Lt + d[D]], nt[yt + d[D]]) : (O = 96, 0), p = 1 << E - M, b = y = 1 << N; u[x + (J >> M) + (y -= p)] = P << 24 | O << 16 | T | 0, y !== 0; )
            ;
          for (p = 1 << E - 1; J & p; )
            p >>= 1;
          if (p !== 0 ? (J &= p - 1, J += p) : J = 0, D++, --bt[E] == 0) {
            if (E === R)
              break;
            E = a[o + d[D]];
          }
          if (L < E && (J & e) !== m) {
            for (M === 0 && (M = L), x += b, K = 1 << (N = E - M); N + M < R && !((K -= bt[N + M]) <= 0); )
              N++, K <<= 1;
            if (ct += 1 << N, r === 1 && 852 < ct || r === 2 && 592 < ct)
              return 1;
            u[m = J & e] = L << 24 | N << 16 | x - h | 0;
          }
        }
        return J !== 0 && (u[x + J] = E - M << 24 | 64 << 16 | 0), i.bits = L, 0;
      };
    }, { "../utils/common": 41 }], 51: [function(g, w, I) {
      w.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
    }, {}], 52: [function(g, w, I) {
      var F = g("../utils/common"), l = 0, c = 1;
      function t(k) {
        for (var V = k.length; 0 <= --V; )
          k[V] = 0;
      }
      var s = 0, r = 29, a = 256, o = a + 1 + r, f = 30, u = 19, h = 2 * o + 1, d = 15, i = 16, p = 7, y = 256, m = 16, e = 17, x = 18, S = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], P = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], O = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], T = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], A = new Array(2 * (o + 2));
      t(A);
      var E = new Array(2 * f);
      t(E);
      var D = new Array(512);
      t(D);
      var b = new Array(256);
      t(b);
      var R = new Array(r);
      t(R);
      var L, N, M, K = new Array(f);
      function ct(k, V, ot, et, tt) {
        this.static_tree = k, this.extra_bits = V, this.extra_base = ot, this.elems = et, this.max_length = tt, this.has_stree = k && k.length;
      }
      function J(k, V) {
        this.dyn_tree = k, this.max_code = 0, this.stat_desc = V;
      }
      function nt(k) {
        return k < 256 ? D[k] : D[256 + (k >>> 7)];
      }
      function yt(k, V) {
        k.pending_buf[k.pending++] = 255 & V, k.pending_buf[k.pending++] = V >>> 8 & 255;
      }
      function bt(k, V, ot) {
        k.bi_valid > i - ot ? (k.bi_buf |= V << k.bi_valid & 65535, yt(k, k.bi_buf), k.bi_buf = V >> i - k.bi_valid, k.bi_valid += ot - i) : (k.bi_buf |= V << k.bi_valid & 65535, k.bi_valid += ot);
      }
      function Tt(k, V, ot) {
        bt(k, ot[2 * V], ot[2 * V + 1]);
      }
      function It(k, V) {
        for (var ot = 0; ot |= 1 & k, k >>>= 1, ot <<= 1, 0 < --V; )
          ;
        return ot >>> 1;
      }
      function Lt(k, V, ot) {
        var et, tt, At = new Array(d + 1), Nt = 0;
        for (et = 1; et <= d; et++)
          At[et] = Nt = Nt + ot[et - 1] << 1;
        for (tt = 0; tt <= V; tt++) {
          var Kt = k[2 * tt + 1];
          Kt !== 0 && (k[2 * tt] = It(At[Kt]++, Kt));
        }
      }
      function zt(k) {
        var V;
        for (V = 0; V < o; V++)
          k.dyn_ltree[2 * V] = 0;
        for (V = 0; V < f; V++)
          k.dyn_dtree[2 * V] = 0;
        for (V = 0; V < u; V++)
          k.bl_tree[2 * V] = 0;
        k.dyn_ltree[2 * y] = 1, k.opt_len = k.static_len = 0, k.last_lit = k.matches = 0;
      }
      function Q(k) {
        8 < k.bi_valid ? yt(k, k.bi_buf) : 0 < k.bi_valid && (k.pending_buf[k.pending++] = k.bi_buf), k.bi_buf = 0, k.bi_valid = 0;
      }
      function gt(k, V, ot, et) {
        var tt = 2 * V, At = 2 * ot;
        return k[tt] < k[At] || k[tt] === k[At] && et[V] <= et[ot];
      }
      function ht(k, V, ot) {
        for (var et = k.heap[ot], tt = ot << 1; tt <= k.heap_len && (tt < k.heap_len && gt(V, k.heap[tt + 1], k.heap[tt], k.depth) && tt++, !gt(V, et, k.heap[tt], k.depth)); )
          k.heap[ot] = k.heap[tt], ot = tt, tt <<= 1;
        k.heap[ot] = et;
      }
      function st(k, V, ot) {
        var et, tt, At, Nt, Kt = 0;
        if (k.last_lit !== 0)
          for (; et = k.pending_buf[k.d_buf + 2 * Kt] << 8 | k.pending_buf[k.d_buf + 2 * Kt + 1], tt = k.pending_buf[k.l_buf + Kt], Kt++, et === 0 ? Tt(k, tt, V) : (Tt(k, (At = b[tt]) + a + 1, V), (Nt = S[At]) !== 0 && bt(k, tt -= R[At], Nt), Tt(k, At = nt(--et), ot), (Nt = P[At]) !== 0 && bt(k, et -= K[At], Nt)), Kt < k.last_lit; )
            ;
        Tt(k, y, V);
      }
      function xt(k, V) {
        var ot, et, tt, At = V.dyn_tree, Nt = V.stat_desc.static_tree, Kt = V.stat_desc.has_stree, Vt = V.stat_desc.elems, Ot = -1;
        for (k.heap_len = 0, k.heap_max = h, ot = 0; ot < Vt; ot++)
          At[2 * ot] !== 0 ? (k.heap[++k.heap_len] = Ot = ot, k.depth[ot] = 0) : At[2 * ot + 1] = 0;
        for (; k.heap_len < 2; )
          At[2 * (tt = k.heap[++k.heap_len] = Ot < 2 ? ++Ot : 0)] = 1, k.depth[tt] = 0, k.opt_len--, Kt && (k.static_len -= Nt[2 * tt + 1]);
        for (V.max_code = Ot, ot = k.heap_len >> 1; 1 <= ot; ot--)
          ht(k, At, ot);
        for (tt = Vt; ot = k.heap[1], k.heap[1] = k.heap[k.heap_len--], ht(k, At, 1), et = k.heap[1], k.heap[--k.heap_max] = ot, k.heap[--k.heap_max] = et, At[2 * tt] = At[2 * ot] + At[2 * et], k.depth[tt] = (k.depth[ot] >= k.depth[et] ? k.depth[ot] : k.depth[et]) + 1, At[2 * ot + 1] = At[2 * et + 1] = tt, k.heap[1] = tt++, ht(k, At, 1), 2 <= k.heap_len; )
          ;
        k.heap[--k.heap_max] = k.heap[1], function(ie, Ae) {
          var be, de, Se, Wt, _t, ce, pe = Ae.dyn_tree, we = Ae.max_code, Be = Ae.stat_desc.static_tree, Ie = Ae.stat_desc.has_stree, Dt = Ae.stat_desc.extra_bits, ue = Ae.stat_desc.extra_base, lt = Ae.stat_desc.max_length, Y = 0;
          for (Wt = 0; Wt <= d; Wt++)
            ie.bl_count[Wt] = 0;
          for (pe[2 * ie.heap[ie.heap_max] + 1] = 0, be = ie.heap_max + 1; be < h; be++)
            lt < (Wt = pe[2 * pe[2 * (de = ie.heap[be]) + 1] + 1] + 1) && (Wt = lt, Y++), pe[2 * de + 1] = Wt, we < de || (ie.bl_count[Wt]++, _t = 0, ue <= de && (_t = Dt[de - ue]), ce = pe[2 * de], ie.opt_len += ce * (Wt + _t), Ie && (ie.static_len += ce * (Be[2 * de + 1] + _t)));
          if (Y !== 0) {
            do {
              for (Wt = lt - 1; ie.bl_count[Wt] === 0; )
                Wt--;
              ie.bl_count[Wt]--, ie.bl_count[Wt + 1] += 2, ie.bl_count[lt]--, Y -= 2;
            } while (0 < Y);
            for (Wt = lt; Wt !== 0; Wt--)
              for (de = ie.bl_count[Wt]; de !== 0; )
                we < (Se = ie.heap[--be]) || (pe[2 * Se + 1] !== Wt && (ie.opt_len += (Wt - pe[2 * Se + 1]) * pe[2 * Se], pe[2 * Se + 1] = Wt), de--);
          }
        }(k, V), Lt(At, Ot, k.bl_count);
      }
      function G(k, V, ot) {
        var et, tt, At = -1, Nt = V[1], Kt = 0, Vt = 7, Ot = 4;
        for (Nt === 0 && (Vt = 138, Ot = 3), V[2 * (ot + 1) + 1] = 65535, et = 0; et <= ot; et++)
          tt = Nt, Nt = V[2 * (et + 1) + 1], ++Kt < Vt && tt === Nt || (Kt < Ot ? k.bl_tree[2 * tt] += Kt : tt !== 0 ? (tt !== At && k.bl_tree[2 * tt]++, k.bl_tree[2 * m]++) : Kt <= 10 ? k.bl_tree[2 * e]++ : k.bl_tree[2 * x]++, At = tt, Ot = (Kt = 0) === Nt ? (Vt = 138, 3) : tt === Nt ? (Vt = 6, 3) : (Vt = 7, 4));
      }
      function Ft(k, V, ot) {
        var et, tt, At = -1, Nt = V[1], Kt = 0, Vt = 7, Ot = 4;
        for (Nt === 0 && (Vt = 138, Ot = 3), et = 0; et <= ot; et++)
          if (tt = Nt, Nt = V[2 * (et + 1) + 1], !(++Kt < Vt && tt === Nt)) {
            if (Kt < Ot)
              for (; Tt(k, tt, k.bl_tree), --Kt != 0; )
                ;
            else
              tt !== 0 ? (tt !== At && (Tt(k, tt, k.bl_tree), Kt--), Tt(k, m, k.bl_tree), bt(k, Kt - 3, 2)) : Kt <= 10 ? (Tt(k, e, k.bl_tree), bt(k, Kt - 3, 3)) : (Tt(k, x, k.bl_tree), bt(k, Kt - 11, 7));
            At = tt, Ot = (Kt = 0) === Nt ? (Vt = 138, 3) : tt === Nt ? (Vt = 6, 3) : (Vt = 7, 4);
          }
      }
      t(K);
      var z = !1;
      function C(k, V, ot, et) {
        bt(k, (s << 1) + (et ? 1 : 0), 3), function(tt, At, Nt, Kt) {
          Q(tt), Kt && (yt(tt, Nt), yt(tt, ~Nt)), F.arraySet(tt.pending_buf, tt.window, At, Nt, tt.pending), tt.pending += Nt;
        }(k, V, ot, !0);
      }
      I._tr_init = function(k) {
        z || (function() {
          var V, ot, et, tt, At, Nt = new Array(d + 1);
          for (tt = et = 0; tt < r - 1; tt++)
            for (R[tt] = et, V = 0; V < 1 << S[tt]; V++)
              b[et++] = tt;
          for (b[et - 1] = tt, tt = At = 0; tt < 16; tt++)
            for (K[tt] = At, V = 0; V < 1 << P[tt]; V++)
              D[At++] = tt;
          for (At >>= 7; tt < f; tt++)
            for (K[tt] = At << 7, V = 0; V < 1 << P[tt] - 7; V++)
              D[256 + At++] = tt;
          for (ot = 0; ot <= d; ot++)
            Nt[ot] = 0;
          for (V = 0; V <= 143; )
            A[2 * V + 1] = 8, V++, Nt[8]++;
          for (; V <= 255; )
            A[2 * V + 1] = 9, V++, Nt[9]++;
          for (; V <= 279; )
            A[2 * V + 1] = 7, V++, Nt[7]++;
          for (; V <= 287; )
            A[2 * V + 1] = 8, V++, Nt[8]++;
          for (Lt(A, o + 1, Nt), V = 0; V < f; V++)
            E[2 * V + 1] = 5, E[2 * V] = It(V, 5);
          L = new ct(A, S, a + 1, o, d), N = new ct(E, P, 0, f, d), M = new ct(new Array(0), O, 0, u, p);
        }(), z = !0), k.l_desc = new J(k.dyn_ltree, L), k.d_desc = new J(k.dyn_dtree, N), k.bl_desc = new J(k.bl_tree, M), k.bi_buf = 0, k.bi_valid = 0, zt(k);
      }, I._tr_stored_block = C, I._tr_flush_block = function(k, V, ot, et) {
        var tt, At, Nt = 0;
        0 < k.level ? (k.strm.data_type === 2 && (k.strm.data_type = function(Kt) {
          var Vt, Ot = 4093624447;
          for (Vt = 0; Vt <= 31; Vt++, Ot >>>= 1)
            if (1 & Ot && Kt.dyn_ltree[2 * Vt] !== 0)
              return l;
          if (Kt.dyn_ltree[18] !== 0 || Kt.dyn_ltree[20] !== 0 || Kt.dyn_ltree[26] !== 0)
            return c;
          for (Vt = 32; Vt < a; Vt++)
            if (Kt.dyn_ltree[2 * Vt] !== 0)
              return c;
          return l;
        }(k)), xt(k, k.l_desc), xt(k, k.d_desc), Nt = function(Kt) {
          var Vt;
          for (G(Kt, Kt.dyn_ltree, Kt.l_desc.max_code), G(Kt, Kt.dyn_dtree, Kt.d_desc.max_code), xt(Kt, Kt.bl_desc), Vt = u - 1; 3 <= Vt && Kt.bl_tree[2 * T[Vt] + 1] === 0; Vt--)
            ;
          return Kt.opt_len += 3 * (Vt + 1) + 5 + 5 + 4, Vt;
        }(k), tt = k.opt_len + 3 + 7 >>> 3, (At = k.static_len + 3 + 7 >>> 3) <= tt && (tt = At)) : tt = At = ot + 5, ot + 4 <= tt && V !== -1 ? C(k, V, ot, et) : k.strategy === 4 || At === tt ? (bt(k, 2 + (et ? 1 : 0), 3), st(k, A, E)) : (bt(k, 4 + (et ? 1 : 0), 3), function(Kt, Vt, Ot, ie) {
          var Ae;
          for (bt(Kt, Vt - 257, 5), bt(Kt, Ot - 1, 5), bt(Kt, ie - 4, 4), Ae = 0; Ae < ie; Ae++)
            bt(Kt, Kt.bl_tree[2 * T[Ae] + 1], 3);
          Ft(Kt, Kt.dyn_ltree, Vt - 1), Ft(Kt, Kt.dyn_dtree, Ot - 1);
        }(k, k.l_desc.max_code + 1, k.d_desc.max_code + 1, Nt + 1), st(k, k.dyn_ltree, k.dyn_dtree)), zt(k), et && Q(k);
      }, I._tr_tally = function(k, V, ot) {
        return k.pending_buf[k.d_buf + 2 * k.last_lit] = V >>> 8 & 255, k.pending_buf[k.d_buf + 2 * k.last_lit + 1] = 255 & V, k.pending_buf[k.l_buf + k.last_lit] = 255 & ot, k.last_lit++, V === 0 ? k.dyn_ltree[2 * ot]++ : (k.matches++, V--, k.dyn_ltree[2 * (b[ot] + a + 1)]++, k.dyn_dtree[2 * nt(V)]++), k.last_lit === k.lit_bufsize - 1;
      }, I._tr_align = function(k) {
        bt(k, 2, 3), Tt(k, y, A), function(V) {
          V.bi_valid === 16 ? (yt(V, V.bi_buf), V.bi_buf = 0, V.bi_valid = 0) : 8 <= V.bi_valid && (V.pending_buf[V.pending++] = 255 & V.bi_buf, V.bi_buf >>= 8, V.bi_valid -= 8);
        }(k);
      };
    }, { "../utils/common": 41 }], 53: [function(g, w, I) {
      w.exports = function() {
        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
      };
    }, {}], 54: [function(g, w, I) {
      (function(F) {
        (function(l, c) {
          if (!l.setImmediate) {
            var t, s, r, a, o = 1, f = {}, u = !1, h = l.document, d = Object.getPrototypeOf && Object.getPrototypeOf(l);
            d = d && d.setTimeout ? d : l, t = {}.toString.call(l.process) === "[object process]" ? function(m) {
              process.nextTick(function() {
                p(m);
              });
            } : function() {
              if (l.postMessage && !l.importScripts) {
                var m = !0, e = l.onmessage;
                return l.onmessage = function() {
                  m = !1;
                }, l.postMessage("", "*"), l.onmessage = e, m;
              }
            }() ? (a = "setImmediate$" + Math.random() + "$", l.addEventListener ? l.addEventListener("message", y, !1) : l.attachEvent("onmessage", y), function(m) {
              l.postMessage(a + m, "*");
            }) : l.MessageChannel ? ((r = new MessageChannel()).port1.onmessage = function(m) {
              p(m.data);
            }, function(m) {
              r.port2.postMessage(m);
            }) : h && "onreadystatechange" in h.createElement("script") ? (s = h.documentElement, function(m) {
              var e = h.createElement("script");
              e.onreadystatechange = function() {
                p(m), e.onreadystatechange = null, s.removeChild(e), e = null;
              }, s.appendChild(e);
            }) : function(m) {
              setTimeout(p, 0, m);
            }, d.setImmediate = function(m) {
              typeof m != "function" && (m = new Function("" + m));
              for (var e = new Array(arguments.length - 1), x = 0; x < e.length; x++)
                e[x] = arguments[x + 1];
              var S = { callback: m, args: e };
              return f[o] = S, t(o), o++;
            }, d.clearImmediate = i;
          }
          function i(m) {
            delete f[m];
          }
          function p(m) {
            if (u)
              setTimeout(p, 0, m);
            else {
              var e = f[m];
              if (e) {
                u = !0;
                try {
                  (function(x) {
                    var S = x.callback, P = x.args;
                    switch (P.length) {
                      case 0:
                        S();
                        break;
                      case 1:
                        S(P[0]);
                        break;
                      case 2:
                        S(P[0], P[1]);
                        break;
                      case 3:
                        S(P[0], P[1], P[2]);
                        break;
                      default:
                        S.apply(c, P);
                    }
                  })(e);
                } finally {
                  i(m), u = !1;
                }
              }
            }
          }
          function y(m) {
            m.source === l && typeof m.data == "string" && m.data.indexOf(a) === 0 && p(+m.data.slice(a.length));
          }
        })(typeof self == "undefined" ? F === void 0 ? this : F : self);
      }).call(this, typeof xi != "undefined" ? xi : typeof self != "undefined" ? self : typeof window != "undefined" ? window : {});
    }, {}] }, {}, [10])(10);
  });
})(If);
var E1 = If.exports;
const T1 = /* @__PURE__ */ Ff(E1);
var F1 = { exports: {} };
/*! pdfmake v0.2.9, @license MIT, @link http://pdfmake.org */
(function(n, v) {
  (function(w, I) {
    n.exports = I();
  })(typeof self != "undefined" ? self : xi, function() {
    return (
      /******/
      function() {
        var g = {
          /***/
          71692: (
            /***/
            function(l, c) {
              c.OP = 0, c.CL = 1, c.CP = 2, c.QU = 3, c.GL = 4, c.NS = 5, c.EX = 6, c.SY = 7, c.IS = 8, c.PR = 9, c.PO = 10, c.NU = 11, c.AL = 12, c.HL = 13, c.ID = 14, c.IN = 15, c.HY = 16, c.BA = 17, c.BB = 18, c.B2 = 19, c.ZW = 20, c.CM = 21, c.WJ = 22, c.H2 = 23, c.H3 = 24, c.JL = 25, c.JV = 26, c.JT = 27, c.RI = 28, c.EB = 29, c.EM = 30, c.ZWJ = 31, c.CB = 32, c.AI = 33, c.BK = 34, c.CJ = 35, c.CR = 36, c.LF = 37, c.NL = 38, c.SA = 39, c.SG = 40, c.SP = 41, c.XX = 42;
            }
          ),
          /***/
          54069: (
            /***/
            function(l, c) {
              var t, s, r, a, o;
              c.DI_BRK = r = 0, c.IN_BRK = a = 1, c.CI_BRK = t = 2, c.CP_BRK = s = 3, c.PR_BRK = o = 4, c.pairTable = [
                //OP   , CL    , CP    , QU    , GL    , NS    , EX    , SY    , IS    , PR    , PO    , NU    , AL    , HL    , ID    , IN    , HY    , BA    , BB    , B2    , ZW    , CM    , WJ    , H2    , H3    , JL    , JV    , JT    , RI    , EB    , EM    , ZWJ   , CB
                [o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, o, s, o, o, o, o, o, o, o, o, o, o, o],
                // OP
                [r, o, o, a, a, o, o, o, o, a, a, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // CL
                [r, o, o, a, a, o, o, o, o, a, a, a, a, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // CP
                [o, o, o, a, a, a, o, o, o, a, a, a, a, a, a, a, a, a, a, a, o, t, o, a, a, a, a, a, a, a, a, a, a],
                // QU
                [a, o, o, a, a, a, o, o, o, a, a, a, a, a, a, a, a, a, a, a, o, t, o, a, a, a, a, a, a, a, a, a, a],
                // GL
                [r, o, o, a, a, a, o, o, o, r, r, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // NS
                [r, o, o, a, a, a, o, o, o, r, r, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // EX
                [r, o, o, a, a, a, o, o, o, r, r, a, r, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // SY
                [r, o, o, a, a, a, o, o, o, r, r, a, a, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // IS
                [a, o, o, a, a, a, o, o, o, r, r, a, a, a, a, a, a, a, r, r, o, t, o, a, a, a, a, a, r, a, a, a, r],
                // PR
                [a, o, o, a, a, a, o, o, o, r, r, a, a, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // PO
                [a, o, o, a, a, a, o, o, o, a, a, a, a, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // NU
                [a, o, o, a, a, a, o, o, o, a, a, a, a, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // AL
                [a, o, o, a, a, a, o, o, o, a, a, a, a, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // HL
                [r, o, o, a, a, a, o, o, o, r, a, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // ID
                [r, o, o, a, a, a, o, o, o, r, r, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // IN
                [r, o, o, a, r, a, o, o, o, r, r, a, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // HY
                [r, o, o, a, r, a, o, o, o, r, r, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // BA
                [a, o, o, a, a, a, o, o, o, a, a, a, a, a, a, a, a, a, a, a, o, t, o, a, a, a, a, a, a, a, a, a, r],
                // BB
                [r, o, o, a, a, a, o, o, o, r, r, r, r, r, r, a, a, a, r, o, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // B2
                [r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, o, r, r, r, r, r, r, r, r, r, r, r, r],
                // ZW
                [a, o, o, a, a, a, o, o, o, a, a, a, a, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // CM
                [a, o, o, a, a, a, o, o, o, a, a, a, a, a, a, a, a, a, a, a, o, t, o, a, a, a, a, a, a, a, a, a, a],
                // WJ
                [r, o, o, a, a, a, o, o, o, r, a, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, a, a, r, r, r, a, r],
                // H2
                [r, o, o, a, a, a, o, o, o, r, a, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, a, r, r, r, a, r],
                // H3
                [r, o, o, a, a, a, o, o, o, r, a, r, r, r, r, a, a, a, r, r, o, t, o, a, a, a, a, r, r, r, r, a, r],
                // JL
                [r, o, o, a, a, a, o, o, o, r, a, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, a, a, r, r, r, a, r],
                // JV
                [r, o, o, a, a, a, o, o, o, r, a, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, a, r, r, r, a, r],
                // JT
                [r, o, o, a, a, a, o, o, o, r, r, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, a, r, r, a, r],
                // RI
                [r, o, o, a, a, a, o, o, o, r, a, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, a, a, r],
                // EB
                [r, o, o, a, a, a, o, o, o, r, a, r, r, r, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // EM
                [a, o, o, a, a, a, o, o, o, a, a, a, a, a, r, a, a, a, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r],
                // ZWJ
                [r, o, o, a, a, r, o, o, o, r, r, r, r, r, r, r, r, r, r, r, o, t, o, r, r, r, r, r, r, r, r, a, r]
                // CB
              ];
            }
          ),
          /***/
          27398: (
            /***/
            function(l, c, t) {
              t(33130), c.EncodeStream = t(74883), c.DecodeStream = t(42092), c.Array = t(23948), c.LazyArray = t(88931), c.Bitfield = t(41602), c.Boolean = t(21210), c.Buffer = t(96204), c.Enum = t(2463), c.Optional = t(11568), c.Reserved = t(62211), c.String = t(69046), c.Struct = t(90433), c.VersionedStruct = t(37529);
              var s = t(76959), r = t(61002), a = t(27309);
              Object.assign(c, s, r, a);
            }
          ),
          /***/
          23948: (
            /***/
            function(l, c, t) {
              t(18821), t(10853), t(33290), t(54994), t(4845), t(45007), t(39275), t(26364), t(86632), t(61928), t(54883), t(68995);
              function s(d, i) {
                var p = typeof Symbol != "undefined" && d[Symbol.iterator] || d["@@iterator"];
                if (p)
                  return (p = p.call(d)).next.bind(p);
                if (Array.isArray(d) || (p = r(d)) || i && d && typeof d.length == "number") {
                  p && (d = p);
                  var y = 0;
                  return function() {
                    return y >= d.length ? { done: !0 } : { done: !1, value: d[y++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function r(d, i) {
                if (d) {
                  if (typeof d == "string")
                    return a(d, i);
                  var p = Object.prototype.toString.call(d).slice(8, -1);
                  if (p === "Object" && d.constructor && (p = d.constructor.name), p === "Map" || p === "Set")
                    return Array.from(d);
                  if (p === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(p))
                    return a(d, i);
                }
              }
              function a(d, i) {
                (i == null || i > d.length) && (i = d.length);
                for (var p = 0, y = new Array(i); p < i; p++)
                  y[p] = d[p];
                return y;
              }
              var o = t(61002), f = o.Number, u = t(76959), h = /* @__PURE__ */ function() {
                function d(p, y, m) {
                  m === void 0 && (m = "count"), this.type = p, this.length = y, this.lengthType = m;
                }
                var i = d.prototype;
                return i.decode = function(y, m) {
                  var e, x = y.pos, S = [], P = m;
                  if (this.length != null && (e = u.resolveLength(this.length, y, m)), this.length instanceof f && (Object.defineProperties(S, {
                    parent: {
                      value: m
                    },
                    _startOffset: {
                      value: x
                    },
                    _currentOffset: {
                      value: 0,
                      writable: !0
                    },
                    _length: {
                      value: e
                    }
                  }), P = S), e == null || this.lengthType === "bytes")
                    for (var O = e != null ? y.pos + e : m != null && m._length ? m._startOffset + m._length : y.length; y.pos < O; )
                      S.push(this.type.decode(y, P));
                  else
                    for (var T = 0, A = e; T < A; T++)
                      S.push(this.type.decode(y, P));
                  return S;
                }, i.size = function(y, m) {
                  if (!y)
                    return this.type.size(null, m) * u.resolveLength(this.length, null, m);
                  var e = 0;
                  this.length instanceof f && (e += this.length.size(), m = {
                    parent: m
                  });
                  for (var x = s(y), S; !(S = x()).done; ) {
                    var P = S.value;
                    e += this.type.size(P, m);
                  }
                  return e;
                }, i.encode = function(y, m, e) {
                  var x = e;
                  this.length instanceof f && (x = {
                    pointers: [],
                    startOffset: y.pos,
                    parent: e
                  }, x.pointerOffset = y.pos + this.size(m, x), this.length.encode(y, m.length));
                  for (var S = s(m), P; !(P = S()).done; ) {
                    var O = P.value;
                    this.type.encode(y, O, x);
                  }
                  if (this.length instanceof f)
                    for (var T = 0; T < x.pointers.length; ) {
                      var A = x.pointers[T++];
                      A.type.encode(y, A.val);
                    }
                }, d;
              }();
              l.exports = h;
            }
          ),
          /***/
          41602: (
            /***/
            function(l, c, t) {
              t(15158);
              var s = /* @__PURE__ */ function() {
                function r(o, f) {
                  f === void 0 && (f = []), this.type = o, this.flags = f;
                }
                var a = r.prototype;
                return a.decode = function(f) {
                  for (var u = this.type.decode(f), h = {}, d = 0; d < this.flags.length; d++) {
                    var i = this.flags[d];
                    i != null && (h[i] = !!(u & 1 << d));
                  }
                  return h;
                }, a.size = function() {
                  return this.type.size();
                }, a.encode = function(f, u) {
                  for (var h = 0, d = 0; d < this.flags.length; d++) {
                    var i = this.flags[d];
                    i != null && u[i] && (h |= 1 << d);
                  }
                  return this.type.encode(f, h);
                }, r;
              }();
              l.exports = s;
            }
          ),
          /***/
          21210: (
            /***/
            function(l) {
              var c = /* @__PURE__ */ function() {
                function t(r) {
                  this.type = r;
                }
                var s = t.prototype;
                return s.decode = function(a, o) {
                  return !!this.type.decode(a, o);
                }, s.size = function(a, o) {
                  return this.type.size(a, o);
                }, s.encode = function(a, o, f) {
                  return this.type.encode(a, +o, f);
                }, t;
              }();
              l.exports = c;
            }
          ),
          /***/
          96204: (
            /***/
            function(l, c, t) {
              var s = t(76959), r = t(61002), a = r.Number, o = /* @__PURE__ */ function() {
                function f(h) {
                  this.length = h;
                }
                var u = f.prototype;
                return u.decode = function(d, i) {
                  var p = s.resolveLength(this.length, d, i);
                  return d.readBuffer(p);
                }, u.size = function(d, i) {
                  return d ? d.length : s.resolveLength(this.length, null, i);
                }, u.encode = function(d, i, p) {
                  return this.length instanceof a && this.length.encode(d, i.length), d.writeBuffer(i);
                }, f;
              }();
              l.exports = o;
            }
          ),
          /***/
          42092: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer;
              t(10853), t(33290), t(18821), t(39275), t(22321);
              var r;
              try {
                r = t(32766);
              } catch (u) {
              }
              var a = /* @__PURE__ */ function() {
                function u(d) {
                  this.buffer = d, this.pos = 0, this.length = this.buffer.length;
                }
                var h = u.prototype;
                return h.readString = function(i, p) {
                  switch (p === void 0 && (p = "ascii"), p) {
                    case "utf16le":
                    case "ucs2":
                    case "utf8":
                    case "ascii":
                      return this.buffer.toString(p, this.pos, this.pos += i);
                    case "utf16be":
                      for (var y = s.from(this.readBuffer(i)), m = 0, e = y.length - 1; m < e; m += 2) {
                        var x = y[m];
                        y[m] = y[m + 1], y[m + 1] = x;
                      }
                      return y.toString("utf16le");
                    default:
                      if (y = this.readBuffer(i), r)
                        try {
                          return r.decode(y, p);
                        } catch (S) {
                        }
                      return y;
                  }
                }, h.readBuffer = function(i) {
                  return this.buffer.slice(this.pos, this.pos += i);
                }, h.readUInt24BE = function() {
                  return (this.readUInt16BE() << 8) + this.readUInt8();
                }, h.readUInt24LE = function() {
                  return this.readUInt16LE() + (this.readUInt8() << 16);
                }, h.readInt24BE = function() {
                  return (this.readInt16BE() << 8) + this.readUInt8();
                }, h.readInt24LE = function() {
                  return this.readUInt16LE() + (this.readInt8() << 16);
                }, u;
              }();
              a.TYPES = {
                UInt8: 1,
                UInt16: 2,
                UInt24: 3,
                UInt32: 4,
                Int8: 1,
                Int16: 2,
                Int24: 3,
                Int32: 4,
                Float: 4,
                Double: 8
              };
              var o = function(h) {
                if (h.slice(0, 4) === "read") {
                  var d = a.TYPES[h.replace(/read|[BL]E/g, "")];
                  a.prototype[h] = function() {
                    var i = this.buffer[h](this.pos);
                    return this.pos += d, i;
                  };
                }
              };
              for (var f in s.prototype)
                o(f);
              l.exports = a;
            }
          ),
          /***/
          74883: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer;
              t(18821), t(83382), t(39275), t(22321);
              function r(p, y) {
                p.prototype = Object.create(y.prototype), p.prototype.constructor = p, a(p, y);
              }
              function a(p, y) {
                return a = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, x) {
                  return e.__proto__ = x, e;
                }, a(p, y);
              }
              var o, f = t(20202), u = t(42092);
              try {
                o = t(32766);
              } catch (p) {
              }
              var h = /* @__PURE__ */ function(p) {
                r(y, p);
                function y(e) {
                  var x;
                  return e === void 0 && (e = 65536), x = p.apply(this, arguments) || this, x.buffer = s.alloc(e), x.bufferOffset = 0, x.pos = 0, x;
                }
                var m = y.prototype;
                return m._read = function() {
                }, m.ensure = function(x) {
                  if (this.bufferOffset + x > this.buffer.length)
                    return this.flush();
                }, m.flush = function() {
                  if (this.bufferOffset > 0)
                    return this.push(s.from(this.buffer.slice(0, this.bufferOffset))), this.bufferOffset = 0;
                }, m.writeBuffer = function(x) {
                  return this.flush(), this.push(x), this.pos += x.length;
                }, m.writeString = function(x, S) {
                  switch (S === void 0 && (S = "ascii"), S) {
                    case "utf16le":
                    case "ucs2":
                    case "utf8":
                    case "ascii":
                      return this.writeBuffer(s.from(x, S));
                    case "utf16be":
                      for (var P = s.from(x, "utf16le"), O = 0, T = P.length - 1; O < T; O += 2) {
                        var A = P[O];
                        P[O] = P[O + 1], P[O + 1] = A;
                      }
                      return this.writeBuffer(P);
                    default:
                      if (o)
                        return this.writeBuffer(o.encode(x, S));
                      throw new Error("Install iconv-lite to enable additional string encodings.");
                  }
                }, m.writeUInt24BE = function(x) {
                  return this.ensure(3), this.buffer[this.bufferOffset++] = x >>> 16 & 255, this.buffer[this.bufferOffset++] = x >>> 8 & 255, this.buffer[this.bufferOffset++] = x & 255, this.pos += 3;
                }, m.writeUInt24LE = function(x) {
                  return this.ensure(3), this.buffer[this.bufferOffset++] = x & 255, this.buffer[this.bufferOffset++] = x >>> 8 & 255, this.buffer[this.bufferOffset++] = x >>> 16 & 255, this.pos += 3;
                }, m.writeInt24BE = function(x) {
                  return x >= 0 ? this.writeUInt24BE(x) : this.writeUInt24BE(x + 16777215 + 1);
                }, m.writeInt24LE = function(x) {
                  return x >= 0 ? this.writeUInt24LE(x) : this.writeUInt24LE(x + 16777215 + 1);
                }, m.fill = function(x, S) {
                  if (S < this.buffer.length)
                    return this.ensure(S), this.buffer.fill(x, this.bufferOffset, this.bufferOffset + S), this.bufferOffset += S, this.pos += S;
                  var P = s.alloc(S);
                  return P.fill(x), this.writeBuffer(P);
                }, m.end = function() {
                  return this.flush(), this.push(null);
                }, y;
              }(f.Readable), d = function(y) {
                if (y.slice(0, 5) === "write") {
                  var m = +u.TYPES[y.replace(/write|[BL]E/g, "")];
                  h.prototype[y] = function(e) {
                    return this.ensure(m), this.buffer[y](e, this.bufferOffset), this.bufferOffset += m, this.pos += m;
                  };
                }
              };
              for (var i in s.prototype)
                d(i);
              l.exports = h;
            }
          ),
          /***/
          2463: (
            /***/
            function(l) {
              var c = /* @__PURE__ */ function() {
                function t(r, a) {
                  a === void 0 && (a = []), this.type = r, this.options = a;
                }
                var s = t.prototype;
                return s.decode = function(a) {
                  var o = this.type.decode(a);
                  return this.options[o] || o;
                }, s.size = function() {
                  return this.type.size();
                }, s.encode = function(a, o) {
                  var f = this.options.indexOf(o);
                  if (f === -1)
                    throw new Error("Unknown option in enum: " + o);
                  return this.type.encode(a, f);
                }, t;
              }();
              l.exports = c;
            }
          ),
          /***/
          88931: (
            /***/
            function(l, c, t) {
              t(10853), t(35054);
              function s(y, m) {
                y.prototype = Object.create(m.prototype), y.prototype.constructor = y, r(y, m);
              }
              function r(y, m) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(x, S) {
                  return x.__proto__ = S, x;
                }, r(y, m);
              }
              var a = t(23948), o = t(61002), f = o.Number, u = t(76959), h = t(85663), d = h.inspect, i = /* @__PURE__ */ function(y) {
                s(m, y);
                function m() {
                  return y.apply(this, arguments) || this;
                }
                var e = m.prototype;
                return e.decode = function(S, P) {
                  var O = S.pos, T = u.resolveLength(this.length, S, P);
                  this.length instanceof f && (P = {
                    parent: P,
                    _startOffset: O,
                    _currentOffset: 0,
                    _length: T
                  });
                  var A = new p(this.type, T, S, P);
                  return S.pos += T * this.type.size(null, P), A;
                }, e.size = function(S, P) {
                  return S instanceof p && (S = S.toArray()), y.prototype.size.call(this, S, P);
                }, e.encode = function(S, P, O) {
                  return P instanceof p && (P = P.toArray()), y.prototype.encode.call(this, S, P, O);
                }, m;
              }(a), p = /* @__PURE__ */ function() {
                function y(e, x, S, P) {
                  this.type = e, this.length = x, this.stream = S, this.ctx = P, this.base = this.stream.pos, this.items = [];
                }
                var m = y.prototype;
                return m.get = function(x) {
                  if (!(x < 0 || x >= this.length)) {
                    if (this.items[x] == null) {
                      var S = this.stream.pos;
                      this.stream.pos = this.base + this.type.size(null, this.ctx) * x, this.items[x] = this.type.decode(this.stream, this.ctx), this.stream.pos = S;
                    }
                    return this.items[x];
                  }
                }, m.toArray = function() {
                  for (var x = [], S = 0, P = this.length; S < P; S++)
                    x.push(this.get(S));
                  return x;
                }, m.inspect = function() {
                  return d(this.toArray());
                }, y;
              }();
              l.exports = i;
            }
          ),
          /***/
          61002: (
            /***/
            function(l, c, t) {
              function s(u, h) {
                u.prototype = Object.create(h.prototype), u.prototype.constructor = u, r(u, h);
              }
              function r(u, h) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, p) {
                  return i.__proto__ = p, i;
                }, r(u, h);
              }
              var a = t(42092), o = /* @__PURE__ */ function() {
                function u(d, i) {
                  i === void 0 && (i = "BE"), this.type = d, this.endian = i, this.fn = this.type, this.type[this.type.length - 1] !== "8" && (this.fn += this.endian);
                }
                var h = u.prototype;
                return h.size = function() {
                  return a.TYPES[this.type];
                }, h.decode = function(i) {
                  return i["read" + this.fn]();
                }, h.encode = function(i, p) {
                  return i["write" + this.fn](p);
                }, u;
              }();
              c.Number = o, c.uint8 = new o("UInt8"), c.uint16be = c.uint16 = new o("UInt16", "BE"), c.uint16le = new o("UInt16", "LE"), c.uint24be = c.uint24 = new o("UInt24", "BE"), c.uint24le = new o("UInt24", "LE"), c.uint32be = c.uint32 = new o("UInt32", "BE"), c.uint32le = new o("UInt32", "LE"), c.int8 = new o("Int8"), c.int16be = c.int16 = new o("Int16", "BE"), c.int16le = new o("Int16", "LE"), c.int24be = c.int24 = new o("Int24", "BE"), c.int24le = new o("Int24", "LE"), c.int32be = c.int32 = new o("Int32", "BE"), c.int32le = new o("Int32", "LE"), c.floatbe = c.float = new o("Float", "BE"), c.floatle = new o("Float", "LE"), c.doublebe = c.double = new o("Double", "BE"), c.doublele = new o("Double", "LE");
              var f = /* @__PURE__ */ function(u) {
                s(h, u);
                function h(i, p, y) {
                  var m;
                  return y === void 0 && (y = i >> 1), m = u.call(this, "Int" + i, p) || this, m._point = 1 << y, m;
                }
                var d = h.prototype;
                return d.decode = function(p) {
                  return u.prototype.decode.call(this, p) / this._point;
                }, d.encode = function(p, y) {
                  return u.prototype.encode.call(this, p, y * this._point | 0);
                }, h;
              }(o);
              c.Fixed = f, c.fixed16be = c.fixed16 = new f(16, "BE"), c.fixed16le = new f(16, "LE"), c.fixed32be = c.fixed32 = new f(32, "BE"), c.fixed32le = new f(32, "LE");
            }
          ),
          /***/
          11568: (
            /***/
            function(l) {
              var c = /* @__PURE__ */ function() {
                function t(r, a) {
                  a === void 0 && (a = !0), this.type = r, this.condition = a;
                }
                var s = t.prototype;
                return s.decode = function(a, o) {
                  var f = this.condition;
                  if (typeof f == "function" && (f = f.call(o, o)), f)
                    return this.type.decode(a, o);
                }, s.size = function(a, o) {
                  var f = this.condition;
                  return typeof f == "function" && (f = f.call(o, o)), f ? this.type.size(a, o) : 0;
                }, s.encode = function(a, o, f) {
                  var u = this.condition;
                  if (typeof u == "function" && (u = u.call(f, f)), u)
                    return this.type.encode(a, o, f);
                }, t;
              }();
              l.exports = c;
            }
          ),
          /***/
          27309: (
            /***/
            function(l, c, t) {
              var s = t(76959), r = /* @__PURE__ */ function() {
                function o(u, h, d) {
                  if (d === void 0 && (d = {}), this.offsetType = u, this.type = h, this.options = d, this.type === "void" && (this.type = null), this.options.type == null && (this.options.type = "local"), this.options.allowNull == null && (this.options.allowNull = !0), this.options.nullValue == null && (this.options.nullValue = 0), this.options.lazy == null && (this.options.lazy = !1), this.options.relativeTo) {
                    if (typeof this.options.relativeTo != "function")
                      throw new Error("relativeTo option must be a function");
                    this.relativeToGetter = d.relativeTo;
                  }
                }
                var f = o.prototype;
                return f.decode = function(h, d) {
                  var i = this, p = this.offsetType.decode(h, d);
                  if (p === this.options.nullValue && this.options.allowNull)
                    return null;
                  var y;
                  switch (this.options.type) {
                    case "local":
                      y = d._startOffset;
                      break;
                    case "immediate":
                      y = h.pos - this.offsetType.size();
                      break;
                    case "parent":
                      y = d.parent._startOffset;
                      break;
                    default:
                      for (var m = d; m.parent; )
                        m = m.parent;
                      y = m._startOffset || 0;
                  }
                  this.options.relativeTo && (y += this.relativeToGetter(d));
                  var e = p + y;
                  if (this.type != null) {
                    var x = null, S = function() {
                      if (x != null)
                        return x;
                      var O = h.pos;
                      return h.pos = e, x = i.type.decode(h, d), h.pos = O, x;
                    };
                    return this.options.lazy ? new s.PropertyDescriptor({
                      get: S
                    }) : S();
                  } else
                    return e;
                }, f.size = function(h, d) {
                  var i = d;
                  switch (this.options.type) {
                    case "local":
                    case "immediate":
                      break;
                    case "parent":
                      d = d.parent;
                      break;
                    default:
                      for (; d.parent; )
                        d = d.parent;
                  }
                  var p = this.type;
                  if (p == null) {
                    if (!(h instanceof a))
                      throw new Error("Must be a VoidPointer");
                    var y = h;
                    p = y.type, h = h.value;
                  }
                  return h && d && (d.pointerSize += p.size(h, i)), this.offsetType.size();
                }, f.encode = function(h, d, i) {
                  var p, y = i;
                  if (d == null) {
                    this.offsetType.encode(h, this.options.nullValue);
                    return;
                  }
                  switch (this.options.type) {
                    case "local":
                      p = i.startOffset;
                      break;
                    case "immediate":
                      p = h.pos + this.offsetType.size(d, y);
                      break;
                    case "parent":
                      i = i.parent, p = i.startOffset;
                      break;
                    default:
                      for (p = 0; i.parent; )
                        i = i.parent;
                  }
                  this.options.relativeTo && (p += this.relativeToGetter(y.val)), this.offsetType.encode(h, i.pointerOffset - p);
                  var m = this.type;
                  if (m == null) {
                    if (!(d instanceof a))
                      throw new Error("Must be a VoidPointer");
                    var e = d;
                    m = e.type, d = d.value;
                  }
                  return i.pointers.push({
                    type: m,
                    val: d,
                    parent: y
                  }), i.pointerOffset += m.size(d, y);
                }, o;
              }(), a = function(f, u) {
                this.type = f, this.value = u;
              };
              c.Pointer = r, c.VoidPointer = a;
            }
          ),
          /***/
          62211: (
            /***/
            function(l, c, t) {
              t(83382);
              var s = t(76959), r = /* @__PURE__ */ function() {
                function a(f, u) {
                  u === void 0 && (u = 1), this.type = f, this.count = u;
                }
                var o = a.prototype;
                return o.decode = function(u, h) {
                  u.pos += this.size(null, h);
                }, o.size = function(u, h) {
                  var d = s.resolveLength(this.count, null, h);
                  return this.type.size() * d;
                }, o.encode = function(u, h, d) {
                  return u.fill(0, this.size(h, d));
                }, a;
              }();
              l.exports = r;
            }
          ),
          /***/
          69046: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer, r = t(61002), a = r.Number, o = t(76959), f = /* @__PURE__ */ function() {
                function u(d, i) {
                  i === void 0 && (i = "ascii"), this.length = d, this.encoding = i;
                }
                var h = u.prototype;
                return h.decode = function(i, p) {
                  var y, m;
                  if (this.length != null)
                    y = o.resolveLength(this.length, i, p);
                  else {
                    var e;
                    for (e = i.buffer, y = i.length, m = i.pos; m < y && e[m] !== 0; )
                      ++m;
                    y = m - i.pos;
                  }
                  var x = this.encoding;
                  typeof x == "function" && (x = x.call(p, p) || "ascii");
                  var S = i.readString(y, x);
                  return this.length == null && i.pos < i.length && i.pos++, S;
                }, h.size = function(i, p) {
                  if (!i)
                    return o.resolveLength(this.length, null, p);
                  var y = this.encoding;
                  typeof y == "function" && (y = y.call(p != null ? p.val : void 0, p != null ? p.val : void 0) || "ascii"), y === "utf16be" && (y = "utf16le");
                  var m = s.byteLength(i, y);
                  return this.length instanceof a && (m += this.length.size()), this.length == null && m++, m;
                }, h.encode = function(i, p, y) {
                  var m = this.encoding;
                  if (typeof m == "function" && (m = m.call(y != null ? y.val : void 0, y != null ? y.val : void 0) || "ascii"), this.length instanceof a && this.length.encode(i, s.byteLength(p, m)), i.writeString(p, m), this.length == null)
                    return i.writeUInt8(0);
                }, u;
              }();
              l.exports = f;
            }
          ),
          /***/
          90433: (
            /***/
            function(l, c, t) {
              var s = t(76959), r = /* @__PURE__ */ function() {
                function a(f) {
                  f === void 0 && (f = {}), this.fields = f;
                }
                var o = a.prototype;
                return o.decode = function(u, h, d) {
                  d === void 0 && (d = 0);
                  var i = this._setup(u, h, d);
                  return this._parseFields(u, i, this.fields), this.process != null && this.process.call(i, u), i;
                }, o._setup = function(u, h, d) {
                  var i = {};
                  return Object.defineProperties(i, {
                    parent: {
                      value: h
                    },
                    _startOffset: {
                      value: u.pos
                    },
                    _currentOffset: {
                      value: 0,
                      writable: !0
                    },
                    _length: {
                      value: d
                    }
                  }), i;
                }, o._parseFields = function(u, h, d) {
                  for (var i in d) {
                    var p, y = d[i];
                    typeof y == "function" ? p = y.call(h, h) : p = y.decode(u, h), p !== void 0 && (p instanceof s.PropertyDescriptor ? Object.defineProperty(h, i, p) : h[i] = p), h._currentOffset = u.pos - h._startOffset;
                  }
                }, o.size = function(u, h, d) {
                  u == null && (u = {}), d == null && (d = !0);
                  var i = {
                    parent: h,
                    val: u,
                    pointerSize: 0
                  }, p = 0;
                  for (var y in this.fields) {
                    var m = this.fields[y];
                    m.size != null && (p += m.size(u[y], i));
                  }
                  return d && (p += i.pointerSize), p;
                }, o.encode = function(u, h, d) {
                  var i;
                  this.preEncode != null && this.preEncode.call(h, u);
                  var p = {
                    pointers: [],
                    startOffset: u.pos,
                    parent: d,
                    val: h,
                    pointerSize: 0
                  };
                  p.pointerOffset = u.pos + this.size(h, p, !1);
                  for (var y in this.fields)
                    i = this.fields[y], i.encode != null && i.encode(u, h[y], p);
                  for (var m = 0; m < p.pointers.length; ) {
                    var e = p.pointers[m++];
                    e.type.encode(u, e.val, e.parent);
                  }
                }, a;
              }();
              l.exports = r;
            }
          ),
          /***/
          37529: (
            /***/
            function(l, c, t) {
              t(10853);
              function s(u, h) {
                u.prototype = Object.create(h.prototype), u.prototype.constructor = u, r(u, h);
              }
              function r(u, h) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(i, p) {
                  return i.__proto__ = p, i;
                }, r(u, h);
              }
              var a = t(90433), o = function(h, d) {
                return d.reduce(function(i, p) {
                  return i && i[p];
                }, h);
              }, f = /* @__PURE__ */ function(u) {
                s(h, u);
                function h(i, p) {
                  var y;
                  return p === void 0 && (p = {}), y = u.call(this) || this, y.type = i, y.versions = p, typeof i == "string" && (y.versionPath = i.split(".")), y;
                }
                var d = h.prototype;
                return d.decode = function(p, y, m) {
                  m === void 0 && (m = 0);
                  var e = this._setup(p, y, m);
                  typeof this.type == "string" ? e.version = o(y, this.versionPath) : e.version = this.type.decode(p), this.versions.header && this._parseFields(p, e, this.versions.header);
                  var x = this.versions[e.version];
                  if (x == null)
                    throw new Error("Unknown version " + e.version);
                  return x instanceof h ? x.decode(p, y) : (this._parseFields(p, e, x), this.process != null && this.process.call(e, p), e);
                }, d.size = function(p, y, m) {
                  m === void 0 && (m = !0);
                  var e, x;
                  if (!p)
                    throw new Error("Not a fixed size");
                  var S = {
                    parent: y,
                    val: p,
                    pointerSize: 0
                  }, P = 0;
                  if (typeof this.type != "string" && (P += this.type.size(p.version, S)), this.versions.header)
                    for (e in this.versions.header)
                      x = this.versions.header[e], x.size != null && (P += x.size(p[e], S));
                  var O = this.versions[p.version];
                  if (O == null)
                    throw new Error("Unknown version " + p.version);
                  for (e in O)
                    x = O[e], x.size != null && (P += x.size(p[e], S));
                  return m && (P += S.pointerSize), P;
                }, d.encode = function(p, y, m) {
                  var e, x;
                  this.preEncode != null && this.preEncode.call(y, p);
                  var S = {
                    pointers: [],
                    startOffset: p.pos,
                    parent: m,
                    val: y,
                    pointerSize: 0
                  };
                  if (S.pointerOffset = p.pos + this.size(y, S, !1), typeof this.type != "string" && this.type.encode(p, y.version), this.versions.header)
                    for (e in this.versions.header)
                      x = this.versions.header[e], x.encode != null && x.encode(p, y[e], S);
                  var P = this.versions[y.version];
                  for (e in P)
                    x = P[e], x.encode != null && x.encode(p, y[e], S);
                  for (var O = 0; O < S.pointers.length; ) {
                    var T = S.pointers[O++];
                    T.type.encode(p, T.val, T.parent);
                  }
                }, h;
              }(a);
              l.exports = f;
            }
          ),
          /***/
          76959: (
            /***/
            function(l, c, t) {
              var s = t(61002), r = s.Number;
              c.resolveLength = function(o, f, u) {
                var h;
                if (typeof o == "number" ? h = o : typeof o == "function" ? h = o.call(u, u) : u && typeof o == "string" ? h = u[o] : f && o instanceof r && (h = o.decode(f)), isNaN(h))
                  throw new Error("Not a fixed size");
                return h;
              };
              var a = function(f) {
                f === void 0 && (f = {}), this.enumerable = !0, this.configurable = !0;
                for (var u in f) {
                  var h = f[u];
                  this[u] = h;
                }
              };
              c.PropertyDescriptor = a;
            }
          ),
          /***/
          43060: (
            /***/
            function(l, c, t) {
              /*!
               * The buffer module from node.js, for the browser.
               *
               * @author   Feross Aboukhadijeh <https://feross.org>
               * @license  MIT
               */
              t(26364), t(86632), t(10853), t(54883), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(36501), t(16543), t(33142), t(83382), t(18821), t(33290), t(55862), t(29897), t(39275), t(22321), t(18183), t(19985), t(80174), t(87191), t(42833), t(54994), t(35727);
              function s(lt, Y) {
                for (var j = 0; j < Y.length; j++) {
                  var wt = Y[j];
                  wt.enumerable = wt.enumerable || !1, wt.configurable = !0, "value" in wt && (wt.writable = !0), Object.defineProperty(lt, a(wt.key), wt);
                }
              }
              function r(lt, Y, j) {
                return Y && s(lt.prototype, Y), j && s(lt, j), Object.defineProperty(lt, "prototype", { writable: !1 }), lt;
              }
              function a(lt) {
                var Y = o(lt, "string");
                return typeof Y == "symbol" ? Y : String(Y);
              }
              function o(lt, Y) {
                if (typeof lt != "object" || !lt)
                  return lt;
                var j = lt[Symbol.toPrimitive];
                if (j !== void 0) {
                  var wt = j.call(lt, Y || "default");
                  if (typeof wt != "object")
                    return wt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (Y === "string" ? String : Number)(lt);
              }
              function f(lt) {
                if (lt === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return lt;
              }
              function u(lt, Y) {
                lt.prototype = Object.create(Y.prototype), lt.prototype.constructor = lt, h(lt, Y);
              }
              function h(lt, Y) {
                return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(wt, it) {
                  return wt.__proto__ = it, wt;
                }, h(lt, Y);
              }
              var d = t(5155), i = t(74525), p = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
              c.Buffer = x, c.SlowBuffer = N, c.INSPECT_MAX_BYTES = 50;
              var y = 2147483647;
              c.kMaxLength = y, x.TYPED_ARRAY_SUPPORT = m(), !x.TYPED_ARRAY_SUPPORT && typeof console != "undefined" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
              function m() {
                try {
                  var lt = new Uint8Array(1), Y = {
                    foo: function() {
                      return 42;
                    }
                  };
                  return Object.setPrototypeOf(Y, Uint8Array.prototype), Object.setPrototypeOf(lt, Y), lt.foo() === 42;
                } catch (j) {
                  return !1;
                }
              }
              Object.defineProperty(x.prototype, "parent", {
                enumerable: !0,
                get: function() {
                  if (x.isBuffer(this))
                    return this.buffer;
                }
              }), Object.defineProperty(x.prototype, "offset", {
                enumerable: !0,
                get: function() {
                  if (x.isBuffer(this))
                    return this.byteOffset;
                }
              });
              function e(lt) {
                if (lt > y)
                  throw new RangeError('The value "' + lt + '" is invalid for option "size"');
                var Y = new Uint8Array(lt);
                return Object.setPrototypeOf(Y, x.prototype), Y;
              }
              function x(lt, Y, j) {
                if (typeof lt == "number") {
                  if (typeof Y == "string")
                    throw new TypeError('The "string" argument must be of type string. Received type number');
                  return T(lt);
                }
                return S(lt, Y, j);
              }
              x.poolSize = 8192;
              function S(lt, Y, j) {
                if (typeof lt == "string")
                  return A(lt, Y);
                if (ArrayBuffer.isView(lt))
                  return D(lt);
                if (lt == null)
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof lt);
                if (we(lt, ArrayBuffer) || lt && we(lt.buffer, ArrayBuffer) || typeof SharedArrayBuffer != "undefined" && (we(lt, SharedArrayBuffer) || lt && we(lt.buffer, SharedArrayBuffer)))
                  return b(lt, Y, j);
                if (typeof lt == "number")
                  throw new TypeError('The "value" argument must not be of type number. Received type number');
                var wt = lt.valueOf && lt.valueOf();
                if (wt != null && wt !== lt)
                  return x.from(wt, Y, j);
                var it = R(lt);
                if (it)
                  return it;
                if (typeof Symbol != "undefined" && Symbol.toPrimitive != null && typeof lt[Symbol.toPrimitive] == "function")
                  return x.from(lt[Symbol.toPrimitive]("string"), Y, j);
                throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof lt);
              }
              x.from = function(lt, Y, j) {
                return S(lt, Y, j);
              }, Object.setPrototypeOf(x.prototype, Uint8Array.prototype), Object.setPrototypeOf(x, Uint8Array);
              function P(lt) {
                if (typeof lt != "number")
                  throw new TypeError('"size" argument must be of type number');
                if (lt < 0)
                  throw new RangeError('The value "' + lt + '" is invalid for option "size"');
              }
              function O(lt, Y, j) {
                return P(lt), lt <= 0 ? e(lt) : Y !== void 0 ? typeof j == "string" ? e(lt).fill(Y, j) : e(lt).fill(Y) : e(lt);
              }
              x.alloc = function(lt, Y, j) {
                return O(lt, Y, j);
              };
              function T(lt) {
                return P(lt), e(lt < 0 ? 0 : L(lt) | 0);
              }
              x.allocUnsafe = function(lt) {
                return T(lt);
              }, x.allocUnsafeSlow = function(lt) {
                return T(lt);
              };
              function A(lt, Y) {
                if ((typeof Y != "string" || Y === "") && (Y = "utf8"), !x.isEncoding(Y))
                  throw new TypeError("Unknown encoding: " + Y);
                var j = M(lt, Y) | 0, wt = e(j), it = wt.write(lt, Y);
                return it !== j && (wt = wt.slice(0, it)), wt;
              }
              function E(lt) {
                for (var Y = lt.length < 0 ? 0 : L(lt.length) | 0, j = e(Y), wt = 0; wt < Y; wt += 1)
                  j[wt] = lt[wt] & 255;
                return j;
              }
              function D(lt) {
                if (we(lt, Uint8Array)) {
                  var Y = new Uint8Array(lt);
                  return b(Y.buffer, Y.byteOffset, Y.byteLength);
                }
                return E(lt);
              }
              function b(lt, Y, j) {
                if (Y < 0 || lt.byteLength < Y)
                  throw new RangeError('"offset" is outside of buffer bounds');
                if (lt.byteLength < Y + (j || 0))
                  throw new RangeError('"length" is outside of buffer bounds');
                var wt;
                return Y === void 0 && j === void 0 ? wt = new Uint8Array(lt) : j === void 0 ? wt = new Uint8Array(lt, Y) : wt = new Uint8Array(lt, Y, j), Object.setPrototypeOf(wt, x.prototype), wt;
              }
              function R(lt) {
                if (x.isBuffer(lt)) {
                  var Y = L(lt.length) | 0, j = e(Y);
                  return j.length === 0 || lt.copy(j, 0, 0, Y), j;
                }
                if (lt.length !== void 0)
                  return typeof lt.length != "number" || Be(lt.length) ? e(0) : E(lt);
                if (lt.type === "Buffer" && Array.isArray(lt.data))
                  return E(lt.data);
              }
              function L(lt) {
                if (lt >= y)
                  throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + y.toString(16) + " bytes");
                return lt | 0;
              }
              function N(lt) {
                return +lt != lt && (lt = 0), x.alloc(+lt);
              }
              x.isBuffer = function(Y) {
                return Y != null && Y._isBuffer === !0 && Y !== x.prototype;
              }, x.compare = function(Y, j) {
                if (we(Y, Uint8Array) && (Y = x.from(Y, Y.offset, Y.byteLength)), we(j, Uint8Array) && (j = x.from(j, j.offset, j.byteLength)), !x.isBuffer(Y) || !x.isBuffer(j))
                  throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (Y === j)
                  return 0;
                for (var wt = Y.length, it = j.length, Ht = 0, te = Math.min(wt, it); Ht < te; ++Ht)
                  if (Y[Ht] !== j[Ht]) {
                    wt = Y[Ht], it = j[Ht];
                    break;
                  }
                return wt < it ? -1 : it < wt ? 1 : 0;
              }, x.isEncoding = function(Y) {
                switch (String(Y).toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "latin1":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return !0;
                  default:
                    return !1;
                }
              }, x.concat = function(Y, j) {
                if (!Array.isArray(Y))
                  throw new TypeError('"list" argument must be an Array of Buffers');
                if (Y.length === 0)
                  return x.alloc(0);
                var wt;
                if (j === void 0)
                  for (j = 0, wt = 0; wt < Y.length; ++wt)
                    j += Y[wt].length;
                var it = x.allocUnsafe(j), Ht = 0;
                for (wt = 0; wt < Y.length; ++wt) {
                  var te = Y[wt];
                  if (we(te, Uint8Array))
                    Ht + te.length > it.length ? (x.isBuffer(te) || (te = x.from(te)), te.copy(it, Ht)) : Uint8Array.prototype.set.call(it, te, Ht);
                  else if (x.isBuffer(te))
                    te.copy(it, Ht);
                  else
                    throw new TypeError('"list" argument must be an Array of Buffers');
                  Ht += te.length;
                }
                return it;
              };
              function M(lt, Y) {
                if (x.isBuffer(lt))
                  return lt.length;
                if (ArrayBuffer.isView(lt) || we(lt, ArrayBuffer))
                  return lt.byteLength;
                if (typeof lt != "string")
                  throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof lt);
                var j = lt.length, wt = arguments.length > 2 && arguments[2] === !0;
                if (!wt && j === 0)
                  return 0;
                for (var it = !1; ; )
                  switch (Y) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return j;
                    case "utf8":
                    case "utf-8":
                      return Se(lt).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return j * 2;
                    case "hex":
                      return j >>> 1;
                    case "base64":
                      return ce(lt).length;
                    default:
                      if (it)
                        return wt ? -1 : Se(lt).length;
                      Y = ("" + Y).toLowerCase(), it = !0;
                  }
              }
              x.byteLength = M;
              function K(lt, Y, j) {
                var wt = !1;
                if ((Y === void 0 || Y < 0) && (Y = 0), Y > this.length || ((j === void 0 || j > this.length) && (j = this.length), j <= 0) || (j >>>= 0, Y >>>= 0, j <= Y))
                  return "";
                for (lt || (lt = "utf8"); ; )
                  switch (lt) {
                    case "hex":
                      return G(this, Y, j);
                    case "utf8":
                    case "utf-8":
                      return Q(this, Y, j);
                    case "ascii":
                      return st(this, Y, j);
                    case "latin1":
                    case "binary":
                      return xt(this, Y, j);
                    case "base64":
                      return zt(this, Y, j);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Ft(this, Y, j);
                    default:
                      if (wt)
                        throw new TypeError("Unknown encoding: " + lt);
                      lt = (lt + "").toLowerCase(), wt = !0;
                  }
              }
              x.prototype._isBuffer = !0;
              function ct(lt, Y, j) {
                var wt = lt[Y];
                lt[Y] = lt[j], lt[j] = wt;
              }
              x.prototype.swap16 = function() {
                var Y = this.length;
                if (Y % 2 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var j = 0; j < Y; j += 2)
                  ct(this, j, j + 1);
                return this;
              }, x.prototype.swap32 = function() {
                var Y = this.length;
                if (Y % 4 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var j = 0; j < Y; j += 4)
                  ct(this, j, j + 3), ct(this, j + 1, j + 2);
                return this;
              }, x.prototype.swap64 = function() {
                var Y = this.length;
                if (Y % 8 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var j = 0; j < Y; j += 8)
                  ct(this, j, j + 7), ct(this, j + 1, j + 6), ct(this, j + 2, j + 5), ct(this, j + 3, j + 4);
                return this;
              }, x.prototype.toString = function() {
                var Y = this.length;
                return Y === 0 ? "" : arguments.length === 0 ? Q(this, 0, Y) : K.apply(this, arguments);
              }, x.prototype.toLocaleString = x.prototype.toString, x.prototype.equals = function(Y) {
                if (!x.isBuffer(Y))
                  throw new TypeError("Argument must be a Buffer");
                return this === Y ? !0 : x.compare(this, Y) === 0;
              }, x.prototype.inspect = function() {
                var Y = "", j = c.INSPECT_MAX_BYTES;
                return Y = this.toString("hex", 0, j).replace(/(.{2})/g, "$1 ").trim(), this.length > j && (Y += " ... "), "<Buffer " + Y + ">";
              }, p && (x.prototype[p] = x.prototype.inspect), x.prototype.compare = function(Y, j, wt, it, Ht) {
                if (we(Y, Uint8Array) && (Y = x.from(Y, Y.offset, Y.byteLength)), !x.isBuffer(Y))
                  throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Y);
                if (j === void 0 && (j = 0), wt === void 0 && (wt = Y ? Y.length : 0), it === void 0 && (it = 0), Ht === void 0 && (Ht = this.length), j < 0 || wt > Y.length || it < 0 || Ht > this.length)
                  throw new RangeError("out of range index");
                if (it >= Ht && j >= wt)
                  return 0;
                if (it >= Ht)
                  return -1;
                if (j >= wt)
                  return 1;
                if (j >>>= 0, wt >>>= 0, it >>>= 0, Ht >>>= 0, this === Y)
                  return 0;
                for (var te = Ht - it, _ = wt - j, Qt = Math.min(te, _), ee = this.slice(it, Ht), Et = Y.slice(j, wt), jt = 0; jt < Qt; ++jt)
                  if (ee[jt] !== Et[jt]) {
                    te = ee[jt], _ = Et[jt];
                    break;
                  }
                return te < _ ? -1 : _ < te ? 1 : 0;
              };
              function J(lt, Y, j, wt, it) {
                if (lt.length === 0)
                  return -1;
                if (typeof j == "string" ? (wt = j, j = 0) : j > 2147483647 ? j = 2147483647 : j < -2147483648 && (j = -2147483648), j = +j, Be(j) && (j = it ? 0 : lt.length - 1), j < 0 && (j = lt.length + j), j >= lt.length) {
                  if (it)
                    return -1;
                  j = lt.length - 1;
                } else if (j < 0)
                  if (it)
                    j = 0;
                  else
                    return -1;
                if (typeof Y == "string" && (Y = x.from(Y, wt)), x.isBuffer(Y))
                  return Y.length === 0 ? -1 : nt(lt, Y, j, wt, it);
                if (typeof Y == "number")
                  return Y = Y & 255, typeof Uint8Array.prototype.indexOf == "function" ? it ? Uint8Array.prototype.indexOf.call(lt, Y, j) : Uint8Array.prototype.lastIndexOf.call(lt, Y, j) : nt(lt, [Y], j, wt, it);
                throw new TypeError("val must be string, number or Buffer");
              }
              function nt(lt, Y, j, wt, it) {
                var Ht = 1, te = lt.length, _ = Y.length;
                if (wt !== void 0 && (wt = String(wt).toLowerCase(), wt === "ucs2" || wt === "ucs-2" || wt === "utf16le" || wt === "utf-16le")) {
                  if (lt.length < 2 || Y.length < 2)
                    return -1;
                  Ht = 2, te /= 2, _ /= 2, j /= 2;
                }
                function Qt(Ne, Oe) {
                  return Ht === 1 ? Ne[Oe] : Ne.readUInt16BE(Oe * Ht);
                }
                var ee;
                if (it) {
                  var Et = -1;
                  for (ee = j; ee < te; ee++)
                    if (Qt(lt, ee) === Qt(Y, Et === -1 ? 0 : ee - Et)) {
                      if (Et === -1 && (Et = ee), ee - Et + 1 === _)
                        return Et * Ht;
                    } else
                      Et !== -1 && (ee -= ee - Et), Et = -1;
                } else
                  for (j + _ > te && (j = te - _), ee = j; ee >= 0; ee--) {
                    for (var jt = !0, le = 0; le < _; le++)
                      if (Qt(lt, ee + le) !== Qt(Y, le)) {
                        jt = !1;
                        break;
                      }
                    if (jt)
                      return ee;
                  }
                return -1;
              }
              x.prototype.includes = function(Y, j, wt) {
                return this.indexOf(Y, j, wt) !== -1;
              }, x.prototype.indexOf = function(Y, j, wt) {
                return J(this, Y, j, wt, !0);
              }, x.prototype.lastIndexOf = function(Y, j, wt) {
                return J(this, Y, j, wt, !1);
              };
              function yt(lt, Y, j, wt) {
                j = Number(j) || 0;
                var it = lt.length - j;
                wt ? (wt = Number(wt), wt > it && (wt = it)) : wt = it;
                var Ht = Y.length;
                wt > Ht / 2 && (wt = Ht / 2);
                var te;
                for (te = 0; te < wt; ++te) {
                  var _ = parseInt(Y.substr(te * 2, 2), 16);
                  if (Be(_))
                    return te;
                  lt[j + te] = _;
                }
                return te;
              }
              function bt(lt, Y, j, wt) {
                return pe(Se(Y, lt.length - j), lt, j, wt);
              }
              function Tt(lt, Y, j, wt) {
                return pe(Wt(Y), lt, j, wt);
              }
              function It(lt, Y, j, wt) {
                return pe(ce(Y), lt, j, wt);
              }
              function Lt(lt, Y, j, wt) {
                return pe(_t(Y, lt.length - j), lt, j, wt);
              }
              x.prototype.write = function(Y, j, wt, it) {
                if (j === void 0)
                  it = "utf8", wt = this.length, j = 0;
                else if (wt === void 0 && typeof j == "string")
                  it = j, wt = this.length, j = 0;
                else if (isFinite(j))
                  j = j >>> 0, isFinite(wt) ? (wt = wt >>> 0, it === void 0 && (it = "utf8")) : (it = wt, wt = void 0);
                else
                  throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                var Ht = this.length - j;
                if ((wt === void 0 || wt > Ht) && (wt = Ht), Y.length > 0 && (wt < 0 || j < 0) || j > this.length)
                  throw new RangeError("Attempt to write outside buffer bounds");
                it || (it = "utf8");
                for (var te = !1; ; )
                  switch (it) {
                    case "hex":
                      return yt(this, Y, j, wt);
                    case "utf8":
                    case "utf-8":
                      return bt(this, Y, j, wt);
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return Tt(this, Y, j, wt);
                    case "base64":
                      return It(this, Y, j, wt);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Lt(this, Y, j, wt);
                    default:
                      if (te)
                        throw new TypeError("Unknown encoding: " + it);
                      it = ("" + it).toLowerCase(), te = !0;
                  }
              }, x.prototype.toJSON = function() {
                return {
                  type: "Buffer",
                  data: Array.prototype.slice.call(this._arr || this, 0)
                };
              };
              function zt(lt, Y, j) {
                return Y === 0 && j === lt.length ? d.fromByteArray(lt) : d.fromByteArray(lt.slice(Y, j));
              }
              function Q(lt, Y, j) {
                j = Math.min(lt.length, j);
                for (var wt = [], it = Y; it < j; ) {
                  var Ht = lt[it], te = null, _ = Ht > 239 ? 4 : Ht > 223 ? 3 : Ht > 191 ? 2 : 1;
                  if (it + _ <= j) {
                    var Qt = void 0, ee = void 0, Et = void 0, jt = void 0;
                    switch (_) {
                      case 1:
                        Ht < 128 && (te = Ht);
                        break;
                      case 2:
                        Qt = lt[it + 1], (Qt & 192) === 128 && (jt = (Ht & 31) << 6 | Qt & 63, jt > 127 && (te = jt));
                        break;
                      case 3:
                        Qt = lt[it + 1], ee = lt[it + 2], (Qt & 192) === 128 && (ee & 192) === 128 && (jt = (Ht & 15) << 12 | (Qt & 63) << 6 | ee & 63, jt > 2047 && (jt < 55296 || jt > 57343) && (te = jt));
                        break;
                      case 4:
                        Qt = lt[it + 1], ee = lt[it + 2], Et = lt[it + 3], (Qt & 192) === 128 && (ee & 192) === 128 && (Et & 192) === 128 && (jt = (Ht & 15) << 18 | (Qt & 63) << 12 | (ee & 63) << 6 | Et & 63, jt > 65535 && jt < 1114112 && (te = jt));
                    }
                  }
                  te === null ? (te = 65533, _ = 1) : te > 65535 && (te -= 65536, wt.push(te >>> 10 & 1023 | 55296), te = 56320 | te & 1023), wt.push(te), it += _;
                }
                return ht(wt);
              }
              var gt = 4096;
              function ht(lt) {
                var Y = lt.length;
                if (Y <= gt)
                  return String.fromCharCode.apply(String, lt);
                for (var j = "", wt = 0; wt < Y; )
                  j += String.fromCharCode.apply(String, lt.slice(wt, wt += gt));
                return j;
              }
              function st(lt, Y, j) {
                var wt = "";
                j = Math.min(lt.length, j);
                for (var it = Y; it < j; ++it)
                  wt += String.fromCharCode(lt[it] & 127);
                return wt;
              }
              function xt(lt, Y, j) {
                var wt = "";
                j = Math.min(lt.length, j);
                for (var it = Y; it < j; ++it)
                  wt += String.fromCharCode(lt[it]);
                return wt;
              }
              function G(lt, Y, j) {
                var wt = lt.length;
                (!Y || Y < 0) && (Y = 0), (!j || j < 0 || j > wt) && (j = wt);
                for (var it = "", Ht = Y; Ht < j; ++Ht)
                  it += Ie[lt[Ht]];
                return it;
              }
              function Ft(lt, Y, j) {
                for (var wt = lt.slice(Y, j), it = "", Ht = 0; Ht < wt.length - 1; Ht += 2)
                  it += String.fromCharCode(wt[Ht] + wt[Ht + 1] * 256);
                return it;
              }
              x.prototype.slice = function(Y, j) {
                var wt = this.length;
                Y = ~~Y, j = j === void 0 ? wt : ~~j, Y < 0 ? (Y += wt, Y < 0 && (Y = 0)) : Y > wt && (Y = wt), j < 0 ? (j += wt, j < 0 && (j = 0)) : j > wt && (j = wt), j < Y && (j = Y);
                var it = this.subarray(Y, j);
                return Object.setPrototypeOf(it, x.prototype), it;
              };
              function z(lt, Y, j) {
                if (lt % 1 !== 0 || lt < 0)
                  throw new RangeError("offset is not uint");
                if (lt + Y > j)
                  throw new RangeError("Trying to access beyond buffer length");
              }
              x.prototype.readUintLE = x.prototype.readUIntLE = function(Y, j, wt) {
                Y = Y >>> 0, j = j >>> 0, wt || z(Y, j, this.length);
                for (var it = this[Y], Ht = 1, te = 0; ++te < j && (Ht *= 256); )
                  it += this[Y + te] * Ht;
                return it;
              }, x.prototype.readUintBE = x.prototype.readUIntBE = function(Y, j, wt) {
                Y = Y >>> 0, j = j >>> 0, wt || z(Y, j, this.length);
                for (var it = this[Y + --j], Ht = 1; j > 0 && (Ht *= 256); )
                  it += this[Y + --j] * Ht;
                return it;
              }, x.prototype.readUint8 = x.prototype.readUInt8 = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 1, this.length), this[Y];
              }, x.prototype.readUint16LE = x.prototype.readUInt16LE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 2, this.length), this[Y] | this[Y + 1] << 8;
              }, x.prototype.readUint16BE = x.prototype.readUInt16BE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 2, this.length), this[Y] << 8 | this[Y + 1];
              }, x.prototype.readUint32LE = x.prototype.readUInt32LE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), (this[Y] | this[Y + 1] << 8 | this[Y + 2] << 16) + this[Y + 3] * 16777216;
              }, x.prototype.readUint32BE = x.prototype.readUInt32BE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), this[Y] * 16777216 + (this[Y + 1] << 16 | this[Y + 2] << 8 | this[Y + 3]);
              }, x.prototype.readBigUInt64LE = Dt(function(Y) {
                Y = Y >>> 0, ie(Y, "offset");
                var j = this[Y], wt = this[Y + 7];
                (j === void 0 || wt === void 0) && Ae(Y, this.length - 8);
                var it = j + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 24), Ht = this[++Y] + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + wt * Math.pow(2, 24);
                return BigInt(it) + (BigInt(Ht) << BigInt(32));
              }), x.prototype.readBigUInt64BE = Dt(function(Y) {
                Y = Y >>> 0, ie(Y, "offset");
                var j = this[Y], wt = this[Y + 7];
                (j === void 0 || wt === void 0) && Ae(Y, this.length - 8);
                var it = j * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + this[++Y], Ht = this[++Y] * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + wt;
                return (BigInt(it) << BigInt(32)) + BigInt(Ht);
              }), x.prototype.readIntLE = function(Y, j, wt) {
                Y = Y >>> 0, j = j >>> 0, wt || z(Y, j, this.length);
                for (var it = this[Y], Ht = 1, te = 0; ++te < j && (Ht *= 256); )
                  it += this[Y + te] * Ht;
                return Ht *= 128, it >= Ht && (it -= Math.pow(2, 8 * j)), it;
              }, x.prototype.readIntBE = function(Y, j, wt) {
                Y = Y >>> 0, j = j >>> 0, wt || z(Y, j, this.length);
                for (var it = j, Ht = 1, te = this[Y + --it]; it > 0 && (Ht *= 256); )
                  te += this[Y + --it] * Ht;
                return Ht *= 128, te >= Ht && (te -= Math.pow(2, 8 * j)), te;
              }, x.prototype.readInt8 = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 1, this.length), this[Y] & 128 ? (255 - this[Y] + 1) * -1 : this[Y];
              }, x.prototype.readInt16LE = function(Y, j) {
                Y = Y >>> 0, j || z(Y, 2, this.length);
                var wt = this[Y] | this[Y + 1] << 8;
                return wt & 32768 ? wt | 4294901760 : wt;
              }, x.prototype.readInt16BE = function(Y, j) {
                Y = Y >>> 0, j || z(Y, 2, this.length);
                var wt = this[Y + 1] | this[Y] << 8;
                return wt & 32768 ? wt | 4294901760 : wt;
              }, x.prototype.readInt32LE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), this[Y] | this[Y + 1] << 8 | this[Y + 2] << 16 | this[Y + 3] << 24;
              }, x.prototype.readInt32BE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), this[Y] << 24 | this[Y + 1] << 16 | this[Y + 2] << 8 | this[Y + 3];
              }, x.prototype.readBigInt64LE = Dt(function(Y) {
                Y = Y >>> 0, ie(Y, "offset");
                var j = this[Y], wt = this[Y + 7];
                (j === void 0 || wt === void 0) && Ae(Y, this.length - 8);
                var it = this[Y + 4] + this[Y + 5] * Math.pow(2, 8) + this[Y + 6] * Math.pow(2, 16) + (wt << 24);
                return (BigInt(it) << BigInt(32)) + BigInt(j + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 24));
              }), x.prototype.readBigInt64BE = Dt(function(Y) {
                Y = Y >>> 0, ie(Y, "offset");
                var j = this[Y], wt = this[Y + 7];
                (j === void 0 || wt === void 0) && Ae(Y, this.length - 8);
                var it = (j << 24) + // Overflow
                this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + this[++Y];
                return (BigInt(it) << BigInt(32)) + BigInt(this[++Y] * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + wt);
              }), x.prototype.readFloatLE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), i.read(this, Y, !0, 23, 4);
              }, x.prototype.readFloatBE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 4, this.length), i.read(this, Y, !1, 23, 4);
              }, x.prototype.readDoubleLE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 8, this.length), i.read(this, Y, !0, 52, 8);
              }, x.prototype.readDoubleBE = function(Y, j) {
                return Y = Y >>> 0, j || z(Y, 8, this.length), i.read(this, Y, !1, 52, 8);
              };
              function C(lt, Y, j, wt, it, Ht) {
                if (!x.isBuffer(lt))
                  throw new TypeError('"buffer" argument must be a Buffer instance');
                if (Y > it || Y < Ht)
                  throw new RangeError('"value" argument is out of bounds');
                if (j + wt > lt.length)
                  throw new RangeError("Index out of range");
              }
              x.prototype.writeUintLE = x.prototype.writeUIntLE = function(Y, j, wt, it) {
                if (Y = +Y, j = j >>> 0, wt = wt >>> 0, !it) {
                  var Ht = Math.pow(2, 8 * wt) - 1;
                  C(this, Y, j, wt, Ht, 0);
                }
                var te = 1, _ = 0;
                for (this[j] = Y & 255; ++_ < wt && (te *= 256); )
                  this[j + _] = Y / te & 255;
                return j + wt;
              }, x.prototype.writeUintBE = x.prototype.writeUIntBE = function(Y, j, wt, it) {
                if (Y = +Y, j = j >>> 0, wt = wt >>> 0, !it) {
                  var Ht = Math.pow(2, 8 * wt) - 1;
                  C(this, Y, j, wt, Ht, 0);
                }
                var te = wt - 1, _ = 1;
                for (this[j + te] = Y & 255; --te >= 0 && (_ *= 256); )
                  this[j + te] = Y / _ & 255;
                return j + wt;
              }, x.prototype.writeUint8 = x.prototype.writeUInt8 = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 1, 255, 0), this[j] = Y & 255, j + 1;
              }, x.prototype.writeUint16LE = x.prototype.writeUInt16LE = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 2, 65535, 0), this[j] = Y & 255, this[j + 1] = Y >>> 8, j + 2;
              }, x.prototype.writeUint16BE = x.prototype.writeUInt16BE = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 2, 65535, 0), this[j] = Y >>> 8, this[j + 1] = Y & 255, j + 2;
              }, x.prototype.writeUint32LE = x.prototype.writeUInt32LE = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 4, 4294967295, 0), this[j + 3] = Y >>> 24, this[j + 2] = Y >>> 16, this[j + 1] = Y >>> 8, this[j] = Y & 255, j + 4;
              }, x.prototype.writeUint32BE = x.prototype.writeUInt32BE = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 4, 4294967295, 0), this[j] = Y >>> 24, this[j + 1] = Y >>> 16, this[j + 2] = Y >>> 8, this[j + 3] = Y & 255, j + 4;
              };
              function k(lt, Y, j, wt, it) {
                Ot(Y, wt, it, lt, j, 7);
                var Ht = Number(Y & BigInt(4294967295));
                lt[j++] = Ht, Ht = Ht >> 8, lt[j++] = Ht, Ht = Ht >> 8, lt[j++] = Ht, Ht = Ht >> 8, lt[j++] = Ht;
                var te = Number(Y >> BigInt(32) & BigInt(4294967295));
                return lt[j++] = te, te = te >> 8, lt[j++] = te, te = te >> 8, lt[j++] = te, te = te >> 8, lt[j++] = te, j;
              }
              function V(lt, Y, j, wt, it) {
                Ot(Y, wt, it, lt, j, 7);
                var Ht = Number(Y & BigInt(4294967295));
                lt[j + 7] = Ht, Ht = Ht >> 8, lt[j + 6] = Ht, Ht = Ht >> 8, lt[j + 5] = Ht, Ht = Ht >> 8, lt[j + 4] = Ht;
                var te = Number(Y >> BigInt(32) & BigInt(4294967295));
                return lt[j + 3] = te, te = te >> 8, lt[j + 2] = te, te = te >> 8, lt[j + 1] = te, te = te >> 8, lt[j] = te, j + 8;
              }
              x.prototype.writeBigUInt64LE = Dt(function(Y, j) {
                return j === void 0 && (j = 0), k(this, Y, j, BigInt(0), BigInt("0xffffffffffffffff"));
              }), x.prototype.writeBigUInt64BE = Dt(function(Y, j) {
                return j === void 0 && (j = 0), V(this, Y, j, BigInt(0), BigInt("0xffffffffffffffff"));
              }), x.prototype.writeIntLE = function(Y, j, wt, it) {
                if (Y = +Y, j = j >>> 0, !it) {
                  var Ht = Math.pow(2, 8 * wt - 1);
                  C(this, Y, j, wt, Ht - 1, -Ht);
                }
                var te = 0, _ = 1, Qt = 0;
                for (this[j] = Y & 255; ++te < wt && (_ *= 256); )
                  Y < 0 && Qt === 0 && this[j + te - 1] !== 0 && (Qt = 1), this[j + te] = (Y / _ >> 0) - Qt & 255;
                return j + wt;
              }, x.prototype.writeIntBE = function(Y, j, wt, it) {
                if (Y = +Y, j = j >>> 0, !it) {
                  var Ht = Math.pow(2, 8 * wt - 1);
                  C(this, Y, j, wt, Ht - 1, -Ht);
                }
                var te = wt - 1, _ = 1, Qt = 0;
                for (this[j + te] = Y & 255; --te >= 0 && (_ *= 256); )
                  Y < 0 && Qt === 0 && this[j + te + 1] !== 0 && (Qt = 1), this[j + te] = (Y / _ >> 0) - Qt & 255;
                return j + wt;
              }, x.prototype.writeInt8 = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 1, 127, -128), Y < 0 && (Y = 255 + Y + 1), this[j] = Y & 255, j + 1;
              }, x.prototype.writeInt16LE = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 2, 32767, -32768), this[j] = Y & 255, this[j + 1] = Y >>> 8, j + 2;
              }, x.prototype.writeInt16BE = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 2, 32767, -32768), this[j] = Y >>> 8, this[j + 1] = Y & 255, j + 2;
              }, x.prototype.writeInt32LE = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 4, 2147483647, -2147483648), this[j] = Y & 255, this[j + 1] = Y >>> 8, this[j + 2] = Y >>> 16, this[j + 3] = Y >>> 24, j + 4;
              }, x.prototype.writeInt32BE = function(Y, j, wt) {
                return Y = +Y, j = j >>> 0, wt || C(this, Y, j, 4, 2147483647, -2147483648), Y < 0 && (Y = 4294967295 + Y + 1), this[j] = Y >>> 24, this[j + 1] = Y >>> 16, this[j + 2] = Y >>> 8, this[j + 3] = Y & 255, j + 4;
              }, x.prototype.writeBigInt64LE = Dt(function(Y, j) {
                return j === void 0 && (j = 0), k(this, Y, j, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
              }), x.prototype.writeBigInt64BE = Dt(function(Y, j) {
                return j === void 0 && (j = 0), V(this, Y, j, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
              });
              function ot(lt, Y, j, wt, it, Ht) {
                if (j + wt > lt.length)
                  throw new RangeError("Index out of range");
                if (j < 0)
                  throw new RangeError("Index out of range");
              }
              function et(lt, Y, j, wt, it) {
                return Y = +Y, j = j >>> 0, it || ot(lt, Y, j, 4), i.write(lt, Y, j, wt, 23, 4), j + 4;
              }
              x.prototype.writeFloatLE = function(Y, j, wt) {
                return et(this, Y, j, !0, wt);
              }, x.prototype.writeFloatBE = function(Y, j, wt) {
                return et(this, Y, j, !1, wt);
              };
              function tt(lt, Y, j, wt, it) {
                return Y = +Y, j = j >>> 0, it || ot(lt, Y, j, 8), i.write(lt, Y, j, wt, 52, 8), j + 8;
              }
              x.prototype.writeDoubleLE = function(Y, j, wt) {
                return tt(this, Y, j, !0, wt);
              }, x.prototype.writeDoubleBE = function(Y, j, wt) {
                return tt(this, Y, j, !1, wt);
              }, x.prototype.copy = function(Y, j, wt, it) {
                if (!x.isBuffer(Y))
                  throw new TypeError("argument should be a Buffer");
                if (wt || (wt = 0), !it && it !== 0 && (it = this.length), j >= Y.length && (j = Y.length), j || (j = 0), it > 0 && it < wt && (it = wt), it === wt || Y.length === 0 || this.length === 0)
                  return 0;
                if (j < 0)
                  throw new RangeError("targetStart out of bounds");
                if (wt < 0 || wt >= this.length)
                  throw new RangeError("Index out of range");
                if (it < 0)
                  throw new RangeError("sourceEnd out of bounds");
                it > this.length && (it = this.length), Y.length - j < it - wt && (it = Y.length - j + wt);
                var Ht = it - wt;
                return this === Y && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(j, wt, it) : Uint8Array.prototype.set.call(Y, this.subarray(wt, it), j), Ht;
              }, x.prototype.fill = function(Y, j, wt, it) {
                if (typeof Y == "string") {
                  if (typeof j == "string" ? (it = j, j = 0, wt = this.length) : typeof wt == "string" && (it = wt, wt = this.length), it !== void 0 && typeof it != "string")
                    throw new TypeError("encoding must be a string");
                  if (typeof it == "string" && !x.isEncoding(it))
                    throw new TypeError("Unknown encoding: " + it);
                  if (Y.length === 1) {
                    var Ht = Y.charCodeAt(0);
                    (it === "utf8" && Ht < 128 || it === "latin1") && (Y = Ht);
                  }
                } else
                  typeof Y == "number" ? Y = Y & 255 : typeof Y == "boolean" && (Y = Number(Y));
                if (j < 0 || this.length < j || this.length < wt)
                  throw new RangeError("Out of range index");
                if (wt <= j)
                  return this;
                j = j >>> 0, wt = wt === void 0 ? this.length : wt >>> 0, Y || (Y = 0);
                var te;
                if (typeof Y == "number")
                  for (te = j; te < wt; ++te)
                    this[te] = Y;
                else {
                  var _ = x.isBuffer(Y) ? Y : x.from(Y, it), Qt = _.length;
                  if (Qt === 0)
                    throw new TypeError('The value "' + Y + '" is invalid for argument "value"');
                  for (te = 0; te < wt - j; ++te)
                    this[te + j] = _[te % Qt];
                }
                return this;
              };
              var At = {};
              function Nt(lt, Y, j) {
                At[lt] = /* @__PURE__ */ function(wt) {
                  u(it, wt);
                  function it() {
                    var te;
                    return te = wt.call(this) || this, Object.defineProperty(f(te), "message", {
                      value: Y.apply(f(te), arguments),
                      writable: !0,
                      configurable: !0
                    }), te.name = te.name + " [" + lt + "]", te.stack, delete te.name, te;
                  }
                  var Ht = it.prototype;
                  return Ht.toString = function() {
                    return this.name + " [" + lt + "]: " + this.message;
                  }, r(it, [{
                    key: "code",
                    get: function() {
                      return lt;
                    },
                    set: function(_) {
                      Object.defineProperty(this, "code", {
                        configurable: !0,
                        enumerable: !0,
                        value: _,
                        writable: !0
                      });
                    }
                  }]), it;
                }(j);
              }
              Nt("ERR_BUFFER_OUT_OF_BOUNDS", function(lt) {
                return lt ? lt + " is outside of buffer bounds" : "Attempt to access memory outside buffer bounds";
              }, RangeError), Nt("ERR_INVALID_ARG_TYPE", function(lt, Y) {
                return 'The "' + lt + '" argument must be of type number. Received type ' + typeof Y;
              }, TypeError), Nt("ERR_OUT_OF_RANGE", function(lt, Y, j) {
                var wt = 'The value of "' + lt + '" is out of range.', it = j;
                return Number.isInteger(j) && Math.abs(j) > Math.pow(2, 32) ? it = Kt(String(j)) : typeof j == "bigint" && (it = String(j), (j > Math.pow(BigInt(2), BigInt(32)) || j < -Math.pow(BigInt(2), BigInt(32))) && (it = Kt(it)), it += "n"), wt += " It must be " + Y + ". Received " + it, wt;
              }, RangeError);
              function Kt(lt) {
                for (var Y = "", j = lt.length, wt = lt[0] === "-" ? 1 : 0; j >= wt + 4; j -= 3)
                  Y = "_" + lt.slice(j - 3, j) + Y;
                return "" + lt.slice(0, j) + Y;
              }
              function Vt(lt, Y, j) {
                ie(Y, "offset"), (lt[Y] === void 0 || lt[Y + j] === void 0) && Ae(Y, lt.length - (j + 1));
              }
              function Ot(lt, Y, j, wt, it, Ht) {
                if (lt > j || lt < Y) {
                  var te = typeof Y == "bigint" ? "n" : "", _;
                  throw Ht > 3 ? Y === 0 || Y === BigInt(0) ? _ = ">= 0" + te + " and < 2" + te + " ** " + (Ht + 1) * 8 + te : _ = ">= -(2" + te + " ** " + ((Ht + 1) * 8 - 1) + te + ") and < 2 ** " + ("" + ((Ht + 1) * 8 - 1) + te) : _ = ">= " + Y + te + " and <= " + j + te, new At.ERR_OUT_OF_RANGE("value", _, lt);
                }
                Vt(wt, it, Ht);
              }
              function ie(lt, Y) {
                if (typeof lt != "number")
                  throw new At.ERR_INVALID_ARG_TYPE(Y, "number", lt);
              }
              function Ae(lt, Y, j) {
                throw Math.floor(lt) !== lt ? (ie(lt, j), new At.ERR_OUT_OF_RANGE(j || "offset", "an integer", lt)) : Y < 0 ? new At.ERR_BUFFER_OUT_OF_BOUNDS() : new At.ERR_OUT_OF_RANGE(j || "offset", ">= " + (j ? 1 : 0) + " and <= " + Y, lt);
              }
              var be = /[^+/0-9A-Za-z-_]/g;
              function de(lt) {
                if (lt = lt.split("=")[0], lt = lt.trim().replace(be, ""), lt.length < 2)
                  return "";
                for (; lt.length % 4 !== 0; )
                  lt = lt + "=";
                return lt;
              }
              function Se(lt, Y) {
                Y = Y || 1 / 0;
                for (var j, wt = lt.length, it = null, Ht = [], te = 0; te < wt; ++te) {
                  if (j = lt.charCodeAt(te), j > 55295 && j < 57344) {
                    if (!it) {
                      if (j > 56319) {
                        (Y -= 3) > -1 && Ht.push(239, 191, 189);
                        continue;
                      } else if (te + 1 === wt) {
                        (Y -= 3) > -1 && Ht.push(239, 191, 189);
                        continue;
                      }
                      it = j;
                      continue;
                    }
                    if (j < 56320) {
                      (Y -= 3) > -1 && Ht.push(239, 191, 189), it = j;
                      continue;
                    }
                    j = (it - 55296 << 10 | j - 56320) + 65536;
                  } else
                    it && (Y -= 3) > -1 && Ht.push(239, 191, 189);
                  if (it = null, j < 128) {
                    if ((Y -= 1) < 0)
                      break;
                    Ht.push(j);
                  } else if (j < 2048) {
                    if ((Y -= 2) < 0)
                      break;
                    Ht.push(j >> 6 | 192, j & 63 | 128);
                  } else if (j < 65536) {
                    if ((Y -= 3) < 0)
                      break;
                    Ht.push(j >> 12 | 224, j >> 6 & 63 | 128, j & 63 | 128);
                  } else if (j < 1114112) {
                    if ((Y -= 4) < 0)
                      break;
                    Ht.push(j >> 18 | 240, j >> 12 & 63 | 128, j >> 6 & 63 | 128, j & 63 | 128);
                  } else
                    throw new Error("Invalid code point");
                }
                return Ht;
              }
              function Wt(lt) {
                for (var Y = [], j = 0; j < lt.length; ++j)
                  Y.push(lt.charCodeAt(j) & 255);
                return Y;
              }
              function _t(lt, Y) {
                for (var j, wt, it, Ht = [], te = 0; te < lt.length && !((Y -= 2) < 0); ++te)
                  j = lt.charCodeAt(te), wt = j >> 8, it = j % 256, Ht.push(it), Ht.push(wt);
                return Ht;
              }
              function ce(lt) {
                return d.toByteArray(de(lt));
              }
              function pe(lt, Y, j, wt) {
                var it;
                for (it = 0; it < wt && !(it + j >= Y.length || it >= lt.length); ++it)
                  Y[it + j] = lt[it];
                return it;
              }
              function we(lt, Y) {
                return lt instanceof Y || lt != null && lt.constructor != null && lt.constructor.name != null && lt.constructor.name === Y.name;
              }
              function Be(lt) {
                return lt !== lt;
              }
              var Ie = function() {
                for (var lt = "0123456789abcdef", Y = new Array(256), j = 0; j < 16; ++j)
                  for (var wt = j * 16, it = 0; it < 16; ++it)
                    Y[wt + it] = lt[j] + lt[it];
                return Y;
              }();
              function Dt(lt) {
                return typeof BigInt == "undefined" ? ue : lt;
              }
              function ue() {
                throw new Error("BigInt not supported");
              }
            }
          ),
          /***/
          20724: (
            /***/
            function(l, c, t) {
              t(36501), t(10853), l.exports = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined";
            }
          ),
          /***/
          32590: (
            /***/
            function(l, c, t) {
              var s = t(20724), r = t(7493), a = t(98363), o = t(75277), f = t(52786), u = t(24792), h = t(36994), d = t(28768), i = t(45899), p = t(35974), y = t(86385).f, m = t(32010), e = t(12654), x = t(22412), S = t(52280), P = t(34524), O = a.Int8Array, T = O && O.prototype, A = a.Uint8ClampedArray, E = A && A.prototype, D = O && e(O), b = T && e(T), R = Object.prototype, L = a.TypeError, N = S("toStringTag"), M = P("TYPED_ARRAY_TAG"), K = P("TYPED_ARRAY_CONSTRUCTOR"), ct = s && !!x && h(a.opera) !== "Opera", J = !1, nt, yt, bt, Tt = {
                Int8Array: 1,
                Uint8Array: 1,
                Uint8ClampedArray: 1,
                Int16Array: 2,
                Uint16Array: 2,
                Int32Array: 4,
                Uint32Array: 4,
                Float32Array: 4,
                Float64Array: 8
              }, It = {
                BigInt64Array: 8,
                BigUint64Array: 8
              }, Lt = function(G) {
                if (!f(G))
                  return !1;
                var Ft = h(G);
                return Ft === "DataView" || u(Tt, Ft) || u(It, Ft);
              }, zt = function(G) {
                if (!f(G))
                  return !1;
                var Ft = h(G);
                return u(Tt, Ft) || u(It, Ft);
              }, Q = function(G) {
                if (zt(G))
                  return G;
                throw L("Target is not a typed array");
              }, gt = function(G) {
                if (o(G) && (!x || m(D, G)))
                  return G;
                throw L(d(G) + " is not a typed array constructor");
              }, ht = function(G, Ft, z) {
                if (r) {
                  if (z)
                    for (var C in Tt) {
                      var k = a[C];
                      if (k && u(k.prototype, G))
                        try {
                          delete k.prototype[G];
                        } catch (V) {
                        }
                    }
                  (!b[G] || z) && p(b, G, z ? Ft : ct && T[G] || Ft);
                }
              }, st = function(G, Ft, z) {
                var C, k;
                if (r) {
                  if (x) {
                    if (z) {
                      for (C in Tt)
                        if (k = a[C], k && u(k, G))
                          try {
                            delete k[G];
                          } catch (V) {
                          }
                    }
                    if (!D[G] || z)
                      try {
                        return p(D, G, z ? Ft : ct && D[G] || Ft);
                      } catch (V) {
                      }
                    else
                      return;
                  }
                  for (C in Tt)
                    k = a[C], k && (!k[G] || z) && p(k, G, Ft);
                }
              };
              for (nt in Tt)
                yt = a[nt], bt = yt && yt.prototype, bt ? i(bt, K, yt) : ct = !1;
              for (nt in It)
                yt = a[nt], bt = yt && yt.prototype, bt && i(bt, K, yt);
              if ((!ct || !o(D) || D === Function.prototype) && (D = function() {
                throw L("Incorrect invocation");
              }, ct))
                for (nt in Tt)
                  a[nt] && x(a[nt], D);
              if ((!ct || !b || b === R) && (b = D.prototype, ct))
                for (nt in Tt)
                  a[nt] && x(a[nt].prototype, b);
              if (ct && e(E) !== b && x(E, b), r && !u(b, N)) {
                J = !0, y(b, N, {
                  get: function() {
                    return f(this) ? this[M] : void 0;
                  }
                });
                for (nt in Tt)
                  a[nt] && i(a[nt], M, nt);
              }
              l.exports = {
                NATIVE_ARRAY_BUFFER_VIEWS: ct,
                TYPED_ARRAY_CONSTRUCTOR: K,
                TYPED_ARRAY_TAG: J && M,
                aTypedArray: Q,
                aTypedArrayConstructor: gt,
                exportTypedArrayMethod: ht,
                exportTypedArrayStaticMethod: st,
                isView: Lt,
                isTypedArray: zt,
                TypedArray: D,
                TypedArrayPrototype: b
              };
            }
          ),
          /***/
          74510: (
            /***/
            function(l, c, t) {
              t(54994);
              var s = t(98363), r = t(88697), a = t(7493), o = t(20724), f = t(55316), u = t(45899), h = t(7592), d = t(79044), i = t(9519), p = t(14229), y = t(35108), m = t(27302), e = t(45489), x = t(12654), S = t(22412), P = t(87994).f, O = t(86385).f, T = t(55522), A = t(15629), E = t(60878), D = t(20821), b = f.PROPER, R = f.CONFIGURABLE, L = D.get, N = D.set, M = "ArrayBuffer", K = "DataView", ct = "prototype", J = "Wrong length", nt = "Wrong index", yt = s[M], bt = yt, Tt = bt && bt[ct], It = s[K], Lt = It && It[ct], zt = Object.prototype, Q = s.Array, gt = s.RangeError, ht = r(T), st = r([].reverse), xt = e.pack, G = e.unpack, Ft = function(de) {
                return [de & 255];
              }, z = function(de) {
                return [de & 255, de >> 8 & 255];
              }, C = function(de) {
                return [de & 255, de >> 8 & 255, de >> 16 & 255, de >> 24 & 255];
              }, k = function(de) {
                return de[3] << 24 | de[2] << 16 | de[1] << 8 | de[0];
              }, V = function(de) {
                return xt(de, 23, 4);
              }, ot = function(de) {
                return xt(de, 52, 8);
              }, et = function(de, Se) {
                O(de[ct], Se, {
                  get: function() {
                    return L(this)[Se];
                  }
                });
              }, tt = function(de, Se, Wt, _t) {
                var ce = m(Wt), pe = L(de);
                if (ce + Se > pe.byteLength)
                  throw gt(nt);
                var we = L(pe.buffer).bytes, Be = ce + pe.byteOffset, Ie = A(we, Be, Be + Se);
                return _t ? Ie : st(Ie);
              }, At = function(de, Se, Wt, _t, ce, pe) {
                var we = m(Wt), Be = L(de);
                if (we + Se > Be.byteLength)
                  throw gt(nt);
                for (var Ie = L(Be.buffer).bytes, Dt = we + Be.byteOffset, ue = _t(+ce), lt = 0; lt < Se; lt++)
                  Ie[Dt + lt] = ue[pe ? lt : Se - lt - 1];
              };
              if (!o)
                bt = function(de) {
                  i(this, Tt);
                  var Se = m(de);
                  N(this, {
                    bytes: ht(Q(Se), 0),
                    byteLength: Se
                  }), a || (this.byteLength = Se);
                }, Tt = bt[ct], It = function(de, Se, Wt) {
                  i(this, Lt), i(de, Tt);
                  var _t = L(de).byteLength, ce = p(Se);
                  if (ce < 0 || ce > _t)
                    throw gt("Wrong offset");
                  if (Wt = Wt === void 0 ? _t - ce : y(Wt), ce + Wt > _t)
                    throw gt(J);
                  N(this, {
                    buffer: de,
                    byteLength: Wt,
                    byteOffset: ce
                  }), a || (this.buffer = de, this.byteLength = Wt, this.byteOffset = ce);
                }, Lt = It[ct], a && (et(bt, "byteLength"), et(It, "buffer"), et(It, "byteLength"), et(It, "byteOffset")), h(Lt, {
                  getInt8: function(de) {
                    return tt(this, 1, de)[0] << 24 >> 24;
                  },
                  getUint8: function(de) {
                    return tt(this, 1, de)[0];
                  },
                  getInt16: function(de) {
                    var Se = tt(this, 2, de, arguments.length > 1 ? arguments[1] : void 0);
                    return (Se[1] << 8 | Se[0]) << 16 >> 16;
                  },
                  getUint16: function(de) {
                    var Se = tt(this, 2, de, arguments.length > 1 ? arguments[1] : void 0);
                    return Se[1] << 8 | Se[0];
                  },
                  getInt32: function(de) {
                    return k(tt(this, 4, de, arguments.length > 1 ? arguments[1] : void 0));
                  },
                  getUint32: function(de) {
                    return k(tt(this, 4, de, arguments.length > 1 ? arguments[1] : void 0)) >>> 0;
                  },
                  getFloat32: function(de) {
                    return G(tt(this, 4, de, arguments.length > 1 ? arguments[1] : void 0), 23);
                  },
                  getFloat64: function(de) {
                    return G(tt(this, 8, de, arguments.length > 1 ? arguments[1] : void 0), 52);
                  },
                  setInt8: function(de, Se) {
                    At(this, 1, de, Ft, Se);
                  },
                  setUint8: function(de, Se) {
                    At(this, 1, de, Ft, Se);
                  },
                  setInt16: function(de, Se) {
                    At(this, 2, de, z, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setUint16: function(de, Se) {
                    At(this, 2, de, z, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setInt32: function(de, Se) {
                    At(this, 4, de, C, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setUint32: function(de, Se) {
                    At(this, 4, de, C, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setFloat32: function(de, Se) {
                    At(this, 4, de, V, Se, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setFloat64: function(de, Se) {
                    At(this, 8, de, ot, Se, arguments.length > 2 ? arguments[2] : void 0);
                  }
                });
              else {
                var Nt = b && yt.name !== M;
                if (!d(function() {
                  yt(1);
                }) || !d(function() {
                  new yt(-1);
                }) || d(function() {
                  return new yt(), new yt(1.5), new yt(NaN), Nt && !R;
                })) {
                  bt = function(de) {
                    return i(this, Tt), new yt(m(de));
                  }, bt[ct] = Tt;
                  for (var Kt = P(yt), Vt = 0, Ot; Kt.length > Vt; )
                    (Ot = Kt[Vt++]) in bt || u(bt, Ot, yt[Ot]);
                  Tt.constructor = bt;
                } else
                  Nt && R && u(yt, "name", M);
                S && x(Lt) !== zt && S(Lt, zt);
                var ie = new It(new bt(2)), Ae = r(Lt.setInt8);
                ie.setInt8(0, 2147483648), ie.setInt8(1, 2147483649), (ie.getInt8(0) || !ie.getInt8(1)) && h(Lt, {
                  setInt8: function(de, Se) {
                    Ae(this, de, Se << 24 >> 24);
                  },
                  setUint8: function(de, Se) {
                    Ae(this, de, Se << 24 >> 24);
                  }
                }, {
                  unsafe: !0
                });
              }
              E(bt, M), E(It, K), l.exports = {
                ArrayBuffer: bt,
                DataView: It
              };
            }
          ),
          /***/
          36501: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(74510), o = t(57323), f = "ArrayBuffer", u = a[f], h = r[f];
              s({
                global: !0,
                forced: h !== u
              }, {
                ArrayBuffer: u
              }), o(f);
            }
          ),
          /***/
          22449: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.BlockCipher, f = r.algo, u = [], h = [], d = [], i = [], p = [], y = [], m = [], e = [], x = [], S = [];
                  (function() {
                    for (var T = [], A = 0; A < 256; A++)
                      A < 128 ? T[A] = A << 1 : T[A] = A << 1 ^ 283;
                    for (var E = 0, D = 0, A = 0; A < 256; A++) {
                      var b = D ^ D << 1 ^ D << 2 ^ D << 3 ^ D << 4;
                      b = b >>> 8 ^ b & 255 ^ 99, u[E] = b, h[b] = E;
                      var R = T[E], L = T[R], N = T[L], M = T[b] * 257 ^ b * 16843008;
                      d[E] = M << 24 | M >>> 8, i[E] = M << 16 | M >>> 16, p[E] = M << 8 | M >>> 24, y[E] = M;
                      var M = N * 16843009 ^ L * 65537 ^ R * 257 ^ E * 16843008;
                      m[b] = M << 24 | M >>> 8, e[b] = M << 16 | M >>> 16, x[b] = M << 8 | M >>> 24, S[b] = M, E ? (E = R ^ T[T[T[N ^ R]]], D ^= T[T[D]]) : E = D = 1;
                    }
                  })();
                  var P = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], O = f.AES = o.extend({
                    _doReset: function() {
                      var A;
                      if (!(this._nRounds && this._keyPriorReset === this._key)) {
                        for (var E = this._keyPriorReset = this._key, D = E.words, b = E.sigBytes / 4, R = this._nRounds = b + 6, L = (R + 1) * 4, N = this._keySchedule = [], M = 0; M < L; M++)
                          M < b ? N[M] = D[M] : (A = N[M - 1], M % b ? b > 6 && M % b == 4 && (A = u[A >>> 24] << 24 | u[A >>> 16 & 255] << 16 | u[A >>> 8 & 255] << 8 | u[A & 255]) : (A = A << 8 | A >>> 24, A = u[A >>> 24] << 24 | u[A >>> 16 & 255] << 16 | u[A >>> 8 & 255] << 8 | u[A & 255], A ^= P[M / b | 0] << 24), N[M] = N[M - b] ^ A);
                        for (var K = this._invKeySchedule = [], ct = 0; ct < L; ct++) {
                          var M = L - ct;
                          if (ct % 4)
                            var A = N[M];
                          else
                            var A = N[M - 4];
                          ct < 4 || M <= 4 ? K[ct] = A : K[ct] = m[u[A >>> 24]] ^ e[u[A >>> 16 & 255]] ^ x[u[A >>> 8 & 255]] ^ S[u[A & 255]];
                        }
                      }
                    },
                    encryptBlock: function(A, E) {
                      this._doCryptBlock(A, E, this._keySchedule, d, i, p, y, u);
                    },
                    decryptBlock: function(A, E) {
                      var D = A[E + 1];
                      A[E + 1] = A[E + 3], A[E + 3] = D, this._doCryptBlock(A, E, this._invKeySchedule, m, e, x, S, h);
                      var D = A[E + 1];
                      A[E + 1] = A[E + 3], A[E + 3] = D;
                    },
                    _doCryptBlock: function(A, E, D, b, R, L, N, M) {
                      for (var K = this._nRounds, ct = A[E] ^ D[0], J = A[E + 1] ^ D[1], nt = A[E + 2] ^ D[2], yt = A[E + 3] ^ D[3], bt = 4, Tt = 1; Tt < K; Tt++) {
                        var It = b[ct >>> 24] ^ R[J >>> 16 & 255] ^ L[nt >>> 8 & 255] ^ N[yt & 255] ^ D[bt++], Lt = b[J >>> 24] ^ R[nt >>> 16 & 255] ^ L[yt >>> 8 & 255] ^ N[ct & 255] ^ D[bt++], zt = b[nt >>> 24] ^ R[yt >>> 16 & 255] ^ L[ct >>> 8 & 255] ^ N[J & 255] ^ D[bt++], Q = b[yt >>> 24] ^ R[ct >>> 16 & 255] ^ L[J >>> 8 & 255] ^ N[nt & 255] ^ D[bt++];
                        ct = It, J = Lt, nt = zt, yt = Q;
                      }
                      var It = (M[ct >>> 24] << 24 | M[J >>> 16 & 255] << 16 | M[nt >>> 8 & 255] << 8 | M[yt & 255]) ^ D[bt++], Lt = (M[J >>> 24] << 24 | M[nt >>> 16 & 255] << 16 | M[yt >>> 8 & 255] << 8 | M[ct & 255]) ^ D[bt++], zt = (M[nt >>> 24] << 24 | M[yt >>> 16 & 255] << 16 | M[ct >>> 8 & 255] << 8 | M[J & 255]) ^ D[bt++], Q = (M[yt >>> 24] << 24 | M[ct >>> 16 & 255] << 16 | M[J >>> 8 & 255] << 8 | M[nt & 255]) ^ D[bt++];
                      A[E] = It, A[E + 1] = Lt, A[E + 2] = zt, A[E + 3] = Q;
                    },
                    keySize: 256 / 32
                  });
                  r.AES = o._createHelper(O);
                }(), s.AES;
              });
            }
          ),
          /***/
          67646: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.BlockCipher, f = r.algo, u = 16, h = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731], d = [[3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, 4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, 1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946], [1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, 1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055], [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, 1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504], [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]], i = {
                    pbox: [],
                    sbox: []
                  };
                  function p(S, P) {
                    var O = P >> 24 & 255, T = P >> 16 & 255, A = P >> 8 & 255, E = P & 255, D = S.sbox[0][O] + S.sbox[1][T];
                    return D = D ^ S.sbox[2][A], D = D + S.sbox[3][E], D;
                  }
                  function y(S, P, O) {
                    for (var T = P, A = O, E, D = 0; D < u; ++D)
                      T = T ^ S.pbox[D], A = p(S, T) ^ A, E = T, T = A, A = E;
                    return E = T, T = A, A = E, A = A ^ S.pbox[u], T = T ^ S.pbox[u + 1], {
                      left: T,
                      right: A
                    };
                  }
                  function m(S, P, O) {
                    for (var T = P, A = O, E, D = u + 1; D > 1; --D)
                      T = T ^ S.pbox[D], A = p(S, T) ^ A, E = T, T = A, A = E;
                    return E = T, T = A, A = E, A = A ^ S.pbox[1], T = T ^ S.pbox[0], {
                      left: T,
                      right: A
                    };
                  }
                  function e(S, P, O) {
                    for (var T = 0; T < 4; T++) {
                      S.sbox[T] = [];
                      for (var A = 0; A < 256; A++)
                        S.sbox[T][A] = d[T][A];
                    }
                    for (var E = 0, D = 0; D < u + 2; D++)
                      S.pbox[D] = h[D] ^ P[E], E++, E >= O && (E = 0);
                    for (var b = 0, R = 0, L = 0, N = 0; N < u + 2; N += 2)
                      L = y(S, b, R), b = L.left, R = L.right, S.pbox[N] = b, S.pbox[N + 1] = R;
                    for (var M = 0; M < 4; M++)
                      for (var K = 0; K < 256; K += 2)
                        L = y(S, b, R), b = L.left, R = L.right, S.sbox[M][K] = b, S.sbox[M][K + 1] = R;
                    return !0;
                  }
                  var x = f.Blowfish = o.extend({
                    _doReset: function() {
                      if (this._keyPriorReset !== this._key) {
                        var P = this._keyPriorReset = this._key, O = P.words, T = P.sigBytes / 4;
                        e(i, O, T);
                      }
                    },
                    encryptBlock: function(P, O) {
                      var T = y(i, P[O], P[O + 1]);
                      P[O] = T.left, P[O + 1] = T.right;
                    },
                    decryptBlock: function(P, O) {
                      var T = m(i, P[O], P[O + 1]);
                      P[O] = T.left, P[O + 1] = T.right;
                    },
                    blockSize: 64 / 32,
                    keySize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  r.Blowfish = o._createHelper(x);
                }(), s.Blowfish;
              });
            }
          ),
          /***/
          52810: (
            /***/
            function(l, c, t) {
              t(18821), t(55862), t(10853), t(33290), t(45550), function(s, r, a) {
                l.exports = r(t(53264), t(95194));
              }(void 0, function(s) {
                s.lib.Cipher || function(r) {
                  var a = s, o = a.lib, f = o.Base, u = o.WordArray, h = o.BufferedBlockAlgorithm, d = a.enc;
                  d.Utf8;
                  var i = d.Base64, p = a.algo, y = p.EvpKDF, m = o.Cipher = h.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {WordArray} iv The IV to use for this operation.
                     */
                    cfg: f.extend(),
                    /**
                     * Creates this cipher in encryption mode.
                     *
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {Cipher} A cipher instance.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
                     */
                    createEncryptor: function(M, K) {
                      return this.create(this._ENC_XFORM_MODE, M, K);
                    },
                    /**
                     * Creates this cipher in decryption mode.
                     *
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {Cipher} A cipher instance.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
                     */
                    createDecryptor: function(M, K) {
                      return this.create(this._DEC_XFORM_MODE, M, K);
                    },
                    /**
                     * Initializes a newly created cipher.
                     *
                     * @param {number} xformMode Either the encryption or decryption transormation mode constant.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
                     */
                    init: function(M, K, ct) {
                      this.cfg = this.cfg.extend(ct), this._xformMode = M, this._key = K, this.reset();
                    },
                    /**
                     * Resets this cipher to its initial state.
                     *
                     * @example
                     *
                     *     cipher.reset();
                     */
                    reset: function() {
                      h.reset.call(this), this._doReset();
                    },
                    /**
                     * Adds data to be encrypted or decrypted.
                     *
                     * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
                     *
                     * @return {WordArray} The data after processing.
                     *
                     * @example
                     *
                     *     var encrypted = cipher.process('data');
                     *     var encrypted = cipher.process(wordArray);
                     */
                    process: function(M) {
                      return this._append(M), this._process();
                    },
                    /**
                     * Finalizes the encryption or decryption process.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
                     *
                     * @return {WordArray} The data after final processing.
                     *
                     * @example
                     *
                     *     var encrypted = cipher.finalize();
                     *     var encrypted = cipher.finalize('data');
                     *     var encrypted = cipher.finalize(wordArray);
                     */
                    finalize: function(M) {
                      M && this._append(M);
                      var K = this._doFinalize();
                      return K;
                    },
                    keySize: 128 / 32,
                    ivSize: 128 / 32,
                    _ENC_XFORM_MODE: 1,
                    _DEC_XFORM_MODE: 2,
                    /**
                     * Creates shortcut functions to a cipher's object interface.
                     *
                     * @param {Cipher} cipher The cipher to create a helper for.
                     *
                     * @return {Object} An object with encrypt and decrypt shortcut functions.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
                     */
                    _createHelper: function() {
                      function N(M) {
                        return typeof M == "string" ? L : D;
                      }
                      return function(M) {
                        return {
                          encrypt: function(ct, J, nt) {
                            return N(J).encrypt(M, ct, J, nt);
                          },
                          decrypt: function(ct, J, nt) {
                            return N(J).decrypt(M, ct, J, nt);
                          }
                        };
                      };
                    }()
                  });
                  o.StreamCipher = m.extend({
                    _doFinalize: function() {
                      var M = this._process(!0);
                      return M;
                    },
                    blockSize: 1
                  });
                  var e = a.mode = {}, x = o.BlockCipherMode = f.extend({
                    /**
                     * Creates this mode for encryption.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
                     */
                    createEncryptor: function(M, K) {
                      return this.Encryptor.create(M, K);
                    },
                    /**
                     * Creates this mode for decryption.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
                     */
                    createDecryptor: function(M, K) {
                      return this.Decryptor.create(M, K);
                    },
                    /**
                     * Initializes a newly created mode.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
                     */
                    init: function(M, K) {
                      this._cipher = M, this._iv = K;
                    }
                  }), S = e.CBC = function() {
                    var N = x.extend();
                    N.Encryptor = N.extend({
                      /**
                       * Processes the data block at offset.
                       *
                       * @param {Array} words The data words to operate on.
                       * @param {number} offset The offset where the block starts.
                       *
                       * @example
                       *
                       *     mode.processBlock(data.words, offset);
                       */
                      processBlock: function(ct, J) {
                        var nt = this._cipher, yt = nt.blockSize;
                        M.call(this, ct, J, yt), nt.encryptBlock(ct, J), this._prevBlock = ct.slice(J, J + yt);
                      }
                    }), N.Decryptor = N.extend({
                      /**
                       * Processes the data block at offset.
                       *
                       * @param {Array} words The data words to operate on.
                       * @param {number} offset The offset where the block starts.
                       *
                       * @example
                       *
                       *     mode.processBlock(data.words, offset);
                       */
                      processBlock: function(ct, J) {
                        var nt = this._cipher, yt = nt.blockSize, bt = ct.slice(J, J + yt);
                        nt.decryptBlock(ct, J), M.call(this, ct, J, yt), this._prevBlock = bt;
                      }
                    });
                    function M(K, ct, J) {
                      var nt, yt = this._iv;
                      yt ? (nt = yt, this._iv = r) : nt = this._prevBlock;
                      for (var bt = 0; bt < J; bt++)
                        K[ct + bt] ^= nt[bt];
                    }
                    return N;
                  }(), P = a.pad = {}, O = P.Pkcs7 = {
                    /**
                     * Pads data using the algorithm defined in PKCS #5/7.
                     *
                     * @param {WordArray} data The data to pad.
                     * @param {number} blockSize The multiple that the data should be padded to.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
                     */
                    pad: function(M, K) {
                      for (var ct = K * 4, J = ct - M.sigBytes % ct, nt = J << 24 | J << 16 | J << 8 | J, yt = [], bt = 0; bt < J; bt += 4)
                        yt.push(nt);
                      var Tt = u.create(yt, J);
                      M.concat(Tt);
                    },
                    /**
                     * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
                     *
                     * @param {WordArray} data The data to unpad.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     CryptoJS.pad.Pkcs7.unpad(wordArray);
                     */
                    unpad: function(M) {
                      var K = M.words[M.sigBytes - 1 >>> 2] & 255;
                      M.sigBytes -= K;
                    }
                  };
                  o.BlockCipher = m.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {Mode} mode The block mode to use. Default: CBC
                     * @property {Padding} padding The padding strategy to use. Default: Pkcs7
                     */
                    cfg: m.cfg.extend({
                      mode: S,
                      padding: O
                    }),
                    reset: function() {
                      var M;
                      m.reset.call(this);
                      var K = this.cfg, ct = K.iv, J = K.mode;
                      this._xformMode == this._ENC_XFORM_MODE ? M = J.createEncryptor : (M = J.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == M ? this._mode.init(this, ct && ct.words) : (this._mode = M.call(J, this, ct && ct.words), this._mode.__creator = M);
                    },
                    _doProcessBlock: function(M, K) {
                      this._mode.processBlock(M, K);
                    },
                    _doFinalize: function() {
                      var M, K = this.cfg.padding;
                      return this._xformMode == this._ENC_XFORM_MODE ? (K.pad(this._data, this.blockSize), M = this._process(!0)) : (M = this._process(!0), K.unpad(M)), M;
                    },
                    blockSize: 4
                  });
                  var T = o.CipherParams = f.extend({
                    /**
                     * Initializes a newly created cipher params object.
                     *
                     * @param {Object} cipherParams An object with any of the possible cipher parameters.
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.lib.CipherParams.create({
                     *         ciphertext: ciphertextWordArray,
                     *         key: keyWordArray,
                     *         iv: ivWordArray,
                     *         salt: saltWordArray,
                     *         algorithm: CryptoJS.algo.AES,
                     *         mode: CryptoJS.mode.CBC,
                     *         padding: CryptoJS.pad.PKCS7,
                     *         blockSize: 4,
                     *         formatter: CryptoJS.format.OpenSSL
                     *     });
                     */
                    init: function(M) {
                      this.mixIn(M);
                    },
                    /**
                     * Converts this cipher params object to a string.
                     *
                     * @param {Format} formatter (Optional) The formatting strategy to use.
                     *
                     * @return {string} The stringified cipher params.
                     *
                     * @throws Error If neither the formatter nor the default formatter is set.
                     *
                     * @example
                     *
                     *     var string = cipherParams + '';
                     *     var string = cipherParams.toString();
                     *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
                     */
                    toString: function(M) {
                      return (M || this.formatter).stringify(this);
                    }
                  }), A = a.format = {}, E = A.OpenSSL = {
                    /**
                     * Converts a cipher params object to an OpenSSL-compatible string.
                     *
                     * @param {CipherParams} cipherParams The cipher params object.
                     *
                     * @return {string} The OpenSSL-compatible string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
                     */
                    stringify: function(M) {
                      var K, ct = M.ciphertext, J = M.salt;
                      return J ? K = u.create([1398893684, 1701076831]).concat(J).concat(ct) : K = ct, K.toString(i);
                    },
                    /**
                     * Converts an OpenSSL-compatible string to a cipher params object.
                     *
                     * @param {string} openSSLStr The OpenSSL-compatible string.
                     *
                     * @return {CipherParams} The cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
                     */
                    parse: function(M) {
                      var K, ct = i.parse(M), J = ct.words;
                      return J[0] == 1398893684 && J[1] == 1701076831 && (K = u.create(J.slice(2, 4)), J.splice(0, 4), ct.sigBytes -= 16), T.create({
                        ciphertext: ct,
                        salt: K
                      });
                    }
                  }, D = o.SerializableCipher = f.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
                     */
                    cfg: f.extend({
                      format: E
                    }),
                    /**
                     * Encrypts a message.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {WordArray|string} message The message to encrypt.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {CipherParams} A cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     */
                    encrypt: function(M, K, ct, J) {
                      J = this.cfg.extend(J);
                      var nt = M.createEncryptor(ct, J), yt = nt.finalize(K), bt = nt.cfg;
                      return T.create({
                        ciphertext: yt,
                        key: ct,
                        iv: bt.iv,
                        algorithm: M,
                        mode: bt.mode,
                        padding: bt.padding,
                        blockSize: M.blockSize,
                        formatter: J.format
                      });
                    },
                    /**
                     * Decrypts serialized ciphertext.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {WordArray} The plaintext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     */
                    decrypt: function(M, K, ct, J) {
                      J = this.cfg.extend(J), K = this._parse(K, J.format);
                      var nt = M.createDecryptor(ct, J).finalize(K.ciphertext);
                      return nt;
                    },
                    /**
                     * Converts serialized ciphertext to CipherParams,
                     * else assumed CipherParams already and returns ciphertext unchanged.
                     *
                     * @param {CipherParams|string} ciphertext The ciphertext.
                     * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
                     *
                     * @return {CipherParams} The unserialized ciphertext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
                     */
                    _parse: function(M, K) {
                      return typeof M == "string" ? K.parse(M, this) : M;
                    }
                  }), b = a.kdf = {}, R = b.OpenSSL = {
                    /**
                     * Derives a key and IV from a password.
                     *
                     * @param {string} password The password to derive from.
                     * @param {number} keySize The size in words of the key to generate.
                     * @param {number} ivSize The size in words of the IV to generate.
                     * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
                     *
                     * @return {CipherParams} A cipher params object with the key, IV, and salt.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
                     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
                     */
                    execute: function(M, K, ct, J, nt) {
                      if (J || (J = u.random(64 / 8)), nt)
                        var yt = y.create({
                          keySize: K + ct,
                          hasher: nt
                        }).compute(M, J);
                      else
                        var yt = y.create({
                          keySize: K + ct
                        }).compute(M, J);
                      var bt = u.create(yt.words.slice(K), ct * 4);
                      return yt.sigBytes = K * 4, T.create({
                        key: yt,
                        iv: bt,
                        salt: J
                      });
                    }
                  }, L = o.PasswordBasedCipher = D.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
                     */
                    cfg: D.cfg.extend({
                      kdf: R
                    }),
                    /**
                     * Encrypts a message using a password.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {WordArray|string} message The message to encrypt.
                     * @param {string} password The password.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {CipherParams} A cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
                     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
                     */
                    encrypt: function(M, K, ct, J) {
                      J = this.cfg.extend(J);
                      var nt = J.kdf.execute(ct, M.keySize, M.ivSize, J.salt, J.hasher);
                      J.iv = nt.iv;
                      var yt = D.encrypt.call(this, M, K, nt.key, J);
                      return yt.mixIn(nt), yt;
                    },
                    /**
                     * Decrypts serialized ciphertext using a password.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
                     * @param {string} password The password.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {WordArray} The plaintext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
                     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
                     */
                    decrypt: function(M, K, ct, J) {
                      J = this.cfg.extend(J), K = this._parse(K, J.format);
                      var nt = J.kdf.execute(ct, M.keySize, M.ivSize, K.salt, J.hasher);
                      J.iv = nt.iv;
                      var yt = D.decrypt.call(this, M, K, nt.key, J);
                      return yt;
                    }
                  });
                }();
              });
            }
          ),
          /***/
          53264: (
            /***/
            function(l, c, t) {
              t(4116), t(54883), t(10853), t(35779), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(33290), t(18821), t(85005), t(55862), t(45550), function(s, r) {
                l.exports = r();
              }(void 0, function() {
                var s = s || function(r, a) {
                  var o;
                  if (typeof window != "undefined" && window.crypto && (o = window.crypto), typeof self != "undefined" && self.crypto && (o = self.crypto), typeof globalThis != "undefined" && globalThis.crypto && (o = globalThis.crypto), !o && typeof window != "undefined" && window.msCrypto && (o = window.msCrypto), !o && typeof t.g != "undefined" && t.g.crypto && (o = t.g.crypto), !o)
                    try {
                      o = t(42480);
                    } catch (O) {
                    }
                  var f = function() {
                    if (o) {
                      if (typeof o.getRandomValues == "function")
                        try {
                          return o.getRandomValues(new Uint32Array(1))[0];
                        } catch (T) {
                        }
                      if (typeof o.randomBytes == "function")
                        try {
                          return o.randomBytes(4).readInt32LE();
                        } catch (T) {
                        }
                    }
                    throw new Error("Native crypto module could not be used to get secure random number.");
                  }, u = Object.create || function() {
                    function O() {
                    }
                    return function(T) {
                      var A;
                      return O.prototype = T, A = new O(), O.prototype = null, A;
                    };
                  }(), h = {}, d = h.lib = {}, i = d.Base = function() {
                    return {
                      /**
                       * Creates a new object that inherits from this object.
                       *
                       * @param {Object} overrides Properties to copy into the new object.
                       *
                       * @return {Object} The new object.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var MyType = CryptoJS.lib.Base.extend({
                       *         field: 'value',
                       *
                       *         method: function () {
                       *         }
                       *     });
                       */
                      extend: function(T) {
                        var A = u(this);
                        return T && A.mixIn(T), (!A.hasOwnProperty("init") || this.init === A.init) && (A.init = function() {
                          A.$super.init.apply(this, arguments);
                        }), A.init.prototype = A, A.$super = this, A;
                      },
                      /**
                       * Extends this object and runs the init method.
                       * Arguments to create() will be passed to init().
                       *
                       * @return {Object} The new object.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var instance = MyType.create();
                       */
                      create: function() {
                        var T = this.extend();
                        return T.init.apply(T, arguments), T;
                      },
                      /**
                       * Initializes a newly created object.
                       * Override this method to add some logic when your objects are created.
                       *
                       * @example
                       *
                       *     var MyType = CryptoJS.lib.Base.extend({
                       *         init: function () {
                       *             // ...
                       *         }
                       *     });
                       */
                      init: function() {
                      },
                      /**
                       * Copies properties into this object.
                       *
                       * @param {Object} properties The properties to mix in.
                       *
                       * @example
                       *
                       *     MyType.mixIn({
                       *         field: 'value'
                       *     });
                       */
                      mixIn: function(T) {
                        for (var A in T)
                          T.hasOwnProperty(A) && (this[A] = T[A]);
                        T.hasOwnProperty("toString") && (this.toString = T.toString);
                      },
                      /**
                       * Creates a copy of this object.
                       *
                       * @return {Object} The clone.
                       *
                       * @example
                       *
                       *     var clone = instance.clone();
                       */
                      clone: function() {
                        return this.init.prototype.extend(this);
                      }
                    };
                  }(), p = d.WordArray = i.extend({
                    /**
                     * Initializes a newly created word array.
                     *
                     * @param {Array} words (Optional) An array of 32-bit words.
                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.lib.WordArray.create();
                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
                     */
                    init: function(T, A) {
                      T = this.words = T || [], A != a ? this.sigBytes = A : this.sigBytes = T.length * 4;
                    },
                    /**
                     * Converts this word array to a string.
                     *
                     * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
                     *
                     * @return {string} The stringified word array.
                     *
                     * @example
                     *
                     *     var string = wordArray + '';
                     *     var string = wordArray.toString();
                     *     var string = wordArray.toString(CryptoJS.enc.Utf8);
                     */
                    toString: function(T) {
                      return (T || m).stringify(this);
                    },
                    /**
                     * Concatenates a word array to this word array.
                     *
                     * @param {WordArray} wordArray The word array to append.
                     *
                     * @return {WordArray} This word array.
                     *
                     * @example
                     *
                     *     wordArray1.concat(wordArray2);
                     */
                    concat: function(T) {
                      var A = this.words, E = T.words, D = this.sigBytes, b = T.sigBytes;
                      if (this.clamp(), D % 4)
                        for (var R = 0; R < b; R++) {
                          var L = E[R >>> 2] >>> 24 - R % 4 * 8 & 255;
                          A[D + R >>> 2] |= L << 24 - (D + R) % 4 * 8;
                        }
                      else
                        for (var N = 0; N < b; N += 4)
                          A[D + N >>> 2] = E[N >>> 2];
                      return this.sigBytes += b, this;
                    },
                    /**
                     * Removes insignificant bits.
                     *
                     * @example
                     *
                     *     wordArray.clamp();
                     */
                    clamp: function() {
                      var T = this.words, A = this.sigBytes;
                      T[A >>> 2] &= 4294967295 << 32 - A % 4 * 8, T.length = r.ceil(A / 4);
                    },
                    /**
                     * Creates a copy of this word array.
                     *
                     * @return {WordArray} The clone.
                     *
                     * @example
                     *
                     *     var clone = wordArray.clone();
                     */
                    clone: function() {
                      var T = i.clone.call(this);
                      return T.words = this.words.slice(0), T;
                    },
                    /**
                     * Creates a word array filled with random bytes.
                     *
                     * @param {number} nBytes The number of random bytes to generate.
                     *
                     * @return {WordArray} The random word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.lib.WordArray.random(16);
                     */
                    random: function(T) {
                      for (var A = [], E = 0; E < T; E += 4)
                        A.push(f());
                      return new p.init(A, T);
                    }
                  }), y = h.enc = {}, m = y.Hex = {
                    /**
                     * Converts a word array to a hex string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The hex string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
                     */
                    stringify: function(T) {
                      for (var A = T.words, E = T.sigBytes, D = [], b = 0; b < E; b++) {
                        var R = A[b >>> 2] >>> 24 - b % 4 * 8 & 255;
                        D.push((R >>> 4).toString(16)), D.push((R & 15).toString(16));
                      }
                      return D.join("");
                    },
                    /**
                     * Converts a hex string to a word array.
                     *
                     * @param {string} hexStr The hex string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
                     */
                    parse: function(T) {
                      for (var A = T.length, E = [], D = 0; D < A; D += 2)
                        E[D >>> 3] |= parseInt(T.substr(D, 2), 16) << 24 - D % 8 * 4;
                      return new p.init(E, A / 2);
                    }
                  }, e = y.Latin1 = {
                    /**
                     * Converts a word array to a Latin1 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The Latin1 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
                     */
                    stringify: function(T) {
                      for (var A = T.words, E = T.sigBytes, D = [], b = 0; b < E; b++) {
                        var R = A[b >>> 2] >>> 24 - b % 4 * 8 & 255;
                        D.push(String.fromCharCode(R));
                      }
                      return D.join("");
                    },
                    /**
                     * Converts a Latin1 string to a word array.
                     *
                     * @param {string} latin1Str The Latin1 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
                     */
                    parse: function(T) {
                      for (var A = T.length, E = [], D = 0; D < A; D++)
                        E[D >>> 2] |= (T.charCodeAt(D) & 255) << 24 - D % 4 * 8;
                      return new p.init(E, A);
                    }
                  }, x = y.Utf8 = {
                    /**
                     * Converts a word array to a UTF-8 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-8 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
                     */
                    stringify: function(T) {
                      try {
                        return decodeURIComponent(escape(e.stringify(T)));
                      } catch (A) {
                        throw new Error("Malformed UTF-8 data");
                      }
                    },
                    /**
                     * Converts a UTF-8 string to a word array.
                     *
                     * @param {string} utf8Str The UTF-8 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
                     */
                    parse: function(T) {
                      return e.parse(unescape(encodeURIComponent(T)));
                    }
                  }, S = d.BufferedBlockAlgorithm = i.extend({
                    /**
                     * Resets this block algorithm's data buffer to its initial state.
                     *
                     * @example
                     *
                     *     bufferedBlockAlgorithm.reset();
                     */
                    reset: function() {
                      this._data = new p.init(), this._nDataBytes = 0;
                    },
                    /**
                     * Adds new data to this block algorithm's buffer.
                     *
                     * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
                     *
                     * @example
                     *
                     *     bufferedBlockAlgorithm._append('data');
                     *     bufferedBlockAlgorithm._append(wordArray);
                     */
                    _append: function(T) {
                      typeof T == "string" && (T = x.parse(T)), this._data.concat(T), this._nDataBytes += T.sigBytes;
                    },
                    /**
                     * Processes available data blocks.
                     *
                     * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
                     *
                     * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
                     *
                     * @return {WordArray} The processed data.
                     *
                     * @example
                     *
                     *     var processedData = bufferedBlockAlgorithm._process();
                     *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
                     */
                    _process: function(T) {
                      var A, E = this._data, D = E.words, b = E.sigBytes, R = this.blockSize, L = R * 4, N = b / L;
                      T ? N = r.ceil(N) : N = r.max((N | 0) - this._minBufferSize, 0);
                      var M = N * R, K = r.min(M * 4, b);
                      if (M) {
                        for (var ct = 0; ct < M; ct += R)
                          this._doProcessBlock(D, ct);
                        A = D.splice(0, M), E.sigBytes -= K;
                      }
                      return new p.init(A, K);
                    },
                    /**
                     * Creates a copy of this object.
                     *
                     * @return {Object} The clone.
                     *
                     * @example
                     *
                     *     var clone = bufferedBlockAlgorithm.clone();
                     */
                    clone: function() {
                      var T = i.clone.call(this);
                      return T._data = this._data.clone(), T;
                    },
                    _minBufferSize: 0
                  });
                  d.Hasher = S.extend({
                    /**
                     * Configuration options.
                     */
                    cfg: i.extend(),
                    /**
                     * Initializes a newly created hasher.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
                     *
                     * @example
                     *
                     *     var hasher = CryptoJS.algo.SHA256.create();
                     */
                    init: function(T) {
                      this.cfg = this.cfg.extend(T), this.reset();
                    },
                    /**
                     * Resets this hasher to its initial state.
                     *
                     * @example
                     *
                     *     hasher.reset();
                     */
                    reset: function() {
                      S.reset.call(this), this._doReset();
                    },
                    /**
                     * Updates this hasher with a message.
                     *
                     * @param {WordArray|string} messageUpdate The message to append.
                     *
                     * @return {Hasher} This hasher.
                     *
                     * @example
                     *
                     *     hasher.update('message');
                     *     hasher.update(wordArray);
                     */
                    update: function(T) {
                      return this._append(T), this._process(), this;
                    },
                    /**
                     * Finalizes the hash computation.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} messageUpdate (Optional) A final message update.
                     *
                     * @return {WordArray} The hash.
                     *
                     * @example
                     *
                     *     var hash = hasher.finalize();
                     *     var hash = hasher.finalize('message');
                     *     var hash = hasher.finalize(wordArray);
                     */
                    finalize: function(T) {
                      T && this._append(T);
                      var A = this._doFinalize();
                      return A;
                    },
                    blockSize: 16,
                    /**
                     * Creates a shortcut function to a hasher's object interface.
                     *
                     * @param {Hasher} hasher The hasher to create a helper for.
                     *
                     * @return {Function} The shortcut function.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
                     */
                    _createHelper: function(T) {
                      return function(A, E) {
                        return new T.init(E).finalize(A);
                      };
                    },
                    /**
                     * Creates a shortcut function to the HMAC's object interface.
                     *
                     * @param {Hasher} hasher The hasher to use in this HMAC helper.
                     *
                     * @return {Function} The shortcut function.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
                     */
                    _createHmacHelper: function(T) {
                      return function(A, E) {
                        return new P.HMAC.init(T, E).finalize(A);
                      };
                    }
                  });
                  var P = h.algo = {};
                  return h;
                }(Math);
                return s;
              });
            }
          ),
          /***/
          31946: (
            /***/
            function(l, c, t) {
              t(85005), function(s, r) {
                l.exports = r(t(53264));
              }(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.WordArray, f = r.enc;
                  f.Base64 = {
                    /**
                     * Converts a word array to a Base64 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The Base64 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
                     */
                    stringify: function(d) {
                      var i = d.words, p = d.sigBytes, y = this._map;
                      d.clamp();
                      for (var m = [], e = 0; e < p; e += 3)
                        for (var x = i[e >>> 2] >>> 24 - e % 4 * 8 & 255, S = i[e + 1 >>> 2] >>> 24 - (e + 1) % 4 * 8 & 255, P = i[e + 2 >>> 2] >>> 24 - (e + 2) % 4 * 8 & 255, O = x << 16 | S << 8 | P, T = 0; T < 4 && e + T * 0.75 < p; T++)
                          m.push(y.charAt(O >>> 6 * (3 - T) & 63));
                      var A = y.charAt(64);
                      if (A)
                        for (; m.length % 4; )
                          m.push(A);
                      return m.join("");
                    },
                    /**
                     * Converts a Base64 string to a word array.
                     *
                     * @param {string} base64Str The Base64 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
                     */
                    parse: function(d) {
                      var i = d.length, p = this._map, y = this._reverseMap;
                      if (!y) {
                        y = this._reverseMap = [];
                        for (var m = 0; m < p.length; m++)
                          y[p.charCodeAt(m)] = m;
                      }
                      var e = p.charAt(64);
                      if (e) {
                        var x = d.indexOf(e);
                        x !== -1 && (i = x);
                      }
                      return u(d, i, y);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                  };
                  function u(h, d, i) {
                    for (var p = [], y = 0, m = 0; m < d; m++)
                      if (m % 4) {
                        var e = i[h.charCodeAt(m - 1)] << m % 4 * 2, x = i[h.charCodeAt(m)] >>> 6 - m % 4 * 2, S = e | x;
                        p[y >>> 2] |= S << 24 - y % 4 * 8, y++;
                      }
                    return o.create(p, y);
                  }
                }(), s.enc.Base64;
              });
            }
          ),
          /***/
          30961: (
            /***/
            function(l, c, t) {
              t(85005), function(s, r) {
                l.exports = r(t(53264));
              }(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.WordArray, f = r.enc;
                  f.Base64url = {
                    /**
                     * Converts a word array to a Base64url string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @param {boolean} urlSafe Whether to use url safe
                     *
                     * @return {string} The Base64url string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);
                     */
                    stringify: function(d, i) {
                      i === void 0 && (i = !0);
                      var p = d.words, y = d.sigBytes, m = i ? this._safe_map : this._map;
                      d.clamp();
                      for (var e = [], x = 0; x < y; x += 3)
                        for (var S = p[x >>> 2] >>> 24 - x % 4 * 8 & 255, P = p[x + 1 >>> 2] >>> 24 - (x + 1) % 4 * 8 & 255, O = p[x + 2 >>> 2] >>> 24 - (x + 2) % 4 * 8 & 255, T = S << 16 | P << 8 | O, A = 0; A < 4 && x + A * 0.75 < y; A++)
                          e.push(m.charAt(T >>> 6 * (3 - A) & 63));
                      var E = m.charAt(64);
                      if (E)
                        for (; e.length % 4; )
                          e.push(E);
                      return e.join("");
                    },
                    /**
                     * Converts a Base64url string to a word array.
                     *
                     * @param {string} base64Str The Base64url string.
                     *
                     * @param {boolean} urlSafe Whether to use url safe
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);
                     */
                    parse: function(d, i) {
                      i === void 0 && (i = !0);
                      var p = d.length, y = i ? this._safe_map : this._map, m = this._reverseMap;
                      if (!m) {
                        m = this._reverseMap = [];
                        for (var e = 0; e < y.length; e++)
                          m[y.charCodeAt(e)] = e;
                      }
                      var x = y.charAt(64);
                      if (x) {
                        var S = d.indexOf(x);
                        S !== -1 && (p = S);
                      }
                      return u(d, p, m);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                  };
                  function u(h, d, i) {
                    for (var p = [], y = 0, m = 0; m < d; m++)
                      if (m % 4) {
                        var e = i[h.charCodeAt(m - 1)] << m % 4 * 2, x = i[h.charCodeAt(m)] >>> 6 - m % 4 * 2, S = e | x;
                        p[y >>> 2] |= S << 24 - y % 4 * 8, y++;
                      }
                    return o.create(p, y);
                  }
                }(), s.enc.Base64url;
              });
            }
          ),
          /***/
          44087: (
            /***/
            function(l, c, t) {
              t(85005), function(s, r) {
                l.exports = r(t(53264));
              }(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.WordArray, f = r.enc;
                  f.Utf16 = f.Utf16BE = {
                    /**
                     * Converts a word array to a UTF-16 BE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 BE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
                     */
                    stringify: function(d) {
                      for (var i = d.words, p = d.sigBytes, y = [], m = 0; m < p; m += 2) {
                        var e = i[m >>> 2] >>> 16 - m % 4 * 8 & 65535;
                        y.push(String.fromCharCode(e));
                      }
                      return y.join("");
                    },
                    /**
                     * Converts a UTF-16 BE string to a word array.
                     *
                     * @param {string} utf16Str The UTF-16 BE string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
                     */
                    parse: function(d) {
                      for (var i = d.length, p = [], y = 0; y < i; y++)
                        p[y >>> 1] |= d.charCodeAt(y) << 16 - y % 2 * 16;
                      return o.create(p, i * 2);
                    }
                  }, f.Utf16LE = {
                    /**
                     * Converts a word array to a UTF-16 LE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 LE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
                     */
                    stringify: function(d) {
                      for (var i = d.words, p = d.sigBytes, y = [], m = 0; m < p; m += 2) {
                        var e = u(i[m >>> 2] >>> 16 - m % 4 * 8 & 65535);
                        y.push(String.fromCharCode(e));
                      }
                      return y.join("");
                    },
                    /**
                     * Converts a UTF-16 LE string to a word array.
                     *
                     * @param {string} utf16Str The UTF-16 LE string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
                     */
                    parse: function(d) {
                      for (var i = d.length, p = [], y = 0; y < i; y++)
                        p[y >>> 1] |= u(d.charCodeAt(y) << 16 - y % 2 * 16);
                      return o.create(p, i * 2);
                    }
                  };
                  function u(h) {
                    return h << 8 & 4278255360 | h >>> 8 & 16711935;
                  }
                }(), s.enc.Utf16;
              });
            }
          ),
          /***/
          95194: (
            /***/
            function(l, c, t) {
              t(55862), function(s, r, a) {
                l.exports = r(t(53264), t(61977), t(5577));
              }(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.Base, f = a.WordArray, u = r.algo, h = u.MD5, d = u.EvpKDF = o.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                     * @property {Hasher} hasher The hash algorithm to use. Default: MD5
                     * @property {number} iterations The number of iterations to perform. Default: 1
                     */
                    cfg: o.extend({
                      keySize: 128 / 32,
                      hasher: h,
                      iterations: 1
                    }),
                    /**
                     * Initializes a newly created key derivation function.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                     *
                     * @example
                     *
                     *     var kdf = CryptoJS.algo.EvpKDF.create();
                     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
                     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
                     */
                    init: function(p) {
                      this.cfg = this.cfg.extend(p);
                    },
                    /**
                     * Derives a key from a password.
                     *
                     * @param {WordArray|string} password The password.
                     * @param {WordArray|string} salt A salt.
                     *
                     * @return {WordArray} The derived key.
                     *
                     * @example
                     *
                     *     var key = kdf.compute(password, salt);
                     */
                    compute: function(p, y) {
                      for (var m, e = this.cfg, x = e.hasher.create(), S = f.create(), P = S.words, O = e.keySize, T = e.iterations; P.length < O; ) {
                        m && x.update(m), m = x.update(p).finalize(y), x.reset();
                        for (var A = 1; A < T; A++)
                          m = x.finalize(m), x.reset();
                        S.concat(m);
                      }
                      return S.sigBytes = O * 4, S;
                    }
                  });
                  r.EvpKDF = function(i, p, y) {
                    return d.create(y).compute(i, p);
                  };
                }(), s.EvpKDF;
              });
            }
          ),
          /***/
          3902: (
            /***/
            function(l, c, t) {
              t(10853), t(33290), function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              }(void 0, function(s) {
                return function(r) {
                  var a = s, o = a.lib, f = o.CipherParams, u = a.enc, h = u.Hex, d = a.format;
                  d.Hex = {
                    /**
                     * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
                     *
                     * @param {CipherParams} cipherParams The cipher params object.
                     *
                     * @return {string} The hexadecimally encoded string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
                     */
                    stringify: function(p) {
                      return p.ciphertext.toString(h);
                    },
                    /**
                     * Converts a hexadecimally encoded ciphertext string to a cipher params object.
                     *
                     * @param {string} input The hexadecimally encoded string.
                     *
                     * @return {CipherParams} The cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
                     */
                    parse: function(p) {
                      var y = h.parse(p);
                      return f.create({
                        ciphertext: y
                      });
                    }
                  };
                }(), s.format.Hex;
              });
            }
          ),
          /***/
          5577: (
            /***/
            function(l, c, t) {
              t(55862), function(s, r) {
                l.exports = r(t(53264));
              }(void 0, function(s) {
                (function() {
                  var r = s, a = r.lib, o = a.Base, f = r.enc, u = f.Utf8, h = r.algo;
                  h.HMAC = o.extend({
                    /**
                     * Initializes a newly created HMAC.
                     *
                     * @param {Hasher} hasher The hash algorithm to use.
                     * @param {WordArray|string} key The secret key.
                     *
                     * @example
                     *
                     *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
                     */
                    init: function(i, p) {
                      i = this._hasher = new i.init(), typeof p == "string" && (p = u.parse(p));
                      var y = i.blockSize, m = y * 4;
                      p.sigBytes > m && (p = i.finalize(p)), p.clamp();
                      for (var e = this._oKey = p.clone(), x = this._iKey = p.clone(), S = e.words, P = x.words, O = 0; O < y; O++)
                        S[O] ^= 1549556828, P[O] ^= 909522486;
                      e.sigBytes = x.sigBytes = m, this.reset();
                    },
                    /**
                     * Resets this HMAC to its initial state.
                     *
                     * @example
                     *
                     *     hmacHasher.reset();
                     */
                    reset: function() {
                      var i = this._hasher;
                      i.reset(), i.update(this._iKey);
                    },
                    /**
                     * Updates this HMAC with a message.
                     *
                     * @param {WordArray|string} messageUpdate The message to append.
                     *
                     * @return {HMAC} This HMAC instance.
                     *
                     * @example
                     *
                     *     hmacHasher.update('message');
                     *     hmacHasher.update(wordArray);
                     */
                    update: function(i) {
                      return this._hasher.update(i), this;
                    },
                    /**
                     * Finalizes the HMAC computation.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} messageUpdate (Optional) A final message update.
                     *
                     * @return {WordArray} The HMAC.
                     *
                     * @example
                     *
                     *     var hmac = hmacHasher.finalize();
                     *     var hmac = hmacHasher.finalize('message');
                     *     var hmac = hmacHasher.finalize(wordArray);
                     */
                    finalize: function(i) {
                      var p = this._hasher, y = p.finalize(i);
                      p.reset();
                      var m = p.finalize(this._oKey.clone().concat(y));
                      return m;
                    }
                  });
                })();
              });
            }
          ),
          /***/
          35243: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(23204), t(70879), t(44087), t(31946), t(30961), t(57510), t(61977), t(85209), t(11707), t(20595), t(21410), t(11691), t(53601), t(5577), t(75883), t(95194), t(52810), t(90347), t(54032), t(63197), t(38710), t(21123), t(93007), t(7489), t(91695), t(29556), t(68028), t(3902), t(22449), t(77059), t(97690), t(24222), t(79338), t(67646));
              })(void 0, function(s) {
                return s;
              });
            }
          ),
          /***/
          70879: (
            /***/
            function(l, c, t) {
              t(36501), t(10853), t(54883), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(33324), t(71228), t(100), t(51360), t(26770), t(35779), t(31120), t(85569), function(s, r) {
                l.exports = r(t(53264));
              }(void 0, function(s) {
                return function() {
                  if (typeof ArrayBuffer == "function") {
                    var r = s, a = r.lib, o = a.WordArray, f = o.init, u = o.init = function(h) {
                      if (h instanceof ArrayBuffer && (h = new Uint8Array(h)), (h instanceof Int8Array || typeof Uint8ClampedArray != "undefined" && h instanceof Uint8ClampedArray || h instanceof Int16Array || h instanceof Uint16Array || h instanceof Int32Array || h instanceof Uint32Array || h instanceof Float32Array || h instanceof Float64Array) && (h = new Uint8Array(h.buffer, h.byteOffset, h.byteLength)), h instanceof Uint8Array) {
                        for (var d = h.byteLength, i = [], p = 0; p < d; p++)
                          i[p >>> 2] |= h[p] << 24 - p % 4 * 8;
                        f.call(this, i, d);
                      } else
                        f.apply(this, arguments);
                    };
                    u.prototype = o;
                  }
                }(), s.lib.WordArray;
              });
            }
          ),
          /***/
          57510: (
            /***/
            function(l, c, t) {
              (function(s, r) {
                l.exports = r(t(53264));
              })(void 0, function(s) {
                return function(r) {
                  var a = s, o = a.lib, f = o.WordArray, u = o.Hasher, h = a.algo, d = [];
                  (function() {
                    for (var x = 0; x < 64; x++)
                      d[x] = r.abs(r.sin(x + 1)) * 4294967296 | 0;
                  })();
                  var i = h.MD5 = u.extend({
                    _doReset: function() {
                      this._hash = new f.init([1732584193, 4023233417, 2562383102, 271733878]);
                    },
                    _doProcessBlock: function(S, P) {
                      for (var O = 0; O < 16; O++) {
                        var T = P + O, A = S[T];
                        S[T] = (A << 8 | A >>> 24) & 16711935 | (A << 24 | A >>> 8) & 4278255360;
                      }
                      var E = this._hash.words, D = S[P + 0], b = S[P + 1], R = S[P + 2], L = S[P + 3], N = S[P + 4], M = S[P + 5], K = S[P + 6], ct = S[P + 7], J = S[P + 8], nt = S[P + 9], yt = S[P + 10], bt = S[P + 11], Tt = S[P + 12], It = S[P + 13], Lt = S[P + 14], zt = S[P + 15], Q = E[0], gt = E[1], ht = E[2], st = E[3];
                      Q = p(Q, gt, ht, st, D, 7, d[0]), st = p(st, Q, gt, ht, b, 12, d[1]), ht = p(ht, st, Q, gt, R, 17, d[2]), gt = p(gt, ht, st, Q, L, 22, d[3]), Q = p(Q, gt, ht, st, N, 7, d[4]), st = p(st, Q, gt, ht, M, 12, d[5]), ht = p(ht, st, Q, gt, K, 17, d[6]), gt = p(gt, ht, st, Q, ct, 22, d[7]), Q = p(Q, gt, ht, st, J, 7, d[8]), st = p(st, Q, gt, ht, nt, 12, d[9]), ht = p(ht, st, Q, gt, yt, 17, d[10]), gt = p(gt, ht, st, Q, bt, 22, d[11]), Q = p(Q, gt, ht, st, Tt, 7, d[12]), st = p(st, Q, gt, ht, It, 12, d[13]), ht = p(ht, st, Q, gt, Lt, 17, d[14]), gt = p(gt, ht, st, Q, zt, 22, d[15]), Q = y(Q, gt, ht, st, b, 5, d[16]), st = y(st, Q, gt, ht, K, 9, d[17]), ht = y(ht, st, Q, gt, bt, 14, d[18]), gt = y(gt, ht, st, Q, D, 20, d[19]), Q = y(Q, gt, ht, st, M, 5, d[20]), st = y(st, Q, gt, ht, yt, 9, d[21]), ht = y(ht, st, Q, gt, zt, 14, d[22]), gt = y(gt, ht, st, Q, N, 20, d[23]), Q = y(Q, gt, ht, st, nt, 5, d[24]), st = y(st, Q, gt, ht, Lt, 9, d[25]), ht = y(ht, st, Q, gt, L, 14, d[26]), gt = y(gt, ht, st, Q, J, 20, d[27]), Q = y(Q, gt, ht, st, It, 5, d[28]), st = y(st, Q, gt, ht, R, 9, d[29]), ht = y(ht, st, Q, gt, ct, 14, d[30]), gt = y(gt, ht, st, Q, Tt, 20, d[31]), Q = m(Q, gt, ht, st, M, 4, d[32]), st = m(st, Q, gt, ht, J, 11, d[33]), ht = m(ht, st, Q, gt, bt, 16, d[34]), gt = m(gt, ht, st, Q, Lt, 23, d[35]), Q = m(Q, gt, ht, st, b, 4, d[36]), st = m(st, Q, gt, ht, N, 11, d[37]), ht = m(ht, st, Q, gt, ct, 16, d[38]), gt = m(gt, ht, st, Q, yt, 23, d[39]), Q = m(Q, gt, ht, st, It, 4, d[40]), st = m(st, Q, gt, ht, D, 11, d[41]), ht = m(ht, st, Q, gt, L, 16, d[42]), gt = m(gt, ht, st, Q, K, 23, d[43]), Q = m(Q, gt, ht, st, nt, 4, d[44]), st = m(st, Q, gt, ht, Tt, 11, d[45]), ht = m(ht, st, Q, gt, zt, 16, d[46]), gt = m(gt, ht, st, Q, R, 23, d[47]), Q = e(Q, gt, ht, st, D, 6, d[48]), st = e(st, Q, gt, ht, ct, 10, d[49]), ht = e(ht, st, Q, gt, Lt, 15, d[50]), gt = e(gt, ht, st, Q, M, 21, d[51]), Q = e(Q, gt, ht, st, Tt, 6, d[52]), st = e(st, Q, gt, ht, L, 10, d[53]), ht = e(ht, st, Q, gt, yt, 15, d[54]), gt = e(gt, ht, st, Q, b, 21, d[55]), Q = e(Q, gt, ht, st, J, 6, d[56]), st = e(st, Q, gt, ht, zt, 10, d[57]), ht = e(ht, st, Q, gt, K, 15, d[58]), gt = e(gt, ht, st, Q, It, 21, d[59]), Q = e(Q, gt, ht, st, N, 6, d[60]), st = e(st, Q, gt, ht, bt, 10, d[61]), ht = e(ht, st, Q, gt, R, 15, d[62]), gt = e(gt, ht, st, Q, nt, 21, d[63]), E[0] = E[0] + Q | 0, E[1] = E[1] + gt | 0, E[2] = E[2] + ht | 0, E[3] = E[3] + st | 0;
                    },
                    _doFinalize: function() {
                      var S = this._data, P = S.words, O = this._nDataBytes * 8, T = S.sigBytes * 8;
                      P[T >>> 5] |= 128 << 24 - T % 32;
                      var A = r.floor(O / 4294967296), E = O;
                      P[(T + 64 >>> 9 << 4) + 15] = (A << 8 | A >>> 24) & 16711935 | (A << 24 | A >>> 8) & 4278255360, P[(T + 64 >>> 9 << 4) + 14] = (E << 8 | E >>> 24) & 16711935 | (E << 24 | E >>> 8) & 4278255360, S.sigBytes = (P.length + 1) * 4, this._process();
                      for (var D = this._hash, b = D.words, R = 0; R < 4; R++) {
                        var L = b[R];
                        b[R] = (L << 8 | L >>> 24) & 16711935 | (L << 24 | L >>> 8) & 4278255360;
                      }
                      return D;
                    },
                    clone: function() {
                      var S = u.clone.call(this);
                      return S._hash = this._hash.clone(), S;
                    }
                  });
                  function p(x, S, P, O, T, A, E) {
                    var D = x + (S & P | ~S & O) + T + E;
                    return (D << A | D >>> 32 - A) + S;
                  }
                  function y(x, S, P, O, T, A, E) {
                    var D = x + (S & O | P & ~O) + T + E;
                    return (D << A | D >>> 32 - A) + S;
                  }
                  function m(x, S, P, O, T, A, E) {
                    var D = x + (S ^ P ^ O) + T + E;
                    return (D << A | D >>> 32 - A) + S;
                  }
                  function e(x, S, P, O, T, A, E) {
                    var D = x + (P ^ (S | ~O)) + T + E;
                    return (D << A | D >>> 32 - A) + S;
                  }
                  a.MD5 = u._createHelper(i), a.HmacMD5 = u._createHmacHelper(i);
                }(Math), s.MD5;
              });
            }
          ),
          /***/
          90347: (
            /***/
            function(l, c, t) {
              t(18821), function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              }(void 0, function(s) {
                return s.mode.CFB = function() {
                  var r = s.lib.BlockCipherMode.extend();
                  r.Encryptor = r.extend({
                    processBlock: function(f, u) {
                      var h = this._cipher, d = h.blockSize;
                      a.call(this, f, u, d, h), this._prevBlock = f.slice(u, u + d);
                    }
                  }), r.Decryptor = r.extend({
                    processBlock: function(f, u) {
                      var h = this._cipher, d = h.blockSize, i = f.slice(u, u + d);
                      a.call(this, f, u, d, h), this._prevBlock = i;
                    }
                  });
                  function a(o, f, u, h) {
                    var d, i = this._iv;
                    i ? (d = i.slice(0), this._iv = void 0) : d = this._prevBlock, h.encryptBlock(d, 0);
                    for (var p = 0; p < u; p++)
                      o[f + p] ^= d[p];
                  }
                  return r;
                }(), s.mode.CFB;
              });
            }
          ),
          /***/
          63197: (
            /***/
            function(l, c, t) {
              t(18821), function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              }(void 0, function(s) {
                /** @preserve
                 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
                 * derived from CryptoJS.mode.CTR
                 * Jan Hruby jhruby.web@gmail.com
                 */
                return s.mode.CTRGladman = function() {
                  var r = s.lib.BlockCipherMode.extend();
                  function a(u) {
                    if ((u >> 24 & 255) === 255) {
                      var h = u >> 16 & 255, d = u >> 8 & 255, i = u & 255;
                      h === 255 ? (h = 0, d === 255 ? (d = 0, i === 255 ? i = 0 : ++i) : ++d) : ++h, u = 0, u += h << 16, u += d << 8, u += i;
                    } else
                      u += 16777216;
                    return u;
                  }
                  function o(u) {
                    return (u[0] = a(u[0])) === 0 && (u[1] = a(u[1])), u;
                  }
                  var f = r.Encryptor = r.extend({
                    processBlock: function(h, d) {
                      var i = this._cipher, p = i.blockSize, y = this._iv, m = this._counter;
                      y && (m = this._counter = y.slice(0), this._iv = void 0), o(m);
                      var e = m.slice(0);
                      i.encryptBlock(e, 0);
                      for (var x = 0; x < p; x++)
                        h[d + x] ^= e[x];
                    }
                  });
                  return r.Decryptor = f, r;
                }(), s.mode.CTRGladman;
              });
            }
          ),
          /***/
          54032: (
            /***/
            function(l, c, t) {
              t(18821), function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              }(void 0, function(s) {
                return s.mode.CTR = function() {
                  var r = s.lib.BlockCipherMode.extend(), a = r.Encryptor = r.extend({
                    processBlock: function(f, u) {
                      var h = this._cipher, d = h.blockSize, i = this._iv, p = this._counter;
                      i && (p = this._counter = i.slice(0), this._iv = void 0);
                      var y = p.slice(0);
                      h.encryptBlock(y, 0), p[d - 1] = p[d - 1] + 1 | 0;
                      for (var m = 0; m < d; m++)
                        f[u + m] ^= y[m];
                    }
                  });
                  return r.Decryptor = a, r;
                }(), s.mode.CTR;
              });
            }
          ),
          /***/
          21123: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              })(void 0, function(s) {
                return s.mode.ECB = function() {
                  var r = s.lib.BlockCipherMode.extend();
                  return r.Encryptor = r.extend({
                    processBlock: function(o, f) {
                      this._cipher.encryptBlock(o, f);
                    }
                  }), r.Decryptor = r.extend({
                    processBlock: function(o, f) {
                      this._cipher.decryptBlock(o, f);
                    }
                  }), r;
                }(), s.mode.ECB;
              });
            }
          ),
          /***/
          38710: (
            /***/
            function(l, c, t) {
              t(18821), function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              }(void 0, function(s) {
                return s.mode.OFB = function() {
                  var r = s.lib.BlockCipherMode.extend(), a = r.Encryptor = r.extend({
                    processBlock: function(f, u) {
                      var h = this._cipher, d = h.blockSize, i = this._iv, p = this._keystream;
                      i && (p = this._keystream = i.slice(0), this._iv = void 0), h.encryptBlock(p, 0);
                      for (var y = 0; y < d; y++)
                        f[u + y] ^= p[y];
                    }
                  });
                  return r.Decryptor = a, r;
                }(), s.mode.OFB;
              });
            }
          ),
          /***/
          93007: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              })(void 0, function(s) {
                return s.pad.AnsiX923 = {
                  pad: function(a, o) {
                    var f = a.sigBytes, u = o * 4, h = u - f % u, d = f + h - 1;
                    a.clamp(), a.words[d >>> 2] |= h << 24 - d % 4 * 8, a.sigBytes += h;
                  },
                  unpad: function(a) {
                    var o = a.words[a.sigBytes - 1 >>> 2] & 255;
                    a.sigBytes -= o;
                  }
                }, s.pad.Ansix923;
              });
            }
          ),
          /***/
          7489: (
            /***/
            function(l, c, t) {
              t(55862), function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              }(void 0, function(s) {
                return s.pad.Iso10126 = {
                  pad: function(a, o) {
                    var f = o * 4, u = f - a.sigBytes % f;
                    a.concat(s.lib.WordArray.random(u - 1)).concat(s.lib.WordArray.create([u << 24], 1));
                  },
                  unpad: function(a) {
                    var o = a.words[a.sigBytes - 1 >>> 2] & 255;
                    a.sigBytes -= o;
                  }
                }, s.pad.Iso10126;
              });
            }
          ),
          /***/
          91695: (
            /***/
            function(l, c, t) {
              t(55862), function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              }(void 0, function(s) {
                return s.pad.Iso97971 = {
                  pad: function(a, o) {
                    a.concat(s.lib.WordArray.create([2147483648], 1)), s.pad.ZeroPadding.pad(a, o);
                  },
                  unpad: function(a) {
                    s.pad.ZeroPadding.unpad(a), a.sigBytes--;
                  }
                }, s.pad.Iso97971;
              });
            }
          ),
          /***/
          68028: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              })(void 0, function(s) {
                return s.pad.NoPadding = {
                  pad: function() {
                  },
                  unpad: function() {
                  }
                }, s.pad.NoPadding;
              });
            }
          ),
          /***/
          29556: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(52810));
              })(void 0, function(s) {
                return s.pad.ZeroPadding = {
                  pad: function(a, o) {
                    var f = o * 4;
                    a.clamp(), a.sigBytes += f - (a.sigBytes % f || f);
                  },
                  unpad: function(a) {
                    for (var o = a.words, f = a.sigBytes - 1, f = a.sigBytes - 1; f >= 0; f--)
                      if (o[f >>> 2] >>> 24 - f % 4 * 8 & 255) {
                        a.sigBytes = f + 1;
                        break;
                      }
                  }
                }, s.pad.ZeroPadding;
              });
            }
          ),
          /***/
          75883: (
            /***/
            function(l, c, t) {
              t(55862), function(s, r, a) {
                l.exports = r(t(53264), t(85209), t(5577));
              }(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.Base, f = a.WordArray, u = r.algo, h = u.SHA256, d = u.HMAC, i = u.PBKDF2 = o.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                     * @property {Hasher} hasher The hasher to use. Default: SHA256
                     * @property {number} iterations The number of iterations to perform. Default: 250000
                     */
                    cfg: o.extend({
                      keySize: 128 / 32,
                      hasher: h,
                      iterations: 25e4
                    }),
                    /**
                     * Initializes a newly created key derivation function.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                     *
                     * @example
                     *
                     *     var kdf = CryptoJS.algo.PBKDF2.create();
                     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
                     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
                     */
                    init: function(y) {
                      this.cfg = this.cfg.extend(y);
                    },
                    /**
                     * Computes the Password-Based Key Derivation Function 2.
                     *
                     * @param {WordArray|string} password The password.
                     * @param {WordArray|string} salt A salt.
                     *
                     * @return {WordArray} The derived key.
                     *
                     * @example
                     *
                     *     var key = kdf.compute(password, salt);
                     */
                    compute: function(y, m) {
                      for (var e = this.cfg, x = d.create(e.hasher, y), S = f.create(), P = f.create([1]), O = S.words, T = P.words, A = e.keySize, E = e.iterations; O.length < A; ) {
                        var D = x.update(m).finalize(P);
                        x.reset();
                        for (var b = D.words, R = b.length, L = D, N = 1; N < E; N++) {
                          L = x.finalize(L), x.reset();
                          for (var M = L.words, K = 0; K < R; K++)
                            b[K] ^= M[K];
                        }
                        S.concat(D), T[0]++;
                      }
                      return S.sigBytes = A * 4, S;
                    }
                  });
                  r.PBKDF2 = function(p, y, m) {
                    return i.create(m).compute(p, y);
                  };
                }(), s.PBKDF2;
              });
            }
          ),
          /***/
          79338: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.StreamCipher, f = r.algo, u = [], h = [], d = [], i = f.RabbitLegacy = o.extend({
                    _doReset: function() {
                      var m = this._key.words, e = this.cfg.iv, x = this._X = [m[0], m[3] << 16 | m[2] >>> 16, m[1], m[0] << 16 | m[3] >>> 16, m[2], m[1] << 16 | m[0] >>> 16, m[3], m[2] << 16 | m[1] >>> 16], S = this._C = [m[2] << 16 | m[2] >>> 16, m[0] & 4294901760 | m[1] & 65535, m[3] << 16 | m[3] >>> 16, m[1] & 4294901760 | m[2] & 65535, m[0] << 16 | m[0] >>> 16, m[2] & 4294901760 | m[3] & 65535, m[1] << 16 | m[1] >>> 16, m[3] & 4294901760 | m[0] & 65535];
                      this._b = 0;
                      for (var P = 0; P < 4; P++)
                        p.call(this);
                      for (var P = 0; P < 8; P++)
                        S[P] ^= x[P + 4 & 7];
                      if (e) {
                        var O = e.words, T = O[0], A = O[1], E = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, D = (A << 8 | A >>> 24) & 16711935 | (A << 24 | A >>> 8) & 4278255360, b = E >>> 16 | D & 4294901760, R = D << 16 | E & 65535;
                        S[0] ^= E, S[1] ^= b, S[2] ^= D, S[3] ^= R, S[4] ^= E, S[5] ^= b, S[6] ^= D, S[7] ^= R;
                        for (var P = 0; P < 4; P++)
                          p.call(this);
                      }
                    },
                    _doProcessBlock: function(m, e) {
                      var x = this._X;
                      p.call(this), u[0] = x[0] ^ x[5] >>> 16 ^ x[3] << 16, u[1] = x[2] ^ x[7] >>> 16 ^ x[5] << 16, u[2] = x[4] ^ x[1] >>> 16 ^ x[7] << 16, u[3] = x[6] ^ x[3] >>> 16 ^ x[1] << 16;
                      for (var S = 0; S < 4; S++)
                        u[S] = (u[S] << 8 | u[S] >>> 24) & 16711935 | (u[S] << 24 | u[S] >>> 8) & 4278255360, m[e + S] ^= u[S];
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  function p() {
                    for (var y = this._X, m = this._C, e = 0; e < 8; e++)
                      h[e] = m[e];
                    m[0] = m[0] + 1295307597 + this._b | 0, m[1] = m[1] + 3545052371 + (m[0] >>> 0 < h[0] >>> 0 ? 1 : 0) | 0, m[2] = m[2] + 886263092 + (m[1] >>> 0 < h[1] >>> 0 ? 1 : 0) | 0, m[3] = m[3] + 1295307597 + (m[2] >>> 0 < h[2] >>> 0 ? 1 : 0) | 0, m[4] = m[4] + 3545052371 + (m[3] >>> 0 < h[3] >>> 0 ? 1 : 0) | 0, m[5] = m[5] + 886263092 + (m[4] >>> 0 < h[4] >>> 0 ? 1 : 0) | 0, m[6] = m[6] + 1295307597 + (m[5] >>> 0 < h[5] >>> 0 ? 1 : 0) | 0, m[7] = m[7] + 3545052371 + (m[6] >>> 0 < h[6] >>> 0 ? 1 : 0) | 0, this._b = m[7] >>> 0 < h[7] >>> 0 ? 1 : 0;
                    for (var e = 0; e < 8; e++) {
                      var x = y[e] + m[e], S = x & 65535, P = x >>> 16, O = ((S * S >>> 17) + S * P >>> 15) + P * P, T = ((x & 4294901760) * x | 0) + ((x & 65535) * x | 0);
                      d[e] = O ^ T;
                    }
                    y[0] = d[0] + (d[7] << 16 | d[7] >>> 16) + (d[6] << 16 | d[6] >>> 16) | 0, y[1] = d[1] + (d[0] << 8 | d[0] >>> 24) + d[7] | 0, y[2] = d[2] + (d[1] << 16 | d[1] >>> 16) + (d[0] << 16 | d[0] >>> 16) | 0, y[3] = d[3] + (d[2] << 8 | d[2] >>> 24) + d[1] | 0, y[4] = d[4] + (d[3] << 16 | d[3] >>> 16) + (d[2] << 16 | d[2] >>> 16) | 0, y[5] = d[5] + (d[4] << 8 | d[4] >>> 24) + d[3] | 0, y[6] = d[6] + (d[5] << 16 | d[5] >>> 16) + (d[4] << 16 | d[4] >>> 16) | 0, y[7] = d[7] + (d[6] << 8 | d[6] >>> 24) + d[5] | 0;
                  }
                  r.RabbitLegacy = o._createHelper(i);
                }(), s.RabbitLegacy;
              });
            }
          ),
          /***/
          24222: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.StreamCipher, f = r.algo, u = [], h = [], d = [], i = f.Rabbit = o.extend({
                    _doReset: function() {
                      for (var m = this._key.words, e = this.cfg.iv, x = 0; x < 4; x++)
                        m[x] = (m[x] << 8 | m[x] >>> 24) & 16711935 | (m[x] << 24 | m[x] >>> 8) & 4278255360;
                      var S = this._X = [m[0], m[3] << 16 | m[2] >>> 16, m[1], m[0] << 16 | m[3] >>> 16, m[2], m[1] << 16 | m[0] >>> 16, m[3], m[2] << 16 | m[1] >>> 16], P = this._C = [m[2] << 16 | m[2] >>> 16, m[0] & 4294901760 | m[1] & 65535, m[3] << 16 | m[3] >>> 16, m[1] & 4294901760 | m[2] & 65535, m[0] << 16 | m[0] >>> 16, m[2] & 4294901760 | m[3] & 65535, m[1] << 16 | m[1] >>> 16, m[3] & 4294901760 | m[0] & 65535];
                      this._b = 0;
                      for (var x = 0; x < 4; x++)
                        p.call(this);
                      for (var x = 0; x < 8; x++)
                        P[x] ^= S[x + 4 & 7];
                      if (e) {
                        var O = e.words, T = O[0], A = O[1], E = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, D = (A << 8 | A >>> 24) & 16711935 | (A << 24 | A >>> 8) & 4278255360, b = E >>> 16 | D & 4294901760, R = D << 16 | E & 65535;
                        P[0] ^= E, P[1] ^= b, P[2] ^= D, P[3] ^= R, P[4] ^= E, P[5] ^= b, P[6] ^= D, P[7] ^= R;
                        for (var x = 0; x < 4; x++)
                          p.call(this);
                      }
                    },
                    _doProcessBlock: function(m, e) {
                      var x = this._X;
                      p.call(this), u[0] = x[0] ^ x[5] >>> 16 ^ x[3] << 16, u[1] = x[2] ^ x[7] >>> 16 ^ x[5] << 16, u[2] = x[4] ^ x[1] >>> 16 ^ x[7] << 16, u[3] = x[6] ^ x[3] >>> 16 ^ x[1] << 16;
                      for (var S = 0; S < 4; S++)
                        u[S] = (u[S] << 8 | u[S] >>> 24) & 16711935 | (u[S] << 24 | u[S] >>> 8) & 4278255360, m[e + S] ^= u[S];
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  function p() {
                    for (var y = this._X, m = this._C, e = 0; e < 8; e++)
                      h[e] = m[e];
                    m[0] = m[0] + 1295307597 + this._b | 0, m[1] = m[1] + 3545052371 + (m[0] >>> 0 < h[0] >>> 0 ? 1 : 0) | 0, m[2] = m[2] + 886263092 + (m[1] >>> 0 < h[1] >>> 0 ? 1 : 0) | 0, m[3] = m[3] + 1295307597 + (m[2] >>> 0 < h[2] >>> 0 ? 1 : 0) | 0, m[4] = m[4] + 3545052371 + (m[3] >>> 0 < h[3] >>> 0 ? 1 : 0) | 0, m[5] = m[5] + 886263092 + (m[4] >>> 0 < h[4] >>> 0 ? 1 : 0) | 0, m[6] = m[6] + 1295307597 + (m[5] >>> 0 < h[5] >>> 0 ? 1 : 0) | 0, m[7] = m[7] + 3545052371 + (m[6] >>> 0 < h[6] >>> 0 ? 1 : 0) | 0, this._b = m[7] >>> 0 < h[7] >>> 0 ? 1 : 0;
                    for (var e = 0; e < 8; e++) {
                      var x = y[e] + m[e], S = x & 65535, P = x >>> 16, O = ((S * S >>> 17) + S * P >>> 15) + P * P, T = ((x & 4294901760) * x | 0) + ((x & 65535) * x | 0);
                      d[e] = O ^ T;
                    }
                    y[0] = d[0] + (d[7] << 16 | d[7] >>> 16) + (d[6] << 16 | d[6] >>> 16) | 0, y[1] = d[1] + (d[0] << 8 | d[0] >>> 24) + d[7] | 0, y[2] = d[2] + (d[1] << 16 | d[1] >>> 16) + (d[0] << 16 | d[0] >>> 16) | 0, y[3] = d[3] + (d[2] << 8 | d[2] >>> 24) + d[1] | 0, y[4] = d[4] + (d[3] << 16 | d[3] >>> 16) + (d[2] << 16 | d[2] >>> 16) | 0, y[5] = d[5] + (d[4] << 8 | d[4] >>> 24) + d[3] | 0, y[6] = d[6] + (d[5] << 16 | d[5] >>> 16) + (d[4] << 16 | d[4] >>> 16) | 0, y[7] = d[7] + (d[6] << 8 | d[6] >>> 24) + d[5] | 0;
                  }
                  r.Rabbit = o._createHelper(i);
                }(), s.Rabbit;
              });
            }
          ),
          /***/
          97690: (
            /***/
            function(l, c, t) {
              t(10853), t(35054), function(s, r, a) {
                l.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              }(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.StreamCipher, f = r.algo, u = f.RC4 = o.extend({
                    _doReset: function() {
                      for (var p = this._key, y = p.words, m = p.sigBytes, e = this._S = [], x = 0; x < 256; x++)
                        e[x] = x;
                      for (var x = 0, S = 0; x < 256; x++) {
                        var P = x % m, O = y[P >>> 2] >>> 24 - P % 4 * 8 & 255;
                        S = (S + e[x] + O) % 256;
                        var T = e[x];
                        e[x] = e[S], e[S] = T;
                      }
                      this._i = this._j = 0;
                    },
                    _doProcessBlock: function(p, y) {
                      p[y] ^= h.call(this);
                    },
                    keySize: 256 / 32,
                    ivSize: 0
                  });
                  function h() {
                    for (var i = this._S, p = this._i, y = this._j, m = 0, e = 0; e < 4; e++) {
                      p = (p + 1) % 256, y = (y + i[p]) % 256;
                      var x = i[p];
                      i[p] = i[y], i[y] = x, m |= i[(i[p] + i[y]) % 256] << 24 - e * 8;
                    }
                    return this._i = p, this._j = y, m;
                  }
                  r.RC4 = o._createHelper(u);
                  var d = f.RC4Drop = u.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} drop The number of keystream words to drop. Default 192
                     */
                    cfg: u.cfg.extend({
                      drop: 192
                    }),
                    _doReset: function() {
                      u._doReset.call(this);
                      for (var p = this.cfg.drop; p > 0; p--)
                        h.call(this);
                    }
                  });
                  r.RC4Drop = o._createHelper(d);
                }(), s.RC4;
              });
            }
          ),
          /***/
          53601: (
            /***/
            function(l, c, t) {
              (function(s, r) {
                l.exports = r(t(53264));
              })(void 0, function(s) {
                /** @preserve
                (c) 2012 by CÃ©dric Mesnil. All rights reserved.
                	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
                	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                */
                return function(r) {
                  var a = s, o = a.lib, f = o.WordArray, u = o.Hasher, h = a.algo, d = f.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), i = f.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), p = f.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), y = f.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), m = f.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), e = f.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), x = h.RIPEMD160 = u.extend({
                    _doReset: function() {
                      this._hash = f.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function(b, R) {
                      for (var L = 0; L < 16; L++) {
                        var N = R + L, M = b[N];
                        b[N] = (M << 8 | M >>> 24) & 16711935 | (M << 24 | M >>> 8) & 4278255360;
                      }
                      var K = this._hash.words, ct = m.words, J = e.words, nt = d.words, yt = i.words, bt = p.words, Tt = y.words, It, Lt, zt, Q, gt, ht, st, xt, G, Ft;
                      ht = It = K[0], st = Lt = K[1], xt = zt = K[2], G = Q = K[3], Ft = gt = K[4];
                      for (var z, L = 0; L < 80; L += 1)
                        z = It + b[R + nt[L]] | 0, L < 16 ? z += S(Lt, zt, Q) + ct[0] : L < 32 ? z += P(Lt, zt, Q) + ct[1] : L < 48 ? z += O(Lt, zt, Q) + ct[2] : L < 64 ? z += T(Lt, zt, Q) + ct[3] : z += A(Lt, zt, Q) + ct[4], z = z | 0, z = E(z, bt[L]), z = z + gt | 0, It = gt, gt = Q, Q = E(zt, 10), zt = Lt, Lt = z, z = ht + b[R + yt[L]] | 0, L < 16 ? z += A(st, xt, G) + J[0] : L < 32 ? z += T(st, xt, G) + J[1] : L < 48 ? z += O(st, xt, G) + J[2] : L < 64 ? z += P(st, xt, G) + J[3] : z += S(st, xt, G) + J[4], z = z | 0, z = E(z, Tt[L]), z = z + Ft | 0, ht = Ft, Ft = G, G = E(xt, 10), xt = st, st = z;
                      z = K[1] + zt + G | 0, K[1] = K[2] + Q + Ft | 0, K[2] = K[3] + gt + ht | 0, K[3] = K[4] + It + st | 0, K[4] = K[0] + Lt + xt | 0, K[0] = z;
                    },
                    _doFinalize: function() {
                      var b = this._data, R = b.words, L = this._nDataBytes * 8, N = b.sigBytes * 8;
                      R[N >>> 5] |= 128 << 24 - N % 32, R[(N + 64 >>> 9 << 4) + 14] = (L << 8 | L >>> 24) & 16711935 | (L << 24 | L >>> 8) & 4278255360, b.sigBytes = (R.length + 1) * 4, this._process();
                      for (var M = this._hash, K = M.words, ct = 0; ct < 5; ct++) {
                        var J = K[ct];
                        K[ct] = (J << 8 | J >>> 24) & 16711935 | (J << 24 | J >>> 8) & 4278255360;
                      }
                      return M;
                    },
                    clone: function() {
                      var b = u.clone.call(this);
                      return b._hash = this._hash.clone(), b;
                    }
                  });
                  function S(D, b, R) {
                    return D ^ b ^ R;
                  }
                  function P(D, b, R) {
                    return D & b | ~D & R;
                  }
                  function O(D, b, R) {
                    return (D | ~b) ^ R;
                  }
                  function T(D, b, R) {
                    return D & R | b & ~R;
                  }
                  function A(D, b, R) {
                    return D ^ (b | ~R);
                  }
                  function E(D, b) {
                    return D << b | D >>> 32 - b;
                  }
                  a.RIPEMD160 = u._createHelper(x), a.HmacRIPEMD160 = u._createHmacHelper(x);
                }(), s.RIPEMD160;
              });
            }
          ),
          /***/
          61977: (
            /***/
            function(l, c, t) {
              (function(s, r) {
                l.exports = r(t(53264));
              })(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.WordArray, f = a.Hasher, u = r.algo, h = [], d = u.SHA1 = f.extend({
                    _doReset: function() {
                      this._hash = new o.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function(p, y) {
                      for (var m = this._hash.words, e = m[0], x = m[1], S = m[2], P = m[3], O = m[4], T = 0; T < 80; T++) {
                        if (T < 16)
                          h[T] = p[y + T] | 0;
                        else {
                          var A = h[T - 3] ^ h[T - 8] ^ h[T - 14] ^ h[T - 16];
                          h[T] = A << 1 | A >>> 31;
                        }
                        var E = (e << 5 | e >>> 27) + O + h[T];
                        T < 20 ? E += (x & S | ~x & P) + 1518500249 : T < 40 ? E += (x ^ S ^ P) + 1859775393 : T < 60 ? E += (x & S | x & P | S & P) - 1894007588 : E += (x ^ S ^ P) - 899497514, O = P, P = S, S = x << 30 | x >>> 2, x = e, e = E;
                      }
                      m[0] = m[0] + e | 0, m[1] = m[1] + x | 0, m[2] = m[2] + S | 0, m[3] = m[3] + P | 0, m[4] = m[4] + O | 0;
                    },
                    _doFinalize: function() {
                      var p = this._data, y = p.words, m = this._nDataBytes * 8, e = p.sigBytes * 8;
                      return y[e >>> 5] |= 128 << 24 - e % 32, y[(e + 64 >>> 9 << 4) + 14] = Math.floor(m / 4294967296), y[(e + 64 >>> 9 << 4) + 15] = m, p.sigBytes = y.length * 4, this._process(), this._hash;
                    },
                    clone: function() {
                      var p = f.clone.call(this);
                      return p._hash = this._hash.clone(), p;
                    }
                  });
                  r.SHA1 = f._createHelper(d), r.HmacSHA1 = f._createHmacHelper(d);
                }(), s.SHA1;
              });
            }
          ),
          /***/
          11707: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(85209));
              })(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.WordArray, f = r.algo, u = f.SHA256, h = f.SHA224 = u.extend({
                    _doReset: function() {
                      this._hash = new o.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
                    },
                    _doFinalize: function() {
                      var i = u._doFinalize.call(this);
                      return i.sigBytes -= 4, i;
                    }
                  });
                  r.SHA224 = u._createHelper(h), r.HmacSHA224 = u._createHmacHelper(h);
                }(), s.SHA224;
              });
            }
          ),
          /***/
          85209: (
            /***/
            function(l, c, t) {
              t(18821), function(s, r) {
                l.exports = r(t(53264));
              }(void 0, function(s) {
                return function(r) {
                  var a = s, o = a.lib, f = o.WordArray, u = o.Hasher, h = a.algo, d = [], i = [];
                  (function() {
                    function m(P) {
                      for (var O = r.sqrt(P), T = 2; T <= O; T++)
                        if (!(P % T))
                          return !1;
                      return !0;
                    }
                    function e(P) {
                      return (P - (P | 0)) * 4294967296 | 0;
                    }
                    for (var x = 2, S = 0; S < 64; )
                      m(x) && (S < 8 && (d[S] = e(r.pow(x, 0.5))), i[S] = e(r.pow(x, 0.3333333333333333)), S++), x++;
                  })();
                  var p = [], y = h.SHA256 = u.extend({
                    _doReset: function() {
                      this._hash = new f.init(d.slice(0));
                    },
                    _doProcessBlock: function(e, x) {
                      for (var S = this._hash.words, P = S[0], O = S[1], T = S[2], A = S[3], E = S[4], D = S[5], b = S[6], R = S[7], L = 0; L < 64; L++) {
                        if (L < 16)
                          p[L] = e[x + L] | 0;
                        else {
                          var N = p[L - 15], M = (N << 25 | N >>> 7) ^ (N << 14 | N >>> 18) ^ N >>> 3, K = p[L - 2], ct = (K << 15 | K >>> 17) ^ (K << 13 | K >>> 19) ^ K >>> 10;
                          p[L] = M + p[L - 7] + ct + p[L - 16];
                        }
                        var J = E & D ^ ~E & b, nt = P & O ^ P & T ^ O & T, yt = (P << 30 | P >>> 2) ^ (P << 19 | P >>> 13) ^ (P << 10 | P >>> 22), bt = (E << 26 | E >>> 6) ^ (E << 21 | E >>> 11) ^ (E << 7 | E >>> 25), Tt = R + bt + J + i[L] + p[L], It = yt + nt;
                        R = b, b = D, D = E, E = A + Tt | 0, A = T, T = O, O = P, P = Tt + It | 0;
                      }
                      S[0] = S[0] + P | 0, S[1] = S[1] + O | 0, S[2] = S[2] + T | 0, S[3] = S[3] + A | 0, S[4] = S[4] + E | 0, S[5] = S[5] + D | 0, S[6] = S[6] + b | 0, S[7] = S[7] + R | 0;
                    },
                    _doFinalize: function() {
                      var e = this._data, x = e.words, S = this._nDataBytes * 8, P = e.sigBytes * 8;
                      return x[P >>> 5] |= 128 << 24 - P % 32, x[(P + 64 >>> 9 << 4) + 14] = r.floor(S / 4294967296), x[(P + 64 >>> 9 << 4) + 15] = S, e.sigBytes = x.length * 4, this._process(), this._hash;
                    },
                    clone: function() {
                      var e = u.clone.call(this);
                      return e._hash = this._hash.clone(), e;
                    }
                  });
                  a.SHA256 = u._createHelper(y), a.HmacSHA256 = u._createHmacHelper(y);
                }(Math), s.SHA256;
              });
            }
          ),
          /***/
          11691: (
            /***/
            function(l, c, t) {
              t(18821), function(s, r, a) {
                l.exports = r(t(53264), t(23204));
              }(void 0, function(s) {
                return function(r) {
                  var a = s, o = a.lib, f = o.WordArray, u = o.Hasher, h = a.x64, d = h.Word, i = a.algo, p = [], y = [], m = [];
                  (function() {
                    for (var S = 1, P = 0, O = 0; O < 24; O++) {
                      p[S + 5 * P] = (O + 1) * (O + 2) / 2 % 64;
                      var T = P % 5, A = (2 * S + 3 * P) % 5;
                      S = T, P = A;
                    }
                    for (var S = 0; S < 5; S++)
                      for (var P = 0; P < 5; P++)
                        y[S + 5 * P] = P + (2 * S + 3 * P) % 5 * 5;
                    for (var E = 1, D = 0; D < 24; D++) {
                      for (var b = 0, R = 0, L = 0; L < 7; L++) {
                        if (E & 1) {
                          var N = (1 << L) - 1;
                          N < 32 ? R ^= 1 << N : b ^= 1 << N - 32;
                        }
                        E & 128 ? E = E << 1 ^ 113 : E <<= 1;
                      }
                      m[D] = d.create(b, R);
                    }
                  })();
                  var e = [];
                  (function() {
                    for (var S = 0; S < 25; S++)
                      e[S] = d.create();
                  })();
                  var x = i.SHA3 = u.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} outputLength
                     *   The desired number of bits in the output hash.
                     *   Only values permitted are: 224, 256, 384, 512.
                     *   Default: 512
                     */
                    cfg: u.cfg.extend({
                      outputLength: 512
                    }),
                    _doReset: function() {
                      for (var P = this._state = [], O = 0; O < 25; O++)
                        P[O] = new d.init();
                      this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
                    },
                    _doProcessBlock: function(P, O) {
                      for (var T = this._state, A = this.blockSize / 2, E = 0; E < A; E++) {
                        var D = P[O + 2 * E], b = P[O + 2 * E + 1];
                        D = (D << 8 | D >>> 24) & 16711935 | (D << 24 | D >>> 8) & 4278255360, b = (b << 8 | b >>> 24) & 16711935 | (b << 24 | b >>> 8) & 4278255360;
                        var R = T[E];
                        R.high ^= b, R.low ^= D;
                      }
                      for (var L = 0; L < 24; L++) {
                        for (var N = 0; N < 5; N++) {
                          for (var M = 0, K = 0, ct = 0; ct < 5; ct++) {
                            var R = T[N + 5 * ct];
                            M ^= R.high, K ^= R.low;
                          }
                          var J = e[N];
                          J.high = M, J.low = K;
                        }
                        for (var N = 0; N < 5; N++)
                          for (var nt = e[(N + 4) % 5], yt = e[(N + 1) % 5], bt = yt.high, Tt = yt.low, M = nt.high ^ (bt << 1 | Tt >>> 31), K = nt.low ^ (Tt << 1 | bt >>> 31), ct = 0; ct < 5; ct++) {
                            var R = T[N + 5 * ct];
                            R.high ^= M, R.low ^= K;
                          }
                        for (var It = 1; It < 25; It++) {
                          var M, K, R = T[It], Lt = R.high, zt = R.low, Q = p[It];
                          Q < 32 ? (M = Lt << Q | zt >>> 32 - Q, K = zt << Q | Lt >>> 32 - Q) : (M = zt << Q - 32 | Lt >>> 64 - Q, K = Lt << Q - 32 | zt >>> 64 - Q);
                          var gt = e[y[It]];
                          gt.high = M, gt.low = K;
                        }
                        var ht = e[0], st = T[0];
                        ht.high = st.high, ht.low = st.low;
                        for (var N = 0; N < 5; N++)
                          for (var ct = 0; ct < 5; ct++) {
                            var It = N + 5 * ct, R = T[It], xt = e[It], G = e[(N + 1) % 5 + 5 * ct], Ft = e[(N + 2) % 5 + 5 * ct];
                            R.high = xt.high ^ ~G.high & Ft.high, R.low = xt.low ^ ~G.low & Ft.low;
                          }
                        var R = T[0], z = m[L];
                        R.high ^= z.high, R.low ^= z.low;
                      }
                    },
                    _doFinalize: function() {
                      var P = this._data, O = P.words;
                      this._nDataBytes * 8;
                      var T = P.sigBytes * 8, A = this.blockSize * 32;
                      O[T >>> 5] |= 1 << 24 - T % 32, O[(r.ceil((T + 1) / A) * A >>> 5) - 1] |= 128, P.sigBytes = O.length * 4, this._process();
                      for (var E = this._state, D = this.cfg.outputLength / 8, b = D / 8, R = [], L = 0; L < b; L++) {
                        var N = E[L], M = N.high, K = N.low;
                        M = (M << 8 | M >>> 24) & 16711935 | (M << 24 | M >>> 8) & 4278255360, K = (K << 8 | K >>> 24) & 16711935 | (K << 24 | K >>> 8) & 4278255360, R.push(K), R.push(M);
                      }
                      return new f.init(R, D);
                    },
                    clone: function() {
                      for (var P = u.clone.call(this), O = P._state = this._state.slice(0), T = 0; T < 25; T++)
                        O[T] = O[T].clone();
                      return P;
                    }
                  });
                  a.SHA3 = u._createHelper(x), a.HmacSHA3 = u._createHmacHelper(x);
                }(Math), s.SHA3;
              });
            }
          ),
          /***/
          21410: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(23204), t(20595));
              })(void 0, function(s) {
                return function() {
                  var r = s, a = r.x64, o = a.Word, f = a.WordArray, u = r.algo, h = u.SHA512, d = u.SHA384 = h.extend({
                    _doReset: function() {
                      this._hash = new f.init([new o.init(3418070365, 3238371032), new o.init(1654270250, 914150663), new o.init(2438529370, 812702999), new o.init(355462360, 4144912697), new o.init(1731405415, 4290775857), new o.init(2394180231, 1750603025), new o.init(3675008525, 1694076839), new o.init(1203062813, 3204075428)]);
                    },
                    _doFinalize: function() {
                      var p = h._doFinalize.call(this);
                      return p.sigBytes -= 16, p;
                    }
                  });
                  r.SHA384 = h._createHelper(d), r.HmacSHA384 = h._createHmacHelper(d);
                }(), s.SHA384;
              });
            }
          ),
          /***/
          20595: (
            /***/
            function(l, c, t) {
              (function(s, r, a) {
                l.exports = r(t(53264), t(23204));
              })(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.Hasher, f = r.x64, u = f.Word, h = f.WordArray, d = r.algo;
                  function i() {
                    return u.create.apply(u, arguments);
                  }
                  var p = [i(1116352408, 3609767458), i(1899447441, 602891725), i(3049323471, 3964484399), i(3921009573, 2173295548), i(961987163, 4081628472), i(1508970993, 3053834265), i(2453635748, 2937671579), i(2870763221, 3664609560), i(3624381080, 2734883394), i(310598401, 1164996542), i(607225278, 1323610764), i(1426881987, 3590304994), i(1925078388, 4068182383), i(2162078206, 991336113), i(2614888103, 633803317), i(3248222580, 3479774868), i(3835390401, 2666613458), i(4022224774, 944711139), i(264347078, 2341262773), i(604807628, 2007800933), i(770255983, 1495990901), i(1249150122, 1856431235), i(1555081692, 3175218132), i(1996064986, 2198950837), i(2554220882, 3999719339), i(2821834349, 766784016), i(2952996808, 2566594879), i(3210313671, 3203337956), i(3336571891, 1034457026), i(3584528711, 2466948901), i(113926993, 3758326383), i(338241895, 168717936), i(666307205, 1188179964), i(773529912, 1546045734), i(1294757372, 1522805485), i(1396182291, 2643833823), i(1695183700, 2343527390), i(1986661051, 1014477480), i(2177026350, 1206759142), i(2456956037, 344077627), i(2730485921, 1290863460), i(2820302411, 3158454273), i(3259730800, 3505952657), i(3345764771, 106217008), i(3516065817, 3606008344), i(3600352804, 1432725776), i(4094571909, 1467031594), i(275423344, 851169720), i(430227734, 3100823752), i(506948616, 1363258195), i(659060556, 3750685593), i(883997877, 3785050280), i(958139571, 3318307427), i(1322822218, 3812723403), i(1537002063, 2003034995), i(1747873779, 3602036899), i(1955562222, 1575990012), i(2024104815, 1125592928), i(2227730452, 2716904306), i(2361852424, 442776044), i(2428436474, 593698344), i(2756734187, 3733110249), i(3204031479, 2999351573), i(3329325298, 3815920427), i(3391569614, 3928383900), i(3515267271, 566280711), i(3940187606, 3454069534), i(4118630271, 4000239992), i(116418474, 1914138554), i(174292421, 2731055270), i(289380356, 3203993006), i(460393269, 320620315), i(685471733, 587496836), i(852142971, 1086792851), i(1017036298, 365543100), i(1126000580, 2618297676), i(1288033470, 3409855158), i(1501505948, 4234509866), i(1607167915, 987167468), i(1816402316, 1246189591)], y = [];
                  (function() {
                    for (var e = 0; e < 80; e++)
                      y[e] = i();
                  })();
                  var m = d.SHA512 = o.extend({
                    _doReset: function() {
                      this._hash = new h.init([new u.init(1779033703, 4089235720), new u.init(3144134277, 2227873595), new u.init(1013904242, 4271175723), new u.init(2773480762, 1595750129), new u.init(1359893119, 2917565137), new u.init(2600822924, 725511199), new u.init(528734635, 4215389547), new u.init(1541459225, 327033209)]);
                    },
                    _doProcessBlock: function(x, S) {
                      for (var P = this._hash.words, O = P[0], T = P[1], A = P[2], E = P[3], D = P[4], b = P[5], R = P[6], L = P[7], N = O.high, M = O.low, K = T.high, ct = T.low, J = A.high, nt = A.low, yt = E.high, bt = E.low, Tt = D.high, It = D.low, Lt = b.high, zt = b.low, Q = R.high, gt = R.low, ht = L.high, st = L.low, xt = N, G = M, Ft = K, z = ct, C = J, k = nt, V = yt, ot = bt, et = Tt, tt = It, At = Lt, Nt = zt, Kt = Q, Vt = gt, Ot = ht, ie = st, Ae = 0; Ae < 80; Ae++) {
                        var be, de, Se = y[Ae];
                        if (Ae < 16)
                          de = Se.high = x[S + Ae * 2] | 0, be = Se.low = x[S + Ae * 2 + 1] | 0;
                        else {
                          var Wt = y[Ae - 15], _t = Wt.high, ce = Wt.low, pe = (_t >>> 1 | ce << 31) ^ (_t >>> 8 | ce << 24) ^ _t >>> 7, we = (ce >>> 1 | _t << 31) ^ (ce >>> 8 | _t << 24) ^ (ce >>> 7 | _t << 25), Be = y[Ae - 2], Ie = Be.high, Dt = Be.low, ue = (Ie >>> 19 | Dt << 13) ^ (Ie << 3 | Dt >>> 29) ^ Ie >>> 6, lt = (Dt >>> 19 | Ie << 13) ^ (Dt << 3 | Ie >>> 29) ^ (Dt >>> 6 | Ie << 26), Y = y[Ae - 7], j = Y.high, wt = Y.low, it = y[Ae - 16], Ht = it.high, te = it.low;
                          be = we + wt, de = pe + j + (be >>> 0 < we >>> 0 ? 1 : 0), be = be + lt, de = de + ue + (be >>> 0 < lt >>> 0 ? 1 : 0), be = be + te, de = de + Ht + (be >>> 0 < te >>> 0 ? 1 : 0), Se.high = de, Se.low = be;
                        }
                        var _ = et & At ^ ~et & Kt, Qt = tt & Nt ^ ~tt & Vt, ee = xt & Ft ^ xt & C ^ Ft & C, Et = G & z ^ G & k ^ z & k, jt = (xt >>> 28 | G << 4) ^ (xt << 30 | G >>> 2) ^ (xt << 25 | G >>> 7), le = (G >>> 28 | xt << 4) ^ (G << 30 | xt >>> 2) ^ (G << 25 | xt >>> 7), Ne = (et >>> 14 | tt << 18) ^ (et >>> 18 | tt << 14) ^ (et << 23 | tt >>> 9), Oe = (tt >>> 14 | et << 18) ^ (tt >>> 18 | et << 14) ^ (tt << 23 | et >>> 9), Ue = p[Ae], Me = Ue.high, on = Ue.low, er = ie + Oe, Ye = Ot + Ne + (er >>> 0 < ie >>> 0 ? 1 : 0), er = er + Qt, Ye = Ye + _ + (er >>> 0 < Qt >>> 0 ? 1 : 0), er = er + on, Ye = Ye + Me + (er >>> 0 < on >>> 0 ? 1 : 0), er = er + be, Ye = Ye + de + (er >>> 0 < be >>> 0 ? 1 : 0), Cr = le + Et, Pr = jt + ee + (Cr >>> 0 < le >>> 0 ? 1 : 0);
                        Ot = Kt, ie = Vt, Kt = At, Vt = Nt, At = et, Nt = tt, tt = ot + er | 0, et = V + Ye + (tt >>> 0 < ot >>> 0 ? 1 : 0) | 0, V = C, ot = k, C = Ft, k = z, Ft = xt, z = G, G = er + Cr | 0, xt = Ye + Pr + (G >>> 0 < er >>> 0 ? 1 : 0) | 0;
                      }
                      M = O.low = M + G, O.high = N + xt + (M >>> 0 < G >>> 0 ? 1 : 0), ct = T.low = ct + z, T.high = K + Ft + (ct >>> 0 < z >>> 0 ? 1 : 0), nt = A.low = nt + k, A.high = J + C + (nt >>> 0 < k >>> 0 ? 1 : 0), bt = E.low = bt + ot, E.high = yt + V + (bt >>> 0 < ot >>> 0 ? 1 : 0), It = D.low = It + tt, D.high = Tt + et + (It >>> 0 < tt >>> 0 ? 1 : 0), zt = b.low = zt + Nt, b.high = Lt + At + (zt >>> 0 < Nt >>> 0 ? 1 : 0), gt = R.low = gt + Vt, R.high = Q + Kt + (gt >>> 0 < Vt >>> 0 ? 1 : 0), st = L.low = st + ie, L.high = ht + Ot + (st >>> 0 < ie >>> 0 ? 1 : 0);
                    },
                    _doFinalize: function() {
                      var x = this._data, S = x.words, P = this._nDataBytes * 8, O = x.sigBytes * 8;
                      S[O >>> 5] |= 128 << 24 - O % 32, S[(O + 128 >>> 10 << 5) + 30] = Math.floor(P / 4294967296), S[(O + 128 >>> 10 << 5) + 31] = P, x.sigBytes = S.length * 4, this._process();
                      var T = this._hash.toX32();
                      return T;
                    },
                    clone: function() {
                      var x = o.clone.call(this);
                      return x._hash = this._hash.clone(), x;
                    },
                    blockSize: 1024 / 32
                  });
                  r.SHA512 = o._createHelper(m), r.HmacSHA512 = o._createHmacHelper(m);
                }(), s.SHA512;
              });
            }
          ),
          /***/
          77059: (
            /***/
            function(l, c, t) {
              t(18821), function(s, r, a) {
                l.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              }(void 0, function(s) {
                return function() {
                  var r = s, a = r.lib, o = a.WordArray, f = a.BlockCipher, u = r.algo, h = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], d = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], i = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], p = [{
                    0: 8421888,
                    268435456: 32768,
                    536870912: 8421378,
                    805306368: 2,
                    1073741824: 512,
                    1342177280: 8421890,
                    1610612736: 8389122,
                    1879048192: 8388608,
                    2147483648: 514,
                    2415919104: 8389120,
                    2684354560: 33280,
                    2952790016: 8421376,
                    3221225472: 32770,
                    3489660928: 8388610,
                    3758096384: 0,
                    4026531840: 33282,
                    134217728: 0,
                    402653184: 8421890,
                    671088640: 33282,
                    939524096: 32768,
                    1207959552: 8421888,
                    1476395008: 512,
                    1744830464: 8421378,
                    2013265920: 2,
                    2281701376: 8389120,
                    2550136832: 33280,
                    2818572288: 8421376,
                    3087007744: 8389122,
                    3355443200: 8388610,
                    3623878656: 32770,
                    3892314112: 514,
                    4160749568: 8388608,
                    1: 32768,
                    268435457: 2,
                    536870913: 8421888,
                    805306369: 8388608,
                    1073741825: 8421378,
                    1342177281: 33280,
                    1610612737: 512,
                    1879048193: 8389122,
                    2147483649: 8421890,
                    2415919105: 8421376,
                    2684354561: 8388610,
                    2952790017: 33282,
                    3221225473: 514,
                    3489660929: 8389120,
                    3758096385: 32770,
                    4026531841: 0,
                    134217729: 8421890,
                    402653185: 8421376,
                    671088641: 8388608,
                    939524097: 512,
                    1207959553: 32768,
                    1476395009: 8388610,
                    1744830465: 2,
                    2013265921: 33282,
                    2281701377: 32770,
                    2550136833: 8389122,
                    2818572289: 514,
                    3087007745: 8421888,
                    3355443201: 8389120,
                    3623878657: 0,
                    3892314113: 33280,
                    4160749569: 8421378
                  }, {
                    0: 1074282512,
                    16777216: 16384,
                    33554432: 524288,
                    50331648: 1074266128,
                    67108864: 1073741840,
                    83886080: 1074282496,
                    100663296: 1073758208,
                    117440512: 16,
                    134217728: 540672,
                    150994944: 1073758224,
                    167772160: 1073741824,
                    184549376: 540688,
                    201326592: 524304,
                    218103808: 0,
                    234881024: 16400,
                    251658240: 1074266112,
                    8388608: 1073758208,
                    25165824: 540688,
                    41943040: 16,
                    58720256: 1073758224,
                    75497472: 1074282512,
                    92274688: 1073741824,
                    109051904: 524288,
                    125829120: 1074266128,
                    142606336: 524304,
                    159383552: 0,
                    176160768: 16384,
                    192937984: 1074266112,
                    209715200: 1073741840,
                    226492416: 540672,
                    243269632: 1074282496,
                    260046848: 16400,
                    268435456: 0,
                    285212672: 1074266128,
                    301989888: 1073758224,
                    318767104: 1074282496,
                    335544320: 1074266112,
                    352321536: 16,
                    369098752: 540688,
                    385875968: 16384,
                    402653184: 16400,
                    419430400: 524288,
                    436207616: 524304,
                    452984832: 1073741840,
                    469762048: 540672,
                    486539264: 1073758208,
                    503316480: 1073741824,
                    520093696: 1074282512,
                    276824064: 540688,
                    293601280: 524288,
                    310378496: 1074266112,
                    327155712: 16384,
                    343932928: 1073758208,
                    360710144: 1074282512,
                    377487360: 16,
                    394264576: 1073741824,
                    411041792: 1074282496,
                    427819008: 1073741840,
                    444596224: 1073758224,
                    461373440: 524304,
                    478150656: 0,
                    494927872: 16400,
                    511705088: 1074266128,
                    528482304: 540672
                  }, {
                    0: 260,
                    1048576: 0,
                    2097152: 67109120,
                    3145728: 65796,
                    4194304: 65540,
                    5242880: 67108868,
                    6291456: 67174660,
                    7340032: 67174400,
                    8388608: 67108864,
                    9437184: 67174656,
                    10485760: 65792,
                    11534336: 67174404,
                    12582912: 67109124,
                    13631488: 65536,
                    14680064: 4,
                    15728640: 256,
                    524288: 67174656,
                    1572864: 67174404,
                    2621440: 0,
                    3670016: 67109120,
                    4718592: 67108868,
                    5767168: 65536,
                    6815744: 65540,
                    7864320: 260,
                    8912896: 4,
                    9961472: 256,
                    11010048: 67174400,
                    12058624: 65796,
                    13107200: 65792,
                    14155776: 67109124,
                    15204352: 67174660,
                    16252928: 67108864,
                    16777216: 67174656,
                    17825792: 65540,
                    18874368: 65536,
                    19922944: 67109120,
                    20971520: 256,
                    22020096: 67174660,
                    23068672: 67108868,
                    24117248: 0,
                    25165824: 67109124,
                    26214400: 67108864,
                    27262976: 4,
                    28311552: 65792,
                    29360128: 67174400,
                    30408704: 260,
                    31457280: 65796,
                    32505856: 67174404,
                    17301504: 67108864,
                    18350080: 260,
                    19398656: 67174656,
                    20447232: 0,
                    21495808: 65540,
                    22544384: 67109120,
                    23592960: 256,
                    24641536: 67174404,
                    25690112: 65536,
                    26738688: 67174660,
                    27787264: 65796,
                    28835840: 67108868,
                    29884416: 67109124,
                    30932992: 67174400,
                    31981568: 4,
                    33030144: 65792
                  }, {
                    0: 2151682048,
                    65536: 2147487808,
                    131072: 4198464,
                    196608: 2151677952,
                    262144: 0,
                    327680: 4198400,
                    393216: 2147483712,
                    458752: 4194368,
                    524288: 2147483648,
                    589824: 4194304,
                    655360: 64,
                    720896: 2147487744,
                    786432: 2151678016,
                    851968: 4160,
                    917504: 4096,
                    983040: 2151682112,
                    32768: 2147487808,
                    98304: 64,
                    163840: 2151678016,
                    229376: 2147487744,
                    294912: 4198400,
                    360448: 2151682112,
                    425984: 0,
                    491520: 2151677952,
                    557056: 4096,
                    622592: 2151682048,
                    688128: 4194304,
                    753664: 4160,
                    819200: 2147483648,
                    884736: 4194368,
                    950272: 4198464,
                    1015808: 2147483712,
                    1048576: 4194368,
                    1114112: 4198400,
                    1179648: 2147483712,
                    1245184: 0,
                    1310720: 4160,
                    1376256: 2151678016,
                    1441792: 2151682048,
                    1507328: 2147487808,
                    1572864: 2151682112,
                    1638400: 2147483648,
                    1703936: 2151677952,
                    1769472: 4198464,
                    1835008: 2147487744,
                    1900544: 4194304,
                    1966080: 64,
                    2031616: 4096,
                    1081344: 2151677952,
                    1146880: 2151682112,
                    1212416: 0,
                    1277952: 4198400,
                    1343488: 4194368,
                    1409024: 2147483648,
                    1474560: 2147487808,
                    1540096: 64,
                    1605632: 2147483712,
                    1671168: 4096,
                    1736704: 2147487744,
                    1802240: 2151678016,
                    1867776: 4160,
                    1933312: 2151682048,
                    1998848: 4194304,
                    2064384: 4198464
                  }, {
                    0: 128,
                    4096: 17039360,
                    8192: 262144,
                    12288: 536870912,
                    16384: 537133184,
                    20480: 16777344,
                    24576: 553648256,
                    28672: 262272,
                    32768: 16777216,
                    36864: 537133056,
                    40960: 536871040,
                    45056: 553910400,
                    49152: 553910272,
                    53248: 0,
                    57344: 17039488,
                    61440: 553648128,
                    2048: 17039488,
                    6144: 553648256,
                    10240: 128,
                    14336: 17039360,
                    18432: 262144,
                    22528: 537133184,
                    26624: 553910272,
                    30720: 536870912,
                    34816: 537133056,
                    38912: 0,
                    43008: 553910400,
                    47104: 16777344,
                    51200: 536871040,
                    55296: 553648128,
                    59392: 16777216,
                    63488: 262272,
                    65536: 262144,
                    69632: 128,
                    73728: 536870912,
                    77824: 553648256,
                    81920: 16777344,
                    86016: 553910272,
                    90112: 537133184,
                    94208: 16777216,
                    98304: 553910400,
                    102400: 553648128,
                    106496: 17039360,
                    110592: 537133056,
                    114688: 262272,
                    118784: 536871040,
                    122880: 0,
                    126976: 17039488,
                    67584: 553648256,
                    71680: 16777216,
                    75776: 17039360,
                    79872: 537133184,
                    83968: 536870912,
                    88064: 17039488,
                    92160: 128,
                    96256: 553910272,
                    100352: 262272,
                    104448: 553910400,
                    108544: 0,
                    112640: 553648128,
                    116736: 16777344,
                    120832: 262144,
                    124928: 537133056,
                    129024: 536871040
                  }, {
                    0: 268435464,
                    256: 8192,
                    512: 270532608,
                    768: 270540808,
                    1024: 268443648,
                    1280: 2097152,
                    1536: 2097160,
                    1792: 268435456,
                    2048: 0,
                    2304: 268443656,
                    2560: 2105344,
                    2816: 8,
                    3072: 270532616,
                    3328: 2105352,
                    3584: 8200,
                    3840: 270540800,
                    128: 270532608,
                    384: 270540808,
                    640: 8,
                    896: 2097152,
                    1152: 2105352,
                    1408: 268435464,
                    1664: 268443648,
                    1920: 8200,
                    2176: 2097160,
                    2432: 8192,
                    2688: 268443656,
                    2944: 270532616,
                    3200: 0,
                    3456: 270540800,
                    3712: 2105344,
                    3968: 268435456,
                    4096: 268443648,
                    4352: 270532616,
                    4608: 270540808,
                    4864: 8200,
                    5120: 2097152,
                    5376: 268435456,
                    5632: 268435464,
                    5888: 2105344,
                    6144: 2105352,
                    6400: 0,
                    6656: 8,
                    6912: 270532608,
                    7168: 8192,
                    7424: 268443656,
                    7680: 270540800,
                    7936: 2097160,
                    4224: 8,
                    4480: 2105344,
                    4736: 2097152,
                    4992: 268435464,
                    5248: 268443648,
                    5504: 8200,
                    5760: 270540808,
                    6016: 270532608,
                    6272: 270540800,
                    6528: 270532616,
                    6784: 8192,
                    7040: 2105352,
                    7296: 2097160,
                    7552: 0,
                    7808: 268435456,
                    8064: 268443656
                  }, {
                    0: 1048576,
                    16: 33555457,
                    32: 1024,
                    48: 1049601,
                    64: 34604033,
                    80: 0,
                    96: 1,
                    112: 34603009,
                    128: 33555456,
                    144: 1048577,
                    160: 33554433,
                    176: 34604032,
                    192: 34603008,
                    208: 1025,
                    224: 1049600,
                    240: 33554432,
                    8: 34603009,
                    24: 0,
                    40: 33555457,
                    56: 34604032,
                    72: 1048576,
                    88: 33554433,
                    104: 33554432,
                    120: 1025,
                    136: 1049601,
                    152: 33555456,
                    168: 34603008,
                    184: 1048577,
                    200: 1024,
                    216: 34604033,
                    232: 1,
                    248: 1049600,
                    256: 33554432,
                    272: 1048576,
                    288: 33555457,
                    304: 34603009,
                    320: 1048577,
                    336: 33555456,
                    352: 34604032,
                    368: 1049601,
                    384: 1025,
                    400: 34604033,
                    416: 1049600,
                    432: 1,
                    448: 0,
                    464: 34603008,
                    480: 33554433,
                    496: 1024,
                    264: 1049600,
                    280: 33555457,
                    296: 34603009,
                    312: 1,
                    328: 33554432,
                    344: 1048576,
                    360: 1025,
                    376: 34604032,
                    392: 33554433,
                    408: 34603008,
                    424: 0,
                    440: 34604033,
                    456: 1049601,
                    472: 1024,
                    488: 33555456,
                    504: 1048577
                  }, {
                    0: 134219808,
                    1: 131072,
                    2: 134217728,
                    3: 32,
                    4: 131104,
                    5: 134350880,
                    6: 134350848,
                    7: 2048,
                    8: 134348800,
                    9: 134219776,
                    10: 133120,
                    11: 134348832,
                    12: 2080,
                    13: 0,
                    14: 134217760,
                    15: 133152,
                    2147483648: 2048,
                    2147483649: 134350880,
                    2147483650: 134219808,
                    2147483651: 134217728,
                    2147483652: 134348800,
                    2147483653: 133120,
                    2147483654: 133152,
                    2147483655: 32,
                    2147483656: 134217760,
                    2147483657: 2080,
                    2147483658: 131104,
                    2147483659: 134350848,
                    2147483660: 0,
                    2147483661: 134348832,
                    2147483662: 134219776,
                    2147483663: 131072,
                    16: 133152,
                    17: 134350848,
                    18: 32,
                    19: 2048,
                    20: 134219776,
                    21: 134217760,
                    22: 134348832,
                    23: 131072,
                    24: 0,
                    25: 131104,
                    26: 134348800,
                    27: 134219808,
                    28: 134350880,
                    29: 133120,
                    30: 2080,
                    31: 134217728,
                    2147483664: 131072,
                    2147483665: 2048,
                    2147483666: 134348832,
                    2147483667: 133152,
                    2147483668: 32,
                    2147483669: 134348800,
                    2147483670: 134217728,
                    2147483671: 134219808,
                    2147483672: 134350880,
                    2147483673: 134217760,
                    2147483674: 134219776,
                    2147483675: 0,
                    2147483676: 133120,
                    2147483677: 2080,
                    2147483678: 131104,
                    2147483679: 134350848
                  }], y = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], m = u.DES = f.extend({
                    _doReset: function() {
                      for (var O = this._key, T = O.words, A = [], E = 0; E < 56; E++) {
                        var D = h[E] - 1;
                        A[E] = T[D >>> 5] >>> 31 - D % 32 & 1;
                      }
                      for (var b = this._subKeys = [], R = 0; R < 16; R++) {
                        for (var L = b[R] = [], N = i[R], E = 0; E < 24; E++)
                          L[E / 6 | 0] |= A[(d[E] - 1 + N) % 28] << 31 - E % 6, L[4 + (E / 6 | 0)] |= A[28 + (d[E + 24] - 1 + N) % 28] << 31 - E % 6;
                        L[0] = L[0] << 1 | L[0] >>> 31;
                        for (var E = 1; E < 7; E++)
                          L[E] = L[E] >>> (E - 1) * 4 + 3;
                        L[7] = L[7] << 5 | L[7] >>> 27;
                      }
                      for (var M = this._invSubKeys = [], E = 0; E < 16; E++)
                        M[E] = b[15 - E];
                    },
                    encryptBlock: function(O, T) {
                      this._doCryptBlock(O, T, this._subKeys);
                    },
                    decryptBlock: function(O, T) {
                      this._doCryptBlock(O, T, this._invSubKeys);
                    },
                    _doCryptBlock: function(O, T, A) {
                      this._lBlock = O[T], this._rBlock = O[T + 1], e.call(this, 4, 252645135), e.call(this, 16, 65535), x.call(this, 2, 858993459), x.call(this, 8, 16711935), e.call(this, 1, 1431655765);
                      for (var E = 0; E < 16; E++) {
                        for (var D = A[E], b = this._lBlock, R = this._rBlock, L = 0, N = 0; N < 8; N++)
                          L |= p[N][((R ^ D[N]) & y[N]) >>> 0];
                        this._lBlock = R, this._rBlock = b ^ L;
                      }
                      var M = this._lBlock;
                      this._lBlock = this._rBlock, this._rBlock = M, e.call(this, 1, 1431655765), x.call(this, 8, 16711935), x.call(this, 2, 858993459), e.call(this, 16, 65535), e.call(this, 4, 252645135), O[T] = this._lBlock, O[T + 1] = this._rBlock;
                    },
                    keySize: 64 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                  });
                  function e(P, O) {
                    var T = (this._lBlock >>> P ^ this._rBlock) & O;
                    this._rBlock ^= T, this._lBlock ^= T << P;
                  }
                  function x(P, O) {
                    var T = (this._rBlock >>> P ^ this._lBlock) & O;
                    this._lBlock ^= T, this._rBlock ^= T << P;
                  }
                  r.DES = f._createHelper(m);
                  var S = u.TripleDES = f.extend({
                    _doReset: function() {
                      var O = this._key, T = O.words;
                      if (T.length !== 2 && T.length !== 4 && T.length < 6)
                        throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                      var A = T.slice(0, 2), E = T.length < 4 ? T.slice(0, 2) : T.slice(2, 4), D = T.length < 6 ? T.slice(0, 2) : T.slice(4, 6);
                      this._des1 = m.createEncryptor(o.create(A)), this._des2 = m.createEncryptor(o.create(E)), this._des3 = m.createEncryptor(o.create(D));
                    },
                    encryptBlock: function(O, T) {
                      this._des1.encryptBlock(O, T), this._des2.decryptBlock(O, T), this._des3.encryptBlock(O, T);
                    },
                    decryptBlock: function(O, T) {
                      this._des3.decryptBlock(O, T), this._des2.encryptBlock(O, T), this._des1.decryptBlock(O, T);
                    },
                    keySize: 192 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                  });
                  r.TripleDES = f._createHelper(S);
                }(), s.TripleDES;
              });
            }
          ),
          /***/
          23204: (
            /***/
            function(l, c, t) {
              t(18821), function(s, r) {
                l.exports = r(t(53264));
              }(void 0, function(s) {
                return function(r) {
                  var a = s, o = a.lib, f = o.Base, u = o.WordArray, h = a.x64 = {};
                  h.Word = f.extend({
                    /**
                     * Initializes a newly created 64-bit word.
                     *
                     * @param {number} high The high 32 bits.
                     * @param {number} low The low 32 bits.
                     *
                     * @example
                     *
                     *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
                     */
                    init: function(i, p) {
                      this.high = i, this.low = p;
                    }
                    /**
                     * Bitwise NOTs this word.
                     *
                     * @return {X64Word} A new x64-Word object after negating.
                     *
                     * @example
                     *
                     *     var negated = x64Word.not();
                     */
                    // not: function () {
                    // var high = ~this.high;
                    // var low = ~this.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise ANDs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to AND with this word.
                     *
                     * @return {X64Word} A new x64-Word object after ANDing.
                     *
                     * @example
                     *
                     *     var anded = x64Word.and(anotherX64Word);
                     */
                    // and: function (word) {
                    // var high = this.high & word.high;
                    // var low = this.low & word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise ORs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to OR with this word.
                     *
                     * @return {X64Word} A new x64-Word object after ORing.
                     *
                     * @example
                     *
                     *     var ored = x64Word.or(anotherX64Word);
                     */
                    // or: function (word) {
                    // var high = this.high | word.high;
                    // var low = this.low | word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise XORs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to XOR with this word.
                     *
                     * @return {X64Word} A new x64-Word object after XORing.
                     *
                     * @example
                     *
                     *     var xored = x64Word.xor(anotherX64Word);
                     */
                    // xor: function (word) {
                    // var high = this.high ^ word.high;
                    // var low = this.low ^ word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Shifts this word n bits to the left.
                     *
                     * @param {number} n The number of bits to shift.
                     *
                     * @return {X64Word} A new x64-Word object after shifting.
                     *
                     * @example
                     *
                     *     var shifted = x64Word.shiftL(25);
                     */
                    // shiftL: function (n) {
                    // if (n < 32) {
                    // var high = (this.high << n) | (this.low >>> (32 - n));
                    // var low = this.low << n;
                    // } else {
                    // var high = this.low << (n - 32);
                    // var low = 0;
                    // }
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Shifts this word n bits to the right.
                     *
                     * @param {number} n The number of bits to shift.
                     *
                     * @return {X64Word} A new x64-Word object after shifting.
                     *
                     * @example
                     *
                     *     var shifted = x64Word.shiftR(7);
                     */
                    // shiftR: function (n) {
                    // if (n < 32) {
                    // var low = (this.low >>> n) | (this.high << (32 - n));
                    // var high = this.high >>> n;
                    // } else {
                    // var low = this.high >>> (n - 32);
                    // var high = 0;
                    // }
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Rotates this word n bits to the left.
                     *
                     * @param {number} n The number of bits to rotate.
                     *
                     * @return {X64Word} A new x64-Word object after rotating.
                     *
                     * @example
                     *
                     *     var rotated = x64Word.rotL(25);
                     */
                    // rotL: function (n) {
                    // return this.shiftL(n).or(this.shiftR(64 - n));
                    // },
                    /**
                     * Rotates this word n bits to the right.
                     *
                     * @param {number} n The number of bits to rotate.
                     *
                     * @return {X64Word} A new x64-Word object after rotating.
                     *
                     * @example
                     *
                     *     var rotated = x64Word.rotR(7);
                     */
                    // rotR: function (n) {
                    // return this.shiftR(n).or(this.shiftL(64 - n));
                    // },
                    /**
                     * Adds this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to add with this word.
                     *
                     * @return {X64Word} A new x64-Word object after adding.
                     *
                     * @example
                     *
                     *     var added = x64Word.add(anotherX64Word);
                     */
                    // add: function (word) {
                    // var low = (this.low + word.low) | 0;
                    // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
                    // var high = (this.high + word.high + carry) | 0;
                    // return X64Word.create(high, low);
                    // }
                  }), h.WordArray = f.extend({
                    /**
                     * Initializes a newly created word array.
                     *
                     * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create();
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create([
                     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                     *     ]);
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create([
                     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                     *     ], 10);
                     */
                    init: function(i, p) {
                      i = this.words = i || [], p != r ? this.sigBytes = p : this.sigBytes = i.length * 8;
                    },
                    /**
                     * Converts this 64-bit word array to a 32-bit word array.
                     *
                     * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
                     *
                     * @example
                     *
                     *     var x32WordArray = x64WordArray.toX32();
                     */
                    toX32: function() {
                      for (var i = this.words, p = i.length, y = [], m = 0; m < p; m++) {
                        var e = i[m];
                        y.push(e.high), y.push(e.low);
                      }
                      return u.create(y, this.sigBytes);
                    },
                    /**
                     * Creates a copy of this word array.
                     *
                     * @return {X64WordArray} The clone.
                     *
                     * @example
                     *
                     *     var clone = x64WordArray.clone();
                     */
                    clone: function() {
                      for (var i = f.clone.call(this), p = i.words = this.words.slice(0), y = p.length, m = 0; m < y; m++)
                        p[m] = p[m].clone();
                      return i;
                    }
                  });
                }(), s;
              });
            }
          ),
          /***/
          41966: (
            /***/
            function(l, c, t) {
              t(52729), t(33694), t(44063), t(62031), t(56908), t(6208), t(54994), t(35054), t(33290), t(4845), t(39275), t(75668), t(61928), t(54883), t(10853), t(45007), t(68995), t(26364), t(86632), t(18821);
              function s(d, i) {
                var p = typeof Symbol != "undefined" && d[Symbol.iterator] || d["@@iterator"];
                if (p)
                  return (p = p.call(d)).next.bind(p);
                if (Array.isArray(d) || (p = r(d)) || i && d && typeof d.length == "number") {
                  p && (d = p);
                  var y = 0;
                  return function() {
                    return y >= d.length ? { done: !0 } : { done: !1, value: d[y++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function r(d, i) {
                if (d) {
                  if (typeof d == "string")
                    return a(d, i);
                  var p = Object.prototype.toString.call(d).slice(8, -1);
                  if (p === "Object" && d.constructor && (p = d.constructor.name), p === "Map" || p === "Set")
                    return Array.from(d);
                  if (p === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(p))
                    return a(d, i);
                }
              }
              function a(d, i) {
                (i == null || i > d.length) && (i = d.length);
                for (var p = 0, y = new Array(i); p < i; p++)
                  y[p] = d[p];
                return y;
              }
              function o() {
                /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
                o = function() {
                  return i;
                };
                var d, i = {}, p = Object.prototype, y = p.hasOwnProperty, m = Object.defineProperty || function(st, xt, G) {
                  st[xt] = G.value;
                }, e = typeof Symbol == "function" ? Symbol : {}, x = e.iterator || "@@iterator", S = e.asyncIterator || "@@asyncIterator", P = e.toStringTag || "@@toStringTag";
                function O(st, xt, G) {
                  return Object.defineProperty(st, xt, { value: G, enumerable: !0, configurable: !0, writable: !0 }), st[xt];
                }
                try {
                  O({}, "");
                } catch (st) {
                  O = function(G, Ft, z) {
                    return G[Ft] = z;
                  };
                }
                function T(st, xt, G, Ft) {
                  var z = xt && xt.prototype instanceof N ? xt : N, C = Object.create(z.prototype), k = new gt(Ft || []);
                  return m(C, "_invoke", { value: It(st, G, k) }), C;
                }
                function A(st, xt, G) {
                  try {
                    return { type: "normal", arg: st.call(xt, G) };
                  } catch (Ft) {
                    return { type: "throw", arg: Ft };
                  }
                }
                i.wrap = T;
                var E = "suspendedStart", D = "suspendedYield", b = "executing", R = "completed", L = {};
                function N() {
                }
                function M() {
                }
                function K() {
                }
                var ct = {};
                O(ct, x, function() {
                  return this;
                });
                var J = Object.getPrototypeOf, nt = J && J(J(ht([])));
                nt && nt !== p && y.call(nt, x) && (ct = nt);
                var yt = K.prototype = N.prototype = Object.create(ct);
                function bt(st) {
                  ["next", "throw", "return"].forEach(function(xt) {
                    O(st, xt, function(G) {
                      return this._invoke(xt, G);
                    });
                  });
                }
                function Tt(st, xt) {
                  function G(z, C, k, V) {
                    var ot = A(st[z], st, C);
                    if (ot.type !== "throw") {
                      var et = ot.arg, tt = et.value;
                      return tt && typeof tt == "object" && y.call(tt, "__await") ? xt.resolve(tt.__await).then(function(At) {
                        G("next", At, k, V);
                      }, function(At) {
                        G("throw", At, k, V);
                      }) : xt.resolve(tt).then(function(At) {
                        et.value = At, k(et);
                      }, function(At) {
                        return G("throw", At, k, V);
                      });
                    }
                    V(ot.arg);
                  }
                  var Ft;
                  m(this, "_invoke", { value: function(C, k) {
                    function V() {
                      return new xt(function(ot, et) {
                        G(C, k, ot, et);
                      });
                    }
                    return Ft = Ft ? Ft.then(V, V) : V();
                  } });
                }
                function It(st, xt, G) {
                  var Ft = E;
                  return function(z, C) {
                    if (Ft === b)
                      throw new Error("Generator is already running");
                    if (Ft === R) {
                      if (z === "throw")
                        throw C;
                      return { value: d, done: !0 };
                    }
                    for (G.method = z, G.arg = C; ; ) {
                      var k = G.delegate;
                      if (k) {
                        var V = Lt(k, G);
                        if (V) {
                          if (V === L)
                            continue;
                          return V;
                        }
                      }
                      if (G.method === "next")
                        G.sent = G._sent = G.arg;
                      else if (G.method === "throw") {
                        if (Ft === E)
                          throw Ft = R, G.arg;
                        G.dispatchException(G.arg);
                      } else
                        G.method === "return" && G.abrupt("return", G.arg);
                      Ft = b;
                      var ot = A(st, xt, G);
                      if (ot.type === "normal") {
                        if (Ft = G.done ? R : D, ot.arg === L)
                          continue;
                        return { value: ot.arg, done: G.done };
                      }
                      ot.type === "throw" && (Ft = R, G.method = "throw", G.arg = ot.arg);
                    }
                  };
                }
                function Lt(st, xt) {
                  var G = xt.method, Ft = st.iterator[G];
                  if (Ft === d)
                    return xt.delegate = null, G === "throw" && st.iterator.return && (xt.method = "return", xt.arg = d, Lt(st, xt), xt.method === "throw") || G !== "return" && (xt.method = "throw", xt.arg = new TypeError("The iterator does not provide a '" + G + "' method")), L;
                  var z = A(Ft, st.iterator, xt.arg);
                  if (z.type === "throw")
                    return xt.method = "throw", xt.arg = z.arg, xt.delegate = null, L;
                  var C = z.arg;
                  return C ? C.done ? (xt[st.resultName] = C.value, xt.next = st.nextLoc, xt.method !== "return" && (xt.method = "next", xt.arg = d), xt.delegate = null, L) : C : (xt.method = "throw", xt.arg = new TypeError("iterator result is not an object"), xt.delegate = null, L);
                }
                function zt(st) {
                  var xt = { tryLoc: st[0] };
                  1 in st && (xt.catchLoc = st[1]), 2 in st && (xt.finallyLoc = st[2], xt.afterLoc = st[3]), this.tryEntries.push(xt);
                }
                function Q(st) {
                  var xt = st.completion || {};
                  xt.type = "normal", delete xt.arg, st.completion = xt;
                }
                function gt(st) {
                  this.tryEntries = [{ tryLoc: "root" }], st.forEach(zt, this), this.reset(!0);
                }
                function ht(st) {
                  if (st || st === "") {
                    var xt = st[x];
                    if (xt)
                      return xt.call(st);
                    if (typeof st.next == "function")
                      return st;
                    if (!isNaN(st.length)) {
                      var G = -1, Ft = function z() {
                        for (; ++G < st.length; )
                          if (y.call(st, G))
                            return z.value = st[G], z.done = !1, z;
                        return z.value = d, z.done = !0, z;
                      };
                      return Ft.next = Ft;
                    }
                  }
                  throw new TypeError(typeof st + " is not iterable");
                }
                return M.prototype = K, m(yt, "constructor", { value: K, configurable: !0 }), m(K, "constructor", { value: M, configurable: !0 }), M.displayName = O(K, P, "GeneratorFunction"), i.isGeneratorFunction = function(st) {
                  var xt = typeof st == "function" && st.constructor;
                  return !!xt && (xt === M || (xt.displayName || xt.name) === "GeneratorFunction");
                }, i.mark = function(st) {
                  return Object.setPrototypeOf ? Object.setPrototypeOf(st, K) : (st.__proto__ = K, O(st, P, "GeneratorFunction")), st.prototype = Object.create(yt), st;
                }, i.awrap = function(st) {
                  return { __await: st };
                }, bt(Tt.prototype), O(Tt.prototype, S, function() {
                  return this;
                }), i.AsyncIterator = Tt, i.async = function(st, xt, G, Ft, z) {
                  z === void 0 && (z = Promise);
                  var C = new Tt(T(st, xt, G, Ft), z);
                  return i.isGeneratorFunction(xt) ? C : C.next().then(function(k) {
                    return k.done ? k.value : C.next();
                  });
                }, bt(yt), O(yt, P, "Generator"), O(yt, x, function() {
                  return this;
                }), O(yt, "toString", function() {
                  return "[object Generator]";
                }), i.keys = function(st) {
                  var xt = Object(st), G = [];
                  for (var Ft in xt)
                    G.push(Ft);
                  return G.reverse(), function z() {
                    for (; G.length; ) {
                      var C = G.pop();
                      if (C in xt)
                        return z.value = C, z.done = !1, z;
                    }
                    return z.done = !0, z;
                  };
                }, i.values = ht, gt.prototype = { constructor: gt, reset: function(xt) {
                  if (this.prev = 0, this.next = 0, this.sent = this._sent = d, this.done = !1, this.delegate = null, this.method = "next", this.arg = d, this.tryEntries.forEach(Q), !xt)
                    for (var G in this)
                      G.charAt(0) === "t" && y.call(this, G) && !isNaN(+G.slice(1)) && (this[G] = d);
                }, stop: function() {
                  this.done = !0;
                  var xt = this.tryEntries[0].completion;
                  if (xt.type === "throw")
                    throw xt.arg;
                  return this.rval;
                }, dispatchException: function(xt) {
                  if (this.done)
                    throw xt;
                  var G = this;
                  function Ft(et, tt) {
                    return k.type = "throw", k.arg = xt, G.next = et, tt && (G.method = "next", G.arg = d), !!tt;
                  }
                  for (var z = this.tryEntries.length - 1; z >= 0; --z) {
                    var C = this.tryEntries[z], k = C.completion;
                    if (C.tryLoc === "root")
                      return Ft("end");
                    if (C.tryLoc <= this.prev) {
                      var V = y.call(C, "catchLoc"), ot = y.call(C, "finallyLoc");
                      if (V && ot) {
                        if (this.prev < C.catchLoc)
                          return Ft(C.catchLoc, !0);
                        if (this.prev < C.finallyLoc)
                          return Ft(C.finallyLoc);
                      } else if (V) {
                        if (this.prev < C.catchLoc)
                          return Ft(C.catchLoc, !0);
                      } else {
                        if (!ot)
                          throw new Error("try statement without catch or finally");
                        if (this.prev < C.finallyLoc)
                          return Ft(C.finallyLoc);
                      }
                    }
                  }
                }, abrupt: function(xt, G) {
                  for (var Ft = this.tryEntries.length - 1; Ft >= 0; --Ft) {
                    var z = this.tryEntries[Ft];
                    if (z.tryLoc <= this.prev && y.call(z, "finallyLoc") && this.prev < z.finallyLoc) {
                      var C = z;
                      break;
                    }
                  }
                  C && (xt === "break" || xt === "continue") && C.tryLoc <= G && G <= C.finallyLoc && (C = null);
                  var k = C ? C.completion : {};
                  return k.type = xt, k.arg = G, C ? (this.method = "next", this.next = C.finallyLoc, L) : this.complete(k);
                }, complete: function(xt, G) {
                  if (xt.type === "throw")
                    throw xt.arg;
                  return xt.type === "break" || xt.type === "continue" ? this.next = xt.arg : xt.type === "return" ? (this.rval = this.arg = xt.arg, this.method = "return", this.next = "end") : xt.type === "normal" && G && (this.next = G), L;
                }, finish: function(xt) {
                  for (var G = this.tryEntries.length - 1; G >= 0; --G) {
                    var Ft = this.tryEntries[G];
                    if (Ft.finallyLoc === xt)
                      return this.complete(Ft.completion, Ft.afterLoc), Q(Ft), L;
                  }
                }, catch: function(xt) {
                  for (var G = this.tryEntries.length - 1; G >= 0; --G) {
                    var Ft = this.tryEntries[G];
                    if (Ft.tryLoc === xt) {
                      var z = Ft.completion;
                      if (z.type === "throw") {
                        var C = z.arg;
                        Q(Ft);
                      }
                      return C;
                    }
                  }
                  throw new Error("illegal catch attempt");
                }, delegateYield: function(xt, G, Ft) {
                  return this.delegate = { iterator: ht(xt), resultName: G, nextLoc: Ft }, this.method === "next" && (this.arg = d), L;
                } }, i;
              }
              var f = 1, u = 0, h = /* @__PURE__ */ function() {
                function d(p) {
                  this.stateTable = p.stateTable, this.accepting = p.accepting, this.tags = p.tags;
                }
                var i = d.prototype;
                return i.match = function(y) {
                  var m, e = this;
                  return m = {}, m[Symbol.iterator] = /* @__PURE__ */ o().mark(function x() {
                    var S, P, O, T, A, E;
                    return o().wrap(function(b) {
                      for (; ; )
                        switch (b.prev = b.next) {
                          case 0:
                            S = f, P = null, O = null, T = null, A = 0;
                          case 5:
                            if (!(A < y.length)) {
                              b.next = 21;
                              break;
                            }
                            if (E = y[A], T = S, S = e.stateTable[S][E], S !== u) {
                              b.next = 15;
                              break;
                            }
                            if (!(P != null && O != null && O >= P)) {
                              b.next = 13;
                              break;
                            }
                            return b.next = 13, [P, O, e.tags[T]];
                          case 13:
                            S = e.stateTable[f][E], P = null;
                          case 15:
                            S !== u && P == null && (P = A), e.accepting[S] && (O = A), S === u && (S = f);
                          case 18:
                            A++, b.next = 5;
                            break;
                          case 21:
                            if (!(P != null && O != null && O >= P)) {
                              b.next = 24;
                              break;
                            }
                            return b.next = 24, [P, O, e.tags[S]];
                          case 24:
                          case "end":
                            return b.stop();
                        }
                    }, x);
                  }), m;
                }, i.apply = function(y, m) {
                  for (var e = s(this.match(y)), x; !(x = e()).done; )
                    for (var S = x.value, P = S[0], O = S[1], T = S[2], A = s(T), E; !(E = A()).done; ) {
                      var D = E.value;
                      typeof m[D] == "function" && m[D](P, O, y.slice(P, O + 1));
                    }
                }, d;
              }();
              l.exports = h;
            }
          ),
          /***/
          45968: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer;
              t(10853), t(35054), t(18821), t(18183);
              var r = t(52773), a = t(63339);
              l.exports = /* @__PURE__ */ function() {
                o.decode = function(h, d) {
                  return r.readFile(h, function(i, p) {
                    var y = new o(p);
                    return y.decode(function(m) {
                      return d(m);
                    });
                  });
                }, o.load = function(h) {
                  var d = r.readFileSync(h);
                  return new o(d);
                };
                function o(u) {
                  var h;
                  for (this.data = u, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.text = {}; ; ) {
                    var d = this.readUInt32(), i = "";
                    for (h = 0; h < 4; h++)
                      i += String.fromCharCode(this.data[this.pos++]);
                    switch (i) {
                      case "IHDR":
                        this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
                        break;
                      case "PLTE":
                        this.palette = this.read(d);
                        break;
                      case "IDAT":
                        for (h = 0; h < d; h++)
                          this.imgData.push(this.data[this.pos++]);
                        break;
                      case "tRNS":
                        switch (this.transparency = {}, this.colorType) {
                          case 3:
                            this.transparency.indexed = this.read(d);
                            var p = 255 - this.transparency.indexed.length;
                            if (p > 0)
                              for (h = 0; h < p; h++)
                                this.transparency.indexed.push(255);
                            break;
                          case 0:
                            this.transparency.grayscale = this.read(d)[0];
                            break;
                          case 2:
                            this.transparency.rgb = this.read(d);
                            break;
                        }
                        break;
                      case "tEXt":
                        var y = this.read(d), m = y.indexOf(0), e = String.fromCharCode.apply(String, y.slice(0, m));
                        this.text[e] = String.fromCharCode.apply(String, y.slice(m + 1));
                        break;
                      case "IEND":
                        switch (this.colorType) {
                          case 0:
                          case 3:
                          case 4:
                            this.colors = 1;
                            break;
                          case 2:
                          case 6:
                            this.colors = 3;
                            break;
                        }
                        this.hasAlphaChannel = [4, 6].includes(this.colorType);
                        var x = this.colors + (this.hasAlphaChannel ? 1 : 0);
                        switch (this.pixelBitlength = this.bits * x, this.colors) {
                          case 1:
                            this.colorSpace = "DeviceGray";
                            break;
                          case 3:
                            this.colorSpace = "DeviceRGB";
                            break;
                        }
                        this.imgData = new s(this.imgData);
                        return;
                      default:
                        this.pos += d;
                    }
                    if (this.pos += 4, this.pos > this.data.length)
                      throw new Error("Incomplete or corrupt PNG file");
                  }
                }
                var f = o.prototype;
                return f.read = function(h) {
                  for (var d = new Array(h), i = 0; i < h; i++)
                    d[i] = this.data[this.pos++];
                  return d;
                }, f.readUInt32 = function() {
                  var h = this.data[this.pos++] << 24, d = this.data[this.pos++] << 16, i = this.data[this.pos++] << 8, p = this.data[this.pos++];
                  return h | d | i | p;
                }, f.readUInt16 = function() {
                  var h = this.data[this.pos++] << 8, d = this.data[this.pos++];
                  return h | d;
                }, f.decodePixels = function(h) {
                  var d = this;
                  return a.inflate(this.imgData, function(i, p) {
                    if (i)
                      throw i;
                    var y = d.width, m = d.height, e = d.pixelBitlength / 8, x = new s(y * m * e), S = p.length, P = 0;
                    function O(T, A, E, D, b) {
                      b === void 0 && (b = !1);
                      for (var R = Math.ceil((y - T) / E), L = Math.ceil((m - A) / D), N = e * R, M = b ? x : new s(N * L), K = 0, ct = 0; K < L && P < S; ) {
                        var J, nt, yt, bt, Tt;
                        switch (p[P++]) {
                          case 0:
                            for (yt = 0; yt < N; yt++)
                              M[ct++] = p[P++];
                            break;
                          case 1:
                            for (yt = 0; yt < N; yt++)
                              J = p[P++], bt = yt < e ? 0 : M[ct - e], M[ct++] = (J + bt) % 256;
                            break;
                          case 2:
                            for (yt = 0; yt < N; yt++)
                              J = p[P++], nt = (yt - yt % e) / e, Tt = K && M[(K - 1) * N + nt * e + yt % e], M[ct++] = (Tt + J) % 256;
                            break;
                          case 3:
                            for (yt = 0; yt < N; yt++)
                              J = p[P++], nt = (yt - yt % e) / e, bt = yt < e ? 0 : M[ct - e], Tt = K && M[(K - 1) * N + nt * e + yt % e], M[ct++] = (J + Math.floor((bt + Tt) / 2)) % 256;
                            break;
                          case 4:
                            for (yt = 0; yt < N; yt++) {
                              var It, Lt;
                              J = p[P++], nt = (yt - yt % e) / e, bt = yt < e ? 0 : M[ct - e], K === 0 ? Tt = Lt = 0 : (Tt = M[(K - 1) * N + nt * e + yt % e], Lt = nt && M[(K - 1) * N + (nt - 1) * e + yt % e]);
                              var zt = bt + Tt - Lt, Q = Math.abs(zt - bt), gt = Math.abs(zt - Tt), ht = Math.abs(zt - Lt);
                              Q <= gt && Q <= ht ? It = bt : gt <= ht ? It = Tt : It = Lt, M[ct++] = (J + It) % 256;
                            }
                            break;
                          default:
                            throw new Error("Invalid filter algorithm: " + p[P - 1]);
                        }
                        if (!b) {
                          var st = ((A + K * D) * y + T) * e, xt = K * N;
                          for (yt = 0; yt < R; yt++) {
                            for (var G = 0; G < e; G++)
                              x[st++] = M[xt++];
                            st += (E - 1) * e;
                          }
                        }
                        K++;
                      }
                    }
                    return d.interlaceMethod === 1 ? (O(0, 0, 8, 8), O(4, 0, 8, 8), O(0, 4, 4, 8), O(2, 0, 4, 4), O(0, 2, 2, 4), O(1, 0, 2, 2), O(0, 1, 1, 2)) : O(0, 0, 1, 1, !0), h(x);
                  });
                }, f.decodePalette = function() {
                  for (var h = this.palette, d = h.length, i = this.transparency.indexed || [], p = new s(i.length + d), y = 0, m = 0, e = 0; e < d; e += 3) {
                    var x;
                    p[y++] = h[e], p[y++] = h[e + 1], p[y++] = h[e + 2], p[y++] = (x = i[m++]) != null ? x : 255;
                  }
                  return p;
                }, f.copyToImageData = function(h, d) {
                  var i, p, y = this.colors, m = null, e = this.hasAlphaChannel;
                  this.palette.length && (m = this._decodedPalette || (this._decodedPalette = this.decodePalette()), y = 4, e = !0);
                  var x = h.data || h, S = x.length, P = m || d, O = i = 0;
                  if (y === 1)
                    for (; O < S; ) {
                      p = m ? d[O / 4] * 4 : i;
                      var T = P[p++];
                      x[O++] = T, x[O++] = T, x[O++] = T, x[O++] = e ? P[p++] : 255, i = p;
                    }
                  else
                    for (; O < S; )
                      p = m ? d[O / 4] * 4 : i, x[O++] = P[p++], x[O++] = P[p++], x[O++] = P[p++], x[O++] = e ? P[p++] : 255, i = p;
                }, f.decode = function(h) {
                  var d = this, i = new s(this.width * this.height * 4);
                  return this.decodePixels(function(p) {
                    return d.copyToImageData(i, p), h(i);
                  });
                }, o;
              }();
            }
          ),
          /***/
          85543: (
            /***/
            function(l, c, t) {
              var s = t(82530);
              t(26875), t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(83382);
              var r = t(43060), a = r.Buffer, o = {}, f;
              for (f in r)
                r.hasOwnProperty(f) && (f === "SlowBuffer" || f === "Buffer" || (o[f] = r[f]));
              var u = o.Buffer = {};
              for (f in a)
                a.hasOwnProperty(f) && (f === "allocUnsafe" || f === "allocUnsafeSlow" || (u[f] = a[f]));
              if (o.Buffer.prototype = a.prototype, (!u.from || u.from === Uint8Array.from) && (u.from = function(h, d, i) {
                if (typeof h == "number")
                  throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof h);
                if (h && typeof h.length == "undefined")
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof h);
                return a(h, d, i);
              }), u.alloc || (u.alloc = function(h, d, i) {
                if (typeof h != "number")
                  throw new TypeError('The "size" argument must be of type number. Received type ' + typeof h);
                if (h < 0 || h >= 2147483648)
                  throw new RangeError('The value "' + h + '" is invalid for option "size"');
                var p = a(h);
                return !d || d.length === 0 ? p.fill(0) : typeof i == "string" ? p.fill(d, i) : p.fill(d), p;
              }), !o.kStringMaxLength)
                try {
                  o.kStringMaxLength = s.binding("buffer").kStringMaxLength;
                } catch (h) {
                }
              o.constants || (o.constants = {
                MAX_LENGTH: o.kMaxLength
              }, o.kStringMaxLength && (o.constants.MAX_STRING_LENGTH = o.kStringMaxLength)), l.exports = o;
            }
          ),
          /***/
          55681: (
            /***/
            function(l, c, t) {
              t(80044), t(26364), t(19701), t(10853), t(80238), t(6208), t(12938), t(16543), t(33142), t(86632), t(80174), t(18821);
              function s(S, P) {
                var O = Object.keys(S);
                if (Object.getOwnPropertySymbols) {
                  var T = Object.getOwnPropertySymbols(S);
                  P && (T = T.filter(function(A) {
                    return Object.getOwnPropertyDescriptor(S, A).enumerable;
                  })), O.push.apply(O, T);
                }
                return O;
              }
              function r(S) {
                for (var P = 1; P < arguments.length; P++) {
                  var O = arguments[P] != null ? arguments[P] : {};
                  P % 2 ? s(Object(O), !0).forEach(function(T) {
                    a(S, T, O[T]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(S, Object.getOwnPropertyDescriptors(O)) : s(Object(O)).forEach(function(T) {
                    Object.defineProperty(S, T, Object.getOwnPropertyDescriptor(O, T));
                  });
                }
                return S;
              }
              function a(S, P, O) {
                return P = h(P), P in S ? Object.defineProperty(S, P, {
                  value: O,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : S[P] = O, S;
              }
              function o(S, P) {
                if (!(S instanceof P))
                  throw new TypeError("Cannot call a class as a function");
              }
              function f(S, P) {
                for (var O = 0; O < P.length; O++) {
                  var T = P[O];
                  T.enumerable = T.enumerable || !1, T.configurable = !0, "value" in T && (T.writable = !0), Object.defineProperty(S, h(T.key), T);
                }
              }
              function u(S, P, O) {
                return P && f(S.prototype, P), O && f(S, O), Object.defineProperty(S, "prototype", {
                  writable: !1
                }), S;
              }
              function h(S) {
                var P = d(S, "string");
                return typeof P == "symbol" ? P : String(P);
              }
              function d(S, P) {
                if (typeof S != "object" || S === null)
                  return S;
                var O = S[Symbol.toPrimitive];
                if (O !== void 0) {
                  var T = O.call(S, P || "default");
                  if (typeof T != "object")
                    return T;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (P === "string" ? String : Number)(S);
              }
              var i = t(43060), p = i.Buffer, y = t(69862), m = y.inspect, e = m && m.custom || "inspect";
              function x(S, P, O) {
                p.prototype.copy.call(S, P, O);
              }
              l.exports = /* @__PURE__ */ function() {
                function S() {
                  o(this, S), this.head = null, this.tail = null, this.length = 0;
                }
                return u(S, [{
                  key: "push",
                  value: function(O) {
                    var T = {
                      data: O,
                      next: null
                    };
                    this.length > 0 ? this.tail.next = T : this.head = T, this.tail = T, ++this.length;
                  }
                }, {
                  key: "unshift",
                  value: function(O) {
                    var T = {
                      data: O,
                      next: this.head
                    };
                    this.length === 0 && (this.tail = T), this.head = T, ++this.length;
                  }
                }, {
                  key: "shift",
                  value: function() {
                    if (this.length !== 0) {
                      var O = this.head.data;
                      return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, O;
                    }
                  }
                }, {
                  key: "clear",
                  value: function() {
                    this.head = this.tail = null, this.length = 0;
                  }
                }, {
                  key: "join",
                  value: function(O) {
                    if (this.length === 0)
                      return "";
                    for (var T = this.head, A = "" + T.data; T = T.next; )
                      A += O + T.data;
                    return A;
                  }
                }, {
                  key: "concat",
                  value: function(O) {
                    if (this.length === 0)
                      return p.alloc(0);
                    for (var T = p.allocUnsafe(O >>> 0), A = this.head, E = 0; A; )
                      x(A.data, T, E), E += A.data.length, A = A.next;
                    return T;
                  }
                  // Consumes a specified amount of bytes or characters from the buffered data.
                }, {
                  key: "consume",
                  value: function(O, T) {
                    var A;
                    return O < this.head.data.length ? (A = this.head.data.slice(0, O), this.head.data = this.head.data.slice(O)) : O === this.head.data.length ? A = this.shift() : A = T ? this._getString(O) : this._getBuffer(O), A;
                  }
                }, {
                  key: "first",
                  value: function() {
                    return this.head.data;
                  }
                  // Consumes a specified amount of characters from the buffered data.
                }, {
                  key: "_getString",
                  value: function(O) {
                    var T = this.head, A = 1, E = T.data;
                    for (O -= E.length; T = T.next; ) {
                      var D = T.data, b = O > D.length ? D.length : O;
                      if (b === D.length ? E += D : E += D.slice(0, O), O -= b, O === 0) {
                        b === D.length ? (++A, T.next ? this.head = T.next : this.head = this.tail = null) : (this.head = T, T.data = D.slice(b));
                        break;
                      }
                      ++A;
                    }
                    return this.length -= A, E;
                  }
                  // Consumes a specified amount of bytes from the buffered data.
                }, {
                  key: "_getBuffer",
                  value: function(O) {
                    var T = p.allocUnsafe(O), A = this.head, E = 1;
                    for (A.data.copy(T), O -= A.data.length; A = A.next; ) {
                      var D = A.data, b = O > D.length ? D.length : O;
                      if (D.copy(T, T.length - O, 0, b), O -= b, O === 0) {
                        b === D.length ? (++E, A.next ? this.head = A.next : this.head = this.tail = null) : (this.head = A, A.data = D.slice(b));
                        break;
                      }
                      ++E;
                    }
                    return this.length -= E, T;
                  }
                  // Make sure the linked list only shows the minimal necessary information.
                }, {
                  key: e,
                  value: function(O, T) {
                    return m(this, r(r({}, T), {}, {
                      // Only inspect one level.
                      depth: 0,
                      // It should not recurse.
                      customInspect: !1
                    }));
                  }
                }]), S;
              }();
            }
          ),
          /***/
          11504: (
            /***/
            function(l, c, t) {
              t(83382);
              var s = t(43060), r = s.Buffer;
              function a(f, u) {
                for (var h in f)
                  u[h] = f[h];
              }
              r.from && r.alloc && r.allocUnsafe && r.allocUnsafeSlow ? l.exports = s : (a(s, c), c.Buffer = o);
              function o(f, u, h) {
                return r(f, u, h);
              }
              a(r, o), o.from = function(f, u, h) {
                if (typeof f == "number")
                  throw new TypeError("Argument must not be a number");
                return r(f, u, h);
              }, o.alloc = function(f, u, h) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                var d = r(f);
                return u !== void 0 ? typeof h == "string" ? d.fill(u, h) : d.fill(u) : d.fill(0), d;
              }, o.allocUnsafe = function(f) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                return r(f);
              }, o.allocUnsafeSlow = function(f) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                return s.SlowBuffer(f);
              };
            }
          ),
          /***/
          67827: (
            /***/
            function(l, c, t) {
              t(18821), t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(35779);
              var s = t(84346), r = t(84962), a = r.swap32LE, o = 6 + 5, f = 5, u = o - f, h = 65536 >> o, d = 1 << u, i = d - 1, p = 2, y = 1 << f, m = y - 1, e = 65536 >> f, x = 1024 >> f, S = e + x, P = S, O = 32, T = P + O, A = 1 << p, E = /* @__PURE__ */ function() {
                function D(R) {
                  var L = typeof R.readUInt32BE == "function" && typeof R.slice == "function";
                  if (L || R instanceof Uint8Array) {
                    var N;
                    if (L)
                      this.highStart = R.readUInt32LE(0), this.errorValue = R.readUInt32LE(4), N = R.readUInt32LE(8), R = R.slice(12);
                    else {
                      var M = new DataView(R.buffer);
                      this.highStart = M.getUint32(0, !0), this.errorValue = M.getUint32(4, !0), N = M.getUint32(8, !0), R = R.subarray(12);
                    }
                    R = s(R, new Uint8Array(N)), R = s(R, new Uint8Array(N)), a(R), this.data = new Uint32Array(R.buffer);
                  } else {
                    var K = R;
                    this.data = K.data, this.highStart = K.highStart, this.errorValue = K.errorValue;
                  }
                }
                var b = D.prototype;
                return b.get = function(L) {
                  var N;
                  return L < 0 || L > 1114111 ? this.errorValue : L < 55296 || L > 56319 && L <= 65535 ? (N = (this.data[L >> f] << p) + (L & m), this.data[N]) : L <= 65535 ? (N = (this.data[e + (L - 55296 >> f)] << p) + (L & m), this.data[N]) : L < this.highStart ? (N = this.data[T - h + (L >> o)], N = this.data[N + (L >> f & i)], N = (N << p) + (L & m), this.data[N]) : this.data[this.data.length - A];
                }, D;
              }();
              l.exports = E;
            }
          ),
          /***/
          84962: (
            /***/
            function(l, c, t) {
              t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(35779);
              var s = new Uint8Array(new Uint32Array([305419896]).buffer)[0] === 18, r = function(u, h, d) {
                var i = u[h];
                u[h] = u[d], u[d] = i;
              }, a = function(u) {
                for (var h = u.length, d = 0; d < h; d += 4)
                  r(u, d, d + 3), r(u, d + 1, d + 2);
              }, o = function(u) {
                s && a(u);
              };
              l.exports = {
                swap32LE: o
              };
            }
          ),
          /***/
          31589: (
            /***/
            function(l, c, t) {
              var s = t(60902);
              l.exports = s;
            }
          ),
          /***/
          60902: (
            /***/
            function(l, c, t) {
              l = t.nmd(l), t(54994), t(80044), t(29897), t(39275), t(75668), t(47639), t(22321), t(18821), t(80174), t(67838), t(55862), t(54883), t(10853), t(68995), t(86125), t(83382);
              var s = function(a, o, f, u, h) {
                var d = {
                  aliceblue: [240, 248, 255],
                  antiquewhite: [250, 235, 215],
                  aqua: [0, 255, 255],
                  aquamarine: [127, 255, 212],
                  azure: [240, 255, 255],
                  beige: [245, 245, 220],
                  bisque: [255, 228, 196],
                  black: [0, 0, 0],
                  blanchedalmond: [255, 235, 205],
                  blue: [0, 0, 255],
                  blueviolet: [138, 43, 226],
                  brown: [165, 42, 42],
                  burlywood: [222, 184, 135],
                  cadetblue: [95, 158, 160],
                  chartreuse: [127, 255, 0],
                  chocolate: [210, 105, 30],
                  coral: [255, 127, 80],
                  cornflowerblue: [100, 149, 237],
                  cornsilk: [255, 248, 220],
                  crimson: [220, 20, 60],
                  cyan: [0, 255, 255],
                  darkblue: [0, 0, 139],
                  darkcyan: [0, 139, 139],
                  darkgoldenrod: [184, 134, 11],
                  darkgray: [169, 169, 169],
                  darkgrey: [169, 169, 169],
                  darkgreen: [0, 100, 0],
                  darkkhaki: [189, 183, 107],
                  darkmagenta: [139, 0, 139],
                  darkolivegreen: [85, 107, 47],
                  darkorange: [255, 140, 0],
                  darkorchid: [153, 50, 204],
                  darkred: [139, 0, 0],
                  darksalmon: [233, 150, 122],
                  darkseagreen: [143, 188, 143],
                  darkslateblue: [72, 61, 139],
                  darkslategray: [47, 79, 79],
                  darkslategrey: [47, 79, 79],
                  darkturquoise: [0, 206, 209],
                  darkviolet: [148, 0, 211],
                  deeppink: [255, 20, 147],
                  deepskyblue: [0, 191, 255],
                  dimgray: [105, 105, 105],
                  dimgrey: [105, 105, 105],
                  dodgerblue: [30, 144, 255],
                  firebrick: [178, 34, 34],
                  floralwhite: [255, 250, 240],
                  forestgreen: [34, 139, 34],
                  fuchsia: [255, 0, 255],
                  gainsboro: [220, 220, 220],
                  ghostwhite: [248, 248, 255],
                  gold: [255, 215, 0],
                  goldenrod: [218, 165, 32],
                  gray: [128, 128, 128],
                  grey: [128, 128, 128],
                  green: [0, 128, 0],
                  greenyellow: [173, 255, 47],
                  honeydew: [240, 255, 240],
                  hotpink: [255, 105, 180],
                  indianred: [205, 92, 92],
                  indigo: [75, 0, 130],
                  ivory: [255, 255, 240],
                  khaki: [240, 230, 140],
                  lavender: [230, 230, 250],
                  lavenderblush: [255, 240, 245],
                  lawngreen: [124, 252, 0],
                  lemonchiffon: [255, 250, 205],
                  lightblue: [173, 216, 230],
                  lightcoral: [240, 128, 128],
                  lightcyan: [224, 255, 255],
                  lightgoldenrodyellow: [250, 250, 210],
                  lightgray: [211, 211, 211],
                  lightgrey: [211, 211, 211],
                  lightgreen: [144, 238, 144],
                  lightpink: [255, 182, 193],
                  lightsalmon: [255, 160, 122],
                  lightseagreen: [32, 178, 170],
                  lightskyblue: [135, 206, 250],
                  lightslategray: [119, 136, 153],
                  lightslategrey: [119, 136, 153],
                  lightsteelblue: [176, 196, 222],
                  lightyellow: [255, 255, 224],
                  lime: [0, 255, 0],
                  limegreen: [50, 205, 50],
                  linen: [250, 240, 230],
                  magenta: [255, 0, 255],
                  maroon: [128, 0, 0],
                  mediumaquamarine: [102, 205, 170],
                  mediumblue: [0, 0, 205],
                  mediumorchid: [186, 85, 211],
                  mediumpurple: [147, 112, 219],
                  mediumseagreen: [60, 179, 113],
                  mediumslateblue: [123, 104, 238],
                  mediumspringgreen: [0, 250, 154],
                  mediumturquoise: [72, 209, 204],
                  mediumvioletred: [199, 21, 133],
                  midnightblue: [25, 25, 112],
                  mintcream: [245, 255, 250],
                  mistyrose: [255, 228, 225],
                  moccasin: [255, 228, 181],
                  navajowhite: [255, 222, 173],
                  navy: [0, 0, 128],
                  oldlace: [253, 245, 230],
                  olive: [128, 128, 0],
                  olivedrab: [107, 142, 35],
                  orange: [255, 165, 0],
                  orangered: [255, 69, 0],
                  orchid: [218, 112, 214],
                  palegoldenrod: [238, 232, 170],
                  palegreen: [152, 251, 152],
                  paleturquoise: [175, 238, 238],
                  palevioletred: [219, 112, 147],
                  papayawhip: [255, 239, 213],
                  peachpuff: [255, 218, 185],
                  peru: [205, 133, 63],
                  pink: [255, 192, 203],
                  plum: [221, 160, 221],
                  powderblue: [176, 224, 230],
                  purple: [128, 0, 128],
                  rebeccapurple: [102, 51, 153],
                  red: [255, 0, 0],
                  rosybrown: [188, 143, 143],
                  royalblue: [65, 105, 225],
                  saddlebrown: [139, 69, 19],
                  salmon: [250, 128, 114],
                  sandybrown: [244, 164, 96],
                  seagreen: [46, 139, 87],
                  seashell: [255, 245, 238],
                  sienna: [160, 82, 45],
                  silver: [192, 192, 192],
                  skyblue: [135, 206, 235],
                  slateblue: [106, 90, 205],
                  slategray: [112, 128, 144],
                  slategrey: [112, 128, 144],
                  snow: [255, 250, 250],
                  springgreen: [0, 255, 127],
                  steelblue: [70, 130, 180],
                  tan: [210, 180, 140],
                  teal: [0, 128, 128],
                  thistle: [216, 191, 216],
                  tomato: [255, 99, 71],
                  turquoise: [64, 224, 208],
                  violet: [238, 130, 238],
                  wheat: [245, 222, 179],
                  white: [255, 255, 255],
                  whitesmoke: [245, 245, 245],
                  yellow: [255, 255, 0]
                }, i = {
                  black: [d.black, 1],
                  white: [d.white, 1],
                  transparent: [d.black, 0]
                }, p = {
                  quot: 34,
                  amp: 38,
                  lt: 60,
                  gt: 62,
                  apos: 39,
                  OElig: 338,
                  oelig: 339,
                  Scaron: 352,
                  scaron: 353,
                  Yuml: 376,
                  circ: 710,
                  tilde: 732,
                  ensp: 8194,
                  emsp: 8195,
                  thinsp: 8201,
                  zwnj: 8204,
                  zwj: 8205,
                  lrm: 8206,
                  rlm: 8207,
                  ndash: 8211,
                  mdash: 8212,
                  lsquo: 8216,
                  rsquo: 8217,
                  sbquo: 8218,
                  ldquo: 8220,
                  rdquo: 8221,
                  bdquo: 8222,
                  dagger: 8224,
                  Dagger: 8225,
                  permil: 8240,
                  lsaquo: 8249,
                  rsaquo: 8250,
                  euro: 8364,
                  nbsp: 160,
                  iexcl: 161,
                  cent: 162,
                  pound: 163,
                  curren: 164,
                  yen: 165,
                  brvbar: 166,
                  sect: 167,
                  uml: 168,
                  copy: 169,
                  ordf: 170,
                  laquo: 171,
                  not: 172,
                  shy: 173,
                  reg: 174,
                  macr: 175,
                  deg: 176,
                  plusmn: 177,
                  sup2: 178,
                  sup3: 179,
                  acute: 180,
                  micro: 181,
                  para: 182,
                  middot: 183,
                  cedil: 184,
                  sup1: 185,
                  ordm: 186,
                  raquo: 187,
                  frac14: 188,
                  frac12: 189,
                  frac34: 190,
                  iquest: 191,
                  Agrave: 192,
                  Aacute: 193,
                  Acirc: 194,
                  Atilde: 195,
                  Auml: 196,
                  Aring: 197,
                  AElig: 198,
                  Ccedil: 199,
                  Egrave: 200,
                  Eacute: 201,
                  Ecirc: 202,
                  Euml: 203,
                  Igrave: 204,
                  Iacute: 205,
                  Icirc: 206,
                  Iuml: 207,
                  ETH: 208,
                  Ntilde: 209,
                  Ograve: 210,
                  Oacute: 211,
                  Ocirc: 212,
                  Otilde: 213,
                  Ouml: 214,
                  times: 215,
                  Oslash: 216,
                  Ugrave: 217,
                  Uacute: 218,
                  Ucirc: 219,
                  Uuml: 220,
                  Yacute: 221,
                  THORN: 222,
                  szlig: 223,
                  agrave: 224,
                  aacute: 225,
                  acirc: 226,
                  atilde: 227,
                  auml: 228,
                  aring: 229,
                  aelig: 230,
                  ccedil: 231,
                  egrave: 232,
                  eacute: 233,
                  ecirc: 234,
                  euml: 235,
                  igrave: 236,
                  iacute: 237,
                  icirc: 238,
                  iuml: 239,
                  eth: 240,
                  ntilde: 241,
                  ograve: 242,
                  oacute: 243,
                  ocirc: 244,
                  otilde: 245,
                  ouml: 246,
                  divide: 247,
                  oslash: 248,
                  ugrave: 249,
                  uacute: 250,
                  ucirc: 251,
                  uuml: 252,
                  yacute: 253,
                  thorn: 254,
                  yuml: 255,
                  fnof: 402,
                  Alpha: 913,
                  Beta: 914,
                  Gamma: 915,
                  Delta: 916,
                  Epsilon: 917,
                  Zeta: 918,
                  Eta: 919,
                  Theta: 920,
                  Iota: 921,
                  Kappa: 922,
                  Lambda: 923,
                  Mu: 924,
                  Nu: 925,
                  Xi: 926,
                  Omicron: 927,
                  Pi: 928,
                  Rho: 929,
                  Sigma: 931,
                  Tau: 932,
                  Upsilon: 933,
                  Phi: 934,
                  Chi: 935,
                  Psi: 936,
                  Omega: 937,
                  alpha: 945,
                  beta: 946,
                  gamma: 947,
                  delta: 948,
                  epsilon: 949,
                  zeta: 950,
                  eta: 951,
                  theta: 952,
                  iota: 953,
                  kappa: 954,
                  lambda: 955,
                  mu: 956,
                  nu: 957,
                  xi: 958,
                  omicron: 959,
                  pi: 960,
                  rho: 961,
                  sigmaf: 962,
                  sigma: 963,
                  tau: 964,
                  upsilon: 965,
                  phi: 966,
                  chi: 967,
                  psi: 968,
                  omega: 969,
                  thetasym: 977,
                  upsih: 978,
                  piv: 982,
                  bull: 8226,
                  hellip: 8230,
                  prime: 8242,
                  Prime: 8243,
                  oline: 8254,
                  frasl: 8260,
                  weierp: 8472,
                  image: 8465,
                  real: 8476,
                  trade: 8482,
                  alefsym: 8501,
                  larr: 8592,
                  uarr: 8593,
                  rarr: 8594,
                  darr: 8595,
                  harr: 8596,
                  crarr: 8629,
                  lArr: 8656,
                  uArr: 8657,
                  rArr: 8658,
                  dArr: 8659,
                  hArr: 8660,
                  forall: 8704,
                  part: 8706,
                  exist: 8707,
                  empty: 8709,
                  nabla: 8711,
                  isin: 8712,
                  notin: 8713,
                  ni: 8715,
                  prod: 8719,
                  sum: 8721,
                  minus: 8722,
                  lowast: 8727,
                  radic: 8730,
                  prop: 8733,
                  infin: 8734,
                  ang: 8736,
                  and: 8743,
                  or: 8744,
                  cap: 8745,
                  cup: 8746,
                  int: 8747,
                  there4: 8756,
                  sim: 8764,
                  cong: 8773,
                  asymp: 8776,
                  ne: 8800,
                  equiv: 8801,
                  le: 8804,
                  ge: 8805,
                  sub: 8834,
                  sup: 8835,
                  nsub: 8836,
                  sube: 8838,
                  supe: 8839,
                  oplus: 8853,
                  otimes: 8855,
                  perp: 8869,
                  sdot: 8901,
                  lceil: 8968,
                  rceil: 8969,
                  lfloor: 8970,
                  rfloor: 8971,
                  lang: 9001,
                  rang: 9002,
                  loz: 9674,
                  spades: 9824,
                  clubs: 9827,
                  hearts: 9829,
                  diams: 9830
                }, y = {
                  A: 7,
                  a: 7,
                  C: 6,
                  c: 6,
                  H: 1,
                  h: 1,
                  L: 2,
                  l: 2,
                  M: 2,
                  m: 2,
                  Q: 4,
                  q: 4,
                  S: 4,
                  s: 4,
                  T: 2,
                  t: 2,
                  V: 1,
                  v: 1,
                  Z: 0,
                  z: 0
                }, m = {
                  A3: !0,
                  A4: !0,
                  a3: !0,
                  a4: !0
                }, e = {
                  color: {
                    inherit: !0,
                    initial: void 0
                  },
                  visibility: {
                    inherit: !0,
                    initial: "visible",
                    values: {
                      hidden: "hidden",
                      collapse: "hidden",
                      visible: "visible"
                    }
                  },
                  fill: {
                    inherit: !0,
                    initial: i.black
                  },
                  stroke: {
                    inherit: !0,
                    initial: "none"
                  },
                  "stop-color": {
                    inherit: !1,
                    initial: i.black
                  },
                  "fill-opacity": {
                    inherit: !0,
                    initial: 1
                  },
                  "stroke-opacity": {
                    inherit: !0,
                    initial: 1
                  },
                  "stop-opacity": {
                    inherit: !1,
                    initial: 1
                  },
                  "fill-rule": {
                    inherit: !0,
                    initial: "nonzero",
                    values: {
                      nonzero: "nonzero",
                      evenodd: "evenodd"
                    }
                  },
                  "clip-rule": {
                    inherit: !0,
                    initial: "nonzero",
                    values: {
                      nonzero: "nonzero",
                      evenodd: "evenodd"
                    }
                  },
                  "stroke-width": {
                    inherit: !0,
                    initial: 1
                  },
                  "stroke-dasharray": {
                    inherit: !0,
                    initial: []
                  },
                  "stroke-dashoffset": {
                    inherit: !0,
                    initial: 0
                  },
                  "stroke-miterlimit": {
                    inherit: !0,
                    initial: 4
                  },
                  "stroke-linejoin": {
                    inherit: !0,
                    initial: "miter",
                    values: {
                      miter: "miter",
                      round: "round",
                      bevel: "bevel"
                    }
                  },
                  "stroke-linecap": {
                    inherit: !0,
                    initial: "butt",
                    values: {
                      butt: "butt",
                      round: "round",
                      square: "square"
                    }
                  },
                  "font-size": {
                    inherit: !0,
                    initial: 16,
                    values: {
                      "xx-small": 9,
                      "x-small": 10,
                      small: 13,
                      medium: 16,
                      large: 18,
                      "x-large": 24,
                      "xx-large": 32
                    }
                  },
                  "font-family": {
                    inherit: !0,
                    initial: "sans-serif"
                  },
                  "font-weight": {
                    inherit: !0,
                    initial: "normal",
                    values: {
                      600: "bold",
                      700: "bold",
                      800: "bold",
                      900: "bold",
                      bold: "bold",
                      bolder: "bold",
                      500: "normal",
                      400: "normal",
                      300: "normal",
                      200: "normal",
                      100: "normal",
                      normal: "normal",
                      lighter: "normal"
                    }
                  },
                  "font-style": {
                    inherit: !0,
                    initial: "normal",
                    values: {
                      italic: "italic",
                      oblique: "italic",
                      normal: "normal"
                    }
                  },
                  "text-anchor": {
                    inherit: !0,
                    initial: "start",
                    values: {
                      start: "start",
                      middle: "middle",
                      end: "end"
                    }
                  },
                  direction: {
                    inherit: !0,
                    initial: "ltr",
                    values: {
                      ltr: "ltr",
                      rtl: "rtl"
                    }
                  },
                  "dominant-baseline": {
                    inherit: !0,
                    initial: "baseline",
                    values: {
                      auto: "baseline",
                      baseline: "baseline",
                      "before-edge": "before-edge",
                      "text-before-edge": "before-edge",
                      middle: "middle",
                      central: "central",
                      "after-edge": "after-edge",
                      "text-after-edge": "after-edge",
                      ideographic: "ideographic",
                      alphabetic: "alphabetic",
                      hanging: "hanging",
                      mathematical: "mathematical"
                    }
                  },
                  "alignment-baseline": {
                    inherit: !1,
                    initial: void 0,
                    values: {
                      auto: "baseline",
                      baseline: "baseline",
                      "before-edge": "before-edge",
                      "text-before-edge": "before-edge",
                      middle: "middle",
                      central: "central",
                      "after-edge": "after-edge",
                      "text-after-edge": "after-edge",
                      ideographic: "ideographic",
                      alphabetic: "alphabetic",
                      hanging: "hanging",
                      mathematical: "mathematical"
                    }
                  },
                  "baseline-shift": {
                    inherit: !0,
                    initial: "baseline",
                    values: {
                      baseline: "baseline",
                      sub: "sub",
                      super: "super"
                    }
                  },
                  "word-spacing": {
                    inherit: !0,
                    initial: 0,
                    values: {
                      normal: 0
                    }
                  },
                  "letter-spacing": {
                    inherit: !0,
                    initial: 0,
                    values: {
                      normal: 0
                    }
                  },
                  "text-decoration": {
                    inherit: !1,
                    initial: "none",
                    values: {
                      none: "none",
                      underline: "underline",
                      overline: "overline",
                      "line-through": "line-through"
                    }
                  },
                  "xml:space": {
                    inherit: !0,
                    initial: "default",
                    css: "white-space",
                    values: {
                      preserve: "preserve",
                      default: "default",
                      pre: "preserve",
                      "pre-line": "preserve",
                      "pre-wrap": "preserve",
                      nowrap: "default"
                    }
                  },
                  "marker-start": {
                    inherit: !0,
                    initial: "none"
                  },
                  "marker-mid": {
                    inherit: !0,
                    initial: "none"
                  },
                  "marker-end": {
                    inherit: !0,
                    initial: "none"
                  },
                  opacity: {
                    inherit: !1,
                    initial: 1
                  },
                  transform: {
                    inherit: !1,
                    initial: [1, 0, 0, 1, 0, 0]
                  },
                  display: {
                    inherit: !1,
                    initial: "inline",
                    values: {
                      none: "none",
                      inline: "inline",
                      block: "inline"
                    }
                  },
                  "clip-path": {
                    inherit: !1,
                    initial: "none"
                  },
                  mask: {
                    inherit: !1,
                    initial: "none"
                  },
                  overflow: {
                    inherit: !1,
                    initial: "hidden",
                    values: {
                      hidden: "hidden",
                      scroll: "hidden",
                      visible: "visible"
                    }
                  }
                };
                function x(Jt) {
                  var Pt = new function() {
                  }();
                  return Pt.name = "G" + (a._groupCount = (a._groupCount || 0) + 1), Pt.resources = a.ref(), Pt.xobj = a.ref({
                    Type: "XObject",
                    Subtype: "Form",
                    FormType: 1,
                    BBox: Jt,
                    Group: {
                      S: "Transparency",
                      CS: "DeviceRGB",
                      I: !0,
                      K: !1
                    },
                    Resources: Pt.resources
                  }), Pt.xobj.write(""), Pt.savedMatrix = a._ctm, Pt.savedPage = a.page, Jn.push(Pt), a._ctm = [1, 0, 0, 1, 0, 0], a.page = {
                    width: a.page.width,
                    height: a.page.height,
                    write: function(Rt) {
                      Pt.xobj.write(Rt);
                    },
                    fonts: {},
                    xobjects: {},
                    ext_gstates: {},
                    patterns: {}
                  }, Pt;
                }
                function S(Jt) {
                  if (Jt !== Jn.pop())
                    throw "Group not matching";
                  Object.keys(a.page.fonts).length && (Jt.resources.data.Font = a.page.fonts), Object.keys(a.page.xobjects).length && (Jt.resources.data.XObject = a.page.xobjects), Object.keys(a.page.ext_gstates).length && (Jt.resources.data.ExtGState = a.page.ext_gstates), Object.keys(a.page.patterns).length && (Jt.resources.data.Pattern = a.page.patterns), Jt.resources.end(), Jt.xobj.end(), a._ctm = Jt.savedMatrix, a.page = Jt.savedPage;
                }
                function P(Jt) {
                  a.page.xobjects[Jt.name] = Jt.xobj, a.addContent("/" + Jt.name + " Do");
                }
                function O(Jt, Pt) {
                  var ne = "M" + (a._maskCount = (a._maskCount || 0) + 1), Rt = a.ref({
                    Type: "ExtGState",
                    CA: 1,
                    ca: 1,
                    BM: "Normal",
                    SMask: {
                      S: "Luminosity",
                      G: Jt.xobj,
                      BC: Pt ? [0, 0, 0] : [1, 1, 1]
                    }
                  });
                  Rt.end(), a.page.ext_gstates[ne] = Rt, a.addContent("/" + ne + " gs");
                }
                function T(Jt, Pt, ne, Rt) {
                  var Mt = new function() {
                  }();
                  return Mt.group = Jt, Mt.dx = Pt, Mt.dy = ne, Mt.matrix = Rt || [1, 0, 0, 1, 0, 0], Mt;
                }
                function A(Jt, Pt) {
                  var ne = "P" + (a._patternCount = (a._patternCount || 0) + 1), Rt = a.ref({
                    Type: "Pattern",
                    PatternType: 1,
                    PaintType: 1,
                    TilingType: 2,
                    BBox: [0, 0, Jt.dx, Jt.dy],
                    XStep: Jt.dx,
                    YStep: Jt.dy,
                    Matrix: bt(a._ctm, Jt.matrix),
                    Resources: {
                      ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                      XObject: function() {
                        var Mt = {};
                        return Mt[Jt.group.name] = Jt.group.xobj, Mt;
                      }()
                    }
                  });
                  Rt.write("/" + Jt.group.name + " Do"), Rt.end(), a.page.patterns[ne] = Rt, Pt ? (a.addContent("/Pattern CS"), a.addContent("/" + ne + " SCN")) : (a.addContent("/Pattern cs"), a.addContent("/" + ne + " scn"));
                }
                function E(Jt, Pt) {
                  a.page.fonts[Jt.id] || (a.page.fonts[Jt.id] = Jt.ref()), a.addContent("BT").addContent("/" + Jt.id + " " + Pt + " Tf");
                }
                function D(Jt, Pt, ne, Rt, Mt, kt) {
                  a.addContent(G(Jt) + " " + G(Pt) + " " + G(-ne) + " " + G(-Rt) + " " + G(Mt) + " " + G(kt) + " Tm");
                }
                function b(Jt, Pt) {
                  var ne = Jt && Pt ? 2 : Pt ? 1 : Jt ? 0 : 3;
                  a.addContent(ne + " Tr");
                }
                function R(Jt) {
                  a.addContent("<" + Jt + "> Tj");
                }
                function L() {
                  a.addContent("ET");
                }
                function N(Jt) {
                  Jt[0].constructor.name === "PDFPattern" ? (a.fillOpacity(Jt[1]), A(Jt[0], !1)) : a.fillColor(Jt[0], Jt[1]);
                }
                function M(Jt) {
                  Jt[0].constructor.name === "PDFPattern" ? (a.strokeOpacity(Jt[1]), A(Jt[0], !0)) : a.strokeColor(Jt[0], Jt[1]);
                }
                function K(Jt, Pt, ne, Rt, Mt) {
                  var kt = a.ref({
                    Type: "Annot",
                    Subtype: "Link",
                    Rect: [Jt, Pt, ne, Rt],
                    Border: [0, 0, 0],
                    A: {
                      S: "URI",
                      URI: new String(Mt)
                    }
                  });
                  kt.end(), We.push(kt);
                }
                function ct(Jt) {
                  var Pt = function(Ut, oe, Yt, xe) {
                    this.error = xe, this.nodeName = Ut, this.nodeValue = Yt, this.nodeType = oe, this.attributes = /* @__PURE__ */ Object.create(null), this.childNodes = [], this.parentNode = null, this.id = "", this.textContent = "", this.classList = [];
                  };
                  Pt.prototype.getAttribute = function(re) {
                    return this.attributes[re] != null ? this.attributes[re] : null;
                  }, Pt.prototype.getElementById = function(re) {
                    var Ut = null;
                    return function oe(Yt) {
                      if (!Ut && Yt.nodeType === 1) {
                        Yt.id === re && (Ut = Yt);
                        for (var xe = 0; xe < Yt.childNodes.length; xe++)
                          oe(Yt.childNodes[xe]);
                      }
                    }(this), Ut;
                  }, Pt.prototype.getElementsByTagName = function(re) {
                    var Ut = [];
                    return function oe(Yt) {
                      if (Yt.nodeType === 1) {
                        Yt.nodeName === re && Ut.push(Yt);
                        for (var xe = 0; xe < Yt.childNodes.length; xe++)
                          oe(Yt.childNodes[xe]);
                      }
                    }(this), Ut;
                  };
                  for (var ne = new be(Jt.trim()), Rt, Mt, kt = !1, Gt = function re() {
                    var Ut, oe;
                    if (Ut = ne.match(/^<([\w:.-]+)\s*/, !0)) {
                      for (var Yt = new Pt(Ut[1], 1, null, kt); Ut = ne.match(/^([\w:.-]+)(?:\s*=\s*"([^"]*)"|\s*=\s*'([^']*)')?\s*/, !0); ) {
                        var xe = Ut[1], Pe = J(Ut[2] || Ut[3] || "");
                        Yt.attributes[xe] ? (nr('parseXml: duplicate attribute "' + xe + '"'), kt = !0) : (Yt.attributes[xe] = Pe, xe === "id" && (Yt.id = Pe), xe === "class" && (Yt.classList = Pe.split(" ")));
                      }
                      if (ne.match(/^>/)) {
                        for (; oe = re(); )
                          Yt.childNodes.push(oe), oe.parentNode = Yt, Yt.textContent += oe.nodeType === 3 || oe.nodeType === 4 ? oe.nodeValue : oe.textContent;
                        return (Ut = ne.match(/^<\/([\w:.-]+)\s*>/, !0)) ? (Ut[1] === Yt.nodeName || (nr('parseXml: tag not matching, opening "' + Yt.nodeName + '" & closing "' + Ut[1] + '"'), kt = !0), Yt) : (nr('parseXml: tag not matching, opening "' + Yt.nodeName + '" & not closing'), kt = !0, Yt);
                      } else {
                        if (ne.match(/^\/>/))
                          return Yt;
                        nr('parseXml: tag could not be parsed "' + Yt.nodeName + '"'), kt = !0;
                      }
                    } else {
                      if (Ut = ne.match(/^<!--[\s\S]*?-->/))
                        return new Pt(null, 8, Ut, kt);
                      if (Ut = ne.match(/^<\?[\s\S]*?\?>/))
                        return new Pt(null, 7, Ut, kt);
                      if (Ut = ne.match(/^<!DOCTYPE\s*([\s\S]*?)>/))
                        return new Pt(null, 10, Ut, kt);
                      if (Ut = ne.match(/^<!\[CDATA\[([\s\S]*?)\]\]>/, !0))
                        return new Pt("#cdata-section", 4, Ut[1], kt);
                      if (Ut = ne.match(/^([^<]+)/, !0))
                        return new Pt("#text", 3, J(Ut[1]), kt);
                    }
                  }; Mt = Gt(); )
                    Mt.nodeType === 1 && !Rt ? Rt = Mt : (Mt.nodeType === 1 || Mt.nodeType === 3 && Mt.nodeValue.trim() !== "") && nr("parseXml: data after document end has been discarded");
                  return ne.matchAll() && nr("parseXml: parsing error"), Rt;
                }
                function J(Jt) {
                  return Jt.replace(/&(?:#([0-9]+)|#[xX]([0-9A-Fa-f]+)|([0-9A-Za-z]+));/g, function(Pt, ne, Rt, Mt) {
                    return ne ? String.fromCharCode(parseInt(ne, 10)) : Rt ? String.fromCharCode(parseInt(Rt, 16)) : Mt && p[Mt] ? String.fromCharCode(p[Mt]) : Pt;
                  });
                }
                function nt(Jt) {
                  var Pt, ne;
                  return Jt = (Jt || "").trim(), (Pt = d[Jt]) ? ne = [Pt.slice(), 1] : (Pt = Jt.match(/^rgba\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9.]+)\s*\)$/i)) ? (Pt[1] = parseInt(Pt[1]), Pt[2] = parseInt(Pt[2]), Pt[3] = parseInt(Pt[3]), Pt[4] = parseFloat(Pt[4]), Pt[1] < 256 && Pt[2] < 256 && Pt[3] < 256 && Pt[4] <= 1 && (ne = [Pt.slice(1, 4), Pt[4]])) : (Pt = Jt.match(/^rgb\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)$/i)) ? (Pt[1] = parseInt(Pt[1]), Pt[2] = parseInt(Pt[2]), Pt[3] = parseInt(Pt[3]), Pt[1] < 256 && Pt[2] < 256 && Pt[3] < 256 && (ne = [Pt.slice(1, 4), 1])) : (Pt = Jt.match(/^rgb\(\s*([0-9.]+)%\s*,\s*([0-9.]+)%\s*,\s*([0-9.]+)%\s*\)$/i)) ? (Pt[1] = 2.55 * parseFloat(Pt[1]), Pt[2] = 2.55 * parseFloat(Pt[2]), Pt[3] = 2.55 * parseFloat(Pt[3]), Pt[1] < 256 && Pt[2] < 256 && Pt[3] < 256 && (ne = [Pt.slice(1, 4), 1])) : (Pt = Jt.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i)) ? ne = [[parseInt(Pt[1], 16), parseInt(Pt[2], 16), parseInt(Pt[3], 16)], 1] : (Pt = Jt.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i)) && (ne = [[17 * parseInt(Pt[1], 16), 17 * parseInt(Pt[2], 16), 17 * parseInt(Pt[3], 16)], 1]), tn ? tn(ne, Jt) : ne;
                }
                function yt(Jt, Pt, ne) {
                  var Rt = Jt[0].slice(), Mt = Jt[1] * Pt;
                  if (ne) {
                    for (var kt = 0; kt < Jt.length; kt++)
                      Rt[kt] *= Mt;
                    return [Rt, 1];
                  } else
                    return [Rt, Mt];
                }
                function bt() {
                  function Jt(Rt, Mt) {
                    return [Rt[0] * Mt[0] + Rt[2] * Mt[1], Rt[1] * Mt[0] + Rt[3] * Mt[1], Rt[0] * Mt[2] + Rt[2] * Mt[3], Rt[1] * Mt[2] + Rt[3] * Mt[3], Rt[0] * Mt[4] + Rt[2] * Mt[5] + Rt[4], Rt[1] * Mt[4] + Rt[3] * Mt[5] + Rt[5]];
                  }
                  for (var Pt = arguments[0], ne = 1; ne < arguments.length; ne++)
                    Pt = Jt(Pt, arguments[ne]);
                  return Pt;
                }
                function Tt(Jt, Pt) {
                  return [Pt[0] * Jt[0] + Pt[2] * Jt[1] + Pt[4], Pt[1] * Jt[0] + Pt[3] * Jt[1] + Pt[5]];
                }
                function It() {
                  for (var Jt = a._ctm, Pt = Jn.length - 1; Pt >= 0; Pt--)
                    Jt = bt(Jn[Pt].savedMatrix, Jt);
                  return Jt;
                }
                function Lt() {
                  return new Wt().M(0, 0).L(a.page.width, 0).L(a.page.width, a.page.height).L(0, a.page.height).transform(zt(It())).getBoundingBox();
                }
                function zt(Jt) {
                  var Pt = Jt[0] * Jt[3] - Jt[1] * Jt[2];
                  return [Jt[3] / Pt, -Jt[1] / Pt, -Jt[2] / Pt, Jt[0] / Pt, (Jt[2] * Jt[5] - Jt[3] * Jt[4]) / Pt, (Jt[1] * Jt[4] - Jt[0] * Jt[5]) / Pt];
                }
                function Q(Jt) {
                  var Pt = G(Jt[0]), ne = G(Jt[1]), Rt = G(Jt[2]), Mt = G(Jt[3]), kt = G(Jt[4]), Gt = G(Jt[5]);
                  if (xt(Pt * Mt - ne * Rt, 0))
                    return [Pt, ne, Rt, Mt, kt, Gt];
                }
                function gt(Jt) {
                  var Pt = Jt[2] || 0, ne = Jt[1] || 0, Rt = Jt[0] || 0;
                  if (st(Pt, 0) && st(ne, 0))
                    return [];
                  if (st(Pt, 0))
                    return [-Rt / ne];
                  var Mt = ne * ne - 4 * Pt * Rt;
                  return xt(Mt, 0) && Mt > 0 ? [(-ne + Math.sqrt(Mt)) / (2 * Pt), (-ne - Math.sqrt(Mt)) / (2 * Pt)] : st(Mt, 0) ? [-ne / (2 * Pt)] : [];
                }
                function ht(Jt, Pt) {
                  return (Pt[0] || 0) + (Pt[1] || 0) * Jt + (Pt[2] || 0) * Jt * Jt + (Pt[3] || 0) * Jt * Jt * Jt;
                }
                function st(Jt, Pt) {
                  return Math.abs(Jt - Pt) < 1e-10;
                }
                function xt(Jt, Pt) {
                  return Math.abs(Jt - Pt) >= 1e-10;
                }
                function G(Jt) {
                  return Jt > -1e21 && Jt < 1e21 ? Math.round(Jt * 1e6) / 1e6 : 0;
                }
                function Ft(Jt) {
                  return typeof Jt == "object" && Jt !== null && typeof Jt.length == "number";
                }
                function z(Jt) {
                  for (var Pt = new be((Jt || "").trim()), ne = [1, 0, 0, 1, 0, 0], Rt; Rt = Pt.match(/^([A-Za-z]+)\s*[(]([^(]+)[)]/, !0); ) {
                    for (var Mt = Rt[1], kt = [], Gt = new be(Rt[2].trim()), re = void 0; re = Gt.matchNumber(); )
                      kt.push(Number(re)), Gt.matchSeparator();
                    if (Mt === "matrix" && kt.length === 6)
                      ne = bt(ne, [kt[0], kt[1], kt[2], kt[3], kt[4], kt[5]]);
                    else if (Mt === "translate" && kt.length === 2)
                      ne = bt(ne, [1, 0, 0, 1, kt[0], kt[1]]);
                    else if (Mt === "translate" && kt.length === 1)
                      ne = bt(ne, [1, 0, 0, 1, kt[0], 0]);
                    else if (Mt === "scale" && kt.length === 2)
                      ne = bt(ne, [kt[0], 0, 0, kt[1], 0, 0]);
                    else if (Mt === "scale" && kt.length === 1)
                      ne = bt(ne, [kt[0], 0, 0, kt[0], 0, 0]);
                    else if (Mt === "rotate" && kt.length === 3) {
                      var Ut = kt[0] * Math.PI / 180;
                      ne = bt(ne, [1, 0, 0, 1, kt[1], kt[2]], [Math.cos(Ut), Math.sin(Ut), -Math.sin(Ut), Math.cos(Ut), 0, 0], [1, 0, 0, 1, -kt[1], -kt[2]]);
                    } else if (Mt === "rotate" && kt.length === 1) {
                      var oe = kt[0] * Math.PI / 180;
                      ne = bt(ne, [Math.cos(oe), Math.sin(oe), -Math.sin(oe), Math.cos(oe), 0, 0]);
                    } else if (Mt === "skewX" && kt.length === 1) {
                      var Yt = kt[0] * Math.PI / 180;
                      ne = bt(ne, [1, 0, Math.tan(Yt), 1, 0, 0]);
                    } else if (Mt === "skewY" && kt.length === 1) {
                      var xe = kt[0] * Math.PI / 180;
                      ne = bt(ne, [1, Math.tan(xe), 0, 1, 0, 0]);
                    } else
                      return;
                    Pt.matchSeparator();
                  }
                  if (!Pt.matchAll())
                    return ne;
                }
                function C(Jt, Pt, ne, Rt, Mt, kt) {
                  var Gt = (Jt || "").trim().match(/^(none)$|^x(Min|Mid|Max)Y(Min|Mid|Max)(?:\s+(meet|slice))?$/) || [], re = Gt[1] || Gt[4] || "meet", Ut = Gt[2] || "Mid", oe = Gt[3] || "Mid", Yt = Pt / Rt, xe = ne / Mt, Pe = {
                    Min: 0,
                    Mid: 0.5,
                    Max: 1
                  }[Ut] - (kt || 0), Re = {
                    Min: 0,
                    Mid: 0.5,
                    Max: 1
                  }[oe] - (kt || 0);
                  return re === "slice" ? xe = Yt = Math.max(Yt, xe) : re === "meet" && (xe = Yt = Math.min(Yt, xe)), [Yt, 0, 0, xe, Pe * (Pt - Rt * Yt), Re * (ne - Mt * xe)];
                }
                function k(Jt) {
                  var Pt = /* @__PURE__ */ Object.create(null);
                  Jt = (Jt || "").trim().split(/;/);
                  for (var ne = 0; ne < Jt.length; ne++) {
                    var Rt = (Jt[ne].split(":")[0] || "").trim(), Mt = (Jt[ne].split(":")[1] || "").trim();
                    Rt && (Pt[Rt] = Mt);
                  }
                  if (Pt.marker && (Pt["marker-start"] || (Pt["marker-start"] = Pt.marker), Pt["marker-mid"] || (Pt["marker-mid"] = Pt.marker), Pt["marker-end"] || (Pt["marker-end"] = Pt.marker)), Pt.font) {
                    for (var kt = null, Gt = null, re = "normal", Ut = "normal", oe = "normal", Yt = Pt.font.split(/\s+/), xe = 0; xe < Yt.length; xe++)
                      switch (Yt[xe]) {
                        case "normal":
                          break;
                        case "italic":
                        case "oblique":
                          re = Yt[xe];
                          break;
                        case "small-caps":
                          oe = Yt[xe];
                          break;
                        case "bold":
                        case "bolder":
                        case "lighter":
                        case "100":
                        case "200":
                        case "300":
                        case "400":
                        case "500":
                        case "600":
                        case "700":
                        case "800":
                        case "900":
                          Ut = Yt[xe];
                          break;
                        default:
                          Gt ? kt ? kt += " " + Yt[xe] : kt = Yt[xe] : Gt = Yt[xe].split("/")[0];
                          break;
                      }
                    Pt["font-style"] || (Pt["font-style"] = re), Pt["font-variant"] || (Pt["font-variant"] = oe), Pt["font-weight"] || (Pt["font-weight"] = Ut), Pt["font-size"] || (Pt["font-size"] = Gt), Pt["font-family"] || (Pt["font-family"] = kt);
                  }
                  return Pt;
                }
                function V(Jt) {
                  for (var Pt = Jt.split(/(?=[.#])/g), ne = [], Rt = [], Mt = [], kt, Gt = 0; Gt < Pt.length; Gt++)
                    if (kt = Pt[Gt].match(/^[#]([_A-Za-z0-9-]+)$/))
                      ne.push(kt[1]);
                    else if (kt = Pt[Gt].match(/^[.]([_A-Za-z0-9-]+)$/))
                      Rt.push(kt[1]);
                    else if (kt = Pt[Gt].match(/^([_A-Za-z0-9-]+)$/))
                      Mt.push(kt[1]);
                    else if (Pt[Gt] !== "*")
                      return;
                  return {
                    tags: Mt,
                    ids: ne,
                    classes: Rt,
                    specificity: ne.length * 1e4 + Rt.length * 100 + Mt.length
                  };
                }
                function ot(Jt) {
                  for (var Pt = new be(Jt.trim()), ne = [], Rt; Rt = Pt.match(/^\s*([^\{\}]*?)\s*\{([^\{\}]*?)\}/, !0); )
                    for (var Mt = Rt[1].split(/\s*,\s*/g), kt = k(Rt[2]), Gt = 0; Gt < Mt.length; Gt++) {
                      var re = V(Mt[Gt]);
                      re && ne.push({
                        selector: re,
                        css: kt
                      });
                    }
                  return ne;
                }
                function et(Jt, Pt) {
                  if (Jt.nodeType !== 1)
                    return !1;
                  for (var ne = 0; ne < Pt.tags.length; ne++)
                    if (Pt.tags[ne] !== Jt.nodeName)
                      return !1;
                  for (var Rt = 0; Rt < Pt.ids.length; Rt++)
                    if (Pt.ids[Rt] !== Jt.id)
                      return !1;
                  for (var Mt = 0; Mt < Pt.classes.length; Mt++)
                    if (Jt.classList.indexOf(Pt.classes[Mt]) === -1)
                      return !1;
                  return !0;
                }
                function tt(Jt) {
                  for (var Pt = /* @__PURE__ */ Object.create(null), ne = /* @__PURE__ */ Object.create(null), Rt = 0; Rt < _e.length; Rt++) {
                    var Mt = _e[Rt];
                    if (et(Jt, Mt.selector))
                      for (var kt in Mt.css)
                        ne[kt] > Mt.selector.specificity || (Pt[kt] = Mt.css[kt], ne[kt] = Mt.selector.specificity);
                  }
                  return Pt;
                }
                function At(Jt, Pt) {
                  return Jt.concat(Pt.slice(Jt.length));
                }
                function Nt(Jt, Pt) {
                  return Math.max(Jt.ascender, (Jt.bbox[3] || Jt.bbox.maxY) * (Jt.scale || 1)) * Pt / 1e3;
                }
                function Kt(Jt, Pt) {
                  return Math.min(Jt.descender, (Jt.bbox[1] || Jt.bbox.minY) * (Jt.scale || 1)) * Pt / 1e3;
                }
                function Vt(Jt, Pt) {
                  return (Jt.xHeight || 0.5 * (Jt.ascender - Jt.descender)) * Pt / 1e3;
                }
                function Ot(Jt, Pt, ne, Rt) {
                  var Mt, kt;
                  switch (ne) {
                    case "middle":
                      Mt = 0.5 * Vt(Jt, Pt);
                      break;
                    case "central":
                      Mt = 0.5 * (Kt(Jt, Pt) + Nt(Jt, Pt));
                      break;
                    case "after-edge":
                    case "text-after-edge":
                      Mt = Kt(Jt, Pt);
                      break;
                    case "alphabetic":
                    case "auto":
                    case "baseline":
                      Mt = 0;
                      break;
                    case "mathematical":
                      Mt = 0.5 * Nt(Jt, Pt);
                      break;
                    case "hanging":
                      Mt = 0.8 * Nt(Jt, Pt);
                      break;
                    case "before-edge":
                    case "text-before-edge":
                      Mt = Nt(Jt, Pt);
                      break;
                    default:
                      Mt = 0;
                      break;
                  }
                  switch (Rt) {
                    case "baseline":
                      kt = 0;
                      break;
                    case "super":
                      kt = 0.6 * Pt;
                      break;
                    case "sub":
                      kt = -0.6 * Pt;
                      break;
                    default:
                      kt = Rt;
                      break;
                  }
                  return Mt - kt;
                }
                function ie(Jt, Pt, ne) {
                  for (var Rt = Jt.encode("" + ne), Mt = Rt[0], kt = Rt[1], Gt = [], re = 0; re < Mt.length; re++) {
                    var Ut = Jt.unicode ? Jt.unicode[parseInt(Mt[re], 16)] : [ne.charCodeAt(re)];
                    Gt.push({
                      glyph: Mt[re],
                      unicode: Ut,
                      width: kt[re].advanceWidth * Pt / 1e3,
                      xOffset: kt[re].xOffset * Pt / 1e3,
                      yOffset: kt[re].yOffset * Pt / 1e3,
                      xAdvance: kt[re].xAdvance * Pt / 1e3,
                      yAdvance: kt[re].yAdvance * Pt / 1e3
                    });
                  }
                  return Gt;
                }
                function Ae(Jt, Pt) {
                  switch (Jt.nodeName) {
                    case "use":
                      return new Be(Jt, Pt);
                    case "symbol":
                      return new Ie(Jt, Pt);
                    case "g":
                      return new Dt(Jt, Pt);
                    case "a":
                      return new ue(Jt, Pt);
                    case "svg":
                      return new lt(Jt, Pt);
                    case "image":
                      return new Y(Jt, Pt);
                    case "rect":
                      return new Ht(Jt, Pt);
                    case "circle":
                      return new te(Jt, Pt);
                    case "ellipse":
                      return new _(Jt, Pt);
                    case "line":
                      return new Qt(Jt, Pt);
                    case "polyline":
                      return new ee(Jt, Pt);
                    case "polygon":
                      return new Et(Jt, Pt);
                    case "path":
                      return new jt(Jt, Pt);
                    case "text":
                      return new Ye(Jt, Pt);
                    case "tspan":
                      return new on(Jt, Pt);
                    case "textPath":
                      return new er(Jt, Pt);
                    case "#text":
                    case "#cdata-section":
                      return new Me(Jt);
                    default:
                      return new _t(Jt, Pt);
                  }
                }
                var be = function(Pt) {
                  this.match = function(ne, Rt) {
                    var Mt = Pt.match(ne);
                    if (!(!Mt || Mt.index !== 0))
                      return Pt = Pt.substring(Mt[0].length), Rt ? Mt : Mt[0];
                  }, this.matchSeparator = function() {
                    return this.match(/^(?:\s*,\s*|\s*|)/);
                  }, this.matchSpace = function() {
                    return this.match(/^(?:\s*)/);
                  }, this.matchLengthUnit = function() {
                    return this.match(/^(?:px|pt|cm|mm|in|pc|em|ex|%|)/);
                  }, this.matchNumber = function() {
                    return this.match(/^(?:[-+]?(?:[0-9]+[.][0-9]+|[0-9]+[.]|[.][0-9]+|[0-9]+)(?:[eE][-+]?[0-9]+)?)/);
                  }, this.matchAll = function() {
                    return this.match(/^[\s\S]+/);
                  };
                }, de = function(Pt, ne, Rt, Mt, kt, Gt, re, Ut) {
                  for (var oe = 6 * Kn, Yt = [Pt, -3 * Pt + 3 * Rt, 3 * Pt - 6 * Rt + 3 * kt, -Pt + 3 * Rt - 3 * kt + re], xe = [ne, -3 * ne + 3 * Mt, 3 * ne - 6 * Mt + 3 * Gt, -ne + 3 * Mt - 3 * Gt + Ut], Pe = [-3 * Pt + 3 * Rt, 6 * Pt - 12 * Rt + 6 * kt, -3 * Pt + 9 * Rt - 9 * kt + 3 * re], Re = [-3 * ne + 3 * Mt, 6 * ne - 12 * Mt + 6 * Gt, -3 * ne + 9 * Mt - 9 * Gt + 3 * Ut], Ge = [0], Qe = 1; Qe <= oe; Qe++) {
                    var ar = (Qe - 0.5) / oe, ge = ht(ar, Pe) / oe, Le = ht(ar, Re) / oe, $e = Math.sqrt(ge * ge + Le * Le);
                    Ge[Qe] = Ge[Qe - 1] + $e;
                  }
                  this.totalLength = Ge[oe], this.startPoint = [Pt, ne, st(Pt, Rt) && st(ne, Mt) ? Math.atan2(Gt - Mt, kt - Rt) : Math.atan2(Mt - ne, Rt - Pt)], this.endPoint = [re, Ut, st(kt, re) && st(Gt, Ut) ? Math.atan2(Gt - Mt, kt - Rt) : Math.atan2(Ut - Gt, re - kt)], this.getBoundingBox = function() {
                    var He, ir = ht(0, Yt), Ke = ht(0, xe), dr = ht(1, Yt), sr = ht(1, xe);
                    ir > dr && (He = dr, dr = ir, ir = He), Ke > sr && (He = sr, sr = Ke, Ke = He);
                    for (var Tr = gt(Pe), Wr = 0; Wr < Tr.length; Wr++)
                      if (Tr[Wr] >= 0 && Tr[Wr] <= 1) {
                        var Br = ht(Tr[Wr], Yt);
                        Br < ir && (ir = Br), Br > dr && (dr = Br);
                      }
                    for (var Dr = gt(Re), Rr = 0; Rr < Dr.length; Rr++)
                      if (Dr[Rr] >= 0 && Dr[Rr] <= 1) {
                        var rn = ht(Dr[Rr], xe);
                        rn < Ke && (Ke = rn), rn > sr && (sr = rn);
                      }
                    return [ir, Ke, dr, sr];
                  }, this.getPointAtLength = function(He) {
                    if (st(He, 0))
                      return this.startPoint;
                    if (st(He, this.totalLength))
                      return this.endPoint;
                    if (!(He < 0 || He > this.totalLength))
                      for (var ir = 1; ir <= oe; ir++) {
                        var Ke = Ge[ir - 1], dr = Ge[ir];
                        if (Ke <= He && He <= dr) {
                          var sr = (ir - (dr - He) / (dr - Ke)) / oe, Tr = ht(sr, Yt), Wr = ht(sr, xe), Br = ht(sr, Pe), Dr = ht(sr, Re);
                          return [Tr, Wr, Math.atan2(Dr, Br)];
                        }
                      }
                  };
                }, Se = function(Pt, ne, Rt, Mt) {
                  this.totalLength = Math.sqrt((Rt - Pt) * (Rt - Pt) + (Mt - ne) * (Mt - ne)), this.startPoint = [Pt, ne, Math.atan2(Mt - ne, Rt - Pt)], this.endPoint = [Rt, Mt, Math.atan2(Mt - ne, Rt - Pt)], this.getBoundingBox = function() {
                    return [Math.min(this.startPoint[0], this.endPoint[0]), Math.min(this.startPoint[1], this.endPoint[1]), Math.max(this.startPoint[0], this.endPoint[0]), Math.max(this.startPoint[1], this.endPoint[1])];
                  }, this.getPointAtLength = function(kt) {
                    if (kt >= 0 && kt <= this.totalLength) {
                      var Gt = kt / this.totalLength || 0, re = this.startPoint[0] + Gt * (this.endPoint[0] - this.startPoint[0]), Ut = this.startPoint[1] + Gt * (this.endPoint[1] - this.startPoint[1]);
                      return [re, Ut, this.startPoint[2]];
                    }
                  };
                }, Wt = function Jt() {
                  this.pathCommands = [], this.pathSegments = [], this.startPoint = null, this.endPoint = null, this.totalLength = 0;
                  var Pt = 0, ne = 0, Rt = 0, Mt = 0, kt, Gt, re;
                  this.move = function(Ut, oe) {
                    return Pt = Rt = Ut, ne = Mt = oe, null;
                  }, this.line = function(Ut, oe) {
                    var Yt = new Se(Rt, Mt, Ut, oe);
                    return Rt = Ut, Mt = oe, Yt;
                  }, this.curve = function(Ut, oe, Yt, xe, Pe, Re) {
                    var Ge = new de(Rt, Mt, Ut, oe, Yt, xe, Pe, Re);
                    return Rt = Pe, Mt = Re, Ge;
                  }, this.close = function() {
                    var Ut = new Se(Rt, Mt, Pt, ne);
                    return Rt = Pt, Mt = ne, Ut;
                  }, this.addCommand = function(Ut) {
                    this.pathCommands.push(Ut);
                    var oe = this[Ut[0]].apply(this, Ut.slice(3));
                    oe && (oe.hasStart = Ut[1], oe.hasEnd = Ut[2], this.startPoint = this.startPoint || oe.startPoint, this.endPoint = oe.endPoint, this.pathSegments.push(oe), this.totalLength += oe.totalLength);
                  }, this.M = function(Ut, oe) {
                    return this.addCommand(["move", !0, !0, Ut, oe]), kt = "M", this;
                  }, this.m = function(Ut, oe) {
                    return this.M(Rt + Ut, Mt + oe);
                  }, this.Z = this.z = function() {
                    return this.addCommand(["close", !0, !0]), kt = "Z", this;
                  }, this.L = function(Ut, oe) {
                    return this.addCommand(["line", !0, !0, Ut, oe]), kt = "L", this;
                  }, this.l = function(Ut, oe) {
                    return this.L(Rt + Ut, Mt + oe);
                  }, this.H = function(Ut) {
                    return this.L(Ut, Mt);
                  }, this.h = function(Ut) {
                    return this.L(Rt + Ut, Mt);
                  }, this.V = function(Ut) {
                    return this.L(Rt, Ut);
                  }, this.v = function(Ut) {
                    return this.L(Rt, Mt + Ut);
                  }, this.C = function(Ut, oe, Yt, xe, Pe, Re) {
                    return this.addCommand(["curve", !0, !0, Ut, oe, Yt, xe, Pe, Re]), kt = "C", Gt = Yt, re = xe, this;
                  }, this.c = function(Ut, oe, Yt, xe, Pe, Re) {
                    return this.C(Rt + Ut, Mt + oe, Rt + Yt, Mt + xe, Rt + Pe, Mt + Re);
                  }, this.S = function(Ut, oe, Yt, xe) {
                    return this.C(Rt + (kt === "C" ? Rt - Gt : 0), Mt + (kt === "C" ? Mt - re : 0), Ut, oe, Yt, xe);
                  }, this.s = function(Ut, oe, Yt, xe) {
                    return this.C(Rt + (kt === "C" ? Rt - Gt : 0), Mt + (kt === "C" ? Mt - re : 0), Rt + Ut, Mt + oe, Rt + Yt, Mt + xe);
                  }, this.Q = function(Ut, oe, Yt, xe) {
                    var Pe = Rt + 0.6666666666666666 * (Ut - Rt), Re = Mt + 2 / 3 * (oe - Mt), Ge = Yt + 2 / 3 * (Ut - Yt), Qe = xe + 2 / 3 * (oe - xe);
                    return this.addCommand(["curve", !0, !0, Pe, Re, Ge, Qe, Yt, xe]), kt = "Q", Gt = Ut, re = oe, this;
                  }, this.q = function(Ut, oe, Yt, xe) {
                    return this.Q(Rt + Ut, Mt + oe, Rt + Yt, Mt + xe);
                  }, this.T = function(Ut, oe) {
                    return this.Q(Rt + (kt === "Q" ? Rt - Gt : 0), Mt + (kt === "Q" ? Mt - re : 0), Ut, oe);
                  }, this.t = function(Ut, oe) {
                    return this.Q(Rt + (kt === "Q" ? Rt - Gt : 0), Mt + (kt === "Q" ? Mt - re : 0), Rt + Ut, Mt + oe);
                  }, this.A = function(Ut, oe, Yt, xe, Pe, Re, Ge) {
                    if (st(Ut, 0) || st(oe, 0))
                      this.addCommand(["line", !0, !0, Re, Ge]);
                    else {
                      Yt = Yt * (Math.PI / 180), Ut = Math.abs(Ut), oe = Math.abs(oe), xe = 1 * !!xe, Pe = 1 * !!Pe;
                      var Qe = Math.cos(Yt) * (Rt - Re) / 2 + Math.sin(Yt) * (Mt - Ge) / 2, ar = Math.cos(Yt) * (Mt - Ge) / 2 - Math.sin(Yt) * (Rt - Re) / 2, ge = Qe * Qe / (Ut * Ut) + ar * ar / (oe * oe);
                      ge > 1 && (Ut *= Math.sqrt(ge), oe *= Math.sqrt(ge));
                      var Le = Math.sqrt(Math.max(0, Ut * Ut * oe * oe - Ut * Ut * ar * ar - oe * oe * Qe * Qe) / (Ut * Ut * ar * ar + oe * oe * Qe * Qe)), $e = (xe === Pe ? -1 : 1) * Le * Ut * ar / oe, He = (xe === Pe ? 1 : -1) * Le * oe * Qe / Ut, ir = Math.cos(Yt) * $e - Math.sin(Yt) * He + (Rt + Re) / 2, Ke = Math.sin(Yt) * $e + Math.cos(Yt) * He + (Mt + Ge) / 2, dr = Math.atan2((ar - He) / oe, (Qe - $e) / Ut), sr = Math.atan2((-ar - He) / oe, (-Qe - $e) / Ut);
                      Pe === 0 && sr - dr > 0 ? sr -= 2 * Math.PI : Pe === 1 && sr - dr < 0 && (sr += 2 * Math.PI);
                      for (var Tr = Math.ceil(Math.abs(sr - dr) / (Math.PI / Kn)), Wr = 0; Wr < Tr; Wr++) {
                        var Br = dr + Wr * (sr - dr) / Tr, Dr = dr + (Wr + 1) * (sr - dr) / Tr, Rr = 4 / 3 * Math.tan((Dr - Br) / 4), rn = ir + Math.cos(Yt) * Ut * (Math.cos(Br) - Rr * Math.sin(Br)) - Math.sin(Yt) * oe * (Math.sin(Br) + Rr * Math.cos(Br)), Dn = Ke + Math.sin(Yt) * Ut * (Math.cos(Br) - Rr * Math.sin(Br)) + Math.cos(Yt) * oe * (Math.sin(Br) + Rr * Math.cos(Br)), ln = ir + Math.cos(Yt) * Ut * (Math.cos(Dr) + Rr * Math.sin(Dr)) - Math.sin(Yt) * oe * (Math.sin(Dr) - Rr * Math.cos(Dr)), An = Ke + Math.sin(Yt) * Ut * (Math.cos(Dr) + Rr * Math.sin(Dr)) + Math.cos(Yt) * oe * (Math.sin(Dr) - Rr * Math.cos(Dr)), Mn = ir + Math.cos(Yt) * Ut * Math.cos(Dr) - Math.sin(Yt) * oe * Math.sin(Dr), fn = Ke + Math.sin(Yt) * Ut * Math.cos(Dr) + Math.cos(Yt) * oe * Math.sin(Dr);
                        this.addCommand(["curve", Wr === 0, Wr === Tr - 1, rn, Dn, ln, An, Mn, fn]);
                      }
                    }
                    return kt = "A", this;
                  }, this.a = function(Ut, oe, Yt, xe, Pe, Re, Ge) {
                    return this.A(Ut, oe, Yt, xe, Pe, Rt + Re, Mt + Ge);
                  }, this.path = function(Ut) {
                    for (var oe, Yt, xe, Pe = new be((Ut || "").trim()); oe = Pe.match(/^[astvzqmhlcASTVZQMHLC]/); ) {
                      Pe.matchSeparator();
                      for (var Re = []; Yt = m[oe + Re.length] ? Pe.match(/^[01]/) : Pe.matchNumber(); )
                        Pe.matchSeparator(), Re.length === y[oe] && (this[oe].apply(this, Re), Re = [], oe === "M" ? oe = "L" : oe === "m" && (oe = "l")), Re.push(Number(Yt));
                      if (Re.length === y[oe])
                        this[oe].apply(this, Re);
                      else {
                        nr("SvgPath: command " + oe + " with " + Re.length + " numbers");
                        return;
                      }
                    }
                    return (xe = Pe.matchAll()) && nr("SvgPath: unexpected string " + xe), this;
                  }, this.getBoundingBox = function() {
                    var Ut = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
                    function oe(xe) {
                      xe[0] < Ut[0] && (Ut[0] = xe[0]), xe[2] > Ut[2] && (Ut[2] = xe[2]), xe[1] < Ut[1] && (Ut[1] = xe[1]), xe[3] > Ut[3] && (Ut[3] = xe[3]);
                    }
                    for (var Yt = 0; Yt < this.pathSegments.length; Yt++)
                      oe(this.pathSegments[Yt].getBoundingBox());
                    return Ut[0] === 1 / 0 && (Ut[0] = 0), Ut[1] === 1 / 0 && (Ut[1] = 0), Ut[2] === -1 / 0 && (Ut[2] = 0), Ut[3] === -1 / 0 && (Ut[3] = 0), Ut;
                  }, this.getPointAtLength = function(Ut) {
                    if (Ut >= 0 && Ut <= this.totalLength) {
                      for (var oe, Yt = 0; Yt < this.pathSegments.length; Yt++) {
                        if (oe = this.pathSegments[Yt].getPointAtLength(Ut))
                          return oe;
                        Ut -= this.pathSegments[Yt].totalLength;
                      }
                      return this.endPoint;
                    }
                  }, this.transform = function(Ut) {
                    this.pathSegments = [], this.startPoint = null, this.endPoint = null, this.totalLength = 0;
                    for (var oe = 0; oe < this.pathCommands.length; oe++) {
                      for (var Yt = this.pathCommands.shift(), xe = 3; xe < Yt.length; xe += 2) {
                        var Pe = Tt([Yt[xe], Yt[xe + 1]], Ut);
                        Yt[xe] = Pe[0], Yt[xe + 1] = Pe[1];
                      }
                      this.addCommand(Yt);
                    }
                    return this;
                  }, this.mergeShape = function(Ut) {
                    for (var oe = 0; oe < Ut.pathCommands.length; oe++)
                      this.addCommand(Ut.pathCommands[oe].slice());
                    return this;
                  }, this.clone = function() {
                    return new Jt().mergeShape(this);
                  }, this.insertInDocument = function() {
                    for (var Ut = 0; Ut < this.pathCommands.length; Ut++) {
                      var oe = this.pathCommands[Ut][0], Yt = this.pathCommands[Ut].slice(3);
                      switch (oe) {
                        case "move":
                          a.moveTo(Yt[0], Yt[1]);
                          break;
                        case "line":
                          a.lineTo(Yt[0], Yt[1]);
                          break;
                        case "curve":
                          a.bezierCurveTo(Yt[0], Yt[1], Yt[2], Yt[3], Yt[4], Yt[5]);
                          break;
                        case "close":
                          a.closePath();
                          break;
                      }
                    }
                  }, this.getSubPaths = function() {
                    for (var Ut = [], oe = new Jt(), Yt = 0; Yt < this.pathCommands.length; Yt++) {
                      var xe = this.pathCommands[Yt], Pe = this.pathCommands[Yt][0];
                      Pe === "move" && Yt !== 0 && (Ut.push(oe), oe = new Jt()), oe.addCommand(xe);
                    }
                    return Ut.push(oe), Ut;
                  }, this.getMarkers = function() {
                    for (var Ut = [], oe = this.getSubPaths(), Yt = 0; Yt < oe.length; Yt++) {
                      for (var xe = oe[Yt], Pe = [], Re = 0; Re < xe.pathSegments.length; Re++) {
                        var Ge = xe.pathSegments[Re];
                        if (xt(Ge.totalLength, 0) || Re === 0 || Re === xe.pathSegments.length - 1) {
                          if (Ge.hasStart) {
                            var Qe = Ge.getPointAtLength(0), ar = Pe.pop();
                            ar && (Qe[2] = 0.5 * (ar[2] + Qe[2])), Pe.push(Qe);
                          }
                          if (Ge.hasEnd) {
                            var ge = Ge.getPointAtLength(Ge.totalLength);
                            Pe.push(ge);
                          }
                        }
                      }
                      Ut = Ut.concat(Pe);
                    }
                    return Ut;
                  };
                }, _t = function(Pt, ne) {
                  var Rt = /* @__PURE__ */ Object.create(null), Mt = null;
                  this.name = Pt.nodeName, this.isOuterElement = Pt === o || !Pt.parentNode, this.inherits = ne || (this.isOuterElement ? null : Ae(Pt.parentNode, null)), this.stack = this.inherits ? this.inherits.stack.concat(Pt) : [Pt], this.style = k(typeof Pt.getAttribute == "function" && Pt.getAttribute("style")), this.css = Gn ? getComputedStyle(Pt) : tt(Pt), this.allowedChildren = [], this.attr = function(kt) {
                    if (typeof Pt.getAttribute == "function")
                      return Pt.getAttribute(kt);
                  }, this.resolveUrl = function(kt) {
                    var Gt = (kt || "").match(/^\s*(?:url\("(.*)#(.*)"\)|url\('(.*)#(.*)'\)|url\((.*)#(.*)\)|(.*)#(.*))\s*$/) || [], re = Gt[1] || Gt[3] || Gt[5] || Gt[7], Ut = Gt[2] || Gt[4] || Gt[6] || Gt[8];
                    if (Ut) {
                      if (!re) {
                        var oe = o.getElementById(Ut);
                        if (oe) {
                          if (this.stack.indexOf(oe) === -1)
                            return oe;
                          nr('SVGtoPDF: loop of circular references for id "' + Ut + '"');
                          return;
                        }
                      }
                      if (Gr) {
                        var Yt = ze[re];
                        if (!Yt) {
                          Yt = Gr(re), Ft(Yt) || (Yt = [Yt]);
                          for (var xe = 0; xe < Yt.length; xe++)
                            typeof Yt[xe] == "string" && (Yt[xe] = ct(Yt[xe]));
                          ze[re] = Yt;
                        }
                        for (var Pe = 0; Pe < Yt.length; Pe++) {
                          var Re = Yt[Pe].getElementById(Ut);
                          if (Re) {
                            if (this.stack.indexOf(Re) === -1)
                              return Re;
                            nr('SVGtoPDF: loop of circular references for id "' + re + "#" + Ut + '"');
                            return;
                          }
                        }
                      }
                    }
                  }, this.computeUnits = function(kt, Gt, re, Ut) {
                    return Gt === "%" ? parseFloat(kt) / 100 * (Ut || re != null ? re : this.getViewport()) : Gt === "ex" || Gt === "em" ? kt * {
                      em: 1,
                      ex: 0.5
                    }[Gt] * (Ut ? re : this.get("font-size")) : kt * {
                      "": 1,
                      px: 1,
                      pt: 96 / 72,
                      cm: 96 / 2.54,
                      mm: 96 / 25.4,
                      in: 96,
                      pc: 96 / 6
                    }[Gt];
                  }, this.computeLength = function(kt, Gt, re, Ut) {
                    var oe = new be((kt || "").trim()), Yt, xe;
                    return typeof (Yt = oe.matchNumber()) == "string" && typeof (xe = oe.matchLengthUnit()) == "string" && !oe.matchAll() ? this.computeUnits(Yt, xe, Gt, Ut) : re;
                  }, this.computeLengthList = function(kt, Gt, re) {
                    for (var Ut = new be((kt || "").trim()), oe = [], Yt, xe; typeof (Yt = Ut.matchNumber()) == "string" && typeof (xe = Ut.matchLengthUnit()) == "string"; )
                      oe.push(this.computeUnits(Yt, xe, Gt)), Ut.matchSeparator();
                    if (!(re && Ut.matchAll()))
                      return oe;
                  }, this.getLength = function(kt, Gt, re) {
                    return this.computeLength(this.attr(kt), Gt, re);
                  }, this.getLengthList = function(kt, Gt) {
                    return this.computeLengthList(this.attr(kt), Gt);
                  }, this.getUrl = function(kt) {
                    return this.resolveUrl(this.attr(kt));
                  }, this.getNumberList = function(kt) {
                    for (var Gt = new be((this.attr(kt) || "").trim()), re = [], Ut; Ut = Gt.matchNumber(); )
                      re.push(Number(Ut)), Gt.matchSeparator();
                    return re.error = Gt.matchAll(), re;
                  }, this.getViewbox = function(kt, Gt) {
                    var re = this.getNumberList(kt);
                    return re.length === 4 && re[2] >= 0 && re[3] >= 0 ? re : Gt;
                  }, this.getPercent = function(kt, Gt) {
                    var re = this.attr(kt), Ut = new be((re || "").trim()), oe = Ut.matchNumber();
                    return !oe || (Ut.match("%") && (oe *= 0.01), Ut.matchAll()) ? Gt : Math.max(0, Math.min(1, oe));
                  }, this.chooseValue = function(kt) {
                    for (var Gt = 0; Gt < arguments.length; Gt++)
                      if (arguments[Gt] != null && arguments[Gt] === arguments[Gt])
                        return arguments[Gt];
                    return arguments[arguments.length - 1];
                  }, this.get = function(kt) {
                    if (Rt[kt] !== void 0)
                      return Rt[kt];
                    for (var Gt = e[kt] || {}, re, Ut, oe = 0; oe < 3; oe++) {
                      switch (oe) {
                        case 0:
                          kt !== "transform" && (re = this.css[Gt.css || kt]);
                          break;
                        case 1:
                          re = this.style[kt];
                          break;
                        case 2:
                          re = this.attr(kt);
                          break;
                      }
                      if (re === "inherit" && (Ut = this.inherits ? this.inherits.get(kt) : Gt.initial, Ut != null) || Gt.values != null && (Ut = Gt.values[re], Ut != null))
                        return Rt[kt] = Ut;
                      if (re != null) {
                        var Yt = void 0;
                        switch (kt) {
                          case "font-size":
                            Ut = this.computeLength(re, this.inherits ? this.inherits.get(kt) : Gt.initial, void 0, !0);
                            break;
                          case "baseline-shift":
                            Ut = this.computeLength(re, this.get("font-size"));
                            break;
                          case "font-family":
                            Ut = re || void 0;
                            break;
                          case "opacity":
                          case "stroke-opacity":
                          case "fill-opacity":
                          case "stop-opacity":
                            Yt = parseFloat(re), isNaN(Yt) || (Ut = Math.max(0, Math.min(1, Yt)));
                            break;
                          case "transform":
                            Ut = z(re);
                            break;
                          case "stroke-dasharray":
                            if (re === "none")
                              Ut = [];
                            else if (Yt = this.computeLengthList(re, this.getViewport(), !0)) {
                              for (var xe = 0, Pe = !1, Re = 0; Re < Yt.length; Re++)
                                Yt[Re] < 0 && (Pe = !0), xe += Yt[Re];
                              Pe || (Yt.length % 2 === 1 && (Yt = Yt.concat(Yt)), Ut = xe === 0 ? [] : Yt);
                            }
                            break;
                          case "color":
                            re === "none" || re === "transparent" ? Ut = "none" : Ut = nt(re);
                            break;
                          case "fill":
                          case "stroke":
                            if (re === "none" || re === "transparent")
                              Ut = "none";
                            else if (re === "currentColor")
                              Ut = this.get("color");
                            else {
                              if (Yt = nt(re))
                                return Yt;
                              if (Yt = (re || "").split(" ")) {
                                var Ge = this.resolveUrl(Yt[0]), Qe = nt(Yt[1]);
                                Ge == null ? Ut = Qe : Ge.nodeName === "linearGradient" || Ge.nodeName === "radialGradient" ? Ut = new wt(Ge, null, Qe) : Ge.nodeName === "pattern" ? Ut = new j(Ge, null, Qe) : Ut = Qe;
                              }
                            }
                            break;
                          case "stop-color":
                            re === "none" || re === "transparent" ? Ut = "none" : re === "currentColor" ? Ut = this.get("color") : Ut = nt(re);
                            break;
                          case "marker-start":
                          case "marker-mid":
                          case "marker-end":
                          case "clip-path":
                          case "mask":
                            re === "none" ? Ut = "none" : Ut = this.resolveUrl(re);
                            break;
                          case "stroke-width":
                            Yt = this.computeLength(re, this.getViewport()), Yt != null && Yt >= 0 && (Ut = Yt);
                            break;
                          case "stroke-miterlimit":
                            Yt = parseFloat(re), Yt != null && Yt >= 1 && (Ut = Yt);
                            break;
                          case "word-spacing":
                          case "letter-spacing":
                            Ut = this.computeLength(re, this.getViewport());
                            break;
                          case "stroke-dashoffset":
                            if (Ut = this.computeLength(re, this.getViewport()), Ut != null && Ut < 0)
                              for (var ar = this.get("stroke-dasharray"), ge = 0; ge < ar.length; ge++)
                                Ut += ar[ge];
                            break;
                        }
                        if (Ut != null)
                          return Rt[kt] = Ut;
                      }
                    }
                    return Rt[kt] = Gt.inherit && this.inherits ? this.inherits.get(kt) : Gt.initial;
                  }, this.getChildren = function() {
                    if (Mt != null)
                      return Mt;
                    for (var kt = [], Gt = 0; Gt < Pt.childNodes.length; Gt++) {
                      var re = Pt.childNodes[Gt];
                      !re.error && this.allowedChildren.indexOf(re.nodeName) !== -1 && kt.push(Ae(re, this));
                    }
                    return Mt = kt;
                  }, this.getParentVWidth = function() {
                    return this.inherits ? this.inherits.getVWidth() : Pr;
                  }, this.getParentVHeight = function() {
                    return this.inherits ? this.inherits.getVHeight() : Jr;
                  }, this.getParentViewport = function() {
                    return Math.sqrt(0.5 * this.getParentVWidth() * this.getParentVWidth() + 0.5 * this.getParentVHeight() * this.getParentVHeight());
                  }, this.getVWidth = function() {
                    return this.getParentVWidth();
                  }, this.getVHeight = function() {
                    return this.getParentVHeight();
                  }, this.getViewport = function() {
                    return Math.sqrt(0.5 * this.getVWidth() * this.getVWidth() + 0.5 * this.getVHeight() * this.getVHeight());
                  }, this.getBoundingBox = function() {
                    var kt = this.getBoundingShape();
                    return kt.getBoundingBox();
                  };
                }, ce = function(Pt, ne) {
                  _t.call(this, Pt, ne), this.transform = function() {
                    a.transform.apply(a, this.getTransformation());
                  }, this.clip = function() {
                    if (this.get("clip-path") !== "none") {
                      var Rt = new Ne(this.get("clip-path"), null);
                      return Rt.useMask(this.getBoundingBox()), !0;
                    }
                  }, this.mask = function() {
                    if (this.get("mask") !== "none") {
                      var Rt = new Oe(this.get("mask"), null);
                      return Rt.useMask(this.getBoundingBox()), !0;
                    }
                  }, this.getFill = function(Rt, Mt) {
                    var kt = this.get("opacity"), Gt = this.get("fill"), re = this.get("fill-opacity");
                    if (Rt)
                      return i.white;
                    if (Gt !== "none" && kt && re)
                      return Gt instanceof wt || Gt instanceof j ? Gt.getPaint(this.getBoundingBox(), re * kt, Rt, Mt) : yt(Gt, re * kt, Mt);
                  }, this.getStroke = function(Rt, Mt) {
                    var kt = this.get("opacity"), Gt = this.get("stroke"), re = this.get("stroke-opacity");
                    if (!(Rt || st(this.get("stroke-width"), 0)) && Gt !== "none" && kt && re)
                      return Gt instanceof wt || Gt instanceof j ? Gt.getPaint(this.getBoundingBox(), re * kt, Rt, Mt) : yt(Gt, re * kt, Mt);
                  };
                }, pe = function(Pt, ne) {
                  ce.call(this, Pt, ne), this.allowedChildren = ["use", "g", "a", "svg", "image", "rect", "circle", "ellipse", "line", "polyline", "polygon", "path", "text"], this.getBoundingShape = function() {
                    for (var Rt = new Wt(), Mt = this.getChildren(), kt = 0; kt < Mt.length; kt++)
                      if (Mt[kt].get("display") !== "none" && typeof Mt[kt].getBoundingShape == "function") {
                        var Gt = Mt[kt].getBoundingShape().clone();
                        typeof Mt[kt].getTransformation == "function" && Gt.transform(Mt[kt].getTransformation()), Rt.mergeShape(Gt);
                      }
                    return Rt;
                  }, this.drawChildren = function(Rt, Mt) {
                    for (var kt = this.getChildren(), Gt = 0; Gt < kt.length; Gt++)
                      kt[Gt].get("display") !== "none" && typeof kt[Gt].drawInDocument == "function" && kt[Gt].drawInDocument(Rt, Mt);
                  };
                }, we = function(Pt, ne) {
                  pe.call(this, Pt, ne), this.drawContent = function(Rt, Mt) {
                    this.transform();
                    var kt = this.clip(), Gt = this.mask(), re;
                    (this.get("opacity") < 1 || kt || Gt) && !Rt && (re = x(Lt())), this.drawChildren(Rt, Mt), re && (S(re), a.fillOpacity(this.get("opacity")), P(re));
                  };
                }, Be = function(Pt, ne) {
                  we.call(this, Pt, ne);
                  var Rt = this.getLength("x", this.getVWidth(), 0), Mt = this.getLength("y", this.getVHeight(), 0), kt = this.getUrl("href") || this.getUrl("xlink:href");
                  kt && (kt = Ae(kt, this)), this.getChildren = function() {
                    return kt ? [kt] : [];
                  }, this.drawInDocument = function(Gt, re) {
                    a.save(), this.drawContent(Gt, re), a.restore();
                  }, this.getTransformation = function() {
                    return bt(this.get("transform"), [1, 0, 0, 1, Rt, Mt]);
                  };
                }, Ie = function(Pt, ne) {
                  we.call(this, Pt, ne);
                  var Rt = this.getLength("width", this.getParentVWidth(), this.getParentVWidth()), Mt = this.getLength("height", this.getParentVHeight(), this.getParentVHeight());
                  ne instanceof Be && (Rt = ne.getLength("width", ne.getParentVWidth(), Rt), Mt = ne.getLength("height", ne.getParentVHeight(), Mt));
                  var kt = (this.attr("preserveAspectRatio") || "").trim(), Gt = this.getViewbox("viewBox", [0, 0, Rt, Mt]);
                  this.getVWidth = function() {
                    return Gt[2];
                  }, this.getVHeight = function() {
                    return Gt[3];
                  }, this.drawInDocument = function(re, Ut) {
                    a.save(), this.drawContent(re, Ut), a.restore();
                  }, this.getTransformation = function() {
                    return bt(C(kt, Rt, Mt, Gt[2], Gt[3]), [1, 0, 0, 1, -Gt[0], -Gt[1]]);
                  };
                }, Dt = function(Pt, ne) {
                  we.call(this, Pt, ne), this.drawInDocument = function(Rt, Mt) {
                    a.save(), this.link && !Rt && !Mt && this.addLink(), this.drawContent(Rt, Mt), a.restore();
                  }, this.getTransformation = function() {
                    return this.get("transform");
                  };
                }, ue = function(Pt, ne) {
                  ne && ne.isText ? (on.call(this, Pt, ne), this.allowedChildren = ["textPath", "tspan", "#text", "#cdata-section", "a"]) : Dt.call(this, Pt, ne), this.link = this.attr("href") || this.attr("xlink:href"), this.addLink = function() {
                    if (this.link.match(/^(?:[a-z][a-z0-9+.-]*:|\/\/)?/i) && this.getChildren().length) {
                      var Rt = this.getBoundingShape().transform(It()).getBoundingBox();
                      K(Rt[0], Rt[1], Rt[2], Rt[3], this.link);
                    }
                  };
                }, lt = function(Pt, ne) {
                  we.call(this, Pt, ne);
                  var Rt = this.getLength("width", this.getParentVWidth(), this.getParentVWidth()), Mt = this.getLength("height", this.getParentVHeight(), this.getParentVHeight()), kt = this.getLength("x", this.getParentVWidth(), 0), Gt = this.getLength("y", this.getParentVHeight(), 0);
                  ne instanceof Be && (Rt = ne.getLength("width", ne.getParentVWidth(), Rt), Mt = ne.getLength("height", ne.getParentVHeight(), Mt));
                  var re = this.attr("preserveAspectRatio"), Ut = this.getViewbox("viewBox", [0, 0, Rt, Mt]);
                  this.isOuterElement && In && (kt = Gt = 0, Rt = Pr, Mt = Jr, re = In), this.getVWidth = function() {
                    return Ut[2];
                  }, this.getVHeight = function() {
                    return Ut[3];
                  }, this.drawInDocument = function(oe, Yt) {
                    a.save(), this.get("overflow") === "hidden" && (new Wt().M(kt, Gt).L(kt + Rt, Gt).L(kt + Rt, Gt + Mt).L(kt, Gt + Mt).Z().transform(this.get("transform")).insertInDocument(), a.clip()), this.drawContent(oe, Yt), a.restore();
                  }, this.getTransformation = function() {
                    return bt(this.get("transform"), [1, 0, 0, 1, kt, Gt], C(re, Rt, Mt, Ut[2], Ut[3]), [1, 0, 0, 1, -Ut[0], -Ut[1]]);
                  };
                }, Y = function(Pt, ne) {
                  ce.call(this, Pt, ne);
                  var Rt = zr(this.attr("href") || this.attr("xlink:href") || ""), Mt = this.getLength("x", this.getVWidth(), 0), kt = this.getLength("y", this.getVHeight(), 0), Gt = this.getLength("width", this.getVWidth(), "auto"), re = this.getLength("height", this.getVHeight(), "auto"), Ut;
                  try {
                    Ut = a.openImage(Rt);
                  } catch (oe) {
                    nr('SVGElemImage: failed to open image "' + Rt + '" in PDFKit');
                  }
                  Ut && (Gt === "auto" && re !== "auto" ? Gt = re * Ut.width / Ut.height : re === "auto" && Gt !== "auto" ? re = Gt * Ut.height / Ut.width : Gt === "auto" && re === "auto" && (Gt = Ut.width, re = Ut.height)), (Gt === "auto" || Gt < 0) && (Gt = 0), (re === "auto" || re < 0) && (re = 0), this.getTransformation = function() {
                    return this.get("transform");
                  }, this.getBoundingShape = function() {
                    return new Wt().M(Mt, kt).L(Mt + Gt, kt).M(Mt + Gt, kt + re).L(Mt, kt + re);
                  }, this.drawInDocument = function(oe, Yt) {
                    this.get("visibility") === "hidden" || !Ut || (a.save(), this.transform(), this.get("overflow") === "hidden" && a.rect(Mt, kt, Gt, re).clip(), this.clip(), this.mask(), a.translate(Mt, kt), a.transform.apply(a, C(this.attr("preserveAspectRatio"), Gt, re, Ut ? Ut.width : Gt, Ut ? Ut.height : re)), oe ? (a.rect(0, 0, Ut.width, Ut.height), N(i.white).fill()) : (a.fillOpacity(this.get("opacity")), a.image(Ut, 0, 0)), a.restore());
                  };
                }, j = function Jt(Pt, ne, Rt) {
                  pe.call(this, Pt, ne), this.ref = function() {
                    var Gt = this.getUrl("href") || this.getUrl("xlink:href");
                    if (Gt && Gt.nodeName === Pt.nodeName)
                      return new Jt(Gt, ne, Rt);
                  }.call(this);
                  var Mt = this.attr;
                  this.attr = function(Gt) {
                    var re = Mt.call(this, Gt);
                    return re != null || Gt === "href" || Gt === "xlink:href" ? re : this.ref ? this.ref.attr(Gt) : null;
                  };
                  var kt = this.getChildren;
                  this.getChildren = function() {
                    var Gt = kt.call(this);
                    return Gt.length > 0 ? Gt : this.ref ? this.ref.getChildren() : [];
                  }, this.getPaint = function(Gt, re, Ut, oe) {
                    var Yt = this.attr("patternUnits") !== "userSpaceOnUse", xe = this.attr("patternContentUnits") === "objectBoundingBox", Pe = this.getLength("x", Yt ? 1 : this.getParentVWidth(), 0), Re = this.getLength("y", Yt ? 1 : this.getParentVHeight(), 0), Ge = this.getLength("width", Yt ? 1 : this.getParentVWidth(), 0), Qe = this.getLength("height", Yt ? 1 : this.getParentVHeight(), 0);
                    xe && !Yt ? (Pe = (Pe - Gt[0]) / (Gt[2] - Gt[0]) || 0, Re = (Re - Gt[1]) / (Gt[3] - Gt[1]) || 0, Ge = Ge / (Gt[2] - Gt[0]) || 0, Qe = Qe / (Gt[3] - Gt[1]) || 0) : !xe && Yt && (Pe = Gt[0] + Pe * (Gt[2] - Gt[0]), Re = Gt[1] + Re * (Gt[3] - Gt[1]), Ge = Ge * (Gt[2] - Gt[0]), Qe = Qe * (Gt[3] - Gt[1]));
                    var ar = this.getViewbox("viewBox", [0, 0, Ge, Qe]), ge = (this.attr("preserveAspectRatio") || "").trim(), Le = bt(C(ge, Ge, Qe, ar[2], ar[3], 0), [1, 0, 0, 1, -ar[0], -ar[1]]), $e = z(this.attr("patternTransform"));
                    if (xe && ($e = bt([Gt[2] - Gt[0], 0, 0, Gt[3] - Gt[1], Gt[0], Gt[1]], $e)), $e = bt($e, [1, 0, 0, 1, Pe, Re]), ($e = Q($e)) && (Le = Q(Le)) && (Ge = G(Ge)) && (Qe = G(Qe))) {
                      var He = x([0, 0, Ge, Qe]);
                      return a.transform.apply(a, Le), this.drawChildren(Ut, oe), S(He), [T(He, Ge, Qe, $e), re];
                    } else
                      return Rt ? [Rt[0], Rt[1] * re] : void 0;
                  }, this.getVWidth = function() {
                    var Gt = this.attr("patternUnits") !== "userSpaceOnUse", re = this.getLength("width", Gt ? 1 : this.getParentVWidth(), 0);
                    return this.getViewbox("viewBox", [0, 0, re, 0])[2];
                  }, this.getVHeight = function() {
                    var Gt = this.attr("patternUnits") !== "userSpaceOnUse", re = this.getLength("height", Gt ? 1 : this.getParentVHeight(), 0);
                    return this.getViewbox("viewBox", [0, 0, 0, re])[3];
                  };
                }, wt = function Jt(Pt, ne, Rt) {
                  _t.call(this, Pt, ne), this.allowedChildren = ["stop"], this.ref = function() {
                    var Gt = this.getUrl("href") || this.getUrl("xlink:href");
                    if (Gt && Gt.nodeName === Pt.nodeName)
                      return new Jt(Gt, ne, Rt);
                  }.call(this);
                  var Mt = this.attr;
                  this.attr = function(Gt) {
                    var re = Mt.call(this, Gt);
                    return re != null || Gt === "href" || Gt === "xlink:href" ? re : this.ref ? this.ref.attr(Gt) : null;
                  };
                  var kt = this.getChildren;
                  this.getChildren = function() {
                    var Gt = kt.call(this);
                    return Gt.length > 0 ? Gt : this.ref ? this.ref.getChildren() : [];
                  }, this.getPaint = function(Gt, re, Ut, oe) {
                    var Yt = this.getChildren();
                    if (Yt.length !== 0) {
                      if (Yt.length === 1) {
                        var xe = Yt[0], Pe = xe.get("stop-color");
                        return Pe === "none" ? void 0 : yt(Pe, xe.get("stop-opacity") * re, oe);
                      }
                      var Re = this.attr("gradientUnits") !== "userSpaceOnUse", Ge = z(this.attr("gradientTransform")), Qe = this.attr("spreadMethod"), ar, ge, Le, $e, He, ir, Ke = 0, dr = 0, sr = 1;
                      if (Re && (Ge = bt([Gt[2] - Gt[0], 0, 0, Gt[3] - Gt[1], Gt[0], Gt[1]], Ge)), Ge = Q(Ge)) {
                        if (this.name === "linearGradient")
                          ge = this.getLength("x1", Re ? 1 : this.getVWidth(), 0), Le = this.getLength("x2", Re ? 1 : this.getVWidth(), Re ? 1 : this.getVWidth()), $e = this.getLength("y1", Re ? 1 : this.getVHeight(), 0), He = this.getLength("y2", Re ? 1 : this.getVHeight(), 0);
                        else {
                          Le = this.getLength("cx", Re ? 1 : this.getVWidth(), Re ? 0.5 : 0.5 * this.getVWidth()), He = this.getLength("cy", Re ? 1 : this.getVHeight(), Re ? 0.5 : 0.5 * this.getVHeight()), ir = this.getLength("r", Re ? 1 : this.getViewport(), Re ? 0.5 : 0.5 * this.getViewport()), ge = this.getLength("fx", Re ? 1 : this.getVWidth(), Le), $e = this.getLength("fy", Re ? 1 : this.getVHeight(), He), ir < 0 && nr("SvgElemGradient: negative r value");
                          var Tr = Math.sqrt(Math.pow(Le - ge, 2) + Math.pow(He - $e, 2)), Wr = 1;
                          Tr > ir && (Wr = ir / Tr, ge = Le + (ge - Le) * Wr, $e = He + ($e - He) * Wr), ir = Math.max(ir, Tr * Wr * (1 + 1e-6));
                        }
                        if (Qe === "reflect" || Qe === "repeat") {
                          var Br = zt(Ge), Dr = Tt([Gt[0], Gt[1]], Br), Rr = Tt([Gt[2], Gt[1]], Br), rn = Tt([Gt[2], Gt[3]], Br), Dn = Tt([Gt[0], Gt[3]], Br);
                          this.name === "linearGradient" ? (Ke = Math.max((Dr[0] - Le) * (Le - ge) + (Dr[1] - He) * (He - $e), (Rr[0] - Le) * (Le - ge) + (Rr[1] - He) * (He - $e), (rn[0] - Le) * (Le - ge) + (rn[1] - He) * (He - $e), (Dn[0] - Le) * (Le - ge) + (Dn[1] - He) * (He - $e)) / (Math.pow(Le - ge, 2) + Math.pow(He - $e, 2)), dr = Math.max((Dr[0] - ge) * (ge - Le) + (Dr[1] - $e) * ($e - He), (Rr[0] - ge) * (ge - Le) + (Rr[1] - $e) * ($e - He), (rn[0] - ge) * (ge - Le) + (rn[1] - $e) * ($e - He), (Dn[0] - ge) * (ge - Le) + (Dn[1] - $e) * ($e - He)) / (Math.pow(Le - ge, 2) + Math.pow(He - $e, 2))) : Ke = Math.sqrt(Math.max(Math.pow(Dr[0] - Le, 2) + Math.pow(Dr[1] - He, 2), Math.pow(Rr[0] - Le, 2) + Math.pow(Rr[1] - He, 2), Math.pow(rn[0] - Le, 2) + Math.pow(rn[1] - He, 2), Math.pow(Dn[0] - Le, 2) + Math.pow(Dn[1] - He, 2))) / ir - 1, Ke = Math.ceil(Ke + 0.5), dr = Math.ceil(dr + 0.5), sr = dr + 1 + Ke;
                        }
                        this.name === "linearGradient" ? ar = a.linearGradient(ge - dr * (Le - ge), $e - dr * (He - $e), Le + Ke * (Le - ge), He + Ke * (He - $e)) : ar = a.radialGradient(ge, $e, 0, Le, He, ir + Ke * ir);
                        for (var ln = 0; ln < sr; ln++)
                          for (var An = 0, Mn = Qe !== "reflect" || (ln - dr) % 2 === 0, fn = 0; fn < Yt.length; fn++) {
                            var pn = Yt[Mn ? fn : Yt.length - 1 - fn], hn = pn.get("stop-color");
                            hn === "none" && (hn = i.transparent), hn = yt(hn, pn.get("stop-opacity") * re, oe), An = Math.max(An, Mn ? pn.getPercent("offset", 0) : 1 - pn.getPercent("offset", 0)), fn === 0 && hn[0].length === 4 && (ar._colorSpace = "DeviceCMYK"), fn === 0 && An > 0 && ar.stop((ln + 0) / sr, hn[0], hn[1]), ar.stop((ln + An) / (Ke + dr + 1), hn[0], hn[1]), fn === Yt.length - 1 && An < 1 && ar.stop((ln + 1) / sr, hn[0], hn[1]);
                          }
                        return ar.setTransform.apply(ar, Ge), [ar, 1];
                      } else
                        return Rt ? [Rt[0], Rt[1] * re] : void 0;
                    }
                  };
                }, it = function(Pt, ne) {
                  ce.call(this, Pt, ne), this.dashScale = 1, this.getBoundingShape = function() {
                    return this.shape;
                  }, this.getTransformation = function() {
                    return this.get("transform");
                  }, this.drawInDocument = function(Rt, Mt) {
                    if (!(this.get("visibility") === "hidden" || !this.shape)) {
                      if (a.save(), this.transform(), this.clip(), Rt)
                        this.shape.insertInDocument(), N(i.white), a.fill(this.get("clip-rule"));
                      else {
                        var kt = this.mask(), Gt;
                        kt && (Gt = x(Lt()));
                        var re = this.shape.getSubPaths(), Ut = this.getFill(Rt, Mt), oe = this.getStroke(Rt, Mt), Yt = this.get("stroke-width"), xe = this.get("stroke-linecap");
                        if (Ut || oe) {
                          if (Ut && N(Ut), oe) {
                            for (var Pe = 0; Pe < re.length; Pe++)
                              if (st(re[Pe].totalLength, 0) && (xe === "square" || xe === "round") && Yt > 0 && re[Pe].startPoint && re[Pe].startPoint.length > 1) {
                                var Re = re[Pe].startPoint[0], Ge = re[Pe].startPoint[1];
                                N(oe), xe === "square" ? a.rect(Re - 0.5 * Yt, Ge - 0.5 * Yt, Yt, Yt) : xe === "round" && a.circle(Re, Ge, 0.5 * Yt), a.fill();
                              }
                            var Qe = this.get("stroke-dasharray"), ar = this.get("stroke-dashoffset");
                            if (xt(this.dashScale, 1)) {
                              for (var ge = 0; ge < Qe.length; ge++)
                                Qe[ge] *= this.dashScale;
                              ar *= this.dashScale;
                            }
                            M(oe), a.lineWidth(Yt).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(xe).dash(Qe, {
                              phase: ar
                            });
                          }
                          for (var Le = 0; Le < re.length; Le++)
                            re[Le].totalLength > 0 && re[Le].insertInDocument();
                          Ut && oe ? a.fillAndStroke(this.get("fill-rule")) : Ut ? a.fill(this.get("fill-rule")) : oe && a.stroke();
                        }
                        var $e = this.get("marker-start"), He = this.get("marker-mid"), ir = this.get("marker-end");
                        if ($e !== "none" || He !== "none" || ir !== "none") {
                          var Ke = this.shape.getMarkers();
                          if ($e !== "none") {
                            var dr = new le($e, null);
                            dr.drawMarker(!1, Mt, Ke[0], Yt);
                          }
                          if (He !== "none")
                            for (var sr = 1; sr < Ke.length - 1; sr++) {
                              var Tr = new le(He, null);
                              Tr.drawMarker(!1, Mt, Ke[sr], Yt);
                            }
                          if (ir !== "none") {
                            var Wr = new le(ir, null);
                            Wr.drawMarker(!1, Mt, Ke[Ke.length - 1], Yt);
                          }
                        }
                        Gt && (S(Gt), P(Gt));
                      }
                      a.restore();
                    }
                  };
                }, Ht = function(Pt, ne) {
                  it.call(this, Pt, ne);
                  var Rt = this.getLength("x", this.getVWidth(), 0), Mt = this.getLength("y", this.getVHeight(), 0), kt = this.getLength("width", this.getVWidth(), 0), Gt = this.getLength("height", this.getVHeight(), 0), re = this.getLength("rx", this.getVWidth()), Ut = this.getLength("ry", this.getVHeight());
                  re === void 0 && Ut === void 0 ? re = Ut = 0 : re === void 0 && Ut !== void 0 ? re = Ut : re !== void 0 && Ut === void 0 && (Ut = re), kt > 0 && Gt > 0 ? re && Ut ? (re = Math.min(re, 0.5 * kt), Ut = Math.min(Ut, 0.5 * Gt), this.shape = new Wt().M(Rt + re, Mt).L(Rt + kt - re, Mt).A(re, Ut, 0, 0, 1, Rt + kt, Mt + Ut).L(Rt + kt, Mt + Gt - Ut).A(re, Ut, 0, 0, 1, Rt + kt - re, Mt + Gt).L(Rt + re, Mt + Gt).A(re, Ut, 0, 0, 1, Rt, Mt + Gt - Ut).L(Rt, Mt + Ut).A(re, Ut, 0, 0, 1, Rt + re, Mt).Z()) : this.shape = new Wt().M(Rt, Mt).L(Rt + kt, Mt).L(Rt + kt, Mt + Gt).L(Rt, Mt + Gt).Z() : this.shape = new Wt();
                }, te = function(Pt, ne) {
                  it.call(this, Pt, ne);
                  var Rt = this.getLength("cx", this.getVWidth(), 0), Mt = this.getLength("cy", this.getVHeight(), 0), kt = this.getLength("r", this.getViewport(), 0);
                  kt > 0 ? this.shape = new Wt().M(Rt + kt, Mt).A(kt, kt, 0, 0, 1, Rt - kt, Mt).A(kt, kt, 0, 0, 1, Rt + kt, Mt).Z() : this.shape = new Wt();
                }, _ = function(Pt, ne) {
                  it.call(this, Pt, ne);
                  var Rt = this.getLength("cx", this.getVWidth(), 0), Mt = this.getLength("cy", this.getVHeight(), 0), kt = this.getLength("rx", this.getVWidth(), 0), Gt = this.getLength("ry", this.getVHeight(), 0);
                  kt > 0 && Gt > 0 ? this.shape = new Wt().M(Rt + kt, Mt).A(kt, Gt, 0, 0, 1, Rt - kt, Mt).A(kt, Gt, 0, 0, 1, Rt + kt, Mt).Z() : this.shape = new Wt();
                }, Qt = function(Pt, ne) {
                  it.call(this, Pt, ne);
                  var Rt = this.getLength("x1", this.getVWidth(), 0), Mt = this.getLength("y1", this.getVHeight(), 0), kt = this.getLength("x2", this.getVWidth(), 0), Gt = this.getLength("y2", this.getVHeight(), 0);
                  this.shape = new Wt().M(Rt, Mt).L(kt, Gt);
                }, ee = function(Pt, ne) {
                  it.call(this, Pt, ne);
                  var Rt = this.getNumberList("points");
                  this.shape = new Wt();
                  for (var Mt = 0; Mt < Rt.length - 1; Mt += 2)
                    Mt === 0 ? this.shape.M(Rt[Mt], Rt[Mt + 1]) : this.shape.L(Rt[Mt], Rt[Mt + 1]);
                  Rt.error && nr("SvgElemPolygon: unexpected string " + Rt.error), Rt.length % 2 === 1 && nr("SvgElemPolyline: uneven number of coordinates");
                }, Et = function(Pt, ne) {
                  it.call(this, Pt, ne);
                  var Rt = this.getNumberList("points");
                  this.shape = new Wt();
                  for (var Mt = 0; Mt < Rt.length - 1; Mt += 2)
                    Mt === 0 ? this.shape.M(Rt[Mt], Rt[Mt + 1]) : this.shape.L(Rt[Mt], Rt[Mt + 1]);
                  this.shape.Z(), Rt.error && nr("SvgElemPolygon: unexpected string " + Rt.error), Rt.length % 2 === 1 && nr("SvgElemPolygon: uneven number of coordinates");
                }, jt = function(Pt, ne) {
                  it.call(this, Pt, ne), this.shape = new Wt().path(this.attr("d"));
                  var Rt = this.getLength("pathLength", this.getViewport());
                  this.pathLength = Rt > 0 ? Rt : void 0, this.dashScale = this.pathLength !== void 0 ? this.shape.totalLength / this.pathLength : 1;
                }, le = function(Pt, ne) {
                  pe.call(this, Pt, ne);
                  var Rt = this.getLength("markerWidth", this.getParentVWidth(), 3), Mt = this.getLength("markerHeight", this.getParentVHeight(), 3), kt = this.getViewbox("viewBox", [0, 0, Rt, Mt]);
                  this.getVWidth = function() {
                    return kt[2];
                  }, this.getVHeight = function() {
                    return kt[3];
                  }, this.drawMarker = function(Gt, re, Ut, oe) {
                    a.save();
                    var Yt = this.attr("orient"), xe = this.attr("markerUnits"), Pe = Yt === "auto" ? Ut[2] : (parseFloat(Yt) || 0) * Math.PI / 180, Re = xe === "userSpaceOnUse" ? 1 : oe;
                    a.transform(Math.cos(Pe) * Re, Math.sin(Pe) * Re, -Math.sin(Pe) * Re, Math.cos(Pe) * Re, Ut[0], Ut[1]);
                    var Ge = this.getLength("refX", this.getVWidth(), 0), Qe = this.getLength("refY", this.getVHeight(), 0), ar = C(this.attr("preserveAspectRatio"), Rt, Mt, kt[2], kt[3], 0.5);
                    this.get("overflow") === "hidden" && a.rect(ar[0] * (kt[0] + kt[2] / 2 - Ge) - Rt / 2, ar[3] * (kt[1] + kt[3] / 2 - Qe) - Mt / 2, Rt, Mt).clip(), a.transform.apply(a, ar), a.translate(-Ge, -Qe);
                    var ge;
                    this.get("opacity") < 1 && !Gt && (ge = x(Lt())), this.drawChildren(Gt, re), ge && (S(ge), a.fillOpacity(this.get("opacity")), P(ge)), a.restore();
                  };
                }, Ne = function(Pt, ne) {
                  pe.call(this, Pt, ne), this.useMask = function(Rt) {
                    var Mt = x(Lt());
                    a.save(), this.attr("clipPathUnits") === "objectBoundingBox" && a.transform(Rt[2] - Rt[0], 0, 0, Rt[3] - Rt[1], Rt[0], Rt[1]), this.clip(), this.drawChildren(!0, !1), a.restore(), S(Mt), O(Mt, !0);
                  };
                }, Oe = function(Pt, ne) {
                  pe.call(this, Pt, ne), this.useMask = function(Rt) {
                    var Mt = x(Lt());
                    a.save();
                    var kt, Gt, re, Ut;
                    this.attr("maskUnits") === "userSpaceOnUse" ? (kt = this.getLength("x", this.getVWidth(), -0.1 * (Rt[2] - Rt[0]) + Rt[0]), Gt = this.getLength("y", this.getVHeight(), -0.1 * (Rt[3] - Rt[1]) + Rt[1]), re = this.getLength("width", this.getVWidth(), 1.2 * (Rt[2] - Rt[0])), Ut = this.getLength("height", this.getVHeight(), 1.2 * (Rt[3] - Rt[1]))) : (kt = this.getLength("x", this.getVWidth(), -0.1) * (Rt[2] - Rt[0]) + Rt[0], Gt = this.getLength("y", this.getVHeight(), -0.1) * (Rt[3] - Rt[1]) + Rt[1], re = this.getLength("width", this.getVWidth(), 1.2) * (Rt[2] - Rt[0]), Ut = this.getLength("height", this.getVHeight(), 1.2) * (Rt[3] - Rt[1])), a.rect(kt, Gt, re, Ut).clip(), this.attr("maskContentUnits") === "objectBoundingBox" && a.transform(Rt[2] - Rt[0], 0, 0, Rt[3] - Rt[1], Rt[0], Rt[1]), this.clip(), this.drawChildren(!1, !0), a.restore(), S(Mt), O(Mt, !0);
                  };
                }, Ue = function(Pt, ne) {
                  ce.call(this, Pt, ne), this.allowedChildren = ["tspan", "#text", "#cdata-section", "a"], this.isText = !0, this.getBoundingShape = function() {
                    for (var Rt = new Wt(), Mt = 0; Mt < this._pos.length; Mt++) {
                      var kt = this._pos[Mt];
                      if (!kt.hidden) {
                        var Gt = kt.ascent * Math.sin(kt.rotate), re = -kt.ascent * Math.cos(kt.rotate), Ut = kt.descent * Math.sin(kt.rotate), oe = -kt.descent * Math.cos(kt.rotate), Yt = kt.width * Math.cos(kt.rotate), xe = kt.width * Math.sin(kt.rotate);
                        Rt.M(kt.x + Gt, kt.y + re).L(kt.x + Gt + Yt, kt.y + re + xe).M(kt.x + Ut + Yt, kt.y + oe + xe).L(kt.x + Ut, kt.y + oe);
                      }
                    }
                    return Rt;
                  }, this.drawTextInDocument = function(Rt, Mt) {
                    this.link && !Rt && !Mt && this.addLink(), this.get("text-decoration") === "underline" && this.decorate(0.05 * this._font.size, -0.075 * this._font.size, Rt, Mt), this.get("text-decoration") === "overline" && this.decorate(0.05 * this._font.size, Nt(this._font.font, this._font.size) + 0.075 * this._font.size, Rt, Mt);
                    var kt = this.getFill(Rt, Mt), Gt = this.getStroke(Rt, Mt), re = this.get("stroke-width");
                    this._font.fauxBold && (Gt ? re += this._font.size * 0.03 : (Gt = kt, re = this._font.size * 0.03));
                    for (var Ut = this.getChildren(), oe = 0; oe < Ut.length; oe++) {
                      var Yt = Ut[oe];
                      switch (Yt.name) {
                        case "tspan":
                        case "textPath":
                        case "a":
                          Yt.get("display") !== "none" && Yt.drawTextInDocument(Rt, Mt);
                          break;
                        case "#text":
                        case "#cdata-section":
                          if (this.get("visibility") === "hidden")
                            continue;
                          if (kt || Gt || Rt) {
                            kt && N(kt), Gt && re && (M(Gt), a.lineWidth(re).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(this.get("stroke-linecap")).dash(this.get("stroke-dasharray"), {
                              phase: this.get("stroke-dashoffset")
                            })), E(this._font.font, this._font.size), b(!!kt, !!Gt);
                            for (var xe = 0, Pe = Yt._pos; xe < Pe.length; xe++)
                              if (!Pe[xe].hidden && xt(Pe[xe].width, 0)) {
                                var Re = Math.cos(Pe[xe].rotate), Ge = Math.sin(Pe[xe].rotate), Qe = this._font.fauxItalic ? -0.25 : 0;
                                D(Re * Pe[xe].scale, Ge * Pe[xe].scale, Re * Qe - Ge, Ge * Qe + Re, Pe[xe].x, Pe[xe].y), R(Pe[xe].glyph);
                              }
                            L();
                          }
                          break;
                      }
                    }
                    this.get("text-decoration") === "line-through" && this.decorate(0.05 * this._font.size, 0.5 * (Nt(this._font.font, this._font.size) + Kt(this._font.font, this._font.size)), Rt, Mt);
                  }, this.decorate = function(Rt, Mt, kt, Gt) {
                    var re = this.getFill(kt, Gt), Ut = this.getStroke(kt, Gt);
                    re && N(re), Ut && (M(Ut), a.lineWidth(this.get("stroke-width")).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(this.get("stroke-linecap")).dash(this.get("stroke-dasharray"), {
                      phase: this.get("stroke-dashoffset")
                    }));
                    for (var oe = 0, Yt = this._pos; oe < Yt.length; oe++)
                      if (!Yt[oe].hidden && xt(Yt[oe].width, 0)) {
                        var xe = (Mt + Rt / 2) * Math.sin(Yt[oe].rotate), Pe = -(Mt + Rt / 2) * Math.cos(Yt[oe].rotate), Re = (Mt - Rt / 2) * Math.sin(Yt[oe].rotate), Ge = -(Mt - Rt / 2) * Math.cos(Yt[oe].rotate), Qe = Yt[oe].width * Math.cos(Yt[oe].rotate), ar = Yt[oe].width * Math.sin(Yt[oe].rotate);
                        new Wt().M(Yt[oe].x + xe, Yt[oe].y + Pe).L(Yt[oe].x + xe + Qe, Yt[oe].y + Pe + ar).L(Yt[oe].x + Re + Qe, Yt[oe].y + Ge + ar).L(Yt[oe].x + Re, Yt[oe].y + Ge).Z().insertInDocument(), re && Ut ? a.fillAndStroke() : re ? a.fill() : Ut && a.stroke();
                      }
                  };
                }, Me = function(Pt, ne) {
                  this.name = Pt.nodeName, this.textContent = Pt.nodeValue;
                }, on = function(Pt, ne) {
                  Ue.call(this, Pt, ne);
                }, er = function(Pt, ne) {
                  Ue.call(this, Pt, ne);
                  var Rt;
                  if ((Rt = this.attr("path")) && Rt.trim() !== "") {
                    var Mt = this.getLength("pathLength", this.getViewport());
                    this.pathObject = new Wt().path(Rt), this.pathLength = Mt > 0 ? Mt : this.pathObject.totalLength, this.pathScale = this.pathObject.totalLength / this.pathLength;
                  } else if ((Rt = this.getUrl("href") || this.getUrl("xlink:href")) && Rt.nodeName === "path") {
                    var kt = new jt(Rt, this);
                    this.pathObject = kt.shape.clone().transform(kt.get("transform")), this.pathLength = this.chooseValue(kt.pathLength, this.pathObject.totalLength), this.pathScale = this.pathObject.totalLength / this.pathLength;
                  }
                }, Ye = function(Pt, ne) {
                  Ue.call(this, Pt, ne), this.allowedChildren = ["textPath", "tspan", "#text", "#cdata-section", "a"], function(Rt) {
                    var Mt = "", kt = Pt.textContent, Gt = [], re = [], Ut, oe, Yt = 0, xe = 0;
                    function Pe() {
                      if (re.length)
                        for (var ge = re[re.length - 1], Le = re[0], $e = ge.x + ge.width - Le.x, He = {
                          startltr: 0,
                          middleltr: 0.5,
                          endltr: 1,
                          startrtl: 1,
                          middlertl: 0.5,
                          endrtl: 0
                        }[Ut + oe] * $e || 0, ir = 0; ir < re.length; ir++)
                          re[ir].x -= He;
                      re = [];
                    }
                    function Re(ge, Le, $e) {
                      var He = ge[0], ir = ge[ge.length - 1], Ke = He.x, dr = ir.x + ir.width;
                      if ($e) {
                        var sr = Le / (dr - Ke);
                        if (sr > 0 && sr < 1 / 0)
                          for (var Tr = 0; Tr < ge.length; Tr++)
                            ge[Tr].x = Ke + sr * (ge[Tr].x - Ke), ge[Tr].scale *= sr, ge[Tr].width *= sr;
                      } else if (ge.length >= 2)
                        for (var Wr = (Le - (dr - Ke)) / (ge.length - 1), Br = 0; Br < ge.length; Br++)
                          ge[Br].x += Br * Wr;
                      Yt += Le - (dr - Ke);
                    }
                    function Ge(ge, Le) {
                      ge._x = At(ge.getLengthList("x", ge.getVWidth()), Le ? Le._x.slice(Le._pos.length) : []), ge._y = At(ge.getLengthList("y", ge.getVHeight()), Le ? Le._y.slice(Le._pos.length) : []), ge._dx = At(ge.getLengthList("dx", ge.getVWidth()), Le ? Le._dx.slice(Le._pos.length) : []), ge._dy = At(ge.getLengthList("dy", ge.getVHeight()), Le ? Le._dy.slice(Le._pos.length) : []), ge._rot = At(ge.getNumberList("rotate"), Le ? Le._rot.slice(Le._pos.length) : []), ge._defRot = ge.chooseValue(ge._rot[ge._rot.length - 1], Le && Le._defRot, 0), ge.name === "textPath" && (ge._y = []);
                      var $e = {
                        fauxItalic: !1,
                        fauxBold: !1
                      }, He = sn(ge.get("font-family"), ge.get("font-weight") === "bold", ge.get("font-style") === "italic", $e);
                      try {
                        a.font(He);
                      } catch (kn) {
                        nr('SVGElemText: failed to open font "' + He + '" in PDFKit');
                      }
                      ge._pos = [], ge._index = 0, ge._font = {
                        font: a._font,
                        size: ge.get("font-size"),
                        fauxItalic: $e.fauxItalic,
                        fauxBold: $e.fauxBold
                      };
                      var ir = ge.getLength("textLength", ge.getVWidth(), void 0), Ke = ge.attr("lengthAdjust") === "spacingAndGlyphs", dr = ge.get("word-spacing"), sr = ge.get("letter-spacing"), Tr = ge.get("text-anchor"), Wr = ge.get("direction"), Br = Ot(ge._font.font, ge._font.size, ge.get("alignment-baseline") || ge.get("dominant-baseline"), ge.get("baseline-shift"));
                      ge.name === "textPath" && (Pe(), Yt = xe = 0);
                      for (var Dr = ge.getChildren(), Rr = 0; Rr < Dr.length; Rr++) {
                        var rn = Dr[Rr];
                        switch (rn.name) {
                          case "tspan":
                          case "textPath":
                          case "a":
                            Ge(rn, ge);
                            break;
                          case "#text":
                          case "#cdata-section":
                            var Dn = rn.textContent, ln = Dn, An = void 0;
                            rn._font = ge._font, rn._pos = [], kt = kt.substring(Dn.length), ge.get("xml:space") === "preserve" ? ln = ln.replace(/[\s]/g, " ") : (ln = ln.replace(/[\s]+/g, " "), Mt.match(/[\s]$|^$/) && (ln = ln.replace(/^[\s]/, "")), kt.match(/^[\s]*$/) && (ln = ln.replace(/[\s]$/, ""))), Mt += Dn, dr === 0 ? An = [ln] : An = ln.split(/(\s)/);
                            for (var Mn = 0; Mn < An.length; Mn++) {
                              for (var fn = ie(ge._font.font, ge._font.size, An[Mn]), pn = 0; pn < fn.length; pn++) {
                                var hn = ge._index, ii = ge._x[hn], ga = ge._y[hn], oi = ge._dx[hn], si = ge._dy[hn], Za = ge._rot[hn], ma = !(Mn === 0 && pn === 0);
                                ii !== void 0 && (ma = !1, Pe(), Yt = ii), ga !== void 0 && (ma = !1, Pe(), xe = ga), oi !== void 0 && (ma = !1, Yt += oi), si !== void 0 && (ma = !1, xe += si), (Za !== void 0 || ge._defRot !== 0) && (ma = !1);
                                var Ya = {
                                  glyph: fn[pn].glyph,
                                  rotate: Math.PI / 180 * ge.chooseValue(Za, ge._defRot),
                                  x: Yt + fn[pn].xOffset,
                                  y: xe + Br + fn[pn].yOffset,
                                  width: fn[pn].width,
                                  ascent: Nt(ge._font.font, ge._font.size),
                                  descent: Kt(ge._font.font, ge._font.size),
                                  scale: 1,
                                  hidden: !1,
                                  continuous: ma
                                };
                                re.push(Ya), rn._pos.push(Ya), ge._pos.push(Ya), ge._index += fn[pn].unicode.length, re.length === 1 && (Ut = Tr, oe = Wr), Yt += fn[pn].xAdvance + sr, xe += fn[pn].yAdvance;
                              }
                              An[Mn] === " " && (Yt += dr);
                            }
                            break;
                          default:
                            kt = kt.substring(rn.textContent.length);
                        }
                      }
                      if (ir && ge._pos.length && Re(ge._pos, ir, Ke), (ge.name === "textPath" || ge.name === "text") && Pe(), ge.name === "textPath") {
                        Gt.push(ge);
                        var Ta = ge.pathObject;
                        Ta && (Yt = Ta.endPoint[0], xe = Ta.endPoint[1]);
                      }
                      Le && (Le._pos = Le._pos.concat(ge._pos), Le._index += ge._index);
                    }
                    function Qe(ge) {
                      var Le = ge.pathObject, $e = ge.pathLength, He = ge.pathScale;
                      if (Le)
                        for (var ir = ge.getLength("startOffset", $e, 0), Ke = 0; Ke < ge._pos.length; Ke++) {
                          var dr = ir + ge._pos[Ke].x + 0.5 * ge._pos[Ke].width;
                          if (dr > $e || dr < 0)
                            ge._pos[Ke].hidden = !0;
                          else {
                            var sr = Le.getPointAtLength(dr * He);
                            xt(He, 1) && (ge._pos[Ke].scale *= He, ge._pos[Ke].width *= He), ge._pos[Ke].x = sr[0] - 0.5 * ge._pos[Ke].width * Math.cos(sr[2]) - ge._pos[Ke].y * Math.sin(sr[2]), ge._pos[Ke].y = sr[1] - 0.5 * ge._pos[Ke].width * Math.sin(sr[2]) + ge._pos[Ke].y * Math.cos(sr[2]), ge._pos[Ke].rotate = sr[2] + ge._pos[Ke].rotate, ge._pos[Ke].continuous = !1;
                          }
                        }
                      else
                        for (var Tr = 0; Tr < ge._pos.length; Tr++)
                          ge._pos[Tr].hidden = !0;
                    }
                    Ge(Rt, null);
                    for (var ar = 0; ar < Gt.length; ar++)
                      Qe(Gt[ar]);
                  }(this), this.getTransformation = function() {
                    return this.get("transform");
                  }, this.drawInDocument = function(Rt, Mt) {
                    a.save(), this.transform(), this.clip();
                    var kt = this.mask(), Gt;
                    kt && (Gt = x(Lt())), this.drawTextInDocument(Rt, Mt), Gt && (S(Gt), P(Gt)), a.restore();
                  };
                };
                h = h || {};
                var Cr = h.assumePt ? 1 : 72 / 96, Pr = (h.width || a.page.width) / Cr, Jr = (h.height || a.page.height) / Cr, In = h.preserveAspectRatio || null, Gn = h.useCSS && typeof SVGElement != "undefined" && o instanceof SVGElement && typeof getComputedStyle == "function", nr = h.warningCallback, sn = h.fontCallback, zr = h.imageCallback, tn = h.colorCallback, Gr = h.documentCallback, Kn = Math.ceil(Math.max(1, h.precision)) || 3, Jn = [], ze = {}, We = [], _e = [];
                if (typeof nr != "function" && (nr = function(Pt) {
                  typeof console !== void 0 && typeof console.warn == "function" && console.warn(Pt);
                }), typeof sn != "function" && (sn = function(Pt, ne, Rt, Mt) {
                  if (ne && Rt) {
                    if (a._registeredFonts.hasOwnProperty(Pt + "-BoldItalic"))
                      return Pt + "-BoldItalic";
                    if (a._registeredFonts.hasOwnProperty(Pt + "-Italic"))
                      return Mt.fauxBold = !0, Pt + "-Italic";
                    if (a._registeredFonts.hasOwnProperty(Pt + "-Bold"))
                      return Mt.fauxItalic = !0, Pt + "-Bold";
                    if (a._registeredFonts.hasOwnProperty(Pt))
                      return Mt.fauxBold = !0, Mt.fauxItalic = !0, Pt;
                  }
                  if (ne && !Rt) {
                    if (a._registeredFonts.hasOwnProperty(Pt + "-Bold"))
                      return Pt + "-Bold";
                    if (a._registeredFonts.hasOwnProperty(Pt))
                      return Mt.fauxBold = !0, Pt;
                  }
                  if (!ne && Rt) {
                    if (a._registeredFonts.hasOwnProperty(Pt + "-Italic"))
                      return Pt + "-Italic";
                    if (a._registeredFonts.hasOwnProperty(Pt))
                      return Mt.fauxItalic = !0, Pt;
                  }
                  if (!ne && !Rt && a._registeredFonts.hasOwnProperty(Pt))
                    return Pt;
                  if (Pt.match(/(?:^|,)\s*serif\s*$/)) {
                    if (ne && Rt)
                      return "Times-BoldItalic";
                    if (ne && !Rt)
                      return "Times-Bold";
                    if (!ne && Rt)
                      return "Times-Italic";
                    if (!ne && !Rt)
                      return "Times-Roman";
                  } else if (Pt.match(/(?:^|,)\s*monospace\s*$/)) {
                    if (ne && Rt)
                      return "Courier-BoldOblique";
                    if (ne && !Rt)
                      return "Courier-Bold";
                    if (!ne && Rt)
                      return "Courier-Oblique";
                    if (!ne && !Rt)
                      return "Courier";
                  } else {
                    if (Pt.match(/(?:^|,)\s*sans-serif\s*$/), ne && Rt)
                      return "Helvetica-BoldOblique";
                    if (ne && !Rt)
                      return "Helvetica-Bold";
                    if (!ne && Rt)
                      return "Helvetica-Oblique";
                    if (!ne && !Rt)
                      return "Helvetica";
                  }
                }), typeof zr != "function" && (zr = function(Pt) {
                  return Pt.replace(/\s+/g, "");
                }), typeof tn != "function")
                  tn = null;
                else
                  for (var hr in i) {
                    var Cn = tn(i[hr]);
                    i[hr][0] = Cn[0], i[hr][1] = Cn[1];
                  }
                if (typeof Gr != "function" && (Gr = null), typeof o == "string" && (o = ct(o)), o) {
                  for (var En = o.getElementsByTagName("style"), na = 0; na < En.length; na++)
                    _e = _e.concat(ot(En[na].textContent));
                  var Ea = Ae(o, null);
                  if (typeof Ea.drawInDocument == "function") {
                    h.useCSS && !Gn && nr("SVGtoPDF: useCSS option can only be used for SVG *elements* in compatible browsers");
                    var aa = a._fillColor;
                    a.save().translate(f || 0, u || 0).scale(Cr), Ea.drawInDocument();
                    for (var ia = 0; ia < We.length; ia++)
                      a.page.annotations.push(We[ia]);
                    a.restore(), a._fillColor = aa;
                  } else
                    nr("SVGtoPDF: this element can't be rendered directly: " + o.nodeName);
                } else
                  nr("SVGtoPDF: the input does not look like a valid SVG");
              };
              l && typeof l.exports != "undefined" && (l.exports = s);
            }
          ),
          /***/
          83036: (
            /***/
            function(l, c, t) {
              var s = "/", r = t(43060).Buffer;
              Object.defineProperty(c, "__esModule", {
                value: !0
              }), c.default = void 0, t(80044), t(26364), t(19701), t(10853), t(80238), t(6208), t(12938), t(56908), t(54130), t(33290), t(86632), t(61928), t(54883), t(45007), t(68995), t(4845), t(18821), t(54994), t(39275), t(55281), t(55862), t(85005), t(22321), t(73214), t(18481), t(66923), t(12798), t(18183), t(14686), t(80174), t(67838), t(75668), t(67666), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(36501), t(83382), t(33130), t(29897), t(86125), t(54902), t(35054);
              var a = p(t(20202)), o = p(t(63339)), f = p(t(35243)), u = p(t(89233)), h = t(5939), d = p(t(46982)), i = p(t(45968));
              function p(St) {
                return St && St.__esModule ? St : { default: St };
              }
              var y = t(52773);
              function m(St, Z) {
                if (!(St instanceof Z))
                  throw new TypeError("Cannot call a class as a function");
              }
              function e(St, Z) {
                for (var W = 0; W < Z.length; W++) {
                  var at = Z[W];
                  at.enumerable = at.enumerable || !1, at.configurable = !0, "value" in at && (at.writable = !0), Object.defineProperty(St, at.key, at);
                }
              }
              function x(St, Z, W) {
                return Z && e(St.prototype, Z), W && e(St, W), St;
              }
              function S(St, Z, W) {
                return Z in St ? Object.defineProperty(St, Z, {
                  value: W,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : St[Z] = W, St;
              }
              function P(St, Z) {
                var W = Object.keys(St);
                if (Object.getOwnPropertySymbols) {
                  var at = Object.getOwnPropertySymbols(St);
                  Z && (at = at.filter(function(q) {
                    return Object.getOwnPropertyDescriptor(St, q).enumerable;
                  })), W.push.apply(W, at);
                }
                return W;
              }
              function O(St) {
                for (var Z = 1; Z < arguments.length; Z++) {
                  var W = arguments[Z] != null ? arguments[Z] : {};
                  Z % 2 ? P(Object(W), !0).forEach(function(at) {
                    S(St, at, W[at]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(St, Object.getOwnPropertyDescriptors(W)) : P(Object(W)).forEach(function(at) {
                    Object.defineProperty(St, at, Object.getOwnPropertyDescriptor(W, at));
                  });
                }
                return St;
              }
              function T(St, Z) {
                if (typeof Z != "function" && Z !== null)
                  throw new TypeError("Super expression must either be null or a function");
                St.prototype = Object.create(Z && Z.prototype, {
                  constructor: {
                    value: St,
                    writable: !0,
                    configurable: !0
                  }
                }), Z && E(St, Z);
              }
              function A(St) {
                return A = Object.setPrototypeOf ? Object.getPrototypeOf : function(W) {
                  return W.__proto__ || Object.getPrototypeOf(W);
                }, A(St);
              }
              function E(St, Z) {
                return E = Object.setPrototypeOf || function(at, q) {
                  return at.__proto__ = q, at;
                }, E(St, Z);
              }
              function D() {
                if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                  })), !0;
                } catch (St) {
                  return !1;
                }
              }
              function b(St) {
                if (St === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return St;
              }
              function R(St, Z) {
                return Z && (typeof Z == "object" || typeof Z == "function") ? Z : b(St);
              }
              function L(St) {
                var Z = D();
                return function() {
                  var at = A(St), q;
                  if (Z) {
                    var mt = A(this).constructor;
                    q = Reflect.construct(at, arguments, mt);
                  } else
                    q = at.apply(this, arguments);
                  return R(this, q);
                };
              }
              function N(St, Z) {
                return ct(St) || nt(St, Z) || yt(St, Z) || It();
              }
              function M(St) {
                return K(St) || J(St) || yt(St) || Tt();
              }
              function K(St) {
                if (Array.isArray(St))
                  return bt(St);
              }
              function ct(St) {
                if (Array.isArray(St))
                  return St;
              }
              function J(St) {
                if (typeof Symbol != "undefined" && Symbol.iterator in Object(St))
                  return Array.from(St);
              }
              function nt(St, Z) {
                if (!(typeof Symbol == "undefined" || !(Symbol.iterator in Object(St)))) {
                  var W = [], at = !0, q = !1, mt = void 0;
                  try {
                    for (var Ct = St[Symbol.iterator](), qt; !(at = (qt = Ct.next()).done) && (W.push(qt.value), !(Z && W.length === Z)); at = !0)
                      ;
                  } catch (ae) {
                    q = !0, mt = ae;
                  } finally {
                    try {
                      !at && Ct.return != null && Ct.return();
                    } finally {
                      if (q)
                        throw mt;
                    }
                  }
                  return W;
                }
              }
              function yt(St, Z) {
                if (St) {
                  if (typeof St == "string")
                    return bt(St, Z);
                  var W = Object.prototype.toString.call(St).slice(8, -1);
                  if (W === "Object" && St.constructor && (W = St.constructor.name), W === "Map" || W === "Set")
                    return Array.from(St);
                  if (W === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(W))
                    return bt(St, Z);
                }
              }
              function bt(St, Z) {
                (Z == null || Z > St.length) && (Z = St.length);
                for (var W = 0, at = new Array(Z); W < Z; W++)
                  at[W] = St[W];
                return at;
              }
              function Tt() {
                throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function It() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function Lt(St, Z) {
                var W;
                if (typeof Symbol == "undefined" || St[Symbol.iterator] == null) {
                  if (Array.isArray(St) || (W = yt(St)) || Z && St && typeof St.length == "number") {
                    W && (St = W);
                    var at = 0, q = function() {
                    };
                    return {
                      s: q,
                      n: function() {
                        return at >= St.length ? {
                          done: !0
                        } : {
                          done: !1,
                          value: St[at++]
                        };
                      },
                      e: function(ve) {
                        throw ve;
                      },
                      f: q
                    };
                  }
                  throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                }
                var mt = !0, Ct = !1, qt;
                return {
                  s: function() {
                    W = St[Symbol.iterator]();
                  },
                  n: function() {
                    var ve = W.next();
                    return mt = ve.done, ve;
                  },
                  e: function(ve) {
                    Ct = !0, qt = ve;
                  },
                  f: function() {
                    try {
                      !mt && W.return != null && W.return();
                    } finally {
                      if (Ct)
                        throw qt;
                    }
                  }
                };
              }
              var zt = /* @__PURE__ */ function() {
                function St() {
                  m(this, St);
                }
                return x(St, [{
                  key: "toString",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }]), St;
              }(), Q = /* @__PURE__ */ function() {
                function St() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                  m(this, St), this._items = {}, this.limits = typeof Z.limits == "boolean" ? Z.limits : !0;
                }
                return x(St, [{
                  key: "add",
                  value: function(W, at) {
                    return this._items[W] = at;
                  }
                }, {
                  key: "get",
                  value: function(W) {
                    return this._items[W];
                  }
                }, {
                  key: "toString",
                  value: function() {
                    var W = this, at = Object.keys(this._items).sort(function(ye, Ce) {
                      return W._compareKeys(ye, Ce);
                    }), q = ["<<"];
                    if (this.limits && at.length > 1) {
                      var mt = at[0], Ct = at[at.length - 1];
                      q.push("  /Limits ".concat(G.convert([this._dataForKey(mt), this._dataForKey(Ct)])));
                    }
                    q.push("  /".concat(this._keysName(), " ["));
                    var qt = Lt(at), ae;
                    try {
                      for (qt.s(); !(ae = qt.n()).done; ) {
                        var ve = ae.value;
                        q.push("    ".concat(G.convert(this._dataForKey(ve)), " ").concat(G.convert(this._items[ve])));
                      }
                    } catch (ye) {
                      qt.e(ye);
                    } finally {
                      qt.f();
                    }
                    return q.push("]"), q.push(">>"), q.join(`
`);
                  }
                }, {
                  key: "_compareKeys",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "_dataForKey",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }]), St;
              }(), gt = function(Z, W) {
                return (Array(W + 1).join("0") + Z).slice(-W);
              }, ht = /[\n\r\t\b\f()\\]/g, st = {
                "\n": "\\n",
                "\r": "\\r",
                "	": "\\t",
                "\b": "\\b",
                "\f": "\\f",
                "\\": "\\\\",
                "(": "\\(",
                ")": "\\)"
              }, xt = function(Z) {
                var W = Z.length;
                if (W & 1)
                  throw new Error("Buffer length must be even");
                for (var at = 0, q = W - 1; at < q; at += 2) {
                  var mt = Z[at];
                  Z[at] = Z[at + 1], Z[at + 1] = mt;
                }
                return Z;
              }, G = /* @__PURE__ */ function() {
                function St() {
                  m(this, St);
                }
                return x(St, null, [{
                  key: "convert",
                  value: function(W) {
                    var at = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                    if (typeof W == "string")
                      return "/".concat(W);
                    if (W instanceof String) {
                      for (var q = W, mt = !1, Ct = 0, qt = q.length; Ct < qt; Ct++)
                        if (q.charCodeAt(Ct) > 127) {
                          mt = !0;
                          break;
                        }
                      var ae;
                      return mt ? ae = xt(r.from("\uFEFF".concat(q), "utf16le")) : ae = r.from(q.valueOf(), "ascii"), at ? q = at(ae).toString("binary") : q = ae.toString("binary"), q = q.replace(ht, function(Ve) {
                        return st[Ve];
                      }), "(".concat(q, ")");
                    } else {
                      if (r.isBuffer(W))
                        return "<".concat(W.toString("hex"), ">");
                      if (W instanceof zt || W instanceof Q)
                        return W.toString();
                      if (W instanceof Date) {
                        var ve = "D:".concat(gt(W.getUTCFullYear(), 4)) + gt(W.getUTCMonth() + 1, 2) + gt(W.getUTCDate(), 2) + gt(W.getUTCHours(), 2) + gt(W.getUTCMinutes(), 2) + gt(W.getUTCSeconds(), 2) + "Z";
                        return at && (ve = at(r.from(ve, "ascii")).toString("binary"), ve = ve.replace(ht, function(Ve) {
                          return st[Ve];
                        })), "(".concat(ve, ")");
                      } else if (Array.isArray(W)) {
                        var ye = W.map(function(Ve) {
                          return St.convert(Ve, at);
                        }).join(" ");
                        return "[".concat(ye, "]");
                      } else if ({}.toString.call(W) === "[object Object]") {
                        var Ce = ["<<"];
                        for (var Ee in W) {
                          var De = W[Ee];
                          Ce.push("/".concat(Ee, " ").concat(St.convert(De, at)));
                        }
                        return Ce.push(">>"), Ce.join(`
`);
                      } else
                        return typeof W == "number" ? St.number(W) : "".concat(W);
                    }
                  }
                }, {
                  key: "number",
                  value: function(W) {
                    if (W > -1e21 && W < 1e21)
                      return Math.round(W * 1e6) / 1e6;
                    throw new Error("unsupported number: ".concat(W));
                  }
                }]), St;
              }(), Ft = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W(at, q) {
                  var mt, Ct = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  return m(this, W), mt = Z.call(this), mt.document = at, mt.id = q, mt.data = Ct, mt.gen = 0, mt.compress = mt.document.compress && !mt.data.Filter, mt.uncompressedLength = 0, mt.buffer = [], mt;
                }
                return x(W, [{
                  key: "write",
                  value: function(q) {
                    if (r.isBuffer(q) || (q = r.from(q + `
`, "binary")), this.uncompressedLength += q.length, this.data.Length == null && (this.data.Length = 0), this.buffer.push(q), this.data.Length += q.length, this.compress)
                      return this.data.Filter = "FlateDecode";
                  }
                }, {
                  key: "end",
                  value: function(q) {
                    return q && this.write(q), this.finalize();
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    this.offset = this.document._offset;
                    var q = this.document._security ? this.document._security.getEncryptFn(this.id, this.gen) : null;
                    this.buffer.length && (this.buffer = r.concat(this.buffer), this.compress && (this.buffer = o.default.deflateSync(this.buffer)), q && (this.buffer = q(this.buffer)), this.data.Length = this.buffer.length), this.document._write("".concat(this.id, " ").concat(this.gen, " obj")), this.document._write(G.convert(this.data, q)), this.buffer.length && (this.document._write("stream"), this.document._write(this.buffer), this.buffer = [], this.document._write(`
endstream`)), this.document._write("endobj"), this.document._refEnd(this);
                  }
                }, {
                  key: "toString",
                  value: function() {
                    return "".concat(this.id, " ").concat(this.gen, " R");
                  }
                }]), W;
              }(zt), z = {
                top: 72,
                left: 72,
                bottom: 72,
                right: 72
              }, C = {
                "4A0": [4767.87, 6740.79],
                "2A0": [3370.39, 4767.87],
                A0: [2383.94, 3370.39],
                A1: [1683.78, 2383.94],
                A2: [1190.55, 1683.78],
                A3: [841.89, 1190.55],
                A4: [595.28, 841.89],
                A5: [419.53, 595.28],
                A6: [297.64, 419.53],
                A7: [209.76, 297.64],
                A8: [147.4, 209.76],
                A9: [104.88, 147.4],
                A10: [73.7, 104.88],
                B0: [2834.65, 4008.19],
                B1: [2004.09, 2834.65],
                B2: [1417.32, 2004.09],
                B3: [1000.63, 1417.32],
                B4: [708.66, 1000.63],
                B5: [498.9, 708.66],
                B6: [354.33, 498.9],
                B7: [249.45, 354.33],
                B8: [175.75, 249.45],
                B9: [124.72, 175.75],
                B10: [87.87, 124.72],
                C0: [2599.37, 3676.54],
                C1: [1836.85, 2599.37],
                C2: [1298.27, 1836.85],
                C3: [918.43, 1298.27],
                C4: [649.13, 918.43],
                C5: [459.21, 649.13],
                C6: [323.15, 459.21],
                C7: [229.61, 323.15],
                C8: [161.57, 229.61],
                C9: [113.39, 161.57],
                C10: [79.37, 113.39],
                RA0: [2437.8, 3458.27],
                RA1: [1729.13, 2437.8],
                RA2: [1218.9, 1729.13],
                RA3: [864.57, 1218.9],
                RA4: [609.45, 864.57],
                SRA0: [2551.18, 3628.35],
                SRA1: [1814.17, 2551.18],
                SRA2: [1275.59, 1814.17],
                SRA3: [907.09, 1275.59],
                SRA4: [637.8, 907.09],
                EXECUTIVE: [521.86, 756],
                FOLIO: [612, 936],
                LEGAL: [612, 1008],
                LETTER: [612, 792],
                TABLOID: [792, 1224]
              }, k = /* @__PURE__ */ function() {
                function St(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  m(this, St), this.document = Z, this.size = W.size || "letter", this.layout = W.layout || "portrait", typeof W.margin == "number" ? this.margins = {
                    top: W.margin,
                    left: W.margin,
                    bottom: W.margin,
                    right: W.margin
                  } : this.margins = W.margins || z;
                  var at = Array.isArray(this.size) ? this.size : C[this.size.toUpperCase()];
                  this.width = at[this.layout === "portrait" ? 0 : 1], this.height = at[this.layout === "portrait" ? 1 : 0], this.content = this.document.ref(), this.resources = this.document.ref({
                    ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"]
                  }), this.dictionary = this.document.ref({
                    Type: "Page",
                    Parent: this.document._root.data.Pages,
                    MediaBox: [0, 0, this.width, this.height],
                    Contents: this.content,
                    Resources: this.resources
                  }), this.markings = [];
                }
                return x(St, [{
                  key: "maxY",
                  value: function() {
                    return this.height - this.margins.bottom;
                  }
                }, {
                  key: "write",
                  value: function(W) {
                    return this.content.write(W);
                  }
                }, {
                  key: "end",
                  value: function() {
                    return this.dictionary.end(), this.resources.end(), this.content.end();
                  }
                }, {
                  key: "fonts",
                  get: function() {
                    var W = this.resources.data;
                    return W.Font != null ? W.Font : W.Font = {};
                  }
                }, {
                  key: "xobjects",
                  get: function() {
                    var W = this.resources.data;
                    return W.XObject != null ? W.XObject : W.XObject = {};
                  }
                }, {
                  key: "ext_gstates",
                  get: function() {
                    var W = this.resources.data;
                    return W.ExtGState != null ? W.ExtGState : W.ExtGState = {};
                  }
                }, {
                  key: "patterns",
                  get: function() {
                    var W = this.resources.data;
                    return W.Pattern != null ? W.Pattern : W.Pattern = {};
                  }
                }, {
                  key: "colorSpaces",
                  get: function() {
                    var W = this.resources.data;
                    return W.ColorSpace || (W.ColorSpace = {});
                  }
                }, {
                  key: "annotations",
                  get: function() {
                    var W = this.dictionary.data;
                    return W.Annots != null ? W.Annots : W.Annots = [];
                  }
                }, {
                  key: "structParentTreeKey",
                  get: function() {
                    var W = this.dictionary.data;
                    return W.StructParents != null ? W.StructParents : W.StructParents = this.document.createStructParentTreeNextKey();
                  }
                }]), St;
              }(), V = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W() {
                  return m(this, W), Z.apply(this, arguments);
                }
                return x(W, [{
                  key: "_compareKeys",
                  value: function(q, mt) {
                    return q.localeCompare(mt);
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    return "Names";
                  }
                }, {
                  key: "_dataForKey",
                  value: function(q) {
                    return new String(q);
                  }
                }]), W;
              }(Q);
              function ot(St, Z) {
                if (St < Z[0])
                  return !1;
                for (var W = 0, at = Z.length / 2; W <= at; ) {
                  var q = Math.floor((W + at) / 2), mt = q * 2;
                  if (St >= Z[mt] && St <= Z[mt + 1])
                    return !0;
                  St > Z[mt + 1] ? W = q + 1 : at = q - 1;
                }
                return !1;
              }
              var et = [545, 545, 564, 591, 686, 687, 751, 767, 848, 863, 880, 883, 886, 889, 891, 893, 895, 899, 907, 907, 909, 909, 930, 930, 975, 975, 1015, 1023, 1159, 1159, 1231, 1231, 1270, 1271, 1274, 1279, 1296, 1328, 1367, 1368, 1376, 1376, 1416, 1416, 1419, 1424, 1442, 1442, 1466, 1466, 1477, 1487, 1515, 1519, 1525, 1547, 1549, 1562, 1564, 1566, 1568, 1568, 1595, 1599, 1622, 1631, 1774, 1775, 1791, 1791, 1806, 1806, 1837, 1839, 1867, 1919, 1970, 2304, 2308, 2308, 2362, 2363, 2382, 2383, 2389, 2391, 2417, 2432, 2436, 2436, 2445, 2446, 2449, 2450, 2473, 2473, 2481, 2481, 2483, 2485, 2490, 2491, 2493, 2493, 2501, 2502, 2505, 2506, 2510, 2518, 2520, 2523, 2526, 2526, 2532, 2533, 2555, 2561, 2563, 2564, 2571, 2574, 2577, 2578, 2601, 2601, 2609, 2609, 2612, 2612, 2615, 2615, 2618, 2619, 2621, 2621, 2627, 2630, 2633, 2634, 2638, 2648, 2653, 2653, 2655, 2661, 2677, 2688, 2692, 2692, 2700, 2700, 2702, 2702, 2706, 2706, 2729, 2729, 2737, 2737, 2740, 2740, 2746, 2747, 2758, 2758, 2762, 2762, 2766, 2767, 2769, 2783, 2785, 2789, 2800, 2816, 2820, 2820, 2829, 2830, 2833, 2834, 2857, 2857, 2865, 2865, 2868, 2869, 2874, 2875, 2884, 2886, 2889, 2890, 2894, 2901, 2904, 2907, 2910, 2910, 2914, 2917, 2929, 2945, 2948, 2948, 2955, 2957, 2961, 2961, 2966, 2968, 2971, 2971, 2973, 2973, 2976, 2978, 2981, 2983, 2987, 2989, 2998, 2998, 3002, 3005, 3011, 3013, 3017, 3017, 3022, 3030, 3032, 3046, 3059, 3072, 3076, 3076, 3085, 3085, 3089, 3089, 3113, 3113, 3124, 3124, 3130, 3133, 3141, 3141, 3145, 3145, 3150, 3156, 3159, 3167, 3170, 3173, 3184, 3201, 3204, 3204, 3213, 3213, 3217, 3217, 3241, 3241, 3252, 3252, 3258, 3261, 3269, 3269, 3273, 3273, 3278, 3284, 3287, 3293, 3295, 3295, 3298, 3301, 3312, 3329, 3332, 3332, 3341, 3341, 3345, 3345, 3369, 3369, 3386, 3389, 3396, 3397, 3401, 3401, 3406, 3414, 3416, 3423, 3426, 3429, 3440, 3457, 3460, 3460, 3479, 3481, 3506, 3506, 3516, 3516, 3518, 3519, 3527, 3529, 3531, 3534, 3541, 3541, 3543, 3543, 3552, 3569, 3573, 3584, 3643, 3646, 3676, 3712, 3715, 3715, 3717, 3718, 3721, 3721, 3723, 3724, 3726, 3731, 3736, 3736, 3744, 3744, 3748, 3748, 3750, 3750, 3752, 3753, 3756, 3756, 3770, 3770, 3774, 3775, 3781, 3781, 3783, 3783, 3790, 3791, 3802, 3803, 3806, 3839, 3912, 3912, 3947, 3952, 3980, 3983, 3992, 3992, 4029, 4029, 4045, 4046, 4048, 4095, 4130, 4130, 4136, 4136, 4139, 4139, 4147, 4149, 4154, 4159, 4186, 4255, 4294, 4303, 4345, 4346, 4348, 4351, 4442, 4446, 4515, 4519, 4602, 4607, 4615, 4615, 4679, 4679, 4681, 4681, 4686, 4687, 4695, 4695, 4697, 4697, 4702, 4703, 4743, 4743, 4745, 4745, 4750, 4751, 4783, 4783, 4785, 4785, 4790, 4791, 4799, 4799, 4801, 4801, 4806, 4807, 4815, 4815, 4823, 4823, 4847, 4847, 4879, 4879, 4881, 4881, 4886, 4887, 4895, 4895, 4935, 4935, 4955, 4960, 4989, 5023, 5109, 5120, 5751, 5759, 5789, 5791, 5873, 5887, 5901, 5901, 5909, 5919, 5943, 5951, 5972, 5983, 5997, 5997, 6001, 6001, 6004, 6015, 6109, 6111, 6122, 6143, 6159, 6159, 6170, 6175, 6264, 6271, 6314, 7679, 7836, 7839, 7930, 7935, 7958, 7959, 7966, 7967, 8006, 8007, 8014, 8015, 8024, 8024, 8026, 8026, 8028, 8028, 8030, 8030, 8062, 8063, 8117, 8117, 8133, 8133, 8148, 8149, 8156, 8156, 8176, 8177, 8181, 8181, 8191, 8191, 8275, 8278, 8280, 8286, 8292, 8297, 8306, 8307, 8335, 8351, 8370, 8399, 8427, 8447, 8507, 8508, 8524, 8530, 8580, 8591, 9167, 9215, 9255, 9279, 9291, 9311, 9471, 9471, 9748, 9749, 9752, 9752, 9854, 9855, 9866, 9984, 9989, 9989, 9994, 9995, 10024, 10024, 10060, 10060, 10062, 10062, 10067, 10069, 10071, 10071, 10079, 10080, 10133, 10135, 10160, 10160, 10175, 10191, 10220, 10223, 11008, 11903, 11930, 11930, 12020, 12031, 12246, 12271, 12284, 12287, 12352, 12352, 12439, 12440, 12544, 12548, 12589, 12592, 12687, 12687, 12728, 12783, 12829, 12831, 12868, 12880, 12924, 12926, 13004, 13007, 13055, 13055, 13175, 13178, 13278, 13279, 13311, 13311, 19894, 19967, 40870, 40959, 42125, 42127, 42183, 44031, 55204, 55295, 64046, 64047, 64107, 64255, 64263, 64274, 64280, 64284, 64311, 64311, 64317, 64317, 64319, 64319, 64322, 64322, 64325, 64325, 64434, 64466, 64832, 64847, 64912, 64913, 64968, 64975, 65021, 65023, 65040, 65055, 65060, 65071, 65095, 65096, 65107, 65107, 65127, 65127, 65132, 65135, 65141, 65141, 65277, 65278, 65280, 65280, 65471, 65473, 65480, 65481, 65488, 65489, 65496, 65497, 65501, 65503, 65511, 65511, 65519, 65528, 65536, 66303, 66335, 66335, 66340, 66351, 66379, 66559, 66598, 66599, 66638, 118783, 119030, 119039, 119079, 119081, 119262, 119807, 119893, 119893, 119965, 119965, 119968, 119969, 119971, 119972, 119975, 119976, 119981, 119981, 119994, 119994, 119996, 119996, 120001, 120001, 120004, 120004, 120070, 120070, 120075, 120076, 120085, 120085, 120093, 120093, 120122, 120122, 120127, 120127, 120133, 120133, 120135, 120137, 120145, 120145, 120484, 120487, 120778, 120781, 120832, 131069, 173783, 194559, 195102, 196605, 196608, 262141, 262144, 327677, 327680, 393213, 393216, 458749, 458752, 524285, 524288, 589821, 589824, 655357, 655360, 720893, 720896, 786429, 786432, 851965, 851968, 917501, 917504, 917504, 917506, 917535, 917632, 983037], tt = function(Z) {
                return ot(Z, et);
              }, At = [173, 173, 847, 847, 6150, 6150, 6155, 6155, 6156, 6156, 6157, 6157, 8203, 8203, 8204, 8204, 8205, 8205, 8288, 8288, 65024, 65024, 65025, 65025, 65026, 65026, 65027, 65027, 65028, 65028, 65029, 65029, 65030, 65030, 65031, 65031, 65032, 65032, 65033, 65033, 65034, 65034, 65035, 65035, 65036, 65036, 65037, 65037, 65038, 65038, 65039, 65039, 65279, 65279], Nt = function(Z) {
                return ot(Z, At);
              }, Kt = [
                160,
                160,
                5760,
                5760,
                8192,
                8192,
                8193,
                8193,
                8194,
                8194,
                8195,
                8195,
                8196,
                8196,
                8197,
                8197,
                8198,
                8198,
                8199,
                8199,
                8200,
                8200,
                8201,
                8201,
                8202,
                8202,
                8203,
                8203,
                8239,
                8239,
                8287,
                8287,
                12288,
                12288
                /* IDEOGRAPHIC SPACE */
              ], Vt = function(Z) {
                return ot(Z, Kt);
              }, Ot = [
                /**
                 * C.2.2 Non-ASCII control characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.2
                 */
                128,
                159,
                1757,
                1757,
                1807,
                1807,
                6158,
                6158,
                8204,
                8204,
                8205,
                8205,
                8232,
                8232,
                8233,
                8233,
                8288,
                8288,
                8289,
                8289,
                8290,
                8290,
                8291,
                8291,
                8298,
                8303,
                65279,
                65279,
                65529,
                65532,
                119155,
                119162
                /* [MUSICAL CONTROL CHARACTERS] */
              ], ie = [
                /**
                 * C.4 Non-character code points
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.4
                 */
                64976,
                65007,
                65534,
                65535,
                131070,
                131071,
                196606,
                196607,
                262142,
                262143,
                327678,
                327679,
                393214,
                393215,
                458750,
                458751,
                524286,
                524287,
                589822,
                589823,
                655358,
                655359,
                720894,
                720895,
                786430,
                786431,
                851966,
                851967,
                917502,
                917503,
                983038,
                983039,
                1114110,
                1114111
                /* [NONCHARACTER CODE POINTS] */
              ], Ae = [
                /**
                 * C.2.1 ASCII control characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.1
                 */
                0,
                31,
                127,
                127,
                /**
                 * C.8 Change display properties or are deprecated
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.8
                 */
                832,
                832,
                833,
                833,
                8206,
                8206,
                8207,
                8207,
                8234,
                8234,
                8235,
                8235,
                8236,
                8236,
                8237,
                8237,
                8238,
                8238,
                8298,
                8298,
                8299,
                8299,
                8300,
                8300,
                8301,
                8301,
                8302,
                8302,
                8303,
                8303,
                /**
                 * C.7 Inappropriate for canonical representation
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.7
                 */
                12272,
                12283,
                /**
                 * C.5 Surrogate codes
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.5
                 */
                55296,
                57343,
                /**
                 * C.3 Private use
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3
                 */
                57344,
                63743,
                /**
                 * C.6 Inappropriate for plain text
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.6
                 */
                65529,
                65529,
                65530,
                65530,
                65531,
                65531,
                65532,
                65532,
                65533,
                65533,
                /**
                 * C.9 Tagging characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.9
                 */
                917505,
                917505,
                917536,
                917631,
                /**
                 * C.3 Private use
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3
                 */
                983040,
                1048573,
                1048576,
                1114109
                /* [PRIVATE USE, PLANE 16] */
              ], be = function(Z) {
                return ot(Z, Kt) || ot(Z, Ae) || ot(Z, Ot) || ot(Z, ie);
              }, de = [1470, 1470, 1472, 1472, 1475, 1475, 1488, 1514, 1520, 1524, 1563, 1563, 1567, 1567, 1569, 1594, 1600, 1610, 1645, 1647, 1649, 1749, 1757, 1757, 1765, 1766, 1786, 1790, 1792, 1805, 1808, 1808, 1810, 1836, 1920, 1957, 1969, 1969, 8207, 8207, 64285, 64285, 64287, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65020, 65136, 65140, 65142, 65276], Se = function(Z) {
                return ot(Z, de);
              }, Wt = [65, 90, 97, 122, 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 544, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736, 740, 750, 750, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 1013, 1024, 1154, 1162, 1230, 1232, 1269, 1272, 1273, 1280, 1295, 1329, 1366, 1369, 1375, 1377, 1415, 1417, 1417, 2307, 2307, 2309, 2361, 2365, 2368, 2377, 2380, 2384, 2384, 2392, 2401, 2404, 2416, 2434, 2435, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2494, 2496, 2503, 2504, 2507, 2508, 2519, 2519, 2524, 2525, 2527, 2529, 2534, 2545, 2548, 2554, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2622, 2624, 2649, 2652, 2654, 2654, 2662, 2671, 2674, 2676, 2691, 2691, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2752, 2761, 2761, 2763, 2764, 2768, 2768, 2784, 2784, 2790, 2799, 2818, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870, 2873, 2877, 2878, 2880, 2880, 2887, 2888, 2891, 2892, 2903, 2903, 2908, 2909, 2911, 2913, 2918, 2928, 2947, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3006, 3007, 3009, 3010, 3014, 3016, 3018, 3020, 3031, 3031, 3047, 3058, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3137, 3140, 3168, 3169, 3174, 3183, 3202, 3203, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3262, 3262, 3264, 3268, 3271, 3272, 3274, 3275, 3285, 3286, 3294, 3294, 3296, 3297, 3302, 3311, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3390, 3392, 3398, 3400, 3402, 3404, 3415, 3415, 3424, 3425, 3430, 3439, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3535, 3537, 3544, 3551, 3570, 3572, 3585, 3632, 3634, 3635, 3648, 3654, 3663, 3675, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3792, 3801, 3804, 3805, 3840, 3863, 3866, 3892, 3894, 3894, 3896, 3896, 3902, 3911, 3913, 3946, 3967, 3967, 3973, 3973, 3976, 3979, 4030, 4037, 4039, 4044, 4047, 4047, 4096, 4129, 4131, 4135, 4137, 4138, 4140, 4140, 4145, 4145, 4152, 4152, 4160, 4183, 4256, 4293, 4304, 4344, 4347, 4347, 4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 4961, 4988, 5024, 5108, 5121, 5750, 5761, 5786, 5792, 5872, 5888, 5900, 5902, 5905, 5920, 5937, 5941, 5942, 5952, 5969, 5984, 5996, 5998, 6e3, 6016, 6070, 6078, 6085, 6087, 6088, 6100, 6106, 6108, 6108, 6112, 6121, 6160, 6169, 6176, 6263, 6272, 6312, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8206, 8206, 8305, 8305, 8319, 8319, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8509, 8511, 8517, 8521, 8544, 8579, 9014, 9082, 9109, 9109, 9372, 9449, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12588, 12593, 12686, 12688, 12727, 12784, 12828, 12832, 12867, 12896, 12923, 12927, 12976, 12992, 13003, 13008, 13054, 13056, 13174, 13179, 13277, 13280, 13310, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 55296, 64045, 64048, 64106, 64256, 64262, 64275, 64279, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, 66304, 66334, 66336, 66339, 66352, 66378, 66560, 66597, 66600, 66637, 118784, 119029, 119040, 119078, 119082, 119142, 119146, 119154, 119171, 119172, 119180, 119209, 119214, 119261, 119808, 119892, 119894, 119964, 119966, 119967, 119970, 119970, 119973, 119974, 119977, 119980, 119982, 119993, 119995, 119995, 119997, 12e4, 120002, 120003, 120005, 120069, 120071, 120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126, 120128, 120132, 120134, 120134, 120138, 120144, 120146, 120483, 120488, 120777, 131072, 173782, 194560, 195101, 983040, 1048573, 1048576, 1114109], _t = function(Z) {
                return ot(Z, Wt);
              }, ce = Vt, pe = Nt, we = function(Z) {
                return Z.codePointAt(0);
              }, Be = function(Z) {
                return Z[0];
              }, Ie = function(Z) {
                return Z[Z.length - 1];
              };
              function Dt(St) {
                for (var Z = [], W = St.length, at = 0; at < W; at += 1) {
                  var q = St.charCodeAt(at);
                  if (q >= 55296 && q <= 56319 && W > at + 1) {
                    var mt = St.charCodeAt(at + 1);
                    if (mt >= 56320 && mt <= 57343) {
                      Z.push((q - 55296) * 1024 + mt - 56320 + 65536), at += 1;
                      continue;
                    }
                  }
                  Z.push(q);
                }
                return Z;
              }
              function ue(St) {
                var Z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                if (typeof St != "string")
                  throw new TypeError("Expected string.");
                if (St.length === 0)
                  return "";
                var W = Dt(St).map(function(Ce) {
                  return ce(Ce) ? 32 : Ce;
                }).filter(function(Ce) {
                  return !pe(Ce);
                }), at = String.fromCodePoint.apply(null, W).normalize("NFKC"), q = Dt(at), mt = q.some(be);
                if (mt)
                  throw new Error("Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3");
                if (Z.allowUnassigned !== !0) {
                  var Ct = q.some(tt);
                  if (Ct)
                    throw new Error("Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5");
                }
                var qt = q.some(Se), ae = q.some(_t);
                if (qt && ae)
                  throw new Error("String must not contain RandALCat and LCat at the same time, see https://tools.ietf.org/html/rfc3454#section-6");
                var ve = Se(we(Be(at))), ye = Se(we(Ie(at)));
                if (qt && !(ve && ye))
                  throw new Error("Bidirectional RandALCat character must be the first and the last character of the string, see https://tools.ietf.org/html/rfc3454#section-6");
                return at;
              }
              var lt = /* @__PURE__ */ function() {
                x(St, null, [{
                  key: "generateFileID",
                  value: function() {
                    var W = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, at = "".concat(W.CreationDate.getTime(), `
`);
                    for (var q in W)
                      W.hasOwnProperty(q) && (at += "".concat(q, ": ").concat(W[q].valueOf(), `
`));
                    return Me(f.default.MD5(at));
                  }
                }, {
                  key: "generateRandomWordArray",
                  value: function(W) {
                    return f.default.lib.WordArray.random(W);
                  }
                }, {
                  key: "create",
                  value: function(W) {
                    var at = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                    return !at.ownerPassword && !at.userPassword ? null : new St(W, at);
                  }
                }]);
                function St(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  if (m(this, St), !W.ownerPassword && !W.userPassword)
                    throw new Error("None of owner password and user password is defined.");
                  this.document = Z, this._setupEncryption(W);
                }
                return x(St, [{
                  key: "_setupEncryption",
                  value: function(W) {
                    switch (W.pdfVersion) {
                      case "1.4":
                      case "1.5":
                        this.version = 2;
                        break;
                      case "1.6":
                      case "1.7":
                        this.version = 4;
                        break;
                      case "1.7ext3":
                        this.version = 5;
                        break;
                      default:
                        this.version = 1;
                        break;
                    }
                    var at = {
                      Filter: "Standard"
                    };
                    switch (this.version) {
                      case 1:
                      case 2:
                      case 4:
                        this._setupEncryptionV1V2V4(this.version, at, W);
                        break;
                      case 5:
                        this._setupEncryptionV5(at, W);
                        break;
                    }
                    this.dictionary = this.document.ref(at);
                  }
                }, {
                  key: "_setupEncryptionV1V2V4",
                  value: function(W, at, q) {
                    var mt, Ct;
                    switch (W) {
                      case 1:
                        mt = 2, this.keyBits = 40, Ct = Y(q.permissions);
                        break;
                      case 2:
                        mt = 3, this.keyBits = 128, Ct = j(q.permissions);
                        break;
                      case 4:
                        mt = 4, this.keyBits = 128, Ct = j(q.permissions);
                        break;
                    }
                    var qt = Ne(q.userPassword), ae = q.ownerPassword ? Ne(q.ownerPassword) : qt, ve = Ht(mt, this.keyBits, qt, ae);
                    this.encryptionKey = te(mt, this.keyBits, this.document._id, qt, ve, Ct);
                    var ye;
                    mt === 2 ? ye = wt(this.encryptionKey) : ye = it(this.document._id, this.encryptionKey), at.V = W, W >= 2 && (at.Length = this.keyBits), W === 4 && (at.CF = {
                      StdCF: {
                        AuthEvent: "DocOpen",
                        CFM: "AESV2",
                        Length: this.keyBits / 8
                      }
                    }, at.StmF = "StdCF", at.StrF = "StdCF"), at.R = mt, at.O = Me(ve), at.U = Me(ye), at.P = Ct;
                  }
                }, {
                  key: "_setupEncryptionV5",
                  value: function(W, at) {
                    this.keyBits = 256;
                    var q = j(at.permissions), mt = Oe(at.userPassword), Ct = at.ownerPassword ? Oe(at.ownerPassword) : mt;
                    this.encryptionKey = jt(St.generateRandomWordArray);
                    var qt = _(mt, St.generateRandomWordArray), ae = f.default.lib.WordArray.create(qt.words.slice(10, 12), 8), ve = Qt(mt, ae, this.encryptionKey), ye = ee(Ct, qt, St.generateRandomWordArray), Ce = f.default.lib.WordArray.create(ye.words.slice(10, 12), 8), Ee = Et(Ct, Ce, qt, this.encryptionKey), De = le(q, this.encryptionKey, St.generateRandomWordArray);
                    W.V = 5, W.Length = this.keyBits, W.CF = {
                      StdCF: {
                        AuthEvent: "DocOpen",
                        CFM: "AESV3",
                        Length: this.keyBits / 8
                      }
                    }, W.StmF = "StdCF", W.StrF = "StdCF", W.R = 5, W.O = Me(ye), W.OE = Me(Ee), W.U = Me(qt), W.UE = Me(ve), W.P = q, W.Perms = Me(De);
                  }
                }, {
                  key: "getEncryptFn",
                  value: function(W, at) {
                    var q;
                    if (this.version < 5 && (q = this.encryptionKey.clone().concat(f.default.lib.WordArray.create([(W & 255) << 24 | (W & 65280) << 8 | W >> 8 & 65280 | at & 255, (at & 65280) << 16], 5))), this.version === 1 || this.version === 2) {
                      var mt = f.default.MD5(q);
                      return mt.sigBytes = Math.min(16, this.keyBits / 8 + 5), function(ve) {
                        return Me(f.default.RC4.encrypt(f.default.lib.WordArray.create(ve), mt).ciphertext);
                      };
                    }
                    var Ct;
                    this.version === 4 ? Ct = f.default.MD5(q.concat(f.default.lib.WordArray.create([1933667412], 4))) : Ct = this.encryptionKey;
                    var qt = St.generateRandomWordArray(16), ae = {
                      mode: f.default.mode.CBC,
                      padding: f.default.pad.Pkcs7,
                      iv: qt
                    };
                    return function(ve) {
                      return Me(qt.clone().concat(f.default.AES.encrypt(f.default.lib.WordArray.create(ve), Ct, ae).ciphertext));
                    };
                  }
                }, {
                  key: "end",
                  value: function() {
                    this.dictionary.end();
                  }
                }]), St;
              }();
              function Y() {
                var St = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = -64;
                return St.printing && (Z |= 4), St.modifying && (Z |= 8), St.copying && (Z |= 16), St.annotating && (Z |= 32), Z;
              }
              function j() {
                var St = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = -3904;
                return St.printing === "lowResolution" && (Z |= 4), St.printing === "highResolution" && (Z |= 2052), St.modifying && (Z |= 8), St.copying && (Z |= 16), St.annotating && (Z |= 32), St.fillingForms && (Z |= 256), St.contentAccessibility && (Z |= 512), St.documentAssembly && (Z |= 1024), Z;
              }
              function wt(St) {
                return f.default.RC4.encrypt(Ne(), St).ciphertext;
              }
              function it(St, Z) {
                for (var W = Z.clone(), at = f.default.MD5(Ne().concat(f.default.lib.WordArray.create(St))), q = 0; q < 20; q++) {
                  for (var mt = Math.ceil(W.sigBytes / 4), Ct = 0; Ct < mt; Ct++)
                    W.words[Ct] = Z.words[Ct] ^ (q | q << 8 | q << 16 | q << 24);
                  at = f.default.RC4.encrypt(at, W).ciphertext;
                }
                return at.concat(f.default.lib.WordArray.create(null, 16));
              }
              function Ht(St, Z, W, at) {
                for (var q = at, mt = St >= 3 ? 51 : 1, Ct = 0; Ct < mt; Ct++)
                  q = f.default.MD5(q);
                var qt = q.clone();
                qt.sigBytes = Z / 8;
                var ae = W;
                mt = St >= 3 ? 20 : 1;
                for (var ve = 0; ve < mt; ve++) {
                  for (var ye = Math.ceil(qt.sigBytes / 4), Ce = 0; Ce < ye; Ce++)
                    qt.words[Ce] = q.words[Ce] ^ (ve | ve << 8 | ve << 16 | ve << 24);
                  ae = f.default.RC4.encrypt(ae, qt).ciphertext;
                }
                return ae;
              }
              function te(St, Z, W, at, q, mt) {
                for (var Ct = at.clone().concat(q).concat(f.default.lib.WordArray.create([Ue(mt)], 4)).concat(f.default.lib.WordArray.create(W)), qt = St >= 3 ? 51 : 1, ae = 0; ae < qt; ae++)
                  Ct = f.default.MD5(Ct), Ct.sigBytes = Z / 8;
                return Ct;
              }
              function _(St, Z) {
                var W = Z(8), at = Z(8);
                return f.default.SHA256(St.clone().concat(W)).concat(W).concat(at);
              }
              function Qt(St, Z, W) {
                var at = f.default.SHA256(St.clone().concat(Z)), q = {
                  mode: f.default.mode.CBC,
                  padding: f.default.pad.NoPadding,
                  iv: f.default.lib.WordArray.create(null, 16)
                };
                return f.default.AES.encrypt(W, at, q).ciphertext;
              }
              function ee(St, Z, W) {
                var at = W(8), q = W(8);
                return f.default.SHA256(St.clone().concat(at).concat(Z)).concat(at).concat(q);
              }
              function Et(St, Z, W, at) {
                var q = f.default.SHA256(St.clone().concat(Z).concat(W)), mt = {
                  mode: f.default.mode.CBC,
                  padding: f.default.pad.NoPadding,
                  iv: f.default.lib.WordArray.create(null, 16)
                };
                return f.default.AES.encrypt(at, q, mt).ciphertext;
              }
              function jt(St) {
                return St(32);
              }
              function le(St, Z, W) {
                var at = f.default.lib.WordArray.create([Ue(St), 4294967295, 1415668834], 12).concat(W(4)), q = {
                  mode: f.default.mode.ECB,
                  padding: f.default.pad.NoPadding
                };
                return f.default.AES.encrypt(at, Z, q).ciphertext;
              }
              function Ne() {
                for (var St = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", Z = r.alloc(32), W = St.length, at = 0; at < W && at < 32; ) {
                  var q = St.charCodeAt(at);
                  if (q > 255)
                    throw new Error("Password contains one or more invalid characters.");
                  Z[at] = q, at++;
                }
                for (; at < 32; )
                  Z[at] = on[at - W], at++;
                return f.default.lib.WordArray.create(Z);
              }
              function Oe() {
                var St = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
                St = unescape(encodeURIComponent(ue(St)));
                for (var Z = Math.min(127, St.length), W = r.alloc(Z), at = 0; at < Z; at++)
                  W[at] = St.charCodeAt(at);
                return f.default.lib.WordArray.create(W);
              }
              function Ue(St) {
                return (St & 255) << 24 | (St & 65280) << 8 | St >> 8 & 65280 | St >> 24 & 255;
              }
              function Me(St) {
                for (var Z = [], W = 0; W < St.sigBytes; W++)
                  Z.push(St.words[Math.floor(W / 4)] >> 8 * (3 - W % 4) & 255);
                return r.from(Z);
              }
              var on = [40, 191, 78, 94, 78, 117, 138, 65, 100, 0, 78, 86, 255, 250, 1, 8, 46, 46, 0, 182, 208, 104, 62, 128, 47, 12, 169, 254, 100, 83, 105, 122], er = G.number, Ye = /* @__PURE__ */ function() {
                function St(Z) {
                  m(this, St), this.doc = Z, this.stops = [], this.embedded = !1, this.transform = [1, 0, 0, 1, 0, 0];
                }
                return x(St, [{
                  key: "stop",
                  value: function(W, at, q) {
                    if (q == null && (q = 1), at = this.doc._normalizeColor(at), this.stops.length === 0)
                      if (at.length === 3)
                        this._colorSpace = "DeviceRGB";
                      else if (at.length === 4)
                        this._colorSpace = "DeviceCMYK";
                      else if (at.length === 1)
                        this._colorSpace = "DeviceGray";
                      else
                        throw new Error("Unknown color space");
                    else if (this._colorSpace === "DeviceRGB" && at.length !== 3 || this._colorSpace === "DeviceCMYK" && at.length !== 4 || this._colorSpace === "DeviceGray" && at.length !== 1)
                      throw new Error("All gradient stops must use the same color space");
                    return q = Math.max(0, Math.min(1, q)), this.stops.push([W, at, q]), this;
                  }
                }, {
                  key: "setTransform",
                  value: function(W, at, q, mt, Ct, qt) {
                    return this.transform = [W, at, q, mt, Ct, qt], this;
                  }
                }, {
                  key: "embed",
                  value: function(W) {
                    var at, q = this.stops.length;
                    if (q !== 0) {
                      this.embedded = !0, this.matrix = W;
                      var mt = this.stops[q - 1];
                      mt[0] < 1 && this.stops.push([1, mt[1], mt[2]]);
                      for (var Ct = [], qt = [], ae = [], ve = 0; ve < q - 1; ve++)
                        qt.push(0, 1), ve + 2 !== q && Ct.push(this.stops[ve + 1][0]), at = this.doc.ref({
                          FunctionType: 2,
                          Domain: [0, 1],
                          C0: this.stops[ve + 0][1],
                          C1: this.stops[ve + 1][1],
                          N: 1
                        }), ae.push(at), at.end();
                      q === 1 ? at = ae[0] : (at = this.doc.ref({
                        FunctionType: 3,
                        // stitching function
                        Domain: [0, 1],
                        Functions: ae,
                        Bounds: Ct,
                        Encode: qt
                      }), at.end()), this.id = "Sh".concat(++this.doc._gradCount);
                      var ye = this.shader(at);
                      ye.end();
                      var Ce = this.doc.ref({
                        Type: "Pattern",
                        PatternType: 2,
                        Shading: ye,
                        Matrix: this.matrix.map(er)
                      });
                      if (Ce.end(), this.stops.some(function(br) {
                        return br[2] < 1;
                      })) {
                        var Ee = this.opacityGradient();
                        Ee._colorSpace = "DeviceGray";
                        var De = Lt(this.stops), Ve;
                        try {
                          for (De.s(); !(Ve = De.n()).done; ) {
                            var Xe = Ve.value;
                            Ee.stop(Xe[0], [Xe[2]]);
                          }
                        } catch (br) {
                          De.e(br);
                        } finally {
                          De.f();
                        }
                        Ee = Ee.embed(this.matrix);
                        var qe = [0, 0, this.doc.page.width, this.doc.page.height], cr = this.doc.ref({
                          Type: "XObject",
                          Subtype: "Form",
                          FormType: 1,
                          BBox: qe,
                          Group: {
                            Type: "Group",
                            S: "Transparency",
                            CS: "DeviceGray"
                          },
                          Resources: {
                            ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                            Pattern: {
                              Sh1: Ee
                            }
                          }
                        });
                        cr.write("/Pattern cs /Sh1 scn"), cr.end("".concat(qe.join(" "), " re f"));
                        var Or = this.doc.ref({
                          Type: "ExtGState",
                          SMask: {
                            Type: "Mask",
                            S: "Luminosity",
                            G: cr
                          }
                        });
                        Or.end();
                        var en = this.doc.ref({
                          Type: "Pattern",
                          PatternType: 1,
                          PaintType: 1,
                          TilingType: 2,
                          BBox: qe,
                          XStep: qe[2],
                          YStep: qe[3],
                          Resources: {
                            ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                            Pattern: {
                              Sh1: Ce
                            },
                            ExtGState: {
                              Gs1: Or
                            }
                          }
                        });
                        en.write("/Gs1 gs /Pattern cs /Sh1 scn"), en.end("".concat(qe.join(" "), " re f")), this.doc.page.patterns[this.id] = en;
                      } else
                        this.doc.page.patterns[this.id] = Ce;
                      return Ce;
                    }
                  }
                }, {
                  key: "apply",
                  value: function(W) {
                    var at = N(this.doc._ctm, 6), q = at[0], mt = at[1], Ct = at[2], qt = at[3], ae = at[4], ve = at[5], ye = N(this.transform, 6), Ce = ye[0], Ee = ye[1], De = ye[2], Ve = ye[3], Xe = ye[4], qe = ye[5], cr = [q * Ce + Ct * Ee, mt * Ce + qt * Ee, q * De + Ct * Ve, mt * De + qt * Ve, q * Xe + Ct * qe + ae, mt * Xe + qt * qe + ve];
                    (!this.embedded || cr.join(" ") !== this.matrix.join(" ")) && this.embed(cr), this.doc._setColorSpace("Pattern", W);
                    var Or = W ? "SCN" : "scn";
                    return this.doc.addContent("/".concat(this.id, " ").concat(Or));
                  }
                }]), St;
              }(), Cr = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W(at, q, mt, Ct, qt) {
                  var ae;
                  return m(this, W), ae = Z.call(this, at), ae.x1 = q, ae.y1 = mt, ae.x2 = Ct, ae.y2 = qt, ae;
                }
                return x(W, [{
                  key: "shader",
                  value: function(q) {
                    return this.doc.ref({
                      ShadingType: 2,
                      ColorSpace: this._colorSpace,
                      Coords: [this.x1, this.y1, this.x2, this.y2],
                      Function: q,
                      Extend: [!0, !0]
                    });
                  }
                }, {
                  key: "opacityGradient",
                  value: function() {
                    return new W(this.doc, this.x1, this.y1, this.x2, this.y2);
                  }
                }]), W;
              }(Ye), Pr = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W(at, q, mt, Ct, qt, ae, ve) {
                  var ye;
                  return m(this, W), ye = Z.call(this, at), ye.doc = at, ye.x1 = q, ye.y1 = mt, ye.r1 = Ct, ye.x2 = qt, ye.y2 = ae, ye.r2 = ve, ye;
                }
                return x(W, [{
                  key: "shader",
                  value: function(q) {
                    return this.doc.ref({
                      ShadingType: 3,
                      ColorSpace: this._colorSpace,
                      Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],
                      Function: q,
                      Extend: [!0, !0]
                    });
                  }
                }, {
                  key: "opacityGradient",
                  value: function() {
                    return new W(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);
                  }
                }]), W;
              }(Ye), Jr = {
                PDFGradient: Ye,
                PDFLinearGradient: Cr,
                PDFRadialGradient: Pr
              }, In = ["DeviceCMYK", "DeviceRGB"], Gn = /* @__PURE__ */ function() {
                function St(Z, W, at, q, mt) {
                  m(this, St), this.doc = Z, this.bBox = W, this.xStep = at, this.yStep = q, this.stream = mt;
                }
                return x(St, [{
                  key: "createPattern",
                  value: function() {
                    var W = this.doc.ref();
                    W.end();
                    var at = N(this.doc._ctm, 6), q = at[0], mt = at[1], Ct = at[2], qt = at[3], ae = at[4], ve = at[5], ye = 1, Ce = 0, Ee = 0, De = 1, Ve = 0, Xe = 0, qe = [q * ye + Ct * Ce, mt * ye + qt * Ce, q * Ee + Ct * De, mt * Ee + qt * De, q * Ve + Ct * Xe + ae, mt * Ve + qt * Xe + ve], cr = this.doc.ref({
                      Type: "Pattern",
                      PatternType: 1,
                      // tiling
                      PaintType: 2,
                      // 1-colored, 2-uncolored
                      TilingType: 2,
                      // 2-no distortion
                      BBox: this.bBox,
                      XStep: this.xStep,
                      YStep: this.yStep,
                      Matrix: qe.map(function(Or) {
                        return +Or.toFixed(5);
                      }),
                      Resources: W
                    });
                    return cr.end(this.stream), cr;
                  }
                }, {
                  key: "embedPatternColorSpaces",
                  value: function() {
                    var W = this;
                    In.forEach(function(at) {
                      var q = W.getPatternColorSpaceId(at);
                      if (!W.doc.page.colorSpaces[q]) {
                        var mt = W.doc.ref(["Pattern", at]);
                        mt.end(), W.doc.page.colorSpaces[q] = mt;
                      }
                    });
                  }
                }, {
                  key: "getPatternColorSpaceId",
                  value: function(W) {
                    return "CsP".concat(W);
                  }
                }, {
                  key: "embed",
                  value: function() {
                    this.id || (this.doc._patternCount = this.doc._patternCount + 1, this.id = "P" + this.doc._patternCount, this.pattern = this.createPattern()), this.doc.page.patterns[this.id] || (this.doc.page.patterns[this.id] = this.pattern);
                  }
                }, {
                  key: "apply",
                  value: function(W, at) {
                    this.embedPatternColorSpaces(), this.embed();
                    var q = this.doc._normalizeColor(at);
                    if (!q)
                      throw Error("invalid pattern color. (value: ".concat(at, ")"));
                    var mt = this.getPatternColorSpaceId(this.doc._getColorSpace(q));
                    this.doc._setColorSpace(mt, W);
                    var Ct = W ? "SCN" : "scn";
                    return this.doc.addContent("".concat(q.join(" "), " /").concat(this.id, " ").concat(Ct));
                  }
                }]), St;
              }(), nr = {
                PDFTilingPattern: Gn
              }, sn = Jr.PDFGradient, zr = Jr.PDFLinearGradient, tn = Jr.PDFRadialGradient, Gr = nr.PDFTilingPattern, Kn = {
                initColor: function() {
                  return this._opacityRegistry = {}, this._opacityCount = 0, this._patternCount = 0, this._gradCount = 0;
                },
                _normalizeColor: function(Z) {
                  if (typeof Z == "string")
                    if (Z.charAt(0) === "#") {
                      Z.length === 4 && (Z = Z.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, "#$1$1$2$2$3$3"));
                      var W = parseInt(Z.slice(1), 16);
                      Z = [W >> 16, W >> 8 & 255, W & 255];
                    } else
                      Jn[Z] && (Z = Jn[Z]);
                  return Array.isArray(Z) ? (Z.length === 3 ? Z = Z.map(function(at) {
                    return at / 255;
                  }) : Z.length === 4 && (Z = Z.map(function(at) {
                    return at / 100;
                  })), Z) : null;
                },
                _setColor: function(Z, W) {
                  return Z instanceof sn ? (Z.apply(W), !0) : Array.isArray(Z) && Z[0] instanceof Gr ? (Z[0].apply(W, Z[1]), !0) : this._setColorCore(Z, W);
                },
                _setColorCore: function(Z, W) {
                  if (Z = this._normalizeColor(Z), !Z)
                    return !1;
                  var at = W ? "SCN" : "scn", q = this._getColorSpace(Z);
                  return this._setColorSpace(q, W), Z = Z.join(" "), this.addContent("".concat(Z, " ").concat(at)), !0;
                },
                _setColorSpace: function(Z, W) {
                  var at = W ? "CS" : "cs";
                  return this.addContent("/".concat(Z, " ").concat(at));
                },
                _getColorSpace: function(Z) {
                  return Z.length === 4 ? "DeviceCMYK" : "DeviceRGB";
                },
                fillColor: function(Z, W) {
                  var at = this._setColor(Z, !1);
                  return at && this.fillOpacity(W), this._fillColor = [Z, W], this;
                },
                strokeColor: function(Z, W) {
                  var at = this._setColor(Z, !0);
                  return at && this.strokeOpacity(W), this;
                },
                opacity: function(Z) {
                  return this._doOpacity(Z, Z), this;
                },
                fillOpacity: function(Z) {
                  return this._doOpacity(Z, null), this;
                },
                strokeOpacity: function(Z) {
                  return this._doOpacity(null, Z), this;
                },
                _doOpacity: function(Z, W) {
                  var at, q;
                  if (!(Z == null && W == null)) {
                    Z != null && (Z = Math.max(0, Math.min(1, Z))), W != null && (W = Math.max(0, Math.min(1, W)));
                    var mt = "".concat(Z, "_").concat(W);
                    if (this._opacityRegistry[mt]) {
                      var Ct = N(this._opacityRegistry[mt], 2);
                      at = Ct[0], q = Ct[1];
                    } else {
                      at = {
                        Type: "ExtGState"
                      }, Z != null && (at.ca = Z), W != null && (at.CA = W), at = this.ref(at), at.end();
                      var qt = ++this._opacityCount;
                      q = "Gs".concat(qt), this._opacityRegistry[mt] = [at, q];
                    }
                    return this.page.ext_gstates[q] = at, this.addContent("/".concat(q, " gs"));
                  }
                },
                linearGradient: function(Z, W, at, q) {
                  return new zr(this, Z, W, at, q);
                },
                radialGradient: function(Z, W, at, q, mt, Ct) {
                  return new tn(this, Z, W, at, q, mt, Ct);
                },
                pattern: function(Z, W, at, q) {
                  return new Gr(this, Z, W, at, q);
                }
              }, Jn = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                grey: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
              }, ze, We, _e, hr, Cn, En;
              ze = We = _e = hr = Cn = En = 0;
              var na = {
                A: 7,
                a: 7,
                C: 6,
                c: 6,
                H: 1,
                h: 1,
                L: 2,
                l: 2,
                M: 2,
                m: 2,
                Q: 4,
                q: 4,
                S: 4,
                s: 4,
                T: 2,
                t: 2,
                V: 1,
                v: 1,
                Z: 0,
                z: 0
              }, Ea = function(Z) {
                var W, at = [], q = [], mt = "", Ct = !1, qt = 0, ae = Lt(Z), ve;
                try {
                  for (ae.s(); !(ve = ae.n()).done; ) {
                    var ye = ve.value;
                    if (na[ye] != null)
                      qt = na[ye], W && (mt.length > 0 && (q[q.length] = +mt), at[at.length] = {
                        cmd: W,
                        args: q
                      }, q = [], mt = "", Ct = !1), W = ye;
                    else if ([" ", ","].includes(ye) || ye === "-" && mt.length > 0 && mt[mt.length - 1] !== "e" || ye === "." && Ct) {
                      if (mt.length === 0)
                        continue;
                      q.length === qt ? (at[at.length] = {
                        cmd: W,
                        args: q
                      }, q = [+mt], W === "M" && (W = "L"), W === "m" && (W = "l")) : q[q.length] = +mt, Ct = ye === ".", mt = ["-", "."].includes(ye) ? ye : "";
                    } else
                      mt += ye, ye === "." && (Ct = !0);
                  }
                } catch (Ce) {
                  ae.e(Ce);
                } finally {
                  ae.f();
                }
                return mt.length > 0 && (q.length === qt ? (at[at.length] = {
                  cmd: W,
                  args: q
                }, q = [+mt], W === "M" && (W = "L"), W === "m" && (W = "l")) : q[q.length] = +mt), at[at.length] = {
                  cmd: W,
                  args: q
                }, at;
              }, aa = function(Z, W) {
                ze = We = _e = hr = Cn = En = 0;
                for (var at = 0; at < Z.length; at++) {
                  var q = Z[at];
                  typeof ia[q.cmd] == "function" && ia[q.cmd](W, q.args);
                }
              }, ia = {
                M: function(Z, W) {
                  return ze = W[0], We = W[1], _e = hr = null, Cn = ze, En = We, Z.moveTo(ze, We);
                },
                m: function(Z, W) {
                  return ze += W[0], We += W[1], _e = hr = null, Cn = ze, En = We, Z.moveTo(ze, We);
                },
                C: function(Z, W) {
                  return ze = W[4], We = W[5], _e = W[2], hr = W[3], Z.bezierCurveTo.apply(Z, M(W));
                },
                c: function(Z, W) {
                  return Z.bezierCurveTo(W[0] + ze, W[1] + We, W[2] + ze, W[3] + We, W[4] + ze, W[5] + We), _e = ze + W[2], hr = We + W[3], ze += W[4], We += W[5];
                },
                S: function(Z, W) {
                  return _e === null && (_e = ze, hr = We), Z.bezierCurveTo(ze - (_e - ze), We - (hr - We), W[0], W[1], W[2], W[3]), _e = W[0], hr = W[1], ze = W[2], We = W[3];
                },
                s: function(Z, W) {
                  return _e === null && (_e = ze, hr = We), Z.bezierCurveTo(ze - (_e - ze), We - (hr - We), ze + W[0], We + W[1], ze + W[2], We + W[3]), _e = ze + W[0], hr = We + W[1], ze += W[2], We += W[3];
                },
                Q: function(Z, W) {
                  return _e = W[0], hr = W[1], ze = W[2], We = W[3], Z.quadraticCurveTo(W[0], W[1], ze, We);
                },
                q: function(Z, W) {
                  return Z.quadraticCurveTo(W[0] + ze, W[1] + We, W[2] + ze, W[3] + We), _e = ze + W[0], hr = We + W[1], ze += W[2], We += W[3];
                },
                T: function(Z, W) {
                  return _e === null ? (_e = ze, hr = We) : (_e = ze - (_e - ze), hr = We - (hr - We)), Z.quadraticCurveTo(_e, hr, W[0], W[1]), _e = ze - (_e - ze), hr = We - (hr - We), ze = W[0], We = W[1];
                },
                t: function(Z, W) {
                  return _e === null ? (_e = ze, hr = We) : (_e = ze - (_e - ze), hr = We - (hr - We)), Z.quadraticCurveTo(_e, hr, ze + W[0], We + W[1]), ze += W[0], We += W[1];
                },
                A: function(Z, W) {
                  return Jt(Z, ze, We, W), ze = W[5], We = W[6];
                },
                a: function(Z, W) {
                  return W[5] += ze, W[6] += We, Jt(Z, ze, We, W), ze = W[5], We = W[6];
                },
                L: function(Z, W) {
                  return ze = W[0], We = W[1], _e = hr = null, Z.lineTo(ze, We);
                },
                l: function(Z, W) {
                  return ze += W[0], We += W[1], _e = hr = null, Z.lineTo(ze, We);
                },
                H: function(Z, W) {
                  return ze = W[0], _e = hr = null, Z.lineTo(ze, We);
                },
                h: function(Z, W) {
                  return ze += W[0], _e = hr = null, Z.lineTo(ze, We);
                },
                V: function(Z, W) {
                  return We = W[0], _e = hr = null, Z.lineTo(ze, We);
                },
                v: function(Z, W) {
                  return We += W[0], _e = hr = null, Z.lineTo(ze, We);
                },
                Z: function(Z) {
                  return Z.closePath(), ze = Cn, We = En;
                },
                z: function(Z) {
                  return Z.closePath(), ze = Cn, We = En;
                }
              }, Jt = function(Z, W, at, q) {
                var mt = N(q, 7), Ct = mt[0], qt = mt[1], ae = mt[2], ve = mt[3], ye = mt[4], Ce = mt[5], Ee = mt[6], De = Pt(Ce, Ee, Ct, qt, ve, ye, ae, W, at), Ve = Lt(De), Xe;
                try {
                  for (Ve.s(); !(Xe = Ve.n()).done; ) {
                    var qe = Xe.value, cr = ne.apply(void 0, M(qe));
                    Z.bezierCurveTo.apply(Z, M(cr));
                  }
                } catch (Or) {
                  Ve.e(Or);
                } finally {
                  Ve.f();
                }
              }, Pt = function(Z, W, at, q, mt, Ct, qt, ae, ve) {
                var ye = qt * (Math.PI / 180), Ce = Math.sin(ye), Ee = Math.cos(ye);
                at = Math.abs(at), q = Math.abs(q), _e = Ee * (ae - Z) * 0.5 + Ce * (ve - W) * 0.5, hr = Ee * (ve - W) * 0.5 - Ce * (ae - Z) * 0.5;
                var De = _e * _e / (at * at) + hr * hr / (q * q);
                De > 1 && (De = Math.sqrt(De), at *= De, q *= De);
                var Ve = Ee / at, Xe = Ce / at, qe = -Ce / q, cr = Ee / q, Or = Ve * ae + Xe * ve, en = qe * ae + cr * ve, br = Ve * Z + Xe * W, Qr = qe * Z + cr * W, bn = (br - Or) * (br - Or) + (Qr - en) * (Qr - en), _r = 1 / bn - 0.25;
                _r < 0 && (_r = 0);
                var wn = Math.sqrt(_r);
                Ct === mt && (wn = -wn);
                var On = 0.5 * (Or + br) - wn * (Qr - en), ya = 0.5 * (en + Qr) + wn * (br - Or), ca = Math.atan2(en - ya, Or - On), Ni = Math.atan2(Qr - ya, br - On), ha = Ni - ca;
                ha < 0 && Ct === 1 ? ha += 2 * Math.PI : ha > 0 && Ct === 0 && (ha -= 2 * Math.PI);
                for (var Fa = Math.ceil(Math.abs(ha / (Math.PI * 0.5 + 1e-3))), xa = [], ba = 0; ba < Fa; ba++) {
                  var oa = ca + ba * ha / Fa, Mi = ca + (ba + 1) * ha / Fa;
                  xa[ba] = [On, ya, oa, Mi, at, q, Ce, Ee];
                }
                return xa;
              }, ne = function(Z, W, at, q, mt, Ct, qt, ae) {
                var ve = ae * mt, ye = -qt * Ct, Ce = qt * mt, Ee = ae * Ct, De = 0.5 * (q - at), Ve = 8 / 3 * Math.sin(De * 0.5) * Math.sin(De * 0.5) / Math.sin(De), Xe = Z + Math.cos(at) - Ve * Math.sin(at), qe = W + Math.sin(at) + Ve * Math.cos(at), cr = Z + Math.cos(q), Or = W + Math.sin(q), en = cr + Ve * Math.sin(q), br = Or - Ve * Math.cos(q);
                return [ve * Xe + ye * qe, Ce * Xe + Ee * qe, ve * en + ye * br, Ce * en + Ee * br, ve * cr + ye * Or, Ce * cr + Ee * Or];
              }, Rt = /* @__PURE__ */ function() {
                function St() {
                  m(this, St);
                }
                return x(St, null, [{
                  key: "apply",
                  value: function(W, at) {
                    var q = Ea(at);
                    aa(q, W);
                  }
                }]), St;
              }(), Mt = G.number, kt = 4 * ((Math.sqrt(2) - 1) / 3), Gt = {
                initVector: function() {
                  return this._ctm = [1, 0, 0, 1, 0, 0], this._ctmStack = [];
                },
                save: function() {
                  return this._ctmStack.push(this._ctm.slice()), this.addContent("q");
                },
                restore: function() {
                  return this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0], this.addContent("Q");
                },
                closePath: function() {
                  return this.addContent("h");
                },
                lineWidth: function(Z) {
                  return this.addContent("".concat(Mt(Z), " w"));
                },
                _CAP_STYLES: {
                  BUTT: 0,
                  ROUND: 1,
                  SQUARE: 2
                },
                lineCap: function(Z) {
                  return typeof Z == "string" && (Z = this._CAP_STYLES[Z.toUpperCase()]), this.addContent("".concat(Z, " J"));
                },
                _JOIN_STYLES: {
                  MITER: 0,
                  ROUND: 1,
                  BEVEL: 2
                },
                lineJoin: function(Z) {
                  return typeof Z == "string" && (Z = this._JOIN_STYLES[Z.toUpperCase()]), this.addContent("".concat(Z, " j"));
                },
                miterLimit: function(Z) {
                  return this.addContent("".concat(Mt(Z), " M"));
                },
                dash: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, at = Z;
                  Array.isArray(Z) || (Z = [Z, W.space || Z]);
                  var q = Z.every(function(mt) {
                    return Number.isFinite(mt) && mt > 0;
                  });
                  if (!q)
                    throw new Error("dash(".concat(JSON.stringify(at), ", ").concat(JSON.stringify(W), ") invalid, lengths must be numeric and greater than zero"));
                  return Z = Z.map(Mt).join(" "), this.addContent("[".concat(Z, "] ").concat(Mt(W.phase || 0), " d"));
                },
                undash: function() {
                  return this.addContent("[] 0 d");
                },
                moveTo: function(Z, W) {
                  return this.addContent("".concat(Mt(Z), " ").concat(Mt(W), " m"));
                },
                lineTo: function(Z, W) {
                  return this.addContent("".concat(Mt(Z), " ").concat(Mt(W), " l"));
                },
                bezierCurveTo: function(Z, W, at, q, mt, Ct) {
                  return this.addContent("".concat(Mt(Z), " ").concat(Mt(W), " ").concat(Mt(at), " ").concat(Mt(q), " ").concat(Mt(mt), " ").concat(Mt(Ct), " c"));
                },
                quadraticCurveTo: function(Z, W, at, q) {
                  return this.addContent("".concat(Mt(Z), " ").concat(Mt(W), " ").concat(Mt(at), " ").concat(Mt(q), " v"));
                },
                rect: function(Z, W, at, q) {
                  return this.addContent("".concat(Mt(Z), " ").concat(Mt(W), " ").concat(Mt(at), " ").concat(Mt(q), " re"));
                },
                roundedRect: function(Z, W, at, q, mt) {
                  mt == null && (mt = 0), mt = Math.min(mt, 0.5 * at, 0.5 * q);
                  var Ct = mt * (1 - kt);
                  return this.moveTo(Z + mt, W), this.lineTo(Z + at - mt, W), this.bezierCurveTo(Z + at - Ct, W, Z + at, W + Ct, Z + at, W + mt), this.lineTo(Z + at, W + q - mt), this.bezierCurveTo(Z + at, W + q - Ct, Z + at - Ct, W + q, Z + at - mt, W + q), this.lineTo(Z + mt, W + q), this.bezierCurveTo(Z + Ct, W + q, Z, W + q - Ct, Z, W + q - mt), this.lineTo(Z, W + mt), this.bezierCurveTo(Z, W + Ct, Z + Ct, W, Z + mt, W), this.closePath();
                },
                ellipse: function(Z, W, at, q) {
                  q == null && (q = at), Z -= at, W -= q;
                  var mt = at * kt, Ct = q * kt, qt = Z + at * 2, ae = W + q * 2, ve = Z + at, ye = W + q;
                  return this.moveTo(Z, ye), this.bezierCurveTo(Z, ye - Ct, ve - mt, W, ve, W), this.bezierCurveTo(ve + mt, W, qt, ye - Ct, qt, ye), this.bezierCurveTo(qt, ye + Ct, ve + mt, ae, ve, ae), this.bezierCurveTo(ve - mt, ae, Z, ye + Ct, Z, ye), this.closePath();
                },
                circle: function(Z, W, at) {
                  return this.ellipse(Z, W, at);
                },
                arc: function(Z, W, at, q, mt, Ct) {
                  Ct == null && (Ct = !1);
                  var qt = 2 * Math.PI, ae = 0.5 * Math.PI, ve = mt - q;
                  if (Math.abs(ve) > qt)
                    ve = qt;
                  else if (ve !== 0 && Ct !== ve < 0) {
                    var ye = Ct ? -1 : 1;
                    ve = ye * qt + ve;
                  }
                  var Ce = Math.ceil(Math.abs(ve) / ae), Ee = ve / Ce, De = Ee / ae * kt * at, Ve = q, Xe = -Math.sin(Ve) * De, qe = Math.cos(Ve) * De, cr = Z + Math.cos(Ve) * at, Or = W + Math.sin(Ve) * at;
                  this.moveTo(cr, Or);
                  for (var en = 0; en < Ce; en++) {
                    var br = cr + Xe, Qr = Or + qe;
                    Ve += Ee, cr = Z + Math.cos(Ve) * at, Or = W + Math.sin(Ve) * at, Xe = -Math.sin(Ve) * De, qe = Math.cos(Ve) * De;
                    var bn = cr - Xe, _r = Or - qe;
                    this.bezierCurveTo(br, Qr, bn, _r, cr, Or);
                  }
                  return this;
                },
                polygon: function() {
                  for (var Z = arguments.length, W = new Array(Z), at = 0; at < Z; at++)
                    W[at] = arguments[at];
                  this.moveTo.apply(this, M(W.shift() || []));
                  for (var q = 0, mt = W; q < mt.length; q++) {
                    var Ct = mt[q];
                    this.lineTo.apply(this, M(Ct || []));
                  }
                  return this.closePath();
                },
                path: function(Z) {
                  return Rt.apply(this, Z), this;
                },
                _windingRule: function(Z) {
                  return /even-?odd/.test(Z) ? "*" : "";
                },
                fill: function(Z, W) {
                  return /(even-?odd)|(non-?zero)/.test(Z) && (W = Z, Z = null), Z && this.fillColor(Z), this.addContent("f".concat(this._windingRule(W)));
                },
                stroke: function(Z) {
                  return Z && this.strokeColor(Z), this.addContent("S");
                },
                fillAndStroke: function(Z, W, at) {
                  W == null && (W = Z);
                  var q = /(even-?odd)|(non-?zero)/;
                  return q.test(Z) && (at = Z, Z = null), q.test(W) && (at = W, W = Z), Z && (this.fillColor(Z), this.strokeColor(W)), this.addContent("B".concat(this._windingRule(at)));
                },
                clip: function(Z) {
                  return this.addContent("W".concat(this._windingRule(Z), " n"));
                },
                transform: function(Z, W, at, q, mt, Ct) {
                  var qt = this._ctm, ae = N(qt, 6), ve = ae[0], ye = ae[1], Ce = ae[2], Ee = ae[3], De = ae[4], Ve = ae[5];
                  qt[0] = ve * Z + Ce * W, qt[1] = ye * Z + Ee * W, qt[2] = ve * at + Ce * q, qt[3] = ye * at + Ee * q, qt[4] = ve * mt + Ce * Ct + De, qt[5] = ye * mt + Ee * Ct + Ve;
                  var Xe = [Z, W, at, q, mt, Ct].map(function(qe) {
                    return Mt(qe);
                  }).join(" ");
                  return this.addContent("".concat(Xe, " cm"));
                },
                translate: function(Z, W) {
                  return this.transform(1, 0, 0, 1, Z, W);
                },
                rotate: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, at, q = Z * Math.PI / 180, mt = Math.cos(q), Ct = Math.sin(q), qt = at = 0;
                  if (W.origin != null) {
                    var ae = N(W.origin, 2);
                    qt = ae[0], at = ae[1];
                    var ve = qt * mt - at * Ct, ye = qt * Ct + at * mt;
                    qt -= ve, at -= ye;
                  }
                  return this.transform(mt, Ct, -Ct, mt, qt, at);
                },
                scale: function(Z, W) {
                  var at = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, q;
                  W == null && (W = Z), typeof W == "object" && (at = W, W = Z);
                  var mt = q = 0;
                  if (at.origin != null) {
                    var Ct = N(at.origin, 2);
                    mt = Ct[0], q = Ct[1], mt -= Z * mt, q -= W * q;
                  }
                  return this.transform(Z, 0, 0, W, mt, q);
                }
              }, re = {
                402: 131,
                8211: 150,
                8212: 151,
                8216: 145,
                8217: 146,
                8218: 130,
                8220: 147,
                8221: 148,
                8222: 132,
                8224: 134,
                8225: 135,
                8226: 149,
                8230: 133,
                8364: 128,
                8240: 137,
                8249: 139,
                8250: 155,
                710: 136,
                8482: 153,
                338: 140,
                339: 156,
                732: 152,
                352: 138,
                353: 154,
                376: 159,
                381: 142,
                382: 158
              }, Ut = `.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
  
space         exclam         quotedbl       numbersign
dollar        percent        ampersand      quotesingle
parenleft     parenright     asterisk       plus
comma         hyphen         period         slash
zero          one            two            three
four          five           six            seven
eight         nine           colon          semicolon
less          equal          greater        question
  
at            A              B              C
D             E              F              G
H             I              J              K
L             M              N              O
P             Q              R              S
T             U              V              W
X             Y              Z              bracketleft
backslash     bracketright   asciicircum    underscore
  
grave         a              b              c
d             e              f              g
h             i              j              k
l             m              n              o
p             q              r              s
t             u              v              w
x             y              z              braceleft
bar           braceright     asciitilde     .notdef
  
Euro          .notdef        quotesinglbase florin
quotedblbase  ellipsis       dagger         daggerdbl
circumflex    perthousand    Scaron         guilsinglleft
OE            .notdef        Zcaron         .notdef
.notdef       quoteleft      quoteright     quotedblleft
quotedblright bullet         endash         emdash
tilde         trademark      scaron         guilsinglright
oe            .notdef        zcaron         ydieresis
  
space         exclamdown     cent           sterling
currency      yen            brokenbar      section
dieresis      copyright      ordfeminine    guillemotleft
logicalnot    hyphen         registered     macron
degree        plusminus      twosuperior    threesuperior
acute         mu             paragraph      periodcentered
cedilla       onesuperior    ordmasculine   guillemotright
onequarter    onehalf        threequarters  questiondown
  
Agrave        Aacute         Acircumflex    Atilde
Adieresis     Aring          AE             Ccedilla
Egrave        Eacute         Ecircumflex    Edieresis
Igrave        Iacute         Icircumflex    Idieresis
Eth           Ntilde         Ograve         Oacute
Ocircumflex   Otilde         Odieresis      multiply
Oslash        Ugrave         Uacute         Ucircumflex
Udieresis     Yacute         Thorn          germandbls
  
agrave        aacute         acircumflex    atilde
adieresis     aring          ae             ccedilla
egrave        eacute         ecircumflex    edieresis
igrave        iacute         icircumflex    idieresis
eth           ntilde         ograve         oacute
ocircumflex   otilde         odieresis      divide
oslash        ugrave         uacute         ucircumflex
udieresis     yacute         thorn          ydieresis`.split(/\s+/), oe = /* @__PURE__ */ function() {
                x(St, null, [{
                  key: "open",
                  value: function(W) {
                    return new St(y.readFileSync(W, "utf8"));
                  }
                }]);
                function St(Z) {
                  m(this, St), this.contents = Z, this.attributes = {}, this.glyphWidths = {}, this.boundingBoxes = {}, this.kernPairs = {}, this.parse(), this.charWidths = new Array(256);
                  for (var W = 0; W <= 255; W++)
                    this.charWidths[W] = this.glyphWidths[Ut[W]];
                  this.bbox = this.attributes.FontBBox.split(/\s+/).map(function(at) {
                    return +at;
                  }), this.ascender = +(this.attributes.Ascender || 0), this.descender = +(this.attributes.Descender || 0), this.xHeight = +(this.attributes.XHeight || 0), this.capHeight = +(this.attributes.CapHeight || 0), this.lineGap = this.bbox[3] - this.bbox[1] - (this.ascender - this.descender);
                }
                return x(St, [{
                  key: "parse",
                  value: function() {
                    var W = "", at = Lt(this.contents.split(`
`)), q;
                    try {
                      for (at.s(); !(q = at.n()).done; ) {
                        var mt = q.value, Ct, qt;
                        if (Ct = mt.match(/^Start(\w+)/)) {
                          W = Ct[1];
                          continue;
                        } else if (Ct = mt.match(/^End(\w+)/)) {
                          W = "";
                          continue;
                        }
                        switch (W) {
                          case "FontMetrics":
                            Ct = mt.match(/(^\w+)\s+(.*)/);
                            var ae = Ct[1], ve = Ct[2];
                            (qt = this.attributes[ae]) ? (Array.isArray(qt) || (qt = this.attributes[ae] = [qt]), qt.push(ve)) : this.attributes[ae] = ve;
                            break;
                          case "CharMetrics":
                            if (!/^CH?\s/.test(mt))
                              continue;
                            var ye = mt.match(/\bN\s+(\.?\w+)\s*;/)[1];
                            this.glyphWidths[ye] = +mt.match(/\bWX\s+(\d+)\s*;/)[1];
                            break;
                          case "KernPairs":
                            Ct = mt.match(/^KPX\s+(\.?\w+)\s+(\.?\w+)\s+(-?\d+)/), Ct && (this.kernPairs[Ct[1] + "\0" + Ct[2]] = parseInt(Ct[3]));
                            break;
                        }
                      }
                    } catch (Ce) {
                      at.e(Ce);
                    } finally {
                      at.f();
                    }
                  }
                }, {
                  key: "encodeText",
                  value: function(W) {
                    for (var at = [], q = 0, mt = W.length; q < mt; q++) {
                      var Ct = W.charCodeAt(q);
                      Ct = re[Ct] || Ct, at.push(Ct.toString(16));
                    }
                    return at;
                  }
                }, {
                  key: "glyphsForString",
                  value: function(W) {
                    for (var at = [], q = 0, mt = W.length; q < mt; q++) {
                      var Ct = W.charCodeAt(q);
                      at.push(this.characterToGlyph(Ct));
                    }
                    return at;
                  }
                }, {
                  key: "characterToGlyph",
                  value: function(W) {
                    return Ut[re[W] || W] || ".notdef";
                  }
                }, {
                  key: "widthOfGlyph",
                  value: function(W) {
                    return this.glyphWidths[W] || 0;
                  }
                }, {
                  key: "getKernPair",
                  value: function(W, at) {
                    return this.kernPairs[W + "\0" + at] || 0;
                  }
                }, {
                  key: "advancesForGlyphs",
                  value: function(W) {
                    for (var at = [], q = 0; q < W.length; q++) {
                      var mt = W[q], Ct = W[q + 1];
                      at.push(this.widthOfGlyph(mt) + this.getKernPair(mt, Ct));
                    }
                    return at;
                  }
                }]), St;
              }(), Yt = /* @__PURE__ */ function() {
                function St() {
                  m(this, St);
                }
                return x(St, [{
                  key: "encode",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "widthOfString",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "ref",
                  value: function() {
                    return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    if (!(this.embedded || this.dictionary == null))
                      return this.embed(), this.embedded = !0;
                  }
                }, {
                  key: "embed",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "lineHeight",
                  value: function(W, at) {
                    at == null && (at = !1);
                    var q = at ? this.lineGap : 0;
                    return (this.ascender + q - this.descender) / 1e3 * W;
                  }
                }]), St;
              }(), xe = {
                Courier: function() {
                  return y.readFileSync(s + "/data/Courier.afm", "utf8");
                },
                "Courier-Bold": function() {
                  return y.readFileSync(s + "/data/Courier-Bold.afm", "utf8");
                },
                "Courier-Oblique": function() {
                  return y.readFileSync(s + "/data/Courier-Oblique.afm", "utf8");
                },
                "Courier-BoldOblique": function() {
                  return y.readFileSync(s + "/data/Courier-BoldOblique.afm", "utf8");
                },
                Helvetica: function() {
                  return y.readFileSync(s + "/data/Helvetica.afm", "utf8");
                },
                "Helvetica-Bold": function() {
                  return y.readFileSync(s + "/data/Helvetica-Bold.afm", "utf8");
                },
                "Helvetica-Oblique": function() {
                  return y.readFileSync(s + "/data/Helvetica-Oblique.afm", "utf8");
                },
                "Helvetica-BoldOblique": function() {
                  return y.readFileSync(s + "/data/Helvetica-BoldOblique.afm", "utf8");
                },
                "Times-Roman": function() {
                  return y.readFileSync(s + "/data/Times-Roman.afm", "utf8");
                },
                "Times-Bold": function() {
                  return y.readFileSync(s + "/data/Times-Bold.afm", "utf8");
                },
                "Times-Italic": function() {
                  return y.readFileSync(s + "/data/Times-Italic.afm", "utf8");
                },
                "Times-BoldItalic": function() {
                  return y.readFileSync(s + "/data/Times-BoldItalic.afm", "utf8");
                },
                Symbol: function() {
                  return y.readFileSync(s + "/data/Symbol.afm", "utf8");
                },
                ZapfDingbats: function() {
                  return y.readFileSync(s + "/data/ZapfDingbats.afm", "utf8");
                }
              }, Pe = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W(at, q, mt) {
                  var Ct;
                  m(this, W), Ct = Z.call(this), Ct.document = at, Ct.name = q, Ct.id = mt, Ct.font = new oe(xe[Ct.name]());
                  var qt = Ct.font;
                  return Ct.ascender = qt.ascender, Ct.descender = qt.descender, Ct.bbox = qt.bbox, Ct.lineGap = qt.lineGap, Ct.xHeight = qt.xHeight, Ct.capHeight = qt.capHeight, Ct;
                }
                return x(W, [{
                  key: "embed",
                  value: function() {
                    return this.dictionary.data = {
                      Type: "Font",
                      BaseFont: this.name,
                      Subtype: "Type1",
                      Encoding: "WinAnsiEncoding"
                    }, this.dictionary.end();
                  }
                }, {
                  key: "encode",
                  value: function(q) {
                    for (var mt = this.font.encodeText(q), Ct = this.font.glyphsForString("".concat(q)), qt = this.font.advancesForGlyphs(Ct), ae = [], ve = 0; ve < Ct.length; ve++) {
                      var ye = Ct[ve];
                      ae.push({
                        xAdvance: qt[ve],
                        yAdvance: 0,
                        xOffset: 0,
                        yOffset: 0,
                        advanceWidth: this.font.widthOfGlyph(ye)
                      });
                    }
                    return [mt, ae];
                  }
                }, {
                  key: "widthOfString",
                  value: function(q, mt) {
                    var Ct = this.font.glyphsForString("".concat(q)), qt = this.font.advancesForGlyphs(Ct), ae = 0, ve = Lt(qt), ye;
                    try {
                      for (ve.s(); !(ye = ve.n()).done; ) {
                        var Ce = ye.value;
                        ae += Ce;
                      }
                    } catch (De) {
                      ve.e(De);
                    } finally {
                      ve.f();
                    }
                    var Ee = mt / 1e3;
                    return ae * Ee;
                  }
                }], [{
                  key: "isStandardFont",
                  value: function(q) {
                    return q in xe;
                  }
                }]), W;
              }(Yt), Re = function(Z) {
                return "0000".concat(Z.toString(16)).slice(-4);
              }, Ge = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W(at, q, mt) {
                  var Ct;
                  return m(this, W), Ct = Z.call(this), Ct.document = at, Ct.font = q, Ct.id = mt, Ct.subset = Ct.font.createSubset(), Ct.unicode = [[0]], Ct.widths = [Ct.font.getGlyph(0).advanceWidth], Ct.name = Ct.font.postscriptName, Ct.scale = 1e3 / Ct.font.unitsPerEm, Ct.ascender = Ct.font.ascent * Ct.scale, Ct.descender = Ct.font.descent * Ct.scale, Ct.xHeight = Ct.font.xHeight * Ct.scale, Ct.capHeight = Ct.font.capHeight * Ct.scale, Ct.lineGap = Ct.font.lineGap * Ct.scale, Ct.bbox = Ct.font.bbox, at.options.fontLayoutCache !== !1 && (Ct.layoutCache = /* @__PURE__ */ Object.create(null)), Ct;
                }
                return x(W, [{
                  key: "layoutRun",
                  value: function(q, mt) {
                    for (var Ct = this.font.layout(q, mt), qt = 0; qt < Ct.positions.length; qt++) {
                      var ae = Ct.positions[qt];
                      for (var ve in ae)
                        ae[ve] *= this.scale;
                      ae.advanceWidth = Ct.glyphs[qt].advanceWidth * this.scale;
                    }
                    return Ct;
                  }
                }, {
                  key: "layoutCached",
                  value: function(q) {
                    if (!this.layoutCache)
                      return this.layoutRun(q);
                    var mt;
                    if (mt = this.layoutCache[q])
                      return mt;
                    var Ct = this.layoutRun(q);
                    return this.layoutCache[q] = Ct, Ct;
                  }
                }, {
                  key: "layout",
                  value: function(q, mt, Ct) {
                    if (mt)
                      return this.layoutRun(q, mt);
                    for (var qt = Ct ? null : [], ae = Ct ? null : [], ve = 0, ye = 0, Ce = 0; Ce <= q.length; ) {
                      var Ee;
                      if (Ce === q.length && ye < Ce || (Ee = q.charAt(Ce), [" ", "	"].includes(Ee))) {
                        var De = this.layoutCached(q.slice(ye, ++Ce));
                        Ct || (qt = qt.concat(De.glyphs), ae = ae.concat(De.positions)), ve += De.advanceWidth, ye = Ce;
                      } else
                        Ce++;
                    }
                    return {
                      glyphs: qt,
                      positions: ae,
                      advanceWidth: ve
                    };
                  }
                }, {
                  key: "encode",
                  value: function(q, mt) {
                    for (var Ct = this.layout(q, mt), qt = Ct.glyphs, ae = Ct.positions, ve = [], ye = 0; ye < qt.length; ye++) {
                      var Ce = qt[ye], Ee = this.subset.includeGlyph(Ce.id);
                      ve.push("0000".concat(Ee.toString(16)).slice(-4)), this.widths[Ee] == null && (this.widths[Ee] = Ce.advanceWidth * this.scale), this.unicode[Ee] == null && (this.unicode[Ee] = Ce.codePoints);
                    }
                    return [ve, ae];
                  }
                }, {
                  key: "widthOfString",
                  value: function(q, mt, Ct) {
                    var qt = this.layout(q, Ct, !0).advanceWidth, ae = mt / 1e3;
                    return qt * ae;
                  }
                }, {
                  key: "embed",
                  value: function() {
                    var q = this, mt = this.subset.cff != null, Ct = this.document.ref();
                    mt && (Ct.data.Subtype = "CIDFontType0C"), this.subset.encodeStream().on("data", function(cr) {
                      return Ct.write(cr);
                    }).on("end", function() {
                      return Ct.end();
                    });
                    var qt = ((this.font["OS/2"] != null ? this.font["OS/2"].sFamilyClass : void 0) || 0) >> 8, ae = 0;
                    this.font.post.isFixedPitch && (ae |= 1), 1 <= qt && qt <= 7 && (ae |= 2), ae |= 4, qt === 10 && (ae |= 8), this.font.head.macStyle.italic && (ae |= 64);
                    var ve = [1, 2, 3, 4, 5, 6].map(function(cr) {
                      return String.fromCharCode((q.id.charCodeAt(cr) || 73) + 17);
                    }).join(""), ye = ve + "+" + this.font.postscriptName, Ce = this.font.bbox, Ee = this.document.ref({
                      Type: "FontDescriptor",
                      FontName: ye,
                      Flags: ae,
                      FontBBox: [Ce.minX * this.scale, Ce.minY * this.scale, Ce.maxX * this.scale, Ce.maxY * this.scale],
                      ItalicAngle: this.font.italicAngle,
                      Ascent: this.ascender,
                      Descent: this.descender,
                      CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,
                      XHeight: (this.font.xHeight || 0) * this.scale,
                      StemV: 0
                    });
                    if (mt ? Ee.data.FontFile3 = Ct : Ee.data.FontFile2 = Ct, this.document.subset) {
                      var De = r.from("FFFFFFFFC0", "hex"), Ve = this.document.ref();
                      Ve.write(De), Ve.end(), Ee.data.CIDSet = Ve;
                    }
                    Ee.end();
                    var Xe = {
                      Type: "Font",
                      Subtype: "CIDFontType0",
                      BaseFont: ye,
                      CIDSystemInfo: {
                        Registry: new String("Adobe"),
                        Ordering: new String("Identity"),
                        Supplement: 0
                      },
                      FontDescriptor: Ee,
                      W: [0, this.widths]
                    };
                    mt || (Xe.Subtype = "CIDFontType2", Xe.CIDToGIDMap = "Identity");
                    var qe = this.document.ref(Xe);
                    return qe.end(), this.dictionary.data = {
                      Type: "Font",
                      Subtype: "Type0",
                      BaseFont: ye,
                      Encoding: "Identity-H",
                      DescendantFonts: [qe],
                      ToUnicode: this.toUnicodeCmap()
                    }, this.dictionary.end();
                  }
                  // Maps the glyph ids encoded in the PDF back to unicode strings
                  // Because of ligature substitutions and the like, there may be one or more
                  // unicode characters represented by each glyph.
                }, {
                  key: "toUnicodeCmap",
                  value: function() {
                    var q = this.document.ref(), mt = [], Ct = Lt(this.unicode), qt;
                    try {
                      for (Ct.s(); !(qt = Ct.n()).done; ) {
                        var ae = qt.value, ve = [], ye = Lt(ae), Ce;
                        try {
                          for (ye.s(); !(Ce = ye.n()).done; ) {
                            var Ee = Ce.value;
                            Ee > 65535 && (Ee -= 65536, ve.push(Re(Ee >>> 10 & 1023 | 55296)), Ee = 56320 | Ee & 1023), ve.push(Re(Ee));
                          }
                        } catch (De) {
                          ye.e(De);
                        } finally {
                          ye.f();
                        }
                        mt.push("<".concat(ve.join(" "), ">"));
                      }
                    } catch (De) {
                      Ct.e(De);
                    } finally {
                      Ct.f();
                    }
                    return q.end(`/CIDInit /ProcSet findresource begin
12 dict begin
begincmap
/CIDSystemInfo <<
  /Registry (Adobe)
  /Ordering (UCS)
  /Supplement 0
>> def
/CMapName /Adobe-Identity-UCS def
/CMapType 2 def
1 begincodespacerange
<0000><ffff>
endcodespacerange
1 beginbfrange
<0000> <`.concat(Re(mt.length - 1), "> [").concat(mt.join(" "), `]
endbfrange
endcmap
CMapName currentdict /CMap defineresource pop
end
end`)), q;
                  }
                }]), W;
              }(Yt), Qe = /* @__PURE__ */ function() {
                function St() {
                  m(this, St);
                }
                return x(St, null, [{
                  key: "open",
                  value: function(W, at, q, mt) {
                    var Ct;
                    if (typeof at == "string") {
                      if (Pe.isStandardFont(at))
                        return new Pe(W, at, mt);
                      at = y.readFileSync(at);
                    }
                    if (r.isBuffer(at) ? Ct = u.default.create(at, q) : at instanceof Uint8Array ? Ct = u.default.create(r.from(at), q) : at instanceof ArrayBuffer && (Ct = u.default.create(r.from(new Uint8Array(at)), q)), Ct == null)
                      throw new Error("Not a supported font format or standard PDF font.");
                    return new Ge(W, Ct, mt);
                  }
                }]), St;
              }(), ar = {
                initFonts: function() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Helvetica";
                  this._fontFamilies = {}, this._fontCount = 0, this._fontSize = 12, this._font = null, this._registeredFonts = {}, Z && this.font(Z);
                },
                font: function(Z, W, at) {
                  var q, mt;
                  if (typeof W == "number" && (at = W, W = null), typeof Z == "string" && this._registeredFonts[Z]) {
                    q = Z;
                    var Ct = this._registeredFonts[Z];
                    Z = Ct.src, W = Ct.family;
                  } else
                    q = W || Z, typeof q != "string" && (q = null);
                  if (at != null && this.fontSize(at), mt = this._fontFamilies[q])
                    return this._font = mt, this;
                  var qt = "F".concat(++this._fontCount);
                  return this._font = Qe.open(this, Z, W, qt), (mt = this._fontFamilies[this._font.name]) ? (this._font = mt, this) : (q && (this._fontFamilies[q] = this._font), this._font.name && (this._fontFamilies[this._font.name] = this._font), this);
                },
                fontSize: function(Z) {
                  return this._fontSize = Z, this;
                },
                currentLineHeight: function(Z) {
                  return Z == null && (Z = !1), this._font.lineHeight(this._fontSize, Z);
                },
                registerFont: function(Z, W, at) {
                  return this._registeredFonts[Z] = {
                    src: W,
                    family: at
                  }, this;
                }
              }, ge = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W(at, q) {
                  var mt;
                  return m(this, W), mt = Z.call(this), mt.document = at, mt.indent = q.indent || 0, mt.characterSpacing = q.characterSpacing || 0, mt.wordSpacing = q.wordSpacing === 0, mt.columns = q.columns || 1, mt.columnGap = q.columnGap != null ? q.columnGap : 18, mt.lineWidth = (q.width - mt.columnGap * (mt.columns - 1)) / mt.columns, mt.spaceLeft = mt.lineWidth, mt.startX = mt.document.x, mt.startY = mt.document.y, mt.column = 1, mt.ellipsis = q.ellipsis, mt.continuedX = 0, mt.features = q.features, q.height != null ? (mt.height = q.height, mt.maxY = mt.startY + q.height) : mt.maxY = mt.document.page.maxY(), mt.on("firstLine", function(Ct) {
                    var qt = mt.continuedX || mt.indent;
                    return mt.document.x += qt, mt.lineWidth -= qt, mt.once("line", function() {
                      if (mt.document.x -= qt, mt.lineWidth += qt, Ct.continued && !mt.continuedX && (mt.continuedX = mt.indent), !Ct.continued)
                        return mt.continuedX = 0;
                    });
                  }), mt.on("lastLine", function(Ct) {
                    var qt = Ct.align;
                    return qt === "justify" && (Ct.align = "left"), mt.lastLine = !0, mt.once("line", function() {
                      return mt.document.y += Ct.paragraphGap || 0, Ct.align = qt, mt.lastLine = !1;
                    });
                  }), mt;
                }
                return x(W, [{
                  key: "wordWidth",
                  value: function(q) {
                    return this.document.widthOfString(q, this) + this.characterSpacing + this.wordSpacing;
                  }
                }, {
                  key: "eachWord",
                  value: function(q, mt) {
                    for (var Ct, qt = new d.default(q), ae = null, ve = /* @__PURE__ */ Object.create(null); Ct = qt.nextBreak(); ) {
                      var ye, Ce = q.slice((ae != null ? ae.position : void 0) || 0, Ct.position), Ee = ve[Ce] != null ? ve[Ce] : ve[Ce] = this.wordWidth(Ce);
                      if (Ee > this.lineWidth + this.continuedX)
                        for (var De = ae, Ve = {}; Ce.length; ) {
                          var Xe, qe;
                          Ee > this.spaceLeft ? (Xe = Math.ceil(this.spaceLeft / (Ee / Ce.length)), Ee = this.wordWidth(Ce.slice(0, Xe)), qe = Ee <= this.spaceLeft && Xe < Ce.length) : Xe = Ce.length;
                          for (var cr = Ee > this.spaceLeft && Xe > 0; cr || qe; )
                            cr ? (Ee = this.wordWidth(Ce.slice(0, --Xe)), cr = Ee > this.spaceLeft && Xe > 0) : (Ee = this.wordWidth(Ce.slice(0, ++Xe)), cr = Ee > this.spaceLeft && Xe > 0, qe = Ee <= this.spaceLeft && Xe < Ce.length);
                          if (Xe === 0 && this.spaceLeft === this.lineWidth && (Xe = 1), Ve.required = Ct.required || Xe < Ce.length, ye = mt(Ce.slice(0, Xe), Ee, Ve, De), De = {
                            required: !1
                          }, Ce = Ce.slice(Xe), Ee = this.wordWidth(Ce), ye === !1)
                            break;
                        }
                      else
                        ye = mt(Ce, Ee, Ct, ae);
                      if (ye === !1)
                        break;
                      ae = Ct;
                    }
                  }
                }, {
                  key: "wrap",
                  value: function(q, mt) {
                    var Ct = this;
                    mt.indent != null && (this.indent = mt.indent), mt.characterSpacing != null && (this.characterSpacing = mt.characterSpacing), mt.wordSpacing != null && (this.wordSpacing = mt.wordSpacing), mt.ellipsis != null && (this.ellipsis = mt.ellipsis);
                    var qt = this.document.y + this.document.currentLineHeight(!0);
                    (this.document.y > this.maxY || qt > this.maxY) && this.nextSection();
                    var ae = "", ve = 0, ye = 0, Ce = 0, Ee = this.document.y, De = function() {
                      return mt.textWidth = ve + Ct.wordSpacing * (ye - 1), mt.wordCount = ye, mt.lineWidth = Ct.lineWidth, Ee = Ct.document.y, Ct.emit("line", ae, mt, Ct), Ce++;
                    };
                    return this.emit("sectionStart", mt, this), this.eachWord(q, function(Ve, Xe, qe, cr) {
                      if ((cr == null || cr.required) && (Ct.emit("firstLine", mt, Ct), Ct.spaceLeft = Ct.lineWidth), Xe <= Ct.spaceLeft && (ae += Ve, ve += Xe, ye++), qe.required || Xe > Ct.spaceLeft) {
                        var Or = Ct.document.currentLineHeight(!0);
                        if (Ct.height != null && Ct.ellipsis && Ct.document.y + Or * 2 > Ct.maxY && Ct.column >= Ct.columns) {
                          for (Ct.ellipsis === !0 && (Ct.ellipsis = "â¦"), ae = ae.replace(/\s+$/, ""), ve = Ct.wordWidth(ae + Ct.ellipsis); ae && ve > Ct.lineWidth; )
                            ae = ae.slice(0, -1).replace(/\s+$/, ""), ve = Ct.wordWidth(ae + Ct.ellipsis);
                          ve <= Ct.lineWidth && (ae = ae + Ct.ellipsis), ve = Ct.wordWidth(ae);
                        }
                        if (qe.required && (Xe > Ct.spaceLeft && (De(), ae = Ve, ve = Xe, ye = 1), Ct.emit("lastLine", mt, Ct)), De(), Ct.document.y + Or > Ct.maxY) {
                          var en = Ct.nextSection();
                          if (!en)
                            return ye = 0, ae = "", !1;
                        }
                        return qe.required ? (Ct.spaceLeft = Ct.lineWidth, ae = "", ve = 0, ye = 0) : (Ct.spaceLeft = Ct.lineWidth - Xe, ae = Ve, ve = Xe, ye = 1);
                      } else
                        return Ct.spaceLeft -= Xe;
                    }), ye > 0 && (this.emit("lastLine", mt, this), De()), this.emit("sectionEnd", mt, this), mt.continued === !0 ? (Ce > 1 && (this.continuedX = 0), this.continuedX += mt.textWidth || 0, this.document.y = Ee) : this.document.x = this.startX;
                  }
                }, {
                  key: "nextSection",
                  value: function(q) {
                    if (this.emit("sectionEnd", q, this), ++this.column > this.columns) {
                      if (this.height != null)
                        return !1;
                      if (this.document.continueOnNewPage(), this.column = 1, this.startY = this.document.page.margins.top, this.maxY = this.document.page.maxY(), this.document.x = this.startX, this.document._fillColor) {
                        var mt;
                        (mt = this.document).fillColor.apply(mt, M(this.document._fillColor));
                      }
                      this.emit("pageBreak", q, this);
                    } else
                      this.document.x += this.lineWidth + this.columnGap, this.document.y = this.startY, this.emit("columnBreak", q, this);
                    return this.emit("sectionStart", q, this), !0;
                  }
                }]), W;
              }(h.EventEmitter), Le = G.number, $e = {
                initText: function() {
                  return this._line = this._line.bind(this), this.x = 0, this.y = 0, this._lineGap = 0;
                },
                lineGap: function(Z) {
                  return this._lineGap = Z, this;
                },
                moveDown: function(Z) {
                  return Z == null && (Z = 1), this.y += this.currentLineHeight(!0) * Z + this._lineGap, this;
                },
                moveUp: function(Z) {
                  return Z == null && (Z = 1), this.y -= this.currentLineHeight(!0) * Z + this._lineGap, this;
                },
                _text: function(Z, W, at, q, mt) {
                  var Ct = this;
                  q = this._initOptions(W, at, q), Z = Z == null ? "" : "".concat(Z), q.wordSpacing && (Z = Z.replace(/\s{2,}/g, " "));
                  var qt = function() {
                    q.structParent && q.structParent.add(Ct.struct(q.structType || "P", [Ct.markStructureContent(q.structType || "P")]));
                  };
                  if (q.width) {
                    var ae = this._wrapper;
                    ae || (ae = new ge(this, q), ae.on("line", mt), ae.on("firstLine", qt)), this._wrapper = q.continued ? ae : null, this._textOptions = q.continued ? q : null, ae.wrap(Z, q);
                  } else {
                    var ve = Lt(Z.split(`
`)), ye;
                    try {
                      for (ve.s(); !(ye = ve.n()).done; ) {
                        var Ce = ye.value;
                        qt(), mt(Ce, q);
                      }
                    } catch (Ee) {
                      ve.e(Ee);
                    } finally {
                      ve.f();
                    }
                  }
                  return this;
                },
                text: function(Z, W, at, q) {
                  return this._text(Z, W, at, q, this._line);
                },
                widthOfString: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  return this._font.widthOfString(Z, this._fontSize, W.features) + (W.characterSpacing || 0) * (Z.length - 1);
                },
                heightOfString: function(Z, W) {
                  var at = this, q = this.x, mt = this.y;
                  W = this._initOptions(W), W.height = 1 / 0;
                  var Ct = W.lineGap || this._lineGap || 0;
                  this._text(Z, this.x, this.y, W, function() {
                    return at.y += at.currentLineHeight(!0) + Ct;
                  });
                  var qt = this.y - mt;
                  return this.x = q, this.y = mt, qt;
                },
                list: function(Z, W, at, q, mt) {
                  var Ct = this;
                  q = this._initOptions(W, at, q);
                  var qt = q.listType || "bullet", ae = Math.round(this._font.ascender / 1e3 * this._fontSize), ve = ae / 2, ye = q.bulletRadius || ae / 3, Ce = q.textIndent || (qt === "bullet" ? ye * 5 : ae * 2), Ee = q.bulletIndent || (qt === "bullet" ? ye * 8 : ae * 2), De = 1, Ve = [], Xe = [], qe = [], cr = function br(Qr) {
                    for (var bn = 1, _r = 0; _r < Qr.length; _r++) {
                      var wn = Qr[_r];
                      Array.isArray(wn) ? (De++, br(wn), De--) : (Ve.push(wn), Xe.push(De), qt !== "bullet" && qe.push(bn++));
                    }
                  };
                  cr(Z);
                  var Or = function(Qr) {
                    switch (qt) {
                      case "numbered":
                        return "".concat(Qr, ".");
                      case "lettered":
                        var bn = String.fromCharCode((Qr - 1) % 26 + 65), _r = Math.floor((Qr - 1) / 26 + 1), wn = Array(_r + 1).join(bn);
                        return "".concat(wn, ".");
                    }
                  };
                  mt = new ge(this, q), mt.on("line", this._line), De = 1;
                  var en = 0;
                  return mt.on("firstLine", function() {
                    var br, Qr, bn, _r;
                    if (q.structParent)
                      if (q.structTypes) {
                        var wn = N(q.structTypes, 3);
                        Qr = wn[0], bn = wn[1], _r = wn[2];
                      } else
                        Qr = "LI", bn = "Lbl", _r = "LBody";
                    Qr ? (br = Ct.struct(Qr), q.structParent.add(br)) : q.structParent && (br = q.structParent);
                    var On;
                    if ((On = Xe[en++]) !== De) {
                      var ya = Ee * (On - De);
                      Ct.x += ya, mt.lineWidth -= ya, De = On;
                    }
                    switch (br && (bn || _r) && br.add(Ct.struct(bn || _r, [Ct.markStructureContent(bn || _r)])), qt) {
                      case "bullet":
                        Ct.circle(Ct.x - Ce + ye, Ct.y + ve, ye), Ct.fill();
                        break;
                      case "numbered":
                      case "lettered":
                        var ca = Or(qe[en - 1]);
                        Ct._fragment(ca, Ct.x - Ce, Ct.y, q);
                        break;
                    }
                    br && bn && _r && br.add(Ct.struct(_r, [Ct.markStructureContent(_r)])), br && br !== q.structParent && br.end();
                  }), mt.on("sectionStart", function() {
                    var br = Ce + Ee * (De - 1);
                    return Ct.x += br, mt.lineWidth -= br;
                  }), mt.on("sectionEnd", function() {
                    var br = Ce + Ee * (De - 1);
                    return Ct.x -= br, mt.lineWidth += br;
                  }), mt.wrap(Ve.join(`
`), q), this;
                },
                _initOptions: function() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, W = arguments.length > 1 ? arguments[1] : void 0, at = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  typeof Z == "object" && (at = Z, Z = null);
                  var q = Object.assign({}, at);
                  if (this._textOptions)
                    for (var mt in this._textOptions) {
                      var Ct = this._textOptions[mt];
                      mt !== "continued" && q[mt] === void 0 && (q[mt] = Ct);
                    }
                  return Z != null && (this.x = Z), W != null && (this.y = W), q.lineBreak !== !1 && (q.width == null && (q.width = this.page.width - this.x - this.page.margins.right), q.width = Math.max(q.width, 0)), q.columns || (q.columns = 0), q.columnGap == null && (q.columnGap = 18), q;
                },
                _line: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, at = arguments.length > 2 ? arguments[2] : void 0;
                  this._fragment(Z, this.x, this.y, W);
                  var q = W.lineGap || this._lineGap || 0;
                  return at ? this.y += this.currentLineHeight(!0) + q : this.x += this.widthOfString(Z);
                },
                _fragment: function(Z, W, at, q) {
                  var mt = this, Ct, qt, ae, ve, ye, Ce;
                  if (Z = "".concat(Z).replace(/\n/g, ""), Z.length !== 0) {
                    var Ee = q.align || "left", De = q.wordSpacing || 0, Ve = q.characterSpacing || 0;
                    if (q.width)
                      switch (Ee) {
                        case "right":
                          ye = this.widthOfString(Z.replace(/\s+$/, ""), q), W += q.lineWidth - ye;
                          break;
                        case "center":
                          W += q.lineWidth / 2 - q.textWidth / 2;
                          break;
                        case "justify":
                          Ce = Z.trim().split(/\s+/), ye = this.widthOfString(Z.replace(/\s+/g, ""), q);
                          var Xe = this.widthOfString(" ") + Ve;
                          De = Math.max(0, (q.lineWidth - ye) / Math.max(1, Ce.length - 1) - Xe);
                          break;
                      }
                    if (typeof q.baseline == "number")
                      Ct = -q.baseline;
                    else {
                      switch (q.baseline) {
                        case "svg-middle":
                          Ct = 0.5 * this._font.xHeight;
                          break;
                        case "middle":
                        case "svg-central":
                          Ct = 0.5 * (this._font.descender + this._font.ascender);
                          break;
                        case "bottom":
                        case "ideographic":
                          Ct = this._font.descender;
                          break;
                        case "alphabetic":
                          Ct = 0;
                          break;
                        case "mathematical":
                          Ct = 0.5 * this._font.ascender;
                          break;
                        case "hanging":
                          Ct = 0.8 * this._font.ascender;
                          break;
                        case "top":
                          Ct = this._font.ascender;
                          break;
                        default:
                          Ct = this._font.ascender;
                      }
                      Ct = Ct / 1e3 * this._fontSize;
                    }
                    var qe = q.textWidth + De * (q.wordCount - 1) + Ve * (Z.length - 1);
                    if (q.link != null && this.link(W, at, qe, this.currentLineHeight(), q.link), q.goTo != null && this.goTo(W, at, qe, this.currentLineHeight(), q.goTo), q.destination != null && this.addNamedDestination(q.destination, "XYZ", W, at, null), q.underline) {
                      this.save(), q.stroke || this.strokeColor.apply(this, M(this._fillColor || []));
                      var cr = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
                      this.lineWidth(cr);
                      var Or = at + this.currentLineHeight() - cr;
                      this.moveTo(W, Or), this.lineTo(W + qe, Or), this.stroke(), this.restore();
                    }
                    if (q.strike) {
                      this.save(), q.stroke || this.strokeColor.apply(this, M(this._fillColor || []));
                      var en = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
                      this.lineWidth(en);
                      var br = at + this.currentLineHeight() / 2;
                      this.moveTo(W, br), this.lineTo(W + qe, br), this.stroke(), this.restore();
                    }
                    if (this.save(), q.oblique) {
                      var Qr;
                      typeof q.oblique == "number" ? Qr = -Math.tan(q.oblique * Math.PI / 180) : Qr = -0.25, this.transform(1, 0, 0, 1, W, at), this.transform(1, 0, Qr, 1, -Qr * Ct, 0), this.transform(1, 0, 0, 1, -W, -at);
                    }
                    this.transform(1, 0, 0, -1, 0, this.page.height), at = this.page.height - at - Ct, this.page.fonts[this._font.id] == null && (this.page.fonts[this._font.id] = this._font.ref()), this.addContent("BT"), this.addContent("1 0 0 1 ".concat(Le(W), " ").concat(Le(at), " Tm")), this.addContent("/".concat(this._font.id, " ").concat(Le(this._fontSize), " Tf"));
                    var bn = q.fill && q.stroke ? 2 : q.stroke ? 1 : 0;
                    if (bn && this.addContent("".concat(bn, " Tr")), Ve && this.addContent("".concat(Le(Ve), " Tc")), De) {
                      Ce = Z.trim().split(/\s+/), De += this.widthOfString(" ") + Ve, De *= 1e3 / this._fontSize, qt = [], ve = [];
                      var _r = Lt(Ce), wn;
                      try {
                        for (_r.s(); !(wn = _r.n()).done; ) {
                          var On = wn.value, ya = this._font.encode(On, q.features), ca = N(ya, 2), Ni = ca[0], ha = ca[1];
                          qt = qt.concat(Ni), ve = ve.concat(ha);
                          var Fa = {}, xa = ve[ve.length - 1];
                          for (var ba in xa) {
                            var oa = xa[ba];
                            Fa[ba] = oa;
                          }
                          Fa.xAdvance += De, ve[ve.length - 1] = Fa;
                        }
                      } catch (ji) {
                        _r.e(ji);
                      } finally {
                        _r.f();
                      }
                    } else {
                      var Mi = this._font.encode(Z, q.features), ki = N(Mi, 2);
                      qt = ki[0], ve = ki[1];
                    }
                    var Ui = this._fontSize / 1e3, li = [], zi = 0, Wi = !1, xo = function(Ia) {
                      if (zi < Ia) {
                        var ws = qt.slice(zi, Ia).join(""), Ss = ve[Ia - 1].xAdvance - ve[Ia - 1].advanceWidth;
                        li.push("<".concat(ws, "> ").concat(Le(-Ss)));
                      }
                      return zi = Ia;
                    }, Hi = function(Ia) {
                      if (xo(Ia), li.length > 0)
                        return mt.addContent("[".concat(li.join(" "), "] TJ")), li.length = 0;
                    };
                    for (ae = 0; ae < ve.length; ae++) {
                      var da = ve[ae];
                      da.xOffset || da.yOffset ? (Hi(ae), this.addContent("1 0 0 1 ".concat(Le(W + da.xOffset * Ui), " ").concat(Le(at + da.yOffset * Ui), " Tm")), Hi(ae + 1), Wi = !0) : (Wi && (this.addContent("1 0 0 1 ".concat(Le(W), " ").concat(Le(at), " Tm")), Wi = !1), da.xAdvance - da.advanceWidth !== 0 && xo(ae + 1)), W += da.xAdvance * Ui;
                    }
                    return Hi(ae), this.addContent("ET"), this.restore();
                  }
                }
              }, He = [65472, 65473, 65474, 65475, 65477, 65478, 65479, 65480, 65481, 65482, 65483, 65484, 65485, 65486, 65487], ir = {
                1: "DeviceGray",
                3: "DeviceRGB",
                4: "DeviceCMYK"
              }, Ke = /* @__PURE__ */ function() {
                function St(Z, W) {
                  m(this, St);
                  var at;
                  if (this.data = Z, this.label = W, this.data.readUInt16BE(0) !== 65496)
                    throw "SOI not found in JPEG";
                  for (var q = 2; q < this.data.length && (at = this.data.readUInt16BE(q), q += 2, !He.includes(at)); )
                    q += this.data.readUInt16BE(q);
                  if (!He.includes(at))
                    throw "Invalid JPEG.";
                  q += 2, this.bits = this.data[q++], this.height = this.data.readUInt16BE(q), q += 2, this.width = this.data.readUInt16BE(q), q += 2;
                  var mt = this.data[q++];
                  this.colorSpace = ir[mt], this.obj = null;
                }
                return x(St, [{
                  key: "embed",
                  value: function(W) {
                    if (!this.obj)
                      return this.obj = W.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        BitsPerComponent: this.bits,
                        Width: this.width,
                        Height: this.height,
                        ColorSpace: this.colorSpace,
                        Filter: "DCTDecode"
                      }), this.colorSpace === "DeviceCMYK" && (this.obj.data.Decode = [1, 0, 1, 0, 1, 0, 1, 0]), this.obj.end(this.data), this.data = null;
                  }
                }]), St;
              }(), dr = /* @__PURE__ */ function() {
                function St(Z, W) {
                  m(this, St), this.label = W, this.image = new i.default(Z), this.width = this.image.width, this.height = this.image.height, this.imgData = this.image.imgData, this.obj = null;
                }
                return x(St, [{
                  key: "embed",
                  value: function(W) {
                    var at = !1;
                    if (this.document = W, !this.obj) {
                      var q = this.image.hasAlphaChannel, mt = this.image.interlaceMethod === 1;
                      if (this.obj = this.document.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        BitsPerComponent: q ? 8 : this.image.bits,
                        Width: this.width,
                        Height: this.height,
                        Filter: "FlateDecode"
                      }), !q) {
                        var Ct = this.document.ref({
                          Predictor: mt ? 1 : 15,
                          Colors: this.image.colors,
                          BitsPerComponent: this.image.bits,
                          Columns: this.width
                        });
                        this.obj.data.DecodeParms = Ct, Ct.end();
                      }
                      if (this.image.palette.length === 0)
                        this.obj.data.ColorSpace = this.image.colorSpace;
                      else {
                        var qt = this.document.ref();
                        qt.end(r.from(this.image.palette)), this.obj.data.ColorSpace = ["Indexed", "DeviceRGB", this.image.palette.length / 3 - 1, qt];
                      }
                      if (this.image.transparency.grayscale != null) {
                        var ae = this.image.transparency.grayscale;
                        this.obj.data.Mask = [ae, ae];
                      } else if (this.image.transparency.rgb) {
                        var ve = this.image.transparency.rgb, ye = [], Ce = Lt(ve), Ee;
                        try {
                          for (Ce.s(); !(Ee = Ce.n()).done; ) {
                            var De = Ee.value;
                            ye.push(De, De);
                          }
                        } catch (Ve) {
                          Ce.e(Ve);
                        } finally {
                          Ce.f();
                        }
                        this.obj.data.Mask = ye;
                      } else {
                        if (this.image.transparency.indexed)
                          return at = !0, this.loadIndexedAlphaChannel();
                        if (q)
                          return at = !0, this.splitAlphaChannel();
                      }
                      if (mt && !at)
                        return this.decodeData();
                      this.finalize();
                    }
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    if (this.alphaChannel) {
                      var W = this.document.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        Height: this.height,
                        Width: this.width,
                        BitsPerComponent: 8,
                        Filter: "FlateDecode",
                        ColorSpace: "DeviceGray",
                        Decode: [0, 1]
                      });
                      W.end(this.alphaChannel), this.obj.data.SMask = W;
                    }
                    return this.obj.end(this.imgData), this.image = null, this.imgData = null;
                  }
                }, {
                  key: "splitAlphaChannel",
                  value: function() {
                    var W = this;
                    return this.image.decodePixels(function(at) {
                      for (var q, mt, Ct = W.image.colors, qt = W.width * W.height, ae = r.alloc(qt * Ct), ve = r.alloc(qt), ye = mt = q = 0, Ce = at.length, Ee = W.image.bits === 16 ? 1 : 0; ye < Ce; ) {
                        for (var De = 0; De < Ct; De++)
                          ae[mt++] = at[ye++], ye += Ee;
                        ve[q++] = at[ye++], ye += Ee;
                      }
                      return W.imgData = o.default.deflateSync(ae), W.alphaChannel = o.default.deflateSync(ve), W.finalize();
                    });
                  }
                }, {
                  key: "loadIndexedAlphaChannel",
                  value: function() {
                    var W = this, at = this.image.transparency.indexed;
                    return this.image.decodePixels(function(q) {
                      for (var mt = r.alloc(W.width * W.height), Ct = 0, qt = 0, ae = q.length; qt < ae; qt++)
                        mt[Ct++] = at[q[qt]];
                      return W.alphaChannel = o.default.deflateSync(mt), W.finalize();
                    });
                  }
                }, {
                  key: "decodeData",
                  value: function() {
                    var W = this;
                    this.image.decodePixels(function(at) {
                      W.imgData = o.default.deflateSync(at), W.finalize();
                    });
                  }
                }]), St;
              }(), sr = /* @__PURE__ */ function() {
                function St() {
                  m(this, St);
                }
                return x(St, null, [{
                  key: "open",
                  value: function(W, at) {
                    var q;
                    if (r.isBuffer(W))
                      q = W;
                    else if (W instanceof ArrayBuffer)
                      q = r.from(new Uint8Array(W));
                    else {
                      var mt;
                      if (mt = /^data:.+;base64,(.*)$/.exec(W))
                        q = r.from(mt[1], "base64");
                      else if (q = y.readFileSync(W), !q)
                        return;
                    }
                    if (q[0] === 255 && q[1] === 216)
                      return new Ke(q, at);
                    if (q[0] === 137 && q.toString("ascii", 1, 4) === "PNG")
                      return new dr(q, at);
                    throw new Error("Unknown image format.");
                  }
                }]), St;
              }(), Tr = {
                initImages: function() {
                  return this._imageRegistry = {}, this._imageCount = 0;
                },
                image: function(Z, W, at) {
                  var q = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, mt, Ct, qt, ae, ve, ye, Ce;
                  typeof W == "object" && (q = W, W = null), W = (ye = W != null ? W : q.x) != null ? ye : this.x, at = (Ce = at != null ? at : q.y) != null ? Ce : this.y, typeof Z == "string" && (ae = this._imageRegistry[Z]), ae || (Z.width && Z.height ? ae = Z : ae = this.openImage(Z)), ae.obj || ae.embed(this), this.page.xobjects[ae.label] == null && (this.page.xobjects[ae.label] = ae.obj);
                  var Ee = q.width || ae.width, De = q.height || ae.height;
                  if (q.width && !q.height) {
                    var Ve = Ee / ae.width;
                    Ee = ae.width * Ve, De = ae.height * Ve;
                  } else if (q.height && !q.width) {
                    var Xe = De / ae.height;
                    Ee = ae.width * Xe, De = ae.height * Xe;
                  } else if (q.scale)
                    Ee = ae.width * q.scale, De = ae.height * q.scale;
                  else if (q.fit) {
                    var qe = N(q.fit, 2);
                    qt = qe[0], mt = qe[1], Ct = qt / mt, ve = ae.width / ae.height, ve > Ct ? (Ee = qt, De = qt / ve) : (De = mt, Ee = mt * ve);
                  } else if (q.cover) {
                    var cr = N(q.cover, 2);
                    qt = cr[0], mt = cr[1], Ct = qt / mt, ve = ae.width / ae.height, ve > Ct ? (De = mt, Ee = mt * ve) : (Ee = qt, De = qt / ve);
                  }
                  return (q.fit || q.cover) && (q.align === "center" ? W = W + qt / 2 - Ee / 2 : q.align === "right" && (W = W + qt - Ee), q.valign === "center" ? at = at + mt / 2 - De / 2 : q.valign === "bottom" && (at = at + mt - De)), q.link != null && this.link(W, at, Ee, De, q.link), q.goTo != null && this.goTo(W, at, Ee, De, q.goTo), q.destination != null && this.addNamedDestination(q.destination, "XYZ", W, at, null), this.y === at && (this.y += De), this.save(), this.transform(Ee, 0, 0, -De, W, at + De), this.addContent("/".concat(ae.label, " Do")), this.restore(), this;
                },
                openImage: function(Z) {
                  var W;
                  return typeof Z == "string" && (W = this._imageRegistry[Z]), W || (W = sr.open(Z, "I".concat(++this._imageCount)), typeof Z == "string" && (this._imageRegistry[Z] = W)), W;
                }
              }, Wr = {
                annotate: function(Z, W, at, q, mt) {
                  mt.Type = "Annot", mt.Rect = this._convertRect(Z, W, at, q), mt.Border = [0, 0, 0], mt.Subtype === "Link" && typeof mt.F == "undefined" && (mt.F = 4), mt.Subtype !== "Link" && mt.C == null && (mt.C = this._normalizeColor(mt.color || [0, 0, 0])), delete mt.color, typeof mt.Dest == "string" && (mt.Dest = new String(mt.Dest));
                  for (var Ct in mt) {
                    var qt = mt[Ct];
                    mt[Ct[0].toUpperCase() + Ct.slice(1)] = qt;
                  }
                  var ae = this.ref(mt);
                  return this.page.annotations.push(ae), ae.end(), this;
                },
                note: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return Ct.Subtype = "Text", Ct.Contents = new String(mt), Ct.Name = "Comment", Ct.color == null && (Ct.color = [243, 223, 92]), this.annotate(Z, W, at, q, Ct);
                },
                goTo: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return Ct.Subtype = "Link", Ct.A = this.ref({
                    S: "GoTo",
                    D: new String(mt)
                  }), Ct.A.end(), this.annotate(Z, W, at, q, Ct);
                },
                link: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  if (Ct.Subtype = "Link", typeof mt == "number") {
                    var qt = this._root.data.Pages.data;
                    if (mt >= 0 && mt < qt.Kids.length)
                      Ct.A = this.ref({
                        S: "GoTo",
                        D: [qt.Kids[mt], "XYZ", null, null, null]
                      }), Ct.A.end();
                    else
                      throw new Error("The document has no page ".concat(mt));
                  } else
                    Ct.A = this.ref({
                      S: "URI",
                      URI: new String(mt)
                    }), Ct.A.end();
                  return this.annotate(Z, W, at, q, Ct);
                },
                _markup: function(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, Ct = this._convertRect(Z, W, at, q), qt = N(Ct, 4), ae = qt[0], ve = qt[1], ye = qt[2], Ce = qt[3];
                  return mt.QuadPoints = [ae, Ce, ye, Ce, ae, ve, ye, ve], mt.Contents = new String(), this.annotate(Z, W, at, q, mt);
                },
                highlight: function(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return mt.Subtype = "Highlight", mt.color == null && (mt.color = [241, 238, 148]), this._markup(Z, W, at, q, mt);
                },
                underline: function(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return mt.Subtype = "Underline", this._markup(Z, W, at, q, mt);
                },
                strike: function(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return mt.Subtype = "StrikeOut", this._markup(Z, W, at, q, mt);
                },
                lineAnnotation: function(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return mt.Subtype = "Line", mt.Contents = new String(), mt.L = [Z, this.page.height - W, at, this.page.height - q], this.annotate(Z, W, at, q, mt);
                },
                rectAnnotation: function(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return mt.Subtype = "Square", mt.Contents = new String(), this.annotate(Z, W, at, q, mt);
                },
                ellipseAnnotation: function(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return mt.Subtype = "Circle", mt.Contents = new String(), this.annotate(Z, W, at, q, mt);
                },
                textAnnotation: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return Ct.Subtype = "FreeText", Ct.Contents = new String(mt), Ct.DA = new String(), this.annotate(Z, W, at, q, Ct);
                },
                fileAnnotation: function(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {}, qt = this.file(mt.src, Object.assign({
                    hidden: !0
                  }, mt));
                  return Ct.Subtype = "FileAttachment", Ct.FS = qt, Ct.Contents ? Ct.Contents = new String(Ct.Contents) : qt.data.Desc && (Ct.Contents = qt.data.Desc), this.annotate(Z, W, at, q, Ct);
                },
                _convertRect: function(Z, W, at, q) {
                  var mt = W;
                  W += q;
                  var Ct = Z + at, qt = N(this._ctm, 6), ae = qt[0], ve = qt[1], ye = qt[2], Ce = qt[3], Ee = qt[4], De = qt[5];
                  return Z = ae * Z + ye * W + Ee, W = ve * Z + Ce * W + De, Ct = ae * Ct + ye * mt + Ee, mt = ve * Ct + Ce * mt + De, [Z, W, Ct, mt];
                }
              }, Br = /* @__PURE__ */ function() {
                function St(Z, W, at, q) {
                  var mt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
                    expanded: !1
                  };
                  m(this, St), this.document = Z, this.options = mt, this.outlineData = {}, q !== null && (this.outlineData.Dest = [q.dictionary, "Fit"]), W !== null && (this.outlineData.Parent = W), at !== null && (this.outlineData.Title = new String(at)), this.dictionary = this.document.ref(this.outlineData), this.children = [];
                }
                return x(St, [{
                  key: "addItem",
                  value: function(W) {
                    var at = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                      expanded: !1
                    }, q = new St(this.document, this.dictionary, W, this.document.page, at);
                    return this.children.push(q), q;
                  }
                }, {
                  key: "endOutline",
                  value: function() {
                    if (this.children.length > 0) {
                      this.options.expanded && (this.outlineData.Count = this.children.length);
                      var W = this.children[0], at = this.children[this.children.length - 1];
                      this.outlineData.First = W.dictionary, this.outlineData.Last = at.dictionary;
                      for (var q = 0, mt = this.children.length; q < mt; q++) {
                        var Ct = this.children[q];
                        q > 0 && (Ct.outlineData.Prev = this.children[q - 1].dictionary), q < this.children.length - 1 && (Ct.outlineData.Next = this.children[q + 1].dictionary), Ct.endOutline();
                      }
                    }
                    return this.dictionary.end();
                  }
                }]), St;
              }(), Dr = {
                initOutline: function() {
                  return this.outline = new Br(this, null, null, null);
                },
                endOutline: function() {
                  if (this.outline.endOutline(), this.outline.children.length > 0)
                    return this._root.data.Outlines = this.outline.dictionary, this._root.data.PageMode = "UseOutlines";
                }
              }, Rr = /* @__PURE__ */ function() {
                function St(Z, W) {
                  m(this, St), this.refs = [{
                    pageRef: Z,
                    mcid: W
                  }];
                }
                return x(St, [{
                  key: "push",
                  value: function(W) {
                    var at = this;
                    W.refs.forEach(function(q) {
                      return at.refs.push(q);
                    });
                  }
                }]), St;
              }(), rn = /* @__PURE__ */ function() {
                function St(Z, W) {
                  var at = this, q = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, mt = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
                  m(this, St), this.document = Z, this._attached = !1, this._ended = !1, this._flushed = !1, this.dictionary = Z.ref({
                    // Type: "StructElem",
                    S: W
                  });
                  var Ct = this.dictionary.data;
                  (Array.isArray(q) || this._isValidChild(q)) && (mt = q, q = {}), typeof q.title != "undefined" && (Ct.T = new String(q.title)), typeof q.lang != "undefined" && (Ct.Lang = new String(q.lang)), typeof q.alt != "undefined" && (Ct.Alt = new String(q.alt)), typeof q.expanded != "undefined" && (Ct.E = new String(q.expanded)), typeof q.actual != "undefined" && (Ct.ActualText = new String(q.actual)), this._children = [], mt && (Array.isArray(mt) || (mt = [mt]), mt.forEach(function(qt) {
                    return at.add(qt);
                  }), this.end());
                }
                return x(St, [{
                  key: "add",
                  value: function(W) {
                    if (this._ended)
                      throw new Error("Cannot add child to already-ended structure element");
                    if (!this._isValidChild(W))
                      throw new Error("Invalid structure element child");
                    return W instanceof St && (W.setParent(this.dictionary), this._attached && W.setAttached()), W instanceof Rr && this._addContentToParentTree(W), typeof W == "function" && this._attached && (W = this._contentForClosure(W)), this._children.push(W), this;
                  }
                }, {
                  key: "_addContentToParentTree",
                  value: function(W) {
                    var at = this;
                    W.refs.forEach(function(q) {
                      var mt = q.pageRef, Ct = q.mcid, qt = at.document.getStructParentTree().get(mt.data.StructParents);
                      qt[Ct] = at.dictionary;
                    });
                  }
                }, {
                  key: "setParent",
                  value: function(W) {
                    if (this.dictionary.data.P)
                      throw new Error("Structure element added to more than one parent");
                    this.dictionary.data.P = W, this._flush();
                  }
                }, {
                  key: "setAttached",
                  value: function() {
                    var W = this;
                    this._attached || (this._children.forEach(function(at, q) {
                      at instanceof St && at.setAttached(), typeof at == "function" && (W._children[q] = W._contentForClosure(at));
                    }), this._attached = !0, this._flush());
                  }
                }, {
                  key: "end",
                  value: function() {
                    this._ended || (this._children.filter(function(W) {
                      return W instanceof St;
                    }).forEach(function(W) {
                      return W.end();
                    }), this._ended = !0, this._flush());
                  }
                }, {
                  key: "_isValidChild",
                  value: function(W) {
                    return W instanceof St || W instanceof Rr || typeof W == "function";
                  }
                }, {
                  key: "_contentForClosure",
                  value: function(W) {
                    var at = this.document.markStructureContent(this.dictionary.data.S);
                    return W(), this.document.endMarkedContent(), this._addContentToParentTree(at), at;
                  }
                }, {
                  key: "_isFlushable",
                  value: function() {
                    return !this.dictionary.data.P || !this._ended ? !1 : this._children.every(function(W) {
                      return typeof W == "function" ? !1 : W instanceof St ? W._isFlushable() : !0;
                    });
                  }
                }, {
                  key: "_flush",
                  value: function() {
                    var W = this;
                    this._flushed || !this._isFlushable() || (this.dictionary.data.K = [], this._children.forEach(function(at) {
                      return W._flushChild(at);
                    }), this.dictionary.end(), this._children = [], this.dictionary.data.K = null, this._flushed = !0);
                  }
                }, {
                  key: "_flushChild",
                  value: function(W) {
                    var at = this;
                    W instanceof St && this.dictionary.data.K.push(W.dictionary), W instanceof Rr && W.refs.forEach(function(q) {
                      var mt = q.pageRef, Ct = q.mcid;
                      at.dictionary.data.Pg || (at.dictionary.data.Pg = mt), at.dictionary.data.Pg === mt ? at.dictionary.data.K.push(Ct) : at.dictionary.data.K.push({
                        Type: "MCR",
                        Pg: mt,
                        MCID: Ct
                      });
                    });
                  }
                }]), St;
              }(), Dn = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W() {
                  return m(this, W), Z.apply(this, arguments);
                }
                return x(W, [{
                  key: "_compareKeys",
                  value: function(q, mt) {
                    return parseInt(q) - parseInt(mt);
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    return "Nums";
                  }
                }, {
                  key: "_dataForKey",
                  value: function(q) {
                    return parseInt(q);
                  }
                }]), W;
              }(Q), ln = {
                initMarkings: function(Z) {
                  this.structChildren = [], Z.tagged && (this.getMarkInfoDictionary().data.Marked = !0, this.getStructTreeRoot());
                },
                markContent: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                  if (Z === "Artifact" || W && W.mcid) {
                    var at = 0;
                    for (this.page.markings.forEach(function(mt) {
                      (at || mt.structContent || mt.tag === "Artifact") && at++;
                    }); at--; )
                      this.endMarkedContent();
                  }
                  if (!W)
                    return this.page.markings.push({
                      tag: Z
                    }), this.addContent("/".concat(Z, " BMC")), this;
                  this.page.markings.push({
                    tag: Z,
                    options: W
                  });
                  var q = {};
                  return typeof W.mcid != "undefined" && (q.MCID = W.mcid), Z === "Artifact" && (typeof W.type == "string" && (q.Type = W.type), Array.isArray(W.bbox) && (q.BBox = [W.bbox[0], this.page.height - W.bbox[3], W.bbox[2], this.page.height - W.bbox[1]]), Array.isArray(W.attached) && W.attached.every(function(mt) {
                    return typeof mt == "string";
                  }) && (q.Attached = W.attached)), Z === "Span" && (W.lang && (q.Lang = new String(W.lang)), W.alt && (q.Alt = new String(W.alt)), W.expanded && (q.E = new String(W.expanded)), W.actual && (q.ActualText = new String(W.actual))), this.addContent("/".concat(Z, " ").concat(G.convert(q), " BDC")), this;
                },
                markStructureContent: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, at = this.getStructParentTree().get(this.page.structParentTreeKey), q = at.length;
                  at.push(null), this.markContent(Z, O(O({}, W), {}, {
                    mcid: q
                  }));
                  var mt = new Rr(this.page.dictionary, q);
                  return this.page.markings.slice(-1)[0].structContent = mt, mt;
                },
                endMarkedContent: function() {
                  return this.page.markings.pop(), this.addContent("EMC"), this;
                },
                struct: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, at = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
                  return new rn(this, Z, W, at);
                },
                addStructure: function(Z) {
                  var W = this.getStructTreeRoot();
                  return Z.setParent(W), Z.setAttached(), this.structChildren.push(Z), W.data.K || (W.data.K = []), W.data.K.push(Z.dictionary), this;
                },
                initPageMarkings: function(Z) {
                  var W = this;
                  Z.forEach(function(at) {
                    if (at.structContent) {
                      var q = at.structContent, mt = W.markStructureContent(at.tag, at.options);
                      q.push(mt), W.page.markings.slice(-1)[0].structContent = q;
                    } else
                      W.markContent(at.tag, at.options);
                  });
                },
                endPageMarkings: function(Z) {
                  var W = Z.markings;
                  return W.forEach(function() {
                    return Z.write("EMC");
                  }), Z.markings = [], W;
                },
                getMarkInfoDictionary: function() {
                  return this._root.data.MarkInfo || (this._root.data.MarkInfo = this.ref({})), this._root.data.MarkInfo;
                },
                getStructTreeRoot: function() {
                  return this._root.data.StructTreeRoot || (this._root.data.StructTreeRoot = this.ref({
                    Type: "StructTreeRoot",
                    ParentTree: new Dn(),
                    ParentTreeNextKey: 0
                  })), this._root.data.StructTreeRoot;
                },
                getStructParentTree: function() {
                  return this.getStructTreeRoot().data.ParentTree;
                },
                createStructParentTreeNextKey: function() {
                  this.getMarkInfoDictionary();
                  var Z = this.getStructTreeRoot(), W = Z.data.ParentTreeNextKey++;
                  return Z.data.ParentTree.add(W, []), W;
                },
                endMarkings: function() {
                  var Z = this._root.data.StructTreeRoot;
                  Z && (Z.end(), this.structChildren.forEach(function(W) {
                    return W.end();
                  })), this._root.data.MarkInfo && this._root.data.MarkInfo.end();
                }
              }, An = {
                readOnly: 1,
                required: 2,
                noExport: 4,
                multiline: 4096,
                password: 8192,
                toggleToOffButton: 16384,
                radioButton: 32768,
                pushButton: 65536,
                combo: 131072,
                edit: 262144,
                sort: 524288,
                multiSelect: 2097152,
                noSpell: 4194304
              }, Mn = {
                left: 0,
                center: 1,
                right: 2
              }, fn = {
                value: "V",
                defaultValue: "DV"
              }, pn = {
                zip: "0",
                zipPlus4: "1",
                zip4: "1",
                phone: "2",
                ssn: "3"
              }, hn = {
                number: {
                  nDec: 0,
                  sepComma: !1,
                  negStyle: "MinusBlack",
                  currency: "",
                  currencyPrepend: !0
                },
                percent: {
                  nDec: 0,
                  sepComma: !1
                }
              }, ii = {
                /**
                 * Must call if adding AcroForms to a document. Must also call font() before
                 * this method to set the default font.
                 */
                initForm: function() {
                  if (!this._font)
                    throw new Error("Must set a font before calling initForm method");
                  this._acroform = {
                    fonts: {},
                    defaultFont: this._font.name
                  }, this._acroform.fonts[this._font.id] = this._font.ref();
                  var Z = {
                    Fields: [],
                    NeedAppearances: !0,
                    DA: new String("/".concat(this._font.id, " 0 Tf 0 g")),
                    DR: {
                      Font: {}
                    }
                  };
                  Z.DR.Font[this._font.id] = this._font.ref();
                  var W = this.ref(Z);
                  return this._root.data.AcroForm = W, this;
                },
                /**
                 * Called automatically by document.js
                 */
                endAcroForm: function() {
                  var Z = this;
                  if (this._root.data.AcroForm) {
                    if (!Object.keys(this._acroform.fonts).length && !this._acroform.defaultFont)
                      throw new Error("No fonts specified for PDF form");
                    var W = this._root.data.AcroForm.data.DR.Font;
                    Object.keys(this._acroform.fonts).forEach(function(at) {
                      W[at] = Z._acroform.fonts[at];
                    }), this._root.data.AcroForm.data.Fields.forEach(function(at) {
                      Z._endChild(at);
                    }), this._root.data.AcroForm.end();
                  }
                  return this;
                },
                _endChild: function(Z) {
                  var W = this;
                  return Array.isArray(Z.data.Kids) && (Z.data.Kids.forEach(function(at) {
                    W._endChild(at);
                  }), Z.end()), this;
                },
                /**
                 * Creates and adds a form field to the document. Form fields are intermediate
                 * nodes in a PDF form that are used to specify form name heirarchy and form
                 * value defaults.
                 * @param {string} name - field name (T attribute in field dictionary)
                 * @param {object} options  - other attributes to include in field dictionary
                 */
                formField: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, at = this._fieldDict(Z, null, W), q = this.ref(at);
                  return this._addToParent(q), q;
                },
                /**
                 * Creates and adds a Form Annotation to the document. Form annotations are
                 * called Widget annotations internally within a PDF file.
                 * @param {string} name - form field name (T attribute of widget annotation
                 * dictionary)
                 * @param {number} x
                 * @param {number} y
                 * @param {number} w
                 * @param {number} h
                 * @param {object} options
                 */
                formAnnotation: function(Z, W, at, q, mt, Ct) {
                  var qt = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : {}, ae = this._fieldDict(Z, W, qt);
                  ae.Subtype = "Widget", ae.F === void 0 && (ae.F = 4), this.annotate(at, q, mt, Ct, ae);
                  var ve = this.page.annotations[this.page.annotations.length - 1];
                  return this._addToParent(ve);
                },
                formText: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "text", W, at, q, mt, Ct);
                },
                formPushButton: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "pushButton", W, at, q, mt, Ct);
                },
                formCombo: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "combo", W, at, q, mt, Ct);
                },
                formList: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "list", W, at, q, mt, Ct);
                },
                formRadioButton: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "radioButton", W, at, q, mt, Ct);
                },
                formCheckbox: function(Z, W, at, q, mt) {
                  var Ct = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "checkbox", W, at, q, mt, Ct);
                },
                _addToParent: function(Z) {
                  var W = Z.data.Parent;
                  return W ? (W.data.Kids || (W.data.Kids = []), W.data.Kids.push(Z)) : this._root.data.AcroForm.data.Fields.push(Z), this;
                },
                _fieldDict: function(Z, W) {
                  var at = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  if (!this._acroform)
                    throw new Error("Call document.initForms() method before adding form elements to document");
                  var q = Object.assign({}, at);
                  return W !== null && (q = this._resolveType(W, at)), q = this._resolveFlags(q), q = this._resolveJustify(q), q = this._resolveFont(q), q = this._resolveStrings(q), q = this._resolveColors(q), q = this._resolveFormat(q), q.T = new String(Z), q.parent && (q.Parent = q.parent, delete q.parent), q;
                },
                _resolveType: function(Z, W) {
                  if (Z === "text")
                    W.FT = "Tx";
                  else if (Z === "pushButton")
                    W.FT = "Btn", W.pushButton = !0;
                  else if (Z === "radioButton")
                    W.FT = "Btn", W.radioButton = !0;
                  else if (Z === "checkbox")
                    W.FT = "Btn";
                  else if (Z === "combo")
                    W.FT = "Ch", W.combo = !0;
                  else if (Z === "list")
                    W.FT = "Ch";
                  else
                    throw new Error("Invalid form annotation type '".concat(Z, "'"));
                  return W;
                },
                _resolveFormat: function(Z) {
                  var W = Z.format;
                  if (W && W.type) {
                    var at, q, mt = "";
                    if (pn[W.type] !== void 0)
                      at = "AFSpecial_Keystroke", q = "AFSpecial_Format", mt = pn[W.type];
                    else {
                      var Ct = W.type.charAt(0).toUpperCase() + W.type.slice(1);
                      if (at = "AF".concat(Ct, "_Keystroke"), q = "AF".concat(Ct, "_Format"), W.type === "date")
                        at += "Ex", mt = String(W.param);
                      else if (W.type === "time")
                        mt = String(W.param);
                      else if (W.type === "number") {
                        var qt = Object.assign({}, hn.number, W);
                        mt = String([String(qt.nDec), qt.sepComma ? "0" : "1", '"' + qt.negStyle + '"', "null", '"' + qt.currency + '"', String(qt.currencyPrepend)].join(","));
                      } else if (W.type === "percent") {
                        var ae = Object.assign({}, hn.percent, W);
                        mt = String([String(ae.nDec), ae.sepComma ? "0" : "1"].join(","));
                      }
                    }
                    Z.AA = Z.AA ? Z.AA : {}, Z.AA.K = {
                      S: "JavaScript",
                      JS: new String("".concat(at, "(").concat(mt, ");"))
                    }, Z.AA.F = {
                      S: "JavaScript",
                      JS: new String("".concat(q, "(").concat(mt, ");"))
                    };
                  }
                  return delete Z.format, Z;
                },
                _resolveColors: function(Z) {
                  var W = this._normalizeColor(Z.backgroundColor);
                  return W && (Z.MK || (Z.MK = {}), Z.MK.BG = W), W = this._normalizeColor(Z.borderColor), W && (Z.MK || (Z.MK = {}), Z.MK.BC = W), delete Z.backgroundColor, delete Z.borderColor, Z;
                },
                _resolveFlags: function(Z) {
                  var W = 0;
                  return Object.keys(Z).forEach(function(at) {
                    An[at] && (W |= An[at], delete Z[at]);
                  }), W !== 0 && (Z.Ff = Z.Ff ? Z.Ff : 0, Z.Ff |= W), Z;
                },
                _resolveJustify: function(Z) {
                  var W = 0;
                  return Z.align !== void 0 && (typeof Mn[Z.align] == "number" && (W = Mn[Z.align]), delete Z.align), W !== 0 && (Z.Q = W), Z;
                },
                _resolveFont: function(Z) {
                  if (this._acroform.fonts[this._font.id] === null && (this._acroform.fonts[this._font.id] = this._font.ref()), this._acroform.defaultFont !== this._font.name) {
                    Z.DR = {
                      Font: {}
                    };
                    var W = Z.fontSize || 0;
                    Z.DR.Font[this._font.id] = this._font.ref(), Z.DA = new String("/".concat(this._font.id, " ").concat(W, " Tf 0 g"));
                  }
                  return Z;
                },
                _resolveStrings: function(Z) {
                  var W = [];
                  function at(q) {
                    if (Array.isArray(q))
                      for (var mt = 0; mt < q.length; mt++)
                        typeof q[mt] == "string" ? W.push(new String(q[mt])) : W.push(q[mt]);
                  }
                  return at(Z.Opt), Z.select && (at(Z.select), delete Z.select), W.length && (Z.Opt = W), Object.keys(fn).forEach(function(q) {
                    Z[q] !== void 0 && (Z[fn[q]] = Z[q], delete Z[q]);
                  }), ["V", "DV"].forEach(function(q) {
                    typeof Z[q] == "string" && (Z[q] = new String(Z[q]));
                  }), Z.MK && Z.MK.CA && (Z.MK.CA = new String(Z.MK.CA)), Z.label && (Z.MK = Z.MK ? Z.MK : {}, Z.MK.CA = new String(Z.label), delete Z.label), Z;
                }
              }, ga = {
                /**
                 * Embed contents of `src` in PDF
                 * @param {Buffer | ArrayBuffer | string} src input Buffer, ArrayBuffer, base64 encoded string or path to file
                 * @param {object} options
                 *  * options.name: filename to be shown in PDF, will use `src` if none set
                 *  * options.type: filetype to be shown in PDF
                 *  * options.description: description to be shown in PDF
                 *  * options.hidden: if true, do not add attachment to EmbeddedFiles dictionary. Useful for file attachment annotations
                 *  * options.creationDate: override creation date
                 *  * options.modifiedDate: override modified date
                 * @returns filespec reference
                 */
                file: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  W.name = W.name || Z;
                  var at = {
                    Type: "EmbeddedFile",
                    Params: {}
                  }, q;
                  if (!Z)
                    throw new Error("No src specified");
                  if (r.isBuffer(Z))
                    q = Z;
                  else if (Z instanceof ArrayBuffer)
                    q = r.from(new Uint8Array(Z));
                  else {
                    var mt;
                    if (mt = /^data:(.*);base64,(.*)$/.exec(Z))
                      mt[1] && (at.Subtype = mt[1].replace("/", "#2F")), q = r.from(mt[2], "base64");
                    else {
                      if (q = y.readFileSync(Z), !q)
                        throw new Error("Could not read contents of file at filepath ".concat(Z));
                      var Ct = y.statSync(Z), qt = Ct.birthtime, ae = Ct.ctime;
                      at.Params.CreationDate = qt, at.Params.ModDate = ae;
                    }
                  }
                  W.creationDate instanceof Date && (at.Params.CreationDate = W.creationDate), W.modifiedDate instanceof Date && (at.Params.ModDate = W.modifiedDate), W.type && (at.Subtype = W.type.replace("/", "#2F"));
                  var ve = f.default.MD5(f.default.lib.WordArray.create(new Uint8Array(q)));
                  at.Params.CheckSum = new String(ve), at.Params.Size = q.byteLength;
                  var ye;
                  this._fileRegistry || (this._fileRegistry = {});
                  var Ce = this._fileRegistry[W.name];
                  Ce && oi(at, Ce) ? ye = Ce.ref : (ye = this.ref(at), ye.end(q), this._fileRegistry[W.name] = O(O({}, at), {}, {
                    ref: ye
                  }));
                  var Ee = {
                    Type: "Filespec",
                    F: new String(W.name),
                    EF: {
                      F: ye
                    },
                    UF: new String(W.name)
                  };
                  W.description && (Ee.Desc = new String(W.description));
                  var De = this.ref(Ee);
                  return De.end(), W.hidden || this.addNamedEmbeddedFile(W.name, De), De;
                }
              };
              function oi(St, Z) {
                return St.Subtype === Z.Subtype && St.Params.CheckSum.toString() === Z.Params.CheckSum.toString() && St.Params.Size === Z.Params.Size && St.Params.CreationDate === Z.Params.CreationDate && St.Params.ModDate === Z.Params.ModDate;
              }
              var si = {
                initPDFA: function(Z) {
                  Z.charAt(Z.length - 3) === "-" ? (this.subset_conformance = Z.charAt(Z.length - 1).toUpperCase(), this.subset = parseInt(Z.charAt(Z.length - 2))) : (this.subset_conformance = "B", this.subset = parseInt(Z.charAt(Z.length - 1)));
                },
                endSubset: function() {
                  this._addPdfaMetadata();
                  var Z = "".concat(s, "/data/sRGB_IEC61966_2_1.icc"), W = "".concat(s, "/../color_profiles/sRGB_IEC61966_2_1.icc");
                  this._addColorOutputIntent(y.existsSync(Z) ? Z : W);
                },
                _addColorOutputIntent: function(Z) {
                  var W = y.readFileSync(Z), at = this.ref({
                    Length: W.length,
                    N: 3
                  });
                  at.write(W), at.end();
                  var q = this.ref({
                    Type: "OutputIntent",
                    S: "GTS_PDFA1",
                    Info: new String("sRGB IEC61966-2.1"),
                    OutputConditionIdentifier: new String("sRGB IEC61966-2.1"),
                    DestOutputProfile: at
                  });
                  q.end(), this._root.data.OutputIntents = [q];
                },
                _getPdfaid: function() {
                  return `
        <rdf:Description xmlns:pdfaid="http://www.aiim.org/pdfa/ns/id/" rdf:about="">
            <pdfaid:part>`.concat(this.subset, `</pdfaid:part>
            <pdfaid:conformance>`).concat(this.subset_conformance, `</pdfaid:conformance>
        </rdf:Description>
        `);
                },
                _addPdfaMetadata: function() {
                  this.appendXML(this._getPdfaid());
                }
              }, Za = {
                _importSubset: function(Z) {
                  Object.assign(this, Z);
                },
                initSubset: function(Z) {
                  switch (Z.subset) {
                    case "PDF/A-1":
                    case "PDF/A-1a":
                    case "PDF/A-1b":
                    case "PDF/A-2":
                    case "PDF/A-2a":
                    case "PDF/A-2b":
                    case "PDF/A-3":
                    case "PDF/A-3a":
                    case "PDF/A-3b":
                      this._importSubset(si), this.initPDFA(Z.subset);
                      break;
                  }
                }
              }, ma = /* @__PURE__ */ function() {
                function St() {
                  m(this, St), this._metadata = `
        <?xpacket begin="\uFEFF" id="W5M0MpCehiHzreSzNTczkc9d"?>
            <x:xmpmeta xmlns:x="adobe:ns:meta/">
                <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
        `;
                }
                return x(St, [{
                  key: "_closeTags",
                  value: function() {
                    this._metadata = this._metadata.concat(`
                </rdf:RDF>
            </x:xmpmeta>
        <?xpacket end="w"?>
        `);
                  }
                }, {
                  key: "append",
                  value: function(W) {
                    var at = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
                    this._metadata = this._metadata.concat(W), at && (this._metadata = this._metadata.concat(`
`));
                  }
                }, {
                  key: "getXML",
                  value: function() {
                    return this._metadata;
                  }
                }, {
                  key: "getLength",
                  value: function() {
                    return this._metadata.length;
                  }
                }, {
                  key: "end",
                  value: function() {
                    this._closeTags(), this._metadata = this._metadata.trim();
                  }
                }]), St;
              }(), Ya = {
                initMetadata: function() {
                  this.metadata = new ma();
                },
                appendXML: function(Z) {
                  var W = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
                  this.metadata.append(Z, W);
                },
                _addInfo: function() {
                  this.appendXML(`
        <rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
            <xmp:CreateDate>`.concat(this.info.CreationDate.toISOString().split(".")[0] + "Z", `</xmp:CreateDate>
            <xmp:CreatorTool>`).concat(this.info.Creator, `</xmp:CreatorTool>
        </rdf:Description>
        `)), (this.info.Title || this.info.Author || this.info.Subject) && (this.appendXML(`
            <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">
            `), this.info.Title && this.appendXML(`
                <dc:title>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">`.concat(this.info.Title, `</rdf:li>
                    </rdf:Alt>
                </dc:title>
                `)), this.info.Author && this.appendXML(`
                <dc:creator>
                    <rdf:Seq>
                        <rdf:li>`.concat(this.info.Author, `</rdf:li>
                    </rdf:Seq>
                </dc:creator>
                `)), this.info.Subject && this.appendXML(`
                <dc:description>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">`.concat(this.info.Subject, `</rdf:li>
                    </rdf:Alt>
                </dc:description>
                `)), this.appendXML(`
            </rdf:Description>
            `)), this.appendXML(`
        <rdf:Description rdf:about="" xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
            <pdf:Producer>`.concat(this.info.Creator, "</pdf:Producer>"), !1), this.info.Keywords && this.appendXML(`
            <pdf:Keywords>`.concat(this.info.Keywords, "</pdf:Keywords>"), !1), this.appendXML(`
        </rdf:Description>
        `);
                },
                endMetadata: function() {
                  this._addInfo(), this.metadata.end(), this.version != 1.3 && (this.metadataRef = this.ref({
                    length: this.metadata.getLength(),
                    Type: "Metadata",
                    Subtype: "XML"
                  }), this.metadataRef.compress = !1, this.metadataRef.write(r.from(this.metadata.getXML(), "utf-8")), this.metadataRef.end(), this._root.data.Metadata = this.metadataRef);
                }
              }, Ta = /* @__PURE__ */ function(St) {
                T(W, St);
                var Z = L(W);
                function W() {
                  var at, q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                  switch (m(this, W), at = Z.call(this, q), at.options = q, q.pdfVersion) {
                    case "1.4":
                      at.version = 1.4;
                      break;
                    case "1.5":
                      at.version = 1.5;
                      break;
                    case "1.6":
                      at.version = 1.6;
                      break;
                    case "1.7":
                    case "1.7ext3":
                      at.version = 1.7;
                      break;
                    default:
                      at.version = 1.3;
                      break;
                  }
                  at.compress = at.options.compress != null ? at.options.compress : !0, at._pageBuffer = [], at._pageBufferStart = 0, at._offsets = [], at._waiting = 0, at._ended = !1, at._offset = 0;
                  var mt = at.ref({
                    Type: "Pages",
                    Count: 0,
                    Kids: []
                  }), Ct = at.ref({
                    Dests: new V()
                  });
                  if (at._root = at.ref({
                    Type: "Catalog",
                    Pages: mt,
                    Names: Ct
                  }), at.options.lang && (at._root.data.Lang = new String(at.options.lang)), at.page = null, at.initMetadata(), at.initColor(), at.initVector(), at.initFonts(q.font), at.initText(), at.initImages(), at.initOutline(), at.initMarkings(q), at.initSubset(q), at.info = {
                    Producer: "PDFKit",
                    Creator: "PDFKit",
                    CreationDate: /* @__PURE__ */ new Date()
                  }, at.options.info)
                    for (var qt in at.options.info) {
                      var ae = at.options.info[qt];
                      at.info[qt] = ae;
                    }
                  return at.options.displayTitle && (at._root.data.ViewerPreferences = at.ref({
                    DisplayDocTitle: !0
                  })), at._id = lt.generateFileID(at.info), at._security = lt.create(b(at), q), at._write("%PDF-".concat(at.version)), at._write("%Ã¿Ã¿Ã¿Ã¿"), at.options.autoFirstPage !== !1 && at.addPage(), at;
                }
                return x(W, [{
                  key: "addPage",
                  value: function(q) {
                    q == null && (q = this.options), this.options.bufferPages || this.flushPages(), this.page = new k(this, q), this._pageBuffer.push(this.page);
                    var mt = this._root.data.Pages.data;
                    return mt.Kids.push(this.page.dictionary), mt.Count++, this.x = this.page.margins.left, this.y = this.page.margins.top, this._ctm = [1, 0, 0, 1, 0, 0], this.transform(1, 0, 0, -1, 0, this.page.height), this.emit("pageAdded"), this;
                  }
                }, {
                  key: "continueOnNewPage",
                  value: function(q) {
                    var mt = this.endPageMarkings(this.page);
                    return this.addPage(q), this.initPageMarkings(mt), this;
                  }
                }, {
                  key: "bufferedPageRange",
                  value: function() {
                    return {
                      start: this._pageBufferStart,
                      count: this._pageBuffer.length
                    };
                  }
                }, {
                  key: "switchToPage",
                  value: function(q) {
                    var mt;
                    if (!(mt = this._pageBuffer[q - this._pageBufferStart]))
                      throw new Error("switchToPage(".concat(q, ") out of bounds, current buffer covers pages ").concat(this._pageBufferStart, " to ").concat(this._pageBufferStart + this._pageBuffer.length - 1));
                    return this.page = mt;
                  }
                }, {
                  key: "flushPages",
                  value: function() {
                    var q = this._pageBuffer;
                    this._pageBuffer = [], this._pageBufferStart += q.length;
                    var mt = Lt(q), Ct;
                    try {
                      for (mt.s(); !(Ct = mt.n()).done; ) {
                        var qt = Ct.value;
                        this.endPageMarkings(qt), qt.end();
                      }
                    } catch (ae) {
                      mt.e(ae);
                    } finally {
                      mt.f();
                    }
                  }
                }, {
                  key: "addNamedDestination",
                  value: function(q) {
                    for (var mt = arguments.length, Ct = new Array(mt > 1 ? mt - 1 : 0), qt = 1; qt < mt; qt++)
                      Ct[qt - 1] = arguments[qt];
                    Ct.length === 0 && (Ct = ["XYZ", null, null, null]), Ct[0] === "XYZ" && Ct[2] !== null && (Ct[2] = this.page.height - Ct[2]), Ct.unshift(this.page.dictionary), this._root.data.Names.data.Dests.add(q, Ct);
                  }
                }, {
                  key: "addNamedEmbeddedFile",
                  value: function(q, mt) {
                    this._root.data.Names.data.EmbeddedFiles || (this._root.data.Names.data.EmbeddedFiles = new V({
                      limits: !1
                    })), this._root.data.Names.data.EmbeddedFiles.add(q, mt);
                  }
                }, {
                  key: "addNamedJavaScript",
                  value: function(q, mt) {
                    this._root.data.Names.data.JavaScript || (this._root.data.Names.data.JavaScript = new V());
                    var Ct = {
                      JS: new String(mt),
                      S: "JavaScript"
                    };
                    this._root.data.Names.data.JavaScript.add(q, Ct);
                  }
                }, {
                  key: "ref",
                  value: function(q) {
                    var mt = new Ft(this, this._offsets.length + 1, q);
                    return this._offsets.push(null), this._waiting++, mt;
                  }
                }, {
                  key: "_read",
                  value: function() {
                  }
                  // do nothing, but this method is required by node
                }, {
                  key: "_write",
                  value: function(q) {
                    return r.isBuffer(q) || (q = r.from(q + `
`, "binary")), this.push(q), this._offset += q.length;
                  }
                }, {
                  key: "addContent",
                  value: function(q) {
                    return this.page.write(q), this;
                  }
                }, {
                  key: "_refEnd",
                  value: function(q) {
                    if (this._offsets[q.id - 1] = q.offset, --this._waiting === 0 && this._ended)
                      return this._finalize(), this._ended = !1;
                  }
                }, {
                  key: "write",
                  value: function(q, mt) {
                    var Ct = new Error("PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream.");
                    return console.warn(Ct.stack), this.pipe(y.createWriteStream(q)), this.end(), this.once("end", mt);
                  }
                }, {
                  key: "end",
                  value: function() {
                    this.flushPages(), this._info = this.ref();
                    for (var q in this.info) {
                      var mt = this.info[q];
                      typeof mt == "string" && (mt = new String(mt));
                      var Ct = this.ref(mt);
                      Ct.end(), this._info.data[q] = Ct;
                    }
                    this._info.end();
                    for (var qt in this._fontFamilies) {
                      var ae = this._fontFamilies[qt];
                      ae.finalize();
                    }
                    return this.endOutline(), this.endMarkings(), this.subset && this.endSubset(), this.endMetadata(), this._root.end(), this._root.data.Pages.end(), this._root.data.Names.end(), this.endAcroForm(), this._root.data.ViewerPreferences && this._root.data.ViewerPreferences.end(), this._security && this._security.end(), this._waiting === 0 ? this._finalize() : this._ended = !0;
                  }
                }, {
                  key: "_finalize",
                  value: function() {
                    var q = this._offset;
                    this._write("xref"), this._write("0 ".concat(this._offsets.length + 1)), this._write("0000000000 65535 f ");
                    var mt = Lt(this._offsets), Ct;
                    try {
                      for (mt.s(); !(Ct = mt.n()).done; ) {
                        var qt = Ct.value;
                        qt = "0000000000".concat(qt).slice(-10), this._write(qt + " 00000 n ");
                      }
                    } catch (ve) {
                      mt.e(ve);
                    } finally {
                      mt.f();
                    }
                    var ae = {
                      Size: this._offsets.length + 1,
                      Root: this._root,
                      Info: this._info,
                      ID: [this._id, this._id]
                    };
                    return this._security && (ae.Encrypt = this._security.dictionary), this._write("trailer"), this._write(G.convert(ae)), this._write("startxref"), this._write("".concat(q)), this._write("%%EOF"), this.push(null);
                  }
                }, {
                  key: "toString",
                  value: function() {
                    return "[object PDFDocument]";
                  }
                }]), W;
              }(a.default.Readable), kn = function(Z) {
                Object.assign(Ta.prototype, Z);
              };
              kn(Ya), kn(Kn), kn(Gt), kn(ar), kn($e), kn(Tr), kn(Wr), kn(Dr), kn(ln), kn(ii), kn(ga), kn(Za), Ta.LineWrapper = ge, c.default = Ta;
            }
          ),
          /***/
          26949: (
            /***/
            function(l, c, t) {
              var s = t(82669), r = t(88706), a = r;
              typeof a.pdfMake == "undefined" && (a.pdfMake = s), l.exports = s;
            }
          ),
          /***/
          76118: (
            /***/
            function(l, c, t) {
              var s = t(82530);
              function r(C) {
                "@babel/helpers - typeof";
                return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(k) {
                  return typeof k;
                } : function(k) {
                  return k && typeof Symbol == "function" && k.constructor === Symbol && k !== Symbol.prototype ? "symbol" : typeof k;
                }, r(C);
              }
              function a(C, k) {
                for (var V = 0; V < k.length; V++) {
                  var ot = k[V];
                  ot.enumerable = ot.enumerable || !1, ot.configurable = !0, "value" in ot && (ot.writable = !0), Object.defineProperty(C, f(ot.key), ot);
                }
              }
              function o(C, k, V) {
                return k && a(C.prototype, k), V && a(C, V), Object.defineProperty(C, "prototype", { writable: !1 }), C;
              }
              function f(C) {
                var k = u(C, "string");
                return r(k) === "symbol" ? k : String(k);
              }
              function u(C, k) {
                if (r(C) !== "object" || C === null)
                  return C;
                var V = C[Symbol.toPrimitive];
                if (V !== void 0) {
                  var ot = V.call(C, k || "default");
                  if (r(ot) !== "object")
                    return ot;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (k === "string" ? String : Number)(C);
              }
              function h(C, k) {
                if (!(C instanceof k))
                  throw new TypeError("Cannot call a class as a function");
              }
              var d = t(78619), i = d.codes, p = i.ERR_AMBIGUOUS_ARGUMENT, y = i.ERR_INVALID_ARG_TYPE, m = i.ERR_INVALID_ARG_VALUE, e = i.ERR_INVALID_RETURN_VALUE, x = i.ERR_MISSING_ARGS, S = t(66979), P = t(85663), O = P.inspect, T = t(85663).types, A = T.isPromise, E = T.isRegExp, D = t(10293)(), b = t(25280)(), R = t(97615)("RegExp.prototype.test"), L, N;
              function M() {
                var C = t(61667);
                L = C.isDeepEqual, N = C.isDeepStrictEqual;
              }
              var K = !1, ct = l.exports = Tt, J = {};
              function nt(C) {
                throw C.message instanceof Error ? C.message : new S(C);
              }
              function yt(C, k, V, ot, et) {
                var tt = arguments.length, At;
                if (tt === 0)
                  At = "Failed";
                else if (tt === 1)
                  V = C, C = void 0;
                else {
                  if (K === !1) {
                    K = !0;
                    var Nt = s.emitWarning ? s.emitWarning : console.warn.bind(console);
                    Nt("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094");
                  }
                  tt === 2 && (ot = "!=");
                }
                if (V instanceof Error)
                  throw V;
                var Kt = {
                  actual: C,
                  expected: k,
                  operator: ot === void 0 ? "fail" : ot,
                  stackStartFn: et || yt
                };
                V !== void 0 && (Kt.message = V);
                var Vt = new S(Kt);
                throw At && (Vt.message = At, Vt.generatedMessage = !0), Vt;
              }
              ct.fail = yt, ct.AssertionError = S;
              function bt(C, k, V, ot) {
                if (!V) {
                  var et = !1;
                  if (k === 0)
                    et = !0, ot = "No value argument passed to `assert.ok()`";
                  else if (ot instanceof Error)
                    throw ot;
                  var tt = new S({
                    actual: V,
                    expected: !0,
                    message: ot,
                    operator: "==",
                    stackStartFn: C
                  });
                  throw tt.generatedMessage = et, tt;
                }
              }
              function Tt() {
                for (var C = arguments.length, k = new Array(C), V = 0; V < C; V++)
                  k[V] = arguments[V];
                bt.apply(void 0, [Tt, k.length].concat(k));
              }
              ct.ok = Tt, ct.equal = function C(k, V, ot) {
                if (arguments.length < 2)
                  throw new x("actual", "expected");
                k != V && nt({
                  actual: k,
                  expected: V,
                  message: ot,
                  operator: "==",
                  stackStartFn: C
                });
              }, ct.notEqual = function C(k, V, ot) {
                if (arguments.length < 2)
                  throw new x("actual", "expected");
                k == V && nt({
                  actual: k,
                  expected: V,
                  message: ot,
                  operator: "!=",
                  stackStartFn: C
                });
              }, ct.deepEqual = function C(k, V, ot) {
                if (arguments.length < 2)
                  throw new x("actual", "expected");
                L === void 0 && M(), L(k, V) || nt({
                  actual: k,
                  expected: V,
                  message: ot,
                  operator: "deepEqual",
                  stackStartFn: C
                });
              }, ct.notDeepEqual = function C(k, V, ot) {
                if (arguments.length < 2)
                  throw new x("actual", "expected");
                L === void 0 && M(), L(k, V) && nt({
                  actual: k,
                  expected: V,
                  message: ot,
                  operator: "notDeepEqual",
                  stackStartFn: C
                });
              }, ct.deepStrictEqual = function C(k, V, ot) {
                if (arguments.length < 2)
                  throw new x("actual", "expected");
                L === void 0 && M(), N(k, V) || nt({
                  actual: k,
                  expected: V,
                  message: ot,
                  operator: "deepStrictEqual",
                  stackStartFn: C
                });
              }, ct.notDeepStrictEqual = It;
              function It(C, k, V) {
                if (arguments.length < 2)
                  throw new x("actual", "expected");
                L === void 0 && M(), N(C, k) && nt({
                  actual: C,
                  expected: k,
                  message: V,
                  operator: "notDeepStrictEqual",
                  stackStartFn: It
                });
              }
              ct.strictEqual = function C(k, V, ot) {
                if (arguments.length < 2)
                  throw new x("actual", "expected");
                b(k, V) || nt({
                  actual: k,
                  expected: V,
                  message: ot,
                  operator: "strictEqual",
                  stackStartFn: C
                });
              }, ct.notStrictEqual = function C(k, V, ot) {
                if (arguments.length < 2)
                  throw new x("actual", "expected");
                b(k, V) && nt({
                  actual: k,
                  expected: V,
                  message: ot,
                  operator: "notStrictEqual",
                  stackStartFn: C
                });
              };
              var Lt = /* @__PURE__ */ o(function C(k, V, ot) {
                var et = this;
                h(this, C), V.forEach(function(tt) {
                  tt in k && (ot !== void 0 && typeof ot[tt] == "string" && E(k[tt]) && R(k[tt], ot[tt]) ? et[tt] = ot[tt] : et[tt] = k[tt]);
                });
              });
              function zt(C, k, V, ot, et, tt) {
                if (!(V in C) || !N(C[V], k[V])) {
                  if (!ot) {
                    var At = new Lt(C, et), Nt = new Lt(k, et, C), Kt = new S({
                      actual: At,
                      expected: Nt,
                      operator: "deepStrictEqual",
                      stackStartFn: tt
                    });
                    throw Kt.actual = C, Kt.expected = k, Kt.operator = tt.name, Kt;
                  }
                  nt({
                    actual: C,
                    expected: k,
                    message: ot,
                    operator: tt.name,
                    stackStartFn: tt
                  });
                }
              }
              function Q(C, k, V, ot) {
                if (typeof k != "function") {
                  if (E(k))
                    return R(k, C);
                  if (arguments.length === 2)
                    throw new y("expected", ["Function", "RegExp"], k);
                  if (r(C) !== "object" || C === null) {
                    var et = new S({
                      actual: C,
                      expected: k,
                      message: V,
                      operator: "deepStrictEqual",
                      stackStartFn: ot
                    });
                    throw et.operator = ot.name, et;
                  }
                  var tt = Object.keys(k);
                  if (k instanceof Error)
                    tt.push("name", "message");
                  else if (tt.length === 0)
                    throw new m("error", k, "may not be an empty object");
                  return L === void 0 && M(), tt.forEach(function(At) {
                    typeof C[At] == "string" && E(k[At]) && R(k[At], C[At]) || zt(C, k, At, V, tt, ot);
                  }), !0;
                }
                return k.prototype !== void 0 && C instanceof k ? !0 : Error.isPrototypeOf(k) ? !1 : k.call({}, C) === !0;
              }
              function gt(C) {
                if (typeof C != "function")
                  throw new y("fn", "Function", C);
                try {
                  C();
                } catch (k) {
                  return k;
                }
                return J;
              }
              function ht(C) {
                return A(C) || C !== null && r(C) === "object" && typeof C.then == "function" && typeof C.catch == "function";
              }
              function st(C) {
                return Promise.resolve().then(function() {
                  var k;
                  if (typeof C == "function") {
                    if (k = C(), !ht(k))
                      throw new e("instance of Promise", "promiseFn", k);
                  } else if (ht(C))
                    k = C;
                  else
                    throw new y("promiseFn", ["Function", "Promise"], C);
                  return Promise.resolve().then(function() {
                    return k;
                  }).then(function() {
                    return J;
                  }).catch(function(V) {
                    return V;
                  });
                });
              }
              function xt(C, k, V, ot) {
                if (typeof V == "string") {
                  if (arguments.length === 4)
                    throw new y("error", ["Object", "Error", "Function", "RegExp"], V);
                  if (r(k) === "object" && k !== null) {
                    if (k.message === V)
                      throw new p("error/message", 'The error message "'.concat(k.message, '" is identical to the message.'));
                  } else if (k === V)
                    throw new p("error/message", 'The error "'.concat(k, '" is identical to the message.'));
                  ot = V, V = void 0;
                } else if (V != null && r(V) !== "object" && typeof V != "function")
                  throw new y("error", ["Object", "Error", "Function", "RegExp"], V);
                if (k === J) {
                  var et = "";
                  V && V.name && (et += " (".concat(V.name, ")")), et += ot ? ": ".concat(ot) : ".";
                  var tt = C.name === "rejects" ? "rejection" : "exception";
                  nt({
                    actual: void 0,
                    expected: V,
                    operator: C.name,
                    message: "Missing expected ".concat(tt).concat(et),
                    stackStartFn: C
                  });
                }
                if (V && !Q(k, V, ot, C))
                  throw k;
              }
              function G(C, k, V, ot) {
                if (k !== J) {
                  if (typeof V == "string" && (ot = V, V = void 0), !V || Q(k, V)) {
                    var et = ot ? ": ".concat(ot) : ".", tt = C.name === "doesNotReject" ? "rejection" : "exception";
                    nt({
                      actual: k,
                      expected: V,
                      operator: C.name,
                      message: "Got unwanted ".concat(tt).concat(et, `
`) + 'Actual message: "'.concat(k && k.message, '"'),
                      stackStartFn: C
                    });
                  }
                  throw k;
                }
              }
              ct.throws = function C(k) {
                for (var V = arguments.length, ot = new Array(V > 1 ? V - 1 : 0), et = 1; et < V; et++)
                  ot[et - 1] = arguments[et];
                xt.apply(void 0, [C, gt(k)].concat(ot));
              }, ct.rejects = function C(k) {
                for (var V = arguments.length, ot = new Array(V > 1 ? V - 1 : 0), et = 1; et < V; et++)
                  ot[et - 1] = arguments[et];
                return st(k).then(function(tt) {
                  return xt.apply(void 0, [C, tt].concat(ot));
                });
              }, ct.doesNotThrow = function C(k) {
                for (var V = arguments.length, ot = new Array(V > 1 ? V - 1 : 0), et = 1; et < V; et++)
                  ot[et - 1] = arguments[et];
                G.apply(void 0, [C, gt(k)].concat(ot));
              }, ct.doesNotReject = function C(k) {
                for (var V = arguments.length, ot = new Array(V > 1 ? V - 1 : 0), et = 1; et < V; et++)
                  ot[et - 1] = arguments[et];
                return st(k).then(function(tt) {
                  return G.apply(void 0, [C, tt].concat(ot));
                });
              }, ct.ifError = function C(k) {
                if (k != null) {
                  var V = "ifError got unwanted exception: ";
                  r(k) === "object" && typeof k.message == "string" ? k.message.length === 0 && k.constructor ? V += k.constructor.name : V += k.message : V += O(k);
                  var ot = new S({
                    actual: k,
                    expected: null,
                    operator: "ifError",
                    message: V,
                    stackStartFn: C
                  }), et = k.stack;
                  if (typeof et == "string") {
                    var tt = et.split(`
`);
                    tt.shift();
                    for (var At = ot.stack.split(`
`), Nt = 0; Nt < tt.length; Nt++) {
                      var Kt = At.indexOf(tt[Nt]);
                      if (Kt !== -1) {
                        At = At.slice(0, Kt);
                        break;
                      }
                    }
                    ot.stack = "".concat(At.join(`
`), `
`).concat(tt.join(`
`));
                  }
                  throw ot;
                }
              };
              function Ft(C, k, V, ot, et) {
                if (!E(k))
                  throw new y("regexp", "RegExp", k);
                var tt = et === "match";
                if (typeof C != "string" || R(k, C) !== tt) {
                  if (V instanceof Error)
                    throw V;
                  var At = !V;
                  V = V || (typeof C != "string" ? 'The "string" argument must be of type string. Received type ' + "".concat(r(C), " (").concat(O(C), ")") : (tt ? "The input did not match the regular expression " : "The input was expected to not match the regular expression ") + "".concat(O(k), `. Input:

`).concat(O(C), `
`));
                  var Nt = new S({
                    actual: C,
                    expected: k,
                    message: V,
                    operator: et,
                    stackStartFn: ot
                  });
                  throw Nt.generatedMessage = At, Nt;
                }
              }
              ct.match = function C(k, V, ot) {
                Ft(k, V, ot, C, "match");
              }, ct.doesNotMatch = function C(k, V, ot) {
                Ft(k, V, ot, C, "doesNotMatch");
              };
              function z() {
                for (var C = arguments.length, k = new Array(C), V = 0; V < C; V++)
                  k[V] = arguments[V];
                bt.apply(void 0, [z, k.length].concat(k));
              }
              ct.strict = D(z, ct, {
                equal: ct.strictEqual,
                deepEqual: ct.deepStrictEqual,
                notEqual: ct.notStrictEqual,
                notDeepEqual: ct.notDeepStrictEqual
              }), ct.strict.strict = ct.strict;
            }
          ),
          /***/
          66979: (
            /***/
            function(l, c, t) {
              var s = t(82530);
              function r(Q, gt) {
                var ht = Object.keys(Q);
                if (Object.getOwnPropertySymbols) {
                  var st = Object.getOwnPropertySymbols(Q);
                  gt && (st = st.filter(function(xt) {
                    return Object.getOwnPropertyDescriptor(Q, xt).enumerable;
                  })), ht.push.apply(ht, st);
                }
                return ht;
              }
              function a(Q) {
                for (var gt = 1; gt < arguments.length; gt++) {
                  var ht = arguments[gt] != null ? arguments[gt] : {};
                  gt % 2 ? r(Object(ht), !0).forEach(function(st) {
                    o(Q, st, ht[st]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(Q, Object.getOwnPropertyDescriptors(ht)) : r(Object(ht)).forEach(function(st) {
                    Object.defineProperty(Q, st, Object.getOwnPropertyDescriptor(ht, st));
                  });
                }
                return Q;
              }
              function o(Q, gt, ht) {
                return gt = d(gt), gt in Q ? Object.defineProperty(Q, gt, { value: ht, enumerable: !0, configurable: !0, writable: !0 }) : Q[gt] = ht, Q;
              }
              function f(Q, gt) {
                if (!(Q instanceof gt))
                  throw new TypeError("Cannot call a class as a function");
              }
              function u(Q, gt) {
                for (var ht = 0; ht < gt.length; ht++) {
                  var st = gt[ht];
                  st.enumerable = st.enumerable || !1, st.configurable = !0, "value" in st && (st.writable = !0), Object.defineProperty(Q, d(st.key), st);
                }
              }
              function h(Q, gt, ht) {
                return gt && u(Q.prototype, gt), ht && u(Q, ht), Object.defineProperty(Q, "prototype", { writable: !1 }), Q;
              }
              function d(Q) {
                var gt = i(Q, "string");
                return E(gt) === "symbol" ? gt : String(gt);
              }
              function i(Q, gt) {
                if (E(Q) !== "object" || Q === null)
                  return Q;
                var ht = Q[Symbol.toPrimitive];
                if (ht !== void 0) {
                  var st = ht.call(Q, gt || "default");
                  if (E(st) !== "object")
                    return st;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (gt === "string" ? String : Number)(Q);
              }
              function p(Q, gt) {
                if (typeof gt != "function" && gt !== null)
                  throw new TypeError("Super expression must either be null or a function");
                Q.prototype = Object.create(gt && gt.prototype, { constructor: { value: Q, writable: !0, configurable: !0 } }), Object.defineProperty(Q, "prototype", { writable: !1 }), gt && T(Q, gt);
              }
              function y(Q) {
                var gt = P();
                return function() {
                  var st = A(Q), xt;
                  if (gt) {
                    var G = A(this).constructor;
                    xt = Reflect.construct(st, arguments, G);
                  } else
                    xt = st.apply(this, arguments);
                  return m(this, xt);
                };
              }
              function m(Q, gt) {
                if (gt && (E(gt) === "object" || typeof gt == "function"))
                  return gt;
                if (gt !== void 0)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return e(Q);
              }
              function e(Q) {
                if (Q === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return Q;
              }
              function x(Q) {
                var gt = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
                return x = function(st) {
                  if (st === null || !O(st))
                    return st;
                  if (typeof st != "function")
                    throw new TypeError("Super expression must either be null or a function");
                  if (typeof gt != "undefined") {
                    if (gt.has(st))
                      return gt.get(st);
                    gt.set(st, xt);
                  }
                  function xt() {
                    return S(st, arguments, A(this).constructor);
                  }
                  return xt.prototype = Object.create(st.prototype, { constructor: { value: xt, enumerable: !1, writable: !0, configurable: !0 } }), T(xt, st);
                }, x(Q);
              }
              function S(Q, gt, ht) {
                return P() ? S = Reflect.construct.bind() : S = function(xt, G, Ft) {
                  var z = [null];
                  z.push.apply(z, G);
                  var C = Function.bind.apply(xt, z), k = new C();
                  return Ft && T(k, Ft.prototype), k;
                }, S.apply(null, arguments);
              }
              function P() {
                if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), !0;
                } catch (Q) {
                  return !1;
                }
              }
              function O(Q) {
                return Function.toString.call(Q).indexOf("[native code]") !== -1;
              }
              function T(Q, gt) {
                return T = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(st, xt) {
                  return st.__proto__ = xt, st;
                }, T(Q, gt);
              }
              function A(Q) {
                return A = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ht) {
                  return ht.__proto__ || Object.getPrototypeOf(ht);
                }, A(Q);
              }
              function E(Q) {
                "@babel/helpers - typeof";
                return E = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(gt) {
                  return typeof gt;
                } : function(gt) {
                  return gt && typeof Symbol == "function" && gt.constructor === Symbol && gt !== Symbol.prototype ? "symbol" : typeof gt;
                }, E(Q);
              }
              var D = t(85663), b = D.inspect, R = t(78619), L = R.codes.ERR_INVALID_ARG_TYPE;
              function N(Q, gt, ht) {
                return (ht === void 0 || ht > Q.length) && (ht = Q.length), Q.substring(ht - gt.length, ht) === gt;
              }
              function M(Q, gt) {
                if (gt = Math.floor(gt), Q.length == 0 || gt == 0)
                  return "";
                var ht = Q.length * gt;
                for (gt = Math.floor(Math.log(gt) / Math.log(2)); gt; )
                  Q += Q, gt--;
                return Q += Q.substring(0, ht - Q.length), Q;
              }
              var K = "", ct = "", J = "", nt = "", yt = {
                deepStrictEqual: "Expected values to be strictly deep-equal:",
                strictEqual: "Expected values to be strictly equal:",
                strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
                deepEqual: "Expected values to be loosely deep-equal:",
                equal: "Expected values to be loosely equal:",
                notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
                notStrictEqual: 'Expected "actual" to be strictly unequal to:',
                notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
                notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
                notEqual: 'Expected "actual" to be loosely unequal to:',
                notIdentical: "Values identical but not reference-equal:"
              }, bt = 10;
              function Tt(Q) {
                var gt = Object.keys(Q), ht = Object.create(Object.getPrototypeOf(Q));
                return gt.forEach(function(st) {
                  ht[st] = Q[st];
                }), Object.defineProperty(ht, "message", {
                  value: Q.message
                }), ht;
              }
              function It(Q) {
                return b(Q, {
                  compact: !1,
                  customInspect: !1,
                  depth: 1e3,
                  maxArrayLength: 1 / 0,
                  // Assert compares only enumerable properties (with a few exceptions).
                  showHidden: !1,
                  // Having a long line as error is better than wrapping the line for
                  // comparison for now.
                  // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we
                  // have meta information about the inspected properties (i.e., know where
                  // in what line the property starts and ends).
                  breakLength: 1 / 0,
                  // Assert does not detect proxies currently.
                  showProxy: !1,
                  sorted: !0,
                  // Inspect getters as we also check them when comparing entries.
                  getters: !0
                });
              }
              function Lt(Q, gt, ht) {
                var st = "", xt = "", G = 0, Ft = "", z = !1, C = It(Q), k = C.split(`
`), V = It(gt).split(`
`), ot = 0, et = "";
                if (ht === "strictEqual" && E(Q) === "object" && E(gt) === "object" && Q !== null && gt !== null && (ht = "strictEqualObject"), k.length === 1 && V.length === 1 && k[0] !== V[0]) {
                  var tt = k[0].length + V[0].length;
                  if (tt <= bt) {
                    if ((E(Q) !== "object" || Q === null) && (E(gt) !== "object" || gt === null) && (Q !== 0 || gt !== 0))
                      return "".concat(yt[ht], `

`) + "".concat(k[0], " !== ").concat(V[0], `
`);
                  } else if (ht !== "strictEqualObject") {
                    var At = s.stderr && s.stderr.isTTY ? s.stderr.columns : 80;
                    if (tt < At) {
                      for (; k[0][ot] === V[0][ot]; )
                        ot++;
                      ot > 2 && (et = `
  `.concat(M(" ", ot), "^"), ot = 0);
                    }
                  }
                }
                for (var Nt = k[k.length - 1], Kt = V[V.length - 1]; Nt === Kt && (ot++ < 2 ? Ft = `
  `.concat(Nt).concat(Ft) : st = Nt, k.pop(), V.pop(), !(k.length === 0 || V.length === 0)); )
                  Nt = k[k.length - 1], Kt = V[V.length - 1];
                var Vt = Math.max(k.length, V.length);
                if (Vt === 0) {
                  var Ot = C.split(`
`);
                  if (Ot.length > 30)
                    for (Ot[26] = "".concat(K, "...").concat(nt); Ot.length > 27; )
                      Ot.pop();
                  return "".concat(yt.notIdentical, `

`).concat(Ot.join(`
`), `
`);
                }
                ot > 3 && (Ft = `
`.concat(K, "...").concat(nt).concat(Ft), z = !0), st !== "" && (Ft = `
  `.concat(st).concat(Ft), st = "");
                var ie = 0, Ae = yt[ht] + `
`.concat(ct, "+ actual").concat(nt, " ").concat(J, "- expected").concat(nt), be = " ".concat(K, "...").concat(nt, " Lines skipped");
                for (ot = 0; ot < Vt; ot++) {
                  var de = ot - G;
                  if (k.length < ot + 1)
                    de > 1 && ot > 2 && (de > 4 ? (xt += `
`.concat(K, "...").concat(nt), z = !0) : de > 3 && (xt += `
  `.concat(V[ot - 2]), ie++), xt += `
  `.concat(V[ot - 1]), ie++), G = ot, st += `
`.concat(J, "-").concat(nt, " ").concat(V[ot]), ie++;
                  else if (V.length < ot + 1)
                    de > 1 && ot > 2 && (de > 4 ? (xt += `
`.concat(K, "...").concat(nt), z = !0) : de > 3 && (xt += `
  `.concat(k[ot - 2]), ie++), xt += `
  `.concat(k[ot - 1]), ie++), G = ot, xt += `
`.concat(ct, "+").concat(nt, " ").concat(k[ot]), ie++;
                  else {
                    var Se = V[ot], Wt = k[ot], _t = Wt !== Se && (!N(Wt, ",") || Wt.slice(0, -1) !== Se);
                    _t && N(Se, ",") && Se.slice(0, -1) === Wt && (_t = !1, Wt += ","), _t ? (de > 1 && ot > 2 && (de > 4 ? (xt += `
`.concat(K, "...").concat(nt), z = !0) : de > 3 && (xt += `
  `.concat(k[ot - 2]), ie++), xt += `
  `.concat(k[ot - 1]), ie++), G = ot, xt += `
`.concat(ct, "+").concat(nt, " ").concat(Wt), st += `
`.concat(J, "-").concat(nt, " ").concat(Se), ie += 2) : (xt += st, st = "", (de === 1 || ot === 0) && (xt += `
  `.concat(Wt), ie++));
                  }
                  if (ie > 20 && ot < Vt - 2)
                    return "".concat(Ae).concat(be, `
`).concat(xt, `
`).concat(K, "...").concat(nt).concat(st, `
`) + "".concat(K, "...").concat(nt);
                }
                return "".concat(Ae).concat(z ? be : "", `
`).concat(xt).concat(st).concat(Ft).concat(et);
              }
              var zt = /* @__PURE__ */ function(Q, gt) {
                p(st, Q);
                var ht = y(st);
                function st(xt) {
                  var G;
                  if (f(this, st), E(xt) !== "object" || xt === null)
                    throw new L("options", "Object", xt);
                  var Ft = xt.message, z = xt.operator, C = xt.stackStartFn, k = xt.actual, V = xt.expected, ot = Error.stackTraceLimit;
                  if (Error.stackTraceLimit = 0, Ft != null)
                    G = ht.call(this, String(Ft));
                  else if (s.stderr && s.stderr.isTTY && (s.stderr && s.stderr.getColorDepth && s.stderr.getColorDepth() !== 1 ? (K = "\x1B[34m", ct = "\x1B[32m", nt = "\x1B[39m", J = "\x1B[31m") : (K = "", ct = "", nt = "", J = "")), E(k) === "object" && k !== null && E(V) === "object" && V !== null && "stack" in k && k instanceof Error && "stack" in V && V instanceof Error && (k = Tt(k), V = Tt(V)), z === "deepStrictEqual" || z === "strictEqual")
                    G = ht.call(this, Lt(k, V, z));
                  else if (z === "notDeepStrictEqual" || z === "notStrictEqual") {
                    var et = yt[z], tt = It(k).split(`
`);
                    if (z === "notStrictEqual" && E(k) === "object" && k !== null && (et = yt.notStrictEqualObject), tt.length > 30)
                      for (tt[26] = "".concat(K, "...").concat(nt); tt.length > 27; )
                        tt.pop();
                    tt.length === 1 ? G = ht.call(this, "".concat(et, " ").concat(tt[0])) : G = ht.call(this, "".concat(et, `

`).concat(tt.join(`
`), `
`));
                  } else {
                    var At = It(k), Nt = "", Kt = yt[z];
                    z === "notDeepEqual" || z === "notEqual" ? (At = "".concat(yt[z], `

`).concat(At), At.length > 1024 && (At = "".concat(At.slice(0, 1021), "..."))) : (Nt = "".concat(It(V)), At.length > 512 && (At = "".concat(At.slice(0, 509), "...")), Nt.length > 512 && (Nt = "".concat(Nt.slice(0, 509), "...")), z === "deepEqual" || z === "equal" ? At = "".concat(Kt, `

`).concat(At, `

should equal

`) : Nt = " ".concat(z, " ").concat(Nt)), G = ht.call(this, "".concat(At).concat(Nt));
                  }
                  return Error.stackTraceLimit = ot, G.generatedMessage = !Ft, Object.defineProperty(e(G), "name", {
                    value: "AssertionError [ERR_ASSERTION]",
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                  }), G.code = "ERR_ASSERTION", G.actual = k, G.expected = V, G.operator = z, Error.captureStackTrace && Error.captureStackTrace(e(G), C), G.stack, G.name = "AssertionError", m(G);
                }
                return h(st, [{
                  key: "toString",
                  value: function() {
                    return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
                  }
                }, {
                  key: gt,
                  value: function(G, Ft) {
                    return b(this, a(a({}, Ft), {}, {
                      customInspect: !1,
                      depth: 0
                    }));
                  }
                }]), st;
              }(/* @__PURE__ */ x(Error), b.custom);
              l.exports = zt;
            }
          ),
          /***/
          78619: (
            /***/
            function(l, c, t) {
              function s(b) {
                "@babel/helpers - typeof";
                return s = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(R) {
                  return typeof R;
                } : function(R) {
                  return R && typeof Symbol == "function" && R.constructor === Symbol && R !== Symbol.prototype ? "symbol" : typeof R;
                }, s(b);
              }
              function r(b, R) {
                for (var L = 0; L < R.length; L++) {
                  var N = R[L];
                  N.enumerable = N.enumerable || !1, N.configurable = !0, "value" in N && (N.writable = !0), Object.defineProperty(b, o(N.key), N);
                }
              }
              function a(b, R, L) {
                return R && r(b.prototype, R), L && r(b, L), Object.defineProperty(b, "prototype", { writable: !1 }), b;
              }
              function o(b) {
                var R = f(b, "string");
                return s(R) === "symbol" ? R : String(R);
              }
              function f(b, R) {
                if (s(b) !== "object" || b === null)
                  return b;
                var L = b[Symbol.toPrimitive];
                if (L !== void 0) {
                  var N = L.call(b, R || "default");
                  if (s(N) !== "object")
                    return N;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (R === "string" ? String : Number)(b);
              }
              function u(b, R) {
                if (!(b instanceof R))
                  throw new TypeError("Cannot call a class as a function");
              }
              function h(b, R) {
                if (typeof R != "function" && R !== null)
                  throw new TypeError("Super expression must either be null or a function");
                b.prototype = Object.create(R && R.prototype, { constructor: { value: b, writable: !0, configurable: !0 } }), Object.defineProperty(b, "prototype", { writable: !1 }), R && d(b, R);
              }
              function d(b, R) {
                return d = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(N, M) {
                  return N.__proto__ = M, N;
                }, d(b, R);
              }
              function i(b) {
                var R = m();
                return function() {
                  var N = e(b), M;
                  if (R) {
                    var K = e(this).constructor;
                    M = Reflect.construct(N, arguments, K);
                  } else
                    M = N.apply(this, arguments);
                  return p(this, M);
                };
              }
              function p(b, R) {
                if (R && (s(R) === "object" || typeof R == "function"))
                  return R;
                if (R !== void 0)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return y(b);
              }
              function y(b) {
                if (b === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return b;
              }
              function m() {
                if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), !0;
                } catch (b) {
                  return !1;
                }
              }
              function e(b) {
                return e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(L) {
                  return L.__proto__ || Object.getPrototypeOf(L);
                }, e(b);
              }
              var x = {}, S, P;
              function O(b, R, L) {
                L || (L = Error);
                function N(K, ct, J) {
                  return typeof R == "string" ? R : R(K, ct, J);
                }
                var M = /* @__PURE__ */ function(K) {
                  h(J, K);
                  var ct = i(J);
                  function J(nt, yt, bt) {
                    var Tt;
                    return u(this, J), Tt = ct.call(this, N(nt, yt, bt)), Tt.code = b, Tt;
                  }
                  return a(J);
                }(L);
                x[b] = M;
              }
              function T(b, R) {
                if (Array.isArray(b)) {
                  var L = b.length;
                  return b = b.map(function(N) {
                    return String(N);
                  }), L > 2 ? "one of ".concat(R, " ").concat(b.slice(0, L - 1).join(", "), ", or ") + b[L - 1] : L === 2 ? "one of ".concat(R, " ").concat(b[0], " or ").concat(b[1]) : "of ".concat(R, " ").concat(b[0]);
                } else
                  return "of ".concat(R, " ").concat(String(b));
              }
              function A(b, R, L) {
                return b.substr(!L || L < 0 ? 0 : +L, R.length) === R;
              }
              function E(b, R, L) {
                return (L === void 0 || L > b.length) && (L = b.length), b.substring(L - R.length, L) === R;
              }
              function D(b, R, L) {
                return typeof L != "number" && (L = 0), L + R.length > b.length ? !1 : b.indexOf(R, L) !== -1;
              }
              O("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), O("ERR_INVALID_ARG_TYPE", function(b, R, L) {
                S === void 0 && (S = t(76118)), S(typeof b == "string", "'name' must be a string");
                var N;
                typeof R == "string" && A(R, "not ") ? (N = "must not be", R = R.replace(/^not /, "")) : N = "must be";
                var M;
                if (E(b, " argument"))
                  M = "The ".concat(b, " ").concat(N, " ").concat(T(R, "type"));
                else {
                  var K = D(b, ".") ? "property" : "argument";
                  M = 'The "'.concat(b, '" ').concat(K, " ").concat(N, " ").concat(T(R, "type"));
                }
                return M += ". Received type ".concat(s(L)), M;
              }, TypeError), O("ERR_INVALID_ARG_VALUE", function(b, R) {
                var L = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "is invalid";
                P === void 0 && (P = t(85663));
                var N = P.inspect(R);
                return N.length > 128 && (N = "".concat(N.slice(0, 128), "...")), "The argument '".concat(b, "' ").concat(L, ". Received ").concat(N);
              }, TypeError), O("ERR_INVALID_RETURN_VALUE", function(b, R, L) {
                var N;
                return L && L.constructor && L.constructor.name ? N = "instance of ".concat(L.constructor.name) : N = "type ".concat(s(L)), "Expected ".concat(b, ' to be returned from the "').concat(R, '"') + " function but got ".concat(N, ".");
              }, TypeError), O("ERR_MISSING_ARGS", function() {
                for (var b = arguments.length, R = new Array(b), L = 0; L < b; L++)
                  R[L] = arguments[L];
                S === void 0 && (S = t(76118)), S(R.length > 0, "At least one arg needs to be specified");
                var N = "The ", M = R.length;
                switch (R = R.map(function(K) {
                  return '"'.concat(K, '"');
                }), M) {
                  case 1:
                    N += "".concat(R[0], " argument");
                    break;
                  case 2:
                    N += "".concat(R[0], " and ").concat(R[1], " arguments");
                    break;
                  default:
                    N += R.slice(0, M - 1).join(", "), N += ", and ".concat(R[M - 1], " arguments");
                    break;
                }
                return "".concat(N, " must be specified");
              }, TypeError), l.exports.codes = x;
            }
          ),
          /***/
          61667: (
            /***/
            function(l, c, t) {
              function s(Wt, _t) {
                return u(Wt) || f(Wt, _t) || a(Wt, _t) || r();
              }
              function r() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function a(Wt, _t) {
                if (Wt) {
                  if (typeof Wt == "string")
                    return o(Wt, _t);
                  var ce = Object.prototype.toString.call(Wt).slice(8, -1);
                  if (ce === "Object" && Wt.constructor && (ce = Wt.constructor.name), ce === "Map" || ce === "Set")
                    return Array.from(Wt);
                  if (ce === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(ce))
                    return o(Wt, _t);
                }
              }
              function o(Wt, _t) {
                (_t == null || _t > Wt.length) && (_t = Wt.length);
                for (var ce = 0, pe = new Array(_t); ce < _t; ce++)
                  pe[ce] = Wt[ce];
                return pe;
              }
              function f(Wt, _t) {
                var ce = Wt == null ? null : typeof Symbol != "undefined" && Wt[Symbol.iterator] || Wt["@@iterator"];
                if (ce != null) {
                  var pe, we, Be, Ie, Dt = [], ue = !0, lt = !1;
                  try {
                    if (Be = (ce = ce.call(Wt)).next, _t === 0) {
                      if (Object(ce) !== ce)
                        return;
                      ue = !1;
                    } else
                      for (; !(ue = (pe = Be.call(ce)).done) && (Dt.push(pe.value), Dt.length !== _t); ue = !0)
                        ;
                  } catch (Y) {
                    lt = !0, we = Y;
                  } finally {
                    try {
                      if (!ue && ce.return != null && (Ie = ce.return(), Object(Ie) !== Ie))
                        return;
                    } finally {
                      if (lt)
                        throw we;
                    }
                  }
                  return Dt;
                }
              }
              function u(Wt) {
                if (Array.isArray(Wt))
                  return Wt;
              }
              function h(Wt) {
                "@babel/helpers - typeof";
                return h = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(_t) {
                  return typeof _t;
                } : function(_t) {
                  return _t && typeof Symbol == "function" && _t.constructor === Symbol && _t !== Symbol.prototype ? "symbol" : typeof _t;
                }, h(Wt);
              }
              var d = /a/g.flags !== void 0, i = function(_t) {
                var ce = [];
                return _t.forEach(function(pe) {
                  return ce.push(pe);
                }), ce;
              }, p = function(_t) {
                var ce = [];
                return _t.forEach(function(pe, we) {
                  return ce.push([we, pe]);
                }), ce;
              }, y = Object.is ? Object.is : t(7402), m = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
                return [];
              }, e = Number.isNaN ? Number.isNaN : t(98622);
              function x(Wt) {
                return Wt.call.bind(Wt);
              }
              var S = x(Object.prototype.hasOwnProperty), P = x(Object.prototype.propertyIsEnumerable), O = x(Object.prototype.toString), T = t(85663).types, A = T.isAnyArrayBuffer, E = T.isArrayBufferView, D = T.isDate, b = T.isMap, R = T.isRegExp, L = T.isSet, N = T.isNativeError, M = T.isBoxedPrimitive, K = T.isNumberObject, ct = T.isStringObject, J = T.isBooleanObject, nt = T.isBigIntObject, yt = T.isSymbolObject, bt = T.isFloat32Array, Tt = T.isFloat64Array;
              function It(Wt) {
                if (Wt.length === 0 || Wt.length > 10)
                  return !0;
                for (var _t = 0; _t < Wt.length; _t++) {
                  var ce = Wt.charCodeAt(_t);
                  if (ce < 48 || ce > 57)
                    return !0;
                }
                return Wt.length === 10 && Wt >= Math.pow(2, 32);
              }
              function Lt(Wt) {
                return Object.keys(Wt).filter(It).concat(m(Wt).filter(Object.prototype.propertyIsEnumerable.bind(Wt)));
              }
              /*!
               * The buffer module from node.js, for the browser.
               *
               * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
               * @license  MIT
               */
              function zt(Wt, _t) {
                if (Wt === _t)
                  return 0;
                for (var ce = Wt.length, pe = _t.length, we = 0, Be = Math.min(ce, pe); we < Be; ++we)
                  if (Wt[we] !== _t[we]) {
                    ce = Wt[we], pe = _t[we];
                    break;
                  }
                return ce < pe ? -1 : pe < ce ? 1 : 0;
              }
              var Q = !0, gt = !1, ht = 0, st = 1, xt = 2, G = 3;
              function Ft(Wt, _t) {
                return d ? Wt.source === _t.source && Wt.flags === _t.flags : RegExp.prototype.toString.call(Wt) === RegExp.prototype.toString.call(_t);
              }
              function z(Wt, _t) {
                if (Wt.byteLength !== _t.byteLength)
                  return !1;
                for (var ce = 0; ce < Wt.byteLength; ce++)
                  if (Wt[ce] !== _t[ce])
                    return !1;
                return !0;
              }
              function C(Wt, _t) {
                return Wt.byteLength !== _t.byteLength ? !1 : zt(new Uint8Array(Wt.buffer, Wt.byteOffset, Wt.byteLength), new Uint8Array(_t.buffer, _t.byteOffset, _t.byteLength)) === 0;
              }
              function k(Wt, _t) {
                return Wt.byteLength === _t.byteLength && zt(new Uint8Array(Wt), new Uint8Array(_t)) === 0;
              }
              function V(Wt, _t) {
                return K(Wt) ? K(_t) && y(Number.prototype.valueOf.call(Wt), Number.prototype.valueOf.call(_t)) : ct(Wt) ? ct(_t) && String.prototype.valueOf.call(Wt) === String.prototype.valueOf.call(_t) : J(Wt) ? J(_t) && Boolean.prototype.valueOf.call(Wt) === Boolean.prototype.valueOf.call(_t) : nt(Wt) ? nt(_t) && BigInt.prototype.valueOf.call(Wt) === BigInt.prototype.valueOf.call(_t) : yt(_t) && Symbol.prototype.valueOf.call(Wt) === Symbol.prototype.valueOf.call(_t);
              }
              function ot(Wt, _t, ce, pe) {
                if (Wt === _t)
                  return Wt !== 0 ? !0 : ce ? y(Wt, _t) : !0;
                if (ce) {
                  if (h(Wt) !== "object")
                    return typeof Wt == "number" && e(Wt) && e(_t);
                  if (h(_t) !== "object" || Wt === null || _t === null || Object.getPrototypeOf(Wt) !== Object.getPrototypeOf(_t))
                    return !1;
                } else {
                  if (Wt === null || h(Wt) !== "object")
                    return _t === null || h(_t) !== "object" ? Wt == _t : !1;
                  if (_t === null || h(_t) !== "object")
                    return !1;
                }
                var we = O(Wt), Be = O(_t);
                if (we !== Be)
                  return !1;
                if (Array.isArray(Wt)) {
                  if (Wt.length !== _t.length)
                    return !1;
                  var Ie = Lt(Wt), Dt = Lt(_t);
                  return Ie.length !== Dt.length ? !1 : tt(Wt, _t, ce, pe, st, Ie);
                }
                if (we === "[object Object]" && (!b(Wt) && b(_t) || !L(Wt) && L(_t)))
                  return !1;
                if (D(Wt)) {
                  if (!D(_t) || Date.prototype.getTime.call(Wt) !== Date.prototype.getTime.call(_t))
                    return !1;
                } else if (R(Wt)) {
                  if (!R(_t) || !Ft(Wt, _t))
                    return !1;
                } else if (N(Wt) || Wt instanceof Error) {
                  if (Wt.message !== _t.message || Wt.name !== _t.name)
                    return !1;
                } else if (E(Wt)) {
                  if (!ce && (bt(Wt) || Tt(Wt))) {
                    if (!z(Wt, _t))
                      return !1;
                  } else if (!C(Wt, _t))
                    return !1;
                  var ue = Lt(Wt), lt = Lt(_t);
                  return ue.length !== lt.length ? !1 : tt(Wt, _t, ce, pe, ht, ue);
                } else {
                  if (L(Wt))
                    return !L(_t) || Wt.size !== _t.size ? !1 : tt(Wt, _t, ce, pe, xt);
                  if (b(Wt))
                    return !b(_t) || Wt.size !== _t.size ? !1 : tt(Wt, _t, ce, pe, G);
                  if (A(Wt)) {
                    if (!k(Wt, _t))
                      return !1;
                  } else if (M(Wt) && !V(Wt, _t))
                    return !1;
                }
                return tt(Wt, _t, ce, pe, ht);
              }
              function et(Wt, _t) {
                return _t.filter(function(ce) {
                  return P(Wt, ce);
                });
              }
              function tt(Wt, _t, ce, pe, we, Be) {
                if (arguments.length === 5) {
                  Be = Object.keys(Wt);
                  var Ie = Object.keys(_t);
                  if (Be.length !== Ie.length)
                    return !1;
                }
                for (var Dt = 0; Dt < Be.length; Dt++)
                  if (!S(_t, Be[Dt]))
                    return !1;
                if (ce && arguments.length === 5) {
                  var ue = m(Wt);
                  if (ue.length !== 0) {
                    var lt = 0;
                    for (Dt = 0; Dt < ue.length; Dt++) {
                      var Y = ue[Dt];
                      if (P(Wt, Y)) {
                        if (!P(_t, Y))
                          return !1;
                        Be.push(Y), lt++;
                      } else if (P(_t, Y))
                        return !1;
                    }
                    var j = m(_t);
                    if (ue.length !== j.length && et(_t, j).length !== lt)
                      return !1;
                  } else {
                    var wt = m(_t);
                    if (wt.length !== 0 && et(_t, wt).length !== 0)
                      return !1;
                  }
                }
                if (Be.length === 0 && (we === ht || we === st && Wt.length === 0 || Wt.size === 0))
                  return !0;
                if (pe === void 0)
                  pe = {
                    val1: /* @__PURE__ */ new Map(),
                    val2: /* @__PURE__ */ new Map(),
                    position: 0
                  };
                else {
                  var it = pe.val1.get(Wt);
                  if (it !== void 0) {
                    var Ht = pe.val2.get(_t);
                    if (Ht !== void 0)
                      return it === Ht;
                  }
                  pe.position++;
                }
                pe.val1.set(Wt, pe.position), pe.val2.set(_t, pe.position);
                var te = be(Wt, _t, ce, Be, pe, we);
                return pe.val1.delete(Wt), pe.val2.delete(_t), te;
              }
              function At(Wt, _t, ce, pe) {
                for (var we = i(Wt), Be = 0; Be < we.length; Be++) {
                  var Ie = we[Be];
                  if (ot(_t, Ie, ce, pe))
                    return Wt.delete(Ie), !0;
                }
                return !1;
              }
              function Nt(Wt) {
                switch (h(Wt)) {
                  case "undefined":
                    return null;
                  case "object":
                    return;
                  case "symbol":
                    return !1;
                  case "string":
                    Wt = +Wt;
                  case "number":
                    if (e(Wt))
                      return !1;
                }
                return !0;
              }
              function Kt(Wt, _t, ce) {
                var pe = Nt(ce);
                return pe != null ? pe : _t.has(pe) && !Wt.has(pe);
              }
              function Vt(Wt, _t, ce, pe, we) {
                var Be = Nt(ce);
                if (Be != null)
                  return Be;
                var Ie = _t.get(Be);
                return Ie === void 0 && !_t.has(Be) || !ot(pe, Ie, !1, we) ? !1 : !Wt.has(Be) && ot(pe, Ie, !1, we);
              }
              function Ot(Wt, _t, ce, pe) {
                for (var we = null, Be = i(Wt), Ie = 0; Ie < Be.length; Ie++) {
                  var Dt = Be[Ie];
                  if (h(Dt) === "object" && Dt !== null)
                    we === null && (we = /* @__PURE__ */ new Set()), we.add(Dt);
                  else if (!_t.has(Dt)) {
                    if (ce || !Kt(Wt, _t, Dt))
                      return !1;
                    we === null && (we = /* @__PURE__ */ new Set()), we.add(Dt);
                  }
                }
                if (we !== null) {
                  for (var ue = i(_t), lt = 0; lt < ue.length; lt++) {
                    var Y = ue[lt];
                    if (h(Y) === "object" && Y !== null) {
                      if (!At(we, Y, ce, pe))
                        return !1;
                    } else if (!ce && !Wt.has(Y) && !At(we, Y, ce, pe))
                      return !1;
                  }
                  return we.size === 0;
                }
                return !0;
              }
              function ie(Wt, _t, ce, pe, we, Be) {
                for (var Ie = i(Wt), Dt = 0; Dt < Ie.length; Dt++) {
                  var ue = Ie[Dt];
                  if (ot(ce, ue, we, Be) && ot(pe, _t.get(ue), we, Be))
                    return Wt.delete(ue), !0;
                }
                return !1;
              }
              function Ae(Wt, _t, ce, pe) {
                for (var we = null, Be = p(Wt), Ie = 0; Ie < Be.length; Ie++) {
                  var Dt = s(Be[Ie], 2), ue = Dt[0], lt = Dt[1];
                  if (h(ue) === "object" && ue !== null)
                    we === null && (we = /* @__PURE__ */ new Set()), we.add(ue);
                  else {
                    var Y = _t.get(ue);
                    if (Y === void 0 && !_t.has(ue) || !ot(lt, Y, ce, pe)) {
                      if (ce || !Vt(Wt, _t, ue, lt, pe))
                        return !1;
                      we === null && (we = /* @__PURE__ */ new Set()), we.add(ue);
                    }
                  }
                }
                if (we !== null) {
                  for (var j = p(_t), wt = 0; wt < j.length; wt++) {
                    var it = s(j[wt], 2), Ht = it[0], te = it[1];
                    if (h(Ht) === "object" && Ht !== null) {
                      if (!ie(we, Wt, Ht, te, ce, pe))
                        return !1;
                    } else if (!ce && (!Wt.has(Ht) || !ot(Wt.get(Ht), te, !1, pe)) && !ie(we, Wt, Ht, te, !1, pe))
                      return !1;
                  }
                  return we.size === 0;
                }
                return !0;
              }
              function be(Wt, _t, ce, pe, we, Be) {
                var Ie = 0;
                if (Be === xt) {
                  if (!Ot(Wt, _t, ce, we))
                    return !1;
                } else if (Be === G) {
                  if (!Ae(Wt, _t, ce, we))
                    return !1;
                } else if (Be === st)
                  for (; Ie < Wt.length; Ie++)
                    if (S(Wt, Ie)) {
                      if (!S(_t, Ie) || !ot(Wt[Ie], _t[Ie], ce, we))
                        return !1;
                    } else {
                      if (S(_t, Ie))
                        return !1;
                      for (var Dt = Object.keys(Wt); Ie < Dt.length; Ie++) {
                        var ue = Dt[Ie];
                        if (!S(_t, ue) || !ot(Wt[ue], _t[ue], ce, we))
                          return !1;
                      }
                      return Dt.length === Object.keys(_t).length;
                    }
                for (Ie = 0; Ie < pe.length; Ie++) {
                  var lt = pe[Ie];
                  if (!ot(Wt[lt], _t[lt], ce, we))
                    return !1;
                }
                return !0;
              }
              function de(Wt, _t) {
                return ot(Wt, _t, gt);
              }
              function Se(Wt, _t) {
                return ot(Wt, _t, Q);
              }
              l.exports = {
                isDeepEqual: de,
                isDeepStrictEqual: Se
              };
            }
          ),
          /***/
          5155: (
            /***/
            function(l, c) {
              c.byteLength = h, c.toByteArray = i, c.fromByteArray = m;
              for (var t = [], s = [], r = typeof Uint8Array != "undefined" ? Uint8Array : Array, a = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0, f = a.length; o < f; ++o)
                t[o] = a[o], s[a.charCodeAt(o)] = o;
              s["-".charCodeAt(0)] = 62, s["_".charCodeAt(0)] = 63;
              function u(e) {
                var x = e.length;
                if (x % 4 > 0)
                  throw new Error("Invalid string. Length must be a multiple of 4");
                var S = e.indexOf("=");
                S === -1 && (S = x);
                var P = S === x ? 0 : 4 - S % 4;
                return [S, P];
              }
              function h(e) {
                var x = u(e), S = x[0], P = x[1];
                return (S + P) * 3 / 4 - P;
              }
              function d(e, x, S) {
                return (x + S) * 3 / 4 - S;
              }
              function i(e) {
                var x, S = u(e), P = S[0], O = S[1], T = new r(d(e, P, O)), A = 0, E = O > 0 ? P - 4 : P, D;
                for (D = 0; D < E; D += 4)
                  x = s[e.charCodeAt(D)] << 18 | s[e.charCodeAt(D + 1)] << 12 | s[e.charCodeAt(D + 2)] << 6 | s[e.charCodeAt(D + 3)], T[A++] = x >> 16 & 255, T[A++] = x >> 8 & 255, T[A++] = x & 255;
                return O === 2 && (x = s[e.charCodeAt(D)] << 2 | s[e.charCodeAt(D + 1)] >> 4, T[A++] = x & 255), O === 1 && (x = s[e.charCodeAt(D)] << 10 | s[e.charCodeAt(D + 1)] << 4 | s[e.charCodeAt(D + 2)] >> 2, T[A++] = x >> 8 & 255, T[A++] = x & 255), T;
              }
              function p(e) {
                return t[e >> 18 & 63] + t[e >> 12 & 63] + t[e >> 6 & 63] + t[e & 63];
              }
              function y(e, x, S) {
                for (var P, O = [], T = x; T < S; T += 3)
                  P = (e[T] << 16 & 16711680) + (e[T + 1] << 8 & 65280) + (e[T + 2] & 255), O.push(p(P));
                return O.join("");
              }
              function m(e) {
                for (var x, S = e.length, P = S % 3, O = [], T = 16383, A = 0, E = S - P; A < E; A += T)
                  O.push(y(
                    e,
                    A,
                    A + T > E ? E : A + T
                  ));
                return P === 1 ? (x = e[S - 1], O.push(
                  t[x >> 2] + t[x << 4 & 63] + "=="
                )) : P === 2 && (x = (e[S - 2] << 8) + e[S - 1], O.push(
                  t[x >> 10] + t[x >> 4 & 63] + t[x << 2 & 63] + "="
                )), O.join("");
              }
            }
          ),
          /***/
          56887: (
            /***/
            function(l) {
              var c = 4096, t = 2 * c + 32, s = 2 * c - 1, r = new Uint32Array([
                0,
                1,
                3,
                7,
                15,
                31,
                63,
                127,
                255,
                511,
                1023,
                2047,
                4095,
                8191,
                16383,
                32767,
                65535,
                131071,
                262143,
                524287,
                1048575,
                2097151,
                4194303,
                8388607,
                16777215
              ]);
              function a(o) {
                this.buf_ = new Uint8Array(t), this.input_ = o, this.reset();
              }
              a.READ_SIZE = c, a.IBUF_MASK = s, a.prototype.reset = function() {
                this.buf_ptr_ = 0, this.val_ = 0, this.pos_ = 0, this.bit_pos_ = 0, this.bit_end_pos_ = 0, this.eos_ = 0, this.readMoreInput();
                for (var o = 0; o < 4; o++)
                  this.val_ |= this.buf_[this.pos_] << 8 * o, ++this.pos_;
                return this.bit_end_pos_ > 0;
              }, a.prototype.readMoreInput = function() {
                if (!(this.bit_end_pos_ > 256))
                  if (this.eos_) {
                    if (this.bit_pos_ > this.bit_end_pos_)
                      throw new Error("Unexpected end of input " + this.bit_pos_ + " " + this.bit_end_pos_);
                  } else {
                    var o = this.buf_ptr_, f = this.input_.read(this.buf_, o, c);
                    if (f < 0)
                      throw new Error("Unexpected end of input");
                    if (f < c) {
                      this.eos_ = 1;
                      for (var u = 0; u < 32; u++)
                        this.buf_[o + f + u] = 0;
                    }
                    if (o === 0) {
                      for (var u = 0; u < 32; u++)
                        this.buf_[(c << 1) + u] = this.buf_[u];
                      this.buf_ptr_ = c;
                    } else
                      this.buf_ptr_ = 0;
                    this.bit_end_pos_ += f << 3;
                  }
              }, a.prototype.fillBitWindow = function() {
                for (; this.bit_pos_ >= 8; )
                  this.val_ >>>= 8, this.val_ |= this.buf_[this.pos_ & s] << 24, ++this.pos_, this.bit_pos_ = this.bit_pos_ - 8 >>> 0, this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;
              }, a.prototype.readBits = function(o) {
                32 - this.bit_pos_ < o && this.fillBitWindow();
                var f = this.val_ >>> this.bit_pos_ & r[o];
                return this.bit_pos_ += o, f;
              }, l.exports = a;
            }
          ),
          /***/
          52150: (
            /***/
            function(l, c) {
              c.lookup = new Uint8Array([
                /* CONTEXT_UTF8, last byte. */
                /* ASCII range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                4,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                8,
                12,
                16,
                12,
                12,
                20,
                12,
                16,
                24,
                28,
                12,
                12,
                32,
                12,
                36,
                12,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                32,
                32,
                24,
                40,
                28,
                12,
                12,
                48,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                24,
                12,
                28,
                12,
                12,
                12,
                56,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                24,
                12,
                28,
                12,
                0,
                /* UTF8 continuation byte range. */
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                /* UTF8 lead byte range. */
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                /* CONTEXT_UTF8 second last byte. */
                /* ASCII range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                1,
                1,
                1,
                1,
                0,
                /* UTF8 continuation byte range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                /* UTF8 lead byte range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                /* CONTEXT_SIGNED, second last byte. */
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                7,
                /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */
                0,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                56,
                /* CONTEXT_LSB6, last byte. */
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                /* CONTEXT_MSB6, last byte. */
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                6,
                6,
                6,
                6,
                7,
                7,
                7,
                7,
                8,
                8,
                8,
                8,
                9,
                9,
                9,
                9,
                10,
                10,
                10,
                10,
                11,
                11,
                11,
                11,
                12,
                12,
                12,
                12,
                13,
                13,
                13,
                13,
                14,
                14,
                14,
                14,
                15,
                15,
                15,
                15,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                22,
                22,
                22,
                22,
                23,
                23,
                23,
                23,
                24,
                24,
                24,
                24,
                25,
                25,
                25,
                25,
                26,
                26,
                26,
                26,
                27,
                27,
                27,
                27,
                28,
                28,
                28,
                28,
                29,
                29,
                29,
                29,
                30,
                30,
                30,
                30,
                31,
                31,
                31,
                31,
                32,
                32,
                32,
                32,
                33,
                33,
                33,
                33,
                34,
                34,
                34,
                34,
                35,
                35,
                35,
                35,
                36,
                36,
                36,
                36,
                37,
                37,
                37,
                37,
                38,
                38,
                38,
                38,
                39,
                39,
                39,
                39,
                40,
                40,
                40,
                40,
                41,
                41,
                41,
                41,
                42,
                42,
                42,
                42,
                43,
                43,
                43,
                43,
                44,
                44,
                44,
                44,
                45,
                45,
                45,
                45,
                46,
                46,
                46,
                46,
                47,
                47,
                47,
                47,
                48,
                48,
                48,
                48,
                49,
                49,
                49,
                49,
                50,
                50,
                50,
                50,
                51,
                51,
                51,
                51,
                52,
                52,
                52,
                52,
                53,
                53,
                53,
                53,
                54,
                54,
                54,
                54,
                55,
                55,
                55,
                55,
                56,
                56,
                56,
                56,
                57,
                57,
                57,
                57,
                58,
                58,
                58,
                58,
                59,
                59,
                59,
                59,
                60,
                60,
                60,
                60,
                61,
                61,
                61,
                61,
                62,
                62,
                62,
                62,
                63,
                63,
                63,
                63,
                /* CONTEXT_{M,L}SB6, second last byte, */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ]), c.lookupOffsets = new Uint16Array([
                /* CONTEXT_LSB6 */
                1024,
                1536,
                /* CONTEXT_MSB6 */
                1280,
                1536,
                /* CONTEXT_UTF8 */
                0,
                256,
                /* CONTEXT_SIGNED */
                768,
                512
              ]);
            }
          ),
          /***/
          17217: (
            /***/
            function(l, c, t) {
              var s = t(46170).g, r = t(46170).j, a = t(56887), o = t(50227), f = t(33535).h, u = t(33535).g, h = t(52150), d = t(4008), i = t(22906), p = 8, y = 16, m = 256, e = 704, x = 26, S = 6, P = 2, O = 8, T = 255, A = 1080, E = 18, D = new Uint8Array([
                1,
                2,
                3,
                4,
                0,
                5,
                17,
                6,
                16,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]), b = 16, R = new Uint8Array([
                3,
                2,
                1,
                0,
                3,
                3,
                3,
                3,
                3,
                3,
                2,
                2,
                2,
                2,
                2,
                2
              ]), L = new Int8Array([
                0,
                0,
                0,
                0,
                -1,
                1,
                -2,
                2,
                -3,
                3,
                -1,
                1,
                -2,
                2,
                -3,
                3
              ]), N = new Uint16Array([
                256,
                402,
                436,
                468,
                500,
                534,
                566,
                598,
                630,
                662,
                694,
                726,
                758,
                790,
                822,
                854,
                886,
                920,
                952,
                984,
                1016,
                1048,
                1080
              ]);
              function M(C) {
                var k;
                return C.readBits(1) === 0 ? 16 : (k = C.readBits(3), k > 0 ? 17 + k : (k = C.readBits(3), k > 0 ? 8 + k : 17));
              }
              function K(C) {
                if (C.readBits(1)) {
                  var k = C.readBits(3);
                  return k === 0 ? 1 : C.readBits(k) + (1 << k);
                }
                return 0;
              }
              function ct() {
                this.meta_block_length = 0, this.input_end = 0, this.is_uncompressed = 0, this.is_metadata = !1;
              }
              function J(C) {
                var k = new ct(), V, ot, et;
                if (k.input_end = C.readBits(1), k.input_end && C.readBits(1))
                  return k;
                if (V = C.readBits(2) + 4, V === 7) {
                  if (k.is_metadata = !0, C.readBits(1) !== 0)
                    throw new Error("Invalid reserved bit");
                  if (ot = C.readBits(2), ot === 0)
                    return k;
                  for (et = 0; et < ot; et++) {
                    var tt = C.readBits(8);
                    if (et + 1 === ot && ot > 1 && tt === 0)
                      throw new Error("Invalid size byte");
                    k.meta_block_length |= tt << et * 8;
                  }
                } else
                  for (et = 0; et < V; ++et) {
                    var At = C.readBits(4);
                    if (et + 1 === V && V > 4 && At === 0)
                      throw new Error("Invalid size nibble");
                    k.meta_block_length |= At << et * 4;
                  }
                return ++k.meta_block_length, !k.input_end && !k.is_metadata && (k.is_uncompressed = C.readBits(1)), k;
              }
              function nt(C, k, V) {
                var ot;
                return V.fillBitWindow(), k += V.val_ >>> V.bit_pos_ & T, ot = C[k].bits - O, ot > 0 && (V.bit_pos_ += O, k += C[k].value, k += V.val_ >>> V.bit_pos_ & (1 << ot) - 1), V.bit_pos_ += C[k].bits, C[k].value;
              }
              function yt(C, k, V, ot) {
                for (var et = 0, tt = p, At = 0, Nt = 0, Kt = 32768, Vt = [], Ot = 0; Ot < 32; Ot++)
                  Vt.push(new f(0, 0));
                for (u(Vt, 0, 5, C, E); et < k && Kt > 0; ) {
                  var ie = 0, Ae;
                  if (ot.readMoreInput(), ot.fillBitWindow(), ie += ot.val_ >>> ot.bit_pos_ & 31, ot.bit_pos_ += Vt[ie].bits, Ae = Vt[ie].value & 255, Ae < y)
                    At = 0, V[et++] = Ae, Ae !== 0 && (tt = Ae, Kt -= 32768 >> Ae);
                  else {
                    var be = Ae - 14, de, Se, Wt = 0;
                    if (Ae === y && (Wt = tt), Nt !== Wt && (At = 0, Nt = Wt), de = At, At > 0 && (At -= 2, At <<= be), At += ot.readBits(be) + 3, Se = At - de, et + Se > k)
                      throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");
                    for (var _t = 0; _t < Se; _t++)
                      V[et + _t] = Nt;
                    et += Se, Nt !== 0 && (Kt -= Se << 15 - Nt);
                  }
                }
                if (Kt !== 0)
                  throw new Error("[ReadHuffmanCodeLengths] space = " + Kt);
                for (; et < k; et++)
                  V[et] = 0;
              }
              function bt(C, k, V, ot) {
                var et = 0, tt, At = new Uint8Array(C);
                if (ot.readMoreInput(), tt = ot.readBits(2), tt === 1) {
                  for (var Nt, Kt = C - 1, Vt = 0, Ot = new Int32Array(4), ie = ot.readBits(2) + 1; Kt; )
                    Kt >>= 1, ++Vt;
                  for (Nt = 0; Nt < ie; ++Nt)
                    Ot[Nt] = ot.readBits(Vt) % C, At[Ot[Nt]] = 2;
                  switch (At[Ot[0]] = 1, ie) {
                    case 1:
                      break;
                    case 3:
                      if (Ot[0] === Ot[1] || Ot[0] === Ot[2] || Ot[1] === Ot[2])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      break;
                    case 2:
                      if (Ot[0] === Ot[1])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      At[Ot[1]] = 1;
                      break;
                    case 4:
                      if (Ot[0] === Ot[1] || Ot[0] === Ot[2] || Ot[0] === Ot[3] || Ot[1] === Ot[2] || Ot[1] === Ot[3] || Ot[2] === Ot[3])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      ot.readBits(1) ? (At[Ot[2]] = 3, At[Ot[3]] = 3) : At[Ot[0]] = 2;
                      break;
                  }
                } else {
                  var Nt, Ae = new Uint8Array(E), be = 32, de = 0, Se = [
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(3, 2),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(4, 1),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(3, 2),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(4, 5)
                  ];
                  for (Nt = tt; Nt < E && be > 0; ++Nt) {
                    var Wt = D[Nt], _t = 0, ce;
                    ot.fillBitWindow(), _t += ot.val_ >>> ot.bit_pos_ & 15, ot.bit_pos_ += Se[_t].bits, ce = Se[_t].value, Ae[Wt] = ce, ce !== 0 && (be -= 32 >> ce, ++de);
                  }
                  if (!(de === 1 || be === 0))
                    throw new Error("[ReadHuffmanCode] invalid num_codes or space");
                  yt(Ae, C, At, ot);
                }
                if (et = u(k, V, O, At, C), et === 0)
                  throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");
                return et;
              }
              function Tt(C, k, V) {
                var ot, et;
                return ot = nt(C, k, V), et = d.kBlockLengthPrefixCode[ot].nbits, d.kBlockLengthPrefixCode[ot].offset + V.readBits(et);
              }
              function It(C, k, V) {
                var ot;
                return C < b ? (V += R[C], V &= 3, ot = k[V] + L[C]) : ot = C - b + 1, ot;
              }
              function Lt(C, k) {
                for (var V = C[k], ot = k; ot; --ot)
                  C[ot] = C[ot - 1];
                C[0] = V;
              }
              function zt(C, k) {
                var V = new Uint8Array(256), ot;
                for (ot = 0; ot < 256; ++ot)
                  V[ot] = ot;
                for (ot = 0; ot < k; ++ot) {
                  var et = C[ot];
                  C[ot] = V[et], et && Lt(V, et);
                }
              }
              function Q(C, k) {
                this.alphabet_size = C, this.num_htrees = k, this.codes = new Array(k + k * N[C + 31 >>> 5]), this.htrees = new Uint32Array(k);
              }
              Q.prototype.decode = function(C) {
                var k, V, ot = 0;
                for (k = 0; k < this.num_htrees; ++k)
                  this.htrees[k] = ot, V = bt(this.alphabet_size, this.codes, ot, C), ot += V;
              };
              function gt(C, k) {
                var V = { num_htrees: null, context_map: null }, ot, et = 0, tt, At;
                k.readMoreInput();
                var Nt = V.num_htrees = K(k) + 1, Kt = V.context_map = new Uint8Array(C);
                if (Nt <= 1)
                  return V;
                for (ot = k.readBits(1), ot && (et = k.readBits(4) + 1), tt = [], At = 0; At < A; At++)
                  tt[At] = new f(0, 0);
                for (bt(Nt + et, tt, 0, k), At = 0; At < C; ) {
                  var Vt;
                  if (k.readMoreInput(), Vt = nt(tt, 0, k), Vt === 0)
                    Kt[At] = 0, ++At;
                  else if (Vt <= et)
                    for (var Ot = 1 + (1 << Vt) + k.readBits(Vt); --Ot; ) {
                      if (At >= C)
                        throw new Error("[DecodeContextMap] i >= context_map_size");
                      Kt[At] = 0, ++At;
                    }
                  else
                    Kt[At] = Vt - et, ++At;
                }
                return k.readBits(1) && zt(Kt, C), V;
              }
              function ht(C, k, V, ot, et, tt, At) {
                var Nt = V * 2, Kt = V, Vt = nt(k, V * A, At), Ot;
                Vt === 0 ? Ot = et[Nt + (tt[Kt] & 1)] : Vt === 1 ? Ot = et[Nt + (tt[Kt] - 1 & 1)] + 1 : Ot = Vt - 2, Ot >= C && (Ot -= C), ot[V] = Ot, et[Nt + (tt[Kt] & 1)] = Ot, ++tt[Kt];
              }
              function st(C, k, V, ot, et, tt) {
                var At = et + 1, Nt = V & et, Kt = tt.pos_ & a.IBUF_MASK, Vt;
                if (k < 8 || tt.bit_pos_ + (k << 3) < tt.bit_end_pos_) {
                  for (; k-- > 0; )
                    tt.readMoreInput(), ot[Nt++] = tt.readBits(8), Nt === At && (C.write(ot, At), Nt = 0);
                  return;
                }
                if (tt.bit_end_pos_ < 32)
                  throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");
                for (; tt.bit_pos_ < 32; )
                  ot[Nt] = tt.val_ >>> tt.bit_pos_, tt.bit_pos_ += 8, ++Nt, --k;
                if (Vt = tt.bit_end_pos_ - tt.bit_pos_ >> 3, Kt + Vt > a.IBUF_MASK) {
                  for (var Ot = a.IBUF_MASK + 1 - Kt, ie = 0; ie < Ot; ie++)
                    ot[Nt + ie] = tt.buf_[Kt + ie];
                  Vt -= Ot, Nt += Ot, k -= Ot, Kt = 0;
                }
                for (var ie = 0; ie < Vt; ie++)
                  ot[Nt + ie] = tt.buf_[Kt + ie];
                if (Nt += Vt, k -= Vt, Nt >= At) {
                  C.write(ot, At), Nt -= At;
                  for (var ie = 0; ie < Nt; ie++)
                    ot[ie] = ot[At + ie];
                }
                for (; Nt + k >= At; ) {
                  if (Vt = At - Nt, tt.input_.read(ot, Nt, Vt) < Vt)
                    throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                  C.write(ot, At), k -= Vt, Nt = 0;
                }
                if (tt.input_.read(ot, Nt, k) < k)
                  throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                tt.reset();
              }
              function xt(C) {
                var k = C.bit_pos_ + 7 & -8, V = C.readBits(k - C.bit_pos_);
                return V == 0;
              }
              function G(C) {
                var k = new s(C), V = new a(k);
                M(V);
                var ot = J(V);
                return ot.meta_block_length;
              }
              function Ft(C, k) {
                var V = new s(C);
                k == null && (k = G(C));
                var ot = new Uint8Array(k), et = new r(ot);
                return z(V, et), et.pos < et.buffer.length && (et.buffer = et.buffer.subarray(0, et.pos)), et.buffer;
              }
              c.BrotliDecompressBuffer = Ft;
              function z(C, k) {
                var V, ot = 0, et = 0, tt = 0, At, Nt = 0, Kt, Vt, Ot, ie, Ae = [16, 15, 11, 4], be = 0, de = 0, Se = 0, Wt = [new Q(0, 0), new Q(0, 0), new Q(0, 0)], _t, ce, pe, we = 128 + a.READ_SIZE;
                pe = new a(C), tt = M(pe), At = (1 << tt) - 16, Kt = 1 << tt, Vt = Kt - 1, Ot = new Uint8Array(Kt + we + o.maxDictionaryWordLength), ie = Kt, _t = [], ce = [];
                for (var Be = 0; Be < 3 * A; Be++)
                  _t[Be] = new f(0, 0), ce[Be] = new f(0, 0);
                for (; !et; ) {
                  var Ie = 0, Dt, ue = [1 << 28, 1 << 28, 1 << 28], lt = [0], Y = [1, 1, 1], j = [0, 1, 0, 1, 0, 1], wt = [0], it, Ht, te, _, Qt = null, ee = null, Et, jt = null, le, Ne = 0, Oe = null, Ue = 0, Me = 0, on = null, er = 0, Ye = 0, Cr = 0, Pr, Jr;
                  for (V = 0; V < 3; ++V)
                    Wt[V].codes = null, Wt[V].htrees = null;
                  pe.readMoreInput();
                  var In = J(pe);
                  if (Ie = In.meta_block_length, ot + Ie > k.buffer.length) {
                    var Gn = new Uint8Array(ot + Ie);
                    Gn.set(k.buffer), k.buffer = Gn;
                  }
                  if (et = In.input_end, Dt = In.is_uncompressed, In.is_metadata) {
                    for (xt(pe); Ie > 0; --Ie)
                      pe.readMoreInput(), pe.readBits(8);
                    continue;
                  }
                  if (Ie !== 0) {
                    if (Dt) {
                      pe.bit_pos_ = pe.bit_pos_ + 7 & -8, st(
                        k,
                        Ie,
                        ot,
                        Ot,
                        Vt,
                        pe
                      ), ot += Ie;
                      continue;
                    }
                    for (V = 0; V < 3; ++V)
                      Y[V] = K(pe) + 1, Y[V] >= 2 && (bt(Y[V] + 2, _t, V * A, pe), bt(x, ce, V * A, pe), ue[V] = Tt(ce, V * A, pe), wt[V] = 1);
                    for (pe.readMoreInput(), it = pe.readBits(2), Ht = b + (pe.readBits(4) << it), te = (1 << it) - 1, _ = Ht + (48 << it), ee = new Uint8Array(Y[0]), V = 0; V < Y[0]; ++V)
                      pe.readMoreInput(), ee[V] = pe.readBits(2) << 1;
                    var nr = gt(Y[0] << S, pe);
                    Et = nr.num_htrees, Qt = nr.context_map;
                    var sn = gt(Y[2] << P, pe);
                    for (le = sn.num_htrees, jt = sn.context_map, Wt[0] = new Q(m, Et), Wt[1] = new Q(e, Y[1]), Wt[2] = new Q(_, le), V = 0; V < 3; ++V)
                      Wt[V].decode(pe);
                    for (Oe = 0, on = 0, Pr = ee[lt[0]], Ye = h.lookupOffsets[Pr], Cr = h.lookupOffsets[Pr + 1], Jr = Wt[1].htrees[0]; Ie > 0; ) {
                      var zr, tn, Gr, Kn, Jn, ze, We, _e, hr, Cn, En;
                      for (pe.readMoreInput(), ue[1] === 0 && (ht(
                        Y[1],
                        _t,
                        1,
                        lt,
                        j,
                        wt,
                        pe
                      ), ue[1] = Tt(ce, A, pe), Jr = Wt[1].htrees[lt[1]]), --ue[1], zr = nt(Wt[1].codes, Jr, pe), tn = zr >> 6, tn >= 2 ? (tn -= 2, We = -1) : We = 0, Gr = d.kInsertRangeLut[tn] + (zr >> 3 & 7), Kn = d.kCopyRangeLut[tn] + (zr & 7), Jn = d.kInsertLengthPrefixCode[Gr].offset + pe.readBits(d.kInsertLengthPrefixCode[Gr].nbits), ze = d.kCopyLengthPrefixCode[Kn].offset + pe.readBits(d.kCopyLengthPrefixCode[Kn].nbits), de = Ot[ot - 1 & Vt], Se = Ot[ot - 2 & Vt], Cn = 0; Cn < Jn; ++Cn)
                        pe.readMoreInput(), ue[0] === 0 && (ht(
                          Y[0],
                          _t,
                          0,
                          lt,
                          j,
                          wt,
                          pe
                        ), ue[0] = Tt(ce, 0, pe), Ne = lt[0] << S, Oe = Ne, Pr = ee[lt[0]], Ye = h.lookupOffsets[Pr], Cr = h.lookupOffsets[Pr + 1]), hr = h.lookup[Ye + de] | h.lookup[Cr + Se], Ue = Qt[Oe + hr], --ue[0], Se = de, de = nt(Wt[0].codes, Wt[0].htrees[Ue], pe), Ot[ot & Vt] = de, (ot & Vt) === Vt && k.write(Ot, Kt), ++ot;
                      if (Ie -= Jn, Ie <= 0)
                        break;
                      if (We < 0) {
                        var hr;
                        if (pe.readMoreInput(), ue[2] === 0 && (ht(
                          Y[2],
                          _t,
                          2,
                          lt,
                          j,
                          wt,
                          pe
                        ), ue[2] = Tt(ce, 2 * A, pe), Me = lt[2] << P, on = Me), --ue[2], hr = (ze > 4 ? 3 : ze - 2) & 255, er = jt[on + hr], We = nt(Wt[2].codes, Wt[2].htrees[er], pe), We >= Ht) {
                          var na, Ea, aa;
                          We -= Ht, Ea = We & te, We >>= it, na = (We >> 1) + 1, aa = (2 + (We & 1) << na) - 4, We = Ht + (aa + pe.readBits(na) << it) + Ea;
                        }
                      }
                      if (_e = It(We, Ae, be), _e < 0)
                        throw new Error("[BrotliDecompress] invalid distance");
                      if (ot < At && Nt !== At ? Nt = ot : Nt = At, En = ot & Vt, _e > Nt)
                        if (ze >= o.minDictionaryWordLength && ze <= o.maxDictionaryWordLength) {
                          var aa = o.offsetsByLength[ze], ia = _e - Nt - 1, Jt = o.sizeBitsByLength[ze], Pt = (1 << Jt) - 1, ne = ia & Pt, Rt = ia >> Jt;
                          if (aa += ne * ze, Rt < i.kNumTransforms) {
                            var Mt = i.transformDictionaryWord(Ot, En, aa, ze, Rt);
                            if (En += Mt, ot += Mt, Ie -= Mt, En >= ie) {
                              k.write(Ot, Kt);
                              for (var kt = 0; kt < En - ie; kt++)
                                Ot[kt] = Ot[ie + kt];
                            }
                          } else
                            throw new Error("Invalid backward reference. pos: " + ot + " distance: " + _e + " len: " + ze + " bytes left: " + Ie);
                        } else
                          throw new Error("Invalid backward reference. pos: " + ot + " distance: " + _e + " len: " + ze + " bytes left: " + Ie);
                      else {
                        if (We > 0 && (Ae[be & 3] = _e, ++be), ze > Ie)
                          throw new Error("Invalid backward reference. pos: " + ot + " distance: " + _e + " len: " + ze + " bytes left: " + Ie);
                        for (Cn = 0; Cn < ze; ++Cn)
                          Ot[ot & Vt] = Ot[ot - _e & Vt], (ot & Vt) === Vt && k.write(Ot, Kt), ++ot, --Ie;
                      }
                      de = Ot[ot - 1 & Vt], Se = Ot[ot - 2 & Vt];
                    }
                    ot &= 1073741823;
                  }
                }
                k.write(Ot, ot & Vt);
              }
              o.init();
            }
          ),
          /***/
          99373: (
            /***/
            function(l, c, t) {
              var s = t(5155);
              c.init = function() {
                var r = t(17217).BrotliDecompressBuffer, a = s.toByteArray(t(13019));
                return r(a);
              };
            }
          ),
          /***/
          13019: (
            /***/
            function(l) {
              l.exports = "";
            }
          ),
          /***/
          50227: (
            /***/
            function(l, c, t) {
              var s = t(99373);
              c.init = function() {
                c.dictionary = s.init();
              }, c.offsetsByLength = new Uint32Array([
                0,
                0,
                0,
                0,
                0,
                4096,
                9216,
                21504,
                35840,
                44032,
                53248,
                63488,
                74752,
                87040,
                93696,
                100864,
                104704,
                106752,
                108928,
                113536,
                115968,
                118528,
                119872,
                121280,
                122016
              ]), c.sizeBitsByLength = new Uint8Array([
                0,
                0,
                0,
                0,
                10,
                10,
                11,
                11,
                10,
                10,
                10,
                10,
                10,
                9,
                9,
                8,
                7,
                7,
                8,
                7,
                7,
                6,
                6,
                5,
                5
              ]), c.minDictionaryWordLength = 4, c.maxDictionaryWordLength = 24;
            }
          ),
          /***/
          33535: (
            /***/
            function(l, c) {
              function t(f, u) {
                this.bits = f, this.value = u;
              }
              c.h = t;
              var s = 15;
              function r(f, u) {
                for (var h = 1 << u - 1; f & h; )
                  h >>= 1;
                return (f & h - 1) + h;
              }
              function a(f, u, h, d, i) {
                do
                  d -= h, f[u + d] = new t(i.bits, i.value);
                while (d > 0);
              }
              function o(f, u, h) {
                for (var d = 1 << u - h; u < s && (d -= f[u], !(d <= 0)); )
                  ++u, d <<= 1;
                return u - h;
              }
              c.g = function(f, u, h, d, i) {
                var p = u, y, m, e, x, S, P, O, T, A, E, D, b = new Int32Array(s + 1), R = new Int32Array(s + 1);
                for (D = new Int32Array(i), e = 0; e < i; e++)
                  b[d[e]]++;
                for (R[1] = 0, m = 1; m < s; m++)
                  R[m + 1] = R[m] + b[m];
                for (e = 0; e < i; e++)
                  d[e] !== 0 && (D[R[d[e]]++] = e);
                if (T = h, A = 1 << T, E = A, R[s] === 1) {
                  for (x = 0; x < E; ++x)
                    f[u + x] = new t(0, D[0] & 65535);
                  return E;
                }
                for (x = 0, e = 0, m = 1, S = 2; m <= h; ++m, S <<= 1)
                  for (; b[m] > 0; --b[m])
                    y = new t(m & 255, D[e++] & 65535), a(f, u + x, S, A, y), x = r(x, m);
                for (O = E - 1, P = -1, m = h + 1, S = 2; m <= s; ++m, S <<= 1)
                  for (; b[m] > 0; --b[m])
                    (x & O) !== P && (u += A, T = o(b, m, h), A = 1 << T, E += A, P = x & O, f[p + P] = new t(T + h & 255, u - p - P & 65535)), y = new t(m - h & 255, D[e++] & 65535), a(f, u + (x >> h), S, A, y), x = r(x, m);
                return E;
              };
            }
          ),
          /***/
          4008: (
            /***/
            function(l, c) {
              function t(s, r) {
                this.offset = s, this.nbits = r;
              }
              c.kBlockLengthPrefixCode = [
                new t(1, 2),
                new t(5, 2),
                new t(9, 2),
                new t(13, 2),
                new t(17, 3),
                new t(25, 3),
                new t(33, 3),
                new t(41, 3),
                new t(49, 4),
                new t(65, 4),
                new t(81, 4),
                new t(97, 4),
                new t(113, 5),
                new t(145, 5),
                new t(177, 5),
                new t(209, 5),
                new t(241, 6),
                new t(305, 6),
                new t(369, 7),
                new t(497, 8),
                new t(753, 9),
                new t(1265, 10),
                new t(2289, 11),
                new t(4337, 12),
                new t(8433, 13),
                new t(16625, 24)
              ], c.kInsertLengthPrefixCode = [
                new t(0, 0),
                new t(1, 0),
                new t(2, 0),
                new t(3, 0),
                new t(4, 0),
                new t(5, 0),
                new t(6, 1),
                new t(8, 1),
                new t(10, 2),
                new t(14, 2),
                new t(18, 3),
                new t(26, 3),
                new t(34, 4),
                new t(50, 4),
                new t(66, 5),
                new t(98, 5),
                new t(130, 6),
                new t(194, 7),
                new t(322, 8),
                new t(578, 9),
                new t(1090, 10),
                new t(2114, 12),
                new t(6210, 14),
                new t(22594, 24)
              ], c.kCopyLengthPrefixCode = [
                new t(2, 0),
                new t(3, 0),
                new t(4, 0),
                new t(5, 0),
                new t(6, 0),
                new t(7, 0),
                new t(8, 0),
                new t(9, 0),
                new t(10, 1),
                new t(12, 1),
                new t(14, 2),
                new t(18, 2),
                new t(22, 3),
                new t(30, 3),
                new t(38, 4),
                new t(54, 4),
                new t(70, 5),
                new t(102, 5),
                new t(134, 6),
                new t(198, 7),
                new t(326, 8),
                new t(582, 9),
                new t(1094, 10),
                new t(2118, 24)
              ], c.kInsertRangeLut = [
                0,
                0,
                8,
                8,
                0,
                16,
                8,
                16,
                16
              ], c.kCopyRangeLut = [
                0,
                8,
                0,
                8,
                16,
                0,
                16,
                8,
                16
              ];
            }
          ),
          /***/
          46170: (
            /***/
            function(l, c) {
              function t(r) {
                this.buffer = r, this.pos = 0;
              }
              t.prototype.read = function(r, a, o) {
                this.pos + o > this.buffer.length && (o = this.buffer.length - this.pos);
                for (var f = 0; f < o; f++)
                  r[a + f] = this.buffer[this.pos + f];
                return this.pos += o, o;
              }, c.g = t;
              function s(r) {
                this.buffer = r, this.pos = 0;
              }
              s.prototype.write = function(r, a) {
                if (this.pos + a > this.buffer.length)
                  throw new Error("Output buffer is not large enough");
                return this.buffer.set(r.subarray(0, a), this.pos), this.pos += a, a;
              }, c.j = s;
            }
          ),
          /***/
          22906: (
            /***/
            function(l, c, t) {
              var s = t(50227), r = 0, a = 1, o = 2, f = 3, u = 4, h = 5, d = 6, i = 7, p = 8, y = 9, m = 10, e = 11, x = 12, S = 13, P = 14, O = 15, T = 16, A = 17, E = 18, D = 20;
              function b(N, M, K) {
                this.prefix = new Uint8Array(N.length), this.transform = M, this.suffix = new Uint8Array(K.length);
                for (var ct = 0; ct < N.length; ct++)
                  this.prefix[ct] = N.charCodeAt(ct);
                for (var ct = 0; ct < K.length; ct++)
                  this.suffix[ct] = K.charCodeAt(ct);
              }
              var R = [
                new b("", r, ""),
                new b("", r, " "),
                new b(" ", r, " "),
                new b("", x, ""),
                new b("", m, " "),
                new b("", r, " the "),
                new b(" ", r, ""),
                new b("s ", r, " "),
                new b("", r, " of "),
                new b("", m, ""),
                new b("", r, " and "),
                new b("", S, ""),
                new b("", a, ""),
                new b(", ", r, " "),
                new b("", r, ", "),
                new b(" ", m, " "),
                new b("", r, " in "),
                new b("", r, " to "),
                new b("e ", r, " "),
                new b("", r, '"'),
                new b("", r, "."),
                new b("", r, '">'),
                new b("", r, `
`),
                new b("", f, ""),
                new b("", r, "]"),
                new b("", r, " for "),
                new b("", P, ""),
                new b("", o, ""),
                new b("", r, " a "),
                new b("", r, " that "),
                new b(" ", m, ""),
                new b("", r, ". "),
                new b(".", r, ""),
                new b(" ", r, ", "),
                new b("", O, ""),
                new b("", r, " with "),
                new b("", r, "'"),
                new b("", r, " from "),
                new b("", r, " by "),
                new b("", T, ""),
                new b("", A, ""),
                new b(" the ", r, ""),
                new b("", u, ""),
                new b("", r, ". The "),
                new b("", e, ""),
                new b("", r, " on "),
                new b("", r, " as "),
                new b("", r, " is "),
                new b("", i, ""),
                new b("", a, "ing "),
                new b("", r, `
	`),
                new b("", r, ":"),
                new b(" ", r, ". "),
                new b("", r, "ed "),
                new b("", D, ""),
                new b("", E, ""),
                new b("", d, ""),
                new b("", r, "("),
                new b("", m, ", "),
                new b("", p, ""),
                new b("", r, " at "),
                new b("", r, "ly "),
                new b(" the ", r, " of "),
                new b("", h, ""),
                new b("", y, ""),
                new b(" ", m, ", "),
                new b("", m, '"'),
                new b(".", r, "("),
                new b("", e, " "),
                new b("", m, '">'),
                new b("", r, '="'),
                new b(" ", r, "."),
                new b(".com/", r, ""),
                new b(" the ", r, " of the "),
                new b("", m, "'"),
                new b("", r, ". This "),
                new b("", r, ","),
                new b(".", r, " "),
                new b("", m, "("),
                new b("", m, "."),
                new b("", r, " not "),
                new b(" ", r, '="'),
                new b("", r, "er "),
                new b(" ", e, " "),
                new b("", r, "al "),
                new b(" ", e, ""),
                new b("", r, "='"),
                new b("", e, '"'),
                new b("", m, ". "),
                new b(" ", r, "("),
                new b("", r, "ful "),
                new b(" ", m, ". "),
                new b("", r, "ive "),
                new b("", r, "less "),
                new b("", e, "'"),
                new b("", r, "est "),
                new b(" ", m, "."),
                new b("", e, '">'),
                new b(" ", r, "='"),
                new b("", m, ","),
                new b("", r, "ize "),
                new b("", e, "."),
                new b("ÃÂ ", r, ""),
                new b(" ", r, ","),
                new b("", m, '="'),
                new b("", e, '="'),
                new b("", r, "ous "),
                new b("", e, ", "),
                new b("", m, "='"),
                new b(" ", m, ","),
                new b(" ", e, '="'),
                new b(" ", e, ", "),
                new b("", e, ","),
                new b("", e, "("),
                new b("", e, ". "),
                new b(" ", e, "."),
                new b("", e, "='"),
                new b(" ", e, ". "),
                new b(" ", m, '="'),
                new b(" ", e, "='"),
                new b(" ", m, "='")
              ];
              c.kTransforms = R, c.kNumTransforms = R.length;
              function L(N, M) {
                return N[M] < 192 ? (N[M] >= 97 && N[M] <= 122 && (N[M] ^= 32), 1) : N[M] < 224 ? (N[M + 1] ^= 32, 2) : (N[M + 2] ^= 5, 3);
              }
              c.transformDictionaryWord = function(N, M, K, ct, J) {
                var nt = R[J].prefix, yt = R[J].suffix, bt = R[J].transform, Tt = bt < x ? 0 : bt - (x - 1), It = 0, Lt = M, zt;
                Tt > ct && (Tt = ct);
                for (var Q = 0; Q < nt.length; )
                  N[M++] = nt[Q++];
                for (K += Tt, ct -= Tt, bt <= y && (ct -= bt), It = 0; It < ct; It++)
                  N[M++] = s.dictionary[K + It];
                if (zt = M - ct, bt === m)
                  L(N, zt);
                else if (bt === e)
                  for (; ct > 0; ) {
                    var gt = L(N, zt);
                    zt += gt, ct -= gt;
                  }
                for (var ht = 0; ht < yt.length; )
                  N[M++] = yt[ht++];
                return M - Lt;
              };
            }
          ),
          /***/
          49435: (
            /***/
            function(l, c, t) {
              l.exports = t(17217).BrotliDecompressBuffer;
            }
          ),
          /***/
          30539: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer, r = t(82530), a = t(76118), o = t(28755), f = t(24349), u = t(3386), h = t(40549);
              for (var d in h)
                c[d] = h[d];
              c.NONE = 0, c.DEFLATE = 1, c.INFLATE = 2, c.GZIP = 3, c.GUNZIP = 4, c.DEFLATERAW = 5, c.INFLATERAW = 6, c.UNZIP = 7;
              var i = 31, p = 139;
              function y(m) {
                if (typeof m != "number" || m < c.DEFLATE || m > c.UNZIP)
                  throw new TypeError("Bad argument");
                this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = !1, this.level = 0, this.memLevel = 0, this.mode = m, this.strategy = 0, this.windowBits = 0, this.write_in_progress = !1, this.pending_close = !1, this.gzip_id_bytes_read = 0;
              }
              y.prototype.close = function() {
                if (this.write_in_progress) {
                  this.pending_close = !0;
                  return;
                }
                this.pending_close = !1, a(this.init_done, "close before init"), a(this.mode <= c.UNZIP), this.mode === c.DEFLATE || this.mode === c.GZIP || this.mode === c.DEFLATERAW ? f.deflateEnd(this.strm) : (this.mode === c.INFLATE || this.mode === c.GUNZIP || this.mode === c.INFLATERAW || this.mode === c.UNZIP) && u.inflateEnd(this.strm), this.mode = c.NONE, this.dictionary = null;
              }, y.prototype.write = function(m, e, x, S, P, O, T) {
                return this._write(!0, m, e, x, S, P, O, T);
              }, y.prototype.writeSync = function(m, e, x, S, P, O, T) {
                return this._write(!1, m, e, x, S, P, O, T);
              }, y.prototype._write = function(m, e, x, S, P, O, T, A) {
                if (a.equal(arguments.length, 8), a(this.init_done, "write before init"), a(this.mode !== c.NONE, "already finalized"), a.equal(!1, this.write_in_progress, "write already in progress"), a.equal(!1, this.pending_close, "close is pending"), this.write_in_progress = !0, a.equal(!1, e === void 0, "must provide flush value"), this.write_in_progress = !0, e !== c.Z_NO_FLUSH && e !== c.Z_PARTIAL_FLUSH && e !== c.Z_SYNC_FLUSH && e !== c.Z_FULL_FLUSH && e !== c.Z_FINISH && e !== c.Z_BLOCK)
                  throw new Error("Invalid flush value");
                if (x == null && (x = s.alloc(0), P = 0, S = 0), this.strm.avail_in = P, this.strm.input = x, this.strm.next_in = S, this.strm.avail_out = A, this.strm.output = O, this.strm.next_out = T, this.flush = e, !m)
                  return this._process(), this._checkError() ? this._afterSync() : void 0;
                var E = this;
                return r.nextTick(function() {
                  E._process(), E._after();
                }), this;
              }, y.prototype._afterSync = function() {
                var m = this.strm.avail_out, e = this.strm.avail_in;
                return this.write_in_progress = !1, [e, m];
              }, y.prototype._process = function() {
                var m = null;
                switch (this.mode) {
                  case c.DEFLATE:
                  case c.GZIP:
                  case c.DEFLATERAW:
                    this.err = f.deflate(this.strm, this.flush);
                    break;
                  case c.UNZIP:
                    switch (this.strm.avail_in > 0 && (m = this.strm.next_in), this.gzip_id_bytes_read) {
                      case 0:
                        if (m === null)
                          break;
                        if (this.strm.input[m] === i) {
                          if (this.gzip_id_bytes_read = 1, m++, this.strm.avail_in === 1)
                            break;
                        } else {
                          this.mode = c.INFLATE;
                          break;
                        }
                      case 1:
                        if (m === null)
                          break;
                        this.strm.input[m] === p ? (this.gzip_id_bytes_read = 2, this.mode = c.GUNZIP) : this.mode = c.INFLATE;
                        break;
                      default:
                        throw new Error("invalid number of gzip magic number bytes read");
                    }
                  case c.INFLATE:
                  case c.GUNZIP:
                  case c.INFLATERAW:
                    for (this.err = u.inflate(
                      this.strm,
                      this.flush
                      // If data was encoded with dictionary
                    ), this.err === c.Z_NEED_DICT && this.dictionary && (this.err = u.inflateSetDictionary(this.strm, this.dictionary), this.err === c.Z_OK ? this.err = u.inflate(this.strm, this.flush) : this.err === c.Z_DATA_ERROR && (this.err = c.Z_NEED_DICT)); this.strm.avail_in > 0 && this.mode === c.GUNZIP && this.err === c.Z_STREAM_END && this.strm.next_in[0] !== 0; )
                      this.reset(), this.err = u.inflate(this.strm, this.flush);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
              }, y.prototype._checkError = function() {
                switch (this.err) {
                  case c.Z_OK:
                  case c.Z_BUF_ERROR:
                    if (this.strm.avail_out !== 0 && this.flush === c.Z_FINISH)
                      return this._error("unexpected end of file"), !1;
                    break;
                  case c.Z_STREAM_END:
                    break;
                  case c.Z_NEED_DICT:
                    return this.dictionary == null ? this._error("Missing dictionary") : this._error("Bad dictionary"), !1;
                  default:
                    return this._error("Zlib error"), !1;
                }
                return !0;
              }, y.prototype._after = function() {
                if (this._checkError()) {
                  var m = this.strm.avail_out, e = this.strm.avail_in;
                  this.write_in_progress = !1, this.callback(e, m), this.pending_close && this.close();
                }
              }, y.prototype._error = function(m) {
                this.strm.msg && (m = this.strm.msg), this.onerror(
                  m,
                  this.err
                  // no hope of rescue.
                ), this.write_in_progress = !1, this.pending_close && this.close();
              }, y.prototype.init = function(m, e, x, S, P) {
                a(arguments.length === 4 || arguments.length === 5, "init(windowBits, level, memLevel, strategy, [dictionary])"), a(m >= 8 && m <= 15, "invalid windowBits"), a(e >= -1 && e <= 9, "invalid compression level"), a(x >= 1 && x <= 9, "invalid memlevel"), a(S === c.Z_FILTERED || S === c.Z_HUFFMAN_ONLY || S === c.Z_RLE || S === c.Z_FIXED || S === c.Z_DEFAULT_STRATEGY, "invalid strategy"), this._init(e, m, x, S, P), this._setDictionary();
              }, y.prototype.params = function() {
                throw new Error("deflateParams Not supported");
              }, y.prototype.reset = function() {
                this._reset(), this._setDictionary();
              }, y.prototype._init = function(m, e, x, S, P) {
                switch (this.level = m, this.windowBits = e, this.memLevel = x, this.strategy = S, this.flush = c.Z_NO_FLUSH, this.err = c.Z_OK, (this.mode === c.GZIP || this.mode === c.GUNZIP) && (this.windowBits += 16), this.mode === c.UNZIP && (this.windowBits += 32), (this.mode === c.DEFLATERAW || this.mode === c.INFLATERAW) && (this.windowBits = -1 * this.windowBits), this.strm = new o(), this.mode) {
                  case c.DEFLATE:
                  case c.GZIP:
                  case c.DEFLATERAW:
                    this.err = f.deflateInit2(this.strm, this.level, c.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
                    break;
                  case c.INFLATE:
                  case c.GUNZIP:
                  case c.INFLATERAW:
                  case c.UNZIP:
                    this.err = u.inflateInit2(this.strm, this.windowBits);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
                this.err !== c.Z_OK && this._error("Init error"), this.dictionary = P, this.write_in_progress = !1, this.init_done = !0;
              }, y.prototype._setDictionary = function() {
                if (this.dictionary != null) {
                  switch (this.err = c.Z_OK, this.mode) {
                    case c.DEFLATE:
                    case c.DEFLATERAW:
                      this.err = f.deflateSetDictionary(this.strm, this.dictionary);
                      break;
                  }
                  this.err !== c.Z_OK && this._error("Failed to set dictionary");
                }
              }, y.prototype._reset = function() {
                switch (this.err = c.Z_OK, this.mode) {
                  case c.DEFLATE:
                  case c.DEFLATERAW:
                  case c.GZIP:
                    this.err = f.deflateReset(this.strm);
                    break;
                  case c.INFLATE:
                  case c.INFLATERAW:
                  case c.GUNZIP:
                    this.err = u.inflateReset(this.strm);
                    break;
                }
                this.err !== c.Z_OK && this._error("Failed to reset stream");
              }, c.Zlib = y;
            }
          ),
          /***/
          63339: (
            /***/
            function(l, c, t) {
              var s = t(82530), r = t(43060).Buffer, a = t(20202).Transform, o = t(30539), f = t(85663), u = t(76118).ok, h = t(43060).kMaxLength, d = "Cannot create final Buffer. It would be larger than 0x" + h.toString(16) + " bytes";
              o.Z_MIN_WINDOWBITS = 8, o.Z_MAX_WINDOWBITS = 15, o.Z_DEFAULT_WINDOWBITS = 15, o.Z_MIN_CHUNK = 64, o.Z_MAX_CHUNK = 1 / 0, o.Z_DEFAULT_CHUNK = 16384, o.Z_MIN_MEMLEVEL = 1, o.Z_MAX_MEMLEVEL = 9, o.Z_DEFAULT_MEMLEVEL = 8, o.Z_MIN_LEVEL = -1, o.Z_MAX_LEVEL = 9, o.Z_DEFAULT_LEVEL = o.Z_DEFAULT_COMPRESSION;
              for (var i = Object.keys(o), p = 0; p < i.length; p++) {
                var y = i[p];
                y.match(/^Z/) && Object.defineProperty(c, y, {
                  enumerable: !0,
                  value: o[y],
                  writable: !1
                });
              }
              for (var m = {
                Z_OK: o.Z_OK,
                Z_STREAM_END: o.Z_STREAM_END,
                Z_NEED_DICT: o.Z_NEED_DICT,
                Z_ERRNO: o.Z_ERRNO,
                Z_STREAM_ERROR: o.Z_STREAM_ERROR,
                Z_DATA_ERROR: o.Z_DATA_ERROR,
                Z_MEM_ERROR: o.Z_MEM_ERROR,
                Z_BUF_ERROR: o.Z_BUF_ERROR,
                Z_VERSION_ERROR: o.Z_VERSION_ERROR
              }, e = Object.keys(m), x = 0; x < e.length; x++) {
                var S = e[x];
                m[m[S]] = S;
              }
              Object.defineProperty(c, "codes", {
                enumerable: !0,
                value: Object.freeze(m),
                writable: !1
              }), c.Deflate = T, c.Inflate = A, c.Gzip = E, c.Gunzip = D, c.DeflateRaw = b, c.InflateRaw = R, c.Unzip = L, c.createDeflate = function(J) {
                return new T(J);
              }, c.createInflate = function(J) {
                return new A(J);
              }, c.createDeflateRaw = function(J) {
                return new b(J);
              }, c.createInflateRaw = function(J) {
                return new R(J);
              }, c.createGzip = function(J) {
                return new E(J);
              }, c.createGunzip = function(J) {
                return new D(J);
              }, c.createUnzip = function(J) {
                return new L(J);
              }, c.deflate = function(J, nt, yt) {
                return typeof nt == "function" && (yt = nt, nt = {}), P(new T(nt), J, yt);
              }, c.deflateSync = function(J, nt) {
                return O(new T(nt), J);
              }, c.gzip = function(J, nt, yt) {
                return typeof nt == "function" && (yt = nt, nt = {}), P(new E(nt), J, yt);
              }, c.gzipSync = function(J, nt) {
                return O(new E(nt), J);
              }, c.deflateRaw = function(J, nt, yt) {
                return typeof nt == "function" && (yt = nt, nt = {}), P(new b(nt), J, yt);
              }, c.deflateRawSync = function(J, nt) {
                return O(new b(nt), J);
              }, c.unzip = function(J, nt, yt) {
                return typeof nt == "function" && (yt = nt, nt = {}), P(new L(nt), J, yt);
              }, c.unzipSync = function(J, nt) {
                return O(new L(nt), J);
              }, c.inflate = function(J, nt, yt) {
                return typeof nt == "function" && (yt = nt, nt = {}), P(new A(nt), J, yt);
              }, c.inflateSync = function(J, nt) {
                return O(new A(nt), J);
              }, c.gunzip = function(J, nt, yt) {
                return typeof nt == "function" && (yt = nt, nt = {}), P(new D(nt), J, yt);
              }, c.gunzipSync = function(J, nt) {
                return O(new D(nt), J);
              }, c.inflateRaw = function(J, nt, yt) {
                return typeof nt == "function" && (yt = nt, nt = {}), P(new R(nt), J, yt);
              }, c.inflateRawSync = function(J, nt) {
                return O(new R(nt), J);
              };
              function P(J, nt, yt) {
                var bt = [], Tt = 0;
                J.on("error", Lt), J.on("end", zt), J.end(nt), It();
                function It() {
                  for (var Q; (Q = J.read()) !== null; )
                    bt.push(Q), Tt += Q.length;
                  J.once("readable", It);
                }
                function Lt(Q) {
                  J.removeListener("end", zt), J.removeListener("readable", It), yt(Q);
                }
                function zt() {
                  var Q, gt = null;
                  Tt >= h ? gt = new RangeError(d) : Q = r.concat(bt, Tt), bt = [], J.close(), yt(gt, Q);
                }
              }
              function O(J, nt) {
                if (typeof nt == "string" && (nt = r.from(nt)), !r.isBuffer(nt))
                  throw new TypeError("Not a string or buffer");
                var yt = J._finishFlushFlag;
                return J._processChunk(nt, yt);
              }
              function T(J) {
                if (!(this instanceof T))
                  return new T(J);
                M.call(this, J, o.DEFLATE);
              }
              function A(J) {
                if (!(this instanceof A))
                  return new A(J);
                M.call(this, J, o.INFLATE);
              }
              function E(J) {
                if (!(this instanceof E))
                  return new E(J);
                M.call(this, J, o.GZIP);
              }
              function D(J) {
                if (!(this instanceof D))
                  return new D(J);
                M.call(this, J, o.GUNZIP);
              }
              function b(J) {
                if (!(this instanceof b))
                  return new b(J);
                M.call(this, J, o.DEFLATERAW);
              }
              function R(J) {
                if (!(this instanceof R))
                  return new R(J);
                M.call(this, J, o.INFLATERAW);
              }
              function L(J) {
                if (!(this instanceof L))
                  return new L(J);
                M.call(this, J, o.UNZIP);
              }
              function N(J) {
                return J === o.Z_NO_FLUSH || J === o.Z_PARTIAL_FLUSH || J === o.Z_SYNC_FLUSH || J === o.Z_FULL_FLUSH || J === o.Z_FINISH || J === o.Z_BLOCK;
              }
              function M(J, nt) {
                var yt = this;
                if (this._opts = J = J || {}, this._chunkSize = J.chunkSize || c.Z_DEFAULT_CHUNK, a.call(this, J), J.flush && !N(J.flush))
                  throw new Error("Invalid flush flag: " + J.flush);
                if (J.finishFlush && !N(J.finishFlush))
                  throw new Error("Invalid flush flag: " + J.finishFlush);
                if (this._flushFlag = J.flush || o.Z_NO_FLUSH, this._finishFlushFlag = typeof J.finishFlush != "undefined" ? J.finishFlush : o.Z_FINISH, J.chunkSize && (J.chunkSize < c.Z_MIN_CHUNK || J.chunkSize > c.Z_MAX_CHUNK))
                  throw new Error("Invalid chunk size: " + J.chunkSize);
                if (J.windowBits && (J.windowBits < c.Z_MIN_WINDOWBITS || J.windowBits > c.Z_MAX_WINDOWBITS))
                  throw new Error("Invalid windowBits: " + J.windowBits);
                if (J.level && (J.level < c.Z_MIN_LEVEL || J.level > c.Z_MAX_LEVEL))
                  throw new Error("Invalid compression level: " + J.level);
                if (J.memLevel && (J.memLevel < c.Z_MIN_MEMLEVEL || J.memLevel > c.Z_MAX_MEMLEVEL))
                  throw new Error("Invalid memLevel: " + J.memLevel);
                if (J.strategy && J.strategy != c.Z_FILTERED && J.strategy != c.Z_HUFFMAN_ONLY && J.strategy != c.Z_RLE && J.strategy != c.Z_FIXED && J.strategy != c.Z_DEFAULT_STRATEGY)
                  throw new Error("Invalid strategy: " + J.strategy);
                if (J.dictionary && !r.isBuffer(J.dictionary))
                  throw new Error("Invalid dictionary: it should be a Buffer instance");
                this._handle = new o.Zlib(nt);
                var bt = this;
                this._hadError = !1, this._handle.onerror = function(Lt, zt) {
                  K(bt), bt._hadError = !0;
                  var Q = new Error(Lt);
                  Q.errno = zt, Q.code = c.codes[zt], bt.emit("error", Q);
                };
                var Tt = c.Z_DEFAULT_COMPRESSION;
                typeof J.level == "number" && (Tt = J.level);
                var It = c.Z_DEFAULT_STRATEGY;
                typeof J.strategy == "number" && (It = J.strategy), this._handle.init(J.windowBits || c.Z_DEFAULT_WINDOWBITS, Tt, J.memLevel || c.Z_DEFAULT_MEMLEVEL, It, J.dictionary), this._buffer = r.allocUnsafe(this._chunkSize), this._offset = 0, this._level = Tt, this._strategy = It, this.once("end", this.close), Object.defineProperty(this, "_closed", {
                  get: function() {
                    return !yt._handle;
                  },
                  configurable: !0,
                  enumerable: !0
                });
              }
              f.inherits(M, a), M.prototype.params = function(J, nt, yt) {
                if (J < c.Z_MIN_LEVEL || J > c.Z_MAX_LEVEL)
                  throw new RangeError("Invalid compression level: " + J);
                if (nt != c.Z_FILTERED && nt != c.Z_HUFFMAN_ONLY && nt != c.Z_RLE && nt != c.Z_FIXED && nt != c.Z_DEFAULT_STRATEGY)
                  throw new TypeError("Invalid strategy: " + nt);
                if (this._level !== J || this._strategy !== nt) {
                  var bt = this;
                  this.flush(o.Z_SYNC_FLUSH, function() {
                    u(bt._handle, "zlib binding closed"), bt._handle.params(J, nt), bt._hadError || (bt._level = J, bt._strategy = nt, yt && yt());
                  });
                } else
                  s.nextTick(yt);
              }, M.prototype.reset = function() {
                return u(this._handle, "zlib binding closed"), this._handle.reset();
              }, M.prototype._flush = function(J) {
                this._transform(r.alloc(0), "", J);
              }, M.prototype.flush = function(J, nt) {
                var yt = this, bt = this._writableState;
                (typeof J == "function" || J === void 0 && !nt) && (nt = J, J = o.Z_FULL_FLUSH), bt.ended ? nt && s.nextTick(nt) : bt.ending ? nt && this.once("end", nt) : bt.needDrain ? nt && this.once("drain", function() {
                  return yt.flush(J, nt);
                }) : (this._flushFlag = J, this.write(r.alloc(0), "", nt));
              }, M.prototype.close = function(J) {
                K(this, J), s.nextTick(ct, this);
              };
              function K(J, nt) {
                nt && s.nextTick(nt), J._handle && (J._handle.close(), J._handle = null);
              }
              function ct(J) {
                J.emit("close");
              }
              M.prototype._transform = function(J, nt, yt) {
                var bt, Tt = this._writableState, It = Tt.ending || Tt.ended, Lt = It && (!J || Tt.length === J.length);
                if (J !== null && !r.isBuffer(J))
                  return yt(new Error("invalid input"));
                if (!this._handle)
                  return yt(new Error("zlib binding closed"));
                Lt ? bt = this._finishFlushFlag : (bt = this._flushFlag, J.length >= Tt.length && (this._flushFlag = this._opts.flush || o.Z_NO_FLUSH)), this._processChunk(J, bt, yt);
              }, M.prototype._processChunk = function(J, nt, yt) {
                var bt = J && J.length, Tt = this._chunkSize - this._offset, It = 0, Lt = this, zt = typeof yt == "function";
                if (!zt) {
                  var Q = [], gt = 0, ht;
                  this.on("error", function(z) {
                    ht = z;
                  }), u(this._handle, "zlib binding closed");
                  do
                    var st = this._handle.writeSync(
                      nt,
                      J,
                      // in
                      It,
                      // in_off
                      bt,
                      // in_len
                      this._buffer,
                      // out
                      this._offset,
                      //out_off
                      Tt
                    );
                  while (!this._hadError && Ft(st[0], st[1]));
                  if (this._hadError)
                    throw ht;
                  if (gt >= h)
                    throw K(this), new RangeError(d);
                  var xt = r.concat(Q, gt);
                  return K(this), xt;
                }
                u(this._handle, "zlib binding closed");
                var G = this._handle.write(
                  nt,
                  J,
                  // in
                  It,
                  // in_off
                  bt,
                  // in_len
                  this._buffer,
                  // out
                  this._offset,
                  //out_off
                  Tt
                );
                G.buffer = J, G.callback = Ft;
                function Ft(z, C) {
                  if (this && (this.buffer = null, this.callback = null), !Lt._hadError) {
                    var k = Tt - C;
                    if (u(k >= 0, "have should not go down"), k > 0) {
                      var V = Lt._buffer.slice(Lt._offset, Lt._offset + k);
                      Lt._offset += k, zt ? Lt.push(V) : (Q.push(V), gt += V.length);
                    }
                    if ((C === 0 || Lt._offset >= Lt._chunkSize) && (Tt = Lt._chunkSize, Lt._offset = 0, Lt._buffer = r.allocUnsafe(Lt._chunkSize)), C === 0) {
                      if (It += bt - z, bt = z, !zt)
                        return !0;
                      var ot = Lt._handle.write(nt, J, It, bt, Lt._buffer, Lt._offset, Lt._chunkSize);
                      ot.callback = Ft, ot.buffer = J;
                      return;
                    }
                    if (!zt)
                      return !1;
                    yt();
                  }
                }
              }, f.inherits(T, M), f.inherits(A, M), f.inherits(E, M), f.inherits(D, M), f.inherits(b, M), f.inherits(R, M), f.inherits(L, M);
            }
          ),
          /***/
          97615: (
            /***/
            function(l, c, t) {
              var s = t(31801), r = t(12550), a = r(s("String.prototype.indexOf"));
              l.exports = function(f, u) {
                var h = s(f, !!u);
                return typeof h == "function" && a(f, ".prototype.") > -1 ? r(h) : h;
              };
            }
          ),
          /***/
          12550: (
            /***/
            function(l, c, t) {
              var s = t(21930), r = t(31801), a = t(34521), o = r("%TypeError%"), f = r("%Function.prototype.apply%"), u = r("%Function.prototype.call%"), h = r("%Reflect.apply%", !0) || s.call(u, f), d = r("%Object.defineProperty%", !0), i = r("%Math.max%");
              if (d)
                try {
                  d({}, "a", { value: 1 });
                } catch (y) {
                  d = null;
                }
              l.exports = function(m) {
                if (typeof m != "function")
                  throw new o("a function is required");
                var e = h(s, u, arguments);
                return a(
                  e,
                  1 + i(0, m.length - (arguments.length - 1)),
                  !0
                );
              };
              var p = function() {
                return h(s, f, arguments);
              };
              d ? d(l.exports, "apply", { value: p }) : l.exports.apply = p;
            }
          ),
          /***/
          72986: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer, r = function() {
                function a(i, p, y, m) {
                  typeof p == "object" && (y = p.depth, m = p.prototype, p.filter, p = p.circular);
                  var e = [], x = [], S = typeof s != "undefined";
                  typeof p == "undefined" && (p = !0), typeof y == "undefined" && (y = 1 / 0);
                  function P(O, T) {
                    if (O === null)
                      return null;
                    if (T == 0)
                      return O;
                    var A, E;
                    if (typeof O != "object")
                      return O;
                    if (a.__isArray(O))
                      A = [];
                    else if (a.__isRegExp(O))
                      A = new RegExp(O.source, d(O)), O.lastIndex && (A.lastIndex = O.lastIndex);
                    else if (a.__isDate(O))
                      A = new Date(O.getTime());
                    else {
                      if (S && s.isBuffer(O))
                        return s.allocUnsafe ? A = s.allocUnsafe(O.length) : A = new s(O.length), O.copy(A), A;
                      typeof m == "undefined" ? (E = Object.getPrototypeOf(O), A = Object.create(E)) : (A = Object.create(m), E = m);
                    }
                    if (p) {
                      var D = e.indexOf(O);
                      if (D != -1)
                        return x[D];
                      e.push(O), x.push(A);
                    }
                    for (var b in O) {
                      var R;
                      E && (R = Object.getOwnPropertyDescriptor(E, b)), !(R && R.set == null) && (A[b] = P(O[b], T - 1));
                    }
                    return A;
                  }
                  return P(i, y);
                }
                a.clonePrototype = function(p) {
                  if (p === null)
                    return null;
                  var y = function() {
                  };
                  return y.prototype = p, new y();
                };
                function o(i) {
                  return Object.prototype.toString.call(i);
                }
                a.__objToStr = o;
                function f(i) {
                  return typeof i == "object" && o(i) === "[object Date]";
                }
                a.__isDate = f;
                function u(i) {
                  return typeof i == "object" && o(i) === "[object Array]";
                }
                a.__isArray = u;
                function h(i) {
                  return typeof i == "object" && o(i) === "[object RegExp]";
                }
                a.__isRegExp = h;
                function d(i) {
                  var p = "";
                  return i.global && (p += "g"), i.ignoreCase && (p += "i"), i.multiline && (p += "m"), p;
                }
                return a.__getRegExpFlags = d, a;
              }();
              l.exports && (l.exports = r);
            }
          ),
          /***/
          67367: (
            /***/
            function(l, c, t) {
              t(19457);
              var s = t(67290);
              l.exports = s.Object.values;
            }
          ),
          /***/
          55047: (
            /***/
            function(l, c, t) {
              t(55739), t(54883), t(10853), t(35054), t(12382), t(487), t(27138), t(45007);
              var s = t(67290);
              l.exports = s.Promise;
            }
          ),
          /***/
          46121: (
            /***/
            function(l, c, t) {
              var s = t(80623);
              t(85506), t(38634), t(8108), t(67298), l.exports = s;
            }
          ),
          /***/
          97676: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(75277), a = t(28768), o = s.TypeError;
              l.exports = function(f) {
                if (r(f))
                  return f;
                throw o(a(f) + " is not a function");
              };
            }
          ),
          /***/
          43327: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(31536), a = t(28768), o = s.TypeError;
              l.exports = function(f) {
                if (r(f))
                  return f;
                throw o(a(f) + " is not a constructor");
              };
            }
          ),
          /***/
          75017: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(75277), a = s.String, o = s.TypeError;
              l.exports = function(f) {
                if (typeof f == "object" || r(f))
                  return f;
                throw o("Can't set " + a(f) + " as a prototype");
              };
            }
          ),
          /***/
          6677: (
            /***/
            function(l, c, t) {
              var s = t(52280), r = t(51569), a = t(86385), o = s("unscopables"), f = Array.prototype;
              f[o] == null && a.f(f, o, {
                configurable: !0,
                value: r(null)
              }), l.exports = function(u) {
                f[o][u] = !0;
              };
            }
          ),
          /***/
          13350: (
            /***/
            function(l, c, t) {
              var s = t(91140).charAt;
              l.exports = function(r, a, o) {
                return a + (o ? s(r, a).length : 1);
              };
            }
          ),
          /***/
          9519: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(32010), a = s.TypeError;
              l.exports = function(o, f) {
                if (r(f, o))
                  return o;
                throw a("Incorrect invocation");
              };
            }
          ),
          /***/
          83875: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(52786), a = s.String, o = s.TypeError;
              l.exports = function(f) {
                if (r(f))
                  return f;
                throw o(a(f) + " is not an object");
              };
            }
          ),
          /***/
          28794: (
            /***/
            function(l, c, t) {
              var s = t(30744), r = t(32565), a = t(47046), o = Math.min;
              l.exports = [].copyWithin || function(u, h) {
                var d = s(this), i = a(d), p = r(u, i), y = r(h, i), m = arguments.length > 2 ? arguments[2] : void 0, e = o((m === void 0 ? i : r(m, i)) - y, i - p), x = 1;
                for (y < p && p < y + e && (x = -1, y += e - 1, p += e - 1); e-- > 0; )
                  y in d ? d[p] = d[y] : delete d[p], p += x, y += x;
                return d;
              };
            }
          ),
          /***/
          55522: (
            /***/
            function(l, c, t) {
              var s = t(30744), r = t(32565), a = t(47046);
              l.exports = function(f) {
                for (var u = s(this), h = a(u), d = arguments.length, i = r(d > 1 ? arguments[1] : void 0, h), p = d > 2 ? arguments[2] : void 0, y = p === void 0 ? h : r(p, h); y > i; )
                  u[i++] = f;
                return u;
              };
            }
          ),
          /***/
          20379: (
            /***/
            function(l, c, t) {
              var s = t(68671).forEach, r = t(54324), a = r("forEach");
              l.exports = a ? [].forEach : function(f) {
                return s(this, f, arguments.length > 1 ? arguments[1] : void 0);
              };
            }
          ),
          /***/
          65626: (
            /***/
            function(l) {
              l.exports = function(c, t) {
                for (var s = 0, r = t.length, a = new c(r); r > s; )
                  a[s] = t[s++];
                return a;
              };
            }
          ),
          /***/
          84899: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(98166), a = t(79611), o = t(30744), f = t(9637), u = t(68089), h = t(31536), d = t(47046), i = t(35039), p = t(11805), y = t(77193), m = s.Array;
              l.exports = function(x) {
                var S = o(x), P = h(this), O = arguments.length, T = O > 1 ? arguments[1] : void 0, A = T !== void 0;
                A && (T = r(T, O > 2 ? arguments[2] : void 0));
                var E = y(S), D = 0, b, R, L, N, M, K;
                if (E && !(this == m && u(E)))
                  for (N = p(S, E), M = N.next, R = P ? new this() : []; !(L = a(M, N)).done; D++)
                    K = A ? f(N, T, [L.value, D], !0) : L.value, i(R, D, K);
                else
                  for (b = d(S), R = P ? new this(b) : m(b); b > D; D++)
                    K = A ? T(S[D], D) : S[D], i(R, D, K);
                return R.length = D, R;
              };
            }
          ),
          /***/
          37190: (
            /***/
            function(l, c, t) {
              var s = t(29580), r = t(32565), a = t(47046), o = function(f) {
                return function(u, h, d) {
                  var i = s(u), p = a(i), y = r(d, p), m;
                  if (f && h != h) {
                    for (; p > y; )
                      if (m = i[y++], m != m)
                        return !0;
                  } else
                    for (; p > y; y++)
                      if ((f || y in i) && i[y] === h)
                        return f || y || 0;
                  return !f && -1;
                };
              };
              l.exports = {
                // `Array.prototype.includes` method
                // https://tc39.es/ecma262/#sec-array.prototype.includes
                includes: o(!0),
                // `Array.prototype.indexOf` method
                // https://tc39.es/ecma262/#sec-array.prototype.indexof
                indexOf: o(!1)
              };
            }
          ),
          /***/
          68671: (
            /***/
            function(l, c, t) {
              var s = t(98166), r = t(88697), a = t(78609), o = t(30744), f = t(47046), u = t(80150), h = r([].push), d = function(i) {
                var p = i == 1, y = i == 2, m = i == 3, e = i == 4, x = i == 6, S = i == 7, P = i == 5 || x;
                return function(O, T, A, E) {
                  for (var D = o(O), b = a(D), R = s(T, A), L = f(b), N = 0, M = E || u, K = p ? M(O, L) : y || S ? M(O, 0) : void 0, ct, J; L > N; N++)
                    if ((P || N in b) && (ct = b[N], J = R(ct, N, D), i))
                      if (p)
                        K[N] = J;
                      else if (J)
                        switch (i) {
                          case 3:
                            return !0;
                          case 5:
                            return ct;
                          case 6:
                            return N;
                          case 2:
                            h(K, ct);
                        }
                      else
                        switch (i) {
                          case 4:
                            return !1;
                          case 7:
                            h(K, ct);
                        }
                  return x ? -1 : m || e ? e : K;
                };
              };
              l.exports = {
                // `Array.prototype.forEach` method
                // https://tc39.es/ecma262/#sec-array.prototype.foreach
                forEach: d(0),
                // `Array.prototype.map` method
                // https://tc39.es/ecma262/#sec-array.prototype.map
                map: d(1),
                // `Array.prototype.filter` method
                // https://tc39.es/ecma262/#sec-array.prototype.filter
                filter: d(2),
                // `Array.prototype.some` method
                // https://tc39.es/ecma262/#sec-array.prototype.some
                some: d(3),
                // `Array.prototype.every` method
                // https://tc39.es/ecma262/#sec-array.prototype.every
                every: d(4),
                // `Array.prototype.find` method
                // https://tc39.es/ecma262/#sec-array.prototype.find
                find: d(5),
                // `Array.prototype.findIndex` method
                // https://tc39.es/ecma262/#sec-array.prototype.findIndex
                findIndex: d(6),
                // `Array.prototype.filterReject` method
                // https://github.com/tc39/proposal-array-filtering
                filterReject: d(7)
              };
            }
          ),
          /***/
          27837: (
            /***/
            function(l, c, t) {
              var s = t(63530), r = t(29580), a = t(14229), o = t(47046), f = t(54324), u = Math.min, h = [].lastIndexOf, d = !!h && 1 / [1].lastIndexOf(1, -0) < 0, i = f("lastIndexOf"), p = d || !i;
              l.exports = p ? function(m) {
                if (d)
                  return s(h, this, arguments) || 0;
                var e = r(this), x = o(e), S = x - 1;
                for (arguments.length > 1 && (S = u(S, a(arguments[1]))), S < 0 && (S = x + S); S >= 0; S--)
                  if (S in e && e[S] === m)
                    return S || 0;
                return -1;
              } : h;
            }
          ),
          /***/
          82091: (
            /***/
            function(l, c, t) {
              var s = t(79044), r = t(52280), a = t(11197), o = r("species");
              l.exports = function(f) {
                return a >= 51 || !s(function() {
                  var u = [], h = u.constructor = {};
                  return h[o] = function() {
                    return { foo: 1 };
                  }, u[f](Boolean).foo !== 1;
                });
              };
            }
          ),
          /***/
          54324: (
            /***/
            function(l, c, t) {
              var s = t(79044);
              l.exports = function(r, a) {
                var o = [][r];
                return !!o && s(function() {
                  o.call(null, a || function() {
                    throw 1;
                  }, 1);
                });
              };
            }
          ),
          /***/
          86596: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(97676), a = t(30744), o = t(78609), f = t(47046), u = s.TypeError, h = function(d) {
                return function(i, p, y, m) {
                  r(p);
                  var e = a(i), x = o(e), S = f(e), P = d ? S - 1 : 0, O = d ? -1 : 1;
                  if (y < 2)
                    for (; ; ) {
                      if (P in x) {
                        m = x[P], P += O;
                        break;
                      }
                      if (P += O, d ? P < 0 : S <= P)
                        throw u("Reduce of empty array with no initial value");
                    }
                  for (; d ? P >= 0 : S > P; P += O)
                    P in x && (m = p(m, x[P], P, e));
                  return m;
                };
              };
              l.exports = {
                // `Array.prototype.reduce` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduce
                left: h(!1),
                // `Array.prototype.reduceRight` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduceright
                right: h(!0)
              };
            }
          ),
          /***/
          15629: (
            /***/
            function(l, c, t) {
              var s = t(88697);
              l.exports = s([].slice);
            }
          ),
          /***/
          2013: (
            /***/
            function(l, c, t) {
              var s = t(15629), r = Math.floor, a = function(u, h) {
                var d = u.length, i = r(d / 2);
                return d < 8 ? o(u, h) : f(
                  u,
                  a(s(u, 0, i), h),
                  a(s(u, i), h),
                  h
                );
              }, o = function(u, h) {
                for (var d = u.length, i = 1, p, y; i < d; ) {
                  for (y = i, p = u[i]; y && h(u[y - 1], p) > 0; )
                    u[y] = u[--y];
                  y !== i++ && (u[y] = p);
                }
                return u;
              }, f = function(u, h, d, i) {
                for (var p = h.length, y = d.length, m = 0, e = 0; m < p || e < y; )
                  u[m + e] = m < p && e < y ? i(h[m], d[e]) <= 0 ? h[m++] : d[e++] : m < p ? h[m++] : d[e++];
                return u;
              };
              l.exports = a;
            }
          ),
          /***/
          30765: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(71982), a = t(31536), o = t(52786), f = t(52280), u = f("species"), h = s.Array;
              l.exports = function(d) {
                var i;
                return r(d) && (i = d.constructor, a(i) && (i === h || r(i.prototype)) ? i = void 0 : o(i) && (i = i[u], i === null && (i = void 0))), i === void 0 ? h : i;
              };
            }
          ),
          /***/
          80150: (
            /***/
            function(l, c, t) {
              var s = t(30765);
              l.exports = function(r, a) {
                return new (s(r))(a === 0 ? 0 : a);
              };
            }
          ),
          /***/
          9637: (
            /***/
            function(l, c, t) {
              var s = t(83875), r = t(18744);
              l.exports = function(a, o, f, u) {
                try {
                  return u ? o(s(f)[0], f[1]) : o(f);
                } catch (h) {
                  r(a, "throw", h);
                }
              };
            }
          ),
          /***/
          8662: (
            /***/
            function(l, c, t) {
              var s = t(52280), r = s("iterator"), a = !1;
              try {
                var o = 0, f = {
                  next: function() {
                    return { done: !!o++ };
                  },
                  return: function() {
                    a = !0;
                  }
                };
                f[r] = function() {
                  return this;
                }, Array.from(f, function() {
                  throw 2;
                });
              } catch (u) {
              }
              l.exports = function(u, h) {
                if (!h && !a)
                  return !1;
                var d = !1;
                try {
                  var i = {};
                  i[r] = function() {
                    return {
                      next: function() {
                        return { done: d = !0 };
                      }
                    };
                  }, u(i);
                } catch (p) {
                }
                return d;
              };
            }
          ),
          /***/
          79159: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = s({}.toString), a = s("".slice);
              l.exports = function(o) {
                return a(r(o), 8, -1);
              };
            }
          ),
          /***/
          36994: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(57301), a = t(75277), o = t(79159), f = t(52280), u = f("toStringTag"), h = s.Object, d = o(function() {
                return arguments;
              }()) == "Arguments", i = function(p, y) {
                try {
                  return p[y];
                } catch (m) {
                }
              };
              l.exports = r ? o : function(p) {
                var y, m, e;
                return p === void 0 ? "Undefined" : p === null ? "Null" : typeof (m = i(y = h(p), u)) == "string" ? m : d ? o(y) : (e = o(y)) == "Object" && a(y.callee) ? "Arguments" : e;
              };
            }
          ),
          /***/
          8457: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(15629), a = s("".replace), o = s("".split), f = s([].join), u = function(p) {
                return String(Error(p).stack);
              }("zxcasd"), h = /\n\s*at [^:]*:[^\n]*/, d = h.test(u), i = /@[^\n]*\n/.test(u) && !/zxcasd/.test(u);
              l.exports = function(p, y) {
                if (typeof p != "string")
                  return p;
                if (d)
                  for (; y--; )
                    p = a(p, h, "");
                else if (i)
                  return f(r(o(p, `
`), y), `
`);
                return p;
              };
            }
          ),
          /***/
          33513: (
            /***/
            function(l, c, t) {
              var s = t(86385).f, r = t(51569), a = t(7592), o = t(98166), f = t(9519), u = t(5166), h = t(61495), d = t(57323), i = t(7493), p = t(44296).fastKey, y = t(20821), m = y.set, e = y.getterFor;
              l.exports = {
                getConstructor: function(x, S, P, O) {
                  var T = x(function(R, L) {
                    f(R, A), m(R, {
                      type: S,
                      index: r(null),
                      first: void 0,
                      last: void 0,
                      size: 0
                    }), i || (R.size = 0), L != null && u(L, R[O], { that: R, AS_ENTRIES: P });
                  }), A = T.prototype, E = e(S), D = function(R, L, N) {
                    var M = E(R), K = b(R, L), ct, J;
                    return K ? K.value = N : (M.last = K = {
                      index: J = p(L, !0),
                      key: L,
                      value: N,
                      previous: ct = M.last,
                      next: void 0,
                      removed: !1
                    }, M.first || (M.first = K), ct && (ct.next = K), i ? M.size++ : R.size++, J !== "F" && (M.index[J] = K)), R;
                  }, b = function(R, L) {
                    var N = E(R), M = p(L), K;
                    if (M !== "F")
                      return N.index[M];
                    for (K = N.first; K; K = K.next)
                      if (K.key == L)
                        return K;
                  };
                  return a(A, {
                    // `{ Map, Set }.prototype.clear()` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.clear
                    // https://tc39.es/ecma262/#sec-set.prototype.clear
                    clear: function() {
                      for (var L = this, N = E(L), M = N.index, K = N.first; K; )
                        K.removed = !0, K.previous && (K.previous = K.previous.next = void 0), delete M[K.index], K = K.next;
                      N.first = N.last = void 0, i ? N.size = 0 : L.size = 0;
                    },
                    // `{ Map, Set }.prototype.delete(key)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.delete
                    // https://tc39.es/ecma262/#sec-set.prototype.delete
                    delete: function(R) {
                      var L = this, N = E(L), M = b(L, R);
                      if (M) {
                        var K = M.next, ct = M.previous;
                        delete N.index[M.index], M.removed = !0, ct && (ct.next = K), K && (K.previous = ct), N.first == M && (N.first = K), N.last == M && (N.last = ct), i ? N.size-- : L.size--;
                      }
                      return !!M;
                    },
                    // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.foreach
                    // https://tc39.es/ecma262/#sec-set.prototype.foreach
                    forEach: function(L) {
                      for (var N = E(this), M = o(L, arguments.length > 1 ? arguments[1] : void 0), K; K = K ? K.next : N.first; )
                        for (M(K.value, K.key, this); K && K.removed; )
                          K = K.previous;
                    },
                    // `{ Map, Set}.prototype.has(key)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.has
                    // https://tc39.es/ecma262/#sec-set.prototype.has
                    has: function(L) {
                      return !!b(this, L);
                    }
                  }), a(A, P ? {
                    // `Map.prototype.get(key)` method
                    // https://tc39.es/ecma262/#sec-map.prototype.get
                    get: function(L) {
                      var N = b(this, L);
                      return N && N.value;
                    },
                    // `Map.prototype.set(key, value)` method
                    // https://tc39.es/ecma262/#sec-map.prototype.set
                    set: function(L, N) {
                      return D(this, L === 0 ? 0 : L, N);
                    }
                  } : {
                    // `Set.prototype.add(value)` method
                    // https://tc39.es/ecma262/#sec-set.prototype.add
                    add: function(L) {
                      return D(this, L = L === 0 ? 0 : L, L);
                    }
                  }), i && s(A, "size", {
                    get: function() {
                      return E(this).size;
                    }
                  }), T;
                },
                setStrong: function(x, S, P) {
                  var O = S + " Iterator", T = e(S), A = e(O);
                  h(x, S, function(E, D) {
                    m(this, {
                      type: O,
                      target: E,
                      state: T(E),
                      kind: D,
                      last: void 0
                    });
                  }, function() {
                    for (var E = A(this), D = E.kind, b = E.last; b && b.removed; )
                      b = b.previous;
                    return !E.target || !(E.last = b = b ? b.next : E.state.first) ? (E.target = void 0, { value: void 0, done: !0 }) : D == "keys" ? { value: b.key, done: !1 } : D == "values" ? { value: b.value, done: !1 } : { value: [b.key, b.value], done: !1 };
                  }, P ? "entries" : "values", !P, !0), d(S);
                }
              };
            }
          ),
          /***/
          9121: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(88697), o = t(86291), f = t(35974), u = t(44296), h = t(5166), d = t(9519), i = t(75277), p = t(52786), y = t(79044), m = t(8662), e = t(60878), x = t(59250);
              l.exports = function(S, P, O) {
                var T = S.indexOf("Map") !== -1, A = S.indexOf("Weak") !== -1, E = T ? "set" : "add", D = r[S], b = D && D.prototype, R = D, L = {}, N = function(bt) {
                  var Tt = a(b[bt]);
                  f(
                    b,
                    bt,
                    bt == "add" ? function(Lt) {
                      return Tt(this, Lt === 0 ? 0 : Lt), this;
                    } : bt == "delete" ? function(It) {
                      return A && !p(It) ? !1 : Tt(this, It === 0 ? 0 : It);
                    } : bt == "get" ? function(Lt) {
                      return A && !p(Lt) ? void 0 : Tt(this, Lt === 0 ? 0 : Lt);
                    } : bt == "has" ? function(Lt) {
                      return A && !p(Lt) ? !1 : Tt(this, Lt === 0 ? 0 : Lt);
                    } : function(Lt, zt) {
                      return Tt(this, Lt === 0 ? 0 : Lt, zt), this;
                    }
                  );
                }, M = o(
                  S,
                  !i(D) || !(A || b.forEach && !y(function() {
                    new D().entries().next();
                  }))
                );
                if (M)
                  R = O.getConstructor(P, S, T, E), u.enable();
                else if (o(S, !0)) {
                  var K = new R(), ct = K[E](A ? {} : -0, 1) != K, J = y(function() {
                    K.has(1);
                  }), nt = m(function(bt) {
                    new D(bt);
                  }), yt = !A && y(function() {
                    for (var bt = new D(), Tt = 5; Tt--; )
                      bt[E](Tt, Tt);
                    return !bt.has(-0);
                  });
                  nt || (R = P(function(bt, Tt) {
                    d(bt, b);
                    var It = x(new D(), bt, R);
                    return Tt != null && h(Tt, It[E], { that: It, AS_ENTRIES: T }), It;
                  }), R.prototype = b, b.constructor = R), (J || yt) && (N("delete"), N("has"), T && N("get")), (yt || ct) && N(E), A && b.clear && delete b.clear;
                }
                return L[S] = R, s({ global: !0, forced: R != D }, L), e(R, S), A || O.setStrong(R, S, T), R;
              };
            }
          ),
          /***/
          73870: (
            /***/
            function(l, c, t) {
              var s = t(24792), r = t(31561), a = t(66012), o = t(86385);
              l.exports = function(f, u) {
                for (var h = r(u), d = o.f, i = a.f, p = 0; p < h.length; p++) {
                  var y = h[p];
                  s(f, y) || d(f, y, i(u, y));
                }
              };
            }
          ),
          /***/
          15454: (
            /***/
            function(l, c, t) {
              var s = t(52280), r = s("match");
              l.exports = function(a) {
                var o = /./;
                try {
                  "/./"[a](o);
                } catch (f) {
                  try {
                    return o[r] = !1, "/./"[a](o);
                  } catch (u) {
                  }
                }
                return !1;
              };
            }
          ),
          /***/
          25115: (
            /***/
            function(l, c, t) {
              var s = t(79044);
              l.exports = !s(function() {
                function r() {
                }
                return r.prototype.constructor = null, Object.getPrototypeOf(new r()) !== r.prototype;
              });
            }
          ),
          /***/
          75304: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(96411), a = t(28967), o = /"/g, f = s("".replace);
              l.exports = function(u, h, d, i) {
                var p = a(r(u)), y = "<" + h;
                return d !== "" && (y += " " + d + '="' + f(a(i), o, "&quot;") + '"'), y + ">" + p + "</" + h + ">";
              };
            }
          ),
          /***/
          6181: (
            /***/
            function(l, c, t) {
              var s = t(97022).IteratorPrototype, r = t(51569), a = t(69199), o = t(60878), f = t(44818), u = function() {
                return this;
              };
              l.exports = function(h, d, i) {
                var p = d + " Iterator";
                return h.prototype = r(s, { next: a(1, i) }), o(h, p, !1, !0), f[p] = u, h;
              };
            }
          ),
          /***/
          45899: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(86385), a = t(69199);
              l.exports = s ? function(o, f, u) {
                return r.f(o, f, a(1, u));
              } : function(o, f, u) {
                return o[f] = u, o;
              };
            }
          ),
          /***/
          69199: (
            /***/
            function(l) {
              l.exports = function(c, t) {
                return {
                  enumerable: !(c & 1),
                  configurable: !(c & 2),
                  writable: !(c & 4),
                  value: t
                };
              };
            }
          ),
          /***/
          35039: (
            /***/
            function(l, c, t) {
              var s = t(383), r = t(86385), a = t(69199);
              l.exports = function(o, f, u) {
                var h = s(f);
                h in o ? r.f(o, h, a(0, u)) : o[h] = u;
              };
            }
          ),
          /***/
          67707: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(83875), a = t(17141), o = s.TypeError;
              l.exports = function(f) {
                if (r(this), f === "string" || f === "default")
                  f = "string";
                else if (f !== "number")
                  throw o("Incorrect hint");
                return a(this, f);
              };
            }
          ),
          /***/
          61495: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(79611), a = t(21178), o = t(55316), f = t(75277), u = t(6181), h = t(12654), d = t(22412), i = t(60878), p = t(45899), y = t(35974), m = t(52280), e = t(44818), x = t(97022), S = o.PROPER, P = o.CONFIGURABLE, O = x.IteratorPrototype, T = x.BUGGY_SAFARI_ITERATORS, A = m("iterator"), E = "keys", D = "values", b = "entries", R = function() {
                return this;
              };
              l.exports = function(L, N, M, K, ct, J, nt) {
                u(M, N, K);
                var yt = function(xt) {
                  if (xt === ct && zt)
                    return zt;
                  if (!T && xt in It)
                    return It[xt];
                  switch (xt) {
                    case E:
                      return function() {
                        return new M(this, xt);
                      };
                    case D:
                      return function() {
                        return new M(this, xt);
                      };
                    case b:
                      return function() {
                        return new M(this, xt);
                      };
                  }
                  return function() {
                    return new M(this);
                  };
                }, bt = N + " Iterator", Tt = !1, It = L.prototype, Lt = It[A] || It["@@iterator"] || ct && It[ct], zt = !T && Lt || yt(ct), Q = N == "Array" && It.entries || Lt, gt, ht, st;
                if (Q && (gt = h(Q.call(new L())), gt !== Object.prototype && gt.next && (!a && h(gt) !== O && (d ? d(gt, O) : f(gt[A]) || y(gt, A, R)), i(gt, bt, !0, !0), a && (e[bt] = R))), S && ct == D && Lt && Lt.name !== D && (!a && P ? p(It, "name", D) : (Tt = !0, zt = function() {
                  return r(Lt, this);
                })), ct)
                  if (ht = {
                    values: yt(D),
                    keys: J ? zt : yt(E),
                    entries: yt(b)
                  }, nt)
                    for (st in ht)
                      (T || Tt || !(st in It)) && y(It, st, ht[st]);
                  else
                    s({ target: N, proto: !0, forced: T || Tt }, ht);
                return (!a || nt) && It[A] !== zt && y(It, A, zt, { name: ct }), e[N] = zt, ht;
              };
            }
          ),
          /***/
          68308: (
            /***/
            function(l, c, t) {
              var s = t(67290), r = t(24792), a = t(20127), o = t(86385).f;
              l.exports = function(f) {
                var u = s.Symbol || (s.Symbol = {});
                r(u, f) || o(u, f, {
                  value: a.f(f)
                });
              };
            }
          ),
          /***/
          7493: (
            /***/
            function(l, c, t) {
              var s = t(79044);
              l.exports = !s(function() {
                return Object.defineProperty({}, 1, { get: function() {
                  return 7;
                } })[1] != 7;
              });
            }
          ),
          /***/
          92750: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(52786), a = s.document, o = r(a) && r(a.createElement);
              l.exports = function(f) {
                return o ? a.createElement(f) : {};
              };
            }
          ),
          /***/
          12848: (
            /***/
            function(l) {
              l.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
              };
            }
          ),
          /***/
          79189: (
            /***/
            function(l, c, t) {
              var s = t(92750), r = s("span").classList, a = r && r.constructor && r.constructor.prototype;
              l.exports = a === Object.prototype ? void 0 : a;
            }
          ),
          /***/
          34631: (
            /***/
            function(l, c, t) {
              var s = t(82647), r = s.match(/firefox\/(\d+)/i);
              l.exports = !!r && +r[1];
            }
          ),
          /***/
          47923: (
            /***/
            function(l) {
              l.exports = typeof window == "object";
            }
          ),
          /***/
          80442: (
            /***/
            function(l, c, t) {
              var s = t(82647);
              l.exports = /MSIE|Trident/.test(s);
            }
          ),
          /***/
          55357: (
            /***/
            function(l, c, t) {
              var s = t(82647), r = t(98363);
              l.exports = /ipad|iphone|ipod/i.test(s) && r.Pebble !== void 0;
            }
          ),
          /***/
          53121: (
            /***/
            function(l, c, t) {
              var s = t(82647);
              l.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(s);
            }
          ),
          /***/
          93921: (
            /***/
            function(l, c, t) {
              var s = t(79159), r = t(98363);
              l.exports = s(r.process) == "process";
            }
          ),
          /***/
          14402: (
            /***/
            function(l, c, t) {
              var s = t(82647);
              l.exports = /web0s(?!.*chrome)/i.test(s);
            }
          ),
          /***/
          82647: (
            /***/
            function(l, c, t) {
              var s = t(22773);
              l.exports = s("navigator", "userAgent") || "";
            }
          ),
          /***/
          11197: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(82647), a = s.process, o = s.Deno, f = a && a.versions || o && o.version, u = f && f.v8, h, d;
              u && (h = u.split("."), d = h[0] > 0 && h[0] < 4 ? 1 : +(h[0] + h[1])), !d && r && (h = r.match(/Edge\/(\d+)/), (!h || h[1] >= 74) && (h = r.match(/Chrome\/(\d+)/), h && (d = +h[1]))), l.exports = d;
            }
          ),
          /***/
          76929: (
            /***/
            function(l, c, t) {
              var s = t(82647), r = s.match(/AppleWebKit\/(\d+)\./);
              l.exports = !!r && +r[1];
            }
          ),
          /***/
          48869: (
            /***/
            function(l) {
              l.exports = [
                "constructor",
                "hasOwnProperty",
                "isPrototypeOf",
                "propertyIsEnumerable",
                "toLocaleString",
                "toString",
                "valueOf"
              ];
            }
          ),
          /***/
          67679: (
            /***/
            function(l, c, t) {
              var s = t(79044), r = t(69199);
              l.exports = !s(function() {
                var a = Error("a");
                return "stack" in a ? (Object.defineProperty(a, "stack", r(1, 7)), a.stack !== 7) : !0;
              });
            }
          ),
          /***/
          19882: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(66012).f, a = t(45899), o = t(35974), f = t(51621), u = t(73870), h = t(86291);
              l.exports = function(d, i) {
                var p = d.target, y = d.global, m = d.stat, e, x, S, P, O, T;
                if (y ? x = s : m ? x = s[p] || f(p, {}) : x = (s[p] || {}).prototype, x)
                  for (S in i) {
                    if (O = i[S], d.noTargetGet ? (T = r(x, S), P = T && T.value) : P = x[S], e = h(y ? S : p + (m ? "." : "#") + S, d.forced), !e && P !== void 0) {
                      if (typeof O == typeof P)
                        continue;
                      u(O, P);
                    }
                    (d.sham || P && P.sham) && a(O, "sham", !0), o(x, S, O, d);
                  }
              };
            }
          ),
          /***/
          79044: (
            /***/
            function(l) {
              l.exports = function(c) {
                try {
                  return !!c();
                } catch (t) {
                  return !0;
                }
              };
            }
          ),
          /***/
          81492: (
            /***/
            function(l, c, t) {
              t(39275);
              var s = t(88697), r = t(35974), a = t(99749), o = t(79044), f = t(52280), u = t(45899), h = f("species"), d = RegExp.prototype;
              l.exports = function(i, p, y, m) {
                var e = f(i), x = !o(function() {
                  var T = {};
                  return T[e] = function() {
                    return 7;
                  }, ""[i](T) != 7;
                }), S = x && !o(function() {
                  var T = !1, A = /a/;
                  return i === "split" && (A = {}, A.constructor = {}, A.constructor[h] = function() {
                    return A;
                  }, A.flags = "", A[e] = /./[e]), A.exec = function() {
                    return T = !0, null;
                  }, A[e](""), !T;
                });
                if (!x || !S || y) {
                  var P = s(/./[e]), O = p(e, ""[i], function(T, A, E, D, b) {
                    var R = s(T), L = A.exec;
                    return L === a || L === d.exec ? x && !b ? { done: !0, value: P(A, E, D) } : { done: !0, value: R(E, A, D) } : { done: !1 };
                  });
                  r(String.prototype, i, O[0]), r(d, e, O[1]);
                }
                m && u(d[e], "sham", !0);
              };
            }
          ),
          /***/
          51207: (
            /***/
            function(l, c, t) {
              var s = t(79044);
              l.exports = !s(function() {
                return Object.isExtensible(Object.preventExtensions({}));
              });
            }
          ),
          /***/
          63530: (
            /***/
            function(l) {
              var c = Function.prototype, t = c.apply, s = c.bind, r = c.call;
              l.exports = typeof Reflect == "object" && Reflect.apply || (s ? r.bind(t) : function() {
                return r.apply(t, arguments);
              });
            }
          ),
          /***/
          98166: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(97676), a = s(s.bind);
              l.exports = function(o, f) {
                return r(o), f === void 0 ? o : a ? a(o, f) : function() {
                  return o.apply(f, arguments);
                };
              };
            }
          ),
          /***/
          52381: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(88697), a = t(97676), o = t(52786), f = t(24792), u = t(15629), h = s.Function, d = r([].concat), i = r([].join), p = {}, y = function(m, e, x) {
                if (!f(p, e)) {
                  for (var S = [], P = 0; P < e; P++)
                    S[P] = "a[" + P + "]";
                  p[e] = h("C,a", "return new C(" + i(S, ",") + ")");
                }
                return p[e](m, x);
              };
              l.exports = h.bind || function(e) {
                var x = a(this), S = x.prototype, P = u(arguments, 1), O = function() {
                  var A = d(P, u(arguments));
                  return this instanceof O ? y(x, A.length, A) : x.apply(e, A);
                };
                return o(S) && (O.prototype = S), O;
              };
            }
          ),
          /***/
          79611: (
            /***/
            function(l) {
              var c = Function.prototype.call;
              l.exports = c.bind ? c.bind(c) : function() {
                return c.apply(c, arguments);
              };
            }
          ),
          /***/
          55316: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(24792), a = Function.prototype, o = s && Object.getOwnPropertyDescriptor, f = r(a, "name"), u = f && function() {
              }.name === "something", h = f && (!s || s && o(a, "name").configurable);
              l.exports = {
                EXISTS: f,
                PROPER: u,
                CONFIGURABLE: h
              };
            }
          ),
          /***/
          88697: (
            /***/
            function(l) {
              var c = Function.prototype, t = c.bind, s = c.call, r = t && t.bind(s);
              l.exports = t ? function(a) {
                return a && r(s, a);
              } : function(a) {
                return a && function() {
                  return s.apply(a, arguments);
                };
              };
            }
          ),
          /***/
          22773: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(75277), a = function(o) {
                return r(o) ? o : void 0;
              };
              l.exports = function(o, f) {
                return arguments.length < 2 ? a(s[o]) : s[o] && s[o][f];
              };
            }
          ),
          /***/
          77193: (
            /***/
            function(l, c, t) {
              var s = t(36994), r = t(97219), a = t(44818), o = t(52280), f = o("iterator");
              l.exports = function(u) {
                if (u != null)
                  return r(u, f) || r(u, "@@iterator") || a[s(u)];
              };
            }
          ),
          /***/
          11805: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(79611), a = t(97676), o = t(83875), f = t(28768), u = t(77193), h = s.TypeError;
              l.exports = function(d, i) {
                var p = arguments.length < 2 ? u(d) : i;
                if (a(p))
                  return o(r(p, d));
                throw h(f(d) + " is not iterable");
              };
            }
          ),
          /***/
          97219: (
            /***/
            function(l, c, t) {
              var s = t(97676);
              l.exports = function(r, a) {
                var o = r[a];
                return o == null ? void 0 : s(o);
              };
            }
          ),
          /***/
          81373: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(30744), a = Math.floor, o = s("".charAt), f = s("".replace), u = s("".slice), h = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, d = /\$([$&'`]|\d{1,2})/g;
              l.exports = function(i, p, y, m, e, x) {
                var S = y + i.length, P = m.length, O = d;
                return e !== void 0 && (e = r(e), O = h), f(x, O, function(T, A) {
                  var E;
                  switch (o(A, 0)) {
                    case "$":
                      return "$";
                    case "&":
                      return i;
                    case "`":
                      return u(p, 0, y);
                    case "'":
                      return u(p, S);
                    case "<":
                      E = e[u(A, 1, -1)];
                      break;
                    default:
                      var D = +A;
                      if (D === 0)
                        return T;
                      if (D > P) {
                        var b = a(D / 10);
                        return b === 0 ? T : b <= P ? m[b - 1] === void 0 ? o(A, 1) : m[b - 1] + o(A, 1) : T;
                      }
                      E = m[D - 1];
                  }
                  return E === void 0 ? "" : E;
                });
              };
            }
          ),
          /***/
          98363: (
            /***/
            function(l, c, t) {
              var s = function(r) {
                return r && r.Math == Math && r;
              };
              l.exports = // eslint-disable-next-line es/no-global-this -- safe
              s(typeof globalThis == "object" && globalThis) || s(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
              s(typeof self == "object" && self) || s(typeof t.g == "object" && t.g) || // eslint-disable-next-line no-new-func -- fallback
              function() {
                return this;
              }() || Function("return this")();
            }
          ),
          /***/
          24792: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(30744), a = s({}.hasOwnProperty);
              l.exports = Object.hasOwn || function(f, u) {
                return a(r(f), u);
              };
            }
          ),
          /***/
          47505: (
            /***/
            function(l) {
              l.exports = {};
            }
          ),
          /***/
          46271: (
            /***/
            function(l, c, t) {
              var s = t(98363);
              l.exports = function(r, a) {
                var o = s.console;
                o && o.error && (arguments.length == 1 ? o.error(r) : o.error(r, a));
              };
            }
          ),
          /***/
          47055: (
            /***/
            function(l, c, t) {
              var s = t(22773);
              l.exports = s("document", "documentElement");
            }
          ),
          /***/
          67548: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(79044), a = t(92750);
              l.exports = !s && !r(function() {
                return Object.defineProperty(a("div"), "a", {
                  get: function() {
                    return 7;
                  }
                }).a != 7;
              });
            }
          ),
          /***/
          45489: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = s.Array, a = Math.abs, o = Math.pow, f = Math.floor, u = Math.log, h = Math.LN2, d = function(p, y, m) {
                var e = r(m), x = m * 8 - y - 1, S = (1 << x) - 1, P = S >> 1, O = y === 23 ? o(2, -24) - o(2, -77) : 0, T = p < 0 || p === 0 && 1 / p < 0 ? 1 : 0, A = 0, E, D, b;
                for (p = a(p), p != p || p === 1 / 0 ? (D = p != p ? 1 : 0, E = S) : (E = f(u(p) / h), p * (b = o(2, -E)) < 1 && (E--, b *= 2), E + P >= 1 ? p += O / b : p += O * o(2, 1 - P), p * b >= 2 && (E++, b /= 2), E + P >= S ? (D = 0, E = S) : E + P >= 1 ? (D = (p * b - 1) * o(2, y), E = E + P) : (D = p * o(2, P - 1) * o(2, y), E = 0)); y >= 8; e[A++] = D & 255, D /= 256, y -= 8)
                  ;
                for (E = E << y | D, x += y; x > 0; e[A++] = E & 255, E /= 256, x -= 8)
                  ;
                return e[--A] |= T * 128, e;
              }, i = function(p, y) {
                var m = p.length, e = m * 8 - y - 1, x = (1 << e) - 1, S = x >> 1, P = e - 7, O = m - 1, T = p[O--], A = T & 127, E;
                for (T >>= 7; P > 0; A = A * 256 + p[O], O--, P -= 8)
                  ;
                for (E = A & (1 << -P) - 1, A >>= -P, P += y; P > 0; E = E * 256 + p[O], O--, P -= 8)
                  ;
                if (A === 0)
                  A = 1 - S;
                else {
                  if (A === x)
                    return E ? NaN : T ? -1 / 0 : 1 / 0;
                  E = E + o(2, y), A = A - S;
                }
                return (T ? -1 : 1) * E * o(2, A - y);
              };
              l.exports = {
                pack: d,
                unpack: i
              };
            }
          ),
          /***/
          78609: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(88697), a = t(79044), o = t(79159), f = s.Object, u = r("".split);
              l.exports = a(function() {
                return !f("z").propertyIsEnumerable(0);
              }) ? function(h) {
                return o(h) == "String" ? u(h, "") : f(h);
              } : f;
            }
          ),
          /***/
          59250: (
            /***/
            function(l, c, t) {
              var s = t(75277), r = t(52786), a = t(22412);
              l.exports = function(o, f, u) {
                var h, d;
                return (
                  // it can work only with native `setPrototypeOf`
                  a && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
                  s(h = f.constructor) && h !== u && r(d = h.prototype) && d !== u.prototype && a(o, d), o
                );
              };
            }
          ),
          /***/
          56429: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(75277), a = t(49415), o = s(Function.toString);
              r(a.inspectSource) || (a.inspectSource = function(f) {
                return o(f);
              }), l.exports = a.inspectSource;
            }
          ),
          /***/
          58323: (
            /***/
            function(l, c, t) {
              var s = t(52786), r = t(45899);
              l.exports = function(a, o) {
                s(o) && "cause" in o && r(a, "cause", o.cause);
              };
            }
          ),
          /***/
          44296: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(88697), a = t(47505), o = t(52786), f = t(24792), u = t(86385).f, h = t(87994), d = t(74938), i = t(34524), p = t(51207), y = !1, m = i("meta"), e = 0, x = Object.isExtensible || function() {
                return !0;
              }, S = function(D) {
                u(D, m, { value: {
                  objectID: "O" + e++,
                  // object ID
                  weakData: {}
                  // weak collections IDs
                } });
              }, P = function(D, b) {
                if (!o(D))
                  return typeof D == "symbol" ? D : (typeof D == "string" ? "S" : "P") + D;
                if (!f(D, m)) {
                  if (!x(D))
                    return "F";
                  if (!b)
                    return "E";
                  S(D);
                }
                return D[m].objectID;
              }, O = function(D, b) {
                if (!f(D, m)) {
                  if (!x(D))
                    return !0;
                  if (!b)
                    return !1;
                  S(D);
                }
                return D[m].weakData;
              }, T = function(D) {
                return p && y && x(D) && !f(D, m) && S(D), D;
              }, A = function() {
                E.enable = function() {
                }, y = !0;
                var D = h.f, b = r([].splice), R = {};
                R[m] = 1, D(R).length && (h.f = function(L) {
                  for (var N = D(L), M = 0, K = N.length; M < K; M++)
                    if (N[M] === m) {
                      b(N, M, 1);
                      break;
                    }
                  return N;
                }, s({ target: "Object", stat: !0, forced: !0 }, {
                  getOwnPropertyNames: d.f
                }));
              }, E = l.exports = {
                enable: A,
                fastKey: P,
                getWeakData: O,
                onFreeze: T
              };
              a[m] = !0;
            }
          ),
          /***/
          20821: (
            /***/
            function(l, c, t) {
              var s = t(36830), r = t(98363), a = t(88697), o = t(52786), f = t(45899), u = t(24792), h = t(49415), d = t(50466), i = t(47505), p = "Object already initialized", y = r.TypeError, m = r.WeakMap, e, x, S, P = function(R) {
                return S(R) ? x(R) : e(R, {});
              }, O = function(R) {
                return function(L) {
                  var N;
                  if (!o(L) || (N = x(L)).type !== R)
                    throw y("Incompatible receiver, " + R + " required");
                  return N;
                };
              };
              if (s || h.state) {
                var T = h.state || (h.state = new m()), A = a(T.get), E = a(T.has), D = a(T.set);
                e = function(R, L) {
                  if (E(T, R))
                    throw new y(p);
                  return L.facade = R, D(T, R, L), L;
                }, x = function(R) {
                  return A(T, R) || {};
                }, S = function(R) {
                  return E(T, R);
                };
              } else {
                var b = d("state");
                i[b] = !0, e = function(R, L) {
                  if (u(R, b))
                    throw new y(p);
                  return L.facade = R, f(R, b, L), L;
                }, x = function(R) {
                  return u(R, b) ? R[b] : {};
                }, S = function(R) {
                  return u(R, b);
                };
              }
              l.exports = {
                set: e,
                get: x,
                has: S,
                enforce: P,
                getterFor: O
              };
            }
          ),
          /***/
          68089: (
            /***/
            function(l, c, t) {
              var s = t(52280), r = t(44818), a = s("iterator"), o = Array.prototype;
              l.exports = function(f) {
                return f !== void 0 && (r.Array === f || o[a] === f);
              };
            }
          ),
          /***/
          71982: (
            /***/
            function(l, c, t) {
              var s = t(79159);
              l.exports = Array.isArray || function(a) {
                return s(a) == "Array";
              };
            }
          ),
          /***/
          75277: (
            /***/
            function(l) {
              l.exports = function(c) {
                return typeof c == "function";
              };
            }
          ),
          /***/
          31536: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(79044), a = t(75277), o = t(36994), f = t(22773), u = t(56429), h = function() {
              }, d = [], i = f("Reflect", "construct"), p = /^\s*(?:class|function)\b/, y = s(p.exec), m = !p.exec(h), e = function(S) {
                if (!a(S))
                  return !1;
                try {
                  return i(h, d, S), !0;
                } catch (P) {
                  return !1;
                }
              }, x = function(S) {
                if (!a(S))
                  return !1;
                switch (o(S)) {
                  case "AsyncFunction":
                  case "GeneratorFunction":
                  case "AsyncGeneratorFunction":
                    return !1;
                }
                return m || !!y(p, u(S));
              };
              l.exports = !i || r(function() {
                var S;
                return e(e.call) || !e(Object) || !e(function() {
                  S = !0;
                }) || S;
              }) ? x : e;
            }
          ),
          /***/
          86291: (
            /***/
            function(l, c, t) {
              var s = t(79044), r = t(75277), a = /#|\.prototype\./, o = function(i, p) {
                var y = u[f(i)];
                return y == d ? !0 : y == h ? !1 : r(p) ? s(p) : !!p;
              }, f = o.normalize = function(i) {
                return String(i).replace(a, ".").toLowerCase();
              }, u = o.data = {}, h = o.NATIVE = "N", d = o.POLYFILL = "P";
              l.exports = o;
            }
          ),
          /***/
          57507: (
            /***/
            function(l, c, t) {
              var s = t(52786), r = Math.floor;
              l.exports = Number.isInteger || function(o) {
                return !s(o) && isFinite(o) && r(o) === o;
              };
            }
          ),
          /***/
          52786: (
            /***/
            function(l, c, t) {
              var s = t(75277);
              l.exports = function(r) {
                return typeof r == "object" ? r !== null : s(r);
              };
            }
          ),
          /***/
          21178: (
            /***/
            function(l) {
              l.exports = !1;
            }
          ),
          /***/
          42622: (
            /***/
            function(l, c, t) {
              var s = t(52786), r = t(79159), a = t(52280), o = a("match");
              l.exports = function(f) {
                var u;
                return s(f) && ((u = f[o]) !== void 0 ? !!u : r(f) == "RegExp");
              };
            }
          ),
          /***/
          66681: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(22773), a = t(75277), o = t(32010), f = t(189), u = s.Object;
              l.exports = f ? function(h) {
                return typeof h == "symbol";
              } : function(h) {
                var d = r("Symbol");
                return a(d) && o(d.prototype, u(h));
              };
            }
          ),
          /***/
          5166: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(98166), a = t(79611), o = t(83875), f = t(28768), u = t(68089), h = t(47046), d = t(32010), i = t(11805), p = t(77193), y = t(18744), m = s.TypeError, e = function(S, P) {
                this.stopped = S, this.result = P;
              }, x = e.prototype;
              l.exports = function(S, P, O) {
                var T = O && O.that, A = !!(O && O.AS_ENTRIES), E = !!(O && O.IS_ITERATOR), D = !!(O && O.INTERRUPTED), b = r(P, T), R, L, N, M, K, ct, J, nt = function(bt) {
                  return R && y(R, "normal", bt), new e(!0, bt);
                }, yt = function(bt) {
                  return A ? (o(bt), D ? b(bt[0], bt[1], nt) : b(bt[0], bt[1])) : D ? b(bt, nt) : b(bt);
                };
                if (E)
                  R = S;
                else {
                  if (L = p(S), !L)
                    throw m(f(S) + " is not iterable");
                  if (u(L)) {
                    for (N = 0, M = h(S); M > N; N++)
                      if (K = yt(S[N]), K && d(x, K))
                        return K;
                    return new e(!1);
                  }
                  R = i(S, L);
                }
                for (ct = R.next; !(J = a(ct, R)).done; ) {
                  try {
                    K = yt(J.value);
                  } catch (bt) {
                    y(R, "throw", bt);
                  }
                  if (typeof K == "object" && K && d(x, K))
                    return K;
                }
                return new e(!1);
              };
            }
          ),
          /***/
          18744: (
            /***/
            function(l, c, t) {
              var s = t(79611), r = t(83875), a = t(97219);
              l.exports = function(o, f, u) {
                var h, d;
                r(o);
                try {
                  if (h = a(o, "return"), !h) {
                    if (f === "throw")
                      throw u;
                    return u;
                  }
                  h = s(h, o);
                } catch (i) {
                  d = !0, h = i;
                }
                if (f === "throw")
                  throw u;
                if (d)
                  throw h;
                return r(h), u;
              };
            }
          ),
          /***/
          97022: (
            /***/
            function(l, c, t) {
              var s = t(79044), r = t(75277), a = t(51569), o = t(12654), f = t(35974), u = t(52280), h = t(21178), d = u("iterator"), i = !1, p, y, m;
              [].keys && (m = [].keys(), "next" in m ? (y = o(o(m)), y !== Object.prototype && (p = y)) : i = !0);
              var e = p == null || s(function() {
                var x = {};
                return p[d].call(x) !== x;
              });
              e ? p = {} : h && (p = a(p)), r(p[d]) || f(p, d, function() {
                return this;
              }), l.exports = {
                IteratorPrototype: p,
                BUGGY_SAFARI_ITERATORS: i
              };
            }
          ),
          /***/
          44818: (
            /***/
            function(l) {
              l.exports = {};
            }
          ),
          /***/
          47046: (
            /***/
            function(l, c, t) {
              var s = t(35108);
              l.exports = function(r) {
                return s(r.length);
              };
            }
          ),
          /***/
          71800: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(98166), a = t(66012).f, o = t(84643).set, f = t(53121), u = t(55357), h = t(14402), d = t(93921), i = s.MutationObserver || s.WebKitMutationObserver, p = s.document, y = s.process, m = s.Promise, e = a(s, "queueMicrotask"), x = e && e.value, S, P, O, T, A, E, D, b;
              x || (S = function() {
                var R, L;
                for (d && (R = y.domain) && R.exit(); P; ) {
                  L = P.fn, P = P.next;
                  try {
                    L();
                  } catch (N) {
                    throw P ? T() : O = void 0, N;
                  }
                }
                O = void 0, R && R.enter();
              }, !f && !d && !h && i && p ? (A = !0, E = p.createTextNode(""), new i(S).observe(E, { characterData: !0 }), T = function() {
                E.data = A = !A;
              }) : !u && m && m.resolve ? (D = m.resolve(void 0), D.constructor = m, b = r(D.then, D), T = function() {
                b(S);
              }) : d ? T = function() {
                y.nextTick(S);
              } : (o = r(o, s), T = function() {
                o(S);
              })), l.exports = x || function(R) {
                var L = { fn: R, next: void 0 };
                O && (O.next = L), P || (P = L, T()), O = L;
              };
            }
          ),
          /***/
          58369: (
            /***/
            function(l, c, t) {
              var s = t(98363);
              l.exports = s.Promise;
            }
          ),
          /***/
          3850: (
            /***/
            function(l, c, t) {
              var s = t(11197), r = t(79044);
              l.exports = !!Object.getOwnPropertySymbols && !r(function() {
                var a = Symbol();
                return !String(a) || !(Object(a) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
                !Symbol.sham && s && s < 41;
              });
            }
          ),
          /***/
          36830: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(75277), a = t(56429), o = s.WeakMap;
              l.exports = r(o) && /native code/.test(a(o));
            }
          ),
          /***/
          29269: (
            /***/
            function(l, c, t) {
              var s = t(97676), r = function(a) {
                var o, f;
                this.promise = new a(function(u, h) {
                  if (o !== void 0 || f !== void 0)
                    throw TypeError("Bad Promise constructor");
                  o = u, f = h;
                }), this.resolve = s(o), this.reject = s(f);
              };
              l.exports.f = function(a) {
                return new r(a);
              };
            }
          ),
          /***/
          654: (
            /***/
            function(l, c, t) {
              var s = t(28967);
              l.exports = function(r, a) {
                return r === void 0 ? arguments.length < 2 ? "" : a : s(r);
              };
            }
          ),
          /***/
          21049: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(42622), a = s.TypeError;
              l.exports = function(o) {
                if (r(o))
                  throw a("The method doesn't accept regular expressions");
                return o;
              };
            }
          ),
          /***/
          5310: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = s.isFinite;
              l.exports = Number.isFinite || function(o) {
                return typeof o == "number" && r(o);
              };
            }
          ),
          /***/
          45856: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(88697), a = t(79611), o = t(79044), f = t(60667), u = t(89612), h = t(81513), d = t(30744), i = t(78609), p = Object.assign, y = Object.defineProperty, m = r([].concat);
              l.exports = !p || o(function() {
                if (s && p({ b: 1 }, p(y({}, "a", {
                  enumerable: !0,
                  get: function() {
                    y(this, "b", {
                      value: 3,
                      enumerable: !1
                    });
                  }
                }), { b: 2 })).b !== 1)
                  return !0;
                var e = {}, x = {}, S = Symbol(), P = "abcdefghijklmnopqrst";
                return e[S] = 7, P.split("").forEach(function(O) {
                  x[O] = O;
                }), p({}, e)[S] != 7 || f(p({}, x)).join("") != P;
              }) ? function(x, S) {
                for (var P = d(x), O = arguments.length, T = 1, A = u.f, E = h.f; O > T; )
                  for (var D = i(arguments[T++]), b = A ? m(f(D), A(D)) : f(D), R = b.length, L = 0, N; R > L; )
                    N = b[L++], (!s || a(E, D, N)) && (P[N] = D[N]);
                return P;
              } : p;
            }
          ),
          /***/
          51569: (
            /***/
            function(l, c, t) {
              var s = t(83875), r = t(17840), a = t(48869), o = t(47505), f = t(47055), u = t(92750), h = t(50466), d = ">", i = "<", p = "prototype", y = "script", m = h("IE_PROTO"), e = function() {
              }, x = function(A) {
                return i + y + d + A + i + "/" + y + d;
              }, S = function(A) {
                A.write(x("")), A.close();
                var E = A.parentWindow.Object;
                return A = null, E;
              }, P = function() {
                var A = u("iframe"), E = "java" + y + ":", D;
                return A.style.display = "none", f.appendChild(A), A.src = String(E), D = A.contentWindow.document, D.open(), D.write(x("document.F=Object")), D.close(), D.F;
              }, O, T = function() {
                try {
                  O = new ActiveXObject("htmlfile");
                } catch (E) {
                }
                T = typeof document != "undefined" ? document.domain && O ? S(O) : P() : S(O);
                for (var A = a.length; A--; )
                  delete T[p][a[A]];
                return T();
              };
              o[m] = !0, l.exports = Object.create || function(E, D) {
                var b;
                return E !== null ? (e[p] = s(E), b = new e(), e[p] = null, b[m] = E) : b = T(), D === void 0 ? b : r(b, D);
              };
            }
          ),
          /***/
          17840: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(86385), a = t(83875), o = t(29580), f = t(60667);
              l.exports = s ? Object.defineProperties : function(h, d) {
                a(h);
                for (var i = o(d), p = f(d), y = p.length, m = 0, e; y > m; )
                  r.f(h, e = p[m++], i[e]);
                return h;
              };
            }
          ),
          /***/
          86385: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(7493), a = t(67548), o = t(83875), f = t(383), u = s.TypeError, h = Object.defineProperty;
              c.f = r ? h : function(i, p, y) {
                if (o(i), p = f(p), o(y), a)
                  try {
                    return h(i, p, y);
                  } catch (m) {
                  }
                if ("get" in y || "set" in y)
                  throw u("Accessors not supported");
                return "value" in y && (i[p] = y.value), i;
              };
            }
          ),
          /***/
          66012: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(79611), a = t(81513), o = t(69199), f = t(29580), u = t(383), h = t(24792), d = t(67548), i = Object.getOwnPropertyDescriptor;
              c.f = s ? i : function(y, m) {
                if (y = f(y), m = u(m), d)
                  try {
                    return i(y, m);
                  } catch (e) {
                  }
                if (h(y, m))
                  return o(!r(a.f, y, m), y[m]);
              };
            }
          ),
          /***/
          74938: (
            /***/
            function(l, c, t) {
              var s = t(79159), r = t(29580), a = t(87994).f, o = t(15629), f = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], u = function(h) {
                try {
                  return a(h);
                } catch (d) {
                  return o(f);
                }
              };
              l.exports.f = function(d) {
                return f && s(d) == "Window" ? u(d) : a(r(d));
              };
            }
          ),
          /***/
          87994: (
            /***/
            function(l, c, t) {
              var s = t(18794), r = t(48869), a = r.concat("length", "prototype");
              c.f = Object.getOwnPropertyNames || function(f) {
                return s(f, a);
              };
            }
          ),
          /***/
          89612: (
            /***/
            function(l, c) {
              c.f = Object.getOwnPropertySymbols;
            }
          ),
          /***/
          12654: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(24792), a = t(75277), o = t(30744), f = t(50466), u = t(25115), h = f("IE_PROTO"), d = s.Object, i = d.prototype;
              l.exports = u ? d.getPrototypeOf : function(p) {
                var y = o(p);
                if (r(y, h))
                  return y[h];
                var m = y.constructor;
                return a(m) && y instanceof m ? m.prototype : y instanceof d ? i : null;
              };
            }
          ),
          /***/
          32010: (
            /***/
            function(l, c, t) {
              var s = t(88697);
              l.exports = s({}.isPrototypeOf);
            }
          ),
          /***/
          18794: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(24792), a = t(29580), o = t(37190).indexOf, f = t(47505), u = s([].push);
              l.exports = function(h, d) {
                var i = a(h), p = 0, y = [], m;
                for (m in i)
                  !r(f, m) && r(i, m) && u(y, m);
                for (; d.length > p; )
                  r(i, m = d[p++]) && (~o(y, m) || u(y, m));
                return y;
              };
            }
          ),
          /***/
          60667: (
            /***/
            function(l, c, t) {
              var s = t(18794), r = t(48869);
              l.exports = Object.keys || function(o) {
                return s(o, r);
              };
            }
          ),
          /***/
          81513: (
            /***/
            function(l, c) {
              var t = {}.propertyIsEnumerable, s = Object.getOwnPropertyDescriptor, r = s && !t.call({ 1: 2 }, 1);
              c.f = r ? function(o) {
                var f = s(this, o);
                return !!f && f.enumerable;
              } : t;
            }
          ),
          /***/
          22412: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(83875), a = t(75017);
              l.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                var o = !1, f = {}, u;
                try {
                  u = s(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set), u(f, []), o = f instanceof Array;
                } catch (h) {
                }
                return function(d, i) {
                  return r(d), a(i), o ? u(d, i) : d.__proto__ = i, d;
                };
              }() : void 0);
            }
          ),
          /***/
          8765: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(88697), a = t(60667), o = t(29580), f = t(81513).f, u = r(f), h = r([].push), d = function(i) {
                return function(p) {
                  for (var y = o(p), m = a(y), e = m.length, x = 0, S = [], P; e > x; )
                    P = m[x++], (!s || u(y, P)) && h(S, i ? [P, y[P]] : y[P]);
                  return S;
                };
              };
              l.exports = {
                // `Object.entries` method
                // https://tc39.es/ecma262/#sec-object.entries
                entries: d(!0),
                // `Object.values` method
                // https://tc39.es/ecma262/#sec-object.values
                values: d(!1)
              };
            }
          ),
          /***/
          36699: (
            /***/
            function(l, c, t) {
              var s = t(57301), r = t(36994);
              l.exports = s ? {}.toString : function() {
                return "[object " + r(this) + "]";
              };
            }
          ),
          /***/
          17141: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(79611), a = t(75277), o = t(52786), f = s.TypeError;
              l.exports = function(u, h) {
                var d, i;
                if (h === "string" && a(d = u.toString) && !o(i = r(d, u)) || a(d = u.valueOf) && !o(i = r(d, u)) || h !== "string" && a(d = u.toString) && !o(i = r(d, u)))
                  return i;
                throw f("Can't convert object to primitive value");
              };
            }
          ),
          /***/
          31561: (
            /***/
            function(l, c, t) {
              var s = t(22773), r = t(88697), a = t(87994), o = t(89612), f = t(83875), u = r([].concat);
              l.exports = s("Reflect", "ownKeys") || function(d) {
                var i = a.f(f(d)), p = o.f;
                return p ? u(i, p(d)) : i;
              };
            }
          ),
          /***/
          67290: (
            /***/
            function(l, c, t) {
              var s = t(98363);
              l.exports = s;
            }
          ),
          /***/
          74443: (
            /***/
            function(l) {
              l.exports = function(c) {
                try {
                  return { error: !1, value: c() };
                } catch (t) {
                  return { error: !0, value: t };
                }
              };
            }
          ),
          /***/
          11621: (
            /***/
            function(l, c, t) {
              var s = t(83875), r = t(52786), a = t(29269);
              l.exports = function(o, f) {
                if (s(o), r(f) && f.constructor === o)
                  return f;
                var u = a.f(o), h = u.resolve;
                return h(f), u.promise;
              };
            }
          ),
          /***/
          7592: (
            /***/
            function(l, c, t) {
              var s = t(35974);
              l.exports = function(r, a, o) {
                for (var f in a)
                  s(r, f, a[f], o);
                return r;
              };
            }
          ),
          /***/
          35974: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(75277), a = t(24792), o = t(45899), f = t(51621), u = t(56429), h = t(20821), d = t(55316).CONFIGURABLE, i = h.get, p = h.enforce, y = String(String).split("String");
              (l.exports = function(m, e, x, S) {
                var P = S ? !!S.unsafe : !1, O = S ? !!S.enumerable : !1, T = S ? !!S.noTargetGet : !1, A = S && S.name !== void 0 ? S.name : e, E;
                if (r(x) && (String(A).slice(0, 7) === "Symbol(" && (A = "[" + String(A).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!a(x, "name") || d && x.name !== A) && o(x, "name", A), E = p(x), E.source || (E.source = y.join(typeof A == "string" ? A : ""))), m === s) {
                  O ? m[e] = x : f(e, x);
                  return;
                } else
                  P ? !T && m[e] && (O = !0) : delete m[e];
                O ? m[e] = x : o(m, e, x);
              })(Function.prototype, "toString", function() {
                return r(this) && i(this).source || u(this);
              });
            }
          ),
          /***/
          94088: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(79611), a = t(83875), o = t(75277), f = t(79159), u = t(99749), h = s.TypeError;
              l.exports = function(d, i) {
                var p = d.exec;
                if (o(p)) {
                  var y = r(p, d, i);
                  return y !== null && a(y), y;
                }
                if (f(d) === "RegExp")
                  return r(u, d, i);
                throw h("RegExp#exec called on incompatible receiver");
              };
            }
          ),
          /***/
          99749: (
            /***/
            function(l, c, t) {
              var s = t(79611), r = t(88697), a = t(28967), o = t(58083), f = t(97047), u = t(53580), h = t(51569), d = t(20821).get, i = t(41669), p = t(1638), y = u("native-string-replace", String.prototype.replace), m = RegExp.prototype.exec, e = m, x = r("".charAt), S = r("".indexOf), P = r("".replace), O = r("".slice), T = function() {
                var b = /a/, R = /b*/g;
                return s(m, b, "a"), s(m, R, "a"), b.lastIndex !== 0 || R.lastIndex !== 0;
              }(), A = f.UNSUPPORTED_Y || f.BROKEN_CARET, E = /()??/.exec("")[1] !== void 0, D = T || E || A || i || p;
              D && (e = function(R) {
                var L = this, N = d(L), M = a(R), K = N.raw, ct, J, nt, yt, bt, Tt, It;
                if (K)
                  return K.lastIndex = L.lastIndex, ct = s(e, K, M), L.lastIndex = K.lastIndex, ct;
                var Lt = N.groups, zt = A && L.sticky, Q = s(o, L), gt = L.source, ht = 0, st = M;
                if (zt && (Q = P(Q, "y", ""), S(Q, "g") === -1 && (Q += "g"), st = O(M, L.lastIndex), L.lastIndex > 0 && (!L.multiline || L.multiline && x(M, L.lastIndex - 1) !== `
`) && (gt = "(?: " + gt + ")", st = " " + st, ht++), J = new RegExp("^(?:" + gt + ")", Q)), E && (J = new RegExp("^" + gt + "$(?!\\s)", Q)), T && (nt = L.lastIndex), yt = s(m, zt ? J : L, st), zt ? yt ? (yt.input = O(yt.input, ht), yt[0] = O(yt[0], ht), yt.index = L.lastIndex, L.lastIndex += yt[0].length) : L.lastIndex = 0 : T && yt && (L.lastIndex = L.global ? yt.index + yt[0].length : nt), E && yt && yt.length > 1 && s(y, yt[0], J, function() {
                  for (bt = 1; bt < arguments.length - 2; bt++)
                    arguments[bt] === void 0 && (yt[bt] = void 0);
                }), yt && Lt)
                  for (yt.groups = Tt = h(null), bt = 0; bt < Lt.length; bt++)
                    It = Lt[bt], Tt[It[0]] = yt[It[1]];
                return yt;
              }), l.exports = e;
            }
          ),
          /***/
          58083: (
            /***/
            function(l, c, t) {
              var s = t(83875);
              l.exports = function() {
                var r = s(this), a = "";
                return r.global && (a += "g"), r.ignoreCase && (a += "i"), r.multiline && (a += "m"), r.dotAll && (a += "s"), r.unicode && (a += "u"), r.sticky && (a += "y"), a;
              };
            }
          ),
          /***/
          97047: (
            /***/
            function(l, c, t) {
              var s = t(79044), r = t(98363), a = r.RegExp;
              c.UNSUPPORTED_Y = s(function() {
                var o = a("a", "y");
                return o.lastIndex = 2, o.exec("abcd") != null;
              }), c.BROKEN_CARET = s(function() {
                var o = a("^r", "gy");
                return o.lastIndex = 2, o.exec("str") != null;
              });
            }
          ),
          /***/
          41669: (
            /***/
            function(l, c, t) {
              var s = t(79044), r = t(98363), a = r.RegExp;
              l.exports = s(function() {
                var o = a(".", "s");
                return !(o.dotAll && o.exec(`
`) && o.flags === "s");
              });
            }
          ),
          /***/
          1638: (
            /***/
            function(l, c, t) {
              var s = t(79044), r = t(98363), a = r.RegExp;
              l.exports = s(function() {
                var o = a("(?<a>b)", "g");
                return o.exec("b").groups.a !== "b" || "b".replace(o, "$<a>c") !== "bc";
              });
            }
          ),
          /***/
          96411: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = s.TypeError;
              l.exports = function(a) {
                if (a == null)
                  throw r("Can't call method on " + a);
                return a;
              };
            }
          ),
          /***/
          51621: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = Object.defineProperty;
              l.exports = function(a, o) {
                try {
                  r(s, a, { value: o, configurable: !0, writable: !0 });
                } catch (f) {
                  s[a] = o;
                }
                return o;
              };
            }
          ),
          /***/
          57323: (
            /***/
            function(l, c, t) {
              var s = t(22773), r = t(86385), a = t(52280), o = t(7493), f = a("species");
              l.exports = function(u) {
                var h = s(u), d = r.f;
                o && h && !h[f] && d(h, f, {
                  configurable: !0,
                  get: function() {
                    return this;
                  }
                });
              };
            }
          ),
          /***/
          60878: (
            /***/
            function(l, c, t) {
              var s = t(86385).f, r = t(24792), a = t(52280), o = a("toStringTag");
              l.exports = function(f, u, h) {
                f && !r(f = h ? f : f.prototype, o) && s(f, o, { configurable: !0, value: u });
              };
            }
          ),
          /***/
          50466: (
            /***/
            function(l, c, t) {
              var s = t(53580), r = t(34524), a = s("keys");
              l.exports = function(o) {
                return a[o] || (a[o] = r(o));
              };
            }
          ),
          /***/
          49415: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(51621), a = "__core-js_shared__", o = s[a] || r(a, {});
              l.exports = o;
            }
          ),
          /***/
          53580: (
            /***/
            function(l, c, t) {
              var s = t(21178), r = t(49415);
              (l.exports = function(a, o) {
                return r[a] || (r[a] = o !== void 0 ? o : {});
              })("versions", []).push({
                version: "3.19.0",
                mode: s ? "pure" : "global",
                copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)"
              });
            }
          ),
          /***/
          7270: (
            /***/
            function(l, c, t) {
              var s = t(83875), r = t(43327), a = t(52280), o = a("species");
              l.exports = function(f, u) {
                var h = s(f).constructor, d;
                return h === void 0 || (d = s(h)[o]) == null ? u : r(d);
              };
            }
          ),
          /***/
          13881: (
            /***/
            function(l, c, t) {
              var s = t(79044);
              l.exports = function(r) {
                return s(function() {
                  var a = ""[r]('"');
                  return a !== a.toLowerCase() || a.split('"').length > 3;
                });
              };
            }
          ),
          /***/
          91140: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(14229), a = t(28967), o = t(96411), f = s("".charAt), u = s("".charCodeAt), h = s("".slice), d = function(i) {
                return function(p, y) {
                  var m = a(o(p)), e = r(y), x = m.length, S, P;
                  return e < 0 || e >= x ? i ? "" : void 0 : (S = u(m, e), S < 55296 || S > 56319 || e + 1 === x || (P = u(m, e + 1)) < 56320 || P > 57343 ? i ? f(m, e) : S : i ? h(m, e, e + 2) : (S - 55296 << 10) + (P - 56320) + 65536);
                };
              };
              l.exports = {
                // `String.prototype.codePointAt` method
                // https://tc39.es/ecma262/#sec-string.prototype.codepointat
                codeAt: d(!1),
                // `String.prototype.at` method
                // https://github.com/mathiasbynens/String.prototype.at
                charAt: d(!0)
              };
            }
          ),
          /***/
          26031: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(14229), a = t(28967), o = t(96411), f = s.RangeError;
              l.exports = function(h) {
                var d = a(o(this)), i = "", p = r(h);
                if (p < 0 || p == 1 / 0)
                  throw f("Wrong number of repetitions");
                for (; p > 0; (p >>>= 1) && (d += d))
                  p & 1 && (i += d);
                return i;
              };
            }
          ),
          /***/
          68487: (
            /***/
            function(l, c, t) {
              var s = t(55316).PROPER, r = t(79044), a = t(2569), o = "âÂá ";
              l.exports = function(f) {
                return r(function() {
                  return !!a[f]() || o[f]() !== o || s && a[f].name !== f;
                });
              };
            }
          ),
          /***/
          10287: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(96411), a = t(28967), o = t(2569), f = s("".replace), u = "[" + o + "]", h = RegExp("^" + u + u + "*"), d = RegExp(u + u + "*$"), i = function(p) {
                return function(y) {
                  var m = a(r(y));
                  return p & 1 && (m = f(m, h, "")), p & 2 && (m = f(m, d, "")), m;
                };
              };
              l.exports = {
                // `String.prototype.{ trimLeft, trimStart }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimstart
                start: i(1),
                // `String.prototype.{ trimRight, trimEnd }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimend
                end: i(2),
                // `String.prototype.trim` method
                // https://tc39.es/ecma262/#sec-string.prototype.trim
                trim: i(3)
              };
            }
          ),
          /***/
          84643: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(63530), a = t(98166), o = t(75277), f = t(24792), u = t(79044), h = t(47055), d = t(15629), i = t(92750), p = t(53121), y = t(93921), m = s.setImmediate, e = s.clearImmediate, x = s.process, S = s.Dispatch, P = s.Function, O = s.MessageChannel, T = s.String, A = 0, E = {}, D = "onreadystatechange", b, R, L, N;
              try {
                b = s.location;
              } catch (nt) {
              }
              var M = function(nt) {
                if (f(E, nt)) {
                  var yt = E[nt];
                  delete E[nt], yt();
                }
              }, K = function(nt) {
                return function() {
                  M(nt);
                };
              }, ct = function(nt) {
                M(nt.data);
              }, J = function(nt) {
                s.postMessage(T(nt), b.protocol + "//" + b.host);
              };
              (!m || !e) && (m = function(yt) {
                var bt = d(arguments, 1);
                return E[++A] = function() {
                  r(o(yt) ? yt : P(yt), void 0, bt);
                }, R(A), A;
              }, e = function(yt) {
                delete E[yt];
              }, y ? R = function(nt) {
                x.nextTick(K(nt));
              } : S && S.now ? R = function(nt) {
                S.now(K(nt));
              } : O && !p ? (L = new O(), N = L.port2, L.port1.onmessage = ct, R = a(N.postMessage, N)) : s.addEventListener && o(s.postMessage) && !s.importScripts && b && b.protocol !== "file:" && !u(J) ? (R = J, s.addEventListener("message", ct, !1)) : D in i("script") ? R = function(nt) {
                h.appendChild(i("script"))[D] = function() {
                  h.removeChild(this), M(nt);
                };
              } : R = function(nt) {
                setTimeout(K(nt), 0);
              }), l.exports = {
                set: m,
                clear: e
              };
            }
          ),
          /***/
          41655: (
            /***/
            function(l, c, t) {
              var s = t(88697);
              l.exports = s(1 .valueOf);
            }
          ),
          /***/
          32565: (
            /***/
            function(l, c, t) {
              var s = t(14229), r = Math.max, a = Math.min;
              l.exports = function(o, f) {
                var u = s(o);
                return u < 0 ? r(u + f, 0) : a(u, f);
              };
            }
          ),
          /***/
          27302: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(14229), a = t(35108), o = s.RangeError;
              l.exports = function(f) {
                if (f === void 0)
                  return 0;
                var u = r(f), h = a(u);
                if (u !== h)
                  throw o("Wrong length or index");
                return h;
              };
            }
          ),
          /***/
          29580: (
            /***/
            function(l, c, t) {
              var s = t(78609), r = t(96411);
              l.exports = function(a) {
                return s(r(a));
              };
            }
          ),
          /***/
          14229: (
            /***/
            function(l) {
              var c = Math.ceil, t = Math.floor;
              l.exports = function(s) {
                var r = +s;
                return r !== r || r === 0 ? 0 : (r > 0 ? t : c)(r);
              };
            }
          ),
          /***/
          35108: (
            /***/
            function(l, c, t) {
              var s = t(14229), r = Math.min;
              l.exports = function(a) {
                return a > 0 ? r(s(a), 9007199254740991) : 0;
              };
            }
          ),
          /***/
          30744: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(96411), a = s.Object;
              l.exports = function(o) {
                return a(r(o));
              };
            }
          ),
          /***/
          65758: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(83786), a = s.RangeError;
              l.exports = function(o, f) {
                var u = r(o);
                if (u % f)
                  throw a("Wrong offset");
                return u;
              };
            }
          ),
          /***/
          83786: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(14229), a = s.RangeError;
              l.exports = function(o) {
                var f = r(o);
                if (f < 0)
                  throw a("The argument can't be less than 0");
                return f;
              };
            }
          ),
          /***/
          21893: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(79611), a = t(52786), o = t(66681), f = t(97219), u = t(17141), h = t(52280), d = s.TypeError, i = h("toPrimitive");
              l.exports = function(p, y) {
                if (!a(p) || o(p))
                  return p;
                var m = f(p, i), e;
                if (m) {
                  if (y === void 0 && (y = "default"), e = r(m, p, y), !a(e) || o(e))
                    return e;
                  throw d("Can't convert object to primitive value");
                }
                return y === void 0 && (y = "number"), u(p, y);
              };
            }
          ),
          /***/
          383: (
            /***/
            function(l, c, t) {
              var s = t(21893), r = t(66681);
              l.exports = function(a) {
                var o = s(a, "string");
                return r(o) ? o : o + "";
              };
            }
          ),
          /***/
          57301: (
            /***/
            function(l, c, t) {
              var s = t(52280), r = s("toStringTag"), a = {};
              a[r] = "z", l.exports = String(a) === "[object z]";
            }
          ),
          /***/
          28967: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(36994), a = s.String;
              l.exports = function(o) {
                if (r(o) === "Symbol")
                  throw TypeError("Cannot convert a Symbol value to a string");
                return a(o);
              };
            }
          ),
          /***/
          28768: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = s.String;
              l.exports = function(a) {
                try {
                  return r(a);
                } catch (o) {
                  return "Object";
                }
              };
            }
          ),
          /***/
          26764: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(79611), o = t(7493), f = t(63231), u = t(32590), h = t(74510), d = t(9519), i = t(69199), p = t(45899), y = t(57507), m = t(35108), e = t(27302), x = t(65758), S = t(383), P = t(24792), O = t(36994), T = t(52786), A = t(66681), E = t(51569), D = t(32010), b = t(22412), R = t(87994).f, L = t(66503), N = t(68671).forEach, M = t(57323), K = t(86385), ct = t(66012), J = t(20821), nt = t(59250), yt = J.get, bt = J.set, Tt = K.f, It = ct.f, Lt = Math.round, zt = r.RangeError, Q = h.ArrayBuffer, gt = Q.prototype, ht = h.DataView, st = u.NATIVE_ARRAY_BUFFER_VIEWS, xt = u.TYPED_ARRAY_CONSTRUCTOR, G = u.TYPED_ARRAY_TAG, Ft = u.TypedArray, z = u.TypedArrayPrototype, C = u.aTypedArrayConstructor, k = u.isTypedArray, V = "BYTES_PER_ELEMENT", ot = "Wrong length", et = function(Ot, ie) {
                C(Ot);
                for (var Ae = 0, be = ie.length, de = new Ot(be); be > Ae; )
                  de[Ae] = ie[Ae++];
                return de;
              }, tt = function(Ot, ie) {
                Tt(Ot, ie, { get: function() {
                  return yt(this)[ie];
                } });
              }, At = function(Ot) {
                var ie;
                return D(gt, Ot) || (ie = O(Ot)) == "ArrayBuffer" || ie == "SharedArrayBuffer";
              }, Nt = function(Ot, ie) {
                return k(Ot) && !A(ie) && ie in Ot && y(+ie) && ie >= 0;
              }, Kt = function(ie, Ae) {
                return Ae = S(Ae), Nt(ie, Ae) ? i(2, ie[Ae]) : It(ie, Ae);
              }, Vt = function(ie, Ae, be) {
                return Ae = S(Ae), Nt(ie, Ae) && T(be) && P(be, "value") && !P(be, "get") && !P(be, "set") && !be.configurable && (!P(be, "writable") || be.writable) && (!P(be, "enumerable") || be.enumerable) ? (ie[Ae] = be.value, ie) : Tt(ie, Ae, be);
              };
              o ? (st || (ct.f = Kt, K.f = Vt, tt(z, "buffer"), tt(z, "byteOffset"), tt(z, "byteLength"), tt(z, "length")), s({ target: "Object", stat: !0, forced: !st }, {
                getOwnPropertyDescriptor: Kt,
                defineProperty: Vt
              }), l.exports = function(Ot, ie, Ae) {
                var be = Ot.match(/\d+$/)[0] / 8, de = Ot + (Ae ? "Clamped" : "") + "Array", Se = "get" + Ot, Wt = "set" + Ot, _t = r[de], ce = _t, pe = ce && ce.prototype, we = {}, Be = function(ue, lt) {
                  var Y = yt(ue);
                  return Y.view[Se](lt * be + Y.byteOffset, !0);
                }, Ie = function(ue, lt, Y) {
                  var j = yt(ue);
                  Ae && (Y = (Y = Lt(Y)) < 0 ? 0 : Y > 255 ? 255 : Y & 255), j.view[Wt](lt * be + j.byteOffset, Y, !0);
                }, Dt = function(ue, lt) {
                  Tt(ue, lt, {
                    get: function() {
                      return Be(this, lt);
                    },
                    set: function(Y) {
                      return Ie(this, lt, Y);
                    },
                    enumerable: !0
                  });
                };
                st ? f && (ce = ie(function(ue, lt, Y, j) {
                  return d(ue, pe), nt(function() {
                    return T(lt) ? At(lt) ? j !== void 0 ? new _t(lt, x(Y, be), j) : Y !== void 0 ? new _t(lt, x(Y, be)) : new _t(lt) : k(lt) ? et(ce, lt) : a(L, ce, lt) : new _t(e(lt));
                  }(), ue, ce);
                }), b && b(ce, Ft), N(R(_t), function(ue) {
                  ue in ce || p(ce, ue, _t[ue]);
                }), ce.prototype = pe) : (ce = ie(function(ue, lt, Y, j) {
                  d(ue, pe);
                  var wt = 0, it = 0, Ht, te, _;
                  if (!T(lt))
                    _ = e(lt), te = _ * be, Ht = new Q(te);
                  else if (At(lt)) {
                    Ht = lt, it = x(Y, be);
                    var Qt = lt.byteLength;
                    if (j === void 0) {
                      if (Qt % be || (te = Qt - it, te < 0))
                        throw zt(ot);
                    } else if (te = m(j) * be, te + it > Qt)
                      throw zt(ot);
                    _ = te / be;
                  } else
                    return k(lt) ? et(ce, lt) : a(L, ce, lt);
                  for (bt(ue, {
                    buffer: Ht,
                    byteOffset: it,
                    byteLength: te,
                    length: _,
                    view: new ht(Ht)
                  }); wt < _; )
                    Dt(ue, wt++);
                }), b && b(ce, Ft), pe = ce.prototype = E(z)), pe.constructor !== ce && p(pe, "constructor", ce), p(pe, xt, ce), G && p(pe, G, de), we[de] = ce, s({
                  global: !0,
                  forced: ce != _t,
                  sham: !st
                }, we), V in ce || p(ce, V, be), V in pe || p(pe, V, be), M(de);
              }) : l.exports = function() {
              };
            }
          ),
          /***/
          63231: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(79044), a = t(8662), o = t(32590).NATIVE_ARRAY_BUFFER_VIEWS, f = s.ArrayBuffer, u = s.Int8Array;
              l.exports = !o || !r(function() {
                u(1);
              }) || !r(function() {
                new u(-1);
              }) || !a(function(h) {
                new u(), new u(null), new u(1.5), new u(h);
              }, !0) || r(function() {
                return new u(new f(2), 1, void 0).length !== 1;
              });
            }
          ),
          /***/
          53687: (
            /***/
            function(l, c, t) {
              var s = t(65626), r = t(36107);
              l.exports = function(a, o) {
                return s(r(a), o);
              };
            }
          ),
          /***/
          66503: (
            /***/
            function(l, c, t) {
              var s = t(98166), r = t(79611), a = t(43327), o = t(30744), f = t(47046), u = t(11805), h = t(77193), d = t(68089), i = t(32590).aTypedArrayConstructor;
              l.exports = function(y) {
                var m = a(this), e = o(y), x = arguments.length, S = x > 1 ? arguments[1] : void 0, P = S !== void 0, O = h(e), T, A, E, D, b, R;
                if (O && !d(O))
                  for (b = u(e, O), R = b.next, e = []; !(D = r(R, b)).done; )
                    e.push(D.value);
                for (P && x > 2 && (S = s(S, arguments[2])), A = f(e), E = new (i(m))(A), T = 0; A > T; T++)
                  E[T] = P ? S(e[T], T) : e[T];
                return E;
              };
            }
          ),
          /***/
          36107: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(7270), a = s.TYPED_ARRAY_CONSTRUCTOR, o = s.aTypedArrayConstructor;
              l.exports = function(f) {
                return o(r(f, f[a]));
              };
            }
          ),
          /***/
          34524: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = 0, a = Math.random(), o = s(1 .toString);
              l.exports = function(f) {
                return "Symbol(" + (f === void 0 ? "" : f) + ")_" + o(++r + a, 36);
              };
            }
          ),
          /***/
          189: (
            /***/
            function(l, c, t) {
              var s = t(3850);
              l.exports = s && !Symbol.sham && typeof Symbol.iterator == "symbol";
            }
          ),
          /***/
          20127: (
            /***/
            function(l, c, t) {
              var s = t(52280);
              c.f = s;
            }
          ),
          /***/
          52280: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(53580), a = t(24792), o = t(34524), f = t(3850), u = t(189), h = r("wks"), d = s.Symbol, i = d && d.for, p = u ? d : d && d.withoutSetter || o;
              l.exports = function(y) {
                if (!a(h, y) || !(f || typeof h[y] == "string")) {
                  var m = "Symbol." + y;
                  f && a(d, y) ? h[y] = d[y] : u && i ? h[y] = i(m) : h[y] = p(m);
                }
                return h[y];
              };
            }
          ),
          /***/
          2569: (
            /***/
            function(l) {
              l.exports = `	
\v\f\r Â áââââââââââââ¯âã\u2028\u2029\uFEFF`;
            }
          ),
          /***/
          55739: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(32010), o = t(12654), f = t(22412), u = t(73870), h = t(51569), d = t(45899), i = t(69199), p = t(8457), y = t(58323), m = t(5166), e = t(654), x = t(67679), S = r.Error, P = [].push, O = function(E, D) {
                var b = a(T, this) ? this : h(T), R = arguments.length > 2 ? arguments[2] : void 0;
                f && (b = f(new S(void 0), o(b))), d(b, "message", e(D, "")), x && d(b, "stack", p(b.stack, 1)), y(b, R);
                var L = [];
                return m(E, P, { that: L }), d(b, "errors", L), b;
              };
              f ? f(O, S) : u(O, S);
              var T = O.prototype = h(S.prototype, {
                constructor: i(1, O),
                message: i(1, ""),
                name: i(1, "AggregateError")
              });
              s({ global: !0 }, {
                AggregateError: O
              });
            }
          ),
          /***/
          55862: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(79044), o = t(71982), f = t(52786), u = t(30744), h = t(47046), d = t(35039), i = t(80150), p = t(82091), y = t(52280), m = t(11197), e = y("isConcatSpreadable"), x = 9007199254740991, S = "Maximum allowed index exceeded", P = r.TypeError, O = m >= 51 || !a(function() {
                var D = [];
                return D[e] = !1, D.concat()[0] !== D;
              }), T = p("concat"), A = function(D) {
                if (!f(D))
                  return !1;
                var b = D[e];
                return b !== void 0 ? !!b : o(D);
              }, E = !O || !T;
              s({ target: "Array", proto: !0, forced: E }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                concat: function(b) {
                  var R = u(this), L = i(R, 0), N = 0, M, K, ct, J, nt;
                  for (M = -1, ct = arguments.length; M < ct; M++)
                    if (nt = M === -1 ? R : arguments[M], A(nt)) {
                      if (J = h(nt), N + J > x)
                        throw P(S);
                      for (K = 0; K < J; K++, N++)
                        K in nt && d(L, N, nt[K]);
                    } else {
                      if (N >= x)
                        throw P(S);
                      d(L, N++, nt);
                    }
                  return L.length = N, L;
                }
              });
            }
          ),
          /***/
          42833: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(28794), a = t(6677);
              s({ target: "Array", proto: !0 }, {
                copyWithin: r
              }), a("copyWithin");
            }
          ),
          /***/
          83382: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(55522), a = t(6677);
              s({ target: "Array", proto: !0 }, {
                fill: r
              }), a("fill");
            }
          ),
          /***/
          19701: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(68671).filter, a = t(82091), o = a("filter");
              s({ target: "Array", proto: !0, forced: !o }, {
                filter: function(u) {
                  return r(this, u, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          4845: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(84899), a = t(8662), o = !a(function(f) {
                Array.from(f);
              });
              s({ target: "Array", stat: !0, forced: o }, {
                from: r
              });
            }
          ),
          /***/
          18183: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(37190).includes, a = t(6677);
              s({ target: "Array", proto: !0 }, {
                includes: function(f) {
                  return r(this, f, arguments.length > 1 ? arguments[1] : void 0);
                }
              }), a("includes");
            }
          ),
          /***/
          54883: (
            /***/
            function(l, c, t) {
              var s = t(29580), r = t(6677), a = t(44818), o = t(20821), f = t(61495), u = "Array Iterator", h = o.set, d = o.getterFor(u);
              l.exports = f(Array, "Array", function(i, p) {
                h(this, {
                  type: u,
                  target: s(i),
                  // target
                  index: 0,
                  // next index
                  kind: p
                  // kind
                });
              }, function() {
                var i = d(this), p = i.target, y = i.kind, m = i.index++;
                return !p || m >= p.length ? (i.target = void 0, { value: void 0, done: !0 }) : y == "keys" ? { value: m, done: !1 } : y == "values" ? { value: p[m], done: !1 } : { value: [m, p[m]], done: !1 };
              }, "values"), a.Arguments = a.Array, r("keys"), r("values"), r("entries");
            }
          ),
          /***/
          85005: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(88697), a = t(78609), o = t(29580), f = t(54324), u = r([].join), h = a != Object, d = f("join", ",");
              s({ target: "Array", proto: !0, forced: h || !d }, {
                join: function(p) {
                  return u(o(this), p === void 0 ? "," : p);
                }
              });
            }
          ),
          /***/
          73214: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(68671).map, a = t(82091), o = a("map");
              s({ target: "Array", proto: !0, forced: !o }, {
                map: function(u) {
                  return r(this, u, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          18821: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(71982), o = t(31536), f = t(52786), u = t(32565), h = t(47046), d = t(29580), i = t(35039), p = t(52280), y = t(82091), m = t(15629), e = y("slice"), x = p("species"), S = r.Array, P = Math.max;
              s({ target: "Array", proto: !0, forced: !e }, {
                slice: function(T, A) {
                  var E = d(this), D = h(E), b = u(T, D), R = u(A === void 0 ? D : A, D), L, N, M;
                  if (a(E) && (L = E.constructor, o(L) && (L === S || a(L.prototype)) ? L = void 0 : f(L) && (L = L[x], L === null && (L = void 0)), L === S || L === void 0))
                    return m(E, b, R);
                  for (N = new (L === void 0 ? S : L)(P(R - b, 0)), M = 0; b < R; b++, M++)
                    b in E && i(N, M, E[b]);
                  return N.length = M, N;
                }
              });
            }
          ),
          /***/
          55281: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(88697), a = t(97676), o = t(30744), f = t(47046), u = t(28967), h = t(79044), d = t(2013), i = t(54324), p = t(34631), y = t(80442), m = t(11197), e = t(76929), x = [], S = r(x.sort), P = r(x.push), O = h(function() {
                x.sort(void 0);
              }), T = h(function() {
                x.sort(null);
              }), A = i("sort"), E = !h(function() {
                if (m)
                  return m < 70;
                if (!(p && p > 3)) {
                  if (y)
                    return !0;
                  if (e)
                    return e < 603;
                  var R = "", L, N, M, K;
                  for (L = 65; L < 76; L++) {
                    switch (N = String.fromCharCode(L), L) {
                      case 66:
                      case 69:
                      case 70:
                      case 72:
                        M = 3;
                        break;
                      case 68:
                      case 71:
                        M = 4;
                        break;
                      default:
                        M = 2;
                    }
                    for (K = 0; K < 47; K++)
                      x.push({ k: N + K, v: M });
                  }
                  for (x.sort(function(ct, J) {
                    return J.v - ct.v;
                  }), K = 0; K < x.length; K++)
                    N = x[K].k.charAt(0), R.charAt(R.length - 1) !== N && (R += N);
                  return R !== "DGBEFHACIJK";
                }
              }), D = O || !T || !A || !E, b = function(R) {
                return function(L, N) {
                  return N === void 0 ? -1 : L === void 0 ? 1 : R !== void 0 ? +R(L, N) || 0 : u(L) > u(N) ? 1 : -1;
                };
              };
              s({ target: "Array", proto: !0, forced: D }, {
                sort: function(L) {
                  L !== void 0 && a(L);
                  var N = o(this);
                  if (E)
                    return L === void 0 ? S(N) : S(N, L);
                  var M = [], K = f(N), ct, J;
                  for (J = 0; J < K; J++)
                    J in N && P(M, N[J]);
                  for (d(M, b(L)), ct = M.length, J = 0; J < ct; )
                    N[J] = M[J++];
                  for (; J < K; )
                    delete N[J++];
                  return N;
                }
              });
            }
          ),
          /***/
          45550: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(32565), o = t(14229), f = t(47046), u = t(30744), h = t(80150), d = t(35039), i = t(82091), p = i("splice"), y = r.TypeError, m = Math.max, e = Math.min, x = 9007199254740991, S = "Maximum allowed length exceeded";
              s({ target: "Array", proto: !0, forced: !p }, {
                splice: function(O, T) {
                  var A = u(this), E = f(A), D = a(O, E), b = arguments.length, R, L, N, M, K, ct;
                  if (b === 0 ? R = L = 0 : b === 1 ? (R = 0, L = E - D) : (R = b - 2, L = e(m(o(T), 0), E - D)), E + R - L > x)
                    throw y(S);
                  for (N = h(A, L), M = 0; M < L; M++)
                    K = D + M, K in A && d(N, M, A[K]);
                  if (N.length = L, R < L) {
                    for (M = D; M < E - L; M++)
                      K = M + L, ct = M + R, K in A ? A[ct] = A[K] : delete A[ct];
                    for (M = E; M > E - L + R; M--)
                      delete A[M - 1];
                  } else if (R > L)
                    for (M = E - L; M > D; M--)
                      K = M + L - 1, ct = M + R - 1, K in A ? A[ct] = A[K] : delete A[ct];
                  for (M = 0; M < R; M++)
                    A[M + D] = arguments[M + 2];
                  return A.length = E - L + R, N;
                }
              });
            }
          ),
          /***/
          33142: (
            /***/
            function(l, c, t) {
              var s = t(24792), r = t(35974), a = t(67707), o = t(52280), f = o("toPrimitive"), u = Date.prototype;
              s(u, f) || r(u, f, a);
            }
          ),
          /***/
          54994: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(55316).EXISTS, a = t(88697), o = t(86385).f, f = Function.prototype, u = a(f.toString), h = /^\s*function ([^ (]*)/, d = a(h.exec), i = "name";
              s && !r && o(f, i, {
                configurable: !0,
                get: function() {
                  try {
                    return d(h, u(this))[1];
                  } catch (p) {
                    return "";
                  }
                }
              });
            }
          ),
          /***/
          62688: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363);
              s({ global: !0 }, {
                globalThis: r
              });
            }
          ),
          /***/
          44063: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(60878);
              r(s.JSON, "JSON", !0);
            }
          ),
          /***/
          30644: (
            /***/
            function(l, c, t) {
              var s = t(9121), r = t(33513);
              s("Map", function(a) {
                return function() {
                  return a(this, arguments.length ? arguments[0] : void 0);
                };
              }, r);
            }
          ),
          /***/
          62031: (
            /***/
            function(l, c, t) {
              var s = t(60878);
              s(Math, "Math", !0);
            }
          ),
          /***/
          80174: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(98363), a = t(88697), o = t(86291), f = t(35974), u = t(24792), h = t(59250), d = t(32010), i = t(66681), p = t(21893), y = t(79044), m = t(87994).f, e = t(66012).f, x = t(86385).f, S = t(41655), P = t(10287).trim, O = "Number", T = r[O], A = T.prototype, E = r.TypeError, D = a("".slice), b = a("".charCodeAt), R = function(J) {
                var nt = p(J, "number");
                return typeof nt == "bigint" ? nt : L(nt);
              }, L = function(J) {
                var nt = p(J, "number"), yt, bt, Tt, It, Lt, zt, Q, gt;
                if (i(nt))
                  throw E("Cannot convert a Symbol value to a number");
                if (typeof nt == "string" && nt.length > 2) {
                  if (nt = P(nt), yt = b(nt, 0), yt === 43 || yt === 45) {
                    if (bt = b(nt, 2), bt === 88 || bt === 120)
                      return NaN;
                  } else if (yt === 48) {
                    switch (b(nt, 1)) {
                      case 66:
                      case 98:
                        Tt = 2, It = 49;
                        break;
                      case 79:
                      case 111:
                        Tt = 8, It = 55;
                        break;
                      default:
                        return +nt;
                    }
                    for (Lt = D(nt, 2), zt = Lt.length, Q = 0; Q < zt; Q++)
                      if (gt = b(Lt, Q), gt < 48 || gt > It)
                        return NaN;
                    return parseInt(Lt, Tt);
                  }
                }
                return +nt;
              };
              if (o(O, !T(" 0o1") || !T("0b1") || T("+0x1"))) {
                for (var N = function(nt) {
                  var yt = arguments.length < 1 ? 0 : T(R(nt)), bt = this;
                  return d(A, bt) && y(function() {
                    S(bt);
                  }) ? h(Object(yt), bt, N) : yt;
                }, M = s ? m(T) : (
                  // ES3:
                  "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(",")
                ), K = 0, ct; M.length > K; K++)
                  u(T, ct = M[K]) && !u(N, ct) && x(N, ct, e(T, ct));
                N.prototype = A, A.constructor = N, f(r, O, N);
              }
            }
          ),
          /***/
          27013: (
            /***/
            function(l, c, t) {
              var s = t(19882);
              s({ target: "Number", stat: !0 }, {
                EPSILON: Math.pow(2, -52)
              });
            }
          ),
          /***/
          14686: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(5310);
              s({ target: "Number", stat: !0 }, { isFinite: r });
            }
          ),
          /***/
          35727: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(57507);
              s({ target: "Number", stat: !0 }, {
                isInteger: r
              });
            }
          ),
          /***/
          12798: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(88697), o = t(14229), f = t(41655), u = t(26031), h = t(79044), d = r.RangeError, i = r.String, p = Math.floor, y = a(u), m = a("".slice), e = a(1 .toFixed), x = function(E, D, b) {
                return D === 0 ? b : D % 2 === 1 ? x(E, D - 1, b * E) : x(E * E, D / 2, b);
              }, S = function(E) {
                for (var D = 0, b = E; b >= 4096; )
                  D += 12, b /= 4096;
                for (; b >= 2; )
                  D += 1, b /= 2;
                return D;
              }, P = function(E, D, b) {
                for (var R = -1, L = b; ++R < 6; )
                  L += D * E[R], E[R] = L % 1e7, L = p(L / 1e7);
              }, O = function(E, D) {
                for (var b = 6, R = 0; --b >= 0; )
                  R += E[b], E[b] = p(R / D), R = R % D * 1e7;
              }, T = function(E) {
                for (var D = 6, b = ""; --D >= 0; )
                  if (b !== "" || D === 0 || E[D] !== 0) {
                    var R = i(E[D]);
                    b = b === "" ? R : b + y("0", 7 - R.length) + R;
                  }
                return b;
              }, A = h(function() {
                return e(8e-5, 3) !== "0.000" || e(0.9, 0) !== "1" || e(1.255, 2) !== "1.25" || e(1000000000000000100, 0) !== "1000000000000000128";
              }) || !h(function() {
                e({});
              });
              s({ target: "Number", proto: !0, forced: A }, {
                toFixed: function(D) {
                  var b = f(this), R = o(D), L = [0, 0, 0, 0, 0, 0], N = "", M = "0", K, ct, J, nt;
                  if (R < 0 || R > 20)
                    throw d("Incorrect fraction digits");
                  if (b != b)
                    return "NaN";
                  if (b <= -1e21 || b >= 1e21)
                    return i(b);
                  if (b < 0 && (N = "-", b = -b), b > 1e-21)
                    if (K = S(b * x(2, 69, 1)) - 69, ct = K < 0 ? b * x(2, -K, 1) : b / x(2, K, 1), ct *= 4503599627370496, K = 52 - K, K > 0) {
                      for (P(L, 0, ct), J = R; J >= 7; )
                        P(L, 1e7, 0), J -= 7;
                      for (P(L, x(10, J, 1), 0), J = K - 1; J >= 23; )
                        O(L, 8388608), J -= 23;
                      O(L, 1 << J), P(L, 1, 1), O(L, 2), M = T(L);
                    } else
                      P(L, 0, ct), P(L, 1 << -K, 0), M = T(L) + y("0", R);
                  return R > 0 ? (nt = M.length, M = N + (nt <= R ? "0." + y("0", R - nt) + M : m(M, 0, nt - R) + "." + m(M, nt - R))) : M = N + M, M;
                }
              });
            }
          ),
          /***/
          33130: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(45856);
              s({ target: "Object", stat: !0, forced: Object.assign !== r }, {
                assign: r
              });
            }
          ),
          /***/
          63815: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(51207), a = t(79044), o = t(52786), f = t(44296).onFreeze, u = Object.freeze, h = a(function() {
                u(1);
              });
              s({ target: "Object", stat: !0, forced: h, sham: !r }, {
                freeze: function(i) {
                  return u && o(i) ? u(f(i)) : i;
                }
              });
            }
          ),
          /***/
          80238: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(79044), a = t(29580), o = t(66012).f, f = t(7493), u = r(function() {
                o(1);
              }), h = !f || u;
              s({ target: "Object", stat: !0, forced: h, sham: !f }, {
                getOwnPropertyDescriptor: function(i, p) {
                  return o(a(i), p);
                }
              });
            }
          ),
          /***/
          12938: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(7493), a = t(31561), o = t(29580), f = t(66012), u = t(35039);
              s({ target: "Object", stat: !0, sham: !r }, {
                getOwnPropertyDescriptors: function(d) {
                  for (var i = o(d), p = f.f, y = a(i), m = {}, e = 0, x, S; y.length > e; )
                    S = p(i, x = y[e++]), S !== void 0 && u(m, x, S);
                  return m;
                }
              });
            }
          ),
          /***/
          56908: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(79044), a = t(30744), o = t(12654), f = t(25115), u = r(function() {
                o(1);
              });
              s({ target: "Object", stat: !0, forced: u, sham: !f }, {
                getPrototypeOf: function(d) {
                  return o(a(d));
                }
              });
            }
          ),
          /***/
          80044: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(30744), a = t(60667), o = t(79044), f = o(function() {
                a(1);
              });
              s({ target: "Object", stat: !0, forced: f }, {
                keys: function(h) {
                  return a(r(h));
                }
              });
            }
          ),
          /***/
          10853: (
            /***/
            function(l, c, t) {
              var s = t(57301), r = t(35974), a = t(36699);
              s || r(Object.prototype, "toString", a, { unsafe: !0 });
            }
          ),
          /***/
          19457: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(8765).values;
              s({ target: "Object", stat: !0 }, {
                values: function(o) {
                  return r(o);
                }
              });
            }
          ),
          /***/
          12382: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(79611), a = t(97676), o = t(29269), f = t(74443), u = t(5166);
              s({ target: "Promise", stat: !0 }, {
                allSettled: function(d) {
                  var i = this, p = o.f(i), y = p.resolve, m = p.reject, e = f(function() {
                    var x = a(i.resolve), S = [], P = 0, O = 1;
                    u(d, function(T) {
                      var A = P++, E = !1;
                      O++, r(x, i, T).then(function(D) {
                        E || (E = !0, S[A] = { status: "fulfilled", value: D }, --O || y(S));
                      }, function(D) {
                        E || (E = !0, S[A] = { status: "rejected", reason: D }, --O || y(S));
                      });
                    }), --O || y(S);
                  });
                  return e.error && m(e.value), p.promise;
                }
              });
            }
          ),
          /***/
          487: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(97676), a = t(22773), o = t(79611), f = t(29269), u = t(74443), h = t(5166), d = "No one promise resolved";
              s({ target: "Promise", stat: !0 }, {
                any: function(p) {
                  var y = this, m = a("AggregateError"), e = f.f(y), x = e.resolve, S = e.reject, P = u(function() {
                    var O = r(y.resolve), T = [], A = 0, E = 1, D = !1;
                    h(p, function(b) {
                      var R = A++, L = !1;
                      E++, o(O, y, b).then(function(N) {
                        L || D || (D = !0, x(N));
                      }, function(N) {
                        L || D || (L = !0, T[R] = N, --E || S(new m(T, d)));
                      });
                    }), --E || S(new m(T, d));
                  });
                  return P.error && S(P.value), e.promise;
                }
              });
            }
          ),
          /***/
          27138: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(21178), a = t(58369), o = t(79044), f = t(22773), u = t(75277), h = t(7270), d = t(11621), i = t(35974), p = !!a && o(function() {
                a.prototype.finally.call({ then: function() {
                } }, function() {
                });
              });
              if (s({ target: "Promise", proto: !0, real: !0, forced: p }, {
                finally: function(m) {
                  var e = h(this, f("Promise")), x = u(m);
                  return this.then(
                    x ? function(S) {
                      return d(e, m()).then(function() {
                        return S;
                      });
                    } : m,
                    x ? function(S) {
                      return d(e, m()).then(function() {
                        throw S;
                      });
                    } : m
                  );
                }
              }), !r && u(a)) {
                var y = f("Promise").prototype.finally;
                a.prototype.finally !== y && i(a.prototype, "finally", y, { unsafe: !0 });
              }
            }
          ),
          /***/
          35054: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(21178), a = t(98363), o = t(22773), f = t(79611), u = t(58369), h = t(35974), d = t(7592), i = t(22412), p = t(60878), y = t(57323), m = t(97676), e = t(75277), x = t(52786), S = t(9519), P = t(56429), O = t(5166), T = t(8662), A = t(7270), E = t(84643).set, D = t(71800), b = t(11621), R = t(46271), L = t(29269), N = t(74443), M = t(20821), K = t(86291), ct = t(52280), J = t(47923), nt = t(93921), yt = t(11197), bt = ct("species"), Tt = "Promise", It = M.get, Lt = M.set, zt = M.getterFor(Tt), Q = u && u.prototype, gt = u, ht = Q, st = a.TypeError, xt = a.document, G = a.process, Ft = L.f, z = Ft, C = !!(xt && xt.createEvent && a.dispatchEvent), k = e(a.PromiseRejectionEvent), V = "unhandledrejection", ot = "rejectionhandled", et = 0, tt = 1, At = 2, Nt = 1, Kt = 2, Vt = !1, Ot, ie, Ae, be, de = K(Tt, function() {
                var lt = P(gt), Y = lt !== String(gt);
                if (!Y && yt === 66 || r && !ht.finally)
                  return !0;
                if (yt >= 51 && /native code/.test(lt))
                  return !1;
                var j = new gt(function(Ht) {
                  Ht(1);
                }), wt = function(Ht) {
                  Ht(function() {
                  }, function() {
                  });
                }, it = j.constructor = {};
                return it[bt] = wt, Vt = j.then(function() {
                }) instanceof wt, Vt ? !Y && J && !k : !0;
              }), Se = de || !T(function(lt) {
                gt.all(lt).catch(function() {
                });
              }), Wt = function(lt) {
                var Y;
                return x(lt) && e(Y = lt.then) ? Y : !1;
              }, _t = function(lt, Y) {
                if (!lt.notified) {
                  lt.notified = !0;
                  var j = lt.reactions;
                  D(function() {
                    for (var wt = lt.value, it = lt.state == tt, Ht = 0; j.length > Ht; ) {
                      var te = j[Ht++], _ = it ? te.ok : te.fail, Qt = te.resolve, ee = te.reject, Et = te.domain, jt, le, Ne;
                      try {
                        _ ? (it || (lt.rejection === Kt && Be(lt), lt.rejection = Nt), _ === !0 ? jt = wt : (Et && Et.enter(), jt = _(wt), Et && (Et.exit(), Ne = !0)), jt === te.promise ? ee(st("Promise-chain cycle")) : (le = Wt(jt)) ? f(le, jt, Qt, ee) : Qt(jt)) : ee(wt);
                      } catch (Oe) {
                        Et && !Ne && Et.exit(), ee(Oe);
                      }
                    }
                    lt.reactions = [], lt.notified = !1, Y && !lt.rejection && pe(lt);
                  });
                }
              }, ce = function(lt, Y, j) {
                var wt, it;
                C ? (wt = xt.createEvent("Event"), wt.promise = Y, wt.reason = j, wt.initEvent(lt, !1, !0), a.dispatchEvent(wt)) : wt = { promise: Y, reason: j }, !k && (it = a["on" + lt]) ? it(wt) : lt === V && R("Unhandled promise rejection", j);
              }, pe = function(lt) {
                f(E, a, function() {
                  var Y = lt.facade, j = lt.value, wt = we(lt), it;
                  if (wt && (it = N(function() {
                    nt ? G.emit("unhandledRejection", j, Y) : ce(V, Y, j);
                  }), lt.rejection = nt || we(lt) ? Kt : Nt, it.error))
                    throw it.value;
                });
              }, we = function(lt) {
                return lt.rejection !== Nt && !lt.parent;
              }, Be = function(lt) {
                f(E, a, function() {
                  var Y = lt.facade;
                  nt ? G.emit("rejectionHandled", Y) : ce(ot, Y, lt.value);
                });
              }, Ie = function(lt, Y, j) {
                return function(wt) {
                  lt(Y, wt, j);
                };
              }, Dt = function(lt, Y, j) {
                lt.done || (lt.done = !0, j && (lt = j), lt.value = Y, lt.state = At, _t(lt, !0));
              }, ue = function(lt, Y, j) {
                if (!lt.done) {
                  lt.done = !0, j && (lt = j);
                  try {
                    if (lt.facade === Y)
                      throw st("Promise can't be resolved itself");
                    var wt = Wt(Y);
                    wt ? D(function() {
                      var it = { done: !1 };
                      try {
                        f(
                          wt,
                          Y,
                          Ie(ue, it, lt),
                          Ie(Dt, it, lt)
                        );
                      } catch (Ht) {
                        Dt(it, Ht, lt);
                      }
                    }) : (lt.value = Y, lt.state = tt, _t(lt, !1));
                  } catch (it) {
                    Dt({ done: !1 }, it, lt);
                  }
                }
              };
              if (de && (gt = function(Y) {
                S(this, ht), m(Y), f(Ot, this);
                var j = It(this);
                try {
                  Y(Ie(ue, j), Ie(Dt, j));
                } catch (wt) {
                  Dt(j, wt);
                }
              }, ht = gt.prototype, Ot = function(Y) {
                Lt(this, {
                  type: Tt,
                  done: !1,
                  notified: !1,
                  parent: !1,
                  reactions: [],
                  rejection: !1,
                  state: et,
                  value: void 0
                });
              }, Ot.prototype = d(ht, {
                // `Promise.prototype.then` method
                // https://tc39.es/ecma262/#sec-promise.prototype.then
                then: function(Y, j) {
                  var wt = zt(this), it = wt.reactions, Ht = Ft(A(this, gt));
                  return Ht.ok = e(Y) ? Y : !0, Ht.fail = e(j) && j, Ht.domain = nt ? G.domain : void 0, wt.parent = !0, it[it.length] = Ht, wt.state != et && _t(wt, !1), Ht.promise;
                },
                // `Promise.prototype.catch` method
                // https://tc39.es/ecma262/#sec-promise.prototype.catch
                catch: function(lt) {
                  return this.then(void 0, lt);
                }
              }), ie = function() {
                var lt = new Ot(), Y = It(lt);
                this.promise = lt, this.resolve = Ie(ue, Y), this.reject = Ie(Dt, Y);
              }, L.f = Ft = function(lt) {
                return lt === gt || lt === Ae ? new ie(lt) : z(lt);
              }, !r && e(u) && Q !== Object.prototype)) {
                be = Q.then, Vt || (h(Q, "then", function(Y, j) {
                  var wt = this;
                  return new gt(function(it, Ht) {
                    f(be, wt, it, Ht);
                  }).then(Y, j);
                }, { unsafe: !0 }), h(Q, "catch", ht.catch, { unsafe: !0 }));
                try {
                  delete Q.constructor;
                } catch (lt) {
                }
                i && i(Q, ht);
              }
              s({ global: !0, wrap: !0, forced: de }, {
                Promise: gt
              }), p(gt, Tt, !1, !0), y(Tt), Ae = o(Tt), s({ target: Tt, stat: !0, forced: de }, {
                // `Promise.reject` method
                // https://tc39.es/ecma262/#sec-promise.reject
                reject: function(Y) {
                  var j = Ft(this);
                  return f(j.reject, void 0, Y), j.promise;
                }
              }), s({ target: Tt, stat: !0, forced: r || de }, {
                // `Promise.resolve` method
                // https://tc39.es/ecma262/#sec-promise.resolve
                resolve: function(Y) {
                  return b(r && this === Ae ? gt : this, Y);
                }
              }), s({ target: Tt, stat: !0, forced: Se }, {
                // `Promise.all` method
                // https://tc39.es/ecma262/#sec-promise.all
                all: function(Y) {
                  var j = this, wt = Ft(j), it = wt.resolve, Ht = wt.reject, te = N(function() {
                    var _ = m(j.resolve), Qt = [], ee = 0, Et = 1;
                    O(Y, function(jt) {
                      var le = ee++, Ne = !1;
                      Et++, f(_, j, jt).then(function(Oe) {
                        Ne || (Ne = !0, Qt[le] = Oe, --Et || it(Qt));
                      }, Ht);
                    }), --Et || it(Qt);
                  });
                  return te.error && Ht(te.value), wt.promise;
                },
                // `Promise.race` method
                // https://tc39.es/ecma262/#sec-promise.race
                race: function(Y) {
                  var j = this, wt = Ft(j), it = wt.reject, Ht = N(function() {
                    var te = m(j.resolve);
                    O(Y, function(_) {
                      f(te, j, _).then(wt.resolve, it);
                    });
                  });
                  return Ht.error && it(Ht.value), wt.promise;
                }
              });
            }
          ),
          /***/
          54130: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(22773), a = t(63530), o = t(52381), f = t(43327), u = t(83875), h = t(52786), d = t(51569), i = t(79044), p = r("Reflect", "construct"), y = Object.prototype, m = [].push, e = i(function() {
                function P() {
                }
                return !(p(function() {
                }, [], P) instanceof P);
              }), x = !i(function() {
                p(function() {
                });
              }), S = e || x;
              s({ target: "Reflect", stat: !0, forced: S, sham: S }, {
                construct: function(O, T) {
                  f(O), u(T);
                  var A = arguments.length < 3 ? O : f(arguments[2]);
                  if (x && !e)
                    return p(O, T, A);
                  if (O == A) {
                    switch (T.length) {
                      case 0:
                        return new O();
                      case 1:
                        return new O(T[0]);
                      case 2:
                        return new O(T[0], T[1]);
                      case 3:
                        return new O(T[0], T[1], T[2]);
                      case 4:
                        return new O(T[0], T[1], T[2], T[3]);
                    }
                    var E = [null];
                    return a(m, E, T), new (a(o, O, E))();
                  }
                  var D = A.prototype, b = d(h(D) ? D : y), R = a(O, b, T);
                  return h(R) ? R : b;
                }
              });
            }
          ),
          /***/
          39275: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(99749);
              s({ target: "RegExp", proto: !0, forced: /./.exec !== r }, {
                exec: r
              });
            }
          ),
          /***/
          15158: (
            /***/
            function(l, c, t) {
              var s = t(7493), r = t(86385), a = t(58083), o = t(79044), f = RegExp.prototype, u = s && o(function() {
                return Object.getOwnPropertyDescriptor(f, "flags").get.call({ dotAll: !0, sticky: !0 }) !== "sy";
              });
              u && r.f(f, "flags", {
                configurable: !0,
                get: a
              });
            }
          ),
          /***/
          33290: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(55316).PROPER, a = t(35974), o = t(83875), f = t(32010), u = t(28967), h = t(79044), d = t(58083), i = "toString", p = RegExp.prototype, y = p[i], m = s(d), e = h(function() {
                return y.call({ source: "a", flags: "b" }) != "/a/b";
              }), x = r && y.name != i;
              (e || x) && a(RegExp.prototype, i, function() {
                var P = o(this), O = u(P.source), T = P.flags, A = u(T === void 0 && f(p, P) && !("flags" in p) ? m(P) : T);
                return "/" + O + "/" + A;
              }, { unsafe: !0 });
            }
          ),
          /***/
          99041: (
            /***/
            function(l, c, t) {
              var s = t(9121), r = t(33513);
              s("Set", function(a) {
                return function() {
                  return a(this, arguments.length ? arguments[0] : void 0);
                };
              }, r);
            }
          ),
          /***/
          18481: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(91140).codeAt;
              s({ target: "String", proto: !0 }, {
                codePointAt: function(o) {
                  return r(this, o);
                }
              });
            }
          ),
          /***/
          66923: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(88697), o = t(32565), f = r.RangeError, u = String.fromCharCode, h = String.fromCodePoint, d = a([].join), i = !!h && h.length != 1;
              s({ target: "String", stat: !0, forced: i }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                fromCodePoint: function(y) {
                  for (var m = [], e = arguments.length, x = 0, S; e > x; ) {
                    if (S = +arguments[x++], o(S, 1114111) !== S)
                      throw f(S + " is not a valid code point");
                    m[x] = S < 65536 ? u(S) : u(((S -= 65536) >> 10) + 55296, S % 1024 + 56320);
                  }
                  return d(m, "");
                }
              });
            }
          ),
          /***/
          19985: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(88697), a = t(21049), o = t(96411), f = t(28967), u = t(15454), h = r("".indexOf);
              s({ target: "String", proto: !0, forced: !u("includes") }, {
                includes: function(i) {
                  return !!~h(
                    f(o(this)),
                    f(a(i)),
                    arguments.length > 1 ? arguments[1] : void 0
                  );
                }
              });
            }
          ),
          /***/
          67666: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(75304), a = t(13881);
              s({ target: "String", proto: !0, forced: a("italics") }, {
                italics: function() {
                  return r(this, "i", "", "");
                }
              });
            }
          ),
          /***/
          45007: (
            /***/
            function(l, c, t) {
              var s = t(91140).charAt, r = t(28967), a = t(20821), o = t(61495), f = "String Iterator", u = a.set, h = a.getterFor(f);
              o(String, "String", function(d) {
                u(this, {
                  type: f,
                  string: r(d),
                  index: 0
                });
              }, function() {
                var i = h(this), p = i.string, y = i.index, m;
                return y >= p.length ? { value: void 0, done: !0 } : (m = s(p, y), i.index += m.length, { value: m, done: !1 });
              });
            }
          ),
          /***/
          86125: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(75304), a = t(13881);
              s({ target: "String", proto: !0, forced: a("link") }, {
                link: function(f) {
                  return r(this, "a", "href", f);
                }
              });
            }
          ),
          /***/
          55797: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(79611), o = t(88697), f = t(6181), u = t(96411), h = t(35108), d = t(28967), i = t(83875), p = t(79159), y = t(32010), m = t(42622), e = t(58083), x = t(97219), S = t(35974), P = t(79044), O = t(52280), T = t(7270), A = t(13350), E = t(94088), D = t(20821), b = t(21178), R = O("matchAll"), L = "RegExp String", N = L + " Iterator", M = D.set, K = D.getterFor(N), ct = RegExp.prototype, J = r.TypeError, nt = o(e), yt = o("".indexOf), bt = o("".matchAll), Tt = !!bt && !P(function() {
                bt("a", /./);
              }), It = f(function(Q, gt, ht, st) {
                M(this, {
                  type: N,
                  regexp: Q,
                  string: gt,
                  global: ht,
                  unicode: st,
                  done: !1
                });
              }, L, function() {
                var Q = K(this);
                if (Q.done)
                  return { value: void 0, done: !0 };
                var gt = Q.regexp, ht = Q.string, st = E(gt, ht);
                return st === null ? { value: void 0, done: Q.done = !0 } : Q.global ? (d(st[0]) === "" && (gt.lastIndex = A(ht, h(gt.lastIndex), Q.unicode)), { value: st, done: !1 }) : (Q.done = !0, { value: st, done: !1 });
              }), Lt = function(zt) {
                var Q = i(this), gt = d(zt), ht, st, xt, G, Ft, z;
                return ht = T(Q, RegExp), st = Q.flags, st === void 0 && y(ct, Q) && !("flags" in ct) && (st = nt(Q)), xt = st === void 0 ? "" : d(st), G = new ht(ht === RegExp ? Q.source : Q, xt), Ft = !!~yt(xt, "g"), z = !!~yt(xt, "u"), G.lastIndex = h(Q.lastIndex), new It(G, gt, Ft, z);
              };
              s({ target: "String", proto: !0, forced: Tt }, {
                matchAll: function(Q) {
                  var gt = u(this), ht, st, xt, G;
                  if (Q != null) {
                    if (m(Q) && (ht = d(u(
                      "flags" in ct ? Q.flags : nt(Q)
                    )), !~yt(ht, "g")))
                      throw J("`.matchAll` does not allow non-global regexes");
                    if (Tt)
                      return bt(gt, Q);
                    if (xt = x(Q, R), xt === void 0 && b && p(Q) == "RegExp" && (xt = Lt), xt)
                      return a(xt, Q, gt);
                  } else if (Tt)
                    return bt(gt, Q);
                  return st = d(gt), G = new RegExp(Q, "g"), b ? a(Lt, G, st) : G[R](st);
                }
              }), b || R in ct || S(ct, R, Lt);
            }
          ),
          /***/
          75668: (
            /***/
            function(l, c, t) {
              var s = t(79611), r = t(81492), a = t(83875), o = t(35108), f = t(28967), u = t(96411), h = t(97219), d = t(13350), i = t(94088);
              r("match", function(p, y, m) {
                return [
                  // `String.prototype.match` method
                  // https://tc39.es/ecma262/#sec-string.prototype.match
                  function(x) {
                    var S = u(this), P = x == null ? void 0 : h(x, p);
                    return P ? s(P, x, S) : new RegExp(x)[p](f(S));
                  },
                  // `RegExp.prototype[@@match]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
                  function(e) {
                    var x = a(this), S = f(e), P = m(y, x, S);
                    if (P.done)
                      return P.value;
                    if (!x.global)
                      return i(x, S);
                    var O = x.unicode;
                    x.lastIndex = 0;
                    for (var T = [], A = 0, E; (E = i(x, S)) !== null; ) {
                      var D = f(E[0]);
                      T[A] = D, D === "" && (x.lastIndex = d(S, o(x.lastIndex), O)), A++;
                    }
                    return A === 0 ? null : T;
                  }
                ];
              });
            }
          ),
          /***/
          84750: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(26031);
              s({ target: "String", proto: !0 }, {
                repeat: r
              });
            }
          ),
          /***/
          22321: (
            /***/
            function(l, c, t) {
              var s = t(63530), r = t(79611), a = t(88697), o = t(81492), f = t(79044), u = t(83875), h = t(75277), d = t(14229), i = t(35108), p = t(28967), y = t(96411), m = t(13350), e = t(97219), x = t(81373), S = t(94088), P = t(52280), O = P("replace"), T = Math.max, A = Math.min, E = a([].concat), D = a([].push), b = a("".indexOf), R = a("".slice), L = function(ct) {
                return ct === void 0 ? ct : String(ct);
              }, N = function() {
                return "a".replace(/./, "$0") === "$0";
              }(), M = function() {
                return /./[O] ? /./[O]("a", "$0") === "" : !1;
              }(), K = !f(function() {
                var ct = /./;
                return ct.exec = function() {
                  var J = [];
                  return J.groups = { a: "7" }, J;
                }, "".replace(ct, "$<a>") !== "7";
              });
              o("replace", function(ct, J, nt) {
                var yt = M ? "$" : "$0";
                return [
                  // `String.prototype.replace` method
                  // https://tc39.es/ecma262/#sec-string.prototype.replace
                  function(Tt, It) {
                    var Lt = y(this), zt = Tt == null ? void 0 : e(Tt, O);
                    return zt ? r(zt, Tt, Lt, It) : r(J, p(Lt), Tt, It);
                  },
                  // `RegExp.prototype[@@replace]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
                  function(bt, Tt) {
                    var It = u(this), Lt = p(bt);
                    if (typeof Tt == "string" && b(Tt, yt) === -1 && b(Tt, "$<") === -1) {
                      var zt = nt(J, It, Lt, Tt);
                      if (zt.done)
                        return zt.value;
                    }
                    var Q = h(Tt);
                    Q || (Tt = p(Tt));
                    var gt = It.global;
                    if (gt) {
                      var ht = It.unicode;
                      It.lastIndex = 0;
                    }
                    for (var st = []; ; ) {
                      var xt = S(It, Lt);
                      if (xt === null || (D(st, xt), !gt))
                        break;
                      var G = p(xt[0]);
                      G === "" && (It.lastIndex = m(Lt, i(It.lastIndex), ht));
                    }
                    for (var Ft = "", z = 0, C = 0; C < st.length; C++) {
                      xt = st[C];
                      for (var k = p(xt[0]), V = T(A(d(xt.index), Lt.length), 0), ot = [], et = 1; et < xt.length; et++)
                        D(ot, L(xt[et]));
                      var tt = xt.groups;
                      if (Q) {
                        var At = E([k], ot, V, Lt);
                        tt !== void 0 && D(At, tt);
                        var Nt = p(s(Tt, void 0, At));
                      } else
                        Nt = x(k, Lt, V, ot, tt, Tt);
                      V >= z && (Ft += R(Lt, z, V) + Nt, z = V + k.length);
                    }
                    return Ft + R(Lt, z);
                  }
                ];
              }, !K || !N || M);
            }
          ),
          /***/
          67838: (
            /***/
            function(l, c, t) {
              var s = t(63530), r = t(79611), a = t(88697), o = t(81492), f = t(42622), u = t(83875), h = t(96411), d = t(7270), i = t(13350), p = t(35108), y = t(28967), m = t(97219), e = t(15629), x = t(94088), S = t(99749), P = t(97047), O = t(79044), T = P.UNSUPPORTED_Y, A = 4294967295, E = Math.min, D = [].push, b = a(/./.exec), R = a(D), L = a("".slice), N = !O(function() {
                var M = /(?:)/, K = M.exec;
                M.exec = function() {
                  return K.apply(this, arguments);
                };
                var ct = "ab".split(M);
                return ct.length !== 2 || ct[0] !== "a" || ct[1] !== "b";
              });
              o("split", function(M, K, ct) {
                var J;
                return "abbc".split(/(b)*/)[1] == "c" || // eslint-disable-next-line regexp/no-empty-group -- required for testing
                "test".split(/(?:)/, -1).length != 4 || "ab".split(/(?:ab)*/).length != 2 || ".".split(/(.?)(.?)/).length != 4 || // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
                ".".split(/()()/).length > 1 || "".split(/.?/).length ? J = function(nt, yt) {
                  var bt = y(h(this)), Tt = yt === void 0 ? A : yt >>> 0;
                  if (Tt === 0)
                    return [];
                  if (nt === void 0)
                    return [bt];
                  if (!f(nt))
                    return r(K, bt, nt, Tt);
                  for (var It = [], Lt = (nt.ignoreCase ? "i" : "") + (nt.multiline ? "m" : "") + (nt.unicode ? "u" : "") + (nt.sticky ? "y" : ""), zt = 0, Q = new RegExp(nt.source, Lt + "g"), gt, ht, st; (gt = r(S, Q, bt)) && (ht = Q.lastIndex, !(ht > zt && (R(It, L(bt, zt, gt.index)), gt.length > 1 && gt.index < bt.length && s(D, It, e(gt, 1)), st = gt[0].length, zt = ht, It.length >= Tt))); )
                    Q.lastIndex === gt.index && Q.lastIndex++;
                  return zt === bt.length ? (st || !b(Q, "")) && R(It, "") : R(It, L(bt, zt)), It.length > Tt ? e(It, 0, Tt) : It;
                } : "0".split(void 0, 0).length ? J = function(nt, yt) {
                  return nt === void 0 && yt === 0 ? [] : r(K, this, nt, yt);
                } : J = K, [
                  // `String.prototype.split` method
                  // https://tc39.es/ecma262/#sec-string.prototype.split
                  function(yt, bt) {
                    var Tt = h(this), It = yt == null ? void 0 : m(yt, M);
                    return It ? r(It, yt, Tt, bt) : r(J, y(Tt), yt, bt);
                  },
                  // `RegExp.prototype[@@split]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
                  //
                  // NOTE: This cannot be properly polyfilled in engines that don't support
                  // the 'y' flag.
                  function(nt, yt) {
                    var bt = u(this), Tt = y(nt), It = ct(J, bt, Tt, yt, J !== K);
                    if (It.done)
                      return It.value;
                    var Lt = d(bt, RegExp), zt = bt.unicode, Q = (bt.ignoreCase ? "i" : "") + (bt.multiline ? "m" : "") + (bt.unicode ? "u" : "") + (T ? "g" : "y"), gt = new Lt(T ? "^(?:" + bt.source + ")" : bt, Q), ht = yt === void 0 ? A : yt >>> 0;
                    if (ht === 0)
                      return [];
                    if (Tt.length === 0)
                      return x(gt, Tt) === null ? [Tt] : [];
                    for (var st = 0, xt = 0, G = []; xt < Tt.length; ) {
                      gt.lastIndex = T ? 0 : xt;
                      var Ft = x(gt, T ? L(Tt, xt) : Tt), z;
                      if (Ft === null || (z = E(p(gt.lastIndex + (T ? xt : 0)), Tt.length)) === st)
                        xt = i(Tt, xt, zt);
                      else {
                        if (R(G, L(Tt, st, xt)), G.length === ht)
                          return G;
                        for (var C = 1; C <= Ft.length - 1; C++)
                          if (R(G, Ft[C]), G.length === ht)
                            return G;
                        xt = st = z;
                      }
                    }
                    return R(G, L(Tt, st)), G;
                  }
                ];
              }, !N, T);
            }
          ),
          /***/
          54902: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(75304), a = t(13881);
              s({ target: "String", proto: !0, forced: a("strike") }, {
                strike: function() {
                  return r(this, "strike", "", "");
                }
              });
            }
          ),
          /***/
          29897: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(10287).trim, a = t(68487);
              s({ target: "String", proto: !0, forced: a("trim") }, {
                trim: function() {
                  return r(this);
                }
              });
            }
          ),
          /***/
          52729: (
            /***/
            function(l, c, t) {
              var s = t(68308);
              s("asyncIterator");
            }
          ),
          /***/
          86632: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(7493), a = t(98363), o = t(88697), f = t(24792), u = t(75277), h = t(32010), d = t(28967), i = t(86385).f, p = t(73870), y = a.Symbol, m = y && y.prototype;
              if (r && u(y) && (!("description" in m) || // Safari 12 bug
              y().description !== void 0)) {
                var e = {}, x = function() {
                  var b = arguments.length < 1 || arguments[0] === void 0 ? void 0 : d(arguments[0]), R = h(m, this) ? new y(b) : b === void 0 ? y() : y(b);
                  return b === "" && (e[R] = !0), R;
                };
                p(x, y), x.prototype = m, m.constructor = x;
                var S = String(y("test")) == "Symbol(test)", P = o(m.toString), O = o(m.valueOf), T = /^Symbol\((.*)\)[^)]+$/, A = o("".replace), E = o("".slice);
                i(m, "description", {
                  configurable: !0,
                  get: function() {
                    var b = O(this), R = P(b);
                    if (f(e, b))
                      return "";
                    var L = S ? E(R, 7, -1) : A(R, T, "$1");
                    return L === "" ? void 0 : L;
                  }
                }), s({ global: !0, forced: !0 }, {
                  Symbol: x
                });
              }
            }
          ),
          /***/
          61928: (
            /***/
            function(l, c, t) {
              var s = t(68308);
              s("iterator");
            }
          ),
          /***/
          26364: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(98363), a = t(22773), o = t(63530), f = t(79611), u = t(88697), h = t(21178), d = t(7493), i = t(3850), p = t(79044), y = t(24792), m = t(71982), e = t(75277), x = t(52786), S = t(32010), P = t(66681), O = t(83875), T = t(30744), A = t(29580), E = t(383), D = t(28967), b = t(69199), R = t(51569), L = t(60667), N = t(87994), M = t(74938), K = t(89612), ct = t(66012), J = t(86385), nt = t(81513), yt = t(15629), bt = t(35974), Tt = t(53580), It = t(50466), Lt = t(47505), zt = t(34524), Q = t(52280), gt = t(20127), ht = t(68308), st = t(60878), xt = t(20821), G = t(68671).forEach, Ft = It("hidden"), z = "Symbol", C = "prototype", k = Q("toPrimitive"), V = xt.set, ot = xt.getterFor(z), et = Object[C], tt = r.Symbol, At = tt && tt[C], Nt = r.TypeError, Kt = r.QObject, Vt = a("JSON", "stringify"), Ot = ct.f, ie = J.f, Ae = M.f, be = nt.f, de = u([].push), Se = Tt("symbols"), Wt = Tt("op-symbols"), _t = Tt("string-to-symbol-registry"), ce = Tt("symbol-to-string-registry"), pe = Tt("wks"), we = !Kt || !Kt[C] || !Kt[C].findChild, Be = d && p(function() {
                return R(ie({}, "a", {
                  get: function() {
                    return ie(this, "a", { value: 7 }).a;
                  }
                })).a != 7;
              }) ? function(_, Qt, ee) {
                var Et = Ot(et, Qt);
                Et && delete et[Qt], ie(_, Qt, ee), Et && _ !== et && ie(et, Qt, Et);
              } : ie, Ie = function(_, Qt) {
                var ee = Se[_] = R(At);
                return V(ee, {
                  type: z,
                  tag: _,
                  description: Qt
                }), d || (ee.description = Qt), ee;
              }, Dt = function(Qt, ee, Et) {
                Qt === et && Dt(Wt, ee, Et), O(Qt);
                var jt = E(ee);
                return O(Et), y(Se, jt) ? (Et.enumerable ? (y(Qt, Ft) && Qt[Ft][jt] && (Qt[Ft][jt] = !1), Et = R(Et, { enumerable: b(0, !1) })) : (y(Qt, Ft) || ie(Qt, Ft, b(1, {})), Qt[Ft][jt] = !0), Be(Qt, jt, Et)) : ie(Qt, jt, Et);
              }, ue = function(Qt, ee) {
                O(Qt);
                var Et = A(ee), jt = L(Et).concat(it(Et));
                return G(jt, function(le) {
                  (!d || f(Y, Et, le)) && Dt(Qt, le, Et[le]);
                }), Qt;
              }, lt = function(Qt, ee) {
                return ee === void 0 ? R(Qt) : ue(R(Qt), ee);
              }, Y = function(Qt) {
                var ee = E(Qt), Et = f(be, this, ee);
                return this === et && y(Se, ee) && !y(Wt, ee) ? !1 : Et || !y(this, ee) || !y(Se, ee) || y(this, Ft) && this[Ft][ee] ? Et : !0;
              }, j = function(Qt, ee) {
                var Et = A(Qt), jt = E(ee);
                if (!(Et === et && y(Se, jt) && !y(Wt, jt))) {
                  var le = Ot(Et, jt);
                  return le && y(Se, jt) && !(y(Et, Ft) && Et[Ft][jt]) && (le.enumerable = !0), le;
                }
              }, wt = function(Qt) {
                var ee = Ae(A(Qt)), Et = [];
                return G(ee, function(jt) {
                  !y(Se, jt) && !y(Lt, jt) && de(Et, jt);
                }), Et;
              }, it = function(Qt) {
                var ee = Qt === et, Et = Ae(ee ? Wt : A(Qt)), jt = [];
                return G(Et, function(le) {
                  y(Se, le) && (!ee || y(et, le)) && de(jt, Se[le]);
                }), jt;
              };
              if (i || (tt = function() {
                if (S(At, this))
                  throw Nt("Symbol is not a constructor");
                var Qt = !arguments.length || arguments[0] === void 0 ? void 0 : D(arguments[0]), ee = zt(Qt), Et = function(jt) {
                  this === et && f(Et, Wt, jt), y(this, Ft) && y(this[Ft], ee) && (this[Ft][ee] = !1), Be(this, ee, b(1, jt));
                };
                return d && we && Be(et, ee, { configurable: !0, set: Et }), Ie(ee, Qt);
              }, At = tt[C], bt(At, "toString", function() {
                return ot(this).tag;
              }), bt(tt, "withoutSetter", function(_) {
                return Ie(zt(_), _);
              }), nt.f = Y, J.f = Dt, ct.f = j, N.f = M.f = wt, K.f = it, gt.f = function(_) {
                return Ie(Q(_), _);
              }, d && (ie(At, "description", {
                configurable: !0,
                get: function() {
                  return ot(this).description;
                }
              }), h || bt(et, "propertyIsEnumerable", Y, { unsafe: !0 }))), s({ global: !0, wrap: !0, forced: !i, sham: !i }, {
                Symbol: tt
              }), G(L(pe), function(_) {
                ht(_);
              }), s({ target: z, stat: !0, forced: !i }, {
                // `Symbol.for` method
                // https://tc39.es/ecma262/#sec-symbol.for
                for: function(_) {
                  var Qt = D(_);
                  if (y(_t, Qt))
                    return _t[Qt];
                  var ee = tt(Qt);
                  return _t[Qt] = ee, ce[ee] = Qt, ee;
                },
                // `Symbol.keyFor` method
                // https://tc39.es/ecma262/#sec-symbol.keyfor
                keyFor: function(Qt) {
                  if (!P(Qt))
                    throw Nt(Qt + " is not a symbol");
                  if (y(ce, Qt))
                    return ce[Qt];
                },
                useSetter: function() {
                  we = !0;
                },
                useSimple: function() {
                  we = !1;
                }
              }), s({ target: "Object", stat: !0, forced: !i, sham: !d }, {
                // `Object.create` method
                // https://tc39.es/ecma262/#sec-object.create
                create: lt,
                // `Object.defineProperty` method
                // https://tc39.es/ecma262/#sec-object.defineproperty
                defineProperty: Dt,
                // `Object.defineProperties` method
                // https://tc39.es/ecma262/#sec-object.defineproperties
                defineProperties: ue,
                // `Object.getOwnPropertyDescriptor` method
                // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
                getOwnPropertyDescriptor: j
              }), s({ target: "Object", stat: !0, forced: !i }, {
                // `Object.getOwnPropertyNames` method
                // https://tc39.es/ecma262/#sec-object.getownpropertynames
                getOwnPropertyNames: wt,
                // `Object.getOwnPropertySymbols` method
                // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
                getOwnPropertySymbols: it
              }), s({ target: "Object", stat: !0, forced: p(function() {
                K.f(1);
              }) }, {
                getOwnPropertySymbols: function(Qt) {
                  return K.f(T(Qt));
                }
              }), Vt) {
                var Ht = !i || p(function() {
                  var _ = tt();
                  return Vt([_]) != "[null]" || Vt({ a: _ }) != "{}" || Vt(Object(_)) != "{}";
                });
                s({ target: "JSON", stat: !0, forced: Ht }, {
                  // eslint-disable-next-line no-unused-vars -- required for `.length`
                  stringify: function(Qt, ee, Et) {
                    var jt = yt(arguments), le = ee;
                    if (!(!x(ee) && Qt === void 0 || P(Qt)))
                      return m(ee) || (ee = function(Ne, Oe) {
                        if (e(le) && (Oe = f(le, this, Ne, Oe)), !P(Oe))
                          return Oe;
                      }), jt[1] = ee, o(Vt, null, jt);
                  }
                });
              }
              if (!At[k]) {
                var te = At.valueOf;
                bt(At, k, function(_) {
                  return f(te, this);
                });
              }
              st(tt, z), Lt[Ft] = !0;
            }
          ),
          /***/
          16543: (
            /***/
            function(l, c, t) {
              var s = t(68308);
              s("toPrimitive");
            }
          ),
          /***/
          33694: (
            /***/
            function(l, c, t) {
              var s = t(68308);
              s("toStringTag");
            }
          ),
          /***/
          21358: (
            /***/
            function(l, c, t) {
              var s = t(88697), r = t(32590), a = t(28794), o = s(a), f = r.aTypedArray, u = r.exportTypedArrayMethod;
              u("copyWithin", function(d, i) {
                return o(f(this), d, i, arguments.length > 2 ? arguments[2] : void 0);
              });
            }
          ),
          /***/
          66887: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(68671).every, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("every", function(u) {
                return r(a(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          77353: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(79611), a = t(55522), o = s.aTypedArray, f = s.exportTypedArrayMethod;
              f("fill", function(h) {
                var d = arguments.length;
                return r(
                  a,
                  o(this),
                  h,
                  d > 1 ? arguments[1] : void 0,
                  d > 2 ? arguments[2] : void 0
                );
              });
            }
          ),
          /***/
          6366: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(68671).filter, a = t(53687), o = s.aTypedArray, f = s.exportTypedArrayMethod;
              f("filter", function(h) {
                var d = r(o(this), h, arguments.length > 1 ? arguments[1] : void 0);
                return a(this, d);
              });
            }
          ),
          /***/
          65056: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(68671).findIndex, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("findIndex", function(u) {
                return r(a(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          52372: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(68671).find, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("find", function(u) {
                return r(a(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          31120: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Float32", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              });
            }
          ),
          /***/
          85569: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Float64", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              });
            }
          ),
          /***/
          53677: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(68671).forEach, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("forEach", function(u) {
                r(a(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          26875: (
            /***/
            function(l, c, t) {
              var s = t(63231), r = t(32590).exportTypedArrayStaticMethod, a = t(66503);
              r("from", a, s);
            }
          ),
          /***/
          77355: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(37190).includes, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("includes", function(u) {
                return r(a(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          28784: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(37190).indexOf, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("indexOf", function(u) {
                return r(a(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          100: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Int16", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              });
            }
          ),
          /***/
          26770: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Int32", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              });
            }
          ),
          /***/
          33324: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Int8", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              });
            }
          ),
          /***/
          98554: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(88697), a = t(55316).PROPER, o = t(32590), f = t(54883), u = t(52280), h = u("iterator"), d = s.Uint8Array, i = r(f.values), p = r(f.keys), y = r(f.entries), m = o.aTypedArray, e = o.exportTypedArrayMethod, x = d && d.prototype[h], S = !!x && x.name === "values", P = function() {
                return i(m(this));
              };
              e("entries", function() {
                return y(m(this));
              }), e("keys", function() {
                return p(m(this));
              }), e("values", P, a && !S), e(h, P, a && !S);
            }
          ),
          /***/
          72403: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(88697), a = s.aTypedArray, o = s.exportTypedArrayMethod, f = r([].join);
              o("join", function(h) {
                return f(a(this), h);
              });
            }
          ),
          /***/
          14312: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(63530), a = t(27837), o = s.aTypedArray, f = s.exportTypedArrayMethod;
              f("lastIndexOf", function(h) {
                var d = arguments.length;
                return r(a, o(this), d > 1 ? [h, arguments[1]] : [h]);
              });
            }
          ),
          /***/
          63444: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(68671).map, a = t(36107), o = s.aTypedArray, f = s.exportTypedArrayMethod;
              f("map", function(h) {
                return r(o(this), h, arguments.length > 1 ? arguments[1] : void 0, function(d, i) {
                  return new (a(d))(i);
                });
              });
            }
          ),
          /***/
          36798: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(86596).right, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("reduceRight", function(u) {
                var h = arguments.length;
                return r(a(this), u, h, h > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          40070: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(86596).left, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("reduce", function(u) {
                var h = arguments.length;
                return r(a(this), u, h, h > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          58036: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = s.aTypedArray, a = s.exportTypedArrayMethod, o = Math.floor;
              a("reverse", function() {
                for (var u = this, h = r(u).length, d = o(h / 2), i = 0, p; i < d; )
                  p = u[i], u[i++] = u[--h], u[h] = p;
                return u;
              });
            }
          ),
          /***/
          27578: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(32590), a = t(47046), o = t(65758), f = t(30744), u = t(79044), h = s.RangeError, d = r.aTypedArray, i = r.exportTypedArrayMethod, p = u(function() {
                new Int8Array(1).set({});
              });
              i("set", function(m) {
                d(this);
                var e = o(arguments.length > 1 ? arguments[1] : void 0, 1), x = this.length, S = f(m), P = a(S), O = 0;
                if (P + e > x)
                  throw h("Wrong length");
                for (; O < P; )
                  this[e + O] = S[O++];
              }, p);
            }
          ),
          /***/
          99641: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(36107), a = t(79044), o = t(15629), f = s.aTypedArray, u = s.exportTypedArrayMethod, h = a(function() {
                new Int8Array(1).slice();
              });
              u("slice", function(i, p) {
                for (var y = o(f(this), i, p), m = r(this), e = 0, x = y.length, S = new m(x); x > e; )
                  S[e] = y[e++];
                return S;
              }, h);
            }
          ),
          /***/
          12298: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(68671).some, a = s.aTypedArray, o = s.exportTypedArrayMethod;
              o("some", function(u) {
                return r(a(this), u, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          97306: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(88697), a = t(79044), o = t(97676), f = t(2013), u = t(32590), h = t(34631), d = t(80442), i = t(11197), p = t(76929), y = s.Array, m = u.aTypedArray, e = u.exportTypedArrayMethod, x = s.Uint16Array, S = x && r(x.prototype.sort), P = !!S && !(a(function() {
                S(new x(2), null);
              }) && a(function() {
                S(new x(2), {});
              })), O = !!S && !a(function() {
                if (i)
                  return i < 74;
                if (h)
                  return h < 67;
                if (d)
                  return !0;
                if (p)
                  return p < 602;
                var A = new x(516), E = y(516), D, b;
                for (D = 0; D < 516; D++)
                  b = D % 4, A[D] = 515 - D, E[D] = D - 2 * b + 3;
                for (S(A, function(R, L) {
                  return (R / 4 | 0) - (L / 4 | 0);
                }), D = 0; D < 516; D++)
                  if (A[D] !== E[D])
                    return !0;
              }), T = function(A) {
                return function(E, D) {
                  return A !== void 0 ? +A(E, D) || 0 : D !== D ? -1 : E !== E ? 1 : E === 0 && D === 0 ? 1 / E > 0 && 1 / D < 0 ? 1 : -1 : E > D;
                };
              };
              e("sort", function(E) {
                return E !== void 0 && o(E), O ? S(this, E) : f(m(this), T(E));
              }, !O || P);
            }
          ),
          /***/
          25480: (
            /***/
            function(l, c, t) {
              var s = t(32590), r = t(35108), a = t(32565), o = t(36107), f = s.aTypedArray, u = s.exportTypedArrayMethod;
              u("subarray", function(d, i) {
                var p = f(this), y = p.length, m = a(d, y), e = o(p);
                return new e(
                  p.buffer,
                  p.byteOffset + m * p.BYTES_PER_ELEMENT,
                  r((i === void 0 ? y : a(i, y)) - m)
                );
              });
            }
          ),
          /***/
          14314: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(63530), a = t(32590), o = t(79044), f = t(15629), u = s.Int8Array, h = a.aTypedArray, d = a.exportTypedArrayMethod, i = [].toLocaleString, p = !!u && o(function() {
                i.call(new u(1));
              }), y = o(function() {
                return [1, 2].toLocaleString() != new u([1, 2]).toLocaleString();
              }) || !o(function() {
                u.prototype.toLocaleString.call([1, 2]);
              });
              d("toLocaleString", function() {
                return r(
                  i,
                  p ? f(h(this)) : h(this),
                  f(arguments)
                );
              }, y);
            }
          ),
          /***/
          10572: (
            /***/
            function(l, c, t) {
              var s = t(32590).exportTypedArrayMethod, r = t(79044), a = t(98363), o = t(88697), f = a.Uint8Array, u = f && f.prototype || {}, h = [].toString, d = o([].join);
              r(function() {
                h.call({});
              }) && (h = function() {
                return d(this);
              });
              var i = u.toString != h;
              s("toString", h, i);
            }
          ),
          /***/
          51360: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Uint16", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              });
            }
          ),
          /***/
          35779: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Uint32", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              });
            }
          ),
          /***/
          79627: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Uint8", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              });
            }
          ),
          /***/
          71228: (
            /***/
            function(l, c, t) {
              var s = t(26764);
              s("Uint8", function(r) {
                return function(o, f, u) {
                  return r(this, o, f, u);
                };
              }, !0);
            }
          ),
          /***/
          85506: (
            /***/
            function(l, c, t) {
              t(55739);
            }
          ),
          /***/
          4116: (
            /***/
            function(l, c, t) {
              t(62688);
            }
          ),
          /***/
          38634: (
            /***/
            function(l, c, t) {
              t(12382);
            }
          ),
          /***/
          67298: (
            /***/
            function(l, c, t) {
              t(487);
            }
          ),
          /***/
          8108: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(29269), a = t(74443);
              s({ target: "Promise", stat: !0 }, {
                try: function(o) {
                  var f = r.f(this), u = a(o);
                  return (u.error ? f.reject : f.resolve)(u.value), f.promise;
                }
              });
            }
          ),
          /***/
          47639: (
            /***/
            function(l, c, t) {
              t(55797);
            }
          ),
          /***/
          6208: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(12848), a = t(79189), o = t(20379), f = t(45899), u = function(d) {
                if (d && d.forEach !== o)
                  try {
                    f(d, "forEach", o);
                  } catch (i) {
                    d.forEach = o;
                  }
              };
              for (var h in r)
                r[h] && u(s[h] && s[h].prototype);
              u(a);
            }
          ),
          /***/
          68995: (
            /***/
            function(l, c, t) {
              var s = t(98363), r = t(12848), a = t(79189), o = t(54883), f = t(45899), u = t(52280), h = u("iterator"), d = u("toStringTag"), i = o.values, p = function(m, e) {
                if (m) {
                  if (m[h] !== i)
                    try {
                      f(m, h, i);
                    } catch (S) {
                      m[h] = i;
                    }
                  if (m[d] || f(m, d, e), r[e]) {
                    for (var x in o)
                      if (m[x] !== o[x])
                        try {
                          f(m, x, o[x]);
                        } catch (S) {
                          m[x] = o[x];
                        }
                  }
                }
              };
              for (var y in r)
                p(s[y] && s[y].prototype, y);
              p(a, "DOMTokenList");
            }
          ),
          /***/
          87191: (
            /***/
            function(l, c, t) {
              var s = t(19882), r = t(79611);
              s({ target: "URL", proto: !0, enumerable: !0 }, {
                toJSON: function() {
                  return r(URL.prototype.toString, this);
                }
              });
            }
          ),
          /***/
          80623: (
            /***/
            function(l, c, t) {
              var s = t(55047);
              t(68995), l.exports = s;
            }
          ),
          /***/
          27074: (
            /***/
            function(l, c, t) {
              var s = t(806), r = t(77092), a = t(7402), o = t(55278), f = t(80251), u = t(28659), h = Date.prototype.getTime;
              function d(m, e, x) {
                var S = x || {};
                return (S.strict ? a(m, e) : m === e) ? !0 : !m || !e || typeof m != "object" && typeof e != "object" ? S.strict ? a(m, e) : m == e : y(m, e, S);
              }
              function i(m) {
                return m == null;
              }
              function p(m) {
                return !(!m || typeof m != "object" || typeof m.length != "number" || typeof m.copy != "function" || typeof m.slice != "function" || m.length > 0 && typeof m[0] != "number");
              }
              function y(m, e, x) {
                var S, P;
                if (typeof m != typeof e || i(m) || i(e) || m.prototype !== e.prototype || r(m) !== r(e))
                  return !1;
                var O = o(m), T = o(e);
                if (O !== T)
                  return !1;
                if (O || T)
                  return m.source === e.source && f(m) === f(e);
                if (u(m) && u(e))
                  return h.call(m) === h.call(e);
                var A = p(m), E = p(e);
                if (A !== E)
                  return !1;
                if (A || E) {
                  if (m.length !== e.length)
                    return !1;
                  for (S = 0; S < m.length; S++)
                    if (m[S] !== e[S])
                      return !1;
                  return !0;
                }
                if (typeof m != typeof e)
                  return !1;
                try {
                  var D = s(m), b = s(e);
                } catch (R) {
                  return !1;
                }
                if (D.length !== b.length)
                  return !1;
                for (D.sort(), b.sort(), S = D.length - 1; S >= 0; S--)
                  if (D[S] != b[S])
                    return !1;
                for (S = D.length - 1; S >= 0; S--)
                  if (P = D[S], !d(m[P], e[P], x))
                    return !1;
                return !0;
              }
              l.exports = d;
            }
          ),
          /***/
          72656: (
            /***/
            function(l, c, t) {
              var s = t(28198)(), r = t(31801), a = s && r("%Object.defineProperty%", !0);
              if (a)
                try {
                  a({}, "a", { value: 1 });
                } catch (h) {
                  a = !1;
                }
              var o = r("%SyntaxError%"), f = r("%TypeError%"), u = t(93828);
              l.exports = function(d, i, p) {
                if (!d || typeof d != "object" && typeof d != "function")
                  throw new f("`obj` must be an object or a function`");
                if (typeof i != "string" && typeof i != "symbol")
                  throw new f("`property` must be a string or a symbol`");
                if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
                  throw new f("`nonEnumerable`, if provided, must be a boolean or null");
                if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
                  throw new f("`nonWritable`, if provided, must be a boolean or null");
                if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
                  throw new f("`nonConfigurable`, if provided, must be a boolean or null");
                if (arguments.length > 6 && typeof arguments[6] != "boolean")
                  throw new f("`loose`, if provided, must be a boolean");
                var y = arguments.length > 3 ? arguments[3] : null, m = arguments.length > 4 ? arguments[4] : null, e = arguments.length > 5 ? arguments[5] : null, x = arguments.length > 6 ? arguments[6] : !1, S = !!u && u(d, i);
                if (a)
                  a(d, i, {
                    configurable: e === null && S ? S.configurable : !e,
                    enumerable: y === null && S ? S.enumerable : !y,
                    value: p,
                    writable: m === null && S ? S.writable : !m
                  });
                else if (x || !y && !m && !e)
                  d[i] = p;
                else
                  throw new o("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
              };
            }
          ),
          /***/
          19170: (
            /***/
            function(l, c, t) {
              var s = t(806), r = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", a = Object.prototype.toString, o = Array.prototype.concat, f = t(72656), u = function(p) {
                return typeof p == "function" && a.call(p) === "[object Function]";
              }, h = t(28198)(), d = function(p, y, m, e) {
                if (y in p) {
                  if (e === !0) {
                    if (p[y] === m)
                      return;
                  } else if (!u(e) || !e())
                    return;
                }
                h ? f(p, y, m, !0) : f(p, y, m);
              }, i = function(p, y) {
                var m = arguments.length > 2 ? arguments[2] : {}, e = s(y);
                r && (e = o.call(e, Object.getOwnPropertySymbols(y)));
                for (var x = 0; x < e.length; x += 1)
                  d(p, e[x], y[e[x]], m[e[x]]);
              };
              i.supportsDescriptors = !!h, l.exports = i;
            }
          ),
          /***/
          5939: (
            /***/
            function(l) {
              var c = typeof Reflect == "object" ? Reflect : null, t = c && typeof c.apply == "function" ? c.apply : function(E, D, b) {
                return Function.prototype.apply.call(E, D, b);
              }, s;
              c && typeof c.ownKeys == "function" ? s = c.ownKeys : Object.getOwnPropertySymbols ? s = function(E) {
                return Object.getOwnPropertyNames(E).concat(Object.getOwnPropertySymbols(E));
              } : s = function(E) {
                return Object.getOwnPropertyNames(E);
              };
              function r(A) {
                console && console.warn && console.warn(A);
              }
              var a = Number.isNaN || function(E) {
                return E !== E;
              };
              function o() {
                o.init.call(this);
              }
              l.exports = o, l.exports.once = P, o.EventEmitter = o, o.prototype._events = void 0, o.prototype._eventsCount = 0, o.prototype._maxListeners = void 0;
              var f = 10;
              function u(A) {
                if (typeof A != "function")
                  throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof A);
              }
              Object.defineProperty(o, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                  return f;
                },
                set: function(A) {
                  if (typeof A != "number" || A < 0 || a(A))
                    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + A + ".");
                  f = A;
                }
              }), o.init = function() {
                (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
              }, o.prototype.setMaxListeners = function(E) {
                if (typeof E != "number" || E < 0 || a(E))
                  throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + E + ".");
                return this._maxListeners = E, this;
              };
              function h(A) {
                return A._maxListeners === void 0 ? o.defaultMaxListeners : A._maxListeners;
              }
              o.prototype.getMaxListeners = function() {
                return h(this);
              }, o.prototype.emit = function(E) {
                for (var D = [], b = 1; b < arguments.length; b++)
                  D.push(arguments[b]);
                var R = E === "error", L = this._events;
                if (L !== void 0)
                  R = R && L.error === void 0;
                else if (!R)
                  return !1;
                if (R) {
                  var N;
                  if (D.length > 0 && (N = D[0]), N instanceof Error)
                    throw N;
                  var M = new Error("Unhandled error." + (N ? " (" + N.message + ")" : ""));
                  throw M.context = N, M;
                }
                var K = L[E];
                if (K === void 0)
                  return !1;
                if (typeof K == "function")
                  t(K, this, D);
                else
                  for (var ct = K.length, J = e(K, ct), b = 0; b < ct; ++b)
                    t(J[b], this, D);
                return !0;
              };
              function d(A, E, D, b) {
                var R, L, N;
                if (u(D), L = A._events, L === void 0 ? (L = A._events = /* @__PURE__ */ Object.create(null), A._eventsCount = 0) : (L.newListener !== void 0 && (A.emit(
                  "newListener",
                  E,
                  D.listener ? D.listener : D
                ), L = A._events), N = L[E]), N === void 0)
                  N = L[E] = D, ++A._eventsCount;
                else if (typeof N == "function" ? N = L[E] = b ? [D, N] : [N, D] : b ? N.unshift(D) : N.push(D), R = h(A), R > 0 && N.length > R && !N.warned) {
                  N.warned = !0;
                  var M = new Error("Possible EventEmitter memory leak detected. " + N.length + " " + String(E) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                  M.name = "MaxListenersExceededWarning", M.emitter = A, M.type = E, M.count = N.length, r(M);
                }
                return A;
              }
              o.prototype.addListener = function(E, D) {
                return d(this, E, D, !1);
              }, o.prototype.on = o.prototype.addListener, o.prototype.prependListener = function(E, D) {
                return d(this, E, D, !0);
              };
              function i() {
                if (!this.fired)
                  return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
              }
              function p(A, E, D) {
                var b = { fired: !1, wrapFn: void 0, target: A, type: E, listener: D }, R = i.bind(b);
                return R.listener = D, b.wrapFn = R, R;
              }
              o.prototype.once = function(E, D) {
                return u(D), this.on(E, p(this, E, D)), this;
              }, o.prototype.prependOnceListener = function(E, D) {
                return u(D), this.prependListener(E, p(this, E, D)), this;
              }, o.prototype.removeListener = function(E, D) {
                var b, R, L, N, M;
                if (u(D), R = this._events, R === void 0)
                  return this;
                if (b = R[E], b === void 0)
                  return this;
                if (b === D || b.listener === D)
                  --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete R[E], R.removeListener && this.emit("removeListener", E, b.listener || D));
                else if (typeof b != "function") {
                  for (L = -1, N = b.length - 1; N >= 0; N--)
                    if (b[N] === D || b[N].listener === D) {
                      M = b[N].listener, L = N;
                      break;
                    }
                  if (L < 0)
                    return this;
                  L === 0 ? b.shift() : x(b, L), b.length === 1 && (R[E] = b[0]), R.removeListener !== void 0 && this.emit("removeListener", E, M || D);
                }
                return this;
              }, o.prototype.off = o.prototype.removeListener, o.prototype.removeAllListeners = function(E) {
                var D, b, R;
                if (b = this._events, b === void 0)
                  return this;
                if (b.removeListener === void 0)
                  return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : b[E] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete b[E]), this;
                if (arguments.length === 0) {
                  var L = Object.keys(b), N;
                  for (R = 0; R < L.length; ++R)
                    N = L[R], N !== "removeListener" && this.removeAllListeners(N);
                  return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
                }
                if (D = b[E], typeof D == "function")
                  this.removeListener(E, D);
                else if (D !== void 0)
                  for (R = D.length - 1; R >= 0; R--)
                    this.removeListener(E, D[R]);
                return this;
              };
              function y(A, E, D) {
                var b = A._events;
                if (b === void 0)
                  return [];
                var R = b[E];
                return R === void 0 ? [] : typeof R == "function" ? D ? [R.listener || R] : [R] : D ? S(R) : e(R, R.length);
              }
              o.prototype.listeners = function(E) {
                return y(this, E, !0);
              }, o.prototype.rawListeners = function(E) {
                return y(this, E, !1);
              }, o.listenerCount = function(A, E) {
                return typeof A.listenerCount == "function" ? A.listenerCount(E) : m.call(A, E);
              }, o.prototype.listenerCount = m;
              function m(A) {
                var E = this._events;
                if (E !== void 0) {
                  var D = E[A];
                  if (typeof D == "function")
                    return 1;
                  if (D !== void 0)
                    return D.length;
                }
                return 0;
              }
              o.prototype.eventNames = function() {
                return this._eventsCount > 0 ? s(this._events) : [];
              };
              function e(A, E) {
                for (var D = new Array(E), b = 0; b < E; ++b)
                  D[b] = A[b];
                return D;
              }
              function x(A, E) {
                for (; E + 1 < A.length; E++)
                  A[E] = A[E + 1];
                A.pop();
              }
              function S(A) {
                for (var E = new Array(A.length), D = 0; D < E.length; ++D)
                  E[D] = A[D].listener || A[D];
                return E;
              }
              function P(A, E) {
                return new Promise(function(D, b) {
                  function R(N) {
                    A.removeListener(E, L), b(N);
                  }
                  function L() {
                    typeof A.removeListener == "function" && A.removeListener("error", R), D([].slice.call(arguments));
                  }
                  T(A, E, L, { once: !0 }), E !== "error" && O(A, R, { once: !0 });
                });
              }
              function O(A, E, D) {
                typeof A.on == "function" && T(A, "error", E, D);
              }
              function T(A, E, D, b) {
                if (typeof A.on == "function")
                  b.once ? A.once(E, D) : A.on(E, D);
                else if (typeof A.addEventListener == "function")
                  A.addEventListener(E, function R(L) {
                    b.once && A.removeEventListener(E, R), D(L);
                  });
                else
                  throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof A);
              }
            }
          ),
          /***/
          88706: (
            /***/
            function(l, c, t) {
              l.exports = function() {
                if (typeof globalThis == "object")
                  return globalThis;
                var s;
                try {
                  s = this || new Function("return this")();
                } catch (r) {
                  if (typeof window == "object")
                    return window;
                  if (typeof self == "object")
                    return self;
                  if (typeof t.g != "undefined")
                    return t.g;
                }
                return s;
              }();
            }
          ),
          /***/
          94843: (
            /***/
            function(l, c, t) {
              var s = t(5443), r = Object.prototype.toString, a = Object.prototype.hasOwnProperty, o = function(i, p, y) {
                for (var m = 0, e = i.length; m < e; m++)
                  a.call(i, m) && (y == null ? p(i[m], m, i) : p.call(y, i[m], m, i));
              }, f = function(i, p, y) {
                for (var m = 0, e = i.length; m < e; m++)
                  y == null ? p(i.charAt(m), m, i) : p.call(y, i.charAt(m), m, i);
              }, u = function(i, p, y) {
                for (var m in i)
                  a.call(i, m) && (y == null ? p(i[m], m, i) : p.call(y, i[m], m, i));
              }, h = function(i, p, y) {
                if (!s(p))
                  throw new TypeError("iterator must be a function");
                var m;
                arguments.length >= 3 && (m = y), r.call(i) === "[object Array]" ? o(i, p, m) : typeof i == "string" ? f(i, p, m) : u(i, p, m);
              };
              l.exports = h;
            }
          ),
          /***/
          19930: (
            /***/
            function(l) {
              var c = "Function.prototype.bind called on incompatible ", t = Object.prototype.toString, s = Math.max, r = "[object Function]", a = function(h, d) {
                for (var i = [], p = 0; p < h.length; p += 1)
                  i[p] = h[p];
                for (var y = 0; y < d.length; y += 1)
                  i[y + h.length] = d[y];
                return i;
              }, o = function(h, d) {
                for (var i = [], p = d || 0, y = 0; p < h.length; p += 1, y += 1)
                  i[y] = h[p];
                return i;
              }, f = function(u, h) {
                for (var d = "", i = 0; i < u.length; i += 1)
                  d += u[i], i + 1 < u.length && (d += h);
                return d;
              };
              l.exports = function(h) {
                var d = this;
                if (typeof d != "function" || t.apply(d) !== r)
                  throw new TypeError(c + d);
                for (var i = o(arguments, 1), p, y = function() {
                  if (this instanceof p) {
                    var P = d.apply(
                      this,
                      a(i, arguments)
                    );
                    return Object(P) === P ? P : this;
                  }
                  return d.apply(
                    h,
                    a(i, arguments)
                  );
                }, m = s(0, d.length - i.length), e = [], x = 0; x < m; x++)
                  e[x] = "$" + x;
                if (p = Function("binder", "return function (" + f(e, ",") + "){ return binder.apply(this,arguments); }")(y), d.prototype) {
                  var S = function() {
                  };
                  S.prototype = d.prototype, p.prototype = new S(), S.prototype = null;
                }
                return p;
              };
            }
          ),
          /***/
          21930: (
            /***/
            function(l, c, t) {
              var s = t(19930);
              l.exports = Function.prototype.bind || s;
            }
          ),
          /***/
          87105: (
            /***/
            function(l) {
              var c = function() {
                return typeof function() {
                }.name == "string";
              }, t = Object.getOwnPropertyDescriptor;
              if (t)
                try {
                  t([], "length");
                } catch (r) {
                  t = null;
                }
              c.functionsHaveConfigurableNames = function() {
                if (!c() || !t)
                  return !1;
                var a = t(function() {
                }, "name");
                return !!a && !!a.configurable;
              };
              var s = Function.prototype.bind;
              c.boundFunctionsHaveNames = function() {
                return c() && typeof s == "function" && function() {
                }.bind().name !== "";
              }, l.exports = c;
            }
          ),
          /***/
          31801: (
            /***/
            function(l, c, t) {
              var s, r = SyntaxError, a = Function, o = TypeError, f = function(J) {
                try {
                  return a('"use strict"; return (' + J + ").constructor;")();
                } catch (nt) {
                }
              }, u = Object.getOwnPropertyDescriptor;
              if (u)
                try {
                  u({}, "");
                } catch (J) {
                  u = null;
                }
              var h = function() {
                throw new o();
              }, d = u ? function() {
                try {
                  return arguments.callee, h;
                } catch (J) {
                  try {
                    return u(arguments, "callee").get;
                  } catch (nt) {
                    return h;
                  }
                }
              }() : h, i = t(99905)(), p = t(11856)(), y = Object.getPrototypeOf || (p ? function(J) {
                return J.__proto__;
              } : null), m = {}, e = typeof Uint8Array == "undefined" || !y ? s : y(Uint8Array), x = {
                "%AggregateError%": typeof AggregateError == "undefined" ? s : AggregateError,
                "%Array%": Array,
                "%ArrayBuffer%": typeof ArrayBuffer == "undefined" ? s : ArrayBuffer,
                "%ArrayIteratorPrototype%": i && y ? y([][Symbol.iterator]()) : s,
                "%AsyncFromSyncIteratorPrototype%": s,
                "%AsyncFunction%": m,
                "%AsyncGenerator%": m,
                "%AsyncGeneratorFunction%": m,
                "%AsyncIteratorPrototype%": m,
                "%Atomics%": typeof Atomics == "undefined" ? s : Atomics,
                "%BigInt%": typeof BigInt == "undefined" ? s : BigInt,
                "%BigInt64Array%": typeof BigInt64Array == "undefined" ? s : BigInt64Array,
                "%BigUint64Array%": typeof BigUint64Array == "undefined" ? s : BigUint64Array,
                "%Boolean%": Boolean,
                "%DataView%": typeof DataView == "undefined" ? s : DataView,
                "%Date%": Date,
                "%decodeURI%": decodeURI,
                "%decodeURIComponent%": decodeURIComponent,
                "%encodeURI%": encodeURI,
                "%encodeURIComponent%": encodeURIComponent,
                "%Error%": Error,
                "%eval%": eval,
                // eslint-disable-line no-eval
                "%EvalError%": EvalError,
                "%Float32Array%": typeof Float32Array == "undefined" ? s : Float32Array,
                "%Float64Array%": typeof Float64Array == "undefined" ? s : Float64Array,
                "%FinalizationRegistry%": typeof FinalizationRegistry == "undefined" ? s : FinalizationRegistry,
                "%Function%": a,
                "%GeneratorFunction%": m,
                "%Int8Array%": typeof Int8Array == "undefined" ? s : Int8Array,
                "%Int16Array%": typeof Int16Array == "undefined" ? s : Int16Array,
                "%Int32Array%": typeof Int32Array == "undefined" ? s : Int32Array,
                "%isFinite%": isFinite,
                "%isNaN%": isNaN,
                "%IteratorPrototype%": i && y ? y(y([][Symbol.iterator]())) : s,
                "%JSON%": typeof JSON == "object" ? JSON : s,
                "%Map%": typeof Map == "undefined" ? s : Map,
                "%MapIteratorPrototype%": typeof Map == "undefined" || !i || !y ? s : y((/* @__PURE__ */ new Map())[Symbol.iterator]()),
                "%Math%": Math,
                "%Number%": Number,
                "%Object%": Object,
                "%parseFloat%": parseFloat,
                "%parseInt%": parseInt,
                "%Promise%": typeof Promise == "undefined" ? s : Promise,
                "%Proxy%": typeof Proxy == "undefined" ? s : Proxy,
                "%RangeError%": RangeError,
                "%ReferenceError%": ReferenceError,
                "%Reflect%": typeof Reflect == "undefined" ? s : Reflect,
                "%RegExp%": RegExp,
                "%Set%": typeof Set == "undefined" ? s : Set,
                "%SetIteratorPrototype%": typeof Set == "undefined" || !i || !y ? s : y((/* @__PURE__ */ new Set())[Symbol.iterator]()),
                "%SharedArrayBuffer%": typeof SharedArrayBuffer == "undefined" ? s : SharedArrayBuffer,
                "%String%": String,
                "%StringIteratorPrototype%": i && y ? y(""[Symbol.iterator]()) : s,
                "%Symbol%": i ? Symbol : s,
                "%SyntaxError%": r,
                "%ThrowTypeError%": d,
                "%TypedArray%": e,
                "%TypeError%": o,
                "%Uint8Array%": typeof Uint8Array == "undefined" ? s : Uint8Array,
                "%Uint8ClampedArray%": typeof Uint8ClampedArray == "undefined" ? s : Uint8ClampedArray,
                "%Uint16Array%": typeof Uint16Array == "undefined" ? s : Uint16Array,
                "%Uint32Array%": typeof Uint32Array == "undefined" ? s : Uint32Array,
                "%URIError%": URIError,
                "%WeakMap%": typeof WeakMap == "undefined" ? s : WeakMap,
                "%WeakRef%": typeof WeakRef == "undefined" ? s : WeakRef,
                "%WeakSet%": typeof WeakSet == "undefined" ? s : WeakSet
              };
              if (y)
                try {
                  null.error;
                } catch (J) {
                  var S = y(y(J));
                  x["%Error.prototype%"] = S;
                }
              var P = function J(nt) {
                var yt;
                if (nt === "%AsyncFunction%")
                  yt = f("async function () {}");
                else if (nt === "%GeneratorFunction%")
                  yt = f("function* () {}");
                else if (nt === "%AsyncGeneratorFunction%")
                  yt = f("async function* () {}");
                else if (nt === "%AsyncGenerator%") {
                  var bt = J("%AsyncGeneratorFunction%");
                  bt && (yt = bt.prototype);
                } else if (nt === "%AsyncIteratorPrototype%") {
                  var Tt = J("%AsyncGenerator%");
                  Tt && y && (yt = y(Tt.prototype));
                }
                return x[nt] = yt, yt;
              }, O = {
                "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
                "%ArrayPrototype%": ["Array", "prototype"],
                "%ArrayProto_entries%": ["Array", "prototype", "entries"],
                "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
                "%ArrayProto_keys%": ["Array", "prototype", "keys"],
                "%ArrayProto_values%": ["Array", "prototype", "values"],
                "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
                "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
                "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
                "%BooleanPrototype%": ["Boolean", "prototype"],
                "%DataViewPrototype%": ["DataView", "prototype"],
                "%DatePrototype%": ["Date", "prototype"],
                "%ErrorPrototype%": ["Error", "prototype"],
                "%EvalErrorPrototype%": ["EvalError", "prototype"],
                "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
                "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
                "%FunctionPrototype%": ["Function", "prototype"],
                "%Generator%": ["GeneratorFunction", "prototype"],
                "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
                "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
                "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
                "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
                "%JSONParse%": ["JSON", "parse"],
                "%JSONStringify%": ["JSON", "stringify"],
                "%MapPrototype%": ["Map", "prototype"],
                "%NumberPrototype%": ["Number", "prototype"],
                "%ObjectPrototype%": ["Object", "prototype"],
                "%ObjProto_toString%": ["Object", "prototype", "toString"],
                "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
                "%PromisePrototype%": ["Promise", "prototype"],
                "%PromiseProto_then%": ["Promise", "prototype", "then"],
                "%Promise_all%": ["Promise", "all"],
                "%Promise_reject%": ["Promise", "reject"],
                "%Promise_resolve%": ["Promise", "resolve"],
                "%RangeErrorPrototype%": ["RangeError", "prototype"],
                "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
                "%RegExpPrototype%": ["RegExp", "prototype"],
                "%SetPrototype%": ["Set", "prototype"],
                "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
                "%StringPrototype%": ["String", "prototype"],
                "%SymbolPrototype%": ["Symbol", "prototype"],
                "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
                "%TypedArrayPrototype%": ["TypedArray", "prototype"],
                "%TypeErrorPrototype%": ["TypeError", "prototype"],
                "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
                "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
                "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
                "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
                "%URIErrorPrototype%": ["URIError", "prototype"],
                "%WeakMapPrototype%": ["WeakMap", "prototype"],
                "%WeakSetPrototype%": ["WeakSet", "prototype"]
              }, T = t(21930), A = t(89429), E = T.call(Function.call, Array.prototype.concat), D = T.call(Function.apply, Array.prototype.splice), b = T.call(Function.call, String.prototype.replace), R = T.call(Function.call, String.prototype.slice), L = T.call(Function.call, RegExp.prototype.exec), N = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, M = /\\(\\)?/g, K = function(nt) {
                var yt = R(nt, 0, 1), bt = R(nt, -1);
                if (yt === "%" && bt !== "%")
                  throw new r("invalid intrinsic syntax, expected closing `%`");
                if (bt === "%" && yt !== "%")
                  throw new r("invalid intrinsic syntax, expected opening `%`");
                var Tt = [];
                return b(nt, N, function(It, Lt, zt, Q) {
                  Tt[Tt.length] = zt ? b(Q, M, "$1") : Lt || It;
                }), Tt;
              }, ct = function(nt, yt) {
                var bt = nt, Tt;
                if (A(O, bt) && (Tt = O[bt], bt = "%" + Tt[0] + "%"), A(x, bt)) {
                  var It = x[bt];
                  if (It === m && (It = P(bt)), typeof It == "undefined" && !yt)
                    throw new o("intrinsic " + nt + " exists, but is not available. Please file an issue!");
                  return {
                    alias: Tt,
                    name: bt,
                    value: It
                  };
                }
                throw new r("intrinsic " + nt + " does not exist!");
              };
              l.exports = function(nt, yt) {
                if (typeof nt != "string" || nt.length === 0)
                  throw new o("intrinsic name must be a non-empty string");
                if (arguments.length > 1 && typeof yt != "boolean")
                  throw new o('"allowMissing" argument must be a boolean');
                if (L(/^%?[^%]*%?$/, nt) === null)
                  throw new r("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
                var bt = K(nt), Tt = bt.length > 0 ? bt[0] : "", It = ct("%" + Tt + "%", yt), Lt = It.name, zt = It.value, Q = !1, gt = It.alias;
                gt && (Tt = gt[0], D(bt, E([0, 1], gt)));
                for (var ht = 1, st = !0; ht < bt.length; ht += 1) {
                  var xt = bt[ht], G = R(xt, 0, 1), Ft = R(xt, -1);
                  if ((G === '"' || G === "'" || G === "`" || Ft === '"' || Ft === "'" || Ft === "`") && G !== Ft)
                    throw new r("property names with quotes must have matching quotes");
                  if ((xt === "constructor" || !st) && (Q = !0), Tt += "." + xt, Lt = "%" + Tt + "%", A(x, Lt))
                    zt = x[Lt];
                  else if (zt != null) {
                    if (!(xt in zt)) {
                      if (!yt)
                        throw new o("base intrinsic for " + nt + " exists, but the property is not available.");
                      return;
                    }
                    if (u && ht + 1 >= bt.length) {
                      var z = u(zt, xt);
                      st = !!z, st && "get" in z && !("originalValue" in z.get) ? zt = z.get : zt = zt[xt];
                    } else
                      st = A(zt, xt), zt = zt[xt];
                    st && !Q && (x[Lt] = zt);
                  }
                }
                return zt;
              };
            }
          ),
          /***/
          93828: (
            /***/
            function(l, c, t) {
              var s = t(31801), r = s("%Object.getOwnPropertyDescriptor%", !0);
              if (r)
                try {
                  r([], "length");
                } catch (a) {
                  r = null;
                }
              l.exports = r;
            }
          ),
          /***/
          28198: (
            /***/
            function(l, c, t) {
              var s = t(31801), r = s("%Object.defineProperty%", !0), a = function() {
                if (r)
                  try {
                    return r({}, "a", { value: 1 }), !0;
                  } catch (f) {
                    return !1;
                  }
                return !1;
              };
              a.hasArrayLengthDefineBug = function() {
                if (!a())
                  return null;
                try {
                  return r([], "length", { value: 1 }).length !== 1;
                } catch (f) {
                  return !0;
                }
              }, l.exports = a;
            }
          ),
          /***/
          11856: (
            /***/
            function(l) {
              var c = {
                foo: {}
              }, t = Object;
              l.exports = function() {
                return { __proto__: c }.foo === c.foo && !({ __proto__: null } instanceof t);
              };
            }
          ),
          /***/
          99905: (
            /***/
            function(l, c, t) {
              var s = typeof Symbol != "undefined" && Symbol, r = t(65682);
              l.exports = function() {
                return typeof s != "function" || typeof Symbol != "function" || typeof s("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : r();
              };
            }
          ),
          /***/
          65682: (
            /***/
            function(l) {
              l.exports = function() {
                if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
                  return !1;
                if (typeof Symbol.iterator == "symbol")
                  return !0;
                var t = {}, s = Symbol("test"), r = Object(s);
                if (typeof s == "string" || Object.prototype.toString.call(s) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]")
                  return !1;
                var a = 42;
                t[s] = a;
                for (s in t)
                  return !1;
                if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0)
                  return !1;
                var o = Object.getOwnPropertySymbols(t);
                if (o.length !== 1 || o[0] !== s || !Object.prototype.propertyIsEnumerable.call(t, s))
                  return !1;
                if (typeof Object.getOwnPropertyDescriptor == "function") {
                  var f = Object.getOwnPropertyDescriptor(t, s);
                  if (f.value !== a || f.enumerable !== !0)
                    return !1;
                }
                return !0;
              };
            }
          ),
          /***/
          44111: (
            /***/
            function(l, c, t) {
              var s = t(65682);
              l.exports = function() {
                return s() && !!Symbol.toStringTag;
              };
            }
          ),
          /***/
          89429: (
            /***/
            function(l, c, t) {
              var s = Function.prototype.call, r = Object.prototype.hasOwnProperty, a = t(21930);
              l.exports = a.call(s, r);
            }
          ),
          /***/
          72959: (
            /***/
            function(l, c, t) {
              var s = t(85543).Buffer;
              c._dbcs = i;
              for (var r = -1, a = -2, o = -10, f = -1e3, u = new Array(256), h = -1, d = 0; d < 256; d++)
                u[d] = r;
              function i(e, x) {
                if (this.encodingName = e.encodingName, !e)
                  throw new Error("DBCS codec is called without the data.");
                if (!e.table)
                  throw new Error("Encoding '" + this.encodingName + "' has no data.");
                var S = e.table();
                this.decodeTables = [], this.decodeTables[0] = u.slice(0), this.decodeTableSeq = [];
                for (var P = 0; P < S.length; P++)
                  this._addDecodeChunk(S[P]);
                if (typeof e.gb18030 == "function") {
                  this.gb18030 = e.gb18030();
                  var O = this.decodeTables.length;
                  this.decodeTables.push(u.slice(0));
                  var T = this.decodeTables.length;
                  this.decodeTables.push(u.slice(0));
                  for (var A = this.decodeTables[0], P = 129; P <= 254; P++)
                    for (var E = this.decodeTables[f - A[P]], D = 48; D <= 57; D++) {
                      if (E[D] === r)
                        E[D] = f - O;
                      else if (E[D] > f)
                        throw new Error("gb18030 decode tables conflict at byte 2");
                      for (var b = this.decodeTables[f - E[D]], R = 129; R <= 254; R++) {
                        if (b[R] === r)
                          b[R] = f - T;
                        else {
                          if (b[R] === f - T)
                            continue;
                          if (b[R] > f)
                            throw new Error("gb18030 decode tables conflict at byte 3");
                        }
                        for (var L = this.decodeTables[f - b[R]], N = 48; N <= 57; N++)
                          L[N] === r && (L[N] = a);
                      }
                    }
                }
                this.defaultCharUnicode = x.defaultCharUnicode, this.encodeTable = [], this.encodeTableSeq = [];
                var M = {};
                if (e.encodeSkipVals)
                  for (var P = 0; P < e.encodeSkipVals.length; P++) {
                    var K = e.encodeSkipVals[P];
                    if (typeof K == "number")
                      M[K] = !0;
                    else
                      for (var D = K.from; D <= K.to; D++)
                        M[D] = !0;
                  }
                if (this._fillEncodeTable(0, 0, M), e.encodeAdd)
                  for (var ct in e.encodeAdd)
                    Object.prototype.hasOwnProperty.call(e.encodeAdd, ct) && this._setEncodeChar(ct.charCodeAt(0), e.encodeAdd[ct]);
                this.defCharSB = this.encodeTable[0][x.defaultCharSingleByte.charCodeAt(0)], this.defCharSB === r && (this.defCharSB = this.encodeTable[0]["?"]), this.defCharSB === r && (this.defCharSB = "?".charCodeAt(0));
              }
              i.prototype.encoder = p, i.prototype.decoder = y, i.prototype._getDecodeTrieNode = function(e) {
                for (var x = []; e > 0; e >>>= 8)
                  x.push(e & 255);
                x.length == 0 && x.push(0);
                for (var S = this.decodeTables[0], P = x.length - 1; P > 0; P--) {
                  var O = S[x[P]];
                  if (O == r)
                    S[x[P]] = f - this.decodeTables.length, this.decodeTables.push(S = u.slice(0));
                  else if (O <= f)
                    S = this.decodeTables[f - O];
                  else
                    throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + e.toString(16));
                }
                return S;
              }, i.prototype._addDecodeChunk = function(e) {
                var x = parseInt(e[0], 16), S = this._getDecodeTrieNode(x);
                x = x & 255;
                for (var P = 1; P < e.length; P++) {
                  var O = e[P];
                  if (typeof O == "string")
                    for (var T = 0; T < O.length; ) {
                      var A = O.charCodeAt(T++);
                      if (55296 <= A && A < 56320) {
                        var E = O.charCodeAt(T++);
                        if (56320 <= E && E < 57344)
                          S[x++] = 65536 + (A - 55296) * 1024 + (E - 56320);
                        else
                          throw new Error("Incorrect surrogate pair in " + this.encodingName + " at chunk " + e[0]);
                      } else if (4080 < A && A <= 4095) {
                        for (var D = 4095 - A + 2, b = [], R = 0; R < D; R++)
                          b.push(O.charCodeAt(T++));
                        S[x++] = o - this.decodeTableSeq.length, this.decodeTableSeq.push(b);
                      } else
                        S[x++] = A;
                    }
                  else if (typeof O == "number")
                    for (var L = S[x - 1] + 1, T = 0; T < O; T++)
                      S[x++] = L++;
                  else
                    throw new Error("Incorrect type '" + typeof O + "' given in " + this.encodingName + " at chunk " + e[0]);
                }
                if (x > 255)
                  throw new Error("Incorrect chunk in " + this.encodingName + " at addr " + e[0] + ": too long" + x);
              }, i.prototype._getEncodeBucket = function(e) {
                var x = e >> 8;
                return this.encodeTable[x] === void 0 && (this.encodeTable[x] = u.slice(0)), this.encodeTable[x];
              }, i.prototype._setEncodeChar = function(e, x) {
                var S = this._getEncodeBucket(e), P = e & 255;
                S[P] <= o ? this.encodeTableSeq[o - S[P]][h] = x : S[P] == r && (S[P] = x);
              }, i.prototype._setEncodeSequence = function(e, x) {
                var S = e[0], P = this._getEncodeBucket(S), O = S & 255, T;
                P[O] <= o ? T = this.encodeTableSeq[o - P[O]] : (T = {}, P[O] !== r && (T[h] = P[O]), P[O] = o - this.encodeTableSeq.length, this.encodeTableSeq.push(T));
                for (var A = 1; A < e.length - 1; A++) {
                  var E = T[S];
                  typeof E == "object" ? T = E : (T = T[S] = {}, E !== void 0 && (T[h] = E));
                }
                S = e[e.length - 1], T[S] = x;
              }, i.prototype._fillEncodeTable = function(e, x, S) {
                for (var P = this.decodeTables[e], O = !1, T = {}, A = 0; A < 256; A++) {
                  var E = P[A], D = x + A;
                  if (!S[D])
                    if (E >= 0)
                      this._setEncodeChar(E, D), O = !0;
                    else if (E <= f) {
                      var b = f - E;
                      if (!T[b]) {
                        var R = D << 8 >>> 0;
                        this._fillEncodeTable(b, R, S) ? O = !0 : T[b] = !0;
                      }
                    } else
                      E <= o && (this._setEncodeSequence(this.decodeTableSeq[o - E], D), O = !0);
                }
                return O;
              };
              function p(e, x) {
                this.leadSurrogate = -1, this.seqObj = void 0, this.encodeTable = x.encodeTable, this.encodeTableSeq = x.encodeTableSeq, this.defaultCharSingleByte = x.defCharSB, this.gb18030 = x.gb18030;
              }
              p.prototype.write = function(e) {
                for (var x = s.alloc(e.length * (this.gb18030 ? 4 : 3)), S = this.leadSurrogate, P = this.seqObj, O = -1, T = 0, A = 0; ; ) {
                  if (O === -1) {
                    if (T == e.length)
                      break;
                    var E = e.charCodeAt(T++);
                  } else {
                    var E = O;
                    O = -1;
                  }
                  if (55296 <= E && E < 57344)
                    if (E < 56320)
                      if (S === -1) {
                        S = E;
                        continue;
                      } else
                        S = E, E = r;
                    else
                      S !== -1 ? (E = 65536 + (S - 55296) * 1024 + (E - 56320), S = -1) : E = r;
                  else
                    S !== -1 && (O = E, E = r, S = -1);
                  var D = r;
                  if (P !== void 0 && E != r) {
                    var b = P[E];
                    if (typeof b == "object") {
                      P = b;
                      continue;
                    } else
                      typeof b == "number" ? D = b : b == null && (b = P[h], b !== void 0 && (D = b, O = E));
                    P = void 0;
                  } else if (E >= 0) {
                    var R = this.encodeTable[E >> 8];
                    if (R !== void 0 && (D = R[E & 255]), D <= o) {
                      P = this.encodeTableSeq[o - D];
                      continue;
                    }
                    if (D == r && this.gb18030) {
                      var L = m(this.gb18030.uChars, E);
                      if (L != -1) {
                        var D = this.gb18030.gbChars[L] + (E - this.gb18030.uChars[L]);
                        x[A++] = 129 + Math.floor(D / 12600), D = D % 12600, x[A++] = 48 + Math.floor(D / 1260), D = D % 1260, x[A++] = 129 + Math.floor(D / 10), D = D % 10, x[A++] = 48 + D;
                        continue;
                      }
                    }
                  }
                  D === r && (D = this.defaultCharSingleByte), D < 256 ? x[A++] = D : D < 65536 ? (x[A++] = D >> 8, x[A++] = D & 255) : D < 16777216 ? (x[A++] = D >> 16, x[A++] = D >> 8 & 255, x[A++] = D & 255) : (x[A++] = D >>> 24, x[A++] = D >>> 16 & 255, x[A++] = D >>> 8 & 255, x[A++] = D & 255);
                }
                return this.seqObj = P, this.leadSurrogate = S, x.slice(0, A);
              }, p.prototype.end = function() {
                if (!(this.leadSurrogate === -1 && this.seqObj === void 0)) {
                  var e = s.alloc(10), x = 0;
                  if (this.seqObj) {
                    var S = this.seqObj[h];
                    S !== void 0 && (S < 256 ? e[x++] = S : (e[x++] = S >> 8, e[x++] = S & 255)), this.seqObj = void 0;
                  }
                  return this.leadSurrogate !== -1 && (e[x++] = this.defaultCharSingleByte, this.leadSurrogate = -1), e.slice(0, x);
                }
              }, p.prototype.findIdx = m;
              function y(e, x) {
                this.nodeIdx = 0, this.prevBytes = [], this.decodeTables = x.decodeTables, this.decodeTableSeq = x.decodeTableSeq, this.defaultCharUnicode = x.defaultCharUnicode, this.gb18030 = x.gb18030;
              }
              y.prototype.write = function(e) {
                for (var x = s.alloc(e.length * 2), S = this.nodeIdx, P = this.prevBytes, O = this.prevBytes.length, T = -this.prevBytes.length, A, E = 0, D = 0; E < e.length; E++) {
                  var b = E >= 0 ? e[E] : P[E + O], A = this.decodeTables[S][b];
                  if (!(A >= 0))
                    if (A === r)
                      A = this.defaultCharUnicode.charCodeAt(0), E = T;
                    else if (A === a) {
                      if (E >= 3)
                        var R = (e[E - 3] - 129) * 12600 + (e[E - 2] - 48) * 1260 + (e[E - 1] - 129) * 10 + (b - 48);
                      else
                        var R = (P[E - 3 + O] - 129) * 12600 + ((E - 2 >= 0 ? e[E - 2] : P[E - 2 + O]) - 48) * 1260 + ((E - 1 >= 0 ? e[E - 1] : P[E - 1 + O]) - 129) * 10 + (b - 48);
                      var L = m(this.gb18030.gbChars, R);
                      A = this.gb18030.uChars[L] + R - this.gb18030.gbChars[L];
                    } else if (A <= f) {
                      S = f - A;
                      continue;
                    } else if (A <= o) {
                      for (var N = this.decodeTableSeq[o - A], M = 0; M < N.length - 1; M++)
                        A = N[M], x[D++] = A & 255, x[D++] = A >> 8;
                      A = N[N.length - 1];
                    } else
                      throw new Error("iconv-lite internal error: invalid decoding table value " + A + " at " + S + "/" + b);
                  if (A >= 65536) {
                    A -= 65536;
                    var K = 55296 | A >> 10;
                    x[D++] = K & 255, x[D++] = K >> 8, A = 56320 | A & 1023;
                  }
                  x[D++] = A & 255, x[D++] = A >> 8, S = 0, T = E + 1;
                }
                return this.nodeIdx = S, this.prevBytes = T >= 0 ? Array.prototype.slice.call(e, T) : P.slice(T + O).concat(Array.prototype.slice.call(e)), x.slice(0, D).toString("ucs2");
              }, y.prototype.end = function() {
                for (var e = ""; this.prevBytes.length > 0; ) {
                  e += this.defaultCharUnicode;
                  var x = this.prevBytes.slice(1);
                  this.prevBytes = [], this.nodeIdx = 0, x.length > 0 && (e += this.write(x));
                }
                return this.prevBytes = [], this.nodeIdx = 0, e;
              };
              function m(e, x) {
                if (e[0] > x)
                  return -1;
                for (var S = 0, P = e.length; S < P - 1; ) {
                  var O = S + (P - S + 1 >> 1);
                  e[O] <= x ? S = O : P = O;
                }
                return S;
              }
            }
          ),
          /***/
          27479: (
            /***/
            function(l, c, t) {
              l.exports = {
                // == Japanese/ShiftJIS ====================================================
                // All japanese encodings are based on JIS X set of standards:
                // JIS X 0201 - Single-byte encoding of ASCII + Â¥ + Kana chars at 0xA1-0xDF.
                // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
                //              Has several variations in 1978, 1983, 1990 and 1997.
                // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
                // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
                //              2 planes, first is superset of 0208, second - revised 0212.
                //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)
                // Byte encodings are:
                //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
                //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
                //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
                //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
                //               0x00-0x7F       - lower part of 0201
                //               0x8E, 0xA1-0xDF - upper part of 0201
                //               (0xA1-0xFE)x2   - 0208 plane (94x94).
                //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
                //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
                //               Used as-is in ISO2022 family.
                //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
                //                0201-1976 Roman, 0208-1978, 0208-1983.
                //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
                //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
                //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
                //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
                //
                // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
                //
                // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html
                shiftjis: {
                  type: "_dbcs",
                  table: function() {
                    return t(27014);
                  },
                  encodeAdd: { "Â¥": 92, "â¾": 126 },
                  encodeSkipVals: [{ from: 60736, to: 63808 }]
                },
                csshiftjis: "shiftjis",
                mskanji: "shiftjis",
                sjis: "shiftjis",
                windows31j: "shiftjis",
                ms31j: "shiftjis",
                xsjis: "shiftjis",
                windows932: "shiftjis",
                ms932: "shiftjis",
                932: "shiftjis",
                cp932: "shiftjis",
                eucjp: {
                  type: "_dbcs",
                  table: function() {
                    return t(31532);
                  },
                  encodeAdd: { "Â¥": 92, "â¾": 126 }
                },
                // TODO: KDDI extension to Shift_JIS
                // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
                // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.
                // == Chinese/GBK ==========================================================
                // http://en.wikipedia.org/wiki/GBK
                // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder
                // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
                gb2312: "cp936",
                gb231280: "cp936",
                gb23121980: "cp936",
                csgb2312: "cp936",
                csiso58gb231280: "cp936",
                euccn: "cp936",
                // Microsoft's CP936 is a subset and approximation of GBK.
                windows936: "cp936",
                ms936: "cp936",
                936: "cp936",
                cp936: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336);
                  }
                },
                // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
                gbk: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336).concat(t(44346));
                  }
                },
                xgbk: "gbk",
                isoir58: "gbk",
                // GB18030 is an algorithmic extension of GBK.
                // Main source: https://www.w3.org/TR/encoding/#gbk-encoder
                // http://icu-project.org/docs/papers/gb18030.html
                // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
                // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
                gb18030: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336).concat(t(44346));
                  },
                  gb18030: function() {
                    return t(36258);
                  },
                  encodeSkipVals: [128],
                  encodeAdd: { "â¬": 41699 }
                },
                chinese: "gb18030",
                // == Korean ===============================================================
                // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
                windows949: "cp949",
                ms949: "cp949",
                949: "cp949",
                cp949: {
                  type: "_dbcs",
                  table: function() {
                    return t(77348);
                  }
                },
                cseuckr: "cp949",
                csksc56011987: "cp949",
                euckr: "cp949",
                isoir149: "cp949",
                korean: "cp949",
                ksc56011987: "cp949",
                ksc56011989: "cp949",
                ksc5601: "cp949",
                // == Big5/Taiwan/Hong Kong ================================================
                // There are lots of tables for Big5 and cp950. Please see the following links for history:
                // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
                // Variations, in roughly number of defined chars:
                //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
                //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
                //  * Big5-2003 (Taiwan standard) almost superset of cp950.
                //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
                //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
                //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
                //    Plus, it has 4 combining sequences.
                //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
                //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
                //    Implementations are not consistent within browsers; sometimes labeled as just big5.
                //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
                //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
                //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
                //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
                //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
                // 
                // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
                // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.
                windows950: "cp950",
                ms950: "cp950",
                950: "cp950",
                cp950: {
                  type: "_dbcs",
                  table: function() {
                    return t(74284);
                  }
                },
                // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
                big5: "big5hkscs",
                big5hkscs: {
                  type: "_dbcs",
                  table: function() {
                    return t(74284).concat(t(63480));
                  },
                  encodeSkipVals: [
                    // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of
                    // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.
                    // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.
                    36457,
                    36463,
                    36478,
                    36523,
                    36532,
                    36557,
                    36560,
                    36695,
                    36713,
                    36718,
                    36811,
                    36862,
                    36973,
                    36986,
                    37060,
                    37084,
                    37105,
                    37311,
                    37551,
                    37552,
                    37553,
                    37554,
                    37585,
                    37959,
                    38090,
                    38361,
                    38652,
                    39285,
                    39798,
                    39800,
                    39803,
                    39878,
                    39902,
                    39916,
                    39926,
                    40002,
                    40019,
                    40034,
                    40040,
                    40043,
                    40055,
                    40124,
                    40125,
                    40144,
                    40279,
                    40282,
                    40388,
                    40431,
                    40443,
                    40617,
                    40687,
                    40701,
                    40800,
                    40907,
                    41079,
                    41180,
                    41183,
                    36812,
                    37576,
                    38468,
                    38637,
                    // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345
                    41636,
                    41637,
                    41639,
                    41638,
                    41676,
                    41678
                  ]
                },
                cnbig5: "big5hkscs",
                csbig5: "big5hkscs",
                xxbig5: "big5hkscs"
              };
            }
          ),
          /***/
          88069: (
            /***/
            function(l, c, t) {
              for (var s = [
                t(95907),
                t(89252),
                t(1710),
                t(92307),
                t(72542),
                t(26518),
                t(34732),
                t(72959),
                t(27479)
              ], r = 0; r < s.length; r++) {
                var a = s[r];
                for (var o in a)
                  Object.prototype.hasOwnProperty.call(a, o) && (c[o] = a[o]);
              }
            }
          ),
          /***/
          95907: (
            /***/
            function(l, c, t) {
              var s = t(85543).Buffer;
              l.exports = {
                // Encodings
                utf8: { type: "_internal", bomAware: !0 },
                cesu8: { type: "_internal", bomAware: !0 },
                unicode11utf8: "utf8",
                ucs2: { type: "_internal", bomAware: !0 },
                utf16le: "ucs2",
                binary: { type: "_internal" },
                base64: { type: "_internal" },
                hex: { type: "_internal" },
                // Codec.
                _internal: r
              };
              function r(i, p) {
                this.enc = i.encodingName, this.bomAware = i.bomAware, this.enc === "base64" ? this.encoder = u : this.enc === "cesu8" && (this.enc = "utf8", this.encoder = h, s.from("eda0bdedb2a9", "hex").toString() !== "ð©" && (this.decoder = d, this.defaultCharUnicode = p.defaultCharUnicode));
              }
              r.prototype.encoder = f, r.prototype.decoder = o;
              var a = t(10301).s;
              a.prototype.end || (a.prototype.end = function() {
              });
              function o(i, p) {
                this.decoder = new a(p.enc);
              }
              o.prototype.write = function(i) {
                return s.isBuffer(i) || (i = s.from(i)), this.decoder.write(i);
              }, o.prototype.end = function() {
                return this.decoder.end();
              };
              function f(i, p) {
                this.enc = p.enc;
              }
              f.prototype.write = function(i) {
                return s.from(i, this.enc);
              }, f.prototype.end = function() {
              };
              function u(i, p) {
                this.prevStr = "";
              }
              u.prototype.write = function(i) {
                i = this.prevStr + i;
                var p = i.length - i.length % 4;
                return this.prevStr = i.slice(p), i = i.slice(0, p), s.from(i, "base64");
              }, u.prototype.end = function() {
                return s.from(this.prevStr, "base64");
              };
              function h(i, p) {
              }
              h.prototype.write = function(i) {
                for (var p = s.alloc(i.length * 3), y = 0, m = 0; m < i.length; m++) {
                  var e = i.charCodeAt(m);
                  e < 128 ? p[y++] = e : e < 2048 ? (p[y++] = 192 + (e >>> 6), p[y++] = 128 + (e & 63)) : (p[y++] = 224 + (e >>> 12), p[y++] = 128 + (e >>> 6 & 63), p[y++] = 128 + (e & 63));
                }
                return p.slice(0, y);
              }, h.prototype.end = function() {
              };
              function d(i, p) {
                this.acc = 0, this.contBytes = 0, this.accBytes = 0, this.defaultCharUnicode = p.defaultCharUnicode;
              }
              d.prototype.write = function(i) {
                for (var p = this.acc, y = this.contBytes, m = this.accBytes, e = "", x = 0; x < i.length; x++) {
                  var S = i[x];
                  (S & 192) !== 128 ? (y > 0 && (e += this.defaultCharUnicode, y = 0), S < 128 ? e += String.fromCharCode(S) : S < 224 ? (p = S & 31, y = 1, m = 1) : S < 240 ? (p = S & 15, y = 2, m = 1) : e += this.defaultCharUnicode) : y > 0 ? (p = p << 6 | S & 63, y--, m++, y === 0 && (m === 2 && p < 128 && p > 0 ? e += this.defaultCharUnicode : m === 3 && p < 2048 ? e += this.defaultCharUnicode : e += String.fromCharCode(p))) : e += this.defaultCharUnicode;
                }
                return this.acc = p, this.contBytes = y, this.accBytes = m, e;
              }, d.prototype.end = function() {
                var i = 0;
                return this.contBytes > 0 && (i += this.defaultCharUnicode), i;
              };
            }
          ),
          /***/
          72542: (
            /***/
            function(l, c, t) {
              var s = t(85543).Buffer;
              c._sbcs = r;
              function r(f, u) {
                if (!f)
                  throw new Error("SBCS codec is called without the data.");
                if (!f.chars || f.chars.length !== 128 && f.chars.length !== 256)
                  throw new Error("Encoding '" + f.type + "' has incorrect 'chars' (must be of len 128 or 256)");
                if (f.chars.length === 128) {
                  for (var h = "", d = 0; d < 128; d++)
                    h += String.fromCharCode(d);
                  f.chars = h + f.chars;
                }
                this.decodeBuf = s.from(f.chars, "ucs2");
                for (var i = s.alloc(65536, u.defaultCharSingleByte.charCodeAt(0)), d = 0; d < f.chars.length; d++)
                  i[f.chars.charCodeAt(d)] = d;
                this.encodeBuf = i;
              }
              r.prototype.encoder = a, r.prototype.decoder = o;
              function a(f, u) {
                this.encodeBuf = u.encodeBuf;
              }
              a.prototype.write = function(f) {
                for (var u = s.alloc(f.length), h = 0; h < f.length; h++)
                  u[h] = this.encodeBuf[f.charCodeAt(h)];
                return u;
              }, a.prototype.end = function() {
              };
              function o(f, u) {
                this.decodeBuf = u.decodeBuf;
              }
              o.prototype.write = function(f) {
                for (var u = this.decodeBuf, h = s.alloc(f.length * 2), d = 0, i = 0, p = 0; p < f.length; p++)
                  d = f[p] * 2, i = p * 2, h[i] = u[d], h[i + 1] = u[d + 1];
                return h.toString("ucs2");
              }, o.prototype.end = function() {
              };
            }
          ),
          /***/
          34732: (
            /***/
            function(l) {
              l.exports = {
                437: "cp437",
                737: "cp737",
                775: "cp775",
                850: "cp850",
                852: "cp852",
                855: "cp855",
                856: "cp856",
                857: "cp857",
                858: "cp858",
                860: "cp860",
                861: "cp861",
                862: "cp862",
                863: "cp863",
                864: "cp864",
                865: "cp865",
                866: "cp866",
                869: "cp869",
                874: "windows874",
                922: "cp922",
                1046: "cp1046",
                1124: "cp1124",
                1125: "cp1125",
                1129: "cp1129",
                1133: "cp1133",
                1161: "cp1161",
                1162: "cp1162",
                1163: "cp1163",
                1250: "windows1250",
                1251: "windows1251",
                1252: "windows1252",
                1253: "windows1253",
                1254: "windows1254",
                1255: "windows1255",
                1256: "windows1256",
                1257: "windows1257",
                1258: "windows1258",
                28591: "iso88591",
                28592: "iso88592",
                28593: "iso88593",
                28594: "iso88594",
                28595: "iso88595",
                28596: "iso88596",
                28597: "iso88597",
                28598: "iso88598",
                28599: "iso88599",
                28600: "iso885910",
                28601: "iso885911",
                28603: "iso885913",
                28604: "iso885914",
                28605: "iso885915",
                28606: "iso885916",
                windows874: {
                  type: "_sbcs",
                  chars: "â¬ï¿½ï¿½ï¿½ï¿½â¦ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                win874: "windows874",
                cp874: "windows874",
                windows1250: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âï¿½ââ¦â â¡ï¿½â°Å â¹ÅÅ¤Å½Å¹ï¿½âââââ¢ââï¿½â¢Å¡âºÅÅ¥Å¾ÅºÂ ËËÅÂ¤ÄÂ¦Â§Â¨Â©ÅÂ«Â¬Â­Â®Å»Â°Â±ËÅÂ´ÂµÂ¶Â·Â¸ÄÅÂ»Ä½ËÄ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"
                },
                win1250: "windows1250",
                cp1250: "windows1250",
                windows1251: {
                  type: "_sbcs",
                  chars: "ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÐÐÐÑâââââ¢ââï¿½â¢ÑâºÑÑÑÑÂ ÐÑÐÂ¤ÒÂ¦Â§ÐÂ©ÐÂ«Â¬Â­Â®ÐÂ°Â±ÐÑÒÂµÂ¶Â·ÑâÑÂ»ÑÐÑÑÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                win1251: "windows1251",
                cp1251: "windows1251",
                windows1252: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½Å½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½Å¾Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                win1252: "windows1252",
                cp1252: "windows1252",
                windows1253: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡ï¿½â°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â ÎÎÂ£Â¤Â¥Â¦Â§Â¨Â©ï¿½Â«Â¬Â­Â®âÂ°Â±Â²Â³ÎÂµÂ¶Â·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"
                },
                win1253: "windows1253",
                cp1253: "windows1253",
                windows1254: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"
                },
                win1254: "windows1254",
                cp1254: "windows1254",
                windows1255: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â Â¡Â¢Â£âªÂ¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾Â¿Ö°Ö±Ö²Ö³Ö´ÖµÖ¶Ö·Ö¸Ö¹ÖºÖ»Ö¼Ö½Ö¾Ö¿×××××°×±×²×³×´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"
                },
                win1255: "windows1255",
                cp1255: "windows1255",
                windows1256: {
                  type: "_sbcs",
                  chars: "â¬Ù¾âÆââ¦â â¡Ëâ°Ù¹â¹ÅÚÚÚÚ¯âââââ¢ââÚ©â¢ÚâºÅââÚºÂ ØÂ¢Â£Â¤Â¥Â¦Â§Â¨Â©Ú¾Â«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ØÂ»Â¼Â½Â¾ØÛØ¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶ÃØ·Ø¸Ø¹ØºÙÙÙÙÃ ÙÃ¢ÙÙÙÙÃ§Ã¨Ã©ÃªÃ«ÙÙÃ®Ã¯ÙÙÙÙÃ´ÙÙÃ·ÙÃ¹ÙÃ»Ã¼ââÛ"
                },
                win1256: "windows1256",
                cp1256: "windows1256",
                windows1257: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âï¿½ââ¦â â¡ï¿½â°ï¿½â¹ï¿½Â¨ËÂ¸ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½Â¯Ëï¿½Â ï¿½Â¢Â£Â¤ï¿½Â¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³Â´ÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾Ë"
                },
                win1257: "windows1257",
                cp1257: "windows1257",
                windows1258: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                win1258: "windows1258",
                cp1258: "windows1258",
                iso88591: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                cp28591: "iso88591",
                iso88592: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄËÅÂ¤Ä½ÅÂ§Â¨Å ÅÅ¤Å¹Â­Å½Å»Â°ÄËÅÂ´Ä¾ÅËÂ¸Å¡ÅÅ¥ÅºËÅ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"
                },
                cp28592: "iso88592",
                iso88593: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Ä¦ËÂ£Â¤ï¿½Ä¤Â§Â¨Ä°ÅÄÄ´Â­ï¿½Å»Â°Ä§Â²Â³Â´ÂµÄ¥Â·Â¸Ä±ÅÄÄµÂ½ï¿½Å¼ÃÃÃï¿½ÃÄÄÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ ÃÃÄÃÃÃÃÅ¬ÅÃÃ Ã¡Ã¢ï¿½Ã¤ÄÄÃ§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ï¿½Ã±Ã²Ã³Ã´Ä¡Ã¶Ã·ÄÃ¹ÃºÃ»Ã¼Å­ÅË"
                },
                cp28593: "iso88593",
                iso88594: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄ¸ÅÂ¤Ä¨Ä»Â§Â¨Å ÄÄ¢Å¦Â­Å½Â¯Â°ÄËÅÂ´Ä©Ä¼ËÂ¸Å¡ÄÄ£Å§ÅÅ¾ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÄªÄÅÅÄ¶ÃÃÃÃÃÅ²ÃÃÃÅ¨ÅªÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ä«ÄÅÅÄ·Ã´ÃµÃ¶Ã·Ã¸Å³ÃºÃ»Ã¼Å©Å«Ë"
                },
                cp28594: "iso88594",
                iso88595: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÐÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÂ§ÑÑ"
                },
                cp28595: "iso88595",
                iso88596: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ï¿½ï¿½Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ØÂ­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Øï¿½ï¿½ï¿½Øï¿½Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·Ø¸Ø¹Øºï¿½ï¿½ï¿½ï¿½ï¿½ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"
                },
                cp28596: "iso88596",
                iso88597: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ââÂ£â¬â¯Â¦Â§Â¨Â©ÍºÂ«Â¬Â­ï¿½âÂ°Â±Â²Â³ÎÎÎÂ·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"
                },
                cp28597: "iso88597",
                iso88598: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½â××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"
                },
                cp28598: "iso88598",
                iso88599: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"
                },
                cp28599: "iso88599",
                iso885910: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÄ¢ÄªÄ¨Ä¶Â§Ä»ÄÅ Å¦Å½Â­ÅªÅÂ°ÄÄÄ£Ä«Ä©Ä·Â·Ä¼ÄÅ¡Å§Å¾âÅ«ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÃÃÅÅÃÃÃÃÅ¨ÃÅ²ÃÃÃÃÃÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ã¯Ã°ÅÅÃ³Ã´ÃµÃ¶Å©Ã¸Å³ÃºÃ»Ã¼Ã½Ã¾Ä¸"
                },
                cp28600: "iso885910",
                iso885911: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                cp28601: "iso885911",
                iso885913: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ âÂ¢Â£Â¤âÂ¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³âÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾â"
                },
                cp28603: "iso885913",
                iso885914: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ á¸á¸Â£ÄÄá¸Â§áºÂ©áºá¸á»²Â­Â®Å¸á¸á¸Ä Ä¡á¹á¹Â¶á¹áºá¹áºá¹ á»³áºáºá¹¡ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ´ÃÃÃÃÃÃá¹ªÃÃÃÃÃÃÅ¶ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÅµÃ±Ã²Ã³Ã´ÃµÃ¶á¹«Ã¸Ã¹ÃºÃ»Ã¼Ã½Å·Ã¿"
                },
                cp28604: "iso885914",
                iso885915: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Å Â§Å¡Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å½ÂµÂ¶Â·Å¾Â¹ÂºÂ»ÅÅÅ¸Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                cp28605: "iso885915",
                iso885916: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÅâ¬âÅ Â§Å¡Â©ÈÂ«Å¹Â­ÅºÅ»Â°Â±ÄÅÅ½âÂ¶Â·Å¾ÄÈÂ»ÅÅÅ¸Å¼ÃÃÃÄÃÄÃÃÃÃÃÃÃÃÃÃÄÅÃÃÃÅÃÅÅ°ÃÃÃÃÄÈÃÃ Ã¡Ã¢ÄÃ¤ÄÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÅÃ²Ã³Ã´ÅÃ¶ÅÅ±Ã¹ÃºÃ»Ã¼ÄÈÃ¿"
                },
                cp28606: "iso885916",
                cp437: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm437: "cp437",
                csibm437: "cp437",
                cp737: {
                  type: "_sbcs",
                  chars: "ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏâââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÏÎ¬Î­Î®ÏÎ¯ÏÏÏÏÎÎÎÎÎÎÎÂ±â¥â¤ÎªÎ«Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm737: "cp737",
                csibm737: "cp737",
                cp775: {
                  type: "_sbcs",
                  chars: "ÄÃ¼Ã©ÄÃ¤Ä£Ã¥ÄÅÄÅÅÄ«Å¹ÃÃÃÃ¦ÃÅÃ¶Ä¢Â¢ÅÅÃÃÃ¸Â£ÃÃÂ¤ÄÄªÃ³Å»Å¼ÅºâÂ¦Â©Â®Â¬Â½Â¼ÅÂ«Â»âââââ¤ÄÄÄÄâ£âââÄ®Å âââ´â¬âââ¼Å²Åªâââ©â¦â ââ¬Å½ÄÄÄÄÄ¯Å¡Å³Å«Å¾âââââââÃÃÅÅÃµÃÂµÅÄ¶Ä·Ä»Ä¼ÅÄÅâÂ­Â±âÂ¾Â¶Â§Ã·âÂ°âÂ·Â¹Â³Â²â Â "
                },
                ibm775: "cp775",
                csibm775: "cp775",
                cp850: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃÄ±ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm850: "cp850",
                csibm850: "cp850",
                cp852: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Å¯ÄÃ§ÅÃ«ÅÅÃ®Å¹ÃÄÃÄ¹ÄºÃ´Ã¶Ä½Ä¾ÅÅÃÃÅ¤Å¥ÅÃÄÃ¡Ã­Ã³ÃºÄÄÅ½Å¾ÄÄÂ¬ÅºÄÅÂ«Â»âââââ¤ÃÃÄÅâ£âââÅ»Å¼âââ´â¬âââ¼ÄÄâââ©â¦â ââ¬Â¤ÄÄÄÃÄÅÃÃÄââââÅ¢Å®âÃÃÃÅÅÅÅ Å¡ÅÃÅÅ°Ã½ÃÅ£Â´Â­ËËËËÂ§Ã·Â¸Â°Â¨ËÅ±ÅÅâ Â "
                },
                ibm852: "cp852",
                csibm852: "cp852",
                cp855: {
                  type: "_sbcs",
                  chars: "ÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐ®ÑÐªÐ°ÐÐ±ÐÑÐ¦Ð´ÐÐµÐÑÐ¤Ð³ÐÂ«Â»âââââ¤ÑÐ¥Ð¸Ðâ£âââÐ¹Ðâââ´â¬âââ¼ÐºÐâââ©â¦â ââ¬Â¤Ð»ÐÐ¼ÐÐ½ÐÐ¾ÐÐ¿ââââÐÑâÐ¯ÑÐ ÑÐ¡ÑÐ¢ÑÐ£Ð¶ÐÐ²ÐÑÐ¬âÂ­ÑÐ«Ð·ÐÑÐ¨ÑÐ­ÑÐ©ÑÐ§Â§â Â "
                },
                ibm855: "cp855",
                csibm855: "cp855",
                cp856: {
                  type: "_sbcs",
                  chars: "××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½Â£ï¿½Ãï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â®Â¬Â½Â¼ï¿½Â«Â»âââââ¤ï¿½ï¿½ï¿½Â©â£âââÂ¢Â¥âââ´â¬âââ¼ï¿½ï¿½âââ©â¦â ââ¬Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ââââÂ¦ï¿½âï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm856: "cp856",
                csibm856: "cp856",
                cp857: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ä±ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ä°ÃÃÃ¸Â£ÃÅÅÃ¡Ã­Ã³ÃºÃ±ÃÄÄÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤ÂºÂªÃÃÃï¿½ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµï¿½ÃÃÃÃÃ¬Ã¿Â¯Â´Â­Â±ï¿½Â¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm857: "cp857",
                csibm857: "cp857",
                cp858: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃâ¬ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm858: "cp858",
                csibm858: "cp858",
                cp860: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã£Ã ÃÃ§ÃªÃÃ¨ÃÃÃ¬ÃÃÃÃÃÃ´ÃµÃ²ÃÃ¹ÃÃÃÂ¢Â£Ãâ§ÃÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿ÃÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm860: "cp860",
                csibm860: "cp860",
                cp861: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨ÃÃ°ÃÃÃÃÃ¦ÃÃ´Ã¶Ã¾Ã»ÃÃ½ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃÃÃÃÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm861: "cp861",
                csibm861: "cp861",
                cp862: {
                  type: "_sbcs",
                  chars: "××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm862: "cp862",
                csibm862: "cp862",
                cp863: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢ÃÃ Â¶Ã§ÃªÃ«Ã¨Ã¯Ã®âÃÂ§ÃÃÃÃ´ÃÃÃ»Ã¹Â¤ÃÃÂ¢Â£ÃÃÆÂ¦Â´Ã³ÃºÂ¨Â¸Â³Â¯ÃâÂ¬Â½Â¼Â¾Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm863: "cp863",
                csibm863: "cp863",
                cp864: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#$Ùª&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~Â°Â·ââââââ¼â¤â¬ââ´ââââÎ²âÏÂ±Â½Â¼âÂ«Â»ï»·ï»¸ï¿½ï¿½ï»»ï»¼ï¿½Â Â­ïºÂ£Â¤ïºï¿½ï¿½ïºïºïºïºØïºïº¡ïº¥Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ï»Øïº±ïºµïº¹ØÂ¢ïºïºïºïºï»ïºïºïºïºïºïºïºïº£ïº§ïº©ïº«ïº­ïº¯ïº³ïº·ïº»ïº¿ï»ï»ï»ï»Â¦Â¬Ã·Ãï»Ùï»ï»ï»ï»ï»£ï»§ï»«ï»­ï»¯ï»³ïº½ï»ï»ï»ï»¡ï¹½Ùï»¥ï»©ï»¬ï»°ï»²ï»ï»ï»µï»¶ï»ï»ï»±â ï¿½`
                },
                ibm864: "cp864",
                csibm864: "cp864",
                cp865: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â¤âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm865: "cp865",
                csibm865: "cp865",
                cp866: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·ââÂ¤â Â "
                },
                ibm866: "cp866",
                csibm866: "cp866",
                cp869: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îï¿½Â·Â¬Â¦ââÎâÎÎÎªÎï¿½ï¿½ÎÎ«Â©ÎÂ²Â³Î¬Â£Î­Î®Î¯ÏÎÏÏÎÎÎÎÎÎÎÂ½ÎÎÂ«Â»âââââ¤ÎÎÎÎâ£âââÎÎâââ´â¬âââ¼Î Î¡âââ©â¦â ââ¬Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³ââââÎ´ÎµâÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÎÂ­Â±ÏÏÏÂ§ÏÎÂ°Â¨ÏÏÎ°Ïâ Â "
                },
                ibm869: "cp869",
                csibm869: "cp869",
                cp922: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®â¾Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ ÃÃÃÃÃÃÃÃÃÃÃÃÃÅ½ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Å¡Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Å¾Ã¿"
                },
                ibm922: "cp922",
                csibm922: "cp922",
                cp1046: {
                  type: "_sbcs",
                  chars: "ïºÃÃ·ï£¶ï£µï£´ï£·ï¹±Ââ ââââââï¹¹ï¹»ï¹½ï¹¿ï¹·ïºï»°ï»³ï»²ï»ï»ï»ï»¶ï»¸ï»ºï»¼Â ï£ºï£¹ï£¸Â¤ï£»ïºïºïºïºïºïº£ØÂ­ïº§ïº³Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ïº·Øïº»ïº¿ï»Øï»Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·ï»Ø¹Øºï»ïºïºïºï»ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï»ï»ï»ï£¼ï»µï»·ï»¹ï»»ï»£ï»§ï»¬ï»©ï¿½"
                },
                ibm1046: "cp1046",
                csibm1046: "cp1046",
                cp1124: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÒÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÒÑÑÑÑÑÑÑÑÑÂ§ÑÑ"
                },
                ibm1124: "cp1124",
                csibm1124: "cp1124",
                cp1125: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÒÒÐÑÐÑÐÑÂ·ââÂ¤â Â "
                },
                ibm1125: "cp1125",
                csibm1125: "cp1125",
                cp1129: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                ibm1129: "cp1129",
                csibm1129: "cp1129",
                cp1133: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ àºàºàºàºàºàºªàºàºàºàºàºàºàºàºàºàºàºàºàºàº¡àº¢àº£àº¥àº§àº«àº­àº®ï¿½ï¿½ï¿½àº¯àº°àº²àº³àº´àºµàº¶àº·àº¸àº¹àº¼àº±àº»àº½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»à»à»ï¿½à»à»â­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»ï¿½ï¿½Â¢Â¬Â¦ï¿½"
                },
                ibm1133: "cp1133",
                csibm1133: "cp1133",
                cp1161: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¹à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºà¹à¹à¹â¬à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â¢Â¬Â¦Â "
                },
                ibm1161: "cp1161",
                csibm1161: "cp1161",
                cp1162: {
                  type: "_sbcs",
                  chars: "â¬ÂÂÂÂâ¦ÂÂÂÂÂÂÂÂÂÂÂâââââ¢ââÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                ibm1162: "cp1162",
                csibm1162: "cp1162",
                cp1163: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                ibm1163: "cp1163",
                csibm1163: "cp1163",
                maccroatian: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Å â¢Â´Â¨â Å½ÃâÂ±â¤â¥âÂµâââÅ¡â«ÂªÂºâ¦Å¾Ã¸Â¿Â¡Â¬âÆâÄÂ«Äâ¦Â ÃÃÃÅÅÄâââââÃ·âï¿½Â©âÂ¤â¹âºÃÂ»âÂ·âââ°ÃÄÃÄÃÃÃÃÃÃÃÄÃÃÃÃÄ±ËËÂ¯ÏÃËÂ¸ÃÃ¦Ë"
                },
                maccyrillic: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°Â¢Â£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµâÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"
                },
                macgreek: {
                  type: "_sbcs",
                  chars: "ÃÂ¹Â²ÃÂ³ÃÃÎÃ Ã¢Ã¤ÎÂ¨Ã§Ã©Ã¨ÃªÃ«Â£â¢Ã®Ã¯â¢Â½â°Ã´Ã¶Â¦Â­Ã¹Ã»Ã¼â ÎÎÎÎÎÎ ÃÂ®Â©Î£ÎªÂ§â Â°ÎÎÂ±â¤â¥Â¥ÎÎÎÎÎÎÎÎ¦Î«Î¨Î©Î¬ÎÂ¬ÎÎ¡âÎ¤Â«Â»â¦Â Î¥Î§ÎÎÅââââââÃ·ÎÎÎÎÎ­Î®Î¯ÏÎÏÎ±Î²ÏÎ´ÎµÏÎ³Î·Î¹Î¾ÎºÎ»Î¼Î½Î¿ÏÏÏÏÏÎ¸ÏÏÏÏÎ¶ÏÏÎÎ°ï¿½"
                },
                maciceland: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼ÃÂ°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤ÃÃ°ÃÃ¾Ã½Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macroman: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macromania: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÄÅâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦ÄÅÂ¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºÅ¢Å£â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macthai: {
                  type: "_sbcs",
                  chars: "Â«Â»â¦ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¢ï¿½â¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸º\uFEFFâââà¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹â¢à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â®Â©ï¿½ï¿½ï¿½ï¿½"
                },
                macturkish: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ÄÄÄ°Ä±ÅÅâ¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃï¿½ËËÂ¯ËËËÂ¸ËËË"
                },
                macukraine: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°ÒÂ£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµÒÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"
                },
                koi8r: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑââââââââââââââ â¡Ðâ¢â£â¤â¥â¦â§â¨â©âªâ«â¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8u: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒââââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒâ¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8ru: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒÑâââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒÐÂ©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8t: {
                  type: "_sbcs",
                  chars: "ÒÒâÒââ¦â â¡ï¿½â°Ò³â¹Ò²Ò·Ò¶ï¿½Òâââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½ï¿½Ó¯Ó®ÑÂ¤Ó£Â¦Â§ï¿½ï¿½ï¿½Â«Â¬Â­Â®ï¿½Â°Â±Â²Ðï¿½Ó¢Â¶Â·ï¿½âï¿½Â»ï¿½ï¿½ï¿½Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                armscii8: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ÖÖ)(Â»Â«â.Õ,-Öâ¦ÕÕÕÔ±Õ¡Ô²Õ¢Ô³Õ£Ô´Õ¤ÔµÕ¥Ô¶Õ¦Ô·Õ§Ô¸Õ¨Ô¹Õ©ÔºÕªÔ»Õ«Ô¼Õ¬Ô½Õ­Ô¾Õ®Ô¿Õ¯ÕÕ°ÕÕ±ÕÕ²ÕÕ³ÕÕ´ÕÕµÕÕ¶ÕÕ·ÕÕ¸ÕÕ¹ÕÕºÕÕ»ÕÕ¼ÕÕ½ÕÕ¾ÕÕ¿ÕÖÕÖÕÖÕÖÕÖÕÖÕÖÕï¿½"
                },
                rk1048: {
                  type: "_sbcs",
                  chars: "ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÒÒºÐÑâââââ¢ââï¿½â¢ÑâºÑÒÒ»ÑÂ Ò°Ò±ÓÂ¤Ó¨Â¦Â§ÐÂ©ÒÂ«Â¬Â­Â®Ò®Â°Â±ÐÑÓ©ÂµÂ¶Â·ÑâÒÂ»ÓÒ¢Ò£Ò¯ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                tcvn: {
                  type: "_sbcs",
                  chars: `\0Ãá»¤á»ªá»¬á»®\x07\b	
\v\f\rá»¨á»°á»²á»¶á»¸Ãá»´\x1B !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~Ãáº¢ÃÃáº áº¶áº¬Ãáººáº¼Ãáº¸á»Ãá»Ä¨Ãá»Ãá»ÃÃá»á»á»á»á» á»á»¢Ãá»¦Å¨Â ÄÃÃÃÆ Æ¯ÄÄÃ¢ÃªÃ´Æ¡Æ°Äáº°ÌÌÌÌÌ£Ã áº£Ã£Ã¡áº¡áº²áº±áº³áºµáº¯áº´áº®áº¦áº¨áºªáº¤á»áº·áº§áº©áº«áº¥áº­Ã¨á»áº»áº½Ã©áº¹á»á»á»áº¿á»Ã¬á»á»áº¾á»Ä©Ã­á»Ã²á»á»ÃµÃ³á»á»á»á»á»á»á»á»á»¡á»á»£Ã¹á»á»§Å©Ãºá»¥á»«á»­á»¯á»©á»±á»³á»·á»¹Ã½á»µá»`
                },
                georgianacademy: {
                  type: "_sbcs",
                  chars: "ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ááááááááááááááááá á¡á¢á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á¯á°á±á²á³á´áµá¶Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                georgianps: {
                  type: "_sbcs",
                  chars: "ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿áááááááá±ááááááá²áááá á¡á¢á³á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á´á¯á°áµÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                pt154: {
                  type: "_sbcs",
                  chars: "ÒÒÓ®Òââ¦Ò¶Ò®Ò²Ò¯Ò Ó¢Ò¢ÒÒºÒ¸Òâââââ¢ââÒ³Ò·Ò¡Ó£Ò£ÒÒ»Ò¹Â ÐÑÐÓ¨ÒÒ°Â§ÐÂ©ÓÂ«Â¬Ó¯Â®ÒÂ°Ò±ÐÑÒÓ©Â¶Â·ÑâÓÂ»ÑÒªÒ«ÒÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                viscii: {
                  type: "_sbcs",
                  chars: `\0áº²áº´áºª\x07\b	
\v\f\rá»¶á»¸\x1Bá»´ !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~áº áº®áº°áº¶áº¤áº¦áº¨áº¬áº¼áº¸áº¾á»á»á»á»á»á»á»á»á»á»¢á»á»á»á»á»á»á»á»¦Å¨á»¤á»²Ãáº¯áº±áº·áº¥áº§áº©áº­áº½áº¹áº¿á»á»á»á»á»á»á»á»á» Æ á»á»á»á»á»°á»¨á»ªá»¬Æ¡á»Æ¯ÃÃÃÃáº¢Äáº³áºµÃÃÃáººÃÃÄ¨á»³Äá»©ÃÃÃáº¡á»·á»«á»­ÃÃá»¹á»µÃá»¡Æ°Ã Ã¡Ã¢Ã£áº£Äá»¯áº«Ã¨Ã©Ãªáº»Ã¬Ã­Ä©á»Äá»±Ã²Ã³Ã´Ãµá»á»á»¥Ã¹ÃºÅ©á»§Ã½á»£á»®`
                },
                iso646cn: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#Â¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½`
                },
                iso646jp: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[Â¥]^_\`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½`
                },
                hproman8: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÃÃÃÃÃÃÃÂ´ËËÂ¨ËÃÃâ¤Â¯ÃÃ½Â°ÃÃ§ÃÃ±Â¡Â¿Â¤Â£Â¥Â§ÆÂ¢Ã¢ÃªÃ´Ã»Ã¡Ã©Ã³ÃºÃ Ã¨Ã²Ã¹Ã¤Ã«Ã¶Ã¼ÃÃ®ÃÃÃ¥Ã­Ã¸Ã¦ÃÃ¬ÃÃÃÃ¯ÃÃÃÃÃ£ÃÃ°ÃÃÃÃÃÃµÅ Å¡ÃÅ¸Ã¿ÃÃ¾Â·ÂµÂ¶Â¾âÂ¼Â½ÂªÂºÂ«â Â»Â±ï¿½"
                },
                macintosh: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                ascii: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"
                },
                tis620: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                }
              };
            }
          ),
          /***/
          26518: (
            /***/
            function(l) {
              l.exports = {
                // Not supported by iconv, not sure why.
                10029: "maccenteuro",
                maccenteuro: {
                  type: "_sbcs",
                  chars: "ÃÄÄÃÄÃÃÃ¡ÄÄÃ¤ÄÄÄÃ©Å¹ÅºÄÃ­ÄÄÄÄÃ³ÄÃ´Ã¶ÃµÃºÄÄÃ¼â Â°ÄÂ£Â§â¢Â¶ÃÂ®Â©â¢ÄÂ¨â Ä£Ä®Ä¯Äªâ¤â¥Ä«Ä¶ââÅÄ»Ä¼Ä½Ä¾Ä¹ÄºÅÅÅÂ¬âÅÅâÂ«Â»â¦Â ÅÅÃÅÅââââââÃ·âÅÅÅÅâ¹âºÅÅÅÅ ââÅ¡ÅÅÃÅ¤Å¥ÃÅ½Å¾ÅªÃÃÅ«Å®ÃÅ¯Å°Å±Å²Å³ÃÃ½Ä·Å»ÅÅ¼Ä¢Ë"
                },
                808: "cp808",
                ibm808: "cp808",
                cp808: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·âââ¬â Â "
                },
                mik: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑââ´â¬âââ¼â£ââââ©â¦â ââ¬ââââââ¤âÂ§âââââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                cp720: {
                  type: "_sbcs",
                  chars: "ÂÂÃ©Ã¢ÂÃ ÂÃ§ÃªÃ«Ã¨Ã¯Ã®ÂÂÂÂÙÙÃ´Â¤ÙÃ»Ã¹Ø¡Ø¢Ø£Ø¤Â£Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµÂ«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââØ¶Ø·Ø¸Ø¹ØºÙÂµÙÙÙÙÙÙÙÙÙâ¡ÙÙÙÙÙÙâÂ°âÂ·ââ¿Â²â Â "
                },
                // Aliases of generated encodings.
                ascii8bit: "ascii",
                usascii: "ascii",
                ansix34: "ascii",
                ansix341968: "ascii",
                ansix341986: "ascii",
                csascii: "ascii",
                cp367: "ascii",
                ibm367: "ascii",
                isoir6: "ascii",
                iso646us: "ascii",
                iso646irv: "ascii",
                us: "ascii",
                latin1: "iso88591",
                latin2: "iso88592",
                latin3: "iso88593",
                latin4: "iso88594",
                latin5: "iso88599",
                latin6: "iso885910",
                latin7: "iso885913",
                latin8: "iso885914",
                latin9: "iso885915",
                latin10: "iso885916",
                csisolatin1: "iso88591",
                csisolatin2: "iso88592",
                csisolatin3: "iso88593",
                csisolatin4: "iso88594",
                csisolatincyrillic: "iso88595",
                csisolatinarabic: "iso88596",
                csisolatingreek: "iso88597",
                csisolatinhebrew: "iso88598",
                csisolatin5: "iso88599",
                csisolatin6: "iso885910",
                l1: "iso88591",
                l2: "iso88592",
                l3: "iso88593",
                l4: "iso88594",
                l5: "iso88599",
                l6: "iso885910",
                l7: "iso885913",
                l8: "iso885914",
                l9: "iso885915",
                l10: "iso885916",
                isoir14: "iso646jp",
                isoir57: "iso646cn",
                isoir100: "iso88591",
                isoir101: "iso88592",
                isoir109: "iso88593",
                isoir110: "iso88594",
                isoir144: "iso88595",
                isoir127: "iso88596",
                isoir126: "iso88597",
                isoir138: "iso88598",
                isoir148: "iso88599",
                isoir157: "iso885910",
                isoir166: "tis620",
                isoir179: "iso885913",
                isoir199: "iso885914",
                isoir203: "iso885915",
                isoir226: "iso885916",
                cp819: "iso88591",
                ibm819: "iso88591",
                cyrillic: "iso88595",
                arabic: "iso88596",
                arabic8: "iso88596",
                ecma114: "iso88596",
                asmo708: "iso88596",
                greek: "iso88597",
                greek8: "iso88597",
                ecma118: "iso88597",
                elot928: "iso88597",
                hebrew: "iso88598",
                hebrew8: "iso88598",
                turkish: "iso88599",
                turkish8: "iso88599",
                thai: "iso885911",
                thai8: "iso885911",
                celtic: "iso885914",
                celtic8: "iso885914",
                isoceltic: "iso885914",
                tis6200: "tis620",
                tis62025291: "tis620",
                tis62025330: "tis620",
                1e4: "macroman",
                10006: "macgreek",
                10007: "maccyrillic",
                10079: "maciceland",
                10081: "macturkish",
                cspc8codepage437: "cp437",
                cspc775baltic: "cp775",
                cspc850multilingual: "cp850",
                cspcp852: "cp852",
                cspc862latinhebrew: "cp862",
                cpgr: "cp869",
                msee: "cp1250",
                mscyrl: "cp1251",
                msansi: "cp1252",
                msgreek: "cp1253",
                msturk: "cp1254",
                mshebr: "cp1255",
                msarab: "cp1256",
                winbaltrim: "cp1257",
                cp20866: "koi8r",
                20866: "koi8r",
                ibm878: "koi8r",
                cskoi8r: "koi8r",
                cp21866: "koi8u",
                21866: "koi8u",
                ibm1168: "koi8u",
                strk10482002: "rk1048",
                tcvn5712: "tcvn",
                tcvn57121: "tcvn",
                gb198880: "iso646cn",
                cn: "iso646cn",
                csiso14jisc6220ro: "iso646jp",
                jisc62201969ro: "iso646jp",
                jp: "iso646jp",
                cshproman8: "hproman8",
                r8: "hproman8",
                roman8: "hproman8",
                xroman8: "hproman8",
                ibm1051: "hproman8",
                mac: "macintosh",
                csmacintosh: "macintosh"
              };
            }
          ),
          /***/
          1710: (
            /***/
            function(l, c, t) {
              var s = t(85543).Buffer;
              c.utf16be = r;
              function r() {
              }
              r.prototype.encoder = a, r.prototype.decoder = o, r.prototype.bomAware = !0;
              function a() {
              }
              a.prototype.write = function(i) {
                for (var p = s.from(i, "ucs2"), y = 0; y < p.length; y += 2) {
                  var m = p[y];
                  p[y] = p[y + 1], p[y + 1] = m;
                }
                return p;
              }, a.prototype.end = function() {
              };
              function o() {
                this.overflowByte = -1;
              }
              o.prototype.write = function(i) {
                if (i.length == 0)
                  return "";
                var p = s.alloc(i.length + 1), y = 0, m = 0;
                for (this.overflowByte !== -1 && (p[0] = i[0], p[1] = this.overflowByte, y = 1, m = 2); y < i.length - 1; y += 2, m += 2)
                  p[m] = i[y + 1], p[m + 1] = i[y];
                return this.overflowByte = y == i.length - 1 ? i[i.length - 1] : -1, p.slice(0, m).toString("ucs2");
              }, o.prototype.end = function() {
                this.overflowByte = -1;
              }, c.utf16 = f;
              function f(i, p) {
                this.iconv = p;
              }
              f.prototype.encoder = u, f.prototype.decoder = h;
              function u(i, p) {
                i = i || {}, i.addBOM === void 0 && (i.addBOM = !0), this.encoder = p.iconv.getEncoder("utf-16le", i);
              }
              u.prototype.write = function(i) {
                return this.encoder.write(i);
              }, u.prototype.end = function() {
                return this.encoder.end();
              };
              function h(i, p) {
                this.decoder = null, this.initialBufs = [], this.initialBufsLen = 0, this.options = i || {}, this.iconv = p.iconv;
              }
              h.prototype.write = function(i) {
                if (!this.decoder) {
                  if (this.initialBufs.push(i), this.initialBufsLen += i.length, this.initialBufsLen < 16)
                    return "";
                  var p = d(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(p, this.options);
                  for (var y = "", m = 0; m < this.initialBufs.length; m++)
                    y += this.decoder.write(this.initialBufs[m]);
                  return this.initialBufs.length = this.initialBufsLen = 0, y;
                }
                return this.decoder.write(i);
              }, h.prototype.end = function() {
                if (!this.decoder) {
                  var i = d(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(i, this.options);
                  for (var p = "", y = 0; y < this.initialBufs.length; y++)
                    p += this.decoder.write(this.initialBufs[y]);
                  var m = this.decoder.end();
                  return m && (p += m), this.initialBufs.length = this.initialBufsLen = 0, p;
                }
                return this.decoder.end();
              };
              function d(i, p) {
                var y = [], m = 0, e = 0, x = 0;
                t:
                  for (var S = 0; S < i.length; S++)
                    for (var P = i[S], O = 0; O < P.length; O++)
                      if (y.push(P[O]), y.length === 2) {
                        if (m === 0) {
                          if (y[0] === 255 && y[1] === 254)
                            return "utf-16le";
                          if (y[0] === 254 && y[1] === 255)
                            return "utf-16be";
                        }
                        if (y[0] === 0 && y[1] !== 0 && x++, y[0] !== 0 && y[1] === 0 && e++, y.length = 0, m++, m >= 100)
                          break t;
                      }
                return x > e ? "utf-16be" : x < e ? "utf-16le" : p || "utf-16le";
              }
            }
          ),
          /***/
          89252: (
            /***/
            function(l, c, t) {
              var s = t(85543).Buffer;
              c._utf32 = r;
              function r(p, y) {
                this.iconv = y, this.bomAware = !0, this.isLE = p.isLE;
              }
              c.utf32le = { type: "_utf32", isLE: !0 }, c.utf32be = { type: "_utf32", isLE: !1 }, c.ucs4le = "utf32le", c.ucs4be = "utf32be", r.prototype.encoder = a, r.prototype.decoder = o;
              function a(p, y) {
                this.isLE = y.isLE, this.highSurrogate = 0;
              }
              a.prototype.write = function(p) {
                for (var y = s.from(p, "ucs2"), m = s.alloc(y.length * 2), e = this.isLE ? m.writeUInt32LE : m.writeUInt32BE, x = 0, S = 0; S < y.length; S += 2) {
                  var P = y.readUInt16LE(S), O = 55296 <= P && P < 56320, T = 56320 <= P && P < 57344;
                  if (this.highSurrogate)
                    if (O || !T)
                      e.call(m, this.highSurrogate, x), x += 4;
                    else {
                      var A = (this.highSurrogate - 55296 << 10 | P - 56320) + 65536;
                      e.call(m, A, x), x += 4, this.highSurrogate = 0;
                      continue;
                    }
                  O ? this.highSurrogate = P : (e.call(m, P, x), x += 4, this.highSurrogate = 0);
                }
                return x < m.length && (m = m.slice(0, x)), m;
              }, a.prototype.end = function() {
                if (this.highSurrogate) {
                  var p = s.alloc(4);
                  return this.isLE ? p.writeUInt32LE(this.highSurrogate, 0) : p.writeUInt32BE(this.highSurrogate, 0), this.highSurrogate = 0, p;
                }
              };
              function o(p, y) {
                this.isLE = y.isLE, this.badChar = y.iconv.defaultCharUnicode.charCodeAt(0), this.overflow = [];
              }
              o.prototype.write = function(p) {
                if (p.length === 0)
                  return "";
                var y = 0, m = 0, e = s.alloc(p.length + 4), x = 0, S = this.isLE, P = this.overflow, O = this.badChar;
                if (P.length > 0) {
                  for (; y < p.length && P.length < 4; y++)
                    P.push(p[y]);
                  P.length === 4 && (S ? m = P[y] | P[y + 1] << 8 | P[y + 2] << 16 | P[y + 3] << 24 : m = P[y + 3] | P[y + 2] << 8 | P[y + 1] << 16 | P[y] << 24, P.length = 0, x = f(e, x, m, O));
                }
                for (; y < p.length - 3; y += 4)
                  S ? m = p[y] | p[y + 1] << 8 | p[y + 2] << 16 | p[y + 3] << 24 : m = p[y + 3] | p[y + 2] << 8 | p[y + 1] << 16 | p[y] << 24, x = f(e, x, m, O);
                for (; y < p.length; y++)
                  P.push(p[y]);
                return e.slice(0, x).toString("ucs2");
              };
              function f(p, y, m, e) {
                if ((m < 0 || m > 1114111) && (m = e), m >= 65536) {
                  m -= 65536;
                  var x = 55296 | m >> 10;
                  p[y++] = x & 255, p[y++] = x >> 8;
                  var m = 56320 | m & 1023;
                }
                return p[y++] = m & 255, p[y++] = m >> 8, y;
              }
              o.prototype.end = function() {
                this.overflow.length = 0;
              }, c.utf32 = u, c.ucs4 = "utf32";
              function u(p, y) {
                this.iconv = y;
              }
              u.prototype.encoder = h, u.prototype.decoder = d;
              function h(p, y) {
                p = p || {}, p.addBOM === void 0 && (p.addBOM = !0), this.encoder = y.iconv.getEncoder(p.defaultEncoding || "utf-32le", p);
              }
              h.prototype.write = function(p) {
                return this.encoder.write(p);
              }, h.prototype.end = function() {
                return this.encoder.end();
              };
              function d(p, y) {
                this.decoder = null, this.initialBufs = [], this.initialBufsLen = 0, this.options = p || {}, this.iconv = y.iconv;
              }
              d.prototype.write = function(p) {
                if (!this.decoder) {
                  if (this.initialBufs.push(p), this.initialBufsLen += p.length, this.initialBufsLen < 32)
                    return "";
                  var y = i(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(y, this.options);
                  for (var m = "", e = 0; e < this.initialBufs.length; e++)
                    m += this.decoder.write(this.initialBufs[e]);
                  return this.initialBufs.length = this.initialBufsLen = 0, m;
                }
                return this.decoder.write(p);
              }, d.prototype.end = function() {
                if (!this.decoder) {
                  var p = i(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(p, this.options);
                  for (var y = "", m = 0; m < this.initialBufs.length; m++)
                    y += this.decoder.write(this.initialBufs[m]);
                  var e = this.decoder.end();
                  return e && (y += e), this.initialBufs.length = this.initialBufsLen = 0, y;
                }
                return this.decoder.end();
              };
              function i(p, y) {
                var m = [], e = 0, x = 0, S = 0, P = 0, O = 0;
                t:
                  for (var T = 0; T < p.length; T++)
                    for (var A = p[T], E = 0; E < A.length; E++)
                      if (m.push(A[E]), m.length === 4) {
                        if (e === 0) {
                          if (m[0] === 255 && m[1] === 254 && m[2] === 0 && m[3] === 0)
                            return "utf-32le";
                          if (m[0] === 0 && m[1] === 0 && m[2] === 254 && m[3] === 255)
                            return "utf-32be";
                        }
                        if ((m[0] !== 0 || m[1] > 16) && S++, (m[3] !== 0 || m[2] > 16) && x++, m[0] === 0 && m[1] === 0 && (m[2] !== 0 || m[3] !== 0) && O++, (m[0] !== 0 || m[1] !== 0) && m[2] === 0 && m[3] === 0 && P++, m.length = 0, e++, e >= 100)
                          break t;
                      }
                return O - S > P - x ? "utf-32be" : O - S < P - x ? "utf-32le" : y || "utf-32le";
              }
            }
          ),
          /***/
          92307: (
            /***/
            function(l, c, t) {
              var s = t(85543).Buffer;
              c.utf7 = r, c.unicode11utf7 = "utf7";
              function r(P, O) {
                this.iconv = O;
              }
              r.prototype.encoder = o, r.prototype.decoder = f, r.prototype.bomAware = !0;
              var a = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;
              function o(P, O) {
                this.iconv = O.iconv;
              }
              o.prototype.write = function(P) {
                return s.from(P.replace(a, function(O) {
                  return "+" + (O === "+" ? "" : this.iconv.encode(O, "utf16-be").toString("base64").replace(/=+$/, "")) + "-";
                }.bind(this)));
              }, o.prototype.end = function() {
              };
              function f(P, O) {
                this.iconv = O.iconv, this.inBase64 = !1, this.base64Accum = "";
              }
              for (var u = /[A-Za-z0-9\/+]/, h = [], d = 0; d < 256; d++)
                h[d] = u.test(String.fromCharCode(d));
              var i = "+".charCodeAt(0), p = "-".charCodeAt(0), y = "&".charCodeAt(0);
              f.prototype.write = function(P) {
                for (var O = "", T = 0, A = this.inBase64, E = this.base64Accum, D = 0; D < P.length; D++)
                  if (!A)
                    P[D] == i && (O += this.iconv.decode(P.slice(T, D), "ascii"), T = D + 1, A = !0);
                  else if (!h[P[D]]) {
                    if (D == T && P[D] == p)
                      O += "+";
                    else {
                      var b = E + this.iconv.decode(P.slice(T, D), "ascii");
                      O += this.iconv.decode(s.from(b, "base64"), "utf16-be");
                    }
                    P[D] != p && D--, T = D + 1, A = !1, E = "";
                  }
                if (!A)
                  O += this.iconv.decode(P.slice(T), "ascii");
                else {
                  var b = E + this.iconv.decode(P.slice(T), "ascii"), R = b.length - b.length % 8;
                  E = b.slice(R), b = b.slice(0, R), O += this.iconv.decode(s.from(b, "base64"), "utf16-be");
                }
                return this.inBase64 = A, this.base64Accum = E, O;
              }, f.prototype.end = function() {
                var P = "";
                return this.inBase64 && this.base64Accum.length > 0 && (P = this.iconv.decode(s.from(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", P;
              }, c.utf7imap = m;
              function m(P, O) {
                this.iconv = O;
              }
              m.prototype.encoder = e, m.prototype.decoder = x, m.prototype.bomAware = !0;
              function e(P, O) {
                this.iconv = O.iconv, this.inBase64 = !1, this.base64Accum = s.alloc(6), this.base64AccumIdx = 0;
              }
              e.prototype.write = function(P) {
                for (var O = this.inBase64, T = this.base64Accum, A = this.base64AccumIdx, E = s.alloc(P.length * 5 + 10), D = 0, b = 0; b < P.length; b++) {
                  var R = P.charCodeAt(b);
                  32 <= R && R <= 126 ? (O && (A > 0 && (D += E.write(T.slice(0, A).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), D), A = 0), E[D++] = p, O = !1), O || (E[D++] = R, R === y && (E[D++] = p))) : (O || (E[D++] = y, O = !0), O && (T[A++] = R >> 8, T[A++] = R & 255, A == T.length && (D += E.write(T.toString("base64").replace(/\//g, ","), D), A = 0)));
                }
                return this.inBase64 = O, this.base64AccumIdx = A, E.slice(0, D);
              }, e.prototype.end = function() {
                var P = s.alloc(10), O = 0;
                return this.inBase64 && (this.base64AccumIdx > 0 && (O += P.write(this.base64Accum.slice(0, this.base64AccumIdx).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), O), this.base64AccumIdx = 0), P[O++] = p, this.inBase64 = !1), P.slice(0, O);
              };
              function x(P, O) {
                this.iconv = O.iconv, this.inBase64 = !1, this.base64Accum = "";
              }
              var S = h.slice();
              S[",".charCodeAt(0)] = !0, x.prototype.write = function(P) {
                for (var O = "", T = 0, A = this.inBase64, E = this.base64Accum, D = 0; D < P.length; D++)
                  if (!A)
                    P[D] == y && (O += this.iconv.decode(P.slice(T, D), "ascii"), T = D + 1, A = !0);
                  else if (!S[P[D]]) {
                    if (D == T && P[D] == p)
                      O += "&";
                    else {
                      var b = E + this.iconv.decode(P.slice(T, D), "ascii").replace(/,/g, "/");
                      O += this.iconv.decode(s.from(b, "base64"), "utf16-be");
                    }
                    P[D] != p && D--, T = D + 1, A = !1, E = "";
                  }
                if (!A)
                  O += this.iconv.decode(P.slice(T), "ascii");
                else {
                  var b = E + this.iconv.decode(P.slice(T), "ascii").replace(/,/g, "/"), R = b.length - b.length % 8;
                  E = b.slice(R), b = b.slice(0, R), O += this.iconv.decode(s.from(b, "base64"), "utf16-be");
                }
                return this.inBase64 = A, this.base64Accum = E, O;
              }, x.prototype.end = function() {
                var P = "";
                return this.inBase64 && this.base64Accum.length > 0 && (P = this.iconv.decode(s.from(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", P;
              };
            }
          ),
          /***/
          59203: (
            /***/
            function(l, c) {
              var t = "\uFEFF";
              c.PrependBOM = s;
              function s(a, o) {
                this.encoder = a, this.addBOM = !0;
              }
              s.prototype.write = function(a) {
                return this.addBOM && (a = t + a, this.addBOM = !1), this.encoder.write(a);
              }, s.prototype.end = function() {
                return this.encoder.end();
              }, c.StripBOM = r;
              function r(a, o) {
                this.decoder = a, this.pass = !1, this.options = o || {};
              }
              r.prototype.write = function(a) {
                var o = this.decoder.write(a);
                return this.pass || !o || (o[0] === t && (o = o.slice(1), typeof this.options.stripBOM == "function" && this.options.stripBOM()), this.pass = !0), o;
              }, r.prototype.end = function() {
                return this.decoder.end();
              };
            }
          ),
          /***/
          32766: (
            /***/
            function(l, c, t) {
              var s = t(85543).Buffer, r = t(59203), a = l.exports;
              a.encodings = null, a.defaultCharUnicode = "ï¿½", a.defaultCharSingleByte = "?", a.encode = function(u, h, d) {
                u = "" + (u || "");
                var i = a.getEncoder(h, d), p = i.write(u), y = i.end();
                return y && y.length > 0 ? s.concat([p, y]) : p;
              }, a.decode = function(u, h, d) {
                typeof u == "string" && (a.skipDecodeWarning || (console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"), a.skipDecodeWarning = !0), u = s.from("" + (u || ""), "binary"));
                var i = a.getDecoder(h, d), p = i.write(u), y = i.end();
                return y ? p + y : p;
              }, a.encodingExists = function(u) {
                try {
                  return a.getCodec(u), !0;
                } catch (h) {
                  return !1;
                }
              }, a.toEncoding = a.encode, a.fromEncoding = a.decode, a._codecDataCache = {}, a.getCodec = function(u) {
                a.encodings || (a.encodings = t(88069));
                for (var h = a._canonicalizeEncoding(u), d = {}; ; ) {
                  var i = a._codecDataCache[h];
                  if (i)
                    return i;
                  var p = a.encodings[h];
                  switch (typeof p) {
                    case "string":
                      h = p;
                      break;
                    case "object":
                      for (var y in p)
                        d[y] = p[y];
                      d.encodingName || (d.encodingName = h), h = p.type;
                      break;
                    case "function":
                      return d.encodingName || (d.encodingName = h), i = new p(d, a), a._codecDataCache[d.encodingName] = i, i;
                    default:
                      throw new Error("Encoding not recognized: '" + u + "' (searched as: '" + h + "')");
                  }
                }
              }, a._canonicalizeEncoding = function(f) {
                return ("" + f).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g, "");
              }, a.getEncoder = function(u, h) {
                var d = a.getCodec(u), i = new d.encoder(h, d);
                return d.bomAware && h && h.addBOM && (i = new r.PrependBOM(i, h)), i;
              }, a.getDecoder = function(u, h) {
                var d = a.getCodec(u), i = new d.decoder(h, d);
                return d.bomAware && !(h && h.stripBOM === !1) && (i = new r.StripBOM(i, h)), i;
              }, a.enableStreamingAPI = function(u) {
                if (!a.supportsStreams) {
                  var h = t(44690)(u);
                  a.IconvLiteEncoderStream = h.IconvLiteEncoderStream, a.IconvLiteDecoderStream = h.IconvLiteDecoderStream, a.encodeStream = function(i, p) {
                    return new a.IconvLiteEncoderStream(a.getEncoder(i, p), p);
                  }, a.decodeStream = function(i, p) {
                    return new a.IconvLiteDecoderStream(a.getDecoder(i, p), p);
                  }, a.supportsStreams = !0;
                }
              };
              var o;
              try {
                o = t(25832);
              } catch (f) {
              }
              o && o.Transform ? a.enableStreamingAPI(o) : a.encodeStream = a.decodeStream = function() {
                throw new Error("iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.");
              };
            }
          ),
          /***/
          44690: (
            /***/
            function(l, c, t) {
              var s = t(85543).Buffer;
              l.exports = function(r) {
                var a = r.Transform;
                function o(u, h) {
                  this.conv = u, h = h || {}, h.decodeStrings = !1, a.call(this, h);
                }
                o.prototype = Object.create(a.prototype, {
                  constructor: { value: o }
                }), o.prototype._transform = function(u, h, d) {
                  if (typeof u != "string")
                    return d(new Error("Iconv encoding stream needs strings as its input."));
                  try {
                    var i = this.conv.write(u);
                    i && i.length && this.push(i), d();
                  } catch (p) {
                    d(p);
                  }
                }, o.prototype._flush = function(u) {
                  try {
                    var h = this.conv.end();
                    h && h.length && this.push(h), u();
                  } catch (d) {
                    u(d);
                  }
                }, o.prototype.collect = function(u) {
                  var h = [];
                  return this.on("error", u), this.on("data", function(d) {
                    h.push(d);
                  }), this.on("end", function() {
                    u(null, s.concat(h));
                  }), this;
                };
                function f(u, h) {
                  this.conv = u, h = h || {}, h.encoding = this.encoding = "utf8", a.call(this, h);
                }
                return f.prototype = Object.create(a.prototype, {
                  constructor: { value: f }
                }), f.prototype._transform = function(u, h, d) {
                  if (!s.isBuffer(u) && !(u instanceof Uint8Array))
                    return d(new Error("Iconv decoding stream needs buffers as its input."));
                  try {
                    var i = this.conv.write(u);
                    i && i.length && this.push(i, this.encoding), d();
                  } catch (p) {
                    d(p);
                  }
                }, f.prototype._flush = function(u) {
                  try {
                    var h = this.conv.end();
                    h && h.length && this.push(h, this.encoding), u();
                  } catch (d) {
                    u(d);
                  }
                }, f.prototype.collect = function(u) {
                  var h = "";
                  return this.on("error", u), this.on("data", function(d) {
                    h += d;
                  }), this.on("end", function() {
                    u(null, h);
                  }), this;
                }, {
                  IconvLiteEncoderStream: o,
                  IconvLiteDecoderStream: f
                };
              };
            }
          ),
          /***/
          74525: (
            /***/
            function(l, c) {
              /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
              c.read = function(t, s, r, a, o) {
                var f, u, h = o * 8 - a - 1, d = (1 << h) - 1, i = d >> 1, p = -7, y = r ? o - 1 : 0, m = r ? -1 : 1, e = t[s + y];
                for (y += m, f = e & (1 << -p) - 1, e >>= -p, p += h; p > 0; f = f * 256 + t[s + y], y += m, p -= 8)
                  ;
                for (u = f & (1 << -p) - 1, f >>= -p, p += a; p > 0; u = u * 256 + t[s + y], y += m, p -= 8)
                  ;
                if (f === 0)
                  f = 1 - i;
                else {
                  if (f === d)
                    return u ? NaN : (e ? -1 : 1) * (1 / 0);
                  u = u + Math.pow(2, a), f = f - i;
                }
                return (e ? -1 : 1) * u * Math.pow(2, f - a);
              }, c.write = function(t, s, r, a, o, f) {
                var u, h, d, i = f * 8 - o - 1, p = (1 << i) - 1, y = p >> 1, m = o === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, e = a ? 0 : f - 1, x = a ? 1 : -1, S = s < 0 || s === 0 && 1 / s < 0 ? 1 : 0;
                for (s = Math.abs(s), isNaN(s) || s === 1 / 0 ? (h = isNaN(s) ? 1 : 0, u = p) : (u = Math.floor(Math.log(s) / Math.LN2), s * (d = Math.pow(2, -u)) < 1 && (u--, d *= 2), u + y >= 1 ? s += m / d : s += m * Math.pow(2, 1 - y), s * d >= 2 && (u++, d /= 2), u + y >= p ? (h = 0, u = p) : u + y >= 1 ? (h = (s * d - 1) * Math.pow(2, o), u = u + y) : (h = s * Math.pow(2, y - 1) * Math.pow(2, o), u = 0)); o >= 8; t[r + e] = h & 255, e += x, h /= 256, o -= 8)
                  ;
                for (u = u << o | h, i += o; i > 0; t[r + e] = u & 255, e += x, u /= 256, i -= 8)
                  ;
                t[r + e - x] |= S * 128;
              };
            }
          ),
          /***/
          48575: (
            /***/
            function(l) {
              typeof Object.create == "function" ? l.exports = function(t, s) {
                s && (t.super_ = s, t.prototype = Object.create(s.prototype, {
                  constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                  }
                }));
              } : l.exports = function(t, s) {
                if (s) {
                  t.super_ = s;
                  var r = function() {
                  };
                  r.prototype = s.prototype, t.prototype = new r(), t.prototype.constructor = t;
                }
              };
            }
          ),
          /***/
          77092: (
            /***/
            function(l, c, t) {
              var s = t(44111)(), r = t(97615), a = r("Object.prototype.toString"), o = function(d) {
                return s && d && typeof d == "object" && Symbol.toStringTag in d ? !1 : a(d) === "[object Arguments]";
              }, f = function(d) {
                return o(d) ? !0 : d !== null && typeof d == "object" && typeof d.length == "number" && d.length >= 0 && a(d) !== "[object Array]" && a(d.callee) === "[object Function]";
              }, u = function() {
                return o(arguments);
              }();
              o.isLegacyArguments = f, l.exports = u ? o : f;
            }
          ),
          /***/
          5443: (
            /***/
            function(l) {
              var c = Function.prototype.toString, t = typeof Reflect == "object" && Reflect !== null && Reflect.apply, s, r;
              if (typeof t == "function" && typeof Object.defineProperty == "function")
                try {
                  s = Object.defineProperty({}, "length", {
                    get: function() {
                      throw r;
                    }
                  }), r = {}, t(function() {
                    throw 42;
                  }, null, s);
                } catch (O) {
                  O !== r && (t = null);
                }
              else
                t = null;
              var a = /^\s*class\b/, o = function(T) {
                try {
                  var A = c.call(T);
                  return a.test(A);
                } catch (E) {
                  return !1;
                }
              }, f = function(T) {
                try {
                  return o(T) ? !1 : (c.call(T), !0);
                } catch (A) {
                  return !1;
                }
              }, u = Object.prototype.toString, h = "[object Object]", d = "[object Function]", i = "[object GeneratorFunction]", p = "[object HTMLAllCollection]", y = "[object HTML document.all class]", m = "[object HTMLCollection]", e = typeof Symbol == "function" && !!Symbol.toStringTag, x = !(0 in [,]), S = function() {
                return !1;
              };
              if (typeof document == "object") {
                var P = document.all;
                u.call(P) === u.call(document.all) && (S = function(T) {
                  if ((x || !T) && (typeof T == "undefined" || typeof T == "object"))
                    try {
                      var A = u.call(T);
                      return (A === p || A === y || A === m || A === h) && T("") == null;
                    } catch (E) {
                    }
                  return !1;
                });
              }
              l.exports = t ? function(T) {
                if (S(T))
                  return !0;
                if (!T || typeof T != "function" && typeof T != "object")
                  return !1;
                try {
                  t(T, null, s);
                } catch (A) {
                  if (A !== r)
                    return !1;
                }
                return !o(T) && f(T);
              } : function(T) {
                if (S(T))
                  return !0;
                if (!T || typeof T != "function" && typeof T != "object")
                  return !1;
                if (e)
                  return f(T);
                if (o(T))
                  return !1;
                var A = u.call(T);
                return A !== d && A !== i && !/^\[object HTML/.test(A) ? !1 : f(T);
              };
            }
          ),
          /***/
          28659: (
            /***/
            function(l, c, t) {
              var s = Date.prototype.getDay, r = function(h) {
                try {
                  return s.call(h), !0;
                } catch (d) {
                  return !1;
                }
              }, a = Object.prototype.toString, o = "[object Date]", f = t(44111)();
              l.exports = function(h) {
                return typeof h != "object" || h === null ? !1 : f ? r(h) : a.call(h) === o;
              };
            }
          ),
          /***/
          97427: (
            /***/
            function(l, c, t) {
              var s = Object.prototype.toString, r = Function.prototype.toString, a = /^\s*(?:function)?\*/, o = t(44111)(), f = Object.getPrototypeOf, u = function() {
                if (!o)
                  return !1;
                try {
                  return Function("return function*() {}")();
                } catch (d) {
                }
              }, h;
              l.exports = function(i) {
                if (typeof i != "function")
                  return !1;
                if (a.test(r.call(i)))
                  return !0;
                if (!o) {
                  var p = s.call(i);
                  return p === "[object GeneratorFunction]";
                }
                if (!f)
                  return !1;
                if (typeof h == "undefined") {
                  var y = u();
                  h = y ? f(y) : !1;
                }
                return f(i) === h;
              };
            }
          ),
          /***/
          82100: (
            /***/
            function(l) {
              l.exports = function(t) {
                return t !== t;
              };
            }
          ),
          /***/
          98622: (
            /***/
            function(l, c, t) {
              var s = t(12550), r = t(19170), a = t(82100), o = t(64358), f = t(6232), u = s(o(), Number);
              r(u, {
                getPolyfill: o,
                implementation: a,
                shim: f
              }), l.exports = u;
            }
          ),
          /***/
          64358: (
            /***/
            function(l, c, t) {
              var s = t(82100);
              l.exports = function() {
                return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : s;
              };
            }
          ),
          /***/
          6232: (
            /***/
            function(l, c, t) {
              var s = t(19170), r = t(64358);
              l.exports = function() {
                var o = r();
                return s(Number, { isNaN: o }, {
                  isNaN: function() {
                    return Number.isNaN !== o;
                  }
                }), o;
              };
            }
          ),
          /***/
          55278: (
            /***/
            function(l, c, t) {
              var s = t(97615), r = t(44111)(), a, o, f, u;
              if (r) {
                a = s("Object.prototype.hasOwnProperty"), o = s("RegExp.prototype.exec"), f = {};
                var h = function() {
                  throw f;
                };
                u = {
                  toString: h,
                  valueOf: h
                }, typeof Symbol.toPrimitive == "symbol" && (u[Symbol.toPrimitive] = h);
              }
              var d = s("Object.prototype.toString"), i = Object.getOwnPropertyDescriptor, p = "[object RegExp]";
              l.exports = r ? function(m) {
                if (!m || typeof m != "object")
                  return !1;
                var e = i(m, "lastIndex"), x = e && a(e, "value");
                if (!x)
                  return !1;
                try {
                  o(m, u);
                } catch (S) {
                  return S === f;
                }
              } : function(m) {
                return !m || typeof m != "object" && typeof m != "function" ? !1 : d(m) === p;
              };
            }
          ),
          /***/
          82527: (
            /***/
            function(l, c, t) {
              var s = t(54010);
              l.exports = function(a) {
                return !!s(a);
              };
            }
          ),
          /***/
          98720: (
            /***/
            function(l) {
              var c = function(t) {
                return t !== t;
              };
              l.exports = function(s, r) {
                return s === 0 && r === 0 ? 1 / s === 1 / r : !!(s === r || c(s) && c(r));
              };
            }
          ),
          /***/
          7402: (
            /***/
            function(l, c, t) {
              var s = t(19170), r = t(12550), a = t(98720), o = t(25280), f = t(49129), u = r(o(), Object);
              s(u, {
                getPolyfill: o,
                implementation: a,
                shim: f
              }), l.exports = u;
            }
          ),
          /***/
          25280: (
            /***/
            function(l, c, t) {
              var s = t(98720);
              l.exports = function() {
                return typeof Object.is == "function" ? Object.is : s;
              };
            }
          ),
          /***/
          49129: (
            /***/
            function(l, c, t) {
              var s = t(25280), r = t(19170);
              l.exports = function() {
                var o = s();
                return r(Object, { is: o }, {
                  is: function() {
                    return Object.is !== o;
                  }
                }), o;
              };
            }
          ),
          /***/
          78383: (
            /***/
            function(l, c, t) {
              var s;
              if (!Object.keys) {
                var r = Object.prototype.hasOwnProperty, a = Object.prototype.toString, o = t(84418), f = Object.prototype.propertyIsEnumerable, u = !f.call({ toString: null }, "toString"), h = f.call(function() {
                }, "prototype"), d = [
                  "toString",
                  "toLocaleString",
                  "valueOf",
                  "hasOwnProperty",
                  "isPrototypeOf",
                  "propertyIsEnumerable",
                  "constructor"
                ], i = function(e) {
                  var x = e.constructor;
                  return x && x.prototype === e;
                }, p = {
                  $applicationCache: !0,
                  $console: !0,
                  $external: !0,
                  $frame: !0,
                  $frameElement: !0,
                  $frames: !0,
                  $innerHeight: !0,
                  $innerWidth: !0,
                  $onmozfullscreenchange: !0,
                  $onmozfullscreenerror: !0,
                  $outerHeight: !0,
                  $outerWidth: !0,
                  $pageXOffset: !0,
                  $pageYOffset: !0,
                  $parent: !0,
                  $scrollLeft: !0,
                  $scrollTop: !0,
                  $scrollX: !0,
                  $scrollY: !0,
                  $self: !0,
                  $webkitIndexedDB: !0,
                  $webkitStorageInfo: !0,
                  $window: !0
                }, y = function() {
                  if (typeof window == "undefined")
                    return !1;
                  for (var e in window)
                    try {
                      if (!p["$" + e] && r.call(window, e) && window[e] !== null && typeof window[e] == "object")
                        try {
                          i(window[e]);
                        } catch (x) {
                          return !0;
                        }
                    } catch (x) {
                      return !0;
                    }
                  return !1;
                }(), m = function(e) {
                  if (typeof window == "undefined" || !y)
                    return i(e);
                  try {
                    return i(e);
                  } catch (x) {
                    return !1;
                  }
                };
                s = function(x) {
                  var S = x !== null && typeof x == "object", P = a.call(x) === "[object Function]", O = o(x), T = S && a.call(x) === "[object String]", A = [];
                  if (!S && !P && !O)
                    throw new TypeError("Object.keys called on a non-object");
                  var E = h && P;
                  if (T && x.length > 0 && !r.call(x, 0))
                    for (var D = 0; D < x.length; ++D)
                      A.push(String(D));
                  if (O && x.length > 0)
                    for (var b = 0; b < x.length; ++b)
                      A.push(String(b));
                  else
                    for (var R in x)
                      !(E && R === "prototype") && r.call(x, R) && A.push(String(R));
                  if (u)
                    for (var L = m(x), N = 0; N < d.length; ++N)
                      !(L && d[N] === "constructor") && r.call(x, d[N]) && A.push(d[N]);
                  return A;
                };
              }
              l.exports = s;
            }
          ),
          /***/
          806: (
            /***/
            function(l, c, t) {
              var s = Array.prototype.slice, r = t(84418), a = Object.keys, o = a ? function(h) {
                return a(h);
              } : t(78383), f = Object.keys;
              o.shim = function() {
                if (Object.keys) {
                  var h = function() {
                    var d = Object.keys(arguments);
                    return d && d.length === arguments.length;
                  }(1, 2);
                  h || (Object.keys = function(i) {
                    return r(i) ? f(s.call(i)) : f(i);
                  });
                } else
                  Object.keys = o;
                return Object.keys || o;
              }, l.exports = o;
            }
          ),
          /***/
          84418: (
            /***/
            function(l) {
              var c = Object.prototype.toString;
              l.exports = function(s) {
                var r = c.call(s), a = r === "[object Arguments]";
                return a || (a = r !== "[object Array]" && s !== null && typeof s == "object" && typeof s.length == "number" && s.length >= 0 && c.call(s.callee) === "[object Function]"), a;
              };
            }
          ),
          /***/
          22148: (
            /***/
            function(l, c, t) {
              var s = t(806), r = t(65682)(), a = t(97615), o = Object, f = a("Array.prototype.push"), u = a("Object.prototype.propertyIsEnumerable"), h = r ? Object.getOwnPropertySymbols : null;
              l.exports = function(i, p) {
                if (i == null)
                  throw new TypeError("target must be an object");
                var y = o(i);
                if (arguments.length === 1)
                  return y;
                for (var m = 1; m < arguments.length; ++m) {
                  var e = o(arguments[m]), x = s(e), S = r && (Object.getOwnPropertySymbols || h);
                  if (S)
                    for (var P = S(e), O = 0; O < P.length; ++O) {
                      var T = P[O];
                      u(e, T) && f(x, T);
                    }
                  for (var A = 0; A < x.length; ++A) {
                    var E = x[A];
                    if (u(e, E)) {
                      var D = e[E];
                      y[E] = D;
                    }
                  }
                }
                return y;
              };
            }
          ),
          /***/
          10293: (
            /***/
            function(l, c, t) {
              var s = t(22148), r = function() {
                if (!Object.assign)
                  return !1;
                for (var o = "abcdefghijklmnopqrst", f = o.split(""), u = {}, h = 0; h < f.length; ++h)
                  u[f[h]] = f[h];
                var d = Object.assign({}, u), i = "";
                for (var p in d)
                  i += p;
                return o !== i;
              }, a = function() {
                if (!Object.assign || !Object.preventExtensions)
                  return !1;
                var o = Object.preventExtensions({ 1: 2 });
                try {
                  Object.assign(o, "xy");
                } catch (f) {
                  return o[1] === "y";
                }
                return !1;
              };
              l.exports = function() {
                return !Object.assign || r() || a() ? s : Object.assign;
              };
            }
          ),
          /***/
          69034: (
            /***/
            function(l, c) {
              var t = typeof Uint8Array != "undefined" && typeof Uint16Array != "undefined" && typeof Int32Array != "undefined";
              function s(o, f) {
                return Object.prototype.hasOwnProperty.call(o, f);
              }
              c.assign = function(o) {
                for (var f = Array.prototype.slice.call(arguments, 1); f.length; ) {
                  var u = f.shift();
                  if (u) {
                    if (typeof u != "object")
                      throw new TypeError(u + "must be non-object");
                    for (var h in u)
                      s(u, h) && (o[h] = u[h]);
                  }
                }
                return o;
              }, c.shrinkBuf = function(o, f) {
                return o.length === f ? o : o.subarray ? o.subarray(0, f) : (o.length = f, o);
              };
              var r = {
                arraySet: function(o, f, u, h, d) {
                  if (f.subarray && o.subarray) {
                    o.set(f.subarray(u, u + h), d);
                    return;
                  }
                  for (var i = 0; i < h; i++)
                    o[d + i] = f[u + i];
                },
                // Join array of chunks to single array.
                flattenChunks: function(o) {
                  var f, u, h, d, i, p;
                  for (h = 0, f = 0, u = o.length; f < u; f++)
                    h += o[f].length;
                  for (p = new Uint8Array(h), d = 0, f = 0, u = o.length; f < u; f++)
                    i = o[f], p.set(i, d), d += i.length;
                  return p;
                }
              }, a = {
                arraySet: function(o, f, u, h, d) {
                  for (var i = 0; i < h; i++)
                    o[d + i] = f[u + i];
                },
                // Join array of chunks to single array.
                flattenChunks: function(o) {
                  return [].concat.apply([], o);
                }
              };
              c.setTyped = function(o) {
                o ? (c.Buf8 = Uint8Array, c.Buf16 = Uint16Array, c.Buf32 = Int32Array, c.assign(c, r)) : (c.Buf8 = Array, c.Buf16 = Array, c.Buf32 = Array, c.assign(c, a));
              }, c.setTyped(t);
            }
          ),
          /***/
          51475: (
            /***/
            function(l) {
              function c(t, s, r, a) {
                for (var o = t & 65535 | 0, f = t >>> 16 & 65535 | 0, u = 0; r !== 0; ) {
                  u = r > 2e3 ? 2e3 : r, r -= u;
                  do
                    o = o + s[a++] | 0, f = f + o | 0;
                  while (--u);
                  o %= 65521, f %= 65521;
                }
                return o | f << 16 | 0;
              }
              l.exports = c;
            }
          ),
          /***/
          40549: (
            /***/
            function(l) {
              l.exports = {
                /* Allowed flush values; see deflate() and inflate() below for details */
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                /* Return codes for the compression/decompression functions. Negative values
                * are errors, positive values are used for special but normal events.
                */
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                //Z_MEM_ERROR:     -4,
                Z_BUF_ERROR: -5,
                //Z_VERSION_ERROR: -6,
                /* compression levels */
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                /* Possible values of the data_type field (though see inflate()) */
                Z_BINARY: 0,
                Z_TEXT: 1,
                //Z_ASCII:                1, // = Z_TEXT (deprecated)
                Z_UNKNOWN: 2,
                /* The deflate compression method */
                Z_DEFLATED: 8
                //Z_NULL:                 null // Use -1 or null inline, depending on var type
              };
            }
          ),
          /***/
          38621: (
            /***/
            function(l) {
              function c() {
                for (var r, a = [], o = 0; o < 256; o++) {
                  r = o;
                  for (var f = 0; f < 8; f++)
                    r = r & 1 ? 3988292384 ^ r >>> 1 : r >>> 1;
                  a[o] = r;
                }
                return a;
              }
              var t = c();
              function s(r, a, o, f) {
                var u = t, h = f + o;
                r ^= -1;
                for (var d = f; d < h; d++)
                  r = r >>> 8 ^ u[(r ^ a[d]) & 255];
                return r ^ -1;
              }
              l.exports = s;
            }
          ),
          /***/
          24349: (
            /***/
            function(l, c, t) {
              var s = t(69034), r = t(70376), a = t(51475), o = t(38621), f = t(44594), u = 0, h = 1, d = 3, i = 4, p = 5, y = 0, m = 1, e = -2, x = -3, S = -5, P = -1, O = 1, T = 2, A = 3, E = 4, D = 0, b = 2, R = 8, L = 9, N = 15, M = 8, K = 29, ct = 256, J = ct + 1 + K, nt = 30, yt = 19, bt = 2 * J + 1, Tt = 15, It = 3, Lt = 258, zt = Lt + It + 1, Q = 32, gt = 42, ht = 69, st = 73, xt = 91, G = 103, Ft = 113, z = 666, C = 1, k = 2, V = 3, ot = 4, et = 3;
              function tt(_, Qt) {
                return _.msg = f[Qt], Qt;
              }
              function At(_) {
                return (_ << 1) - (_ > 4 ? 9 : 0);
              }
              function Nt(_) {
                for (var Qt = _.length; --Qt >= 0; )
                  _[Qt] = 0;
              }
              function Kt(_) {
                var Qt = _.state, ee = Qt.pending;
                ee > _.avail_out && (ee = _.avail_out), ee !== 0 && (s.arraySet(_.output, Qt.pending_buf, Qt.pending_out, ee, _.next_out), _.next_out += ee, Qt.pending_out += ee, _.total_out += ee, _.avail_out -= ee, Qt.pending -= ee, Qt.pending === 0 && (Qt.pending_out = 0));
              }
              function Vt(_, Qt) {
                r._tr_flush_block(_, _.block_start >= 0 ? _.block_start : -1, _.strstart - _.block_start, Qt), _.block_start = _.strstart, Kt(_.strm);
              }
              function Ot(_, Qt) {
                _.pending_buf[_.pending++] = Qt;
              }
              function ie(_, Qt) {
                _.pending_buf[_.pending++] = Qt >>> 8 & 255, _.pending_buf[_.pending++] = Qt & 255;
              }
              function Ae(_, Qt, ee, Et) {
                var jt = _.avail_in;
                return jt > Et && (jt = Et), jt === 0 ? 0 : (_.avail_in -= jt, s.arraySet(Qt, _.input, _.next_in, jt, ee), _.state.wrap === 1 ? _.adler = a(_.adler, Qt, jt, ee) : _.state.wrap === 2 && (_.adler = o(_.adler, Qt, jt, ee)), _.next_in += jt, _.total_in += jt, jt);
              }
              function be(_, Qt) {
                var ee = _.max_chain_length, Et = _.strstart, jt, le, Ne = _.prev_length, Oe = _.nice_match, Ue = _.strstart > _.w_size - zt ? _.strstart - (_.w_size - zt) : 0, Me = _.window, on = _.w_mask, er = _.prev, Ye = _.strstart + Lt, Cr = Me[Et + Ne - 1], Pr = Me[Et + Ne];
                _.prev_length >= _.good_match && (ee >>= 2), Oe > _.lookahead && (Oe = _.lookahead);
                do
                  if (jt = Qt, !(Me[jt + Ne] !== Pr || Me[jt + Ne - 1] !== Cr || Me[jt] !== Me[Et] || Me[++jt] !== Me[Et + 1])) {
                    Et += 2, jt++;
                    do
                      ;
                    while (Me[++Et] === Me[++jt] && Me[++Et] === Me[++jt] && Me[++Et] === Me[++jt] && Me[++Et] === Me[++jt] && Me[++Et] === Me[++jt] && Me[++Et] === Me[++jt] && Me[++Et] === Me[++jt] && Me[++Et] === Me[++jt] && Et < Ye);
                    if (le = Lt - (Ye - Et), Et = Ye - Lt, le > Ne) {
                      if (_.match_start = Qt, Ne = le, le >= Oe)
                        break;
                      Cr = Me[Et + Ne - 1], Pr = Me[Et + Ne];
                    }
                  }
                while ((Qt = er[Qt & on]) > Ue && --ee !== 0);
                return Ne <= _.lookahead ? Ne : _.lookahead;
              }
              function de(_) {
                var Qt = _.w_size, ee, Et, jt, le, Ne;
                do {
                  if (le = _.window_size - _.lookahead - _.strstart, _.strstart >= Qt + (Qt - zt)) {
                    s.arraySet(_.window, _.window, Qt, Qt, 0), _.match_start -= Qt, _.strstart -= Qt, _.block_start -= Qt, Et = _.hash_size, ee = Et;
                    do
                      jt = _.head[--ee], _.head[ee] = jt >= Qt ? jt - Qt : 0;
                    while (--Et);
                    Et = Qt, ee = Et;
                    do
                      jt = _.prev[--ee], _.prev[ee] = jt >= Qt ? jt - Qt : 0;
                    while (--Et);
                    le += Qt;
                  }
                  if (_.strm.avail_in === 0)
                    break;
                  if (Et = Ae(_.strm, _.window, _.strstart + _.lookahead, le), _.lookahead += Et, _.lookahead + _.insert >= It)
                    for (Ne = _.strstart - _.insert, _.ins_h = _.window[Ne], _.ins_h = (_.ins_h << _.hash_shift ^ _.window[Ne + 1]) & _.hash_mask; _.insert && (_.ins_h = (_.ins_h << _.hash_shift ^ _.window[Ne + It - 1]) & _.hash_mask, _.prev[Ne & _.w_mask] = _.head[_.ins_h], _.head[_.ins_h] = Ne, Ne++, _.insert--, !(_.lookahead + _.insert < It)); )
                      ;
                } while (_.lookahead < zt && _.strm.avail_in !== 0);
              }
              function Se(_, Qt) {
                var ee = 65535;
                for (ee > _.pending_buf_size - 5 && (ee = _.pending_buf_size - 5); ; ) {
                  if (_.lookahead <= 1) {
                    if (de(_), _.lookahead === 0 && Qt === u)
                      return C;
                    if (_.lookahead === 0)
                      break;
                  }
                  _.strstart += _.lookahead, _.lookahead = 0;
                  var Et = _.block_start + ee;
                  if ((_.strstart === 0 || _.strstart >= Et) && (_.lookahead = _.strstart - Et, _.strstart = Et, Vt(_, !1), _.strm.avail_out === 0) || _.strstart - _.block_start >= _.w_size - zt && (Vt(_, !1), _.strm.avail_out === 0))
                    return C;
                }
                return _.insert = 0, Qt === i ? (Vt(_, !0), _.strm.avail_out === 0 ? V : ot) : (_.strstart > _.block_start && (Vt(_, !1), _.strm.avail_out === 0), C);
              }
              function Wt(_, Qt) {
                for (var ee, Et; ; ) {
                  if (_.lookahead < zt) {
                    if (de(_), _.lookahead < zt && Qt === u)
                      return C;
                    if (_.lookahead === 0)
                      break;
                  }
                  if (ee = 0, _.lookahead >= It && (_.ins_h = (_.ins_h << _.hash_shift ^ _.window[_.strstart + It - 1]) & _.hash_mask, ee = _.prev[_.strstart & _.w_mask] = _.head[_.ins_h], _.head[_.ins_h] = _.strstart), ee !== 0 && _.strstart - ee <= _.w_size - zt && (_.match_length = be(_, ee)), _.match_length >= It)
                    if (Et = r._tr_tally(_, _.strstart - _.match_start, _.match_length - It), _.lookahead -= _.match_length, _.match_length <= _.max_lazy_match && _.lookahead >= It) {
                      _.match_length--;
                      do
                        _.strstart++, _.ins_h = (_.ins_h << _.hash_shift ^ _.window[_.strstart + It - 1]) & _.hash_mask, ee = _.prev[_.strstart & _.w_mask] = _.head[_.ins_h], _.head[_.ins_h] = _.strstart;
                      while (--_.match_length !== 0);
                      _.strstart++;
                    } else
                      _.strstart += _.match_length, _.match_length = 0, _.ins_h = _.window[_.strstart], _.ins_h = (_.ins_h << _.hash_shift ^ _.window[_.strstart + 1]) & _.hash_mask;
                  else
                    Et = r._tr_tally(_, 0, _.window[_.strstart]), _.lookahead--, _.strstart++;
                  if (Et && (Vt(_, !1), _.strm.avail_out === 0))
                    return C;
                }
                return _.insert = _.strstart < It - 1 ? _.strstart : It - 1, Qt === i ? (Vt(_, !0), _.strm.avail_out === 0 ? V : ot) : _.last_lit && (Vt(_, !1), _.strm.avail_out === 0) ? C : k;
              }
              function _t(_, Qt) {
                for (var ee, Et, jt; ; ) {
                  if (_.lookahead < zt) {
                    if (de(_), _.lookahead < zt && Qt === u)
                      return C;
                    if (_.lookahead === 0)
                      break;
                  }
                  if (ee = 0, _.lookahead >= It && (_.ins_h = (_.ins_h << _.hash_shift ^ _.window[_.strstart + It - 1]) & _.hash_mask, ee = _.prev[_.strstart & _.w_mask] = _.head[_.ins_h], _.head[_.ins_h] = _.strstart), _.prev_length = _.match_length, _.prev_match = _.match_start, _.match_length = It - 1, ee !== 0 && _.prev_length < _.max_lazy_match && _.strstart - ee <= _.w_size - zt && (_.match_length = be(_, ee), _.match_length <= 5 && (_.strategy === O || _.match_length === It && _.strstart - _.match_start > 4096) && (_.match_length = It - 1)), _.prev_length >= It && _.match_length <= _.prev_length) {
                    jt = _.strstart + _.lookahead - It, Et = r._tr_tally(_, _.strstart - 1 - _.prev_match, _.prev_length - It), _.lookahead -= _.prev_length - 1, _.prev_length -= 2;
                    do
                      ++_.strstart <= jt && (_.ins_h = (_.ins_h << _.hash_shift ^ _.window[_.strstart + It - 1]) & _.hash_mask, ee = _.prev[_.strstart & _.w_mask] = _.head[_.ins_h], _.head[_.ins_h] = _.strstart);
                    while (--_.prev_length !== 0);
                    if (_.match_available = 0, _.match_length = It - 1, _.strstart++, Et && (Vt(_, !1), _.strm.avail_out === 0))
                      return C;
                  } else if (_.match_available) {
                    if (Et = r._tr_tally(_, 0, _.window[_.strstart - 1]), Et && Vt(_, !1), _.strstart++, _.lookahead--, _.strm.avail_out === 0)
                      return C;
                  } else
                    _.match_available = 1, _.strstart++, _.lookahead--;
                }
                return _.match_available && (Et = r._tr_tally(_, 0, _.window[_.strstart - 1]), _.match_available = 0), _.insert = _.strstart < It - 1 ? _.strstart : It - 1, Qt === i ? (Vt(_, !0), _.strm.avail_out === 0 ? V : ot) : _.last_lit && (Vt(_, !1), _.strm.avail_out === 0) ? C : k;
              }
              function ce(_, Qt) {
                for (var ee, Et, jt, le, Ne = _.window; ; ) {
                  if (_.lookahead <= Lt) {
                    if (de(_), _.lookahead <= Lt && Qt === u)
                      return C;
                    if (_.lookahead === 0)
                      break;
                  }
                  if (_.match_length = 0, _.lookahead >= It && _.strstart > 0 && (jt = _.strstart - 1, Et = Ne[jt], Et === Ne[++jt] && Et === Ne[++jt] && Et === Ne[++jt])) {
                    le = _.strstart + Lt;
                    do
                      ;
                    while (Et === Ne[++jt] && Et === Ne[++jt] && Et === Ne[++jt] && Et === Ne[++jt] && Et === Ne[++jt] && Et === Ne[++jt] && Et === Ne[++jt] && Et === Ne[++jt] && jt < le);
                    _.match_length = Lt - (le - jt), _.match_length > _.lookahead && (_.match_length = _.lookahead);
                  }
                  if (_.match_length >= It ? (ee = r._tr_tally(_, 1, _.match_length - It), _.lookahead -= _.match_length, _.strstart += _.match_length, _.match_length = 0) : (ee = r._tr_tally(_, 0, _.window[_.strstart]), _.lookahead--, _.strstart++), ee && (Vt(_, !1), _.strm.avail_out === 0))
                    return C;
                }
                return _.insert = 0, Qt === i ? (Vt(_, !0), _.strm.avail_out === 0 ? V : ot) : _.last_lit && (Vt(_, !1), _.strm.avail_out === 0) ? C : k;
              }
              function pe(_, Qt) {
                for (var ee; ; ) {
                  if (_.lookahead === 0 && (de(_), _.lookahead === 0)) {
                    if (Qt === u)
                      return C;
                    break;
                  }
                  if (_.match_length = 0, ee = r._tr_tally(_, 0, _.window[_.strstart]), _.lookahead--, _.strstart++, ee && (Vt(_, !1), _.strm.avail_out === 0))
                    return C;
                }
                return _.insert = 0, Qt === i ? (Vt(_, !0), _.strm.avail_out === 0 ? V : ot) : _.last_lit && (Vt(_, !1), _.strm.avail_out === 0) ? C : k;
              }
              function we(_, Qt, ee, Et, jt) {
                this.good_length = _, this.max_lazy = Qt, this.nice_length = ee, this.max_chain = Et, this.func = jt;
              }
              var Be;
              Be = [
                /*      good lazy nice chain */
                new we(0, 0, 0, 0, Se),
                /* 0 store only */
                new we(4, 4, 8, 4, Wt),
                /* 1 max speed, no lazy matches */
                new we(4, 5, 16, 8, Wt),
                /* 2 */
                new we(4, 6, 32, 32, Wt),
                /* 3 */
                new we(4, 4, 16, 16, _t),
                /* 4 lazy matches */
                new we(8, 16, 32, 32, _t),
                /* 5 */
                new we(8, 16, 128, 128, _t),
                /* 6 */
                new we(8, 32, 128, 256, _t),
                /* 7 */
                new we(32, 128, 258, 1024, _t),
                /* 8 */
                new we(32, 258, 258, 4096, _t)
                /* 9 max compression */
              ];
              function Ie(_) {
                _.window_size = 2 * _.w_size, Nt(_.head), _.max_lazy_match = Be[_.level].max_lazy, _.good_match = Be[_.level].good_length, _.nice_match = Be[_.level].nice_length, _.max_chain_length = Be[_.level].max_chain, _.strstart = 0, _.block_start = 0, _.lookahead = 0, _.insert = 0, _.match_length = _.prev_length = It - 1, _.match_available = 0, _.ins_h = 0;
              }
              function Dt() {
                this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = R, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new s.Buf16(bt * 2), this.dyn_dtree = new s.Buf16((2 * nt + 1) * 2), this.bl_tree = new s.Buf16((2 * yt + 1) * 2), Nt(this.dyn_ltree), Nt(this.dyn_dtree), Nt(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new s.Buf16(Tt + 1), this.heap = new s.Buf16(2 * J + 1), Nt(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new s.Buf16(2 * J + 1), Nt(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
              }
              function ue(_) {
                var Qt;
                return !_ || !_.state ? tt(_, e) : (_.total_in = _.total_out = 0, _.data_type = b, Qt = _.state, Qt.pending = 0, Qt.pending_out = 0, Qt.wrap < 0 && (Qt.wrap = -Qt.wrap), Qt.status = Qt.wrap ? gt : Ft, _.adler = Qt.wrap === 2 ? 0 : 1, Qt.last_flush = u, r._tr_init(Qt), y);
              }
              function lt(_) {
                var Qt = ue(_);
                return Qt === y && Ie(_.state), Qt;
              }
              function Y(_, Qt) {
                return !_ || !_.state || _.state.wrap !== 2 ? e : (_.state.gzhead = Qt, y);
              }
              function j(_, Qt, ee, Et, jt, le) {
                if (!_)
                  return e;
                var Ne = 1;
                if (Qt === P && (Qt = 6), Et < 0 ? (Ne = 0, Et = -Et) : Et > 15 && (Ne = 2, Et -= 16), jt < 1 || jt > L || ee !== R || Et < 8 || Et > 15 || Qt < 0 || Qt > 9 || le < 0 || le > E)
                  return tt(_, e);
                Et === 8 && (Et = 9);
                var Oe = new Dt();
                return _.state = Oe, Oe.strm = _, Oe.wrap = Ne, Oe.gzhead = null, Oe.w_bits = Et, Oe.w_size = 1 << Oe.w_bits, Oe.w_mask = Oe.w_size - 1, Oe.hash_bits = jt + 7, Oe.hash_size = 1 << Oe.hash_bits, Oe.hash_mask = Oe.hash_size - 1, Oe.hash_shift = ~~((Oe.hash_bits + It - 1) / It), Oe.window = new s.Buf8(Oe.w_size * 2), Oe.head = new s.Buf16(Oe.hash_size), Oe.prev = new s.Buf16(Oe.w_size), Oe.lit_bufsize = 1 << jt + 6, Oe.pending_buf_size = Oe.lit_bufsize * 4, Oe.pending_buf = new s.Buf8(Oe.pending_buf_size), Oe.d_buf = 1 * Oe.lit_bufsize, Oe.l_buf = 3 * Oe.lit_bufsize, Oe.level = Qt, Oe.strategy = le, Oe.method = ee, lt(_);
              }
              function wt(_, Qt) {
                return j(_, Qt, R, N, M, D);
              }
              function it(_, Qt) {
                var ee, Et, jt, le;
                if (!_ || !_.state || Qt > p || Qt < 0)
                  return _ ? tt(_, e) : e;
                if (Et = _.state, !_.output || !_.input && _.avail_in !== 0 || Et.status === z && Qt !== i)
                  return tt(_, _.avail_out === 0 ? S : e);
                if (Et.strm = _, ee = Et.last_flush, Et.last_flush = Qt, Et.status === gt)
                  if (Et.wrap === 2)
                    _.adler = 0, Ot(Et, 31), Ot(Et, 139), Ot(Et, 8), Et.gzhead ? (Ot(
                      Et,
                      (Et.gzhead.text ? 1 : 0) + (Et.gzhead.hcrc ? 2 : 0) + (Et.gzhead.extra ? 4 : 0) + (Et.gzhead.name ? 8 : 0) + (Et.gzhead.comment ? 16 : 0)
                    ), Ot(Et, Et.gzhead.time & 255), Ot(Et, Et.gzhead.time >> 8 & 255), Ot(Et, Et.gzhead.time >> 16 & 255), Ot(Et, Et.gzhead.time >> 24 & 255), Ot(Et, Et.level === 9 ? 2 : Et.strategy >= T || Et.level < 2 ? 4 : 0), Ot(Et, Et.gzhead.os & 255), Et.gzhead.extra && Et.gzhead.extra.length && (Ot(Et, Et.gzhead.extra.length & 255), Ot(Et, Et.gzhead.extra.length >> 8 & 255)), Et.gzhead.hcrc && (_.adler = o(_.adler, Et.pending_buf, Et.pending, 0)), Et.gzindex = 0, Et.status = ht) : (Ot(Et, 0), Ot(Et, 0), Ot(Et, 0), Ot(Et, 0), Ot(Et, 0), Ot(Et, Et.level === 9 ? 2 : Et.strategy >= T || Et.level < 2 ? 4 : 0), Ot(Et, et), Et.status = Ft);
                  else {
                    var Ne = R + (Et.w_bits - 8 << 4) << 8, Oe = -1;
                    Et.strategy >= T || Et.level < 2 ? Oe = 0 : Et.level < 6 ? Oe = 1 : Et.level === 6 ? Oe = 2 : Oe = 3, Ne |= Oe << 6, Et.strstart !== 0 && (Ne |= Q), Ne += 31 - Ne % 31, Et.status = Ft, ie(Et, Ne), Et.strstart !== 0 && (ie(Et, _.adler >>> 16), ie(Et, _.adler & 65535)), _.adler = 1;
                  }
                if (Et.status === ht)
                  if (Et.gzhead.extra) {
                    for (jt = Et.pending; Et.gzindex < (Et.gzhead.extra.length & 65535) && !(Et.pending === Et.pending_buf_size && (Et.gzhead.hcrc && Et.pending > jt && (_.adler = o(_.adler, Et.pending_buf, Et.pending - jt, jt)), Kt(_), jt = Et.pending, Et.pending === Et.pending_buf_size)); )
                      Ot(Et, Et.gzhead.extra[Et.gzindex] & 255), Et.gzindex++;
                    Et.gzhead.hcrc && Et.pending > jt && (_.adler = o(_.adler, Et.pending_buf, Et.pending - jt, jt)), Et.gzindex === Et.gzhead.extra.length && (Et.gzindex = 0, Et.status = st);
                  } else
                    Et.status = st;
                if (Et.status === st)
                  if (Et.gzhead.name) {
                    jt = Et.pending;
                    do {
                      if (Et.pending === Et.pending_buf_size && (Et.gzhead.hcrc && Et.pending > jt && (_.adler = o(_.adler, Et.pending_buf, Et.pending - jt, jt)), Kt(_), jt = Et.pending, Et.pending === Et.pending_buf_size)) {
                        le = 1;
                        break;
                      }
                      Et.gzindex < Et.gzhead.name.length ? le = Et.gzhead.name.charCodeAt(Et.gzindex++) & 255 : le = 0, Ot(Et, le);
                    } while (le !== 0);
                    Et.gzhead.hcrc && Et.pending > jt && (_.adler = o(_.adler, Et.pending_buf, Et.pending - jt, jt)), le === 0 && (Et.gzindex = 0, Et.status = xt);
                  } else
                    Et.status = xt;
                if (Et.status === xt)
                  if (Et.gzhead.comment) {
                    jt = Et.pending;
                    do {
                      if (Et.pending === Et.pending_buf_size && (Et.gzhead.hcrc && Et.pending > jt && (_.adler = o(_.adler, Et.pending_buf, Et.pending - jt, jt)), Kt(_), jt = Et.pending, Et.pending === Et.pending_buf_size)) {
                        le = 1;
                        break;
                      }
                      Et.gzindex < Et.gzhead.comment.length ? le = Et.gzhead.comment.charCodeAt(Et.gzindex++) & 255 : le = 0, Ot(Et, le);
                    } while (le !== 0);
                    Et.gzhead.hcrc && Et.pending > jt && (_.adler = o(_.adler, Et.pending_buf, Et.pending - jt, jt)), le === 0 && (Et.status = G);
                  } else
                    Et.status = G;
                if (Et.status === G && (Et.gzhead.hcrc ? (Et.pending + 2 > Et.pending_buf_size && Kt(_), Et.pending + 2 <= Et.pending_buf_size && (Ot(Et, _.adler & 255), Ot(Et, _.adler >> 8 & 255), _.adler = 0, Et.status = Ft)) : Et.status = Ft), Et.pending !== 0) {
                  if (Kt(_), _.avail_out === 0)
                    return Et.last_flush = -1, y;
                } else if (_.avail_in === 0 && At(Qt) <= At(ee) && Qt !== i)
                  return tt(_, S);
                if (Et.status === z && _.avail_in !== 0)
                  return tt(_, S);
                if (_.avail_in !== 0 || Et.lookahead !== 0 || Qt !== u && Et.status !== z) {
                  var Ue = Et.strategy === T ? pe(Et, Qt) : Et.strategy === A ? ce(Et, Qt) : Be[Et.level].func(Et, Qt);
                  if ((Ue === V || Ue === ot) && (Et.status = z), Ue === C || Ue === V)
                    return _.avail_out === 0 && (Et.last_flush = -1), y;
                  if (Ue === k && (Qt === h ? r._tr_align(Et) : Qt !== p && (r._tr_stored_block(Et, 0, 0, !1), Qt === d && (Nt(Et.head), Et.lookahead === 0 && (Et.strstart = 0, Et.block_start = 0, Et.insert = 0))), Kt(_), _.avail_out === 0))
                    return Et.last_flush = -1, y;
                }
                return Qt !== i ? y : Et.wrap <= 0 ? m : (Et.wrap === 2 ? (Ot(Et, _.adler & 255), Ot(Et, _.adler >> 8 & 255), Ot(Et, _.adler >> 16 & 255), Ot(Et, _.adler >> 24 & 255), Ot(Et, _.total_in & 255), Ot(Et, _.total_in >> 8 & 255), Ot(Et, _.total_in >> 16 & 255), Ot(Et, _.total_in >> 24 & 255)) : (ie(Et, _.adler >>> 16), ie(Et, _.adler & 65535)), Kt(_), Et.wrap > 0 && (Et.wrap = -Et.wrap), Et.pending !== 0 ? y : m);
              }
              function Ht(_) {
                var Qt;
                return !_ || !_.state ? e : (Qt = _.state.status, Qt !== gt && Qt !== ht && Qt !== st && Qt !== xt && Qt !== G && Qt !== Ft && Qt !== z ? tt(_, e) : (_.state = null, Qt === Ft ? tt(_, x) : y));
              }
              function te(_, Qt) {
                var ee = Qt.length, Et, jt, le, Ne, Oe, Ue, Me, on;
                if (!_ || !_.state || (Et = _.state, Ne = Et.wrap, Ne === 2 || Ne === 1 && Et.status !== gt || Et.lookahead))
                  return e;
                for (Ne === 1 && (_.adler = a(_.adler, Qt, ee, 0)), Et.wrap = 0, ee >= Et.w_size && (Ne === 0 && (Nt(Et.head), Et.strstart = 0, Et.block_start = 0, Et.insert = 0), on = new s.Buf8(Et.w_size), s.arraySet(on, Qt, ee - Et.w_size, Et.w_size, 0), Qt = on, ee = Et.w_size), Oe = _.avail_in, Ue = _.next_in, Me = _.input, _.avail_in = ee, _.next_in = 0, _.input = Qt, de(Et); Et.lookahead >= It; ) {
                  jt = Et.strstart, le = Et.lookahead - (It - 1);
                  do
                    Et.ins_h = (Et.ins_h << Et.hash_shift ^ Et.window[jt + It - 1]) & Et.hash_mask, Et.prev[jt & Et.w_mask] = Et.head[Et.ins_h], Et.head[Et.ins_h] = jt, jt++;
                  while (--le);
                  Et.strstart = jt, Et.lookahead = It - 1, de(Et);
                }
                return Et.strstart += Et.lookahead, Et.block_start = Et.strstart, Et.insert = Et.lookahead, Et.lookahead = 0, Et.match_length = Et.prev_length = It - 1, Et.match_available = 0, _.next_in = Ue, _.input = Me, _.avail_in = Oe, Et.wrap = Ne, y;
              }
              c.deflateInit = wt, c.deflateInit2 = j, c.deflateReset = lt, c.deflateResetKeep = ue, c.deflateSetHeader = Y, c.deflate = it, c.deflateEnd = Ht, c.deflateSetDictionary = te, c.deflateInfo = "pako deflate (from Nodeca project)";
            }
          ),
          /***/
          63394: (
            /***/
            function(l) {
              var c = 30, t = 12;
              l.exports = function(r, a) {
                var o, f, u, h, d, i, p, y, m, e, x, S, P, O, T, A, E, D, b, R, L, N, M, K, ct;
                o = r.state, f = r.next_in, K = r.input, u = f + (r.avail_in - 5), h = r.next_out, ct = r.output, d = h - (a - r.avail_out), i = h + (r.avail_out - 257), p = o.dmax, y = o.wsize, m = o.whave, e = o.wnext, x = o.window, S = o.hold, P = o.bits, O = o.lencode, T = o.distcode, A = (1 << o.lenbits) - 1, E = (1 << o.distbits) - 1;
                t:
                  do {
                    P < 15 && (S += K[f++] << P, P += 8, S += K[f++] << P, P += 8), D = O[S & A];
                    e:
                      for (; ; ) {
                        if (b = D >>> 24, S >>>= b, P -= b, b = D >>> 16 & 255, b === 0)
                          ct[h++] = D & 65535;
                        else if (b & 16) {
                          R = D & 65535, b &= 15, b && (P < b && (S += K[f++] << P, P += 8), R += S & (1 << b) - 1, S >>>= b, P -= b), P < 15 && (S += K[f++] << P, P += 8, S += K[f++] << P, P += 8), D = T[S & E];
                          r:
                            for (; ; ) {
                              if (b = D >>> 24, S >>>= b, P -= b, b = D >>> 16 & 255, b & 16) {
                                if (L = D & 65535, b &= 15, P < b && (S += K[f++] << P, P += 8, P < b && (S += K[f++] << P, P += 8)), L += S & (1 << b) - 1, L > p) {
                                  r.msg = "invalid distance too far back", o.mode = c;
                                  break t;
                                }
                                if (S >>>= b, P -= b, b = h - d, L > b) {
                                  if (b = L - b, b > m && o.sane) {
                                    r.msg = "invalid distance too far back", o.mode = c;
                                    break t;
                                  }
                                  if (N = 0, M = x, e === 0) {
                                    if (N += y - b, b < R) {
                                      R -= b;
                                      do
                                        ct[h++] = x[N++];
                                      while (--b);
                                      N = h - L, M = ct;
                                    }
                                  } else if (e < b) {
                                    if (N += y + e - b, b -= e, b < R) {
                                      R -= b;
                                      do
                                        ct[h++] = x[N++];
                                      while (--b);
                                      if (N = 0, e < R) {
                                        b = e, R -= b;
                                        do
                                          ct[h++] = x[N++];
                                        while (--b);
                                        N = h - L, M = ct;
                                      }
                                    }
                                  } else if (N += e - b, b < R) {
                                    R -= b;
                                    do
                                      ct[h++] = x[N++];
                                    while (--b);
                                    N = h - L, M = ct;
                                  }
                                  for (; R > 2; )
                                    ct[h++] = M[N++], ct[h++] = M[N++], ct[h++] = M[N++], R -= 3;
                                  R && (ct[h++] = M[N++], R > 1 && (ct[h++] = M[N++]));
                                } else {
                                  N = h - L;
                                  do
                                    ct[h++] = ct[N++], ct[h++] = ct[N++], ct[h++] = ct[N++], R -= 3;
                                  while (R > 2);
                                  R && (ct[h++] = ct[N++], R > 1 && (ct[h++] = ct[N++]));
                                }
                              } else if (b & 64) {
                                r.msg = "invalid distance code", o.mode = c;
                                break t;
                              } else {
                                D = T[(D & 65535) + (S & (1 << b) - 1)];
                                continue r;
                              }
                              break;
                            }
                        } else if (b & 64)
                          if (b & 32) {
                            o.mode = t;
                            break t;
                          } else {
                            r.msg = "invalid literal/length code", o.mode = c;
                            break t;
                          }
                        else {
                          D = O[(D & 65535) + (S & (1 << b) - 1)];
                          continue e;
                        }
                        break;
                      }
                  } while (f < u && h < i);
                R = P >> 3, f -= R, P -= R << 3, S &= (1 << P) - 1, r.next_in = f, r.next_out = h, r.avail_in = f < u ? 5 + (u - f) : 5 - (f - u), r.avail_out = h < i ? 257 + (i - h) : 257 - (h - i), o.hold = S, o.bits = P;
              };
            }
          ),
          /***/
          3386: (
            /***/
            function(l, c, t) {
              var s = t(69034), r = t(51475), a = t(38621), o = t(63394), f = t(20598), u = 0, h = 1, d = 2, i = 4, p = 5, y = 6, m = 0, e = 1, x = 2, S = -2, P = -3, O = -4, T = -5, A = 8, E = 1, D = 2, b = 3, R = 4, L = 5, N = 6, M = 7, K = 8, ct = 9, J = 10, nt = 11, yt = 12, bt = 13, Tt = 14, It = 15, Lt = 16, zt = 17, Q = 18, gt = 19, ht = 20, st = 21, xt = 22, G = 23, Ft = 24, z = 25, C = 26, k = 27, V = 28, ot = 29, et = 30, tt = 31, At = 32, Nt = 852, Kt = 592, Vt = 15, Ot = Vt;
              function ie(j) {
                return (j >>> 24 & 255) + (j >>> 8 & 65280) + ((j & 65280) << 8) + ((j & 255) << 24);
              }
              function Ae() {
                this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new s.Buf16(320), this.work = new s.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
              }
              function be(j) {
                var wt;
                return !j || !j.state ? S : (wt = j.state, j.total_in = j.total_out = wt.total = 0, j.msg = "", wt.wrap && (j.adler = wt.wrap & 1), wt.mode = E, wt.last = 0, wt.havedict = 0, wt.dmax = 32768, wt.head = null, wt.hold = 0, wt.bits = 0, wt.lencode = wt.lendyn = new s.Buf32(Nt), wt.distcode = wt.distdyn = new s.Buf32(Kt), wt.sane = 1, wt.back = -1, m);
              }
              function de(j) {
                var wt;
                return !j || !j.state ? S : (wt = j.state, wt.wsize = 0, wt.whave = 0, wt.wnext = 0, be(j));
              }
              function Se(j, wt) {
                var it, Ht;
                return !j || !j.state || (Ht = j.state, wt < 0 ? (it = 0, wt = -wt) : (it = (wt >> 4) + 1, wt < 48 && (wt &= 15)), wt && (wt < 8 || wt > 15)) ? S : (Ht.window !== null && Ht.wbits !== wt && (Ht.window = null), Ht.wrap = it, Ht.wbits = wt, de(j));
              }
              function Wt(j, wt) {
                var it, Ht;
                return j ? (Ht = new Ae(), j.state = Ht, Ht.window = null, it = Se(j, wt), it !== m && (j.state = null), it) : S;
              }
              function _t(j) {
                return Wt(j, Ot);
              }
              var ce = !0, pe, we;
              function Be(j) {
                if (ce) {
                  var wt;
                  for (pe = new s.Buf32(512), we = new s.Buf32(32), wt = 0; wt < 144; )
                    j.lens[wt++] = 8;
                  for (; wt < 256; )
                    j.lens[wt++] = 9;
                  for (; wt < 280; )
                    j.lens[wt++] = 7;
                  for (; wt < 288; )
                    j.lens[wt++] = 8;
                  for (f(h, j.lens, 0, 288, pe, 0, j.work, { bits: 9 }), wt = 0; wt < 32; )
                    j.lens[wt++] = 5;
                  f(d, j.lens, 0, 32, we, 0, j.work, { bits: 5 }), ce = !1;
                }
                j.lencode = pe, j.lenbits = 9, j.distcode = we, j.distbits = 5;
              }
              function Ie(j, wt, it, Ht) {
                var te, _ = j.state;
                return _.window === null && (_.wsize = 1 << _.wbits, _.wnext = 0, _.whave = 0, _.window = new s.Buf8(_.wsize)), Ht >= _.wsize ? (s.arraySet(_.window, wt, it - _.wsize, _.wsize, 0), _.wnext = 0, _.whave = _.wsize) : (te = _.wsize - _.wnext, te > Ht && (te = Ht), s.arraySet(_.window, wt, it - Ht, te, _.wnext), Ht -= te, Ht ? (s.arraySet(_.window, wt, it - Ht, Ht, 0), _.wnext = Ht, _.whave = _.wsize) : (_.wnext += te, _.wnext === _.wsize && (_.wnext = 0), _.whave < _.wsize && (_.whave += te))), 0;
              }
              function Dt(j, wt) {
                var it, Ht, te, _, Qt, ee, Et, jt, le, Ne, Oe, Ue, Me, on, er = 0, Ye, Cr, Pr, Jr, In, Gn, nr, sn, zr = new s.Buf8(4), tn, Gr, Kn = (
                  /* permutation of code lengths */
                  [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
                );
                if (!j || !j.state || !j.output || !j.input && j.avail_in !== 0)
                  return S;
                it = j.state, it.mode === yt && (it.mode = bt), Qt = j.next_out, te = j.output, Et = j.avail_out, _ = j.next_in, Ht = j.input, ee = j.avail_in, jt = it.hold, le = it.bits, Ne = ee, Oe = Et, sn = m;
                t:
                  for (; ; )
                    switch (it.mode) {
                      case E:
                        if (it.wrap === 0) {
                          it.mode = bt;
                          break;
                        }
                        for (; le < 16; ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        if (it.wrap & 2 && jt === 35615) {
                          it.check = 0, zr[0] = jt & 255, zr[1] = jt >>> 8 & 255, it.check = a(it.check, zr, 2, 0), jt = 0, le = 0, it.mode = D;
                          break;
                        }
                        if (it.flags = 0, it.head && (it.head.done = !1), !(it.wrap & 1) || /* check if zlib header allowed */
                        (((jt & 255) << 8) + (jt >> 8)) % 31) {
                          j.msg = "incorrect header check", it.mode = et;
                          break;
                        }
                        if ((jt & 15) !== A) {
                          j.msg = "unknown compression method", it.mode = et;
                          break;
                        }
                        if (jt >>>= 4, le -= 4, nr = (jt & 15) + 8, it.wbits === 0)
                          it.wbits = nr;
                        else if (nr > it.wbits) {
                          j.msg = "invalid window size", it.mode = et;
                          break;
                        }
                        it.dmax = 1 << nr, j.adler = it.check = 1, it.mode = jt & 512 ? J : yt, jt = 0, le = 0;
                        break;
                      case D:
                        for (; le < 16; ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        if (it.flags = jt, (it.flags & 255) !== A) {
                          j.msg = "unknown compression method", it.mode = et;
                          break;
                        }
                        if (it.flags & 57344) {
                          j.msg = "unknown header flags set", it.mode = et;
                          break;
                        }
                        it.head && (it.head.text = jt >> 8 & 1), it.flags & 512 && (zr[0] = jt & 255, zr[1] = jt >>> 8 & 255, it.check = a(it.check, zr, 2, 0)), jt = 0, le = 0, it.mode = b;
                      case b:
                        for (; le < 32; ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        it.head && (it.head.time = jt), it.flags & 512 && (zr[0] = jt & 255, zr[1] = jt >>> 8 & 255, zr[2] = jt >>> 16 & 255, zr[3] = jt >>> 24 & 255, it.check = a(it.check, zr, 4, 0)), jt = 0, le = 0, it.mode = R;
                      case R:
                        for (; le < 16; ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        it.head && (it.head.xflags = jt & 255, it.head.os = jt >> 8), it.flags & 512 && (zr[0] = jt & 255, zr[1] = jt >>> 8 & 255, it.check = a(it.check, zr, 2, 0)), jt = 0, le = 0, it.mode = L;
                      case L:
                        if (it.flags & 1024) {
                          for (; le < 16; ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          it.length = jt, it.head && (it.head.extra_len = jt), it.flags & 512 && (zr[0] = jt & 255, zr[1] = jt >>> 8 & 255, it.check = a(it.check, zr, 2, 0)), jt = 0, le = 0;
                        } else
                          it.head && (it.head.extra = null);
                        it.mode = N;
                      case N:
                        if (it.flags & 1024 && (Ue = it.length, Ue > ee && (Ue = ee), Ue && (it.head && (nr = it.head.extra_len - it.length, it.head.extra || (it.head.extra = new Array(it.head.extra_len)), s.arraySet(
                          it.head.extra,
                          Ht,
                          _,
                          // extra field is limited to 65536 bytes
                          // - no need for additional size check
                          Ue,
                          /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                          nr
                        )), it.flags & 512 && (it.check = a(it.check, Ht, Ue, _)), ee -= Ue, _ += Ue, it.length -= Ue), it.length))
                          break t;
                        it.length = 0, it.mode = M;
                      case M:
                        if (it.flags & 2048) {
                          if (ee === 0)
                            break t;
                          Ue = 0;
                          do
                            nr = Ht[_ + Ue++], it.head && nr && it.length < 65536 && (it.head.name += String.fromCharCode(nr));
                          while (nr && Ue < ee);
                          if (it.flags & 512 && (it.check = a(it.check, Ht, Ue, _)), ee -= Ue, _ += Ue, nr)
                            break t;
                        } else
                          it.head && (it.head.name = null);
                        it.length = 0, it.mode = K;
                      case K:
                        if (it.flags & 4096) {
                          if (ee === 0)
                            break t;
                          Ue = 0;
                          do
                            nr = Ht[_ + Ue++], it.head && nr && it.length < 65536 && (it.head.comment += String.fromCharCode(nr));
                          while (nr && Ue < ee);
                          if (it.flags & 512 && (it.check = a(it.check, Ht, Ue, _)), ee -= Ue, _ += Ue, nr)
                            break t;
                        } else
                          it.head && (it.head.comment = null);
                        it.mode = ct;
                      case ct:
                        if (it.flags & 512) {
                          for (; le < 16; ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          if (jt !== (it.check & 65535)) {
                            j.msg = "header crc mismatch", it.mode = et;
                            break;
                          }
                          jt = 0, le = 0;
                        }
                        it.head && (it.head.hcrc = it.flags >> 9 & 1, it.head.done = !0), j.adler = it.check = 0, it.mode = yt;
                        break;
                      case J:
                        for (; le < 32; ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        j.adler = it.check = ie(jt), jt = 0, le = 0, it.mode = nt;
                      case nt:
                        if (it.havedict === 0)
                          return j.next_out = Qt, j.avail_out = Et, j.next_in = _, j.avail_in = ee, it.hold = jt, it.bits = le, x;
                        j.adler = it.check = 1, it.mode = yt;
                      case yt:
                        if (wt === p || wt === y)
                          break t;
                      case bt:
                        if (it.last) {
                          jt >>>= le & 7, le -= le & 7, it.mode = k;
                          break;
                        }
                        for (; le < 3; ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        switch (it.last = jt & 1, jt >>>= 1, le -= 1, jt & 3) {
                          case 0:
                            it.mode = Tt;
                            break;
                          case 1:
                            if (Be(it), it.mode = ht, wt === y) {
                              jt >>>= 2, le -= 2;
                              break t;
                            }
                            break;
                          case 2:
                            it.mode = zt;
                            break;
                          case 3:
                            j.msg = "invalid block type", it.mode = et;
                        }
                        jt >>>= 2, le -= 2;
                        break;
                      case Tt:
                        for (jt >>>= le & 7, le -= le & 7; le < 32; ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        if ((jt & 65535) !== (jt >>> 16 ^ 65535)) {
                          j.msg = "invalid stored block lengths", it.mode = et;
                          break;
                        }
                        if (it.length = jt & 65535, jt = 0, le = 0, it.mode = It, wt === y)
                          break t;
                      case It:
                        it.mode = Lt;
                      case Lt:
                        if (Ue = it.length, Ue) {
                          if (Ue > ee && (Ue = ee), Ue > Et && (Ue = Et), Ue === 0)
                            break t;
                          s.arraySet(te, Ht, _, Ue, Qt), ee -= Ue, _ += Ue, Et -= Ue, Qt += Ue, it.length -= Ue;
                          break;
                        }
                        it.mode = yt;
                        break;
                      case zt:
                        for (; le < 14; ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        if (it.nlen = (jt & 31) + 257, jt >>>= 5, le -= 5, it.ndist = (jt & 31) + 1, jt >>>= 5, le -= 5, it.ncode = (jt & 15) + 4, jt >>>= 4, le -= 4, it.nlen > 286 || it.ndist > 30) {
                          j.msg = "too many length or distance symbols", it.mode = et;
                          break;
                        }
                        it.have = 0, it.mode = Q;
                      case Q:
                        for (; it.have < it.ncode; ) {
                          for (; le < 3; ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          it.lens[Kn[it.have++]] = jt & 7, jt >>>= 3, le -= 3;
                        }
                        for (; it.have < 19; )
                          it.lens[Kn[it.have++]] = 0;
                        if (it.lencode = it.lendyn, it.lenbits = 7, tn = { bits: it.lenbits }, sn = f(u, it.lens, 0, 19, it.lencode, 0, it.work, tn), it.lenbits = tn.bits, sn) {
                          j.msg = "invalid code lengths set", it.mode = et;
                          break;
                        }
                        it.have = 0, it.mode = gt;
                      case gt:
                        for (; it.have < it.nlen + it.ndist; ) {
                          for (; er = it.lencode[jt & (1 << it.lenbits) - 1], Ye = er >>> 24, Cr = er >>> 16 & 255, Pr = er & 65535, !(Ye <= le); ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          if (Pr < 16)
                            jt >>>= Ye, le -= Ye, it.lens[it.have++] = Pr;
                          else {
                            if (Pr === 16) {
                              for (Gr = Ye + 2; le < Gr; ) {
                                if (ee === 0)
                                  break t;
                                ee--, jt += Ht[_++] << le, le += 8;
                              }
                              if (jt >>>= Ye, le -= Ye, it.have === 0) {
                                j.msg = "invalid bit length repeat", it.mode = et;
                                break;
                              }
                              nr = it.lens[it.have - 1], Ue = 3 + (jt & 3), jt >>>= 2, le -= 2;
                            } else if (Pr === 17) {
                              for (Gr = Ye + 3; le < Gr; ) {
                                if (ee === 0)
                                  break t;
                                ee--, jt += Ht[_++] << le, le += 8;
                              }
                              jt >>>= Ye, le -= Ye, nr = 0, Ue = 3 + (jt & 7), jt >>>= 3, le -= 3;
                            } else {
                              for (Gr = Ye + 7; le < Gr; ) {
                                if (ee === 0)
                                  break t;
                                ee--, jt += Ht[_++] << le, le += 8;
                              }
                              jt >>>= Ye, le -= Ye, nr = 0, Ue = 11 + (jt & 127), jt >>>= 7, le -= 7;
                            }
                            if (it.have + Ue > it.nlen + it.ndist) {
                              j.msg = "invalid bit length repeat", it.mode = et;
                              break;
                            }
                            for (; Ue--; )
                              it.lens[it.have++] = nr;
                          }
                        }
                        if (it.mode === et)
                          break;
                        if (it.lens[256] === 0) {
                          j.msg = "invalid code -- missing end-of-block", it.mode = et;
                          break;
                        }
                        if (it.lenbits = 9, tn = { bits: it.lenbits }, sn = f(h, it.lens, 0, it.nlen, it.lencode, 0, it.work, tn), it.lenbits = tn.bits, sn) {
                          j.msg = "invalid literal/lengths set", it.mode = et;
                          break;
                        }
                        if (it.distbits = 6, it.distcode = it.distdyn, tn = { bits: it.distbits }, sn = f(d, it.lens, it.nlen, it.ndist, it.distcode, 0, it.work, tn), it.distbits = tn.bits, sn) {
                          j.msg = "invalid distances set", it.mode = et;
                          break;
                        }
                        if (it.mode = ht, wt === y)
                          break t;
                      case ht:
                        it.mode = st;
                      case st:
                        if (ee >= 6 && Et >= 258) {
                          j.next_out = Qt, j.avail_out = Et, j.next_in = _, j.avail_in = ee, it.hold = jt, it.bits = le, o(j, Oe), Qt = j.next_out, te = j.output, Et = j.avail_out, _ = j.next_in, Ht = j.input, ee = j.avail_in, jt = it.hold, le = it.bits, it.mode === yt && (it.back = -1);
                          break;
                        }
                        for (it.back = 0; er = it.lencode[jt & (1 << it.lenbits) - 1], Ye = er >>> 24, Cr = er >>> 16 & 255, Pr = er & 65535, !(Ye <= le); ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        if (Cr && !(Cr & 240)) {
                          for (Jr = Ye, In = Cr, Gn = Pr; er = it.lencode[Gn + ((jt & (1 << Jr + In) - 1) >> Jr)], Ye = er >>> 24, Cr = er >>> 16 & 255, Pr = er & 65535, !(Jr + Ye <= le); ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          jt >>>= Jr, le -= Jr, it.back += Jr;
                        }
                        if (jt >>>= Ye, le -= Ye, it.back += Ye, it.length = Pr, Cr === 0) {
                          it.mode = C;
                          break;
                        }
                        if (Cr & 32) {
                          it.back = -1, it.mode = yt;
                          break;
                        }
                        if (Cr & 64) {
                          j.msg = "invalid literal/length code", it.mode = et;
                          break;
                        }
                        it.extra = Cr & 15, it.mode = xt;
                      case xt:
                        if (it.extra) {
                          for (Gr = it.extra; le < Gr; ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          it.length += jt & (1 << it.extra) - 1, jt >>>= it.extra, le -= it.extra, it.back += it.extra;
                        }
                        it.was = it.length, it.mode = G;
                      case G:
                        for (; er = it.distcode[jt & (1 << it.distbits) - 1], Ye = er >>> 24, Cr = er >>> 16 & 255, Pr = er & 65535, !(Ye <= le); ) {
                          if (ee === 0)
                            break t;
                          ee--, jt += Ht[_++] << le, le += 8;
                        }
                        if (!(Cr & 240)) {
                          for (Jr = Ye, In = Cr, Gn = Pr; er = it.distcode[Gn + ((jt & (1 << Jr + In) - 1) >> Jr)], Ye = er >>> 24, Cr = er >>> 16 & 255, Pr = er & 65535, !(Jr + Ye <= le); ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          jt >>>= Jr, le -= Jr, it.back += Jr;
                        }
                        if (jt >>>= Ye, le -= Ye, it.back += Ye, Cr & 64) {
                          j.msg = "invalid distance code", it.mode = et;
                          break;
                        }
                        it.offset = Pr, it.extra = Cr & 15, it.mode = Ft;
                      case Ft:
                        if (it.extra) {
                          for (Gr = it.extra; le < Gr; ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          it.offset += jt & (1 << it.extra) - 1, jt >>>= it.extra, le -= it.extra, it.back += it.extra;
                        }
                        if (it.offset > it.dmax) {
                          j.msg = "invalid distance too far back", it.mode = et;
                          break;
                        }
                        it.mode = z;
                      case z:
                        if (Et === 0)
                          break t;
                        if (Ue = Oe - Et, it.offset > Ue) {
                          if (Ue = it.offset - Ue, Ue > it.whave && it.sane) {
                            j.msg = "invalid distance too far back", it.mode = et;
                            break;
                          }
                          Ue > it.wnext ? (Ue -= it.wnext, Me = it.wsize - Ue) : Me = it.wnext - Ue, Ue > it.length && (Ue = it.length), on = it.window;
                        } else
                          on = te, Me = Qt - it.offset, Ue = it.length;
                        Ue > Et && (Ue = Et), Et -= Ue, it.length -= Ue;
                        do
                          te[Qt++] = on[Me++];
                        while (--Ue);
                        it.length === 0 && (it.mode = st);
                        break;
                      case C:
                        if (Et === 0)
                          break t;
                        te[Qt++] = it.length, Et--, it.mode = st;
                        break;
                      case k:
                        if (it.wrap) {
                          for (; le < 32; ) {
                            if (ee === 0)
                              break t;
                            ee--, jt |= Ht[_++] << le, le += 8;
                          }
                          if (Oe -= Et, j.total_out += Oe, it.total += Oe, Oe && (j.adler = it.check = /*UPDATE(state.check, put - _out, _out);*/
                          it.flags ? a(it.check, te, Oe, Qt - Oe) : r(it.check, te, Oe, Qt - Oe)), Oe = Et, (it.flags ? jt : ie(jt)) !== it.check) {
                            j.msg = "incorrect data check", it.mode = et;
                            break;
                          }
                          jt = 0, le = 0;
                        }
                        it.mode = V;
                      case V:
                        if (it.wrap && it.flags) {
                          for (; le < 32; ) {
                            if (ee === 0)
                              break t;
                            ee--, jt += Ht[_++] << le, le += 8;
                          }
                          if (jt !== (it.total & 4294967295)) {
                            j.msg = "incorrect length check", it.mode = et;
                            break;
                          }
                          jt = 0, le = 0;
                        }
                        it.mode = ot;
                      case ot:
                        sn = e;
                        break t;
                      case et:
                        sn = P;
                        break t;
                      case tt:
                        return O;
                      case At:
                      default:
                        return S;
                    }
                return j.next_out = Qt, j.avail_out = Et, j.next_in = _, j.avail_in = ee, it.hold = jt, it.bits = le, (it.wsize || Oe !== j.avail_out && it.mode < et && (it.mode < k || wt !== i)) && Ie(j, j.output, j.next_out, Oe - j.avail_out), Ne -= j.avail_in, Oe -= j.avail_out, j.total_in += Ne, j.total_out += Oe, it.total += Oe, it.wrap && Oe && (j.adler = it.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
                it.flags ? a(it.check, te, Oe, j.next_out - Oe) : r(it.check, te, Oe, j.next_out - Oe)), j.data_type = it.bits + (it.last ? 64 : 0) + (it.mode === yt ? 128 : 0) + (it.mode === ht || it.mode === It ? 256 : 0), (Ne === 0 && Oe === 0 || wt === i) && sn === m && (sn = T), sn;
              }
              function ue(j) {
                if (!j || !j.state)
                  return S;
                var wt = j.state;
                return wt.window && (wt.window = null), j.state = null, m;
              }
              function lt(j, wt) {
                var it;
                return !j || !j.state || (it = j.state, !(it.wrap & 2)) ? S : (it.head = wt, wt.done = !1, m);
              }
              function Y(j, wt) {
                var it = wt.length, Ht, te, _;
                return !j || !j.state || (Ht = j.state, Ht.wrap !== 0 && Ht.mode !== nt) ? S : Ht.mode === nt && (te = 1, te = r(te, wt, it, 0), te !== Ht.check) ? P : (_ = Ie(j, wt, it, it), _ ? (Ht.mode = tt, O) : (Ht.havedict = 1, m));
              }
              c.inflateReset = de, c.inflateReset2 = Se, c.inflateResetKeep = be, c.inflateInit = _t, c.inflateInit2 = Wt, c.inflate = Dt, c.inflateEnd = ue, c.inflateGetHeader = lt, c.inflateSetDictionary = Y, c.inflateInfo = "pako inflate (from Nodeca project)";
            }
          ),
          /***/
          20598: (
            /***/
            function(l, c, t) {
              var s = t(69034), r = 15, a = 852, o = 592, f = 0, u = 1, h = 2, d = [
                /* Length codes 257..285 base */
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                13,
                15,
                17,
                19,
                23,
                27,
                31,
                35,
                43,
                51,
                59,
                67,
                83,
                99,
                115,
                131,
                163,
                195,
                227,
                258,
                0,
                0
              ], i = [
                /* Length codes 257..285 extra */
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                16,
                72,
                78
              ], p = [
                /* Distance codes 0..29 base */
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577,
                0,
                0
              ], y = [
                /* Distance codes 0..29 extra */
                16,
                16,
                16,
                16,
                17,
                17,
                18,
                18,
                19,
                19,
                20,
                20,
                21,
                21,
                22,
                22,
                23,
                23,
                24,
                24,
                25,
                25,
                26,
                26,
                27,
                27,
                28,
                28,
                29,
                29,
                64,
                64
              ];
              l.exports = function(e, x, S, P, O, T, A, E) {
                var D = E.bits, b = 0, R = 0, L = 0, N = 0, M = 0, K = 0, ct = 0, J = 0, nt = 0, yt = 0, bt, Tt, It, Lt, zt, Q = null, gt = 0, ht, st = new s.Buf16(r + 1), xt = new s.Buf16(r + 1), G = null, Ft = 0, z, C, k;
                for (b = 0; b <= r; b++)
                  st[b] = 0;
                for (R = 0; R < P; R++)
                  st[x[S + R]]++;
                for (M = D, N = r; N >= 1 && st[N] === 0; N--)
                  ;
                if (M > N && (M = N), N === 0)
                  return O[T++] = 20971520, O[T++] = 20971520, E.bits = 1, 0;
                for (L = 1; L < N && st[L] === 0; L++)
                  ;
                for (M < L && (M = L), J = 1, b = 1; b <= r; b++)
                  if (J <<= 1, J -= st[b], J < 0)
                    return -1;
                if (J > 0 && (e === f || N !== 1))
                  return -1;
                for (xt[1] = 0, b = 1; b < r; b++)
                  xt[b + 1] = xt[b] + st[b];
                for (R = 0; R < P; R++)
                  x[S + R] !== 0 && (A[xt[x[S + R]]++] = R);
                if (e === f ? (Q = G = A, ht = 19) : e === u ? (Q = d, gt -= 257, G = i, Ft -= 257, ht = 256) : (Q = p, G = y, ht = -1), yt = 0, R = 0, b = L, zt = T, K = M, ct = 0, It = -1, nt = 1 << M, Lt = nt - 1, e === u && nt > a || e === h && nt > o)
                  return 1;
                for (; ; ) {
                  z = b - ct, A[R] < ht ? (C = 0, k = A[R]) : A[R] > ht ? (C = G[Ft + A[R]], k = Q[gt + A[R]]) : (C = 96, k = 0), bt = 1 << b - ct, Tt = 1 << K, L = Tt;
                  do
                    Tt -= bt, O[zt + (yt >> ct) + Tt] = z << 24 | C << 16 | k | 0;
                  while (Tt !== 0);
                  for (bt = 1 << b - 1; yt & bt; )
                    bt >>= 1;
                  if (bt !== 0 ? (yt &= bt - 1, yt += bt) : yt = 0, R++, --st[b] === 0) {
                    if (b === N)
                      break;
                    b = x[S + A[R]];
                  }
                  if (b > M && (yt & Lt) !== It) {
                    for (ct === 0 && (ct = M), zt += L, K = b - ct, J = 1 << K; K + ct < N && (J -= st[K + ct], !(J <= 0)); )
                      K++, J <<= 1;
                    if (nt += 1 << K, e === u && nt > a || e === h && nt > o)
                      return 1;
                    It = yt & Lt, O[It] = M << 24 | K << 16 | zt - T | 0;
                  }
                }
                return yt !== 0 && (O[zt + yt] = b - ct << 24 | 4194304 | 0), E.bits = M, 0;
              };
            }
          ),
          /***/
          44594: (
            /***/
            function(l) {
              l.exports = {
                2: "need dictionary",
                /* Z_NEED_DICT       2  */
                1: "stream end",
                /* Z_STREAM_END      1  */
                0: "",
                /* Z_OK              0  */
                "-1": "file error",
                /* Z_ERRNO         (-1) */
                "-2": "stream error",
                /* Z_STREAM_ERROR  (-2) */
                "-3": "data error",
                /* Z_DATA_ERROR    (-3) */
                "-4": "insufficient memory",
                /* Z_MEM_ERROR     (-4) */
                "-5": "buffer error",
                /* Z_BUF_ERROR     (-5) */
                "-6": "incompatible version"
                /* Z_VERSION_ERROR (-6) */
              };
            }
          ),
          /***/
          70376: (
            /***/
            function(l, c, t) {
              var s = t(69034), r = 4, a = 0, o = 1, f = 2;
              function u(Dt) {
                for (var ue = Dt.length; --ue >= 0; )
                  Dt[ue] = 0;
              }
              var h = 0, d = 1, i = 2, p = 3, y = 258, m = 29, e = 256, x = e + 1 + m, S = 30, P = 19, O = 2 * x + 1, T = 15, A = 16, E = 7, D = 256, b = 16, R = 17, L = 18, N = (
                /* extra bits for each length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
              ), M = (
                /* extra bits for each distance code */
                [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
              ), K = (
                /* extra bits for each bit length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
              ), ct = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], J = 512, nt = new Array((x + 2) * 2);
              u(nt);
              var yt = new Array(S * 2);
              u(yt);
              var bt = new Array(J);
              u(bt);
              var Tt = new Array(y - p + 1);
              u(Tt);
              var It = new Array(m);
              u(It);
              var Lt = new Array(S);
              u(Lt);
              function zt(Dt, ue, lt, Y, j) {
                this.static_tree = Dt, this.extra_bits = ue, this.extra_base = lt, this.elems = Y, this.max_length = j, this.has_stree = Dt && Dt.length;
              }
              var Q, gt, ht;
              function st(Dt, ue) {
                this.dyn_tree = Dt, this.max_code = 0, this.stat_desc = ue;
              }
              function xt(Dt) {
                return Dt < 256 ? bt[Dt] : bt[256 + (Dt >>> 7)];
              }
              function G(Dt, ue) {
                Dt.pending_buf[Dt.pending++] = ue & 255, Dt.pending_buf[Dt.pending++] = ue >>> 8 & 255;
              }
              function Ft(Dt, ue, lt) {
                Dt.bi_valid > A - lt ? (Dt.bi_buf |= ue << Dt.bi_valid & 65535, G(Dt, Dt.bi_buf), Dt.bi_buf = ue >> A - Dt.bi_valid, Dt.bi_valid += lt - A) : (Dt.bi_buf |= ue << Dt.bi_valid & 65535, Dt.bi_valid += lt);
              }
              function z(Dt, ue, lt) {
                Ft(
                  Dt,
                  lt[ue * 2],
                  lt[ue * 2 + 1]
                  /*.Len*/
                );
              }
              function C(Dt, ue) {
                var lt = 0;
                do
                  lt |= Dt & 1, Dt >>>= 1, lt <<= 1;
                while (--ue > 0);
                return lt >>> 1;
              }
              function k(Dt) {
                Dt.bi_valid === 16 ? (G(Dt, Dt.bi_buf), Dt.bi_buf = 0, Dt.bi_valid = 0) : Dt.bi_valid >= 8 && (Dt.pending_buf[Dt.pending++] = Dt.bi_buf & 255, Dt.bi_buf >>= 8, Dt.bi_valid -= 8);
              }
              function V(Dt, ue) {
                var lt = ue.dyn_tree, Y = ue.max_code, j = ue.stat_desc.static_tree, wt = ue.stat_desc.has_stree, it = ue.stat_desc.extra_bits, Ht = ue.stat_desc.extra_base, te = ue.stat_desc.max_length, _, Qt, ee, Et, jt, le, Ne = 0;
                for (Et = 0; Et <= T; Et++)
                  Dt.bl_count[Et] = 0;
                for (lt[Dt.heap[Dt.heap_max] * 2 + 1] = 0, _ = Dt.heap_max + 1; _ < O; _++)
                  Qt = Dt.heap[_], Et = lt[lt[Qt * 2 + 1] * 2 + 1] + 1, Et > te && (Et = te, Ne++), lt[Qt * 2 + 1] = Et, !(Qt > Y) && (Dt.bl_count[Et]++, jt = 0, Qt >= Ht && (jt = it[Qt - Ht]), le = lt[Qt * 2], Dt.opt_len += le * (Et + jt), wt && (Dt.static_len += le * (j[Qt * 2 + 1] + jt)));
                if (Ne !== 0) {
                  do {
                    for (Et = te - 1; Dt.bl_count[Et] === 0; )
                      Et--;
                    Dt.bl_count[Et]--, Dt.bl_count[Et + 1] += 2, Dt.bl_count[te]--, Ne -= 2;
                  } while (Ne > 0);
                  for (Et = te; Et !== 0; Et--)
                    for (Qt = Dt.bl_count[Et]; Qt !== 0; )
                      ee = Dt.heap[--_], !(ee > Y) && (lt[ee * 2 + 1] !== Et && (Dt.opt_len += (Et - lt[ee * 2 + 1]) * lt[ee * 2], lt[ee * 2 + 1] = Et), Qt--);
                }
              }
              function ot(Dt, ue, lt) {
                var Y = new Array(T + 1), j = 0, wt, it;
                for (wt = 1; wt <= T; wt++)
                  Y[wt] = j = j + lt[wt - 1] << 1;
                for (it = 0; it <= ue; it++) {
                  var Ht = Dt[it * 2 + 1];
                  Ht !== 0 && (Dt[it * 2] = C(Y[Ht]++, Ht));
                }
              }
              function et() {
                var Dt, ue, lt, Y, j, wt = new Array(T + 1);
                for (lt = 0, Y = 0; Y < m - 1; Y++)
                  for (It[Y] = lt, Dt = 0; Dt < 1 << N[Y]; Dt++)
                    Tt[lt++] = Y;
                for (Tt[lt - 1] = Y, j = 0, Y = 0; Y < 16; Y++)
                  for (Lt[Y] = j, Dt = 0; Dt < 1 << M[Y]; Dt++)
                    bt[j++] = Y;
                for (j >>= 7; Y < S; Y++)
                  for (Lt[Y] = j << 7, Dt = 0; Dt < 1 << M[Y] - 7; Dt++)
                    bt[256 + j++] = Y;
                for (ue = 0; ue <= T; ue++)
                  wt[ue] = 0;
                for (Dt = 0; Dt <= 143; )
                  nt[Dt * 2 + 1] = 8, Dt++, wt[8]++;
                for (; Dt <= 255; )
                  nt[Dt * 2 + 1] = 9, Dt++, wt[9]++;
                for (; Dt <= 279; )
                  nt[Dt * 2 + 1] = 7, Dt++, wt[7]++;
                for (; Dt <= 287; )
                  nt[Dt * 2 + 1] = 8, Dt++, wt[8]++;
                for (ot(nt, x + 1, wt), Dt = 0; Dt < S; Dt++)
                  yt[Dt * 2 + 1] = 5, yt[Dt * 2] = C(Dt, 5);
                Q = new zt(nt, N, e + 1, x, T), gt = new zt(yt, M, 0, S, T), ht = new zt(new Array(0), K, 0, P, E);
              }
              function tt(Dt) {
                var ue;
                for (ue = 0; ue < x; ue++)
                  Dt.dyn_ltree[ue * 2] = 0;
                for (ue = 0; ue < S; ue++)
                  Dt.dyn_dtree[ue * 2] = 0;
                for (ue = 0; ue < P; ue++)
                  Dt.bl_tree[ue * 2] = 0;
                Dt.dyn_ltree[D * 2] = 1, Dt.opt_len = Dt.static_len = 0, Dt.last_lit = Dt.matches = 0;
              }
              function At(Dt) {
                Dt.bi_valid > 8 ? G(Dt, Dt.bi_buf) : Dt.bi_valid > 0 && (Dt.pending_buf[Dt.pending++] = Dt.bi_buf), Dt.bi_buf = 0, Dt.bi_valid = 0;
              }
              function Nt(Dt, ue, lt, Y) {
                At(Dt), Y && (G(Dt, lt), G(Dt, ~lt)), s.arraySet(Dt.pending_buf, Dt.window, ue, lt, Dt.pending), Dt.pending += lt;
              }
              function Kt(Dt, ue, lt, Y) {
                var j = ue * 2, wt = lt * 2;
                return Dt[j] < Dt[wt] || Dt[j] === Dt[wt] && Y[ue] <= Y[lt];
              }
              function Vt(Dt, ue, lt) {
                for (var Y = Dt.heap[lt], j = lt << 1; j <= Dt.heap_len && (j < Dt.heap_len && Kt(ue, Dt.heap[j + 1], Dt.heap[j], Dt.depth) && j++, !Kt(ue, Y, Dt.heap[j], Dt.depth)); )
                  Dt.heap[lt] = Dt.heap[j], lt = j, j <<= 1;
                Dt.heap[lt] = Y;
              }
              function Ot(Dt, ue, lt) {
                var Y, j, wt = 0, it, Ht;
                if (Dt.last_lit !== 0)
                  do
                    Y = Dt.pending_buf[Dt.d_buf + wt * 2] << 8 | Dt.pending_buf[Dt.d_buf + wt * 2 + 1], j = Dt.pending_buf[Dt.l_buf + wt], wt++, Y === 0 ? z(Dt, j, ue) : (it = Tt[j], z(Dt, it + e + 1, ue), Ht = N[it], Ht !== 0 && (j -= It[it], Ft(Dt, j, Ht)), Y--, it = xt(Y), z(Dt, it, lt), Ht = M[it], Ht !== 0 && (Y -= Lt[it], Ft(Dt, Y, Ht)));
                  while (wt < Dt.last_lit);
                z(Dt, D, ue);
              }
              function ie(Dt, ue) {
                var lt = ue.dyn_tree, Y = ue.stat_desc.static_tree, j = ue.stat_desc.has_stree, wt = ue.stat_desc.elems, it, Ht, te = -1, _;
                for (Dt.heap_len = 0, Dt.heap_max = O, it = 0; it < wt; it++)
                  lt[it * 2] !== 0 ? (Dt.heap[++Dt.heap_len] = te = it, Dt.depth[it] = 0) : lt[it * 2 + 1] = 0;
                for (; Dt.heap_len < 2; )
                  _ = Dt.heap[++Dt.heap_len] = te < 2 ? ++te : 0, lt[_ * 2] = 1, Dt.depth[_] = 0, Dt.opt_len--, j && (Dt.static_len -= Y[_ * 2 + 1]);
                for (ue.max_code = te, it = Dt.heap_len >> 1; it >= 1; it--)
                  Vt(Dt, lt, it);
                _ = wt;
                do
                  it = Dt.heap[
                    1
                    /*SMALLEST*/
                  ], Dt.heap[
                    1
                    /*SMALLEST*/
                  ] = Dt.heap[Dt.heap_len--], Vt(
                    Dt,
                    lt,
                    1
                    /*SMALLEST*/
                  ), Ht = Dt.heap[
                    1
                    /*SMALLEST*/
                  ], Dt.heap[--Dt.heap_max] = it, Dt.heap[--Dt.heap_max] = Ht, lt[_ * 2] = lt[it * 2] + lt[Ht * 2], Dt.depth[_] = (Dt.depth[it] >= Dt.depth[Ht] ? Dt.depth[it] : Dt.depth[Ht]) + 1, lt[it * 2 + 1] = lt[Ht * 2 + 1] = _, Dt.heap[
                    1
                    /*SMALLEST*/
                  ] = _++, Vt(
                    Dt,
                    lt,
                    1
                    /*SMALLEST*/
                  );
                while (Dt.heap_len >= 2);
                Dt.heap[--Dt.heap_max] = Dt.heap[
                  1
                  /*SMALLEST*/
                ], V(Dt, ue), ot(lt, te, Dt.bl_count);
              }
              function Ae(Dt, ue, lt) {
                var Y, j = -1, wt, it = ue[0 * 2 + 1], Ht = 0, te = 7, _ = 4;
                for (it === 0 && (te = 138, _ = 3), ue[(lt + 1) * 2 + 1] = 65535, Y = 0; Y <= lt; Y++)
                  wt = it, it = ue[(Y + 1) * 2 + 1], !(++Ht < te && wt === it) && (Ht < _ ? Dt.bl_tree[wt * 2] += Ht : wt !== 0 ? (wt !== j && Dt.bl_tree[wt * 2]++, Dt.bl_tree[b * 2]++) : Ht <= 10 ? Dt.bl_tree[R * 2]++ : Dt.bl_tree[L * 2]++, Ht = 0, j = wt, it === 0 ? (te = 138, _ = 3) : wt === it ? (te = 6, _ = 3) : (te = 7, _ = 4));
              }
              function be(Dt, ue, lt) {
                var Y, j = -1, wt, it = ue[0 * 2 + 1], Ht = 0, te = 7, _ = 4;
                for (it === 0 && (te = 138, _ = 3), Y = 0; Y <= lt; Y++)
                  if (wt = it, it = ue[(Y + 1) * 2 + 1], !(++Ht < te && wt === it)) {
                    if (Ht < _)
                      do
                        z(Dt, wt, Dt.bl_tree);
                      while (--Ht !== 0);
                    else
                      wt !== 0 ? (wt !== j && (z(Dt, wt, Dt.bl_tree), Ht--), z(Dt, b, Dt.bl_tree), Ft(Dt, Ht - 3, 2)) : Ht <= 10 ? (z(Dt, R, Dt.bl_tree), Ft(Dt, Ht - 3, 3)) : (z(Dt, L, Dt.bl_tree), Ft(Dt, Ht - 11, 7));
                    Ht = 0, j = wt, it === 0 ? (te = 138, _ = 3) : wt === it ? (te = 6, _ = 3) : (te = 7, _ = 4);
                  }
              }
              function de(Dt) {
                var ue;
                for (Ae(Dt, Dt.dyn_ltree, Dt.l_desc.max_code), Ae(Dt, Dt.dyn_dtree, Dt.d_desc.max_code), ie(Dt, Dt.bl_desc), ue = P - 1; ue >= 3 && Dt.bl_tree[ct[ue] * 2 + 1] === 0; ue--)
                  ;
                return Dt.opt_len += 3 * (ue + 1) + 5 + 5 + 4, ue;
              }
              function Se(Dt, ue, lt, Y) {
                var j;
                for (Ft(Dt, ue - 257, 5), Ft(Dt, lt - 1, 5), Ft(Dt, Y - 4, 4), j = 0; j < Y; j++)
                  Ft(Dt, Dt.bl_tree[ct[j] * 2 + 1], 3);
                be(Dt, Dt.dyn_ltree, ue - 1), be(Dt, Dt.dyn_dtree, lt - 1);
              }
              function Wt(Dt) {
                var ue = 4093624447, lt;
                for (lt = 0; lt <= 31; lt++, ue >>>= 1)
                  if (ue & 1 && Dt.dyn_ltree[lt * 2] !== 0)
                    return a;
                if (Dt.dyn_ltree[18] !== 0 || Dt.dyn_ltree[20] !== 0 || Dt.dyn_ltree[26] !== 0)
                  return o;
                for (lt = 32; lt < e; lt++)
                  if (Dt.dyn_ltree[lt * 2] !== 0)
                    return o;
                return a;
              }
              var _t = !1;
              function ce(Dt) {
                _t || (et(), _t = !0), Dt.l_desc = new st(Dt.dyn_ltree, Q), Dt.d_desc = new st(Dt.dyn_dtree, gt), Dt.bl_desc = new st(Dt.bl_tree, ht), Dt.bi_buf = 0, Dt.bi_valid = 0, tt(Dt);
              }
              function pe(Dt, ue, lt, Y) {
                Ft(Dt, (h << 1) + (Y ? 1 : 0), 3), Nt(Dt, ue, lt, !0);
              }
              function we(Dt) {
                Ft(Dt, d << 1, 3), z(Dt, D, nt), k(Dt);
              }
              function Be(Dt, ue, lt, Y) {
                var j, wt, it = 0;
                Dt.level > 0 ? (Dt.strm.data_type === f && (Dt.strm.data_type = Wt(Dt)), ie(Dt, Dt.l_desc), ie(Dt, Dt.d_desc), it = de(Dt), j = Dt.opt_len + 3 + 7 >>> 3, wt = Dt.static_len + 3 + 7 >>> 3, wt <= j && (j = wt)) : j = wt = lt + 5, lt + 4 <= j && ue !== -1 ? pe(Dt, ue, lt, Y) : Dt.strategy === r || wt === j ? (Ft(Dt, (d << 1) + (Y ? 1 : 0), 3), Ot(Dt, nt, yt)) : (Ft(Dt, (i << 1) + (Y ? 1 : 0), 3), Se(Dt, Dt.l_desc.max_code + 1, Dt.d_desc.max_code + 1, it + 1), Ot(Dt, Dt.dyn_ltree, Dt.dyn_dtree)), tt(Dt), Y && At(Dt);
              }
              function Ie(Dt, ue, lt) {
                return Dt.pending_buf[Dt.d_buf + Dt.last_lit * 2] = ue >>> 8 & 255, Dt.pending_buf[Dt.d_buf + Dt.last_lit * 2 + 1] = ue & 255, Dt.pending_buf[Dt.l_buf + Dt.last_lit] = lt & 255, Dt.last_lit++, ue === 0 ? Dt.dyn_ltree[lt * 2]++ : (Dt.matches++, ue--, Dt.dyn_ltree[(Tt[lt] + e + 1) * 2]++, Dt.dyn_dtree[xt(ue) * 2]++), Dt.last_lit === Dt.lit_bufsize - 1;
              }
              c._tr_init = ce, c._tr_stored_block = pe, c._tr_flush_block = Be, c._tr_tally = Ie, c._tr_align = we;
            }
          ),
          /***/
          28755: (
            /***/
            function(l) {
              function c() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
              }
              l.exports = c;
            }
          ),
          /***/
          82530: (
            /***/
            function(l) {
              var c = l.exports = {}, t, s;
              function r() {
                throw new Error("setTimeout has not been defined");
              }
              function a() {
                throw new Error("clearTimeout has not been defined");
              }
              (function() {
                try {
                  typeof setTimeout == "function" ? t = setTimeout : t = r;
                } catch (x) {
                  t = r;
                }
                try {
                  typeof clearTimeout == "function" ? s = clearTimeout : s = a;
                } catch (x) {
                  s = a;
                }
              })();
              function o(x) {
                if (t === setTimeout)
                  return setTimeout(x, 0);
                if ((t === r || !t) && setTimeout)
                  return t = setTimeout, setTimeout(x, 0);
                try {
                  return t(x, 0);
                } catch (S) {
                  try {
                    return t.call(null, x, 0);
                  } catch (P) {
                    return t.call(this, x, 0);
                  }
                }
              }
              function f(x) {
                if (s === clearTimeout)
                  return clearTimeout(x);
                if ((s === a || !s) && clearTimeout)
                  return s = clearTimeout, clearTimeout(x);
                try {
                  return s(x);
                } catch (S) {
                  try {
                    return s.call(null, x);
                  } catch (P) {
                    return s.call(this, x);
                  }
                }
              }
              var u = [], h = !1, d, i = -1;
              function p() {
                !h || !d || (h = !1, d.length ? u = d.concat(u) : i = -1, u.length && y());
              }
              function y() {
                if (!h) {
                  var x = o(p);
                  h = !0;
                  for (var S = u.length; S; ) {
                    for (d = u, u = []; ++i < S; )
                      d && d[i].run();
                    i = -1, S = u.length;
                  }
                  d = null, h = !1, f(x);
                }
              }
              c.nextTick = function(x) {
                var S = new Array(arguments.length - 1);
                if (arguments.length > 1)
                  for (var P = 1; P < arguments.length; P++)
                    S[P - 1] = arguments[P];
                u.push(new m(x, S)), u.length === 1 && !h && o(y);
              };
              function m(x, S) {
                this.fun = x, this.array = S;
              }
              m.prototype.run = function() {
                this.fun.apply(null, this.array);
              }, c.title = "browser", c.browser = !0, c.env = {}, c.argv = [], c.version = "", c.versions = {};
              function e() {
              }
              c.on = e, c.addListener = e, c.once = e, c.off = e, c.removeListener = e, c.removeAllListeners = e, c.emit = e, c.prependListener = e, c.prependOnceListener = e, c.listeners = function(x) {
                return [];
              }, c.binding = function(x) {
                throw new Error("process.binding is not supported");
              }, c.cwd = function() {
                return "/";
              }, c.chdir = function(x) {
                throw new Error("process.chdir is not supported");
              }, c.umask = function() {
                return 0;
              };
            }
          ),
          /***/
          73994: (
            /***/
            function(l, c, t) {
              var s = t(25021), r = Object, a = TypeError;
              l.exports = s(function() {
                if (this != null && this !== r(this))
                  throw new a("RegExp.prototype.flags getter called on non-object");
                var f = "";
                return this.hasIndices && (f += "d"), this.global && (f += "g"), this.ignoreCase && (f += "i"), this.multiline && (f += "m"), this.dotAll && (f += "s"), this.unicode && (f += "u"), this.unicodeSets && (f += "v"), this.sticky && (f += "y"), f;
              }, "get flags", !0);
            }
          ),
          /***/
          80251: (
            /***/
            function(l, c, t) {
              var s = t(19170), r = t(12550), a = t(73994), o = t(71856), f = t(47278), u = r(o());
              s(u, {
                getPolyfill: o,
                implementation: a,
                shim: f
              }), l.exports = u;
            }
          ),
          /***/
          71856: (
            /***/
            function(l, c, t) {
              var s = t(73994), r = t(19170).supportsDescriptors, a = Object.getOwnPropertyDescriptor;
              l.exports = function() {
                if (r && /a/mig.flags === "gim") {
                  var f = a(RegExp.prototype, "flags");
                  if (f && typeof f.get == "function" && typeof RegExp.prototype.dotAll == "boolean" && typeof RegExp.prototype.hasIndices == "boolean") {
                    var u = "", h = {};
                    if (Object.defineProperty(h, "hasIndices", {
                      get: function() {
                        u += "d";
                      }
                    }), Object.defineProperty(h, "sticky", {
                      get: function() {
                        u += "y";
                      }
                    }), u === "dy")
                      return f.get;
                  }
                }
                return s;
              };
            }
          ),
          /***/
          47278: (
            /***/
            function(l, c, t) {
              var s = t(19170).supportsDescriptors, r = t(71856), a = Object.getOwnPropertyDescriptor, o = Object.defineProperty, f = TypeError, u = Object.getPrototypeOf, h = /a/;
              l.exports = function() {
                if (!s || !u)
                  throw new f("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");
                var i = r(), p = u(h), y = a(p, "flags");
                return (!y || y.get !== i) && o(p, "flags", {
                  configurable: !0,
                  enumerable: !1,
                  get: i
                }), i;
              };
            }
          ),
          /***/
          53407: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer;
              (function(r) {
                r.parser = function(z, C) {
                  return new o(z, C);
                }, r.SAXParser = o, r.SAXStream = y, r.createStream = p, r.MAX_BUFFER_LENGTH = 65536;
                var a = [
                  "comment",
                  "sgmlDecl",
                  "textNode",
                  "tagName",
                  "doctype",
                  "procInstName",
                  "procInstBody",
                  "entity",
                  "attribName",
                  "attribValue",
                  "cdata",
                  "script"
                ];
                r.EVENTS = [
                  "text",
                  "processinginstruction",
                  "sgmldeclaration",
                  "doctype",
                  "comment",
                  "opentagstart",
                  "attribute",
                  "opentag",
                  "closetag",
                  "opencdata",
                  "cdata",
                  "closecdata",
                  "error",
                  "end",
                  "ready",
                  "script",
                  "opennamespace",
                  "closenamespace"
                ];
                function o(z, C) {
                  if (!(this instanceof o))
                    return new o(z, C);
                  var k = this;
                  u(k), k.q = k.c = "", k.bufferCheckPosition = r.MAX_BUFFER_LENGTH, k.opt = C || {}, k.opt.lowercase = k.opt.lowercase || k.opt.lowercasetags, k.looseCase = k.opt.lowercase ? "toLowerCase" : "toUpperCase", k.tags = [], k.closed = k.closedRoot = k.sawRoot = !1, k.tag = k.error = null, k.strict = !!z, k.noscript = !!(z || k.opt.noscript), k.state = M.BEGIN, k.strictEntities = k.opt.strictEntities, k.ENTITIES = k.strictEntities ? Object.create(r.XML_ENTITIES) : Object.create(r.ENTITIES), k.attribList = [], k.opt.xmlns && (k.ns = Object.create(P)), k.trackPosition = k.opt.position !== !1, k.trackPosition && (k.position = k.line = k.column = 0), ct(k, "onready");
                }
                Object.create || (Object.create = function(z) {
                  function C() {
                  }
                  C.prototype = z;
                  var k = new C();
                  return k;
                }), Object.keys || (Object.keys = function(z) {
                  var C = [];
                  for (var k in z)
                    z.hasOwnProperty(k) && C.push(k);
                  return C;
                });
                function f(z) {
                  for (var C = Math.max(r.MAX_BUFFER_LENGTH, 10), k = 0, V = 0, ot = a.length; V < ot; V++) {
                    var et = z[a[V]].length;
                    if (et > C)
                      switch (a[V]) {
                        case "textNode":
                          nt(z);
                          break;
                        case "cdata":
                          J(z, "oncdata", z.cdata), z.cdata = "";
                          break;
                        case "script":
                          J(z, "onscript", z.script), z.script = "";
                          break;
                        default:
                          bt(z, "Max buffer length exceeded: " + a[V]);
                      }
                    k = Math.max(k, et);
                  }
                  var tt = r.MAX_BUFFER_LENGTH - k;
                  z.bufferCheckPosition = tt + z.position;
                }
                function u(z) {
                  for (var C = 0, k = a.length; C < k; C++)
                    z[a[C]] = "";
                }
                function h(z) {
                  nt(z), z.cdata !== "" && (J(z, "oncdata", z.cdata), z.cdata = ""), z.script !== "" && (J(z, "onscript", z.script), z.script = "");
                }
                o.prototype = {
                  end: function() {
                    Tt(this);
                  },
                  write: Ft,
                  resume: function() {
                    return this.error = null, this;
                  },
                  close: function() {
                    return this.write(null);
                  },
                  flush: function() {
                    h(this);
                  }
                };
                var d;
                try {
                  d = t(20202).Stream;
                } catch (z) {
                  d = function() {
                  };
                }
                d || (d = function() {
                });
                var i = r.EVENTS.filter(function(z) {
                  return z !== "error" && z !== "end";
                });
                function p(z, C) {
                  return new y(z, C);
                }
                function y(z, C) {
                  if (!(this instanceof y))
                    return new y(z, C);
                  d.apply(this), this._parser = new o(z, C), this.writable = !0, this.readable = !0;
                  var k = this;
                  this._parser.onend = function() {
                    k.emit("end");
                  }, this._parser.onerror = function(V) {
                    k.emit("error", V), k._parser.error = null;
                  }, this._decoder = null, i.forEach(function(V) {
                    Object.defineProperty(k, "on" + V, {
                      get: function() {
                        return k._parser["on" + V];
                      },
                      set: function(ot) {
                        if (!ot)
                          return k.removeAllListeners(V), k._parser["on" + V] = ot, ot;
                        k.on(V, ot);
                      },
                      enumerable: !0,
                      configurable: !1
                    });
                  });
                }
                y.prototype = Object.create(d.prototype, {
                  constructor: {
                    value: y
                  }
                }), y.prototype.write = function(z) {
                  if (typeof s == "function" && typeof s.isBuffer == "function" && s.isBuffer(z)) {
                    if (!this._decoder) {
                      var C = t(10301).s;
                      this._decoder = new C("utf8");
                    }
                    z = this._decoder.write(z);
                  }
                  return this._parser.write(z.toString()), this.emit("data", z), !0;
                }, y.prototype.end = function(z) {
                  return z && z.length && this.write(z), this._parser.end(), !0;
                }, y.prototype.on = function(z, C) {
                  var k = this;
                  return !k._parser["on" + z] && i.indexOf(z) !== -1 && (k._parser["on" + z] = function() {
                    var V = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);
                    V.splice(0, 0, z), k.emit.apply(k, V);
                  }), d.prototype.on.call(k, z, C);
                };
                var m = "[CDATA[", e = "DOCTYPE", x = "http://www.w3.org/XML/1998/namespace", S = "http://www.w3.org/2000/xmlns/", P = { xml: x, xmlns: S }, O = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, T = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/, A = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, E = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;
                function D(z) {
                  return z === " " || z === `
` || z === "\r" || z === "	";
                }
                function b(z) {
                  return z === '"' || z === "'";
                }
                function R(z) {
                  return z === ">" || D(z);
                }
                function L(z, C) {
                  return z.test(C);
                }
                function N(z, C) {
                  return !L(z, C);
                }
                var M = 0;
                r.STATE = {
                  BEGIN: M++,
                  // leading byte order mark or whitespace
                  BEGIN_WHITESPACE: M++,
                  // leading whitespace
                  TEXT: M++,
                  // general stuff
                  TEXT_ENTITY: M++,
                  // &amp and such.
                  OPEN_WAKA: M++,
                  // <
                  SGML_DECL: M++,
                  // <!BLARG
                  SGML_DECL_QUOTED: M++,
                  // <!BLARG foo "bar
                  DOCTYPE: M++,
                  // <!DOCTYPE
                  DOCTYPE_QUOTED: M++,
                  // <!DOCTYPE "//blah
                  DOCTYPE_DTD: M++,
                  // <!DOCTYPE "//blah" [ ...
                  DOCTYPE_DTD_QUOTED: M++,
                  // <!DOCTYPE "//blah" [ "foo
                  COMMENT_STARTING: M++,
                  // <!-
                  COMMENT: M++,
                  // <!--
                  COMMENT_ENDING: M++,
                  // <!-- blah -
                  COMMENT_ENDED: M++,
                  // <!-- blah --
                  CDATA: M++,
                  // <![CDATA[ something
                  CDATA_ENDING: M++,
                  // ]
                  CDATA_ENDING_2: M++,
                  // ]]
                  PROC_INST: M++,
                  // <?hi
                  PROC_INST_BODY: M++,
                  // <?hi there
                  PROC_INST_ENDING: M++,
                  // <?hi "there" ?
                  OPEN_TAG: M++,
                  // <strong
                  OPEN_TAG_SLASH: M++,
                  // <strong /
                  ATTRIB: M++,
                  // <a
                  ATTRIB_NAME: M++,
                  // <a foo
                  ATTRIB_NAME_SAW_WHITE: M++,
                  // <a foo _
                  ATTRIB_VALUE: M++,
                  // <a foo=
                  ATTRIB_VALUE_QUOTED: M++,
                  // <a foo="bar
                  ATTRIB_VALUE_CLOSED: M++,
                  // <a foo="bar"
                  ATTRIB_VALUE_UNQUOTED: M++,
                  // <a foo=bar
                  ATTRIB_VALUE_ENTITY_Q: M++,
                  // <foo bar="&quot;"
                  ATTRIB_VALUE_ENTITY_U: M++,
                  // <foo bar=&quot
                  CLOSE_TAG: M++,
                  // </a
                  CLOSE_TAG_SAW_WHITE: M++,
                  // </a   >
                  SCRIPT: M++,
                  // <script> ...
                  SCRIPT_ENDING: M++
                  // <script> ... <
                }, r.XML_ENTITIES = {
                  amp: "&",
                  gt: ">",
                  lt: "<",
                  quot: '"',
                  apos: "'"
                }, r.ENTITIES = {
                  amp: "&",
                  gt: ">",
                  lt: "<",
                  quot: '"',
                  apos: "'",
                  AElig: 198,
                  Aacute: 193,
                  Acirc: 194,
                  Agrave: 192,
                  Aring: 197,
                  Atilde: 195,
                  Auml: 196,
                  Ccedil: 199,
                  ETH: 208,
                  Eacute: 201,
                  Ecirc: 202,
                  Egrave: 200,
                  Euml: 203,
                  Iacute: 205,
                  Icirc: 206,
                  Igrave: 204,
                  Iuml: 207,
                  Ntilde: 209,
                  Oacute: 211,
                  Ocirc: 212,
                  Ograve: 210,
                  Oslash: 216,
                  Otilde: 213,
                  Ouml: 214,
                  THORN: 222,
                  Uacute: 218,
                  Ucirc: 219,
                  Ugrave: 217,
                  Uuml: 220,
                  Yacute: 221,
                  aacute: 225,
                  acirc: 226,
                  aelig: 230,
                  agrave: 224,
                  aring: 229,
                  atilde: 227,
                  auml: 228,
                  ccedil: 231,
                  eacute: 233,
                  ecirc: 234,
                  egrave: 232,
                  eth: 240,
                  euml: 235,
                  iacute: 237,
                  icirc: 238,
                  igrave: 236,
                  iuml: 239,
                  ntilde: 241,
                  oacute: 243,
                  ocirc: 244,
                  ograve: 242,
                  oslash: 248,
                  otilde: 245,
                  ouml: 246,
                  szlig: 223,
                  thorn: 254,
                  uacute: 250,
                  ucirc: 251,
                  ugrave: 249,
                  uuml: 252,
                  yacute: 253,
                  yuml: 255,
                  copy: 169,
                  reg: 174,
                  nbsp: 160,
                  iexcl: 161,
                  cent: 162,
                  pound: 163,
                  curren: 164,
                  yen: 165,
                  brvbar: 166,
                  sect: 167,
                  uml: 168,
                  ordf: 170,
                  laquo: 171,
                  not: 172,
                  shy: 173,
                  macr: 175,
                  deg: 176,
                  plusmn: 177,
                  sup1: 185,
                  sup2: 178,
                  sup3: 179,
                  acute: 180,
                  micro: 181,
                  para: 182,
                  middot: 183,
                  cedil: 184,
                  ordm: 186,
                  raquo: 187,
                  frac14: 188,
                  frac12: 189,
                  frac34: 190,
                  iquest: 191,
                  times: 215,
                  divide: 247,
                  OElig: 338,
                  oelig: 339,
                  Scaron: 352,
                  scaron: 353,
                  Yuml: 376,
                  fnof: 402,
                  circ: 710,
                  tilde: 732,
                  Alpha: 913,
                  Beta: 914,
                  Gamma: 915,
                  Delta: 916,
                  Epsilon: 917,
                  Zeta: 918,
                  Eta: 919,
                  Theta: 920,
                  Iota: 921,
                  Kappa: 922,
                  Lambda: 923,
                  Mu: 924,
                  Nu: 925,
                  Xi: 926,
                  Omicron: 927,
                  Pi: 928,
                  Rho: 929,
                  Sigma: 931,
                  Tau: 932,
                  Upsilon: 933,
                  Phi: 934,
                  Chi: 935,
                  Psi: 936,
                  Omega: 937,
                  alpha: 945,
                  beta: 946,
                  gamma: 947,
                  delta: 948,
                  epsilon: 949,
                  zeta: 950,
                  eta: 951,
                  theta: 952,
                  iota: 953,
                  kappa: 954,
                  lambda: 955,
                  mu: 956,
                  nu: 957,
                  xi: 958,
                  omicron: 959,
                  pi: 960,
                  rho: 961,
                  sigmaf: 962,
                  sigma: 963,
                  tau: 964,
                  upsilon: 965,
                  phi: 966,
                  chi: 967,
                  psi: 968,
                  omega: 969,
                  thetasym: 977,
                  upsih: 978,
                  piv: 982,
                  ensp: 8194,
                  emsp: 8195,
                  thinsp: 8201,
                  zwnj: 8204,
                  zwj: 8205,
                  lrm: 8206,
                  rlm: 8207,
                  ndash: 8211,
                  mdash: 8212,
                  lsquo: 8216,
                  rsquo: 8217,
                  sbquo: 8218,
                  ldquo: 8220,
                  rdquo: 8221,
                  bdquo: 8222,
                  dagger: 8224,
                  Dagger: 8225,
                  bull: 8226,
                  hellip: 8230,
                  permil: 8240,
                  prime: 8242,
                  Prime: 8243,
                  lsaquo: 8249,
                  rsaquo: 8250,
                  oline: 8254,
                  frasl: 8260,
                  euro: 8364,
                  image: 8465,
                  weierp: 8472,
                  real: 8476,
                  trade: 8482,
                  alefsym: 8501,
                  larr: 8592,
                  uarr: 8593,
                  rarr: 8594,
                  darr: 8595,
                  harr: 8596,
                  crarr: 8629,
                  lArr: 8656,
                  uArr: 8657,
                  rArr: 8658,
                  dArr: 8659,
                  hArr: 8660,
                  forall: 8704,
                  part: 8706,
                  exist: 8707,
                  empty: 8709,
                  nabla: 8711,
                  isin: 8712,
                  notin: 8713,
                  ni: 8715,
                  prod: 8719,
                  sum: 8721,
                  minus: 8722,
                  lowast: 8727,
                  radic: 8730,
                  prop: 8733,
                  infin: 8734,
                  ang: 8736,
                  and: 8743,
                  or: 8744,
                  cap: 8745,
                  cup: 8746,
                  int: 8747,
                  there4: 8756,
                  sim: 8764,
                  cong: 8773,
                  asymp: 8776,
                  ne: 8800,
                  equiv: 8801,
                  le: 8804,
                  ge: 8805,
                  sub: 8834,
                  sup: 8835,
                  nsub: 8836,
                  sube: 8838,
                  supe: 8839,
                  oplus: 8853,
                  otimes: 8855,
                  perp: 8869,
                  sdot: 8901,
                  lceil: 8968,
                  rceil: 8969,
                  lfloor: 8970,
                  rfloor: 8971,
                  lang: 9001,
                  rang: 9002,
                  loz: 9674,
                  spades: 9824,
                  clubs: 9827,
                  hearts: 9829,
                  diams: 9830
                }, Object.keys(r.ENTITIES).forEach(function(z) {
                  var C = r.ENTITIES[z], k = typeof C == "number" ? String.fromCharCode(C) : C;
                  r.ENTITIES[z] = k;
                });
                for (var K in r.STATE)
                  r.STATE[r.STATE[K]] = K;
                M = r.STATE;
                function ct(z, C, k) {
                  z[C] && z[C](k);
                }
                function J(z, C, k) {
                  z.textNode && nt(z), ct(z, C, k);
                }
                function nt(z) {
                  z.textNode = yt(z.opt, z.textNode), z.textNode && ct(z, "ontext", z.textNode), z.textNode = "";
                }
                function yt(z, C) {
                  return z.trim && (C = C.trim()), z.normalize && (C = C.replace(/\s+/g, " ")), C;
                }
                function bt(z, C) {
                  return nt(z), z.trackPosition && (C += `
Line: ` + z.line + `
Column: ` + z.column + `
Char: ` + z.c), C = new Error(C), z.error = C, ct(z, "onerror", C), z;
                }
                function Tt(z) {
                  return z.sawRoot && !z.closedRoot && It(z, "Unclosed root tag"), z.state !== M.BEGIN && z.state !== M.BEGIN_WHITESPACE && z.state !== M.TEXT && bt(z, "Unexpected end"), nt(z), z.c = "", z.closed = !0, ct(z, "onend"), o.call(z, z.strict, z.opt), z;
                }
                function It(z, C) {
                  if (typeof z != "object" || !(z instanceof o))
                    throw new Error("bad call to strictFail");
                  z.strict && bt(z, C);
                }
                function Lt(z) {
                  z.strict || (z.tagName = z.tagName[z.looseCase]());
                  var C = z.tags[z.tags.length - 1] || z, k = z.tag = { name: z.tagName, attributes: {} };
                  z.opt.xmlns && (k.ns = C.ns), z.attribList.length = 0, J(z, "onopentagstart", k);
                }
                function zt(z, C) {
                  var k = z.indexOf(":"), V = k < 0 ? ["", z] : z.split(":"), ot = V[0], et = V[1];
                  return C && z === "xmlns" && (ot = "xmlns", et = ""), { prefix: ot, local: et };
                }
                function Q(z) {
                  if (z.strict || (z.attribName = z.attribName[z.looseCase]()), z.attribList.indexOf(z.attribName) !== -1 || z.tag.attributes.hasOwnProperty(z.attribName)) {
                    z.attribName = z.attribValue = "";
                    return;
                  }
                  if (z.opt.xmlns) {
                    var C = zt(z.attribName, !0), k = C.prefix, V = C.local;
                    if (k === "xmlns")
                      if (V === "xml" && z.attribValue !== x)
                        It(
                          z,
                          "xml: prefix must be bound to " + x + `
Actual: ` + z.attribValue
                        );
                      else if (V === "xmlns" && z.attribValue !== S)
                        It(
                          z,
                          "xmlns: prefix must be bound to " + S + `
Actual: ` + z.attribValue
                        );
                      else {
                        var ot = z.tag, et = z.tags[z.tags.length - 1] || z;
                        ot.ns === et.ns && (ot.ns = Object.create(et.ns)), ot.ns[V] = z.attribValue;
                      }
                    z.attribList.push([z.attribName, z.attribValue]);
                  } else
                    z.tag.attributes[z.attribName] = z.attribValue, J(z, "onattribute", {
                      name: z.attribName,
                      value: z.attribValue
                    });
                  z.attribName = z.attribValue = "";
                }
                function gt(z, C) {
                  if (z.opt.xmlns) {
                    var k = z.tag, V = zt(z.tagName);
                    k.prefix = V.prefix, k.local = V.local, k.uri = k.ns[V.prefix] || "", k.prefix && !k.uri && (It(z, "Unbound namespace prefix: " + JSON.stringify(z.tagName)), k.uri = V.prefix);
                    var ot = z.tags[z.tags.length - 1] || z;
                    k.ns && ot.ns !== k.ns && Object.keys(k.ns).forEach(function(de) {
                      J(z, "onopennamespace", {
                        prefix: de,
                        uri: k.ns[de]
                      });
                    });
                    for (var et = 0, tt = z.attribList.length; et < tt; et++) {
                      var At = z.attribList[et], Nt = At[0], Kt = At[1], Vt = zt(Nt, !0), Ot = Vt.prefix, ie = Vt.local, Ae = Ot === "" ? "" : k.ns[Ot] || "", be = {
                        name: Nt,
                        value: Kt,
                        prefix: Ot,
                        local: ie,
                        uri: Ae
                      };
                      Ot && Ot !== "xmlns" && !Ae && (It(z, "Unbound namespace prefix: " + JSON.stringify(Ot)), be.uri = Ot), z.tag.attributes[Nt] = be, J(z, "onattribute", be);
                    }
                    z.attribList.length = 0;
                  }
                  z.tag.isSelfClosing = !!C, z.sawRoot = !0, z.tags.push(z.tag), J(z, "onopentag", z.tag), C || (!z.noscript && z.tagName.toLowerCase() === "script" ? z.state = M.SCRIPT : z.state = M.TEXT, z.tag = null, z.tagName = ""), z.attribName = z.attribValue = "", z.attribList.length = 0;
                }
                function ht(z) {
                  if (!z.tagName) {
                    It(z, "Weird empty close tag."), z.textNode += "</>", z.state = M.TEXT;
                    return;
                  }
                  if (z.script) {
                    if (z.tagName !== "script") {
                      z.script += "</" + z.tagName + ">", z.tagName = "", z.state = M.SCRIPT;
                      return;
                    }
                    J(z, "onscript", z.script), z.script = "";
                  }
                  var C = z.tags.length, k = z.tagName;
                  z.strict || (k = k[z.looseCase]());
                  for (var V = k; C--; ) {
                    var ot = z.tags[C];
                    if (ot.name !== V)
                      It(z, "Unexpected close tag");
                    else
                      break;
                  }
                  if (C < 0) {
                    It(z, "Unmatched closing tag: " + z.tagName), z.textNode += "</" + z.tagName + ">", z.state = M.TEXT;
                    return;
                  }
                  z.tagName = k;
                  for (var et = z.tags.length; et-- > C; ) {
                    var tt = z.tag = z.tags.pop();
                    z.tagName = z.tag.name, J(z, "onclosetag", z.tagName);
                    var At = {};
                    for (var Nt in tt.ns)
                      At[Nt] = tt.ns[Nt];
                    var Kt = z.tags[z.tags.length - 1] || z;
                    z.opt.xmlns && tt.ns !== Kt.ns && Object.keys(tt.ns).forEach(function(Vt) {
                      var Ot = tt.ns[Vt];
                      J(z, "onclosenamespace", { prefix: Vt, uri: Ot });
                    });
                  }
                  C === 0 && (z.closedRoot = !0), z.tagName = z.attribValue = z.attribName = "", z.attribList.length = 0, z.state = M.TEXT;
                }
                function st(z) {
                  var C = z.entity, k = C.toLowerCase(), V, ot = "";
                  return z.ENTITIES[C] ? z.ENTITIES[C] : z.ENTITIES[k] ? z.ENTITIES[k] : (C = k, C.charAt(0) === "#" && (C.charAt(1) === "x" ? (C = C.slice(2), V = parseInt(C, 16), ot = V.toString(16)) : (C = C.slice(1), V = parseInt(C, 10), ot = V.toString(10))), C = C.replace(/^0+/, ""), isNaN(V) || ot.toLowerCase() !== C ? (It(z, "Invalid character entity"), "&" + z.entity + ";") : String.fromCodePoint(V));
                }
                function xt(z, C) {
                  C === "<" ? (z.state = M.OPEN_WAKA, z.startTagPosition = z.position) : D(C) || (It(z, "Non-whitespace before first tag."), z.textNode = C, z.state = M.TEXT);
                }
                function G(z, C) {
                  var k = "";
                  return C < z.length && (k = z.charAt(C)), k;
                }
                function Ft(z) {
                  var C = this;
                  if (this.error)
                    throw this.error;
                  if (C.closed)
                    return bt(
                      C,
                      "Cannot write after close. Assign an onready handler."
                    );
                  if (z === null)
                    return Tt(C);
                  typeof z == "object" && (z = z.toString());
                  for (var k = 0, V = ""; V = G(z, k++), C.c = V, !!V; )
                    switch (C.trackPosition && (C.position++, V === `
` ? (C.line++, C.column = 0) : C.column++), C.state) {
                      case M.BEGIN:
                        if (C.state = M.BEGIN_WHITESPACE, V === "\uFEFF")
                          continue;
                        xt(C, V);
                        continue;
                      case M.BEGIN_WHITESPACE:
                        xt(C, V);
                        continue;
                      case M.TEXT:
                        if (C.sawRoot && !C.closedRoot) {
                          for (var ot = k - 1; V && V !== "<" && V !== "&"; )
                            V = G(z, k++), V && C.trackPosition && (C.position++, V === `
` ? (C.line++, C.column = 0) : C.column++);
                          C.textNode += z.substring(ot, k - 1);
                        }
                        V === "<" && !(C.sawRoot && C.closedRoot && !C.strict) ? (C.state = M.OPEN_WAKA, C.startTagPosition = C.position) : (!D(V) && (!C.sawRoot || C.closedRoot) && It(C, "Text data outside of root node."), V === "&" ? C.state = M.TEXT_ENTITY : C.textNode += V);
                        continue;
                      case M.SCRIPT:
                        V === "<" ? C.state = M.SCRIPT_ENDING : C.script += V;
                        continue;
                      case M.SCRIPT_ENDING:
                        V === "/" ? C.state = M.CLOSE_TAG : (C.script += "<" + V, C.state = M.SCRIPT);
                        continue;
                      case M.OPEN_WAKA:
                        if (V === "!")
                          C.state = M.SGML_DECL, C.sgmlDecl = "";
                        else if (!D(V))
                          if (L(O, V))
                            C.state = M.OPEN_TAG, C.tagName = V;
                          else if (V === "/")
                            C.state = M.CLOSE_TAG, C.tagName = "";
                          else if (V === "?")
                            C.state = M.PROC_INST, C.procInstName = C.procInstBody = "";
                          else {
                            if (It(C, "Unencoded <"), C.startTagPosition + 1 < C.position) {
                              var et = C.position - C.startTagPosition;
                              V = new Array(et).join(" ") + V;
                            }
                            C.textNode += "<" + V, C.state = M.TEXT;
                          }
                        continue;
                      case M.SGML_DECL:
                        (C.sgmlDecl + V).toUpperCase() === m ? (J(C, "onopencdata"), C.state = M.CDATA, C.sgmlDecl = "", C.cdata = "") : C.sgmlDecl + V === "--" ? (C.state = M.COMMENT, C.comment = "", C.sgmlDecl = "") : (C.sgmlDecl + V).toUpperCase() === e ? (C.state = M.DOCTYPE, (C.doctype || C.sawRoot) && It(
                          C,
                          "Inappropriately located doctype declaration"
                        ), C.doctype = "", C.sgmlDecl = "") : V === ">" ? (J(C, "onsgmldeclaration", C.sgmlDecl), C.sgmlDecl = "", C.state = M.TEXT) : (b(V) && (C.state = M.SGML_DECL_QUOTED), C.sgmlDecl += V);
                        continue;
                      case M.SGML_DECL_QUOTED:
                        V === C.q && (C.state = M.SGML_DECL, C.q = ""), C.sgmlDecl += V;
                        continue;
                      case M.DOCTYPE:
                        V === ">" ? (C.state = M.TEXT, J(C, "ondoctype", C.doctype), C.doctype = !0) : (C.doctype += V, V === "[" ? C.state = M.DOCTYPE_DTD : b(V) && (C.state = M.DOCTYPE_QUOTED, C.q = V));
                        continue;
                      case M.DOCTYPE_QUOTED:
                        C.doctype += V, V === C.q && (C.q = "", C.state = M.DOCTYPE);
                        continue;
                      case M.DOCTYPE_DTD:
                        C.doctype += V, V === "]" ? C.state = M.DOCTYPE : b(V) && (C.state = M.DOCTYPE_DTD_QUOTED, C.q = V);
                        continue;
                      case M.DOCTYPE_DTD_QUOTED:
                        C.doctype += V, V === C.q && (C.state = M.DOCTYPE_DTD, C.q = "");
                        continue;
                      case M.COMMENT:
                        V === "-" ? C.state = M.COMMENT_ENDING : C.comment += V;
                        continue;
                      case M.COMMENT_ENDING:
                        V === "-" ? (C.state = M.COMMENT_ENDED, C.comment = yt(C.opt, C.comment), C.comment && J(C, "oncomment", C.comment), C.comment = "") : (C.comment += "-" + V, C.state = M.COMMENT);
                        continue;
                      case M.COMMENT_ENDED:
                        V !== ">" ? (It(C, "Malformed comment"), C.comment += "--" + V, C.state = M.COMMENT) : C.state = M.TEXT;
                        continue;
                      case M.CDATA:
                        V === "]" ? C.state = M.CDATA_ENDING : C.cdata += V;
                        continue;
                      case M.CDATA_ENDING:
                        V === "]" ? C.state = M.CDATA_ENDING_2 : (C.cdata += "]" + V, C.state = M.CDATA);
                        continue;
                      case M.CDATA_ENDING_2:
                        V === ">" ? (C.cdata && J(C, "oncdata", C.cdata), J(C, "onclosecdata"), C.cdata = "", C.state = M.TEXT) : V === "]" ? C.cdata += "]" : (C.cdata += "]]" + V, C.state = M.CDATA);
                        continue;
                      case M.PROC_INST:
                        V === "?" ? C.state = M.PROC_INST_ENDING : D(V) ? C.state = M.PROC_INST_BODY : C.procInstName += V;
                        continue;
                      case M.PROC_INST_BODY:
                        if (!C.procInstBody && D(V))
                          continue;
                        V === "?" ? C.state = M.PROC_INST_ENDING : C.procInstBody += V;
                        continue;
                      case M.PROC_INST_ENDING:
                        V === ">" ? (J(C, "onprocessinginstruction", {
                          name: C.procInstName,
                          body: C.procInstBody
                        }), C.procInstName = C.procInstBody = "", C.state = M.TEXT) : (C.procInstBody += "?" + V, C.state = M.PROC_INST_BODY);
                        continue;
                      case M.OPEN_TAG:
                        L(T, V) ? C.tagName += V : (Lt(C), V === ">" ? gt(C) : V === "/" ? C.state = M.OPEN_TAG_SLASH : (D(V) || It(C, "Invalid character in tag name"), C.state = M.ATTRIB));
                        continue;
                      case M.OPEN_TAG_SLASH:
                        V === ">" ? (gt(C, !0), ht(C)) : (It(C, "Forward-slash in opening tag not followed by >"), C.state = M.ATTRIB);
                        continue;
                      case M.ATTRIB:
                        if (D(V))
                          continue;
                        V === ">" ? gt(C) : V === "/" ? C.state = M.OPEN_TAG_SLASH : L(O, V) ? (C.attribName = V, C.attribValue = "", C.state = M.ATTRIB_NAME) : It(C, "Invalid attribute name");
                        continue;
                      case M.ATTRIB_NAME:
                        V === "=" ? C.state = M.ATTRIB_VALUE : V === ">" ? (It(C, "Attribute without value"), C.attribValue = C.attribName, Q(C), gt(C)) : D(V) ? C.state = M.ATTRIB_NAME_SAW_WHITE : L(T, V) ? C.attribName += V : It(C, "Invalid attribute name");
                        continue;
                      case M.ATTRIB_NAME_SAW_WHITE:
                        if (V === "=")
                          C.state = M.ATTRIB_VALUE;
                        else {
                          if (D(V))
                            continue;
                          It(C, "Attribute without value"), C.tag.attributes[C.attribName] = "", C.attribValue = "", J(C, "onattribute", {
                            name: C.attribName,
                            value: ""
                          }), C.attribName = "", V === ">" ? gt(C) : L(O, V) ? (C.attribName = V, C.state = M.ATTRIB_NAME) : (It(C, "Invalid attribute name"), C.state = M.ATTRIB);
                        }
                        continue;
                      case M.ATTRIB_VALUE:
                        if (D(V))
                          continue;
                        b(V) ? (C.q = V, C.state = M.ATTRIB_VALUE_QUOTED) : (It(C, "Unquoted attribute value"), C.state = M.ATTRIB_VALUE_UNQUOTED, C.attribValue = V);
                        continue;
                      case M.ATTRIB_VALUE_QUOTED:
                        if (V !== C.q) {
                          V === "&" ? C.state = M.ATTRIB_VALUE_ENTITY_Q : C.attribValue += V;
                          continue;
                        }
                        Q(C), C.q = "", C.state = M.ATTRIB_VALUE_CLOSED;
                        continue;
                      case M.ATTRIB_VALUE_CLOSED:
                        D(V) ? C.state = M.ATTRIB : V === ">" ? gt(C) : V === "/" ? C.state = M.OPEN_TAG_SLASH : L(O, V) ? (It(C, "No whitespace between attributes"), C.attribName = V, C.attribValue = "", C.state = M.ATTRIB_NAME) : It(C, "Invalid attribute name");
                        continue;
                      case M.ATTRIB_VALUE_UNQUOTED:
                        if (!R(V)) {
                          V === "&" ? C.state = M.ATTRIB_VALUE_ENTITY_U : C.attribValue += V;
                          continue;
                        }
                        Q(C), V === ">" ? gt(C) : C.state = M.ATTRIB;
                        continue;
                      case M.CLOSE_TAG:
                        if (C.tagName)
                          V === ">" ? ht(C) : L(T, V) ? C.tagName += V : C.script ? (C.script += "</" + C.tagName, C.tagName = "", C.state = M.SCRIPT) : (D(V) || It(C, "Invalid tagname in closing tag"), C.state = M.CLOSE_TAG_SAW_WHITE);
                        else {
                          if (D(V))
                            continue;
                          N(O, V) ? C.script ? (C.script += "</" + V, C.state = M.SCRIPT) : It(C, "Invalid tagname in closing tag.") : C.tagName = V;
                        }
                        continue;
                      case M.CLOSE_TAG_SAW_WHITE:
                        if (D(V))
                          continue;
                        V === ">" ? ht(C) : It(C, "Invalid characters in closing tag");
                        continue;
                      case M.TEXT_ENTITY:
                      case M.ATTRIB_VALUE_ENTITY_Q:
                      case M.ATTRIB_VALUE_ENTITY_U:
                        var tt, At;
                        switch (C.state) {
                          case M.TEXT_ENTITY:
                            tt = M.TEXT, At = "textNode";
                            break;
                          case M.ATTRIB_VALUE_ENTITY_Q:
                            tt = M.ATTRIB_VALUE_QUOTED, At = "attribValue";
                            break;
                          case M.ATTRIB_VALUE_ENTITY_U:
                            tt = M.ATTRIB_VALUE_UNQUOTED, At = "attribValue";
                            break;
                        }
                        if (V === ";")
                          if (C.opt.unparsedEntities) {
                            var Nt = st(C);
                            C.entity = "", C.state = tt, C.write(Nt);
                          } else
                            C[At] += st(C), C.entity = "", C.state = tt;
                        else
                          L(C.entity.length ? E : A, V) ? C.entity += V : (It(C, "Invalid character in entity name"), C[At] += "&" + C.entity + V, C.entity = "", C.state = tt);
                        continue;
                      default:
                        throw new Error(C, "Unknown state: " + C.state);
                    }
                  return C.position >= C.bufferCheckPosition && f(C), C;
                }
                /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */
                String.fromCodePoint || function() {
                  var z = String.fromCharCode, C = Math.floor, k = function() {
                    var V = 16384, ot = [], et, tt, At = -1, Nt = arguments.length;
                    if (!Nt)
                      return "";
                    for (var Kt = ""; ++At < Nt; ) {
                      var Vt = Number(arguments[At]);
                      if (!isFinite(Vt) || // `NaN`, `+Infinity`, or `-Infinity`
                      Vt < 0 || // not a valid Unicode code point
                      Vt > 1114111 || // not a valid Unicode code point
                      C(Vt) !== Vt)
                        throw RangeError("Invalid code point: " + Vt);
                      Vt <= 65535 ? ot.push(Vt) : (Vt -= 65536, et = (Vt >> 10) + 55296, tt = Vt % 1024 + 56320, ot.push(et, tt)), (At + 1 === Nt || ot.length > V) && (Kt += z.apply(null, ot), ot.length = 0);
                    }
                    return Kt;
                  };
                  Object.defineProperty ? Object.defineProperty(String, "fromCodePoint", {
                    value: k,
                    configurable: !0,
                    writable: !0
                  }) : String.fromCodePoint = k;
                }();
              })(c);
            }
          ),
          /***/
          34521: (
            /***/
            function(l, c, t) {
              var s = t(31801), r = t(72656), a = t(28198)(), o = t(93828), f = s("%TypeError%"), u = s("%Math.floor%");
              l.exports = function(d, i) {
                if (typeof d != "function")
                  throw new f("`fn` is not a function");
                if (typeof i != "number" || i < 0 || i > 4294967295 || u(i) !== i)
                  throw new f("`length` must be a positive 32-bit integer");
                var p = arguments.length > 2 && !!arguments[2], y = !0, m = !0;
                if ("length" in d && o) {
                  var e = o(d, "length");
                  e && !e.configurable && (y = !1), e && !e.writable && (m = !1);
                }
                return (y || m || !p) && (a ? r(d, "length", i, !0, !0) : r(d, "length", i)), d;
              };
            }
          ),
          /***/
          25021: (
            /***/
            function(l, c, t) {
              var s = t(72656), r = t(28198)(), a = t(87105).functionsHaveConfigurableNames(), o = TypeError;
              l.exports = function(u, h) {
                if (typeof u != "function")
                  throw new o("`fn` is not a function");
                var d = arguments.length > 2 && !!arguments[2];
                return (!d || a) && (r ? s(u, "name", h, !0, !0) : s(u, "name", h)), u;
              };
            }
          ),
          /***/
          20202: (
            /***/
            function(l, c, t) {
              l.exports = a;
              var s = t(5939).EventEmitter, r = t(48575);
              r(a, s), a.Readable = t(28193), a.Writable = t(16667), a.Duplex = t(53551), a.Transform = t(10695), a.PassThrough = t(89371), a.finished = t(47549), a.pipeline = t(44858), a.Stream = a;
              function a() {
                s.call(this);
              }
              a.prototype.pipe = function(o, f) {
                var u = this;
                function h(x) {
                  o.writable && o.write(x) === !1 && u.pause && u.pause();
                }
                u.on("data", h);
                function d() {
                  u.readable && u.resume && u.resume();
                }
                o.on("drain", d), !o._isStdio && (!f || f.end !== !1) && (u.on("end", p), u.on("close", y));
                var i = !1;
                function p() {
                  i || (i = !0, o.end());
                }
                function y() {
                  i || (i = !0, typeof o.destroy == "function" && o.destroy());
                }
                function m(x) {
                  if (e(), s.listenerCount(this, "error") === 0)
                    throw x;
                }
                u.on("error", m), o.on("error", m);
                function e() {
                  u.removeListener("data", h), o.removeListener("drain", d), u.removeListener("end", p), u.removeListener("close", y), u.removeListener("error", m), o.removeListener("error", m), u.removeListener("end", e), u.removeListener("close", e), o.removeListener("close", e);
                }
                return u.on("end", e), u.on("close", e), o.on("close", e), o.emit("pipe", u), o;
              };
            }
          ),
          /***/
          75065: (
            /***/
            function(l) {
              function c(u, h) {
                u.prototype = Object.create(h.prototype), u.prototype.constructor = u, u.__proto__ = h;
              }
              var t = {};
              function s(u, h, d) {
                d || (d = Error);
                function i(y, m, e) {
                  return typeof h == "string" ? h : h(y, m, e);
                }
                var p = /* @__PURE__ */ function(y) {
                  c(m, y);
                  function m(e, x, S) {
                    return y.call(this, i(e, x, S)) || this;
                  }
                  return m;
                }(d);
                p.prototype.name = d.name, p.prototype.code = u, t[u] = p;
              }
              function r(u, h) {
                if (Array.isArray(u)) {
                  var d = u.length;
                  return u = u.map(function(i) {
                    return String(i);
                  }), d > 2 ? "one of ".concat(h, " ").concat(u.slice(0, d - 1).join(", "), ", or ") + u[d - 1] : d === 2 ? "one of ".concat(h, " ").concat(u[0], " or ").concat(u[1]) : "of ".concat(h, " ").concat(u[0]);
                } else
                  return "of ".concat(h, " ").concat(String(u));
              }
              function a(u, h, d) {
                return u.substr(!d || d < 0 ? 0 : +d, h.length) === h;
              }
              function o(u, h, d) {
                return (d === void 0 || d > u.length) && (d = u.length), u.substring(d - h.length, d) === h;
              }
              function f(u, h, d) {
                return typeof d != "number" && (d = 0), d + h.length > u.length ? !1 : u.indexOf(h, d) !== -1;
              }
              s("ERR_INVALID_OPT_VALUE", function(u, h) {
                return 'The value "' + h + '" is invalid for option "' + u + '"';
              }, TypeError), s("ERR_INVALID_ARG_TYPE", function(u, h, d) {
                var i;
                typeof h == "string" && a(h, "not ") ? (i = "must not be", h = h.replace(/^not /, "")) : i = "must be";
                var p;
                if (o(u, " argument"))
                  p = "The ".concat(u, " ").concat(i, " ").concat(r(h, "type"));
                else {
                  var y = f(u, ".") ? "property" : "argument";
                  p = 'The "'.concat(u, '" ').concat(y, " ").concat(i, " ").concat(r(h, "type"));
                }
                return p += ". Received type ".concat(typeof d), p;
              }, TypeError), s("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), s("ERR_METHOD_NOT_IMPLEMENTED", function(u) {
                return "The " + u + " method is not implemented";
              }), s("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), s("ERR_STREAM_DESTROYED", function(u) {
                return "Cannot call " + u + " after a stream was destroyed";
              }), s("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), s("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), s("ERR_STREAM_WRITE_AFTER_END", "write after end"), s("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), s("ERR_UNKNOWN_ENCODING", function(u) {
                return "Unknown encoding: " + u;
              }, TypeError), s("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), l.exports.q = t;
            }
          ),
          /***/
          53551: (
            /***/
            function(l, c, t) {
              var s = t(82530), r = Object.keys || function(y) {
                var m = [];
                for (var e in y)
                  m.push(e);
                return m;
              };
              l.exports = d;
              var a = t(28193), o = t(16667);
              t(48575)(d, a);
              for (var f = r(o.prototype), u = 0; u < f.length; u++) {
                var h = f[u];
                d.prototype[h] || (d.prototype[h] = o.prototype[h]);
              }
              function d(y) {
                if (!(this instanceof d))
                  return new d(y);
                a.call(this, y), o.call(this, y), this.allowHalfOpen = !0, y && (y.readable === !1 && (this.readable = !1), y.writable === !1 && (this.writable = !1), y.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", i)));
              }
              Object.defineProperty(d.prototype, "writableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.highWaterMark;
                }
              }), Object.defineProperty(d.prototype, "writableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState && this._writableState.getBuffer();
                }
              }), Object.defineProperty(d.prototype, "writableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.length;
                }
              });
              function i() {
                this._writableState.ended || s.nextTick(p, this);
              }
              function p(y) {
                y.end();
              }
              Object.defineProperty(d.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
                },
                set: function(m) {
                  this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = m, this._writableState.destroyed = m);
                }
              });
            }
          ),
          /***/
          89371: (
            /***/
            function(l, c, t) {
              l.exports = r;
              var s = t(10695);
              t(48575)(r, s);
              function r(a) {
                if (!(this instanceof r))
                  return new r(a);
                s.call(this, a);
              }
              r.prototype._transform = function(a, o, f) {
                f(null, a);
              };
            }
          ),
          /***/
          28193: (
            /***/
            function(l, c, t) {
              var s = t(82530);
              l.exports = K;
              var r;
              K.ReadableState = M, t(5939).EventEmitter;
              var a = function(tt, At) {
                return tt.listeners(At).length;
              }, o = t(5908), f = t(43060).Buffer, u = (typeof t.g != "undefined" ? t.g : typeof window != "undefined" ? window : typeof self != "undefined" ? self : {}).Uint8Array || function() {
              };
              function h(et) {
                return f.from(et);
              }
              function d(et) {
                return f.isBuffer(et) || et instanceof u;
              }
              var i = t(40964), p;
              i && i.debuglog ? p = i.debuglog("stream") : p = function() {
              };
              var y = t(55681), m = t(89930), e = t(39025), x = e.getHighWaterMark, S = t(75065).q, P = S.ERR_INVALID_ARG_TYPE, O = S.ERR_STREAM_PUSH_AFTER_EOF, T = S.ERR_METHOD_NOT_IMPLEMENTED, A = S.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, E, D, b;
              t(48575)(K, o);
              var R = m.errorOrDestroy, L = ["error", "close", "destroy", "pause", "resume"];
              function N(et, tt, At) {
                if (typeof et.prependListener == "function")
                  return et.prependListener(tt, At);
                !et._events || !et._events[tt] ? et.on(tt, At) : Array.isArray(et._events[tt]) ? et._events[tt].unshift(At) : et._events[tt] = [At, et._events[tt]];
              }
              function M(et, tt, At) {
                r = r || t(53551), et = et || {}, typeof At != "boolean" && (At = tt instanceof r), this.objectMode = !!et.objectMode, At && (this.objectMode = this.objectMode || !!et.readableObjectMode), this.highWaterMark = x(this, et, "readableHighWaterMark", At), this.buffer = new y(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = et.emitClose !== !1, this.autoDestroy = !!et.autoDestroy, this.destroyed = !1, this.defaultEncoding = et.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, et.encoding && (E || (E = t(10301).s), this.decoder = new E(et.encoding), this.encoding = et.encoding);
              }
              function K(et) {
                if (r = r || t(53551), !(this instanceof K))
                  return new K(et);
                var tt = this instanceof r;
                this._readableState = new M(et, this, tt), this.readable = !0, et && (typeof et.read == "function" && (this._read = et.read), typeof et.destroy == "function" && (this._destroy = et.destroy)), o.call(this);
              }
              Object.defineProperty(K.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState === void 0 ? !1 : this._readableState.destroyed;
                },
                set: function(tt) {
                  this._readableState && (this._readableState.destroyed = tt);
                }
              }), K.prototype.destroy = m.destroy, K.prototype._undestroy = m.undestroy, K.prototype._destroy = function(et, tt) {
                tt(et);
              }, K.prototype.push = function(et, tt) {
                var At = this._readableState, Nt;
                return At.objectMode ? Nt = !0 : typeof et == "string" && (tt = tt || At.defaultEncoding, tt !== At.encoding && (et = f.from(et, tt), tt = ""), Nt = !0), ct(this, et, tt, !1, Nt);
              }, K.prototype.unshift = function(et) {
                return ct(this, et, null, !0, !1);
              };
              function ct(et, tt, At, Nt, Kt) {
                p("readableAddChunk", tt);
                var Vt = et._readableState;
                if (tt === null)
                  Vt.reading = !1, It(et, Vt);
                else {
                  var Ot;
                  if (Kt || (Ot = nt(Vt, tt)), Ot)
                    R(et, Ot);
                  else if (Vt.objectMode || tt && tt.length > 0)
                    if (typeof tt != "string" && !Vt.objectMode && Object.getPrototypeOf(tt) !== f.prototype && (tt = h(tt)), Nt)
                      Vt.endEmitted ? R(et, new A()) : J(et, Vt, tt, !0);
                    else if (Vt.ended)
                      R(et, new O());
                    else {
                      if (Vt.destroyed)
                        return !1;
                      Vt.reading = !1, Vt.decoder && !At ? (tt = Vt.decoder.write(tt), Vt.objectMode || tt.length !== 0 ? J(et, Vt, tt, !1) : Q(et, Vt)) : J(et, Vt, tt, !1);
                    }
                  else
                    Nt || (Vt.reading = !1, Q(et, Vt));
                }
                return !Vt.ended && (Vt.length < Vt.highWaterMark || Vt.length === 0);
              }
              function J(et, tt, At, Nt) {
                tt.flowing && tt.length === 0 && !tt.sync ? (tt.awaitDrain = 0, et.emit("data", At)) : (tt.length += tt.objectMode ? 1 : At.length, Nt ? tt.buffer.unshift(At) : tt.buffer.push(At), tt.needReadable && Lt(et)), Q(et, tt);
              }
              function nt(et, tt) {
                var At;
                return !d(tt) && typeof tt != "string" && tt !== void 0 && !et.objectMode && (At = new P("chunk", ["string", "Buffer", "Uint8Array"], tt)), At;
              }
              K.prototype.isPaused = function() {
                return this._readableState.flowing === !1;
              }, K.prototype.setEncoding = function(et) {
                E || (E = t(10301).s);
                var tt = new E(et);
                this._readableState.decoder = tt, this._readableState.encoding = this._readableState.decoder.encoding;
                for (var At = this._readableState.buffer.head, Nt = ""; At !== null; )
                  Nt += tt.write(At.data), At = At.next;
                return this._readableState.buffer.clear(), Nt !== "" && this._readableState.buffer.push(Nt), this._readableState.length = Nt.length, this;
              };
              var yt = 1073741824;
              function bt(et) {
                return et >= yt ? et = yt : (et--, et |= et >>> 1, et |= et >>> 2, et |= et >>> 4, et |= et >>> 8, et |= et >>> 16, et++), et;
              }
              function Tt(et, tt) {
                return et <= 0 || tt.length === 0 && tt.ended ? 0 : tt.objectMode ? 1 : et !== et ? tt.flowing && tt.length ? tt.buffer.head.data.length : tt.length : (et > tt.highWaterMark && (tt.highWaterMark = bt(et)), et <= tt.length ? et : tt.ended ? tt.length : (tt.needReadable = !0, 0));
              }
              K.prototype.read = function(et) {
                p("read", et), et = parseInt(et, 10);
                var tt = this._readableState, At = et;
                if (et !== 0 && (tt.emittedReadable = !1), et === 0 && tt.needReadable && ((tt.highWaterMark !== 0 ? tt.length >= tt.highWaterMark : tt.length > 0) || tt.ended))
                  return p("read: emitReadable", tt.length, tt.ended), tt.length === 0 && tt.ended ? k(this) : Lt(this), null;
                if (et = Tt(et, tt), et === 0 && tt.ended)
                  return tt.length === 0 && k(this), null;
                var Nt = tt.needReadable;
                p("need readable", Nt), (tt.length === 0 || tt.length - et < tt.highWaterMark) && (Nt = !0, p("length less than watermark", Nt)), tt.ended || tt.reading ? (Nt = !1, p("reading or ended", Nt)) : Nt && (p("do read"), tt.reading = !0, tt.sync = !0, tt.length === 0 && (tt.needReadable = !0), this._read(tt.highWaterMark), tt.sync = !1, tt.reading || (et = Tt(At, tt)));
                var Kt;
                return et > 0 ? Kt = C(et, tt) : Kt = null, Kt === null ? (tt.needReadable = tt.length <= tt.highWaterMark, et = 0) : (tt.length -= et, tt.awaitDrain = 0), tt.length === 0 && (tt.ended || (tt.needReadable = !0), At !== et && tt.ended && k(this)), Kt !== null && this.emit("data", Kt), Kt;
              };
              function It(et, tt) {
                if (p("onEofChunk"), !tt.ended) {
                  if (tt.decoder) {
                    var At = tt.decoder.end();
                    At && At.length && (tt.buffer.push(At), tt.length += tt.objectMode ? 1 : At.length);
                  }
                  tt.ended = !0, tt.sync ? Lt(et) : (tt.needReadable = !1, tt.emittedReadable || (tt.emittedReadable = !0, zt(et)));
                }
              }
              function Lt(et) {
                var tt = et._readableState;
                p("emitReadable", tt.needReadable, tt.emittedReadable), tt.needReadable = !1, tt.emittedReadable || (p("emitReadable", tt.flowing), tt.emittedReadable = !0, s.nextTick(zt, et));
              }
              function zt(et) {
                var tt = et._readableState;
                p("emitReadable_", tt.destroyed, tt.length, tt.ended), !tt.destroyed && (tt.length || tt.ended) && (et.emit("readable"), tt.emittedReadable = !1), tt.needReadable = !tt.flowing && !tt.ended && tt.length <= tt.highWaterMark, z(et);
              }
              function Q(et, tt) {
                tt.readingMore || (tt.readingMore = !0, s.nextTick(gt, et, tt));
              }
              function gt(et, tt) {
                for (; !tt.reading && !tt.ended && (tt.length < tt.highWaterMark || tt.flowing && tt.length === 0); ) {
                  var At = tt.length;
                  if (p("maybeReadMore read 0"), et.read(0), At === tt.length)
                    break;
                }
                tt.readingMore = !1;
              }
              K.prototype._read = function(et) {
                R(this, new T("_read()"));
              }, K.prototype.pipe = function(et, tt) {
                var At = this, Nt = this._readableState;
                switch (Nt.pipesCount) {
                  case 0:
                    Nt.pipes = et;
                    break;
                  case 1:
                    Nt.pipes = [Nt.pipes, et];
                    break;
                  default:
                    Nt.pipes.push(et);
                    break;
                }
                Nt.pipesCount += 1, p("pipe count=%d opts=%j", Nt.pipesCount, tt);
                var Kt = (!tt || tt.end !== !1) && et !== s.stdout && et !== s.stderr, Vt = Kt ? ie : pe;
                Nt.endEmitted ? s.nextTick(Vt) : At.once("end", Vt), et.on("unpipe", Ot);
                function Ot(we, Be) {
                  p("onunpipe"), we === At && Be && Be.hasUnpiped === !1 && (Be.hasUnpiped = !0, de());
                }
                function ie() {
                  p("onend"), et.end();
                }
                var Ae = ht(At);
                et.on("drain", Ae);
                var be = !1;
                function de() {
                  p("cleanup"), et.removeListener("close", _t), et.removeListener("finish", ce), et.removeListener("drain", Ae), et.removeListener("error", Wt), et.removeListener("unpipe", Ot), At.removeListener("end", ie), At.removeListener("end", pe), At.removeListener("data", Se), be = !0, Nt.awaitDrain && (!et._writableState || et._writableState.needDrain) && Ae();
                }
                At.on("data", Se);
                function Se(we) {
                  p("ondata");
                  var Be = et.write(we);
                  p("dest.write", Be), Be === !1 && ((Nt.pipesCount === 1 && Nt.pipes === et || Nt.pipesCount > 1 && ot(Nt.pipes, et) !== -1) && !be && (p("false write response, pause", Nt.awaitDrain), Nt.awaitDrain++), At.pause());
                }
                function Wt(we) {
                  p("onerror", we), pe(), et.removeListener("error", Wt), a(et, "error") === 0 && R(et, we);
                }
                N(et, "error", Wt);
                function _t() {
                  et.removeListener("finish", ce), pe();
                }
                et.once("close", _t);
                function ce() {
                  p("onfinish"), et.removeListener("close", _t), pe();
                }
                et.once("finish", ce);
                function pe() {
                  p("unpipe"), At.unpipe(et);
                }
                return et.emit("pipe", At), Nt.flowing || (p("pipe resume"), At.resume()), et;
              };
              function ht(et) {
                return function() {
                  var At = et._readableState;
                  p("pipeOnDrain", At.awaitDrain), At.awaitDrain && At.awaitDrain--, At.awaitDrain === 0 && a(et, "data") && (At.flowing = !0, z(et));
                };
              }
              K.prototype.unpipe = function(et) {
                var tt = this._readableState, At = {
                  hasUnpiped: !1
                };
                if (tt.pipesCount === 0)
                  return this;
                if (tt.pipesCount === 1)
                  return et && et !== tt.pipes ? this : (et || (et = tt.pipes), tt.pipes = null, tt.pipesCount = 0, tt.flowing = !1, et && et.emit("unpipe", this, At), this);
                if (!et) {
                  var Nt = tt.pipes, Kt = tt.pipesCount;
                  tt.pipes = null, tt.pipesCount = 0, tt.flowing = !1;
                  for (var Vt = 0; Vt < Kt; Vt++)
                    Nt[Vt].emit("unpipe", this, {
                      hasUnpiped: !1
                    });
                  return this;
                }
                var Ot = ot(tt.pipes, et);
                return Ot === -1 ? this : (tt.pipes.splice(Ot, 1), tt.pipesCount -= 1, tt.pipesCount === 1 && (tt.pipes = tt.pipes[0]), et.emit("unpipe", this, At), this);
              }, K.prototype.on = function(et, tt) {
                var At = o.prototype.on.call(this, et, tt), Nt = this._readableState;
                return et === "data" ? (Nt.readableListening = this.listenerCount("readable") > 0, Nt.flowing !== !1 && this.resume()) : et === "readable" && !Nt.endEmitted && !Nt.readableListening && (Nt.readableListening = Nt.needReadable = !0, Nt.flowing = !1, Nt.emittedReadable = !1, p("on readable", Nt.length, Nt.reading), Nt.length ? Lt(this) : Nt.reading || s.nextTick(xt, this)), At;
              }, K.prototype.addListener = K.prototype.on, K.prototype.removeListener = function(et, tt) {
                var At = o.prototype.removeListener.call(this, et, tt);
                return et === "readable" && s.nextTick(st, this), At;
              }, K.prototype.removeAllListeners = function(et) {
                var tt = o.prototype.removeAllListeners.apply(this, arguments);
                return (et === "readable" || et === void 0) && s.nextTick(st, this), tt;
              };
              function st(et) {
                var tt = et._readableState;
                tt.readableListening = et.listenerCount("readable") > 0, tt.resumeScheduled && !tt.paused ? tt.flowing = !0 : et.listenerCount("data") > 0 && et.resume();
              }
              function xt(et) {
                p("readable nexttick read 0"), et.read(0);
              }
              K.prototype.resume = function() {
                var et = this._readableState;
                return et.flowing || (p("resume"), et.flowing = !et.readableListening, G(this, et)), et.paused = !1, this;
              };
              function G(et, tt) {
                tt.resumeScheduled || (tt.resumeScheduled = !0, s.nextTick(Ft, et, tt));
              }
              function Ft(et, tt) {
                p("resume", tt.reading), tt.reading || et.read(0), tt.resumeScheduled = !1, et.emit("resume"), z(et), tt.flowing && !tt.reading && et.read(0);
              }
              K.prototype.pause = function() {
                return p("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (p("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
              };
              function z(et) {
                var tt = et._readableState;
                for (p("flow", tt.flowing); tt.flowing && et.read() !== null; )
                  ;
              }
              K.prototype.wrap = function(et) {
                var tt = this, At = this._readableState, Nt = !1;
                et.on("end", function() {
                  if (p("wrapped end"), At.decoder && !At.ended) {
                    var Ot = At.decoder.end();
                    Ot && Ot.length && tt.push(Ot);
                  }
                  tt.push(null);
                }), et.on("data", function(Ot) {
                  if (p("wrapped data"), At.decoder && (Ot = At.decoder.write(Ot)), !(At.objectMode && Ot == null) && !(!At.objectMode && (!Ot || !Ot.length))) {
                    var ie = tt.push(Ot);
                    ie || (Nt = !0, et.pause());
                  }
                });
                for (var Kt in et)
                  this[Kt] === void 0 && typeof et[Kt] == "function" && (this[Kt] = function(ie) {
                    return function() {
                      return et[ie].apply(et, arguments);
                    };
                  }(Kt));
                for (var Vt = 0; Vt < L.length; Vt++)
                  et.on(L[Vt], this.emit.bind(this, L[Vt]));
                return this._read = function(Ot) {
                  p("wrapped _read", Ot), Nt && (Nt = !1, et.resume());
                }, this;
              }, typeof Symbol == "function" && (K.prototype[Symbol.asyncIterator] = function() {
                return D === void 0 && (D = t(90933)), D(this);
              }), Object.defineProperty(K.prototype, "readableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.highWaterMark;
                }
              }), Object.defineProperty(K.prototype, "readableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState && this._readableState.buffer;
                }
              }), Object.defineProperty(K.prototype, "readableFlowing", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.flowing;
                },
                set: function(tt) {
                  this._readableState && (this._readableState.flowing = tt);
                }
              }), K._fromList = C, Object.defineProperty(K.prototype, "readableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.length;
                }
              });
              function C(et, tt) {
                if (tt.length === 0)
                  return null;
                var At;
                return tt.objectMode ? At = tt.buffer.shift() : !et || et >= tt.length ? (tt.decoder ? At = tt.buffer.join("") : tt.buffer.length === 1 ? At = tt.buffer.first() : At = tt.buffer.concat(tt.length), tt.buffer.clear()) : At = tt.buffer.consume(et, tt.decoder), At;
              }
              function k(et) {
                var tt = et._readableState;
                p("endReadable", tt.endEmitted), tt.endEmitted || (tt.ended = !0, s.nextTick(V, tt, et));
              }
              function V(et, tt) {
                if (p("endReadableNT", et.endEmitted, et.length), !et.endEmitted && et.length === 0 && (et.endEmitted = !0, tt.readable = !1, tt.emit("end"), et.autoDestroy)) {
                  var At = tt._writableState;
                  (!At || At.autoDestroy && At.finished) && tt.destroy();
                }
              }
              typeof Symbol == "function" && (K.from = function(et, tt) {
                return b === void 0 && (b = t(24881)), b(K, et, tt);
              });
              function ot(et, tt) {
                for (var At = 0, Nt = et.length; At < Nt; At++)
                  if (et[At] === tt)
                    return At;
                return -1;
              }
            }
          ),
          /***/
          10695: (
            /***/
            function(l, c, t) {
              l.exports = d;
              var s = t(75065).q, r = s.ERR_METHOD_NOT_IMPLEMENTED, a = s.ERR_MULTIPLE_CALLBACK, o = s.ERR_TRANSFORM_ALREADY_TRANSFORMING, f = s.ERR_TRANSFORM_WITH_LENGTH_0, u = t(53551);
              t(48575)(d, u);
              function h(y, m) {
                var e = this._transformState;
                e.transforming = !1;
                var x = e.writecb;
                if (x === null)
                  return this.emit("error", new a());
                e.writechunk = null, e.writecb = null, m != null && this.push(m), x(y);
                var S = this._readableState;
                S.reading = !1, (S.needReadable || S.length < S.highWaterMark) && this._read(S.highWaterMark);
              }
              function d(y) {
                if (!(this instanceof d))
                  return new d(y);
                u.call(this, y), this._transformState = {
                  afterTransform: h.bind(this),
                  needTransform: !1,
                  transforming: !1,
                  writecb: null,
                  writechunk: null,
                  writeencoding: null
                }, this._readableState.needReadable = !0, this._readableState.sync = !1, y && (typeof y.transform == "function" && (this._transform = y.transform), typeof y.flush == "function" && (this._flush = y.flush)), this.on("prefinish", i);
              }
              function i() {
                var y = this;
                typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(m, e) {
                  p(y, m, e);
                }) : p(this, null, null);
              }
              d.prototype.push = function(y, m) {
                return this._transformState.needTransform = !1, u.prototype.push.call(this, y, m);
              }, d.prototype._transform = function(y, m, e) {
                e(new r("_transform()"));
              }, d.prototype._write = function(y, m, e) {
                var x = this._transformState;
                if (x.writecb = e, x.writechunk = y, x.writeencoding = m, !x.transforming) {
                  var S = this._readableState;
                  (x.needTransform || S.needReadable || S.length < S.highWaterMark) && this._read(S.highWaterMark);
                }
              }, d.prototype._read = function(y) {
                var m = this._transformState;
                m.writechunk !== null && !m.transforming ? (m.transforming = !0, this._transform(m.writechunk, m.writeencoding, m.afterTransform)) : m.needTransform = !0;
              }, d.prototype._destroy = function(y, m) {
                u.prototype._destroy.call(this, y, function(e) {
                  m(e);
                });
              };
              function p(y, m, e) {
                if (m)
                  return y.emit("error", m);
                if (e != null && y.push(e), y._writableState.length)
                  throw new f();
                if (y._transformState.transforming)
                  throw new o();
                return y.push(null);
              }
            }
          ),
          /***/
          16667: (
            /***/
            function(l, c, t) {
              var s = t(82530);
              l.exports = M;
              function r(z) {
                var C = this;
                this.next = null, this.entry = null, this.finish = function() {
                  Ft(C, z);
                };
              }
              var a;
              M.WritableState = L;
              var o = {
                deprecate: t(29440)
              }, f = t(5908), u = t(43060).Buffer, h = (typeof t.g != "undefined" ? t.g : typeof window != "undefined" ? window : typeof self != "undefined" ? self : {}).Uint8Array || function() {
              };
              function d(z) {
                return u.from(z);
              }
              function i(z) {
                return u.isBuffer(z) || z instanceof h;
              }
              var p = t(89930), y = t(39025), m = y.getHighWaterMark, e = t(75065).q, x = e.ERR_INVALID_ARG_TYPE, S = e.ERR_METHOD_NOT_IMPLEMENTED, P = e.ERR_MULTIPLE_CALLBACK, O = e.ERR_STREAM_CANNOT_PIPE, T = e.ERR_STREAM_DESTROYED, A = e.ERR_STREAM_NULL_VALUES, E = e.ERR_STREAM_WRITE_AFTER_END, D = e.ERR_UNKNOWN_ENCODING, b = p.errorOrDestroy;
              t(48575)(M, f);
              function R() {
              }
              function L(z, C, k) {
                a = a || t(53551), z = z || {}, typeof k != "boolean" && (k = C instanceof a), this.objectMode = !!z.objectMode, k && (this.objectMode = this.objectMode || !!z.writableObjectMode), this.highWaterMark = m(this, z, "writableHighWaterMark", k), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                var V = z.decodeStrings === !1;
                this.decodeStrings = !V, this.defaultEncoding = z.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(ot) {
                  It(C, ot);
                }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = z.emitClose !== !1, this.autoDestroy = !!z.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new r(this);
              }
              L.prototype.getBuffer = function() {
                for (var C = this.bufferedRequest, k = []; C; )
                  k.push(C), C = C.next;
                return k;
              }, function() {
                try {
                  Object.defineProperty(L.prototype, "buffer", {
                    get: o.deprecate(function() {
                      return this.getBuffer();
                    }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                  });
                } catch (z) {
                }
              }();
              var N;
              typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (N = Function.prototype[Symbol.hasInstance], Object.defineProperty(M, Symbol.hasInstance, {
                value: function(C) {
                  return N.call(this, C) ? !0 : this !== M ? !1 : C && C._writableState instanceof L;
                }
              })) : N = function(C) {
                return C instanceof this;
              };
              function M(z) {
                a = a || t(53551);
                var C = this instanceof a;
                if (!C && !N.call(M, this))
                  return new M(z);
                this._writableState = new L(z, this, C), this.writable = !0, z && (typeof z.write == "function" && (this._write = z.write), typeof z.writev == "function" && (this._writev = z.writev), typeof z.destroy == "function" && (this._destroy = z.destroy), typeof z.final == "function" && (this._final = z.final)), f.call(this);
              }
              M.prototype.pipe = function() {
                b(this, new O());
              };
              function K(z, C) {
                var k = new E();
                b(z, k), s.nextTick(C, k);
              }
              function ct(z, C, k, V) {
                var ot;
                return k === null ? ot = new A() : typeof k != "string" && !C.objectMode && (ot = new x("chunk", ["string", "Buffer"], k)), ot ? (b(z, ot), s.nextTick(V, ot), !1) : !0;
              }
              M.prototype.write = function(z, C, k) {
                var V = this._writableState, ot = !1, et = !V.objectMode && i(z);
                return et && !u.isBuffer(z) && (z = d(z)), typeof C == "function" && (k = C, C = null), et ? C = "buffer" : C || (C = V.defaultEncoding), typeof k != "function" && (k = R), V.ending ? K(this, k) : (et || ct(this, V, z, k)) && (V.pendingcb++, ot = nt(this, V, et, z, C, k)), ot;
              }, M.prototype.cork = function() {
                this._writableState.corked++;
              }, M.prototype.uncork = function() {
                var z = this._writableState;
                z.corked && (z.corked--, !z.writing && !z.corked && !z.bufferProcessing && z.bufferedRequest && Q(this, z));
              }, M.prototype.setDefaultEncoding = function(C) {
                if (typeof C == "string" && (C = C.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((C + "").toLowerCase()) > -1))
                  throw new D(C);
                return this._writableState.defaultEncoding = C, this;
              }, Object.defineProperty(M.prototype, "writableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState && this._writableState.getBuffer();
                }
              });
              function J(z, C, k) {
                return !z.objectMode && z.decodeStrings !== !1 && typeof C == "string" && (C = u.from(C, k)), C;
              }
              Object.defineProperty(M.prototype, "writableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.highWaterMark;
                }
              });
              function nt(z, C, k, V, ot, et) {
                if (!k) {
                  var tt = J(C, V, ot);
                  V !== tt && (k = !0, ot = "buffer", V = tt);
                }
                var At = C.objectMode ? 1 : V.length;
                C.length += At;
                var Nt = C.length < C.highWaterMark;
                if (Nt || (C.needDrain = !0), C.writing || C.corked) {
                  var Kt = C.lastBufferedRequest;
                  C.lastBufferedRequest = {
                    chunk: V,
                    encoding: ot,
                    isBuf: k,
                    callback: et,
                    next: null
                  }, Kt ? Kt.next = C.lastBufferedRequest : C.bufferedRequest = C.lastBufferedRequest, C.bufferedRequestCount += 1;
                } else
                  yt(z, C, !1, At, V, ot, et);
                return Nt;
              }
              function yt(z, C, k, V, ot, et, tt) {
                C.writelen = V, C.writecb = tt, C.writing = !0, C.sync = !0, C.destroyed ? C.onwrite(new T("write")) : k ? z._writev(ot, C.onwrite) : z._write(ot, et, C.onwrite), C.sync = !1;
              }
              function bt(z, C, k, V, ot) {
                --C.pendingcb, k ? (s.nextTick(ot, V), s.nextTick(xt, z, C), z._writableState.errorEmitted = !0, b(z, V)) : (ot(V), z._writableState.errorEmitted = !0, b(z, V), xt(z, C));
              }
              function Tt(z) {
                z.writing = !1, z.writecb = null, z.length -= z.writelen, z.writelen = 0;
              }
              function It(z, C) {
                var k = z._writableState, V = k.sync, ot = k.writecb;
                if (typeof ot != "function")
                  throw new P();
                if (Tt(k), C)
                  bt(z, k, V, C, ot);
                else {
                  var et = gt(k) || z.destroyed;
                  !et && !k.corked && !k.bufferProcessing && k.bufferedRequest && Q(z, k), V ? s.nextTick(Lt, z, k, et, ot) : Lt(z, k, et, ot);
                }
              }
              function Lt(z, C, k, V) {
                k || zt(z, C), C.pendingcb--, V(), xt(z, C);
              }
              function zt(z, C) {
                C.length === 0 && C.needDrain && (C.needDrain = !1, z.emit("drain"));
              }
              function Q(z, C) {
                C.bufferProcessing = !0;
                var k = C.bufferedRequest;
                if (z._writev && k && k.next) {
                  var V = C.bufferedRequestCount, ot = new Array(V), et = C.corkedRequestsFree;
                  et.entry = k;
                  for (var tt = 0, At = !0; k; )
                    ot[tt] = k, k.isBuf || (At = !1), k = k.next, tt += 1;
                  ot.allBuffers = At, yt(z, C, !0, C.length, ot, "", et.finish), C.pendingcb++, C.lastBufferedRequest = null, et.next ? (C.corkedRequestsFree = et.next, et.next = null) : C.corkedRequestsFree = new r(C), C.bufferedRequestCount = 0;
                } else {
                  for (; k; ) {
                    var Nt = k.chunk, Kt = k.encoding, Vt = k.callback, Ot = C.objectMode ? 1 : Nt.length;
                    if (yt(z, C, !1, Ot, Nt, Kt, Vt), k = k.next, C.bufferedRequestCount--, C.writing)
                      break;
                  }
                  k === null && (C.lastBufferedRequest = null);
                }
                C.bufferedRequest = k, C.bufferProcessing = !1;
              }
              M.prototype._write = function(z, C, k) {
                k(new S("_write()"));
              }, M.prototype._writev = null, M.prototype.end = function(z, C, k) {
                var V = this._writableState;
                return typeof z == "function" ? (k = z, z = null, C = null) : typeof C == "function" && (k = C, C = null), z != null && this.write(z, C), V.corked && (V.corked = 1, this.uncork()), V.ending || G(this, V, k), this;
              }, Object.defineProperty(M.prototype, "writableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.length;
                }
              });
              function gt(z) {
                return z.ending && z.length === 0 && z.bufferedRequest === null && !z.finished && !z.writing;
              }
              function ht(z, C) {
                z._final(function(k) {
                  C.pendingcb--, k && b(z, k), C.prefinished = !0, z.emit("prefinish"), xt(z, C);
                });
              }
              function st(z, C) {
                !C.prefinished && !C.finalCalled && (typeof z._final == "function" && !C.destroyed ? (C.pendingcb++, C.finalCalled = !0, s.nextTick(ht, z, C)) : (C.prefinished = !0, z.emit("prefinish")));
              }
              function xt(z, C) {
                var k = gt(C);
                if (k && (st(z, C), C.pendingcb === 0 && (C.finished = !0, z.emit("finish"), C.autoDestroy))) {
                  var V = z._readableState;
                  (!V || V.autoDestroy && V.endEmitted) && z.destroy();
                }
                return k;
              }
              function G(z, C, k) {
                C.ending = !0, xt(z, C), k && (C.finished ? s.nextTick(k) : z.once("finish", k)), C.ended = !0, z.writable = !1;
              }
              function Ft(z, C, k) {
                var V = z.entry;
                for (z.entry = null; V; ) {
                  var ot = V.callback;
                  C.pendingcb--, ot(k), V = V.next;
                }
                C.corkedRequestsFree.next = z;
              }
              Object.defineProperty(M.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState === void 0 ? !1 : this._writableState.destroyed;
                },
                set: function(C) {
                  this._writableState && (this._writableState.destroyed = C);
                }
              }), M.prototype.destroy = p.destroy, M.prototype._undestroy = p.undestroy, M.prototype._destroy = function(z, C) {
                C(z);
              };
            }
          ),
          /***/
          90933: (
            /***/
            function(l, c, t) {
              var s = t(82530), r;
              function a(D, b, R) {
                return b = o(b), b in D ? Object.defineProperty(D, b, { value: R, enumerable: !0, configurable: !0, writable: !0 }) : D[b] = R, D;
              }
              function o(D) {
                var b = f(D, "string");
                return typeof b == "symbol" ? b : String(b);
              }
              function f(D, b) {
                if (typeof D != "object" || D === null)
                  return D;
                var R = D[Symbol.toPrimitive];
                if (R !== void 0) {
                  var L = R.call(D, b || "default");
                  if (typeof L != "object")
                    return L;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (b === "string" ? String : Number)(D);
              }
              var u = t(47549), h = Symbol("lastResolve"), d = Symbol("lastReject"), i = Symbol("error"), p = Symbol("ended"), y = Symbol("lastPromise"), m = Symbol("handlePromise"), e = Symbol("stream");
              function x(D, b) {
                return {
                  value: D,
                  done: b
                };
              }
              function S(D) {
                var b = D[h];
                if (b !== null) {
                  var R = D[e].read();
                  R !== null && (D[y] = null, D[h] = null, D[d] = null, b(x(R, !1)));
                }
              }
              function P(D) {
                s.nextTick(S, D);
              }
              function O(D, b) {
                return function(R, L) {
                  D.then(function() {
                    if (b[p]) {
                      R(x(void 0, !0));
                      return;
                    }
                    b[m](R, L);
                  }, L);
                };
              }
              var T = Object.getPrototypeOf(function() {
              }), A = Object.setPrototypeOf((r = {
                get stream() {
                  return this[e];
                },
                next: function() {
                  var b = this, R = this[i];
                  if (R !== null)
                    return Promise.reject(R);
                  if (this[p])
                    return Promise.resolve(x(void 0, !0));
                  if (this[e].destroyed)
                    return new Promise(function(K, ct) {
                      s.nextTick(function() {
                        b[i] ? ct(b[i]) : K(x(void 0, !0));
                      });
                    });
                  var L = this[y], N;
                  if (L)
                    N = new Promise(O(L, this));
                  else {
                    var M = this[e].read();
                    if (M !== null)
                      return Promise.resolve(x(M, !1));
                    N = new Promise(this[m]);
                  }
                  return this[y] = N, N;
                }
              }, a(r, Symbol.asyncIterator, function() {
                return this;
              }), a(r, "return", function() {
                var b = this;
                return new Promise(function(R, L) {
                  b[e].destroy(null, function(N) {
                    if (N) {
                      L(N);
                      return;
                    }
                    R(x(void 0, !0));
                  });
                });
              }), r), T), E = function(b) {
                var R, L = Object.create(A, (R = {}, a(R, e, {
                  value: b,
                  writable: !0
                }), a(R, h, {
                  value: null,
                  writable: !0
                }), a(R, d, {
                  value: null,
                  writable: !0
                }), a(R, i, {
                  value: null,
                  writable: !0
                }), a(R, p, {
                  value: b._readableState.endEmitted,
                  writable: !0
                }), a(R, m, {
                  value: function(M, K) {
                    var ct = L[e].read();
                    ct ? (L[y] = null, L[h] = null, L[d] = null, M(x(ct, !1))) : (L[h] = M, L[d] = K);
                  },
                  writable: !0
                }), R));
                return L[y] = null, u(b, function(N) {
                  if (N && N.code !== "ERR_STREAM_PREMATURE_CLOSE") {
                    var M = L[d];
                    M !== null && (L[y] = null, L[h] = null, L[d] = null, M(N)), L[i] = N;
                    return;
                  }
                  var K = L[h];
                  K !== null && (L[y] = null, L[h] = null, L[d] = null, K(x(void 0, !0))), L[p] = !0;
                }), b.on("readable", P.bind(null, L)), L;
              };
              l.exports = E;
            }
          ),
          /***/
          89930: (
            /***/
            function(l, c, t) {
              var s = t(82530);
              function r(d, i) {
                var p = this, y = this._readableState && this._readableState.destroyed, m = this._writableState && this._writableState.destroyed;
                return y || m ? (i ? i(d) : d && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, s.nextTick(u, this, d)) : s.nextTick(u, this, d)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(d || null, function(e) {
                  !i && e ? p._writableState ? p._writableState.errorEmitted ? s.nextTick(o, p) : (p._writableState.errorEmitted = !0, s.nextTick(a, p, e)) : s.nextTick(a, p, e) : i ? (s.nextTick(o, p), i(e)) : s.nextTick(o, p);
                }), this);
              }
              function a(d, i) {
                u(d, i), o(d);
              }
              function o(d) {
                d._writableState && !d._writableState.emitClose || d._readableState && !d._readableState.emitClose || d.emit("close");
              }
              function f() {
                this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
              }
              function u(d, i) {
                d.emit("error", i);
              }
              function h(d, i) {
                var p = d._readableState, y = d._writableState;
                p && p.autoDestroy || y && y.autoDestroy ? d.destroy(i) : d.emit("error", i);
              }
              l.exports = {
                destroy: r,
                undestroy: f,
                errorOrDestroy: h
              };
            }
          ),
          /***/
          47549: (
            /***/
            function(l, c, t) {
              var s = t(75065).q.ERR_STREAM_PREMATURE_CLOSE;
              function r(u) {
                var h = !1;
                return function() {
                  if (!h) {
                    h = !0;
                    for (var d = arguments.length, i = new Array(d), p = 0; p < d; p++)
                      i[p] = arguments[p];
                    u.apply(this, i);
                  }
                };
              }
              function a() {
              }
              function o(u) {
                return u.setHeader && typeof u.abort == "function";
              }
              function f(u, h, d) {
                if (typeof h == "function")
                  return f(u, null, h);
                h || (h = {}), d = r(d || a);
                var i = h.readable || h.readable !== !1 && u.readable, p = h.writable || h.writable !== !1 && u.writable, y = function() {
                  u.writable || e();
                }, m = u._writableState && u._writableState.finished, e = function() {
                  p = !1, m = !0, i || d.call(u);
                }, x = u._readableState && u._readableState.endEmitted, S = function() {
                  i = !1, x = !0, p || d.call(u);
                }, P = function(E) {
                  d.call(u, E);
                }, O = function() {
                  var E;
                  if (i && !x)
                    return (!u._readableState || !u._readableState.ended) && (E = new s()), d.call(u, E);
                  if (p && !m)
                    return (!u._writableState || !u._writableState.ended) && (E = new s()), d.call(u, E);
                }, T = function() {
                  u.req.on("finish", e);
                };
                return o(u) ? (u.on("complete", e), u.on("abort", O), u.req ? T() : u.on("request", T)) : p && !u._writableState && (u.on("end", y), u.on("close", y)), u.on("end", S), u.on("finish", e), h.error !== !1 && u.on("error", P), u.on("close", O), function() {
                  u.removeListener("complete", e), u.removeListener("abort", O), u.removeListener("request", T), u.req && u.req.removeListener("finish", e), u.removeListener("end", y), u.removeListener("close", y), u.removeListener("finish", e), u.removeListener("end", S), u.removeListener("error", P), u.removeListener("close", O);
                };
              }
              l.exports = f;
            }
          ),
          /***/
          24881: (
            /***/
            function(l) {
              l.exports = function() {
                throw new Error("Readable.from is not available in the browser");
              };
            }
          ),
          /***/
          44858: (
            /***/
            function(l, c, t) {
              var s;
              function r(e) {
                var x = !1;
                return function() {
                  x || (x = !0, e.apply(void 0, arguments));
                };
              }
              var a = t(75065).q, o = a.ERR_MISSING_ARGS, f = a.ERR_STREAM_DESTROYED;
              function u(e) {
                if (e)
                  throw e;
              }
              function h(e) {
                return e.setHeader && typeof e.abort == "function";
              }
              function d(e, x, S, P) {
                P = r(P);
                var O = !1;
                e.on("close", function() {
                  O = !0;
                }), s === void 0 && (s = t(47549)), s(e, {
                  readable: x,
                  writable: S
                }, function(A) {
                  if (A)
                    return P(A);
                  O = !0, P();
                });
                var T = !1;
                return function(A) {
                  if (!O && !T) {
                    if (T = !0, h(e))
                      return e.abort();
                    if (typeof e.destroy == "function")
                      return e.destroy();
                    P(A || new f("pipe"));
                  }
                };
              }
              function i(e) {
                e();
              }
              function p(e, x) {
                return e.pipe(x);
              }
              function y(e) {
                return !e.length || typeof e[e.length - 1] != "function" ? u : e.pop();
              }
              function m() {
                for (var e = arguments.length, x = new Array(e), S = 0; S < e; S++)
                  x[S] = arguments[S];
                var P = y(x);
                if (Array.isArray(x[0]) && (x = x[0]), x.length < 2)
                  throw new o("streams");
                var O, T = x.map(function(A, E) {
                  var D = E < x.length - 1, b = E > 0;
                  return d(A, D, b, function(R) {
                    O || (O = R), R && T.forEach(i), !D && (T.forEach(i), P(O));
                  });
                });
                return x.reduce(p);
              }
              l.exports = m;
            }
          ),
          /***/
          39025: (
            /***/
            function(l, c, t) {
              var s = t(75065).q.ERR_INVALID_OPT_VALUE;
              function r(o, f, u) {
                return o.highWaterMark != null ? o.highWaterMark : f ? o[u] : null;
              }
              function a(o, f, u, h) {
                var d = r(f, h, u);
                if (d != null) {
                  if (!(isFinite(d) && Math.floor(d) === d) || d < 0) {
                    var i = h ? u : "highWaterMark";
                    throw new s(i, d);
                  }
                  return Math.floor(d);
                }
                return o.objectMode ? 16 : 16384;
              }
              l.exports = {
                getHighWaterMark: a
              };
            }
          ),
          /***/
          5908: (
            /***/
            function(l, c, t) {
              l.exports = t(5939).EventEmitter;
            }
          ),
          /***/
          10301: (
            /***/
            function(l, c, t) {
              var s = t(11504).Buffer, r = s.isEncoding || function(T) {
                switch (T = "" + T, T && T.toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                  case "raw":
                    return !0;
                  default:
                    return !1;
                }
              };
              function a(T) {
                if (!T)
                  return "utf8";
                for (var A; ; )
                  switch (T) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return T;
                    default:
                      if (A)
                        return;
                      T = ("" + T).toLowerCase(), A = !0;
                  }
              }
              function o(T) {
                var A = a(T);
                if (typeof A != "string" && (s.isEncoding === r || !r(T)))
                  throw new Error("Unknown encoding: " + T);
                return A || T;
              }
              c.s = f;
              function f(T) {
                this.encoding = o(T);
                var A;
                switch (this.encoding) {
                  case "utf16le":
                    this.text = m, this.end = e, A = 4;
                    break;
                  case "utf8":
                    this.fillLast = i, A = 4;
                    break;
                  case "base64":
                    this.text = x, this.end = S, A = 3;
                    break;
                  default:
                    this.write = P, this.end = O;
                    return;
                }
                this.lastNeed = 0, this.lastTotal = 0, this.lastChar = s.allocUnsafe(A);
              }
              f.prototype.write = function(T) {
                if (T.length === 0)
                  return "";
                var A, E;
                if (this.lastNeed) {
                  if (A = this.fillLast(T), A === void 0)
                    return "";
                  E = this.lastNeed, this.lastNeed = 0;
                } else
                  E = 0;
                return E < T.length ? A ? A + this.text(T, E) : this.text(T, E) : A || "";
              }, f.prototype.end = y, f.prototype.text = p, f.prototype.fillLast = function(T) {
                if (this.lastNeed <= T.length)
                  return T.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                T.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, T.length), this.lastNeed -= T.length;
              };
              function u(T) {
                return T <= 127 ? 0 : T >> 5 === 6 ? 2 : T >> 4 === 14 ? 3 : T >> 3 === 30 ? 4 : T >> 6 === 2 ? -1 : -2;
              }
              function h(T, A, E) {
                var D = A.length - 1;
                if (D < E)
                  return 0;
                var b = u(A[D]);
                return b >= 0 ? (b > 0 && (T.lastNeed = b - 1), b) : --D < E || b === -2 ? 0 : (b = u(A[D]), b >= 0 ? (b > 0 && (T.lastNeed = b - 2), b) : --D < E || b === -2 ? 0 : (b = u(A[D]), b >= 0 ? (b > 0 && (b === 2 ? b = 0 : T.lastNeed = b - 3), b) : 0));
              }
              function d(T, A, E) {
                if ((A[0] & 192) !== 128)
                  return T.lastNeed = 0, "ï¿½";
                if (T.lastNeed > 1 && A.length > 1) {
                  if ((A[1] & 192) !== 128)
                    return T.lastNeed = 1, "ï¿½";
                  if (T.lastNeed > 2 && A.length > 2 && (A[2] & 192) !== 128)
                    return T.lastNeed = 2, "ï¿½";
                }
              }
              function i(T) {
                var A = this.lastTotal - this.lastNeed, E = d(this, T);
                if (E !== void 0)
                  return E;
                if (this.lastNeed <= T.length)
                  return T.copy(this.lastChar, A, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                T.copy(this.lastChar, A, 0, T.length), this.lastNeed -= T.length;
              }
              function p(T, A) {
                var E = h(this, T, A);
                if (!this.lastNeed)
                  return T.toString("utf8", A);
                this.lastTotal = E;
                var D = T.length - (E - this.lastNeed);
                return T.copy(this.lastChar, 0, D), T.toString("utf8", A, D);
              }
              function y(T) {
                var A = T && T.length ? this.write(T) : "";
                return this.lastNeed ? A + "ï¿½" : A;
              }
              function m(T, A) {
                if ((T.length - A) % 2 === 0) {
                  var E = T.toString("utf16le", A);
                  if (E) {
                    var D = E.charCodeAt(E.length - 1);
                    if (D >= 55296 && D <= 56319)
                      return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = T[T.length - 2], this.lastChar[1] = T[T.length - 1], E.slice(0, -1);
                  }
                  return E;
                }
                return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = T[T.length - 1], T.toString("utf16le", A, T.length - 1);
              }
              function e(T) {
                var A = T && T.length ? this.write(T) : "";
                if (this.lastNeed) {
                  var E = this.lastTotal - this.lastNeed;
                  return A + this.lastChar.toString("utf16le", 0, E);
                }
                return A;
              }
              function x(T, A) {
                var E = (T.length - A) % 3;
                return E === 0 ? T.toString("base64", A) : (this.lastNeed = 3 - E, this.lastTotal = 3, E === 1 ? this.lastChar[0] = T[T.length - 1] : (this.lastChar[0] = T[T.length - 2], this.lastChar[1] = T[T.length - 1]), T.toString("base64", A, T.length - E));
              }
              function S(T) {
                var A = T && T.length ? this.write(T) : "";
                return this.lastNeed ? A + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : A;
              }
              function P(T) {
                return T.toString(this.encoding);
              }
              function O(T) {
                return T && T.length ? this.write(T) : "";
              }
            }
          ),
          /***/
          84346: (
            /***/
            function(l) {
              var c = 0, t = -3;
              function s() {
                this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
              }
              function r(R, L) {
                this.source = R, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = L, this.destLen = 0, this.ltree = new s(), this.dtree = new s();
              }
              var a = new s(), o = new s(), f = new Uint8Array(30), u = new Uint16Array(30), h = new Uint8Array(30), d = new Uint16Array(30), i = new Uint8Array([
                16,
                17,
                18,
                0,
                8,
                7,
                9,
                6,
                10,
                5,
                11,
                4,
                12,
                3,
                13,
                2,
                14,
                1,
                15
              ]), p = new s(), y = new Uint8Array(288 + 32);
              function m(R, L, N, M) {
                var K, ct;
                for (K = 0; K < N; ++K)
                  R[K] = 0;
                for (K = 0; K < 30 - N; ++K)
                  R[K + N] = K / N | 0;
                for (ct = M, K = 0; K < 30; ++K)
                  L[K] = ct, ct += 1 << R[K];
              }
              function e(R, L) {
                var N;
                for (N = 0; N < 7; ++N)
                  R.table[N] = 0;
                for (R.table[7] = 24, R.table[8] = 152, R.table[9] = 112, N = 0; N < 24; ++N)
                  R.trans[N] = 256 + N;
                for (N = 0; N < 144; ++N)
                  R.trans[24 + N] = N;
                for (N = 0; N < 8; ++N)
                  R.trans[168 + N] = 280 + N;
                for (N = 0; N < 112; ++N)
                  R.trans[176 + N] = 144 + N;
                for (N = 0; N < 5; ++N)
                  L.table[N] = 0;
                for (L.table[5] = 32, N = 0; N < 32; ++N)
                  L.trans[N] = N;
              }
              var x = new Uint16Array(16);
              function S(R, L, N, M) {
                var K, ct;
                for (K = 0; K < 16; ++K)
                  R.table[K] = 0;
                for (K = 0; K < M; ++K)
                  R.table[L[N + K]]++;
                for (R.table[0] = 0, ct = 0, K = 0; K < 16; ++K)
                  x[K] = ct, ct += R.table[K];
                for (K = 0; K < M; ++K)
                  L[N + K] && (R.trans[x[L[N + K]]++] = K);
              }
              function P(R) {
                R.bitcount-- || (R.tag = R.source[R.sourceIndex++], R.bitcount = 7);
                var L = R.tag & 1;
                return R.tag >>>= 1, L;
              }
              function O(R, L, N) {
                if (!L)
                  return N;
                for (; R.bitcount < 24; )
                  R.tag |= R.source[R.sourceIndex++] << R.bitcount, R.bitcount += 8;
                var M = R.tag & 65535 >>> 16 - L;
                return R.tag >>>= L, R.bitcount -= L, M + N;
              }
              function T(R, L) {
                for (; R.bitcount < 24; )
                  R.tag |= R.source[R.sourceIndex++] << R.bitcount, R.bitcount += 8;
                var N = 0, M = 0, K = 0, ct = R.tag;
                do
                  M = 2 * M + (ct & 1), ct >>>= 1, ++K, N += L.table[K], M -= L.table[K];
                while (M >= 0);
                return R.tag = ct, R.bitcount -= K, L.trans[N + M];
              }
              function A(R, L, N) {
                var M, K, ct, J, nt, yt;
                for (M = O(R, 5, 257), K = O(R, 5, 1), ct = O(R, 4, 4), J = 0; J < 19; ++J)
                  y[J] = 0;
                for (J = 0; J < ct; ++J) {
                  var bt = O(R, 3, 0);
                  y[i[J]] = bt;
                }
                for (S(p, y, 0, 19), nt = 0; nt < M + K; ) {
                  var Tt = T(R, p);
                  switch (Tt) {
                    case 16:
                      var It = y[nt - 1];
                      for (yt = O(R, 2, 3); yt; --yt)
                        y[nt++] = It;
                      break;
                    case 17:
                      for (yt = O(R, 3, 3); yt; --yt)
                        y[nt++] = 0;
                      break;
                    case 18:
                      for (yt = O(R, 7, 11); yt; --yt)
                        y[nt++] = 0;
                      break;
                    default:
                      y[nt++] = Tt;
                      break;
                  }
                }
                S(L, y, 0, M), S(N, y, M, K);
              }
              function E(R, L, N) {
                for (; ; ) {
                  var M = T(R, L);
                  if (M === 256)
                    return c;
                  if (M < 256)
                    R.dest[R.destLen++] = M;
                  else {
                    var K, ct, J, nt;
                    for (M -= 257, K = O(R, f[M], u[M]), ct = T(R, N), J = R.destLen - O(R, h[ct], d[ct]), nt = J; nt < J + K; ++nt)
                      R.dest[R.destLen++] = R.dest[nt];
                  }
                }
              }
              function D(R) {
                for (var L, N, M; R.bitcount > 8; )
                  R.sourceIndex--, R.bitcount -= 8;
                if (L = R.source[R.sourceIndex + 1], L = 256 * L + R.source[R.sourceIndex], N = R.source[R.sourceIndex + 3], N = 256 * N + R.source[R.sourceIndex + 2], L !== (~N & 65535))
                  return t;
                for (R.sourceIndex += 4, M = L; M; --M)
                  R.dest[R.destLen++] = R.source[R.sourceIndex++];
                return R.bitcount = 0, c;
              }
              function b(R, L) {
                var N = new r(R, L), M, K, ct;
                do {
                  switch (M = P(N), K = O(N, 2, 0), K) {
                    case 0:
                      ct = D(N);
                      break;
                    case 1:
                      ct = E(N, a, o);
                      break;
                    case 2:
                      A(N, N.ltree, N.dtree), ct = E(N, N.ltree, N.dtree);
                      break;
                    default:
                      ct = t;
                  }
                  if (ct !== c)
                    throw new Error("Data error");
                } while (!M);
                return N.destLen < N.dest.length ? typeof N.dest.slice == "function" ? N.dest.slice(0, N.destLen) : N.dest.subarray(0, N.destLen) : N.dest;
              }
              e(a, o), m(f, u, 4, 3), m(h, d, 2, 1), f[28] = 0, u[28] = 258, l.exports = b;
            }
          ),
          /***/
          29440: (
            /***/
            function(l, c, t) {
              l.exports = s;
              function s(a, o) {
                if (r("noDeprecation"))
                  return a;
                var f = !1;
                function u() {
                  if (!f) {
                    if (r("throwDeprecation"))
                      throw new Error(o);
                    r("traceDeprecation") ? console.trace(o) : console.warn(o), f = !0;
                  }
                  return a.apply(this, arguments);
                }
                return u;
              }
              function r(a) {
                try {
                  if (!t.g.localStorage)
                    return !1;
                } catch (f) {
                  return !1;
                }
                var o = t.g.localStorage[a];
                return o == null ? !1 : String(o).toLowerCase() === "true";
              }
            }
          ),
          /***/
          79397: (
            /***/
            function(l) {
              l.exports = function(t) {
                return t && typeof t == "object" && typeof t.copy == "function" && typeof t.fill == "function" && typeof t.readUInt8 == "function";
              };
            }
          ),
          /***/
          64489: (
            /***/
            function(l, c, t) {
              var s = t(77092), r = t(97427), a = t(54010), o = t(82527);
              function f(Ot) {
                return Ot.call.bind(Ot);
              }
              var u = typeof BigInt != "undefined", h = typeof Symbol != "undefined", d = f(Object.prototype.toString), i = f(Number.prototype.valueOf), p = f(String.prototype.valueOf), y = f(Boolean.prototype.valueOf);
              if (u)
                var m = f(BigInt.prototype.valueOf);
              if (h)
                var e = f(Symbol.prototype.valueOf);
              function x(Ot, ie) {
                if (typeof Ot != "object")
                  return !1;
                try {
                  return ie(Ot), !0;
                } catch (Ae) {
                  return !1;
                }
              }
              c.isArgumentsObject = s, c.isGeneratorFunction = r, c.isTypedArray = o;
              function S(Ot) {
                return typeof Promise != "undefined" && Ot instanceof Promise || Ot !== null && typeof Ot == "object" && typeof Ot.then == "function" && typeof Ot.catch == "function";
              }
              c.isPromise = S;
              function P(Ot) {
                return typeof ArrayBuffer != "undefined" && ArrayBuffer.isView ? ArrayBuffer.isView(Ot) : o(Ot) || ht(Ot);
              }
              c.isArrayBufferView = P;
              function O(Ot) {
                return a(Ot) === "Uint8Array";
              }
              c.isUint8Array = O;
              function T(Ot) {
                return a(Ot) === "Uint8ClampedArray";
              }
              c.isUint8ClampedArray = T;
              function A(Ot) {
                return a(Ot) === "Uint16Array";
              }
              c.isUint16Array = A;
              function E(Ot) {
                return a(Ot) === "Uint32Array";
              }
              c.isUint32Array = E;
              function D(Ot) {
                return a(Ot) === "Int8Array";
              }
              c.isInt8Array = D;
              function b(Ot) {
                return a(Ot) === "Int16Array";
              }
              c.isInt16Array = b;
              function R(Ot) {
                return a(Ot) === "Int32Array";
              }
              c.isInt32Array = R;
              function L(Ot) {
                return a(Ot) === "Float32Array";
              }
              c.isFloat32Array = L;
              function N(Ot) {
                return a(Ot) === "Float64Array";
              }
              c.isFloat64Array = N;
              function M(Ot) {
                return a(Ot) === "BigInt64Array";
              }
              c.isBigInt64Array = M;
              function K(Ot) {
                return a(Ot) === "BigUint64Array";
              }
              c.isBigUint64Array = K;
              function ct(Ot) {
                return d(Ot) === "[object Map]";
              }
              ct.working = typeof Map != "undefined" && ct(/* @__PURE__ */ new Map());
              function J(Ot) {
                return typeof Map == "undefined" ? !1 : ct.working ? ct(Ot) : Ot instanceof Map;
              }
              c.isMap = J;
              function nt(Ot) {
                return d(Ot) === "[object Set]";
              }
              nt.working = typeof Set != "undefined" && nt(/* @__PURE__ */ new Set());
              function yt(Ot) {
                return typeof Set == "undefined" ? !1 : nt.working ? nt(Ot) : Ot instanceof Set;
              }
              c.isSet = yt;
              function bt(Ot) {
                return d(Ot) === "[object WeakMap]";
              }
              bt.working = typeof WeakMap != "undefined" && bt(/* @__PURE__ */ new WeakMap());
              function Tt(Ot) {
                return typeof WeakMap == "undefined" ? !1 : bt.working ? bt(Ot) : Ot instanceof WeakMap;
              }
              c.isWeakMap = Tt;
              function It(Ot) {
                return d(Ot) === "[object WeakSet]";
              }
              It.working = typeof WeakSet != "undefined" && It(/* @__PURE__ */ new WeakSet());
              function Lt(Ot) {
                return It(Ot);
              }
              c.isWeakSet = Lt;
              function zt(Ot) {
                return d(Ot) === "[object ArrayBuffer]";
              }
              zt.working = typeof ArrayBuffer != "undefined" && zt(new ArrayBuffer());
              function Q(Ot) {
                return typeof ArrayBuffer == "undefined" ? !1 : zt.working ? zt(Ot) : Ot instanceof ArrayBuffer;
              }
              c.isArrayBuffer = Q;
              function gt(Ot) {
                return d(Ot) === "[object DataView]";
              }
              gt.working = typeof ArrayBuffer != "undefined" && typeof DataView != "undefined" && gt(new DataView(new ArrayBuffer(1), 0, 1));
              function ht(Ot) {
                return typeof DataView == "undefined" ? !1 : gt.working ? gt(Ot) : Ot instanceof DataView;
              }
              c.isDataView = ht;
              var st = typeof SharedArrayBuffer != "undefined" ? SharedArrayBuffer : void 0;
              function xt(Ot) {
                return d(Ot) === "[object SharedArrayBuffer]";
              }
              function G(Ot) {
                return typeof st == "undefined" ? !1 : (typeof xt.working == "undefined" && (xt.working = xt(new st())), xt.working ? xt(Ot) : Ot instanceof st);
              }
              c.isSharedArrayBuffer = G;
              function Ft(Ot) {
                return d(Ot) === "[object AsyncFunction]";
              }
              c.isAsyncFunction = Ft;
              function z(Ot) {
                return d(Ot) === "[object Map Iterator]";
              }
              c.isMapIterator = z;
              function C(Ot) {
                return d(Ot) === "[object Set Iterator]";
              }
              c.isSetIterator = C;
              function k(Ot) {
                return d(Ot) === "[object Generator]";
              }
              c.isGeneratorObject = k;
              function V(Ot) {
                return d(Ot) === "[object WebAssembly.Module]";
              }
              c.isWebAssemblyCompiledModule = V;
              function ot(Ot) {
                return x(Ot, i);
              }
              c.isNumberObject = ot;
              function et(Ot) {
                return x(Ot, p);
              }
              c.isStringObject = et;
              function tt(Ot) {
                return x(Ot, y);
              }
              c.isBooleanObject = tt;
              function At(Ot) {
                return u && x(Ot, m);
              }
              c.isBigIntObject = At;
              function Nt(Ot) {
                return h && x(Ot, e);
              }
              c.isSymbolObject = Nt;
              function Kt(Ot) {
                return ot(Ot) || et(Ot) || tt(Ot) || At(Ot) || Nt(Ot);
              }
              c.isBoxedPrimitive = Kt;
              function Vt(Ot) {
                return typeof Uint8Array != "undefined" && (Q(Ot) || G(Ot));
              }
              c.isAnyArrayBuffer = Vt, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(Ot) {
                Object.defineProperty(c, Ot, {
                  enumerable: !1,
                  value: function() {
                    throw new Error(Ot + " is not supported in userland");
                  }
                });
              });
            }
          ),
          /***/
          85663: (
            /***/
            function(l, c, t) {
              var s = t(82530), r = Object.getOwnPropertyDescriptors || function(st) {
                for (var xt = Object.keys(st), G = {}, Ft = 0; Ft < xt.length; Ft++)
                  G[xt[Ft]] = Object.getOwnPropertyDescriptor(st, xt[Ft]);
                return G;
              }, a = /%[sdj%]/g;
              c.format = function(ht) {
                if (!b(ht)) {
                  for (var st = [], xt = 0; xt < arguments.length; xt++)
                    st.push(h(arguments[xt]));
                  return st.join(" ");
                }
                for (var xt = 1, G = arguments, Ft = G.length, z = String(ht).replace(a, function(k) {
                  if (k === "%%")
                    return "%";
                  if (xt >= Ft)
                    return k;
                  switch (k) {
                    case "%s":
                      return String(G[xt++]);
                    case "%d":
                      return Number(G[xt++]);
                    case "%j":
                      try {
                        return JSON.stringify(G[xt++]);
                      } catch (V) {
                        return "[Circular]";
                      }
                    default:
                      return k;
                  }
                }), C = G[xt]; xt < Ft; C = G[++xt])
                  A(C) || !M(C) ? z += " " + C : z += " " + h(C);
                return z;
              }, c.deprecate = function(ht, st) {
                if (typeof s != "undefined" && s.noDeprecation === !0)
                  return ht;
                if (typeof s == "undefined")
                  return function() {
                    return c.deprecate(ht, st).apply(this, arguments);
                  };
                var xt = !1;
                function G() {
                  if (!xt) {
                    if (s.throwDeprecation)
                      throw new Error(st);
                    s.traceDeprecation ? console.trace(st) : console.error(st), xt = !0;
                  }
                  return ht.apply(this, arguments);
                }
                return G;
              };
              var o = {}, f = /^$/;
              if (s.env.NODE_DEBUG) {
                var u = s.env.NODE_DEBUG;
                u = u.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), f = new RegExp("^" + u + "$", "i");
              }
              c.debuglog = function(ht) {
                if (ht = ht.toUpperCase(), !o[ht])
                  if (f.test(ht)) {
                    var st = s.pid;
                    o[ht] = function() {
                      var xt = c.format.apply(c, arguments);
                      console.error("%s %d: %s", ht, st, xt);
                    };
                  } else
                    o[ht] = function() {
                    };
                return o[ht];
              };
              function h(ht, st) {
                var xt = {
                  seen: [],
                  stylize: i
                };
                return arguments.length >= 3 && (xt.depth = arguments[2]), arguments.length >= 4 && (xt.colors = arguments[3]), T(st) ? xt.showHidden = st : st && c._extend(xt, st), L(xt.showHidden) && (xt.showHidden = !1), L(xt.depth) && (xt.depth = 2), L(xt.colors) && (xt.colors = !1), L(xt.customInspect) && (xt.customInspect = !0), xt.colors && (xt.stylize = d), y(xt, ht, xt.depth);
              }
              c.inspect = h, h.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
              }, h.styles = {
                special: "cyan",
                number: "yellow",
                boolean: "yellow",
                undefined: "grey",
                null: "bold",
                string: "green",
                date: "magenta",
                // "name": intentionally not styling
                regexp: "red"
              };
              function d(ht, st) {
                var xt = h.styles[st];
                return xt ? "\x1B[" + h.colors[xt][0] + "m" + ht + "\x1B[" + h.colors[xt][1] + "m" : ht;
              }
              function i(ht, st) {
                return ht;
              }
              function p(ht) {
                var st = {};
                return ht.forEach(function(xt, G) {
                  st[xt] = !0;
                }), st;
              }
              function y(ht, st, xt) {
                if (ht.customInspect && st && J(st.inspect) && // Filter out the util module, it's inspect function is special
                st.inspect !== c.inspect && // Also filter out any prototype objects using the circular check.
                !(st.constructor && st.constructor.prototype === st)) {
                  var G = st.inspect(xt, ht);
                  return b(G) || (G = y(ht, G, xt)), G;
                }
                var Ft = m(ht, st);
                if (Ft)
                  return Ft;
                var z = Object.keys(st), C = p(z);
                if (ht.showHidden && (z = Object.getOwnPropertyNames(st)), ct(st) && (z.indexOf("message") >= 0 || z.indexOf("description") >= 0))
                  return e(st);
                if (z.length === 0) {
                  if (J(st)) {
                    var k = st.name ? ": " + st.name : "";
                    return ht.stylize("[Function" + k + "]", "special");
                  }
                  if (N(st))
                    return ht.stylize(RegExp.prototype.toString.call(st), "regexp");
                  if (K(st))
                    return ht.stylize(Date.prototype.toString.call(st), "date");
                  if (ct(st))
                    return e(st);
                }
                var V = "", ot = !1, et = ["{", "}"];
                if (O(st) && (ot = !0, et = ["[", "]"]), J(st)) {
                  var tt = st.name ? ": " + st.name : "";
                  V = " [Function" + tt + "]";
                }
                if (N(st) && (V = " " + RegExp.prototype.toString.call(st)), K(st) && (V = " " + Date.prototype.toUTCString.call(st)), ct(st) && (V = " " + e(st)), z.length === 0 && (!ot || st.length == 0))
                  return et[0] + V + et[1];
                if (xt < 0)
                  return N(st) ? ht.stylize(RegExp.prototype.toString.call(st), "regexp") : ht.stylize("[Object]", "special");
                ht.seen.push(st);
                var At;
                return ot ? At = x(ht, st, xt, C, z) : At = z.map(function(Nt) {
                  return S(ht, st, xt, C, Nt, ot);
                }), ht.seen.pop(), P(At, V, et);
              }
              function m(ht, st) {
                if (L(st))
                  return ht.stylize("undefined", "undefined");
                if (b(st)) {
                  var xt = "'" + JSON.stringify(st).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                  return ht.stylize(xt, "string");
                }
                if (D(st))
                  return ht.stylize("" + st, "number");
                if (T(st))
                  return ht.stylize("" + st, "boolean");
                if (A(st))
                  return ht.stylize("null", "null");
              }
              function e(ht) {
                return "[" + Error.prototype.toString.call(ht) + "]";
              }
              function x(ht, st, xt, G, Ft) {
                for (var z = [], C = 0, k = st.length; C < k; ++C)
                  Lt(st, String(C)) ? z.push(S(
                    ht,
                    st,
                    xt,
                    G,
                    String(C),
                    !0
                  )) : z.push("");
                return Ft.forEach(function(V) {
                  V.match(/^\d+$/) || z.push(S(
                    ht,
                    st,
                    xt,
                    G,
                    V,
                    !0
                  ));
                }), z;
              }
              function S(ht, st, xt, G, Ft, z) {
                var C, k, V;
                if (V = Object.getOwnPropertyDescriptor(st, Ft) || { value: st[Ft] }, V.get ? V.set ? k = ht.stylize("[Getter/Setter]", "special") : k = ht.stylize("[Getter]", "special") : V.set && (k = ht.stylize("[Setter]", "special")), Lt(G, Ft) || (C = "[" + Ft + "]"), k || (ht.seen.indexOf(V.value) < 0 ? (A(xt) ? k = y(ht, V.value, null) : k = y(ht, V.value, xt - 1), k.indexOf(`
`) > -1 && (z ? k = k.split(`
`).map(function(ot) {
                  return "  " + ot;
                }).join(`
`).slice(2) : k = `
` + k.split(`
`).map(function(ot) {
                  return "   " + ot;
                }).join(`
`))) : k = ht.stylize("[Circular]", "special")), L(C)) {
                  if (z && Ft.match(/^\d+$/))
                    return k;
                  C = JSON.stringify("" + Ft), C.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (C = C.slice(1, -1), C = ht.stylize(C, "name")) : (C = C.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), C = ht.stylize(C, "string"));
                }
                return C + ": " + k;
              }
              function P(ht, st, xt) {
                var G = ht.reduce(function(Ft, z) {
                  return z.indexOf(`
`) >= 0, Ft + z.replace(/\u001b\[\d\d?m/g, "").length + 1;
                }, 0);
                return G > 60 ? xt[0] + (st === "" ? "" : st + `
 `) + " " + ht.join(`,
  `) + " " + xt[1] : xt[0] + st + " " + ht.join(", ") + " " + xt[1];
              }
              c.types = t(64489);
              function O(ht) {
                return Array.isArray(ht);
              }
              c.isArray = O;
              function T(ht) {
                return typeof ht == "boolean";
              }
              c.isBoolean = T;
              function A(ht) {
                return ht === null;
              }
              c.isNull = A;
              function E(ht) {
                return ht == null;
              }
              c.isNullOrUndefined = E;
              function D(ht) {
                return typeof ht == "number";
              }
              c.isNumber = D;
              function b(ht) {
                return typeof ht == "string";
              }
              c.isString = b;
              function R(ht) {
                return typeof ht == "symbol";
              }
              c.isSymbol = R;
              function L(ht) {
                return ht === void 0;
              }
              c.isUndefined = L;
              function N(ht) {
                return M(ht) && yt(ht) === "[object RegExp]";
              }
              c.isRegExp = N, c.types.isRegExp = N;
              function M(ht) {
                return typeof ht == "object" && ht !== null;
              }
              c.isObject = M;
              function K(ht) {
                return M(ht) && yt(ht) === "[object Date]";
              }
              c.isDate = K, c.types.isDate = K;
              function ct(ht) {
                return M(ht) && (yt(ht) === "[object Error]" || ht instanceof Error);
              }
              c.isError = ct, c.types.isNativeError = ct;
              function J(ht) {
                return typeof ht == "function";
              }
              c.isFunction = J;
              function nt(ht) {
                return ht === null || typeof ht == "boolean" || typeof ht == "number" || typeof ht == "string" || typeof ht == "symbol" || // ES6 symbol
                typeof ht == "undefined";
              }
              c.isPrimitive = nt, c.isBuffer = t(79397);
              function yt(ht) {
                return Object.prototype.toString.call(ht);
              }
              function bt(ht) {
                return ht < 10 ? "0" + ht.toString(10) : ht.toString(10);
              }
              var Tt = [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec"
              ];
              function It() {
                var ht = /* @__PURE__ */ new Date(), st = [
                  bt(ht.getHours()),
                  bt(ht.getMinutes()),
                  bt(ht.getSeconds())
                ].join(":");
                return [ht.getDate(), Tt[ht.getMonth()], st].join(" ");
              }
              c.log = function() {
                console.log("%s - %s", It(), c.format.apply(c, arguments));
              }, c.inherits = t(48575), c._extend = function(ht, st) {
                if (!st || !M(st))
                  return ht;
                for (var xt = Object.keys(st), G = xt.length; G--; )
                  ht[xt[G]] = st[xt[G]];
                return ht;
              };
              function Lt(ht, st) {
                return Object.prototype.hasOwnProperty.call(ht, st);
              }
              var zt = typeof Symbol != "undefined" ? Symbol("util.promisify.custom") : void 0;
              c.promisify = function(st) {
                if (typeof st != "function")
                  throw new TypeError('The "original" argument must be of type Function');
                if (zt && st[zt]) {
                  var xt = st[zt];
                  if (typeof xt != "function")
                    throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                  return Object.defineProperty(xt, zt, {
                    value: xt,
                    enumerable: !1,
                    writable: !1,
                    configurable: !0
                  }), xt;
                }
                function xt() {
                  for (var G, Ft, z = new Promise(function(V, ot) {
                    G = V, Ft = ot;
                  }), C = [], k = 0; k < arguments.length; k++)
                    C.push(arguments[k]);
                  C.push(function(V, ot) {
                    V ? Ft(V) : G(ot);
                  });
                  try {
                    st.apply(this, C);
                  } catch (V) {
                    Ft(V);
                  }
                  return z;
                }
                return Object.setPrototypeOf(xt, Object.getPrototypeOf(st)), zt && Object.defineProperty(xt, zt, {
                  value: xt,
                  enumerable: !1,
                  writable: !1,
                  configurable: !0
                }), Object.defineProperties(
                  xt,
                  r(st)
                );
              }, c.promisify.custom = zt;
              function Q(ht, st) {
                if (!ht) {
                  var xt = new Error("Promise was rejected with a falsy value");
                  xt.reason = ht, ht = xt;
                }
                return st(ht);
              }
              function gt(ht) {
                if (typeof ht != "function")
                  throw new TypeError('The "original" argument must be of type Function');
                function st() {
                  for (var xt = [], G = 0; G < arguments.length; G++)
                    xt.push(arguments[G]);
                  var Ft = xt.pop();
                  if (typeof Ft != "function")
                    throw new TypeError("The last argument must be of type Function");
                  var z = this, C = function() {
                    return Ft.apply(z, arguments);
                  };
                  ht.apply(this, xt).then(
                    function(k) {
                      s.nextTick(C.bind(null, null, k));
                    },
                    function(k) {
                      s.nextTick(Q.bind(null, k, C));
                    }
                  );
                }
                return Object.setPrototypeOf(st, Object.getPrototypeOf(ht)), Object.defineProperties(
                  st,
                  r(ht)
                ), st;
              }
              c.callbackify = gt;
            }
          ),
          /***/
          54010: (
            /***/
            function(l, c, t) {
              var s = t(94843), r = t(14343), a = t(12550), o = t(97615), f = t(93828), u = o("Object.prototype.toString"), h = t(44111)(), d = typeof globalThis == "undefined" ? t.g : globalThis, i = r(), p = o("String.prototype.slice"), y = Object.getPrototypeOf, m = o("Array.prototype.indexOf", !0) || function(O, T) {
                for (var A = 0; A < O.length; A += 1)
                  if (O[A] === T)
                    return A;
                return -1;
              }, e = { __proto__: null };
              h && f && y ? s(i, function(P) {
                var O = new d[P]();
                if (Symbol.toStringTag in O) {
                  var T = y(O), A = f(T, Symbol.toStringTag);
                  if (!A) {
                    var E = y(T);
                    A = f(E, Symbol.toStringTag);
                  }
                  e["$" + P] = a(A.get);
                }
              }) : s(i, function(P) {
                var O = new d[P](), T = O.slice || O.set;
                T && (e["$" + P] = a(T));
              });
              var x = function(O) {
                var T = !1;
                return s(e, function(A, E) {
                  if (!T)
                    try {
                      "$" + A(O) === E && (T = p(E, 1));
                    } catch (D) {
                    }
                }), T;
              }, S = function(O) {
                var T = !1;
                return s(e, function(A, E) {
                  if (!T)
                    try {
                      A(O), T = p(E, 1);
                    } catch (D) {
                    }
                }), T;
              };
              l.exports = function(O) {
                if (!O || typeof O != "object")
                  return !1;
                if (!h) {
                  var T = p(u(O), 8, -1);
                  return m(i, T) > -1 ? T : T !== "Object" ? !1 : S(O);
                }
                return f ? x(O) : null;
              };
            }
          ),
          /***/
          26651: (
            /***/
            function(l, c, t) {
              l.exports = t(91117);
            }
          ),
          /***/
          91117: (
            /***/
            function(l, c, t) {
              (function() {
                var s;
                if (l.exports && !t.g.xmldocAssumeBrowser)
                  s = t(53407);
                else if (s = this.sax, !s)
                  throw new Error(
                    "Expected sax to be defined. Make sure you're including sax.js before this file."
                  );
                function r(A, E) {
                  if (!E) {
                    var D = h[h.length - 1];
                    D.parser && (E = D.parser);
                  }
                  this.name = A.name, this.attr = A.attributes, this.val = "", this.children = [], this.firstChild = null, this.lastChild = null, this.line = E ? E.line : null, this.column = E ? E.column : null, this.position = E ? E.position : null, this.startTagPosition = E ? E.startTagPosition : null;
                }
                r.prototype._addChild = function(A) {
                  this.children.push(A), this.firstChild || (this.firstChild = A), this.lastChild = A;
                }, r.prototype._opentag = function(A) {
                  var E = new r(A);
                  this._addChild(E), h.unshift(E);
                }, r.prototype._closetag = function() {
                  h.shift();
                }, r.prototype._text = function(A) {
                  typeof this.children != "undefined" && (this.val += A, this._addChild(new a(A)));
                }, r.prototype._cdata = function(A) {
                  this.val += A, this._addChild(new o(A));
                }, r.prototype._comment = function(A) {
                  typeof this.children != "undefined" && this._addChild(new f(A));
                }, r.prototype._error = function(A) {
                  throw A;
                }, r.prototype.eachChild = function(A, E) {
                  for (var D = 0, b = this.children.length; D < b; D++)
                    if (this.children[D].type === "element" && A.call(E, this.children[D], D, this.children) === !1)
                      return;
                }, r.prototype.childNamed = function(A) {
                  for (var E = 0, D = this.children.length; E < D; E++) {
                    var b = this.children[E];
                    if (b.name === A)
                      return b;
                  }
                }, r.prototype.childrenNamed = function(A) {
                  for (var E = [], D = 0, b = this.children.length; D < b; D++)
                    this.children[D].name === A && E.push(this.children[D]);
                  return E;
                }, r.prototype.childWithAttribute = function(A, E) {
                  for (var D = 0, b = this.children.length; D < b; D++) {
                    var R = this.children[D];
                    if (R.type === "element" && (E && R.attr[A] === E || !E && R.attr[A]))
                      return R;
                  }
                }, r.prototype.descendantsNamed = function(A) {
                  for (var E = [], D = 0, b = this.children.length; D < b; D++) {
                    var R = this.children[D];
                    R.type === "element" && (R.name === A && E.push(R), E = E.concat(R.descendantsNamed(A)));
                  }
                  return E;
                }, r.prototype.descendantWithPath = function(A) {
                  for (var E = this, D = A.split("."), b = 0, R = D.length; b < R; b++)
                    if (E && E.type === "element")
                      E = E.childNamed(D[b]);
                    else
                      return;
                  return E;
                }, r.prototype.valueWithPath = function(A) {
                  var E = A.split("@"), D = this.descendantWithPath(E[0]);
                  if (D)
                    return E.length > 1 ? D.attr[E[1]] : D.val;
                }, r.prototype.toString = function(A) {
                  return this.toStringWithIndent("", A);
                }, r.prototype.toStringWithIndent = function(A, E) {
                  var D = A + "<" + this.name, b = E && E.compressed ? "" : `
`;
                  E && E.preserveWhitespace;
                  for (var R in this.attr)
                    Object.prototype.hasOwnProperty.call(this.attr, R) && (D += " " + R + '="' + O(this.attr[R]) + '"');
                  if (this.children.length === 1 && this.children[0].type !== "element")
                    D += ">" + this.children[0].toString(E) + "</" + this.name + ">";
                  else if (this.children.length) {
                    D += ">" + b;
                    for (var L = A + (E && E.compressed ? "" : "  "), N = 0, M = this.children.length; N < M; N++)
                      D += this.children[N].toStringWithIndent(L, E) + b;
                    D += A + "</" + this.name + ">";
                  } else if (E && E.html) {
                    var K = [
                      "area",
                      "base",
                      "br",
                      "col",
                      "embed",
                      "frame",
                      "hr",
                      "img",
                      "input",
                      "keygen",
                      "link",
                      "menuitem",
                      "meta",
                      "param",
                      "source",
                      "track",
                      "wbr"
                    ];
                    K.indexOf(this.name) !== -1 ? D += "/>" : D += "></" + this.name + ">";
                  } else
                    D += "/>";
                  return D;
                };
                function a(A) {
                  this.text = A;
                }
                a.prototype.toString = function(A) {
                  return T(O(this.text), A);
                }, a.prototype.toStringWithIndent = function(A, E) {
                  return A + this.toString(E);
                };
                function o(A) {
                  this.cdata = A;
                }
                o.prototype.toString = function(A) {
                  return "<![CDATA[" + T(this.cdata, A) + "]]>";
                }, o.prototype.toStringWithIndent = function(A, E) {
                  return A + this.toString(E);
                };
                function f(A) {
                  this.comment = A;
                }
                f.prototype.toString = function(A) {
                  return "<!--" + T(O(this.comment), A) + "-->";
                }, f.prototype.toStringWithIndent = function(A, E) {
                  return A + this.toString(E);
                }, r.prototype.type = "element", a.prototype.type = "text", o.prototype.type = "cdata", f.prototype.type = "comment";
                function u(A) {
                  if (A && (A = A.toString().trim()), !A)
                    throw new Error("No XML to parse!");
                  this.doctype = "", this.parser = s.parser(!0), d(this.parser), h = [this];
                  try {
                    this.parser.write(A);
                  } finally {
                    delete this.parser;
                  }
                }
                P(u.prototype, r.prototype), u.prototype._opentag = function(A) {
                  typeof this.children == "undefined" ? r.call(this, A) : r.prototype._opentag.apply(this, arguments);
                }, u.prototype._doctype = function(A) {
                  this.doctype += A;
                };
                var h = null;
                function d(A) {
                  A.onopentag = i, A.onclosetag = p, A.ontext = y, A.oncdata = m, A.oncomment = e, A.ondoctype = x, A.onerror = S;
                }
                function i() {
                  h[0] && h[0]._opentag.apply(h[0], arguments);
                }
                function p() {
                  h[0] && h[0]._closetag.apply(h[0], arguments);
                }
                function y() {
                  h[0] && h[0]._text.apply(h[0], arguments);
                }
                function m() {
                  h[0] && h[0]._cdata.apply(h[0], arguments);
                }
                function e() {
                  h[0] && h[0]._comment.apply(h[0], arguments);
                }
                function x() {
                  h[0] && h[0]._doctype.apply(h[0], arguments);
                }
                function S() {
                  h[0] && h[0]._error.apply(h[0], arguments);
                }
                function P(A, E) {
                  for (var D in E)
                    E.hasOwnProperty(D) && (A[D] = E[D]);
                }
                function O(A) {
                  return A.toString().replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&apos;").replace(/"/g, "&quot;");
                }
                function T(A, E) {
                  var D = A;
                  return E && E.trimmed && A.length > 25 && (D = D.substring(0, 25).trim() + "â¦"), E && E.preserveWhitespace || (D = D.trim()), D;
                }
                l.exports && !t.g.xmldocAssumeBrowser ? (l.exports.XmlDocument = u, l.exports.XmlElement = r, l.exports.XmlTextNode = a, l.exports.XmlCDataNode = o, l.exports.XmlCommentNode = f) : (this.XmlDocument = u, this.XmlElement = r, this.XmlTextNode = a, this.XmlCDataNode = o, this.XmlCommentNode = f);
              })();
            }
          ),
          /***/
          30570: (
            /***/
            function(l, c, t) {
              typeof window != "undefined" && !window.Promise && t(46121), t(67367);
              var s = function(a, o) {
                return new Promise(function(f, u) {
                  var h = new XMLHttpRequest();
                  h.open("GET", a, !0);
                  for (var d in o)
                    h.setRequestHeader(d, o[d]);
                  h.responseType = "arraybuffer", h.onreadystatechange = function() {
                    if (h.readyState === 4) {
                      var i = h.status >= 200 && h.status < 300;
                      i || setTimeout(function() {
                        u(new TypeError('Failed to fetch (url: "' + a + '")'));
                      }, 0);
                    }
                  }, h.onload = function() {
                    var i = h.status >= 200 && h.status < 300;
                    i && f(h.response);
                  }, h.onerror = function() {
                    setTimeout(function() {
                      u(new TypeError('Network request failed (url: "' + a + '")'));
                    }, 0);
                  }, h.ontimeout = function() {
                    setTimeout(function() {
                      u(new TypeError('Network request failed (url: "' + a + '")'));
                    }, 0);
                  }, h.send();
                });
              };
              function r(a) {
                this.fs = a, this.resolving = {};
              }
              r.prototype.resolve = function(a, o) {
                if (!this.resolving[a]) {
                  var f = this;
                  this.resolving[a] = new Promise(function(u, h) {
                    a.toLowerCase().indexOf("https://") === 0 || a.toLowerCase().indexOf("http://") === 0 ? f.fs.existsSync(a) ? u() : s(a, o).then(function(d) {
                      f.fs.writeFileSync(a, d), u();
                    }, function(d) {
                      h(d);
                    }) : u();
                  });
                }
                return this.resolving[a];
              }, r.prototype.resolved = function() {
                var a = this;
                return new Promise(function(o, f) {
                  Promise.all(Object.values(a.resolving)).then(function() {
                    o();
                  }, function(u) {
                    f(u);
                  });
                });
              }, l.exports = r;
            }
          ),
          /***/
          82669: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer, r = t(16920).isFunction, a = t(16920).isUndefined;
              t(16920).isNull;
              var o = t(70457), f = o.saveAs, u = {
                Roboto: {
                  normal: "Roboto-Regular.ttf",
                  bold: "Roboto-Medium.ttf",
                  italics: "Roboto-Italic.ttf",
                  bolditalics: "Roboto-MediumItalic.ttf"
                }
              };
              function h(i, p, y, m) {
                this.docDefinition = i, this.tableLayouts = p || null, this.fonts = y || u, this.vfs = m;
              }
              function d() {
                try {
                  var i = new Uint8Array(1), p = { foo: function() {
                    return 42;
                  } };
                  return Object.setPrototypeOf(p, Uint8Array.prototype), Object.setPrototypeOf(i, p), i.foo() === 42;
                } catch (y) {
                  return !1;
                }
              }
              h.prototype._createDoc = function(i, p) {
                var y = function(D) {
                  return typeof D == "object" ? { url: D.url, headers: D.headers } : { url: D, headers: {} };
                };
                i = i || {}, this.tableLayouts && (i.tableLayouts = this.tableLayouts);
                var m = t(56498), e = new m(this.fonts);
                if (t(52773).bindFS(this.vfs), !r(p)) {
                  var x = e.createPdfKitDocument(this.docDefinition, i);
                  return x;
                }
                var S = t(30570), P = new S(t(52773));
                for (var O in this.fonts)
                  if (this.fonts.hasOwnProperty(O)) {
                    if (this.fonts[O].normal)
                      if (Array.isArray(this.fonts[O].normal)) {
                        var T = y(this.fonts[O].normal[0]);
                        P.resolve(T.url, T.headers), this.fonts[O].normal[0] = T.url;
                      } else {
                        var T = y(this.fonts[O].normal);
                        P.resolve(T.url, T.headers), this.fonts[O].normal = T.url;
                      }
                    if (this.fonts[O].bold)
                      if (Array.isArray(this.fonts[O].bold)) {
                        var T = y(this.fonts[O].bold[0]);
                        P.resolve(T.url, T.headers), this.fonts[O].bold[0] = T.url;
                      } else {
                        var T = y(this.fonts[O].bold);
                        P.resolve(T.url, T.headers), this.fonts[O].bold = T.url;
                      }
                    if (this.fonts[O].italics)
                      if (Array.isArray(this.fonts[O].italics)) {
                        var T = y(this.fonts[O].italics[0]);
                        P.resolve(T.url, T.headers), this.fonts[O].italics[0] = T.url;
                      } else {
                        var T = y(this.fonts[O].italics);
                        P.resolve(T.url, T.headers), this.fonts[O].italics = T.url;
                      }
                    if (this.fonts[O].bolditalics)
                      if (Array.isArray(this.fonts[O].bolditalics)) {
                        var T = y(this.fonts[O].bolditalics[0]);
                        P.resolve(T.url, T.headers), this.fonts[O].bolditalics[0] = T.url;
                      } else {
                        var T = y(this.fonts[O].bolditalics);
                        P.resolve(T.url, T.headers), this.fonts[O].bolditalics = T.url;
                      }
                  }
                if (this.docDefinition.images) {
                  for (var A in this.docDefinition.images)
                    if (this.docDefinition.images.hasOwnProperty(A)) {
                      var T = y(this.docDefinition.images[A]);
                      P.resolve(T.url, T.headers), this.docDefinition.images[A] = T.url;
                    }
                }
                var E = this;
                P.resolved().then(function() {
                  var D = e.createPdfKitDocument(E.docDefinition, i);
                  p(D);
                }, function(D) {
                  throw D;
                });
              }, h.prototype._flushDoc = function(i, p) {
                var y = [], m;
                i.on("readable", function() {
                  for (var e; (e = i.read(9007199254740991)) !== null; )
                    y.push(e);
                }), i.on("end", function() {
                  m = s.concat(y), p(m, i._pdfMakePages);
                }), i.end();
              }, h.prototype._getPages = function(i, p) {
                if (!p)
                  throw "_getPages is an async method and needs a callback argument";
                var y = this;
                this._createDoc(i, function(m) {
                  y._flushDoc(m, function(e, x) {
                    p(x);
                  });
                });
              }, h.prototype._bufferToBlob = function(i) {
                var p;
                try {
                  p = new Blob([i], { type: "application/pdf" });
                } catch (m) {
                  if (m.name === "InvalidStateError") {
                    var y = new Uint8Array(i);
                    p = new Blob([y.buffer], { type: "application/pdf" });
                  }
                }
                if (!p)
                  throw "Could not generate blob";
                return p;
              }, h.prototype._openWindow = function() {
                var i = window.open("", "_blank");
                if (i === null)
                  throw "Open PDF in new window blocked by browser";
                return i;
              }, h.prototype._openPdf = function(i, p) {
                p || (p = this._openWindow());
                try {
                  this.getBlob(function(y) {
                    var m = window.URL || window.webkitURL, e = m.createObjectURL(y);
                    p.location.href = e;
                  }, i);
                } catch (y) {
                  throw p.close(), y;
                }
              }, h.prototype.open = function(i, p) {
                i = i || {}, i.autoPrint = !1, p = p || null, this._openPdf(i, p);
              }, h.prototype.print = function(i, p) {
                i = i || {}, i.autoPrint = !0, p = p || null, this._openPdf(i, p);
              }, h.prototype.download = function(i, p, y) {
                r(i) && (a(p) || (y = p), p = i, i = null), i = i || "file.pdf", this.getBlob(function(m) {
                  f(m, i), r(p) && p();
                }, y);
              }, h.prototype.getBase64 = function(i, p) {
                if (!i)
                  throw "getBase64 is an async method and needs a callback argument";
                this.getBuffer(function(y) {
                  i(y.toString("base64"));
                }, p);
              }, h.prototype.getDataUrl = function(i, p) {
                if (!i)
                  throw "getDataUrl is an async method and needs a callback argument";
                this.getBuffer(function(y) {
                  i("data:application/pdf;base64," + y.toString("base64"));
                }, p);
              }, h.prototype.getBlob = function(i, p) {
                if (!i)
                  throw "getBlob is an async method and needs a callback argument";
                var y = this;
                this.getBuffer(function(m) {
                  var e = y._bufferToBlob(m);
                  i(e);
                }, p);
              }, h.prototype.getBuffer = function(i, p) {
                if (!i)
                  throw "getBuffer is an async method and needs a callback argument";
                var y = this;
                this._createDoc(p, function(m) {
                  y._flushDoc(m, function(e) {
                    i(e);
                  });
                });
              }, h.prototype.getStream = function(i, p) {
                if (!r(p)) {
                  var y = this._createDoc(i);
                  return y;
                }
                this._createDoc(i, function(m) {
                  p(m);
                });
              }, l.exports = {
                createPdf: function(i, p, y, m) {
                  if (!d())
                    throw "Your browser does not provide the level of support needed";
                  return new h(
                    i,
                    p || t.g.pdfMake.tableLayouts,
                    y || t.g.pdfMake.fonts,
                    m || t.g.pdfMake.vfs
                  );
                }
              };
            }
          ),
          /***/
          52773: (
            /***/
            function(l, c, t) {
              var s = "/", r = t(43060).Buffer;
              function a() {
                this.fileSystem = {}, this.dataSystem = {};
              }
              a.prototype.existsSync = function(f) {
                return f = o(f), typeof this.fileSystem[f] != "undefined" || typeof this.dataSystem[f] != "undefined";
              }, a.prototype.readFileSync = function(f, u) {
                f = o(f);
                var h = this.dataSystem[f];
                if (typeof h == "string" && u === "utf8")
                  return h;
                if (h)
                  return new r(h, typeof h == "string" ? "base64" : void 0);
                var d = this.fileSystem[f];
                if (d)
                  return d;
                throw "File '" + f + "' not found in virtual file system";
              }, a.prototype.writeFileSync = function(f, u) {
                this.fileSystem[o(f)] = u;
              }, a.prototype.bindFS = function(f) {
                this.dataSystem = f || {};
              };
              function o(f) {
                return f.indexOf(s) === 0 && (f = f.substring(s.length)), f.indexOf("/") === 0 && (f = f.substring(1)), f;
              }
              l.exports = new a();
            }
          ),
          /***/
          65354: (
            /***/
            function(l, c, t) {
              var s = t(16920).isString;
              function r(u, h) {
                var d = [], i = 0, p = 0, y = [], m = 0, e = 0, x = [], S = h;
                u.forEach(function(D) {
                  a(D) ? (d.push(D), i += D._minWidth, p += D._maxWidth) : o(D) ? (y.push(D), m = Math.max(m, D._minWidth), e = Math.max(e, D._maxWidth)) : x.push(D);
                }), x.forEach(function(D) {
                  s(D.width) && /\d+%/.test(D.width) && (D.width = parseFloat(D.width) * S / 100), D.width < D._minWidth && D.elasticWidth ? D._calcWidth = D._minWidth : D._calcWidth = D.width, h -= D._calcWidth;
                });
                var P = i + m * y.length, O = p + e * y.length;
                if (P >= h)
                  d.forEach(function(D) {
                    D._calcWidth = D._minWidth;
                  }), y.forEach(function(D) {
                    D._calcWidth = m;
                  });
                else {
                  if (O < h)
                    d.forEach(function(D) {
                      D._calcWidth = D._maxWidth, h -= D._calcWidth;
                    });
                  else {
                    var T = h - P, A = O - P;
                    d.forEach(function(D) {
                      var b = D._maxWidth - D._minWidth;
                      D._calcWidth = D._minWidth + b * T / A, h -= D._calcWidth;
                    });
                  }
                  if (y.length > 0) {
                    var E = h / y.length;
                    y.forEach(function(D) {
                      D._calcWidth = E;
                    });
                  }
                }
              }
              function a(u) {
                return u.width === "auto";
              }
              function o(u) {
                return u.width === null || u.width === void 0 || u.width === "*" || u.width === "star";
              }
              function f(u) {
                for (var h = { min: 0, max: 0 }, d = { min: 0, max: 0 }, i = 0, p = 0, y = u.length; p < y; p++) {
                  var m = u[p];
                  o(m) ? (d.min = Math.max(d.min, m._minWidth), d.max = Math.max(d.max, m._maxWidth), i++) : a(m) ? (h.min += m._minWidth, h.max += m._maxWidth) : (h.min += m.width !== void 0 && m.width || m._minWidth, h.max += m.width !== void 0 && m.width || m._maxWidth);
                }
                return i && (h.min += i * d.min, h.max += i * d.max), h;
              }
              l.exports = {
                buildColumnWidths: r,
                measureMinMax: f,
                isAutoColumn: a,
                isStarColumn: o
              };
            }
          ),
          /***/
          77077: (
            /***/
            function(l, c, t) {
              var s = t(28045), r = t(28034), a = t(65354), o = t(16920).isString, f = t(16920).isNumber, u = t(16920).isObject, h = t(16920).isArray, d = t(16920).fontStringify, i = t(16920).getNodeId, p = t(16920).pack, y = t(86976);
              function m(e, x, S, P, O, T, A) {
                this.textTools = new s(e), this.styleStack = new r(x, S), this.imageMeasure = P, this.svgMeasure = O, this.tableLayouts = T, this.images = A, this.autoImageIndex = 1;
              }
              m.prototype.measureDocument = function(e) {
                return this.measureNode(e);
              }, m.prototype.measureNode = function(e) {
                var x = this;
                return this.styleStack.auto(e, function() {
                  if (e._margin = P(), e.columns)
                    return S(x.measureColumns(e));
                  if (e.stack)
                    return S(x.measureVerticalContainer(e));
                  if (e.ul)
                    return S(x.measureUnorderedList(e));
                  if (e.ol)
                    return S(x.measureOrderedList(e));
                  if (e.table)
                    return S(x.measureTable(e));
                  if (e.text !== void 0)
                    return S(x.measureLeaf(e));
                  if (e.toc)
                    return S(x.measureToc(e));
                  if (e.image)
                    return S(x.measureImage(e));
                  if (e.svg)
                    return S(x.measureSVG(e));
                  if (e.canvas)
                    return S(x.measureCanvas(e));
                  if (e.qr)
                    return S(x.measureQr(e));
                  throw "Unrecognized document structure: " + JSON.stringify(e, d);
                });
                function S(O) {
                  var T = O._margin;
                  return T && (O._minWidth += T[0] + T[2], O._maxWidth += T[0] + T[2]), O;
                }
                function P() {
                  function O(R, L) {
                    return R.marginLeft || R.marginTop || R.marginRight || R.marginBottom ? [
                      R.marginLeft || L[0] || 0,
                      R.marginTop || L[1] || 0,
                      R.marginRight || L[2] || 0,
                      R.marginBottom || L[3] || 0
                    ] : L;
                  }
                  function T(R) {
                    for (var L = {}, N = R.length - 1; N >= 0; N--) {
                      var M = R[N], K = x.styleStack.styleDictionary[M];
                      for (var ct in K)
                        K.hasOwnProperty(ct) && (L[ct] = K[ct]);
                    }
                    return L;
                  }
                  function A(R) {
                    return f(R) ? R = [R, R, R, R] : h(R) && R.length === 2 && (R = [R[0], R[1], R[0], R[1]]), R;
                  }
                  var E = [void 0, void 0, void 0, void 0];
                  if (e.style) {
                    var D = h(e.style) ? e.style : [e.style], b = T(D);
                    b && (E = O(b, E)), b.margin && (E = A(b.margin));
                  }
                  return E = O(e, E), e.margin && (E = A(e.margin)), E[0] === void 0 && E[1] === void 0 && E[2] === void 0 && E[3] === void 0 ? null : E;
                }
              }, m.prototype.convertIfBase64Image = function(e) {
                if (/^data:image\/(jpeg|jpg|png);base64,/.test(e.image)) {
                  var x = "$$pdfmake$$" + this.autoImageIndex++;
                  this.images[x] = e.image, e.image = x;
                }
              }, m.prototype.measureImageWithDimensions = function(e, x) {
                if (e.fit) {
                  var S = x.width / x.height > e.fit[0] / e.fit[1] ? e.fit[0] / x.width : e.fit[1] / x.height;
                  e._width = e._minWidth = e._maxWidth = x.width * S, e._height = x.height * S;
                } else
                  e.cover ? (e._width = e._minWidth = e._maxWidth = e.cover.width, e._height = e._minHeight = e._maxHeight = e.cover.height) : (e._width = e._minWidth = e._maxWidth = e.width || x.width, e._height = e.height || x.height * e._width / x.width, f(e.maxWidth) && e.maxWidth < e._width && (e._width = e._minWidth = e._maxWidth = e.maxWidth, e._height = e._width * x.height / x.width), f(e.maxHeight) && e.maxHeight < e._height && (e._height = e.maxHeight, e._width = e._minWidth = e._maxWidth = e._height * x.width / x.height), f(e.minWidth) && e.minWidth > e._width && (e._width = e._minWidth = e._maxWidth = e.minWidth, e._height = e._width * x.height / x.width), f(e.minHeight) && e.minHeight > e._height && (e._height = e.minHeight, e._width = e._minWidth = e._maxWidth = e._height * x.width / x.height));
                e._alignment = this.styleStack.getProperty("alignment");
              }, m.prototype.measureImage = function(e) {
                this.images && this.convertIfBase64Image(e);
                var x = this.imageMeasure.measureImage(e.image);
                return this.measureImageWithDimensions(e, x), e;
              }, m.prototype.measureSVG = function(e) {
                var x = this.svgMeasure.measureSVG(e.svg);
                return this.measureImageWithDimensions(e, x), e.font = this.styleStack.getProperty("font"), e.svg = this.svgMeasure.writeDimensions(e.svg, {
                  width: e._width,
                  height: e._height
                }), e;
              }, m.prototype.measureLeaf = function(e) {
                e._textRef && e._textRef._textNodeRef.text && (e.text = e._textRef._textNodeRef.text);
                var x = this.styleStack.clone();
                x.push(e);
                var S = this.textTools.buildInlines(e.text, x);
                return e._inlines = S.items, e._minWidth = S.minWidth, e._maxWidth = S.maxWidth, e;
              }, m.prototype.measureToc = function(e) {
                if (e.toc.title && (e.toc.title = this.measureNode(e.toc.title)), e.toc._items.length > 0) {
                  for (var x = [], S = e.toc.textStyle || {}, P = e.toc.numberStyle || S, O = e.toc.textMargin || [0, 0, 0, 0], T = 0, A = e.toc._items.length; T < A; T++) {
                    var E = e.toc._items[T], D = E._textNodeRef.tocStyle || S, b = E._textNodeRef.tocMargin || O, R = E._textNodeRef.tocNumberStyle || P, L = i(E._nodeRef);
                    x.push([
                      { text: E._textNodeRef.text, linkToDestination: L, alignment: "left", style: D, margin: b },
                      { text: "00000", linkToDestination: L, alignment: "right", _tocItemRef: E._nodeRef, style: R, margin: [0, b[1], 0, b[3]] }
                    ]);
                  }
                  e.toc._table = {
                    table: {
                      dontBreakRows: !0,
                      widths: ["*", "auto"],
                      body: x
                    },
                    layout: "noBorders"
                  }, e.toc._table = this.measureNode(e.toc._table);
                }
                return e;
              }, m.prototype.measureVerticalContainer = function(e) {
                var x = e.stack;
                e._minWidth = 0, e._maxWidth = 0;
                for (var S = 0, P = x.length; S < P; S++)
                  x[S] = this.measureNode(x[S]), e._minWidth = Math.max(e._minWidth, x[S]._minWidth), e._maxWidth = Math.max(e._maxWidth, x[S]._maxWidth);
                return e;
              }, m.prototype.gapSizeForList = function() {
                return this.textTools.sizeOfString("9. ", this.styleStack);
              }, m.prototype.buildUnorderedMarker = function(e, x, S) {
                function P(D, b) {
                  var R = D.fontSize / 6;
                  return {
                    canvas: [{
                      x: R,
                      y: D.height / D.lineHeight + D.descender - D.fontSize / 3,
                      r1: R,
                      r2: R,
                      type: "ellipse",
                      color: b
                    }]
                  };
                }
                function O(D, b) {
                  var R = D.fontSize / 3;
                  return {
                    canvas: [{
                      x: 0,
                      y: D.height / D.lineHeight + D.descender - D.fontSize / 3 - R / 2,
                      h: R,
                      w: R,
                      type: "rect",
                      color: b
                    }]
                  };
                }
                function T(D, b) {
                  var R = D.fontSize / 6;
                  return {
                    canvas: [{
                      x: R,
                      y: D.height / D.lineHeight + D.descender - D.fontSize / 3,
                      r1: R,
                      r2: R,
                      type: "ellipse",
                      lineColor: b
                    }]
                  };
                }
                var A, E = e.getProperty("markerColor") || e.getProperty("color") || "black";
                switch (S) {
                  case "circle":
                    A = T(x, E);
                    break;
                  case "square":
                    A = O(x, E);
                    break;
                  case "none":
                    A = {};
                    break;
                  case "disc":
                  default:
                    A = P(x, E);
                    break;
                }
                return A._minWidth = A._maxWidth = x.width, A._minHeight = A._maxHeight = x.height, A;
              }, m.prototype.buildOrderedMarker = function(e, x, S, P) {
                function O(R) {
                  function L(N) {
                    return (N >= 26 ? L((N / 26 >> 0) - 1) : "") + "abcdefghijklmnopqrstuvwxyz"[N % 26 >> 0];
                  }
                  return R < 1 ? R.toString() : L(R - 1);
                }
                function T(R) {
                  if (R < 1 || R > 4999)
                    return R.toString();
                  var L = R, N = { M: 1e3, CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 }, M = "", K;
                  for (K in N)
                    for (; L >= N[K]; )
                      M += K, L -= N[K];
                  return M;
                }
                function A(R) {
                  return R.toString();
                }
                var E;
                switch (S) {
                  case "none":
                    E = null;
                    break;
                  case "upper-alpha":
                    E = O(e).toUpperCase();
                    break;
                  case "lower-alpha":
                    E = O(e);
                    break;
                  case "upper-roman":
                    E = T(e);
                    break;
                  case "lower-roman":
                    E = T(e).toLowerCase();
                    break;
                  case "decimal":
                  default:
                    E = A(e);
                    break;
                }
                if (E === null)
                  return {};
                P && (h(P) ? (P[0] && (E = P[0] + E), P[1] && (E += P[1]), E += " ") : E += P + " ");
                var D = { text: E }, b = x.getProperty("markerColor");
                return b && (D.color = b), { _inlines: this.textTools.buildInlines(D, x).items };
              }, m.prototype.measureUnorderedList = function(e) {
                var x = this.styleStack.clone(), S = e.ul;
                e.type = e.type || "disc", e._gapSize = this.gapSizeForList(), e._minWidth = 0, e._maxWidth = 0;
                for (var P = 0, O = S.length; P < O; P++) {
                  var T = S[P] = this.measureNode(S[P]);
                  !T.ol && !T.ul && (T.listMarker = this.buildUnorderedMarker(x, e._gapSize, T.listType || e.type)), e._minWidth = Math.max(e._minWidth, S[P]._minWidth + e._gapSize.width), e._maxWidth = Math.max(e._maxWidth, S[P]._maxWidth + e._gapSize.width);
                }
                return e;
              }, m.prototype.measureOrderedList = function(e) {
                var x = this.styleStack.clone(), S = e.ol;
                e.type = e.type || "decimal", e.separator = e.separator || ".", e.reversed = e.reversed || !1, f(e.start) || (e.start = e.reversed ? S.length : 1), e._gapSize = this.gapSizeForList(), e._minWidth = 0, e._maxWidth = 0;
                for (var P = e.start, O = 0, T = S.length; O < T; O++) {
                  var A = S[O] = this.measureNode(S[O]);
                  if (!A.ol && !A.ul) {
                    var E = f(A.counter) ? A.counter : P;
                    A.listMarker = this.buildOrderedMarker(E, x, A.listType || e.type, e.separator), A.listMarker._inlines && (e._gapSize.width = Math.max(e._gapSize.width, A.listMarker._inlines[0].width));
                  }
                  e._minWidth = Math.max(e._minWidth, S[O]._minWidth), e._maxWidth = Math.max(e._maxWidth, S[O]._maxWidth), e.reversed ? P-- : P++;
                }
                e._minWidth += e._gapSize.width, e._maxWidth += e._gapSize.width;
                for (var O = 0, T = S.length; O < T; O++) {
                  var A = S[O];
                  !A.ol && !A.ul && (A.listMarker._minWidth = A.listMarker._maxWidth = e._gapSize.width);
                }
                return e;
              }, m.prototype.measureColumns = function(e) {
                var x = e.columns;
                e._gap = this.styleStack.getProperty("columnGap") || 0;
                for (var S = 0, P = x.length; S < P; S++)
                  x[S] = this.measureNode(x[S]);
                var O = a.measureMinMax(x), T = x.length > 0 ? x.length - 1 : 0;
                return e._minWidth = O.min + e._gap * T, e._maxWidth = O.max + e._gap * T, e;
              }, m.prototype.measureTable = function(e) {
                nt(e), e._layout = L(this.tableLayouts), e._offsets = N(e._layout);
                var x = [], S, P, O, T;
                for (S = 0, O = e.table.body[0].length; S < O; S++) {
                  var A = e.table.widths[S];
                  for (A._minWidth = 0, A._maxWidth = 0, P = 0, T = e.table.body.length; P < T; P++) {
                    var E = e.table.body[P], D = E[S];
                    if (D === void 0)
                      throw console.error("Malformed table row ", E, "in node ", e), "Malformed table row, a cell is undefined.";
                    D === null && (D = ""), D._span || (D = E[S] = this.styleStack.auto(D, R(this, D)), D.colSpan && D.colSpan > 1 ? (ct(E, S, D.colSpan), x.push({ col: S, span: D.colSpan, minWidth: D._minWidth, maxWidth: D._maxWidth })) : (A._minWidth = Math.max(A._minWidth, D._minWidth), A._maxWidth = Math.max(A._maxWidth, D._maxWidth))), D.rowSpan && D.rowSpan > 1 && J(e.table, P, S, D.rowSpan);
                  }
                }
                M();
                var b = a.measureMinMax(e.table.widths);
                return e._minWidth = b.min + e._offsets.total, e._maxWidth = b.max + e._offsets.total, e;
                function R(yt, bt) {
                  return function() {
                    return u(bt) && (bt.fillColor = yt.styleStack.getProperty("fillColor"), bt.fillOpacity = yt.styleStack.getProperty("fillOpacity")), yt.measureNode(bt);
                  };
                }
                function L(yt) {
                  var bt = e.layout;
                  o(bt) && (bt = yt[bt]);
                  var Tt = {
                    hLineWidth: function(It, Lt) {
                      return 1;
                    },
                    vLineWidth: function(It, Lt) {
                      return 1;
                    },
                    hLineColor: function(It, Lt) {
                      return "black";
                    },
                    vLineColor: function(It, Lt) {
                      return "black";
                    },
                    hLineStyle: function(It, Lt) {
                      return null;
                    },
                    vLineStyle: function(It, Lt) {
                      return null;
                    },
                    paddingLeft: function(It, Lt) {
                      return 4;
                    },
                    paddingRight: function(It, Lt) {
                      return 4;
                    },
                    paddingTop: function(It, Lt) {
                      return 2;
                    },
                    paddingBottom: function(It, Lt) {
                      return 2;
                    },
                    fillColor: function(It, Lt) {
                      return null;
                    },
                    fillOpacity: function(It, Lt) {
                      return 1;
                    },
                    defaultBorder: !0
                  };
                  return p(Tt, bt);
                }
                function N(yt) {
                  for (var bt = [], Tt = 0, It = 0, Lt = 0, zt = e.table.widths.length; Lt < zt; Lt++) {
                    var Q = It + yt.vLineWidth(Lt, e) + yt.paddingLeft(Lt, e);
                    bt.push(Q), Tt += Q, It = yt.paddingRight(Lt, e);
                  }
                  return Tt += It + yt.vLineWidth(e.table.widths.length, e), {
                    total: Tt,
                    offsets: bt
                  };
                }
                function M() {
                  for (var yt, bt, Tt = 0, It = x.length; Tt < It; Tt++) {
                    var Lt = x[Tt], zt = K(Lt.col, Lt.span, e._offsets), Q = Lt.minWidth - zt.minWidth, gt = Lt.maxWidth - zt.maxWidth;
                    if (Q > 0)
                      for (yt = Q / Lt.span, bt = 0; bt < Lt.span; bt++)
                        e.table.widths[Lt.col + bt]._minWidth += yt;
                    if (gt > 0)
                      for (yt = gt / Lt.span, bt = 0; bt < Lt.span; bt++)
                        e.table.widths[Lt.col + bt]._maxWidth += yt;
                  }
                }
                function K(yt, bt, Tt) {
                  for (var It = { minWidth: 0, maxWidth: 0 }, Lt = 0; Lt < bt; Lt++)
                    It.minWidth += e.table.widths[yt + Lt]._minWidth + (Lt ? Tt.offsets[yt + Lt] : 0), It.maxWidth += e.table.widths[yt + Lt]._maxWidth + (Lt ? Tt.offsets[yt + Lt] : 0);
                  return It;
                }
                function ct(yt, bt, Tt) {
                  for (var It = 1; It < Tt; It++)
                    yt[bt + It] = {
                      _span: !0,
                      _minWidth: 0,
                      _maxWidth: 0,
                      rowSpan: yt[bt].rowSpan
                    };
                }
                function J(yt, bt, Tt, It) {
                  for (var Lt = 1; Lt < It; Lt++)
                    yt.body[bt + Lt][Tt] = {
                      _span: !0,
                      _minWidth: 0,
                      _maxWidth: 0,
                      fillColor: yt.body[bt][Tt].fillColor,
                      fillOpacity: yt.body[bt][Tt].fillOpacity
                    };
                }
                function nt(yt) {
                  if (yt.table.widths || (yt.table.widths = "auto"), o(yt.table.widths))
                    for (yt.table.widths = [yt.table.widths]; yt.table.widths.length < yt.table.body[0].length; )
                      yt.table.widths.push(yt.table.widths[yt.table.widths.length - 1]);
                  for (var bt = 0, Tt = yt.table.widths.length; bt < Tt; bt++) {
                    var It = yt.table.widths[bt];
                    (f(It) || o(It)) && (yt.table.widths[bt] = { width: It });
                  }
                }
              }, m.prototype.measureCanvas = function(e) {
                for (var x = 0, S = 0, P = 0, O = e.canvas.length; P < O; P++) {
                  var T = e.canvas[P];
                  switch (T.type) {
                    case "ellipse":
                      x = Math.max(x, T.x + T.r1), S = Math.max(S, T.y + T.r2);
                      break;
                    case "rect":
                      x = Math.max(x, T.x + T.w), S = Math.max(S, T.y + T.h);
                      break;
                    case "line":
                      x = Math.max(x, T.x1, T.x2), S = Math.max(S, T.y1, T.y2);
                      break;
                    case "polyline":
                      for (var A = 0, E = T.points.length; A < E; A++)
                        x = Math.max(x, T.points[A].x), S = Math.max(S, T.points[A].y);
                      break;
                  }
                }
                return e._minWidth = e._maxWidth = x, e._minHeight = e._maxHeight = S, e._alignment = this.styleStack.getProperty("alignment"), e;
              }, m.prototype.measureQr = function(e) {
                return e = y.measure(e), e._alignment = this.styleStack.getProperty("alignment"), e;
              }, l.exports = m;
            }
          ),
          /***/
          78702: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer, r = t(16920).isString, a = t(16920).isNumber, o = t(16920).isBoolean, f = t(16920).isArray, u = t(16920).isUndefined, h = t(16920).fontStringify;
              function d() {
              }
              d.prototype.preprocessDocument = function(i) {
                return this.parentNode = null, this.tocs = [], this.nodeReferences = [], this.preprocessNode(i);
              }, d.prototype.preprocessNode = function(i) {
                if (f(i) ? i = { stack: i } : r(i) ? i = { text: i } : a(i) || o(i) ? i = { text: i.toString() } : i == null ? i = { text: "" } : Object.keys(i).length === 0 ? i = { text: "" } : "text" in i && (i.text === void 0 || i.text === null) && (i.text = ""), i.columns)
                  return this.preprocessColumns(i);
                if (i.stack)
                  return this.preprocessVerticalContainer(i);
                if (i.ul)
                  return this.preprocessList(i);
                if (i.ol)
                  return this.preprocessList(i);
                if (i.table)
                  return this.preprocessTable(i);
                if (i.text !== void 0)
                  return this.preprocessText(i);
                if (i.toc)
                  return this.preprocessToc(i);
                if (i.image)
                  return this.preprocessImage(i);
                if (i.svg)
                  return this.preprocessSVG(i);
                if (i.canvas)
                  return this.preprocessCanvas(i);
                if (i.qr)
                  return this.preprocessQr(i);
                if (i.pageReference || i.textReference)
                  return this.preprocessText(i);
                throw "Unrecognized document structure: " + JSON.stringify(i, h);
              }, d.prototype.preprocessColumns = function(i) {
                for (var p = i.columns, y = 0, m = p.length; y < m; y++)
                  p[y] = this.preprocessNode(p[y]);
                return i;
              }, d.prototype.preprocessVerticalContainer = function(i) {
                for (var p = i.stack, y = 0, m = p.length; y < m; y++)
                  p[y] = this.preprocessNode(p[y]);
                return i;
              }, d.prototype.preprocessList = function(i) {
                for (var p = i.ul || i.ol, y = 0, m = p.length; y < m; y++)
                  p[y] = this.preprocessNode(p[y]);
                return i;
              }, d.prototype.preprocessTable = function(i) {
                var p, y, m, e;
                for (p = 0, m = i.table.body[0].length; p < m; p++)
                  for (y = 0, e = i.table.body.length; y < e; y++) {
                    var x = i.table.body[y], S = x[p];
                    S !== void 0 && (S === null && (S = ""), S._span || (x[p] = this.preprocessNode(S)));
                  }
                return i;
              }, d.prototype.preprocessText = function(i) {
                if (i.tocItem) {
                  f(i.tocItem) || (i.tocItem = [i.tocItem]);
                  for (var p = 0, y = i.tocItem.length; p < y; p++) {
                    r(i.tocItem[p]) || (i.tocItem[p] = "_default_");
                    var m = i.tocItem[p];
                    this.tocs[m] || (this.tocs[m] = { toc: { _items: [], _pseudo: !0 } }), i.id || (i.id = "toc-" + m + "-" + this.tocs[m].toc._items.length);
                    var e = {
                      _nodeRef: this._getNodeForNodeRef(i),
                      _textNodeRef: i
                    };
                    this.tocs[m].toc._items.push(e);
                  }
                }
                if (i.id)
                  if (this.nodeReferences[i.id]) {
                    if (!this.nodeReferences[i.id]._pseudo)
                      throw "Node id '" + i.id + "' already exists";
                    this.nodeReferences[i.id]._nodeRef = this._getNodeForNodeRef(i), this.nodeReferences[i.id]._textNodeRef = i, this.nodeReferences[i.id]._pseudo = !1;
                  } else
                    this.nodeReferences[i.id] = {
                      _nodeRef: this._getNodeForNodeRef(i),
                      _textNodeRef: i
                    };
                if (i.pageReference && (this.nodeReferences[i.pageReference] || (this.nodeReferences[i.pageReference] = {
                  _nodeRef: {},
                  _textNodeRef: {},
                  _pseudo: !0
                }), i.text = "00000", i.linkToDestination = i.pageReference, i._pageRef = this.nodeReferences[i.pageReference]), i.textReference && (this.nodeReferences[i.textReference] || (this.nodeReferences[i.textReference] = { _nodeRef: {}, _pseudo: !0 }), i.text = "", i.linkToDestination = i.textReference, i._textRef = this.nodeReferences[i.textReference]), i.text && i.text.text)
                  i.text = [this.preprocessNode(i.text)];
                else if (f(i.text)) {
                  var x = !1;
                  this.parentNode === null && (this.parentNode = i, x = !0);
                  for (var p = 0, y = i.text.length; p < y; p++)
                    i.text[p] = this.preprocessNode(i.text[p]);
                  x && (this.parentNode = null);
                }
                return i;
              }, d.prototype.preprocessToc = function(i) {
                if (i.toc.id || (i.toc.id = "_default_"), i.toc.title = i.toc.title ? this.preprocessNode(i.toc.title) : null, i.toc._items = [], this.tocs[i.toc.id]) {
                  if (!this.tocs[i.toc.id].toc._pseudo)
                    throw "TOC '" + i.toc.id + "' already exists";
                  i.toc._items = this.tocs[i.toc.id].toc._items;
                }
                return this.tocs[i.toc.id] = i, i;
              }, d.prototype.preprocessImage = function(i) {
                return !u(i.image.type) && !u(i.image.data) && i.image.type === "Buffer" && f(i.image.data) && (i.image = s.from(i.image.data)), i;
              }, d.prototype.preprocessSVG = function(i) {
                return i;
              }, d.prototype.preprocessCanvas = function(i) {
                return i;
              }, d.prototype.preprocessQr = function(i) {
                return i;
              }, d.prototype._getNodeForNodeRef = function(i) {
                return this.parentNode ? this.parentNode : i;
              }, l.exports = d;
            }
          ),
          /***/
          79833: (
            /***/
            function(l, c, t) {
              var s = t(73602), r = t(16920).isString;
              function a(h, d) {
                this.pages = [], this.pageMargins = d, this.x = d.left, this.availableWidth = h.width - d.left - d.right, this.availableHeight = 0, this.page = -1, this.snapshots = [], this.endingCell = null, this.tracker = new s(), this.backgroundLength = [], this.addPage(h);
              }
              a.prototype.beginColumnGroup = function() {
                this.snapshots.push({
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  page: this.page,
                  bottomMost: {
                    x: this.x,
                    y: this.y,
                    availableHeight: this.availableHeight,
                    availableWidth: this.availableWidth,
                    page: this.page
                  },
                  endingCell: this.endingCell,
                  lastColumnWidth: this.lastColumnWidth
                }), this.lastColumnWidth = 0;
              }, a.prototype.beginColumn = function(h, d, i) {
                var p = this.snapshots[this.snapshots.length - 1];
                this.calculateBottomMost(p), this.endingCell = i, this.page = p.page, this.x = this.x + this.lastColumnWidth + (d || 0), this.y = p.y, this.availableWidth = h, this.availableHeight = p.availableHeight, this.lastColumnWidth = h;
              }, a.prototype.calculateBottomMost = function(h) {
                this.endingCell ? (this.saveContextInEndingCell(this.endingCell), this.endingCell = null) : h.bottomMost = u(this, h.bottomMost);
              }, a.prototype.markEnding = function(h) {
                this.page = h._columnEndingContext.page, this.x = h._columnEndingContext.x, this.y = h._columnEndingContext.y, this.availableWidth = h._columnEndingContext.availableWidth, this.availableHeight = h._columnEndingContext.availableHeight, this.lastColumnWidth = h._columnEndingContext.lastColumnWidth;
              }, a.prototype.saveContextInEndingCell = function(h) {
                h._columnEndingContext = {
                  page: this.page,
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  lastColumnWidth: this.lastColumnWidth
                };
              }, a.prototype.completeColumnGroup = function(h) {
                var d = this.snapshots.pop();
                this.calculateBottomMost(d), this.endingCell = null, this.x = d.x;
                var i = d.bottomMost.y;
                h && (d.page === d.bottomMost.page ? d.y + h > i && (i = d.y + h) : i += h), this.y = i, this.page = d.bottomMost.page, this.availableWidth = d.availableWidth, this.availableHeight = d.bottomMost.availableHeight, h && (this.availableHeight -= i - d.bottomMost.y), this.lastColumnWidth = d.lastColumnWidth;
              }, a.prototype.addMargin = function(h, d) {
                this.x += h, this.availableWidth -= h + (d || 0);
              }, a.prototype.moveDown = function(h) {
                return this.y += h, this.availableHeight -= h, this.availableHeight > 0;
              }, a.prototype.initializePage = function() {
                this.y = this.pageMargins.top, this.availableHeight = this.getCurrentPage().pageSize.height - this.pageMargins.top - this.pageMargins.bottom, this.pageSnapshot().availableWidth = this.getCurrentPage().pageSize.width - this.pageMargins.left - this.pageMargins.right;
              }, a.prototype.pageSnapshot = function() {
                return this.snapshots[0] ? this.snapshots[0] : this;
              }, a.prototype.moveTo = function(h, d) {
                h != null && (this.x = h, this.availableWidth = this.getCurrentPage().pageSize.width - this.x - this.pageMargins.right), d != null && (this.y = d, this.availableHeight = this.getCurrentPage().pageSize.height - this.y - this.pageMargins.bottom);
              }, a.prototype.moveToRelative = function(h, d) {
                h != null && (this.x = this.x + h), d != null && (this.y = this.y + d);
              }, a.prototype.beginDetachedBlock = function() {
                this.snapshots.push({
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  page: this.page,
                  endingCell: this.endingCell,
                  lastColumnWidth: this.lastColumnWidth
                });
              }, a.prototype.endDetachedBlock = function() {
                var h = this.snapshots.pop();
                this.x = h.x, this.y = h.y, this.availableWidth = h.availableWidth, this.availableHeight = h.availableHeight, this.page = h.page, this.endingCell = h.endingCell, this.lastColumnWidth = h.lastColumnWidth;
              };
              function o(h, d) {
                return h === void 0 ? d : r(h) && h.toLowerCase() === "landscape" ? "landscape" : "portrait";
              }
              var f = function(h, d) {
                return d = o(d, h.pageSize.orientation), d !== h.pageSize.orientation ? {
                  orientation: d,
                  width: h.pageSize.height,
                  height: h.pageSize.width
                } : {
                  orientation: h.pageSize.orientation,
                  width: h.pageSize.width,
                  height: h.pageSize.height
                };
              };
              a.prototype.moveToNextPage = function(h) {
                var d = this.page + 1, i = this.page, p = this.y, y = d >= this.pages.length;
                if (y) {
                  var m = this.availableWidth, e = this.getCurrentPage().pageSize.orientation, x = f(this.getCurrentPage(), h);
                  this.addPage(x), e === x.orientation && (this.availableWidth = m);
                } else
                  this.page = d, this.initializePage();
                return {
                  newPageCreated: y,
                  prevPage: i,
                  prevY: p,
                  y: this.y
                };
              }, a.prototype.addPage = function(h) {
                var d = { items: [], pageSize: h };
                return this.pages.push(d), this.backgroundLength.push(0), this.page = this.pages.length - 1, this.initializePage(), this.tracker.emit("pageAdded"), d;
              }, a.prototype.getCurrentPage = function() {
                return this.page < 0 || this.page >= this.pages.length ? null : this.pages[this.page];
              }, a.prototype.getCurrentPosition = function() {
                var h = this.getCurrentPage().pageSize, d = h.height - this.pageMargins.top - this.pageMargins.bottom, i = h.width - this.pageMargins.left - this.pageMargins.right;
                return {
                  pageNumber: this.page + 1,
                  pageOrientation: h.orientation,
                  pageInnerHeight: d,
                  pageInnerWidth: i,
                  left: this.x,
                  top: this.y,
                  verticalRatio: (this.y - this.pageMargins.top) / d,
                  horizontalRatio: (this.x - this.pageMargins.left) / i
                };
              };
              function u(h, d) {
                var i;
                return h.page > d.page ? i = h : d.page > h.page ? i = d : i = h.y > d.y ? h : d, {
                  page: i.page,
                  x: i.x,
                  y: i.y,
                  availableHeight: i.availableHeight,
                  availableWidth: i.availableWidth
                };
              }
              l.exports = a;
            }
          ),
          /***/
          84786: (
            /***/
            function(l, c, t) {
              var s = t(79547), r = t(16920).isNumber, a = t(16920).pack, o = t(16920).offsetVector, f = t(79833);
              function u(i, p) {
                this.context = i, this.contextStack = [], this.tracker = p;
              }
              function h(i, p, y) {
                y == null || y < 0 || y > i.items.length ? i.items.push(p) : i.items.splice(y, 0, p);
              }
              u.prototype.addLine = function(i, p, y) {
                var m = i.getHeight(), e = this.context, x = e.getCurrentPage(), S = this.getCurrentPositionOnPage();
                return e.availableHeight < m || !x ? !1 : (i.x = e.x + (i.x || 0), i.y = e.y + (i.y || 0), this.alignLine(i), h(x, {
                  type: "line",
                  item: i
                }, y), this.tracker.emit("lineAdded", i), p || e.moveDown(m), S);
              }, u.prototype.alignLine = function(i) {
                var p = this.context.availableWidth, y = i.getWidth(), m = i.inlines && i.inlines.length > 0 && i.inlines[0].alignment, e = 0;
                switch (m) {
                  case "right":
                    e = p - y;
                    break;
                  case "center":
                    e = (p - y) / 2;
                    break;
                }
                if (e && (i.x = (i.x || 0) + e), m === "justify" && !i.newLineForced && !i.lastLineInParagraph && i.inlines.length > 1)
                  for (var x = (p - y) / (i.inlines.length - 1), S = 1, P = i.inlines.length; S < P; S++)
                    e = S * x, i.inlines[S].x += e, i.inlines[S].justifyShift = x;
              }, u.prototype.addImage = function(i, p, y) {
                var m = this.context, e = m.getCurrentPage(), x = this.getCurrentPositionOnPage();
                return !e || i.absolutePosition === void 0 && m.availableHeight < i._height && e.items.length > 0 ? !1 : (i._x === void 0 && (i._x = i.x || 0), i.x = m.x + i._x, i.y = m.y, this.alignImage(i), h(e, {
                  type: y || "image",
                  item: i
                }, p), m.moveDown(i._height), x);
              }, u.prototype.addSVG = function(i, p) {
                return this.addImage(i, p, "svg");
              }, u.prototype.addQr = function(i, p) {
                var y = this.context, m = y.getCurrentPage(), e = this.getCurrentPositionOnPage();
                if (!m || i.absolutePosition === void 0 && y.availableHeight < i._height)
                  return !1;
                i._x === void 0 && (i._x = i.x || 0), i.x = y.x + i._x, i.y = y.y, this.alignImage(i);
                for (var x = 0, S = i._canvas.length; x < S; x++) {
                  var P = i._canvas[x];
                  P.x += i.x, P.y += i.y, this.addVector(P, !0, !0, p);
                }
                return y.moveDown(i._height), e;
              }, u.prototype.alignImage = function(i) {
                var p = this.context.availableWidth, y = i._minWidth, m = 0;
                switch (i._alignment) {
                  case "right":
                    m = p - y;
                    break;
                  case "center":
                    m = (p - y) / 2;
                    break;
                }
                m && (i.x = (i.x || 0) + m);
              }, u.prototype.alignCanvas = function(i) {
                var p = this.context.availableWidth, y = i._minWidth, m = 0;
                switch (i._alignment) {
                  case "right":
                    m = p - y;
                    break;
                  case "center":
                    m = (p - y) / 2;
                    break;
                }
                m && i.canvas.forEach(function(e) {
                  o(e, m, 0);
                });
              }, u.prototype.addVector = function(i, p, y, m) {
                var e = this.context, x = e.getCurrentPage(), S = this.getCurrentPositionOnPage();
                if (x)
                  return o(i, p ? 0 : e.x, y ? 0 : e.y), h(x, {
                    type: "vector",
                    item: i
                  }, m), S;
              }, u.prototype.beginClip = function(i, p) {
                var y = this.context, m = y.getCurrentPage();
                return m.items.push({
                  type: "beginClip",
                  item: { x: y.x, y: y.y, width: i, height: p }
                }), !0;
              }, u.prototype.endClip = function() {
                var i = this.context, p = i.getCurrentPage();
                return p.items.push({
                  type: "endClip"
                }), !0;
              };
              function d(i) {
                var p = new s(i.maxWidth);
                for (var y in i)
                  i.hasOwnProperty(y) && (p[y] = i[y]);
                return p;
              }
              u.prototype.addFragment = function(i, p, y, m) {
                var e = this.context, x = e.getCurrentPage();
                return !p && i.height > e.availableHeight ? !1 : (i.items.forEach(function(S) {
                  switch (S.type) {
                    case "line":
                      var P = d(S.item);
                      P._node && (P._node.positions[0].pageNumber = e.page + 1), P.x = (P.x || 0) + (p ? i.xOffset || 0 : e.x), P.y = (P.y || 0) + (y ? i.yOffset || 0 : e.y), x.items.push({
                        type: "line",
                        item: P
                      });
                      break;
                    case "vector":
                      var O = a(S.item);
                      o(O, p ? i.xOffset || 0 : e.x, y ? i.yOffset || 0 : e.y), x.items.push({
                        type: "vector",
                        item: O
                      });
                      break;
                    case "image":
                    case "svg":
                      var T = a(S.item);
                      T.x = (T.x || 0) + (p ? i.xOffset || 0 : e.x), T.y = (T.y || 0) + (y ? i.yOffset || 0 : e.y), x.items.push({
                        type: S.type,
                        item: T
                      });
                      break;
                  }
                }), m || e.moveDown(i.height), !0);
              }, u.prototype.pushContext = function(i, p) {
                i === void 0 && (p = this.context.getCurrentPage().height - this.context.pageMargins.top - this.context.pageMargins.bottom, i = this.context.availableWidth), r(i) && (i = new f({ width: i, height: p }, { left: 0, right: 0, top: 0, bottom: 0 })), this.contextStack.push(this.context), this.context = i;
              }, u.prototype.popContext = function() {
                this.context = this.contextStack.pop();
              }, u.prototype.getCurrentPositionOnPage = function() {
                return (this.contextStack[0] || this.context).getCurrentPosition();
              }, l.exports = u;
            }
          ),
          /***/
          98875: (
            /***/
            function(l, c, t) {
              var s = t(16920).isArray;
              function r(o, f) {
                var u = "normal";
                return o && f ? u = "bolditalics" : o ? u = "bold" : f && (u = "italics"), u;
              }
              function a(o, f) {
                this.fonts = {}, this.pdfKitDoc = f, this.fontCache = {};
                for (var u in o)
                  if (o.hasOwnProperty(u)) {
                    var h = o[u];
                    this.fonts[u] = {
                      normal: h.normal,
                      bold: h.bold,
                      italics: h.italics,
                      bolditalics: h.bolditalics
                    };
                  }
              }
              a.prototype.getFontType = function(o, f) {
                return r(o, f);
              }, a.prototype.getFontFile = function(o, f, u) {
                var h = this.getFontType(f, u);
                return !this.fonts[o] || !this.fonts[o][h] ? null : this.fonts[o][h];
              }, a.prototype.provideFont = function(o, f, u) {
                var h = this.getFontType(f, u);
                if (this.getFontFile(o, f, u) === null)
                  throw new Error("Font '" + o + "' in style '" + h + "' is not defined in the font section of the document definition.");
                if (this.fontCache[o] = this.fontCache[o] || {}, !this.fontCache[o][h]) {
                  var d = this.fonts[o][h];
                  s(d) || (d = [d]), this.fontCache[o][h] = this.pdfKitDoc.font.apply(this.pdfKitDoc, d)._font;
                }
                return this.fontCache[o][h];
              }, l.exports = a;
            }
          ),
          /***/
          16920: (
            /***/
            function(l) {
              function c(e) {
                return typeof e == "string" || e instanceof String;
              }
              function t(e) {
                return typeof e == "number" || e instanceof Number;
              }
              function s(e) {
                return typeof e == "boolean";
              }
              function r(e) {
                return Array.isArray(e);
              }
              function a(e) {
                return typeof e == "function";
              }
              function o(e) {
                return e !== null && typeof e == "object";
              }
              function f(e) {
                return e === null;
              }
              function u(e) {
                return e === void 0;
              }
              function h() {
                for (var e = {}, x = 0, S = arguments.length; x < S; x++) {
                  var P = arguments[x];
                  if (P)
                    for (var O in P)
                      P.hasOwnProperty(O) && (e[O] = P[O]);
                }
                return e;
              }
              function d(e, x, S) {
                switch (e.type) {
                  case "ellipse":
                  case "rect":
                    e.x += x, e.y += S;
                    break;
                  case "line":
                    e.x1 += x, e.x2 += x, e.y1 += S, e.y2 += S;
                    break;
                  case "polyline":
                    for (var P = 0, O = e.points.length; P < O; P++)
                      e.points[P].x += x, e.points[P].y += S;
                    break;
                }
              }
              function i(e, x) {
                return e === "font" ? "font" : x;
              }
              function p(e) {
                if (e.id)
                  return e.id;
                if (r(e.text))
                  for (var x = 0, S = e.text.length; x < S; x++) {
                    var P = e.text[x], O = p(P);
                    if (O)
                      return O;
                  }
                return null;
              }
              function y(e) {
                return r(e) && e.length === 2;
              }
              function m(e, x) {
                return [x[e[0]], e[1]];
              }
              l.exports = {
                isString: c,
                isNumber: t,
                isBoolean: s,
                isArray: r,
                isFunction: a,
                isObject: o,
                isNull: f,
                isUndefined: u,
                pack: h,
                fontStringify: i,
                offsetVector: d,
                getNodeId: p,
                isPattern: y,
                getPattern: m
              };
            }
          ),
          /***/
          41125: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer, r = t(52773);
              function a(o, f) {
                this.pdfKitDoc = o, this.imageDictionary = f || {};
              }
              a.prototype.measureImage = function(o) {
                var f, u = this;
                if (this.pdfKitDoc._imageRegistry[o])
                  f = this.pdfKitDoc._imageRegistry[o];
                else {
                  try {
                    if (f = this.pdfKitDoc.openImage(h(o)), !f)
                      throw "No image";
                  } catch (d) {
                    throw "Invalid image: " + d.toString() + `
Images dictionary should contain dataURL entries (or local file paths in node.js)`;
                  }
                  f.embed(this.pdfKitDoc), this.pdfKitDoc._imageRegistry[o] = f;
                }
                return { width: f.width, height: f.height };
                function h(d) {
                  var i = u.imageDictionary[d];
                  if (!i)
                    return d;
                  if (r.existsSync(i))
                    return r.readFileSync(i);
                  var p = i.indexOf("base64,");
                  return p < 0 ? u.imageDictionary[d] : s.from(i.substring(p + 7), "base64");
                }
              }, l.exports = a;
            }
          ),
          /***/
          47626: (
            /***/
            function(l, c, t) {
              var s = t(73602), r = t(78702), a = t(77077), o = t(79833), f = t(52183), u = t(65354), h = t(41729), d = t(79547), i = t(16920).isString, p = t(16920).isArray, y = t(16920).isUndefined, m = t(16920).isNull, e = t(16920).pack, x = t(16920).offsetVector, S = t(16920).fontStringify, P = t(16920).getNodeId, O = t(16920).isFunction, T = t(28045), A = t(28034), E = t(16920).isNumber;
              function D(L, N) {
                N.forEach(function(M) {
                  L.push(M);
                });
              }
              function b(L, N, M, K) {
                this.pageSize = L, this.pageMargins = N, this.tracker = new s(), this.imageMeasure = M, this.svgMeasure = K, this.tableLayouts = {};
              }
              b.prototype.registerTableLayouts = function(L) {
                this.tableLayouts = e(this.tableLayouts, L);
              }, b.prototype.layoutDocument = function(L, N, M, K, ct, J, nt, yt, bt, Tt) {
                function It(Q, gt) {
                  if (!O(Tt))
                    return !1;
                  Q = Q.filter(function(V) {
                    return V.positions.length > 0;
                  }), Q.forEach(function(V) {
                    var ot = {};
                    [
                      "id",
                      "text",
                      "ul",
                      "ol",
                      "table",
                      "image",
                      "qr",
                      "canvas",
                      "svg",
                      "columns",
                      "headlineLevel",
                      "style",
                      "pageBreak",
                      "pageOrientation",
                      "width",
                      "height"
                    ].forEach(function(et) {
                      V[et] !== void 0 && (ot[et] = V[et]);
                    }), ot.startPosition = V.positions[0], ot.pageNumbers = Array.from(new Set(V.positions.map(function(et) {
                      return et.pageNumber;
                    }))), ot.pages = gt.length, ot.stack = p(V.stack), V.nodeInfo = ot;
                  });
                  for (var ht = 0; ht < Q.length; ht++) {
                    var st = Q[ht];
                    if (st.pageBreak !== "before" && !st.pageBreakCalculated) {
                      st.pageBreakCalculated = !0;
                      var xt = st.nodeInfo.pageNumbers[0], G = [], Ft = [], z = [];
                      if (Tt.length > 1)
                        for (var C = ht + 1, k = Q.length; C < k; C++)
                          Q[C].nodeInfo.pageNumbers.indexOf(xt) > -1 && G.push(Q[C].nodeInfo), Tt.length > 2 && Q[C].nodeInfo.pageNumbers.indexOf(xt + 1) > -1 && Ft.push(Q[C].nodeInfo);
                      if (Tt.length > 3)
                        for (var C = 0; C < ht; C++)
                          Q[C].nodeInfo.pageNumbers.indexOf(xt) > -1 && z.push(Q[C].nodeInfo);
                      if (Tt(st.nodeInfo, G, Ft, z))
                        return st.pageBreak = "before", !0;
                    }
                  }
                  return !1;
                }
                this.docPreprocessor = new r(), this.docMeasure = new a(N, M, K, this.imageMeasure, this.svgMeasure, this.tableLayouts, yt);
                function Lt(Q) {
                  Q.linearNodeList.forEach(function(gt) {
                    gt.resetXY();
                  });
                }
                for (var zt = this.tryLayoutDocument(L, N, M, K, ct, J, nt, yt, bt); It(zt.linearNodeList, zt.pages); )
                  Lt(zt), zt = this.tryLayoutDocument(L, N, M, K, ct, J, nt, yt, bt);
                return zt.pages;
              }, b.prototype.tryLayoutDocument = function(L, N, M, K, ct, J, nt, yt, bt, Tt) {
                this.linearNodeList = [], L = this.docPreprocessor.preprocessDocument(L), L = this.docMeasure.measureDocument(L), this.writer = new f(
                  new o(this.pageSize, this.pageMargins),
                  this.tracker
                );
                var It = this;
                return this.writer.context().tracker.startTracking("pageAdded", function() {
                  It.addBackground(ct);
                }), this.addBackground(ct), this.processNode(L), this.addHeadersAndFooters(J, nt), bt != null && this.addWatermark(bt, N, K), { pages: this.writer.context().pages, linearNodeList: this.linearNodeList };
              }, b.prototype.addBackground = function(L) {
                var N = O(L) ? L : function() {
                  return L;
                }, M = this.writer.context(), K = M.getCurrentPage().pageSize, ct = N(M.page + 1, K);
                ct && (this.writer.beginUnbreakableBlock(K.width, K.height), ct = this.docPreprocessor.preprocessDocument(ct), this.processNode(this.docMeasure.measureDocument(ct)), this.writer.commitUnbreakableBlock(0, 0), M.backgroundLength[M.page] += ct.positions.length);
              }, b.prototype.addStaticRepeatable = function(L, N) {
                this.addDynamicRepeatable(function() {
                  return JSON.parse(JSON.stringify(L));
                }, N);
              }, b.prototype.addDynamicRepeatable = function(L, N) {
                for (var M = this.writer.context().pages, K = 0, ct = M.length; K < ct; K++) {
                  this.writer.context().page = K;
                  var J = L(K + 1, ct, this.writer.context().pages[K].pageSize);
                  if (J) {
                    var nt = N(this.writer.context().getCurrentPage().pageSize, this.pageMargins);
                    this.writer.beginUnbreakableBlock(nt.width, nt.height), J = this.docPreprocessor.preprocessDocument(J), this.processNode(this.docMeasure.measureDocument(J)), this.writer.commitUnbreakableBlock(nt.x, nt.y);
                  }
                }
              }, b.prototype.addHeadersAndFooters = function(L, N) {
                var M = function(ct, J) {
                  return {
                    x: 0,
                    y: 0,
                    width: ct.width,
                    height: J.top
                  };
                }, K = function(ct, J) {
                  return {
                    x: 0,
                    y: ct.height - J.bottom,
                    width: ct.width,
                    height: J.bottom
                  };
                };
                O(L) ? this.addDynamicRepeatable(L, M) : L && this.addStaticRepeatable(L, M), O(N) ? this.addDynamicRepeatable(N, K) : N && this.addStaticRepeatable(N, K);
              }, b.prototype.addWatermark = function(L, N, M) {
                if (i(L) && (L = { text: L }), !L.text)
                  return;
                L.font = L.font || M.font || "Roboto", L.fontSize = L.fontSize || "auto", L.color = L.color || "black", L.opacity = E(L.opacity) ? L.opacity : 0.6, L.bold = L.bold || !1, L.italics = L.italics || !1, L.angle = !y(L.angle) && !m(L.angle) ? L.angle : null, L.angle === null && (L.angle = Math.atan2(this.pageSize.height, this.pageSize.width) * -180 / Math.PI), L.fontSize === "auto" && (L.fontSize = bt(this.pageSize, L, N));
                var K = {
                  text: L.text,
                  font: N.provideFont(L.font, L.bold, L.italics),
                  fontSize: L.fontSize,
                  color: L.color,
                  opacity: L.opacity,
                  angle: L.angle
                };
                K._size = yt(L, N);
                for (var ct = this.writer.context().pages, J = 0, nt = ct.length; J < nt; J++)
                  ct[J].watermark = K;
                function yt(Tt, It) {
                  var Lt = new T(It), zt = new A(null, { font: Tt.font, bold: Tt.bold, italics: Tt.italics });
                  zt.push({
                    fontSize: Tt.fontSize
                  });
                  var Q = Lt.sizeOfString(Tt.text, zt), gt = Lt.sizeOfRotatedText(Tt.text, Tt.angle, zt);
                  return { size: Q, rotatedSize: gt };
                }
                function bt(Tt, It, Lt) {
                  for (var zt = new T(Lt), Q = new A(null, { font: It.font, bold: It.bold, italics: It.italics }), gt, ht = 0, st = 1e3, xt = (ht + st) / 2; Math.abs(ht - st) > 1; )
                    Q.push({
                      fontSize: xt
                    }), gt = zt.sizeOfRotatedText(It.text, It.angle, Q), gt.width > Tt.width ? (st = xt, xt = (ht + st) / 2) : gt.width < Tt.width && (gt.height > Tt.height ? (st = xt, xt = (ht + st) / 2) : (ht = xt, xt = (ht + st) / 2)), Q.pop();
                  return xt;
                }
              };
              function R(L) {
                var N = L.x, M = L.y;
                L.positions = [], p(L.canvas) && L.canvas.forEach(function(K) {
                  var ct = K.x, J = K.y, nt = K.x1, yt = K.y1, bt = K.x2, Tt = K.y2;
                  K.resetXY = function() {
                    K.x = ct, K.y = J, K.x1 = nt, K.y1 = yt, K.x2 = bt, K.y2 = Tt;
                  };
                }), L.resetXY = function() {
                  L.x = N, L.y = M, p(L.canvas) && L.canvas.forEach(function(K) {
                    K.resetXY();
                  });
                };
              }
              b.prototype.processNode = function(L) {
                var N = this;
                this.linearNodeList.push(L), R(L), M(function() {
                  var K = L.unbreakable;
                  K && N.writer.beginUnbreakableBlock();
                  var ct = L.absolutePosition;
                  ct && (N.writer.context().beginDetachedBlock(), N.writer.context().moveTo(ct.x || 0, ct.y || 0));
                  var J = L.relativePosition;
                  if (J && (N.writer.context().beginDetachedBlock(), N.writer.context().moveToRelative(J.x || 0, J.y || 0)), L.stack)
                    N.processVerticalContainer(L);
                  else if (L.columns)
                    N.processColumns(L);
                  else if (L.ul)
                    N.processList(!1, L);
                  else if (L.ol)
                    N.processList(!0, L);
                  else if (L.table)
                    N.processTable(L);
                  else if (L.text !== void 0)
                    N.processLeaf(L);
                  else if (L.toc)
                    N.processToc(L);
                  else if (L.image)
                    N.processImage(L);
                  else if (L.svg)
                    N.processSVG(L);
                  else if (L.canvas)
                    N.processCanvas(L);
                  else if (L.qr)
                    N.processQr(L);
                  else if (!L._span)
                    throw "Unrecognized document structure: " + JSON.stringify(L, S);
                  (ct || J) && N.writer.context().endDetachedBlock(), K && N.writer.commitUnbreakableBlock();
                });
                function M(K) {
                  var ct = L._margin;
                  L.pageBreak === "before" ? N.writer.moveToNextPage(L.pageOrientation) : L.pageBreak === "beforeOdd" ? (N.writer.moveToNextPage(L.pageOrientation), (N.writer.context().page + 1) % 2 === 1 && N.writer.moveToNextPage(L.pageOrientation)) : L.pageBreak === "beforeEven" && (N.writer.moveToNextPage(L.pageOrientation), (N.writer.context().page + 1) % 2 === 0 && N.writer.moveToNextPage(L.pageOrientation)), ct && (N.writer.context().moveDown(ct[1]), N.writer.context().addMargin(ct[0], ct[2])), K(), ct && (N.writer.context().addMargin(-ct[0], -ct[2]), N.writer.context().moveDown(ct[3])), L.pageBreak === "after" ? N.writer.moveToNextPage(L.pageOrientation) : L.pageBreak === "afterOdd" ? (N.writer.moveToNextPage(L.pageOrientation), (N.writer.context().page + 1) % 2 === 1 && N.writer.moveToNextPage(L.pageOrientation)) : L.pageBreak === "afterEven" && (N.writer.moveToNextPage(L.pageOrientation), (N.writer.context().page + 1) % 2 === 0 && N.writer.moveToNextPage(L.pageOrientation));
                }
              }, b.prototype.processVerticalContainer = function(L) {
                var N = this;
                L.stack.forEach(function(M) {
                  N.processNode(M), D(L.positions, M.positions);
                });
              }, b.prototype.processColumns = function(L) {
                var N = L.columns, M = this.writer.context().availableWidth, K = J(L._gap);
                K && (M -= (K.length - 1) * L._gap), u.buildColumnWidths(N, M);
                var ct = this.processRow(N, N, K);
                D(L.positions, ct.positions);
                function J(nt) {
                  if (!nt)
                    return null;
                  var yt = [];
                  yt.push(0);
                  for (var bt = N.length - 1; bt > 0; bt--)
                    yt.push(nt);
                  return yt;
                }
              }, b.prototype.processRow = function(L, N, M, K, ct, J) {
                var nt = this, yt = [], bt = [];
                return this.tracker.auto("pageChanged", Tt, function() {
                  N = N || L, nt.writer.context().beginColumnGroup();
                  for (var zt = 0, Q = L.length; zt < Q; zt++) {
                    var gt = L[zt], ht = N[zt]._calcWidth, st = It(zt);
                    if (gt.colSpan && gt.colSpan > 1)
                      for (var xt = 1; xt < gt.colSpan; xt++)
                        ht += N[++zt]._calcWidth + M[zt];
                    nt.writer.context().beginColumn(ht, st, Lt(gt, zt)), gt._span ? gt._columnEndingContext && nt.writer.context().markEnding(gt) : (nt.processNode(gt), D(bt, gt.positions));
                  }
                  nt.writer.context().completeColumnGroup(J);
                }), { pageBreaks: yt, positions: bt };
                function Tt(zt) {
                  for (var Q, gt = 0, ht = yt.length; gt < ht; gt++) {
                    var st = yt[gt];
                    if (st.prevPage === zt.prevPage) {
                      Q = st;
                      break;
                    }
                  }
                  Q || (Q = zt, yt.push(Q)), Q.prevY = Math.max(Q.prevY, zt.prevY), Q.y = Math.min(Q.y, zt.y);
                }
                function It(zt) {
                  return M && M.length > zt ? M[zt] : 0;
                }
                function Lt(zt, Q) {
                  if (zt.rowSpan && zt.rowSpan > 1) {
                    var gt = ct + zt.rowSpan - 1;
                    if (gt >= K.length)
                      throw "Row span for column " + Q + " (with indexes starting from 0) exceeded row count";
                    return K[gt][Q];
                  }
                  return null;
                }
              }, b.prototype.processList = function(L, N) {
                var M = this, K = L ? N.ol : N.ul, ct = N._gapSize;
                this.writer.context().addMargin(ct.width);
                var J;
                this.tracker.auto("lineAdded", nt, function() {
                  K.forEach(function(yt) {
                    J = yt.listMarker, M.processNode(yt), D(N.positions, yt.positions);
                  });
                }), this.writer.context().addMargin(-ct.width);
                function nt(yt) {
                  if (J) {
                    var bt = J;
                    if (J = null, bt.canvas) {
                      var Tt = bt.canvas[0];
                      x(Tt, -bt._minWidth, 0), M.writer.addVector(Tt);
                    } else if (bt._inlines) {
                      var It = new d(M.pageSize.width);
                      It.addInline(bt._inlines[0]), It.x = -bt._minWidth, It.y = yt.getAscenderHeight() - It.getAscenderHeight(), M.writer.addLine(It, !0);
                    }
                  }
                }
              }, b.prototype.processTable = function(L) {
                var N = new h(L);
                N.beginTable(this.writer);
                for (var M = L.table.heights, K = 0, ct = L.table.body.length; K < ct; K++) {
                  N.beginRow(K, this.writer);
                  var J;
                  O(M) ? J = M(K) : p(M) ? J = M[K] : J = M, J === "auto" && (J = void 0);
                  var nt = this.processRow(L.table.body[K], L.table.widths, L._offsets.offsets, L.table.body, K, J);
                  D(L.positions, nt.positions), N.endRow(K, this.writer, nt.pageBreaks);
                }
                N.endTable(this.writer);
              }, b.prototype.processLeaf = function(L) {
                var N = this.buildNextLine(L);
                N && (L.tocItem || L.id) && (N._node = L);
                var M = N ? N.getHeight() : 0, K = L.maxHeight || -1;
                if (N) {
                  var ct = P(L);
                  ct && (N.id = ct);
                }
                if (L._tocItemRef && (N._pageNodeRef = L._tocItemRef), L._pageRef && (N._pageNodeRef = L._pageRef._nodeRef), N && N.inlines && p(N.inlines))
                  for (var J = 0, nt = N.inlines.length; J < nt; J++)
                    N.inlines[J]._tocItemRef && (N.inlines[J]._pageNodeRef = N.inlines[J]._tocItemRef), N.inlines[J]._pageRef && (N.inlines[J]._pageNodeRef = N.inlines[J]._pageRef._nodeRef);
                for (; N && (K === -1 || M < K); ) {
                  var yt = this.writer.addLine(N);
                  L.positions.push(yt), N = this.buildNextLine(L), N && (M += N.getHeight());
                }
              }, b.prototype.processToc = function(L) {
                L.toc.title && this.processNode(L.toc.title), L.toc._table && this.processNode(L.toc._table);
              }, b.prototype.buildNextLine = function(L) {
                function N(It) {
                  var Lt = It.constructor();
                  for (var zt in It)
                    Lt[zt] = It[zt];
                  return Lt;
                }
                if (!L._inlines || L._inlines.length === 0)
                  return null;
                for (var M = new d(this.writer.context().availableWidth), K = new T(null), ct = !1; L._inlines && L._inlines.length > 0 && (M.hasEnoughSpaceForInline(L._inlines[0], L._inlines.slice(1)) || ct); ) {
                  var J = !1, nt = L._inlines.shift();
                  if (ct = !1, !nt.noWrap && nt.text.length > 1 && nt.width > M.getAvailableWidth()) {
                    var yt = nt.width / nt.text.length, bt = Math.floor(M.getAvailableWidth() / yt);
                    if (bt < 1 && (bt = 1), bt < nt.text.length) {
                      var Tt = N(nt);
                      Tt.text = nt.text.substr(bt), nt.text = nt.text.substr(0, bt), Tt.width = K.widthOfString(Tt.text, Tt.font, Tt.fontSize, Tt.characterSpacing, Tt.fontFeatures), nt.width = K.widthOfString(nt.text, nt.font, nt.fontSize, nt.characterSpacing, nt.fontFeatures), L._inlines.unshift(Tt), J = !0;
                    }
                  }
                  M.addInline(nt), ct = nt.noNewLine && !J;
                }
                return M.lastLineInParagraph = L._inlines.length === 0, M;
              }, b.prototype.processImage = function(L) {
                var N = this.writer.addImage(L);
                L.positions.push(N);
              }, b.prototype.processSVG = function(L) {
                var N = this.writer.addSVG(L);
                L.positions.push(N);
              }, b.prototype.processCanvas = function(L) {
                var N = L._minHeight;
                L.absolutePosition === void 0 && this.writer.context().availableHeight < N && this.writer.moveToNextPage(), this.writer.alignCanvas(L), L.canvas.forEach(function(M) {
                  var K = this.writer.addVector(M);
                  L.positions.push(K);
                }, this), this.writer.context().moveDown(N);
              }, b.prototype.processQr = function(L) {
                var N = this.writer.addQr(L);
                L.positions.push(N);
              }, l.exports = b;
            }
          ),
          /***/
          79547: (
            /***/
            function(l) {
              function c(t) {
                this.maxWidth = t, this.leadingCut = 0, this.trailingCut = 0, this.inlineWidths = 0, this.inlines = [];
              }
              c.prototype.getAscenderHeight = function() {
                var t = 0;
                return this.inlines.forEach(function(s) {
                  t = Math.max(t, s.font.ascender / 1e3 * s.fontSize);
                }), t;
              }, c.prototype.hasEnoughSpaceForInline = function(t, s) {
                if (s = s || [], this.inlines.length === 0)
                  return !0;
                if (this.newLineForced)
                  return !1;
                var r = t.width, a = t.trailingCut || 0;
                if (t.noNewLine)
                  for (var o = 0, f = s.length; o < f; o++) {
                    var u = s[o];
                    if (r += u.width, a += u.trailingCut || 0, !u.noNewLine)
                      break;
                  }
                return this.inlineWidths + r - this.leadingCut - a <= this.maxWidth;
              }, c.prototype.addInline = function(t) {
                this.inlines.length === 0 && (this.leadingCut = t.leadingCut || 0), this.trailingCut = t.trailingCut || 0, t.x = this.inlineWidths - this.leadingCut, this.inlines.push(t), this.inlineWidths += t.width, t.lineEnd && (this.newLineForced = !0);
              }, c.prototype.getWidth = function() {
                return this.inlineWidths - this.leadingCut - this.trailingCut;
              }, c.prototype.getAvailableWidth = function() {
                return this.maxWidth - this.getWidth();
              }, c.prototype.getHeight = function() {
                var t = 0;
                return this.inlines.forEach(function(s) {
                  t = Math.max(t, s.height || 0);
                }), t;
              }, l.exports = c;
            }
          ),
          /***/
          52183: (
            /***/
            function(l, c, t) {
              var s = t(16920).isUndefined, r = t(84786);
              function a(f, u) {
                this.transactionLevel = 0, this.repeatables = [], this.tracker = u, this.writer = new r(f, u);
              }
              function o(f, u) {
                var h = u(f);
                return h || (f.moveToNextPage(), h = u(f)), h;
              }
              a.prototype.addLine = function(f, u, h) {
                return o(this, function(d) {
                  return d.writer.addLine(f, u, h);
                });
              }, a.prototype.addImage = function(f, u) {
                return o(this, function(h) {
                  return h.writer.addImage(f, u);
                });
              }, a.prototype.addSVG = function(f, u) {
                return o(this, function(h) {
                  return h.writer.addSVG(f, u);
                });
              }, a.prototype.addQr = function(f, u) {
                return o(this, function(h) {
                  return h.writer.addQr(f, u);
                });
              }, a.prototype.addVector = function(f, u, h, d) {
                return this.writer.addVector(f, u, h, d);
              }, a.prototype.beginClip = function(f, u) {
                return this.writer.beginClip(f, u);
              }, a.prototype.endClip = function() {
                return this.writer.endClip();
              }, a.prototype.alignCanvas = function(f) {
                this.writer.alignCanvas(f);
              }, a.prototype.addFragment = function(f, u, h, d) {
                this.writer.addFragment(f, u, h, d) || (this.moveToNextPage(), this.writer.addFragment(f, u, h, d));
              }, a.prototype.moveToNextPage = function(f) {
                var u = this.writer.context.moveToNextPage(f);
                this.repeatables.forEach(function(h) {
                  s(h.insertedOnPages[this.writer.context.page]) ? (h.insertedOnPages[this.writer.context.page] = !0, this.writer.addFragment(h, !0)) : this.writer.context.moveDown(h.height);
                }, this), this.writer.tracker.emit("pageChanged", {
                  prevPage: u.prevPage,
                  prevY: u.prevY,
                  y: this.writer.context.y
                });
              }, a.prototype.beginUnbreakableBlock = function(f, u) {
                this.transactionLevel++ === 0 && (this.originalX = this.writer.context.x, this.writer.pushContext(f, u));
              }, a.prototype.commitUnbreakableBlock = function(f, u) {
                if (--this.transactionLevel === 0) {
                  var h = this.writer.context;
                  this.writer.popContext();
                  var d = h.pages.length;
                  if (d > 0) {
                    var i = h.pages[0];
                    if (i.xOffset = f, i.yOffset = u, d > 1)
                      if (f !== void 0 || u !== void 0)
                        i.height = h.getCurrentPage().pageSize.height - h.pageMargins.top - h.pageMargins.bottom;
                      else {
                        i.height = this.writer.context.getCurrentPage().pageSize.height - this.writer.context.pageMargins.top - this.writer.context.pageMargins.bottom;
                        for (var p = 0, y = this.repeatables.length; p < y; p++)
                          i.height -= this.repeatables[p].height;
                      }
                    else
                      i.height = h.y;
                    f !== void 0 || u !== void 0 ? this.writer.addFragment(i, !0, !0, !0) : this.addFragment(i);
                  }
                }
              }, a.prototype.currentBlockToRepeatable = function() {
                var f = this.writer.context, u = { items: [] };
                return f.pages[0].items.forEach(function(h) {
                  u.items.push(h);
                }), u.xOffset = this.originalX, u.height = f.y, u.insertedOnPages = [], u;
              }, a.prototype.pushToRepeatables = function(f) {
                this.repeatables.push(f);
              }, a.prototype.popFromRepeatables = function() {
                this.repeatables.pop();
              }, a.prototype.context = function() {
                return this.writer.context;
              }, l.exports = a;
            }
          ),
          /***/
          85822: (
            /***/
            function(l, c, t) {
              function s(f) {
                return f && typeof f == "object" && "default" in f ? f.default : f;
              }
              var r = s(t(83036));
              function a() {
                return r;
              }
              function o(f) {
                return f = f || {}, new r(f);
              }
              l.exports = {
                getEngineInstance: a,
                createPdfDocument: o
              };
            }
          ),
          /***/
          56498: (
            /***/
            function(l, c, t) {
              var s = t(85822), r = t(98875), a = t(47626), o = t(58050), f = t(41125), u = t(48730), h = t(4986), d = t(28045), i = t(16920).isFunction, p = t(16920).isString, y = t(16920).isNumber, m = t(16920).isBoolean, e = t(16920).isArray, x = t(16920).isUndefined, S = t(16920).isPattern, P = t(16920).getPattern, O = t(31589), T = function(Q, gt, ht) {
                for (var st = 0; st < gt.length; st++) {
                  var xt = gt[st].toLowerCase();
                  for (var G in Q)
                    if (G.toLowerCase() === xt)
                      return G;
                }
                return ht;
              };
              function A(Q) {
                this.fontDescriptors = Q;
              }
              A.prototype.createPdfKitDocument = function(Q, gt) {
                gt = gt || {}, Q.version = Q.version || "1.3", Q.compress = m(Q.compress) ? Q.compress : !0, Q.images = Q.images || {}, Q.pageMargins = Q.pageMargins !== void 0 && Q.pageMargins !== null ? Q.pageMargins : 40;
                var ht = b(Q.pageSize, Q.pageOrientation), st = {
                  size: [ht.width, ht.height],
                  pdfVersion: Q.version,
                  compress: Q.compress,
                  userPassword: Q.userPassword,
                  ownerPassword: Q.ownerPassword,
                  permissions: Q.permissions,
                  lang: Q.language,
                  fontLayoutCache: m(gt.fontLayoutCache) ? gt.fontLayoutCache : !0,
                  bufferPages: gt.bufferPages || !1,
                  autoFirstPage: !1,
                  info: E(Q),
                  font: null
                };
                this.pdfKitDoc = s.createPdfDocument(st), this.fontProvider = new r(this.fontDescriptors, this.pdfKitDoc);
                var xt = new a(ht, R(Q.pageMargins), new f(this.pdfKitDoc, Q.images), new u());
                L(xt), gt.tableLayouts && xt.registerTableLayouts(gt.tableLayouts);
                var G = xt.layoutDocument(Q.content, this.fontProvider, Q.styles || {}, Q.defaultStyle || {
                  fontSize: 12,
                  font: "Roboto"
                }, Q.background, Q.header, Q.footer, Q.images, Q.watermark, Q.pageBreakBefore), Ft = Q.maxPagesNumber || -1;
                if (y(Ft) && Ft > -1 && (G = G.slice(0, Ft)), ht.height === 1 / 0) {
                  var z = D(G, Q.pageMargins);
                  this.pdfKitDoc.options.size = [ht.width, z];
                }
                var C = zt(Q.patterns || {}, this.pdfKitDoc);
                if (K(G, this.fontProvider, this.pdfKitDoc, C, gt.progressCallback), gt.autoPrint) {
                  var k = this.pdfKitDoc.ref({
                    Type: "Action",
                    S: "Named",
                    N: "Print"
                  });
                  this.pdfKitDoc._root.data.OpenAction = k, k.end();
                }
                return this.pdfKitDoc;
              };
              function E(Q) {
                function gt(G) {
                  var Ft = [
                    "Title",
                    "Author",
                    "Subject",
                    "Keywords",
                    "Creator",
                    "Producer",
                    "CreationDate",
                    "ModDate",
                    "Trapped"
                  ], z = G.charAt(0).toUpperCase() + G.slice(1);
                  return Ft.indexOf(z) !== -1 ? z : G.replace(/\s+/g, "");
                }
                var ht = {
                  Producer: "pdfmake",
                  Creator: "pdfmake"
                };
                if (Q.info)
                  for (var st in Q.info) {
                    var xt = Q.info[st];
                    xt && (st = gt(st), ht[st] = xt);
                  }
                return ht;
              }
              function D(Q, gt) {
                function ht(Ft) {
                  return i(Ft.item.getHeight) ? Ft.item.getHeight() : Ft.item._height ? Ft.item._height : Ft.type === "vector" ? typeof Ft.item.y1 != "undefined" ? Ft.item.y1 > Ft.item.y2 ? Ft.item.y1 : Ft.item.y2 : Ft.item.h : 0;
                }
                function st(Ft) {
                  var z = Ft.item.y || 0, C = ht(Ft);
                  return z + C;
                }
                var xt = R(gt || 40), G = xt.top;
                return Q.forEach(function(Ft) {
                  Ft.items.forEach(function(z) {
                    var C = st(z);
                    C > G && (G = C);
                  });
                }), G += xt.bottom, G;
              }
              function b(Q, gt) {
                function ht(xt) {
                  return p(xt) ? (xt = xt.toLowerCase(), xt === "portrait" && st.width > st.height || xt === "landscape" && st.width < st.height) : !1;
                }
                Q && Q.height === "auto" && (Q.height = 1 / 0);
                var st = N(Q || "A4");
                return ht(gt) && (st = { width: st.height, height: st.width }), st.orientation = st.width > st.height ? "landscape" : "portrait", st;
              }
              function R(Q) {
                if (y(Q))
                  Q = { left: Q, right: Q, top: Q, bottom: Q };
                else if (e(Q))
                  if (Q.length === 2)
                    Q = { left: Q[0], top: Q[1], right: Q[0], bottom: Q[1] };
                  else if (Q.length === 4)
                    Q = { left: Q[0], top: Q[1], right: Q[2], bottom: Q[3] };
                  else
                    throw "Invalid pageMargins definition";
                return Q;
              }
              function L(Q) {
                Q.registerTableLayouts({
                  noBorders: {
                    hLineWidth: function(gt) {
                      return 0;
                    },
                    vLineWidth: function(gt) {
                      return 0;
                    },
                    paddingLeft: function(gt) {
                      return gt && 4 || 0;
                    },
                    paddingRight: function(gt, ht) {
                      return gt < ht.table.widths.length - 1 ? 4 : 0;
                    }
                  },
                  headerLineOnly: {
                    hLineWidth: function(gt, ht) {
                      return gt === 0 || gt === ht.table.body.length ? 0 : gt === ht.table.headerRows ? 2 : 0;
                    },
                    vLineWidth: function(gt) {
                      return 0;
                    },
                    paddingLeft: function(gt) {
                      return gt === 0 ? 0 : 8;
                    },
                    paddingRight: function(gt, ht) {
                      return gt === ht.table.widths.length - 1 ? 0 : 8;
                    }
                  },
                  lightHorizontalLines: {
                    hLineWidth: function(gt, ht) {
                      return gt === 0 || gt === ht.table.body.length ? 0 : gt === ht.table.headerRows ? 2 : 1;
                    },
                    vLineWidth: function(gt) {
                      return 0;
                    },
                    hLineColor: function(gt) {
                      return gt === 1 ? "black" : "#aaa";
                    },
                    paddingLeft: function(gt) {
                      return gt === 0 ? 0 : 8;
                    },
                    paddingRight: function(gt, ht) {
                      return gt === ht.table.widths.length - 1 ? 0 : 8;
                    }
                  }
                });
              }
              function N(Q) {
                if (p(Q)) {
                  var gt = o[Q.toUpperCase()];
                  if (!gt)
                    throw "Page size " + Q + " not recognized";
                  return { width: gt[0], height: gt[1] };
                }
                return Q;
              }
              function M(Q, gt) {
                var ht = gt.options.size[0] > gt.options.size[1] ? "landscape" : "portrait";
                if (Q.pageSize.orientation !== ht) {
                  var st = gt.options.size[0], xt = gt.options.size[1];
                  gt.options.size = [xt, st];
                }
              }
              function K(Q, gt, ht, st, xt) {
                ht._pdfMakePages = Q, ht.addPage();
                var G = 0;
                xt && Q.forEach(function(et) {
                  G += et.items.length;
                });
                var Ft = 0;
                xt = xt || function() {
                };
                for (var z = 0; z < Q.length; z++) {
                  z > 0 && (M(Q[z], ht), ht.addPage(ht.options));
                  for (var C = Q[z], k = 0, V = C.items.length; k < V; k++) {
                    var ot = C.items[k];
                    switch (ot.type) {
                      case "vector":
                        yt(ot.item, st, ht);
                        break;
                      case "line":
                        J(ot.item, ot.item.x, ot.item.y, st, ht);
                        break;
                      case "image":
                        bt(ot.item, ot.item.x, ot.item.y, ht);
                        break;
                      case "svg":
                        Tt(ot.item, ot.item.x, ot.item.y, ht, gt);
                        break;
                      case "beginClip":
                        It(ot.item, ht);
                        break;
                      case "endClip":
                        Lt(ht);
                        break;
                    }
                    Ft++, xt(Ft / G);
                  }
                  C.watermark && nt(C, ht);
                }
              }
              function ct(Q, gt) {
                var ht = Q;
                return gt.sup && (ht -= gt.fontSize * 0.75), gt.sub && (ht += gt.fontSize * 0.35), ht;
              }
              function J(Q, gt, ht, st, xt) {
                function G(Kt, Vt) {
                  var Ot, ie, Ae = new d(null);
                  if (x(Kt.positions))
                    throw "Page reference id not found";
                  var be = Kt.positions[0].pageNumber.toString();
                  switch (Vt.text = be, Ot = Ae.widthOfString(Vt.text, Vt.font, Vt.fontSize, Vt.characterSpacing, Vt.fontFeatures), ie = Vt.width - Ot, Vt.width = Ot, Vt.alignment) {
                    case "right":
                      Vt.x += ie;
                      break;
                    case "center":
                      Vt.x += ie / 2;
                      break;
                  }
                }
                Q._pageNodeRef && G(Q._pageNodeRef, Q.inlines[0]), gt = gt || 0, ht = ht || 0;
                var Ft = Q.getHeight(), z = Q.getAscenderHeight(), C = Ft - z;
                h.drawBackground(Q, gt, ht, st, xt);
                for (var k = 0, V = Q.inlines.length; k < V; k++) {
                  var ot = Q.inlines[k], et = Ft - ot.font.ascender / 1e3 * ot.fontSize - C;
                  ot._pageNodeRef && G(ot._pageNodeRef, ot);
                  var tt = {
                    lineBreak: !1,
                    textWidth: ot.width,
                    characterSpacing: ot.characterSpacing,
                    wordCount: 1,
                    link: ot.link
                  };
                  ot.linkToDestination && (tt.goTo = ot.linkToDestination), Q.id && k === 0 && (tt.destination = Q.id), ot.fontFeatures && (tt.features = ot.fontFeatures);
                  var At = y(ot.opacity) ? ot.opacity : 1;
                  xt.opacity(At), xt.fill(ot.color || "black"), xt._font = ot.font, xt.fontSize(ot.fontSize);
                  var Nt = ct(ht + et, ot);
                  xt.text(ot.text, gt + ot.x, Nt, tt), ot.linkToPage && (xt.ref({ Type: "Action", S: "GoTo", D: [ot.linkToPage, 0, 0] }).end(), xt.annotate(gt + ot.x, Nt, ot.width, ot.height, {
                    Subtype: "Link",
                    Dest: [ot.linkToPage - 1, "XYZ", null, null, null]
                  }));
                }
                h.drawDecorations(Q, gt, ht, xt);
              }
              function nt(Q, gt) {
                var ht = Q.watermark;
                gt.fill(ht.color), gt.opacity(ht.opacity), gt.save(), gt.rotate(ht.angle, { origin: [gt.page.width / 2, gt.page.height / 2] });
                var st = gt.page.width / 2 - ht._size.size.width / 2, xt = gt.page.height / 2 - ht._size.size.height / 2;
                gt._font = ht.font, gt.fontSize(ht.fontSize), gt.text(ht.text, st, xt, { lineBreak: !1 }), gt.restore();
              }
              function yt(Q, gt, ht) {
                ht.lineWidth(Q.lineWidth || 1), Q.dash ? ht.dash(Q.dash.length, { space: Q.dash.space || Q.dash.length, phase: Q.dash.phase || 0 }) : ht.undash(), ht.lineJoin(Q.lineJoin || "miter"), ht.lineCap(Q.lineCap || "butt");
                var st = null;
                switch (Q.type) {
                  case "ellipse":
                    ht.ellipse(Q.x, Q.y, Q.r1, Q.r2), Q.linearGradient && (st = ht.linearGradient(Q.x - Q.r1, Q.y, Q.x + Q.r1, Q.y));
                    break;
                  case "rect":
                    Q.r ? ht.roundedRect(Q.x, Q.y, Q.w, Q.h, Q.r) : ht.rect(Q.x, Q.y, Q.w, Q.h), Q.linearGradient && (st = ht.linearGradient(Q.x, Q.y, Q.x + Q.w, Q.y));
                    break;
                  case "line":
                    ht.moveTo(Q.x1, Q.y1), ht.lineTo(Q.x2, Q.y2);
                    break;
                  case "polyline":
                    if (Q.points.length === 0)
                      break;
                    ht.moveTo(Q.points[0].x, Q.points[0].y);
                    for (var xt = 1, G = Q.points.length; xt < G; xt++)
                      ht.lineTo(Q.points[xt].x, Q.points[xt].y);
                    if (Q.points.length > 1) {
                      var Ft = Q.points[0], z = Q.points[Q.points.length - 1];
                      (Q.closePath || Ft.x === z.x && Ft.y === z.y) && ht.closePath();
                    }
                    break;
                  case "path":
                    ht.path(Q.d);
                    break;
                }
                if (Q.linearGradient && st) {
                  for (var C = 1 / (Q.linearGradient.length - 1), xt = 0; xt < Q.linearGradient.length; xt++)
                    st.stop(xt * C, Q.linearGradient[xt]);
                  Q.color = st;
                }
                S(Q.color) && (Q.color = P(Q.color, gt));
                var k = y(Q.fillOpacity) ? Q.fillOpacity : 1, V = y(Q.strokeOpacity) ? Q.strokeOpacity : 1;
                Q.color && Q.lineColor ? (ht.fillColor(Q.color, k), ht.strokeColor(Q.lineColor, V), ht.fillAndStroke()) : Q.color ? (ht.fillColor(Q.color, k), ht.fill()) : (ht.strokeColor(Q.lineColor || "black", V), ht.stroke());
              }
              function bt(Q, gt, ht, st) {
                var xt = y(Q.opacity) ? Q.opacity : 1;
                if (st.opacity(xt), Q.cover) {
                  var G = Q.cover.align || "center", Ft = Q.cover.valign || "center", z = Q.cover.width ? Q.cover.width : Q.width, C = Q.cover.height ? Q.cover.height : Q.height;
                  st.save(), st.rect(Q.x, Q.y, z, C).clip(), st.image(Q.image, Q.x, Q.y, { cover: [z, C], align: G, valign: Ft }), st.restore();
                } else
                  st.image(Q.image, Q.x, Q.y, { width: Q._width, height: Q._height });
                Q.link && st.link(Q.x, Q.y, Q._width, Q._height, Q.link), Q.linkToPage && (st.ref({ Type: "Action", S: "GoTo", D: [Q.linkToPage, 0, 0] }).end(), st.annotate(Q.x, Q.y, Q._width, Q._height, { Subtype: "Link", Dest: [Q.linkToPage - 1, "XYZ", null, null, null] })), Q.linkToDestination && st.goTo(Q.x, Q.y, Q._width, Q._height, Q.linkToDestination);
              }
              function Tt(Q, gt, ht, st, xt) {
                var G = Object.assign({ width: Q._width, height: Q._height, assumePt: !0 }, Q.options);
                G.fontCallback = function(Ft, z, C) {
                  var k = Ft.split(",").map(function(tt) {
                    return tt.trim().replace(/('|")/g, "");
                  }), V = T(xt.fonts, k, Q.font || "Roboto"), ot = xt.getFontFile(V, z, C);
                  if (ot === null) {
                    var et = xt.getFontType(z, C);
                    throw new Error("Font '" + V + "' in style '" + et + "' is not defined in the font section of the document definition.");
                  }
                  return ot;
                }, O(st, Q.svg, Q.x, Q.y, G);
              }
              function It(Q, gt) {
                gt.save(), gt.addContent("" + Q.x + " " + Q.y + " " + Q.width + " " + Q.height + " re"), gt.clip();
              }
              function Lt(Q) {
                Q.restore();
              }
              function zt(Q, gt) {
                var ht = {};
                return Object.keys(Q).forEach(function(st) {
                  var xt = Q[st];
                  ht[st] = gt.pattern(xt.boundingBox, xt.xStep, xt.yStep, xt.pattern, xt.colored);
                }), ht;
              }
              l.exports = A;
            }
          ),
          /***/
          86976: (
            /***/
            function(l) {
              for (var c = [
                null,
                [[10, 7, 17, 13], [1, 1, 1, 1], []],
                [[16, 10, 28, 22], [1, 1, 1, 1], [4, 16]],
                [[26, 15, 22, 18], [1, 1, 2, 2], [4, 20]],
                [[18, 20, 16, 26], [2, 1, 4, 2], [4, 24]],
                [[24, 26, 22, 18], [2, 1, 4, 4], [4, 28]],
                [[16, 18, 28, 24], [4, 2, 4, 4], [4, 32]],
                [[18, 20, 26, 18], [4, 2, 5, 6], [4, 20, 36]],
                [[22, 24, 26, 22], [4, 2, 6, 6], [4, 22, 40]],
                [[22, 30, 24, 20], [5, 2, 8, 8], [4, 24, 44]],
                [[26, 18, 28, 24], [5, 4, 8, 8], [4, 26, 48]],
                [[30, 20, 24, 28], [5, 4, 11, 8], [4, 28, 52]],
                [[22, 24, 28, 26], [8, 4, 11, 10], [4, 30, 56]],
                [[22, 26, 22, 24], [9, 4, 16, 12], [4, 32, 60]],
                [[24, 30, 24, 20], [9, 4, 16, 16], [4, 24, 44, 64]],
                [[24, 22, 24, 30], [10, 6, 18, 12], [4, 24, 46, 68]],
                [[28, 24, 30, 24], [10, 6, 16, 17], [4, 24, 48, 72]],
                [[28, 28, 28, 28], [11, 6, 19, 16], [4, 28, 52, 76]],
                [[26, 30, 28, 28], [13, 6, 21, 18], [4, 28, 54, 80]],
                [[26, 28, 26, 26], [14, 7, 25, 21], [4, 28, 56, 84]],
                [[26, 28, 28, 30], [16, 8, 25, 20], [4, 32, 60, 88]],
                [[26, 28, 30, 28], [17, 8, 25, 23], [4, 26, 48, 70, 92]],
                [[28, 28, 24, 30], [17, 9, 34, 23], [4, 24, 48, 72, 96]],
                [[28, 30, 30, 30], [18, 9, 30, 25], [4, 28, 52, 76, 100]],
                [[28, 30, 30, 30], [20, 10, 32, 27], [4, 26, 52, 78, 104]],
                [[28, 26, 30, 30], [21, 12, 35, 29], [4, 30, 56, 82, 108]],
                [[28, 28, 30, 28], [23, 12, 37, 34], [4, 28, 56, 84, 112]],
                [[28, 30, 30, 30], [25, 12, 40, 34], [4, 32, 60, 88, 116]],
                [[28, 30, 30, 30], [26, 13, 42, 35], [4, 24, 48, 72, 96, 120]],
                [[28, 30, 30, 30], [28, 14, 45, 38], [4, 28, 52, 76, 100, 124]],
                [[28, 30, 30, 30], [29, 15, 48, 40], [4, 24, 50, 76, 102, 128]],
                [[28, 30, 30, 30], [31, 16, 51, 43], [4, 28, 54, 80, 106, 132]],
                [[28, 30, 30, 30], [33, 17, 54, 45], [4, 32, 58, 84, 110, 136]],
                [[28, 30, 30, 30], [35, 18, 57, 48], [4, 28, 56, 84, 112, 140]],
                [[28, 30, 30, 30], [37, 19, 60, 51], [4, 32, 60, 88, 116, 144]],
                [[28, 30, 30, 30], [38, 19, 63, 53], [4, 28, 52, 76, 100, 124, 148]],
                [[28, 30, 30, 30], [40, 20, 66, 56], [4, 22, 48, 74, 100, 126, 152]],
                [[28, 30, 30, 30], [43, 21, 70, 59], [4, 26, 52, 78, 104, 130, 156]],
                [[28, 30, 30, 30], [45, 22, 74, 62], [4, 30, 56, 82, 108, 134, 160]],
                [[28, 30, 30, 30], [47, 24, 77, 65], [4, 24, 52, 80, 108, 136, 164]],
                [[28, 30, 30, 30], [49, 25, 81, 68], [4, 28, 56, 84, 112, 140, 168]]
              ], t = 0, s = 1, r = 2, a = 4, o = 8, f = /^\d*$/, u = /^[A-Za-z0-9 $%*+\-./:]*$/, h = /^[A-Z0-9 $%*+\-./:]*$/, d = 1, i = 0, p = 3, y = 2, m = [], e = [-1], x = 0, S = 1; x < 255; ++x)
                m.push(S), e[S] = x, S = S * 2 ^ (S >= 128 ? 285 : 0);
              for (var P = [[]], x = 0; x < 30; ++x) {
                for (var O = P[x], T = [], A = 0; A <= x; ++A) {
                  var E = A < x ? m[O[A]] : 0, D = m[(x + (O[A - 1] || 0)) % 255];
                  T.push(e[E ^ D]);
                }
                P.push(T);
              }
              for (var b = {}, x = 0; x < 45; ++x)
                b["0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:".charAt(x)] = x;
              var R = [
                function(z, C) {
                  return (z + C) % 2 === 0;
                },
                function(z, C) {
                  return z % 2 === 0;
                },
                function(z, C) {
                  return C % 3 === 0;
                },
                function(z, C) {
                  return (z + C) % 3 === 0;
                },
                function(z, C) {
                  return ((z / 2 | 0) + (C / 3 | 0)) % 2 === 0;
                },
                function(z, C) {
                  return z * C % 2 + z * C % 3 === 0;
                },
                function(z, C) {
                  return (z * C % 2 + z * C % 3) % 2 === 0;
                },
                function(z, C) {
                  return ((z + C) % 2 + z * C % 3) % 2 === 0;
                }
              ], L = function(z) {
                return z > 6;
              }, N = function(z) {
                return 4 * z + 17;
              }, M = function(z) {
                var C = c[z], k = 16 * z * z + 128 * z + 64;
                return L(z) && (k -= 36), C[2].length && (k -= 25 * C[2].length * C[2].length - 10 * C[2].length - 55), k;
              }, K = function(z, C) {
                var k = M(z) & -8, V = c[z];
                return k -= 8 * V[0][C] * V[1][C], k;
              }, ct = function(z, C) {
                switch (C) {
                  case s:
                    return z < 10 ? 10 : z < 27 ? 12 : 14;
                  case r:
                    return z < 10 ? 9 : z < 27 ? 11 : 13;
                  case a:
                    return z < 10 ? 8 : 16;
                  case o:
                    return z < 10 ? 8 : z < 27 ? 10 : 12;
                }
              }, J = function(z, C, k) {
                var V = K(z, k) - 4 - ct(z, C);
                switch (C) {
                  case s:
                    return (V / 10 | 0) * 3 + (V % 10 < 4 ? 0 : V % 10 < 7 ? 1 : 2);
                  case r:
                    return (V / 11 | 0) * 2 + (V % 11 < 6 ? 0 : 1);
                  case a:
                    return V / 8 | 0;
                  case o:
                    return V / 13 | 0;
                }
              }, nt = function(z, C) {
                switch (z) {
                  case s:
                    return C.match(f) ? C : null;
                  case r:
                    return C.match(u) ? C.toUpperCase() : null;
                  case a:
                    if (typeof C == "string") {
                      for (var k = [], V = 0; V < C.length; ++V) {
                        var ot = C.charCodeAt(V);
                        ot < 128 ? k.push(ot) : ot < 2048 ? k.push(
                          192 | ot >> 6,
                          128 | ot & 63
                        ) : ot < 65536 ? k.push(
                          224 | ot >> 12,
                          128 | ot >> 6 & 63,
                          128 | ot & 63
                        ) : k.push(
                          240 | ot >> 18,
                          128 | ot >> 12 & 63,
                          128 | ot >> 6 & 63,
                          128 | ot & 63
                        );
                      }
                      return k;
                    } else
                      return C;
                }
              }, yt = function(z, C, k, V) {
                var ot = [], et = 0, tt = 8, At = k.length, Nt = function(Ot, ie) {
                  if (ie >= tt) {
                    for (ot.push(et | Ot >> (ie -= tt)); ie >= 8; )
                      ot.push(Ot >> (ie -= 8) & 255);
                    et = 0, tt = 8;
                  }
                  ie > 0 && (et |= (Ot & (1 << ie) - 1) << (tt -= ie));
                }, Kt = ct(z, C);
                switch (Nt(C, 4), Nt(At, Kt), C) {
                  case s:
                    for (var Vt = 2; Vt < At; Vt += 3)
                      Nt(parseInt(k.substring(Vt - 2, Vt + 1), 10), 10);
                    Nt(parseInt(k.substring(Vt - 2), 10), [0, 4, 7][At % 3]);
                    break;
                  case r:
                    for (var Vt = 1; Vt < At; Vt += 2)
                      Nt(b[k.charAt(Vt - 1)] * 45 + b[k.charAt(Vt)], 11);
                    At % 2 == 1 && Nt(b[k.charAt(Vt - 1)], 6);
                    break;
                  case a:
                    for (var Vt = 0; Vt < At; ++Vt)
                      Nt(k[Vt], 8);
                    break;
                }
                for (Nt(t, 4), tt < 8 && ot.push(et); ot.length + 1 < V; )
                  ot.push(236, 17);
                return ot.length < V && ot.push(236), ot;
              }, bt = function(z, C) {
                for (var k = z.slice(0), V = z.length, ot = C.length, et = 0; et < ot; ++et)
                  k.push(0);
                for (var et = 0; et < V; ) {
                  var tt = e[k[et++]];
                  if (tt >= 0)
                    for (var At = 0; At < ot; ++At)
                      k[et + At] ^= m[(tt + C[At]) % 255];
                }
                return k.slice(V);
              }, Tt = function(z, C, k) {
                for (var V = [], ot = z.length / C | 0, et = 0, tt = C - z.length % C, At = 0; At < tt; ++At)
                  V.push(et), et += ot;
                for (var At = tt; At < C; ++At)
                  V.push(et), et += ot + 1;
                V.push(et);
                for (var Nt = [], At = 0; At < C; ++At)
                  Nt.push(bt(z.slice(V[At], V[At + 1]), k));
                for (var Kt = [], Vt = z.length / C | 0, At = 0; At < Vt; ++At)
                  for (var Ot = 0; Ot < C; ++Ot)
                    Kt.push(z[V[Ot] + At]);
                for (var Ot = tt; Ot < C; ++Ot)
                  Kt.push(z[V[Ot + 1] - 1]);
                for (var At = 0; At < k.length; ++At)
                  for (var Ot = 0; Ot < C; ++Ot)
                    Kt.push(Nt[Ot][At]);
                return Kt;
              }, It = function(z, C, k, V) {
                for (var ot = z << V, et = C - 1; et >= 0; --et)
                  ot >> V + et & 1 && (ot ^= k << et);
                return z << V | ot;
              }, Lt = function(z) {
                for (var C = c[z], k = N(z), V = [], ot = [], et = 0; et < k; ++et)
                  V.push([]), ot.push([]);
                var tt = function(be, de, Se, Wt, _t) {
                  for (var ce = 0; ce < Se; ++ce)
                    for (var pe = 0; pe < Wt; ++pe)
                      V[be + ce][de + pe] = _t[ce] >> pe & 1, ot[be + ce][de + pe] = 1;
                };
                tt(0, 0, 9, 9, [127, 65, 93, 93, 93, 65, 383, 0, 64]), tt(k - 8, 0, 8, 9, [256, 127, 65, 93, 93, 93, 65, 127]), tt(0, k - 8, 9, 8, [254, 130, 186, 186, 186, 130, 254, 0, 0]);
                for (var et = 9; et < k - 8; ++et)
                  V[6][et] = V[et][6] = ~et & 1, ot[6][et] = ot[et][6] = 1;
                for (var At = C[2], Nt = At.length, et = 0; et < Nt; ++et)
                  for (var Kt = et === 0 || et === Nt - 1 ? 1 : 0, Vt = et === 0 ? Nt - 1 : Nt, Ot = Kt; Ot < Vt; ++Ot)
                    tt(At[et], At[Ot], 5, 5, [31, 17, 21, 17, 31]);
                if (L(z))
                  for (var ie = It(z, 6, 7973, 12), Ae = 0, et = 0; et < 6; ++et)
                    for (var Ot = 0; Ot < 3; ++Ot)
                      V[et][k - 11 + Ot] = V[k - 11 + Ot][et] = ie >> Ae++ & 1, ot[et][k - 11 + Ot] = ot[k - 11 + Ot][et] = 1;
                return { matrix: V, reserved: ot };
              }, zt = function(z, C, k) {
                for (var V = z.length, ot = 0, et = -1, tt = V - 1; tt >= 0; tt -= 2) {
                  tt == 6 && --tt;
                  for (var At = et < 0 ? V - 1 : 0, Nt = 0; Nt < V; ++Nt) {
                    for (var Kt = tt; Kt > tt - 2; --Kt)
                      C[At][Kt] || (z[At][Kt] = k[ot >> 3] >> (~ot & 7) & 1, ++ot);
                    At += et;
                  }
                  et = -et;
                }
                return z;
              }, Q = function(z, C, k) {
                for (var V = R[k], ot = z.length, et = 0; et < ot; ++et)
                  for (var tt = 0; tt < ot; ++tt)
                    C[et][tt] || (z[et][tt] ^= V(et, tt));
                return z;
              }, gt = function(z, C, k, V) {
                for (var ot = z.length, et = It(k << 3 | V, 5, 1335, 10) ^ 21522, tt = 0; tt < 15; ++tt) {
                  var At = [0, 1, 2, 3, 4, 5, 7, 8, ot - 7, ot - 6, ot - 5, ot - 4, ot - 3, ot - 2, ot - 1][tt], Nt = [ot - 1, ot - 2, ot - 3, ot - 4, ot - 5, ot - 6, ot - 7, ot - 8, 7, 5, 4, 3, 2, 1, 0][tt];
                  z[At][8] = z[8][Nt] = et >> tt & 1;
                }
                return z;
              }, ht = function(z) {
                for (var C = 3, k = 3, V = 40, ot = 10, et = function(Se) {
                  for (var Wt = 0, _t = 0; _t < Se.length; ++_t)
                    Se[_t] >= 5 && (Wt += C + (Se[_t] - 5));
                  for (var _t = 5; _t < Se.length; _t += 2) {
                    var ce = Se[_t];
                    Se[_t - 1] == ce && Se[_t - 2] == 3 * ce && Se[_t - 3] == ce && Se[_t - 4] == ce && (Se[_t - 5] >= 4 * ce || Se[_t + 1] >= 4 * ce) && (Wt += V);
                  }
                  return Wt;
                }, tt = z.length, At = 0, Nt = 0, Kt = 0; Kt < tt; ++Kt) {
                  var Vt = z[Kt], Ot;
                  Ot = [0];
                  for (var ie = 0; ie < tt; ) {
                    var Ae;
                    for (Ae = 0; ie < tt && Vt[ie]; ++Ae)
                      ++ie;
                    for (Ot.push(Ae), Ae = 0; ie < tt && !Vt[ie]; ++Ae)
                      ++ie;
                    Ot.push(Ae);
                  }
                  At += et(Ot), Ot = [0];
                  for (var ie = 0; ie < tt; ) {
                    var Ae;
                    for (Ae = 0; ie < tt && z[ie][Kt]; ++Ae)
                      ++ie;
                    for (Ot.push(Ae), Ae = 0; ie < tt && !z[ie][Kt]; ++Ae)
                      ++ie;
                    Ot.push(Ae);
                  }
                  At += et(Ot);
                  var be = z[Kt + 1] || [];
                  Nt += Vt[0];
                  for (var ie = 1; ie < tt; ++ie) {
                    var de = Vt[ie];
                    Nt += de, Vt[ie - 1] == de && be[ie] === de && be[ie - 1] === de && (At += k);
                  }
                }
                return At += ot * (Math.abs(Nt / tt / tt - 0.5) / 0.05 | 0), At;
              }, st = function(z, C, k, V, ot) {
                var et = c[C], tt = yt(C, k, z, K(C, V) >> 3);
                tt = Tt(tt, et[1][V], P[et[0][V]]);
                var At = Lt(C), Nt = At.matrix, Kt = At.reserved;
                if (zt(Nt, Kt, tt), ot < 0) {
                  Q(Nt, Kt, 0), gt(Nt, Kt, V, 0);
                  var Vt = 0, Ot = ht(Nt);
                  for (Q(Nt, Kt, 0), ot = 1; ot < 8; ++ot) {
                    Q(Nt, Kt, ot), gt(Nt, Kt, V, ot);
                    var ie = ht(Nt);
                    Ot > ie && (Ot = ie, Vt = ot), Q(Nt, Kt, ot);
                  }
                  ot = Vt;
                }
                return Q(Nt, Kt, ot), gt(Nt, Kt, V, ot), Nt;
              };
              function xt(z, C) {
                var k = {
                  numeric: s,
                  alphanumeric: r,
                  octet: a
                }, V = {
                  L: d,
                  M: i,
                  Q: p,
                  H: y
                };
                C = C || {};
                var ot = C.version || -1, et = V[(C.eccLevel || "L").toUpperCase()], tt = C.mode ? k[C.mode.toLowerCase()] : -1, At = "mask" in C ? C.mask : -1;
                if (tt < 0)
                  typeof z == "string" ? z.match(f) ? tt = s : z.match(h) ? tt = r : tt = a : tt = a;
                else if (!(tt == s || tt == r || tt == a))
                  throw "invalid or unsupported mode";
                if (z = nt(tt, z), z === null)
                  throw "invalid data format";
                if (et < 0 || et > 3)
                  throw "invalid ECC level";
                if (ot < 0) {
                  for (ot = 1; ot <= 40 && !(z.length <= J(ot, tt, et)); ++ot)
                    ;
                  if (ot > 40)
                    throw "too large data for the Qr format";
                } else if (ot < 1 || ot > 40)
                  throw "invalid Qr version! should be between 1 and 40";
                if (At != -1 && (At < 0 || At > 8))
                  throw "invalid mask";
                return st(z, ot, tt, et, At);
              }
              function G(z, C) {
                var k = [], V = C.background || "#fff", ot = C.foreground || "#000", et = C.padding || 0, tt = xt(z, C), At = tt.length, Nt = Math.floor(C.fit ? C.fit / At : 5), Kt = At * Nt + Nt * et * 2, Vt = Nt * et;
                k.push({
                  type: "rect",
                  x: 0,
                  y: 0,
                  w: Kt,
                  h: Kt,
                  lineWidth: 0,
                  color: V
                });
                for (var Ot = 0; Ot < At; ++Ot)
                  for (var ie = 0; ie < At; ++ie)
                    tt[Ot][ie] && k.push({
                      type: "rect",
                      x: Nt * ie + Vt,
                      y: Nt * Ot + Vt,
                      w: Nt,
                      h: Nt,
                      lineWidth: 0,
                      color: ot
                    });
                return {
                  canvas: k,
                  size: Kt
                };
              }
              function Ft(z) {
                var C = G(z.qr, z);
                return z._canvas = C.canvas, z._width = z._height = z._minWidth = z._maxWidth = z._minHeight = z._maxHeight = C.size, z;
              }
              l.exports = {
                measure: Ft
              };
            }
          ),
          /***/
          58050: (
            /***/
            function(l) {
              l.exports = {
                "4A0": [4767.87, 6740.79],
                "2A0": [3370.39, 4767.87],
                A0: [2383.94, 3370.39],
                A1: [1683.78, 2383.94],
                A2: [1190.55, 1683.78],
                A3: [841.89, 1190.55],
                A4: [595.28, 841.89],
                A5: [419.53, 595.28],
                A6: [297.64, 419.53],
                A7: [209.76, 297.64],
                A8: [147.4, 209.76],
                A9: [104.88, 147.4],
                A10: [73.7, 104.88],
                B0: [2834.65, 4008.19],
                B1: [2004.09, 2834.65],
                B2: [1417.32, 2004.09],
                B3: [1000.63, 1417.32],
                B4: [708.66, 1000.63],
                B5: [498.9, 708.66],
                B6: [354.33, 498.9],
                B7: [249.45, 354.33],
                B8: [175.75, 249.45],
                B9: [124.72, 175.75],
                B10: [87.87, 124.72],
                C0: [2599.37, 3676.54],
                C1: [1836.85, 2599.37],
                C2: [1298.27, 1836.85],
                C3: [918.43, 1298.27],
                C4: [649.13, 918.43],
                C5: [459.21, 649.13],
                C6: [323.15, 459.21],
                C7: [229.61, 323.15],
                C8: [161.57, 229.61],
                C9: [113.39, 161.57],
                C10: [79.37, 113.39],
                RA0: [2437.8, 3458.27],
                RA1: [1729.13, 2437.8],
                RA2: [1218.9, 1729.13],
                RA3: [864.57, 1218.9],
                RA4: [609.45, 864.57],
                SRA0: [2551.18, 3628.35],
                SRA1: [1814.17, 2551.18],
                SRA2: [1275.59, 1814.17],
                SRA3: [907.09, 1275.59],
                SRA4: [637.8, 907.09],
                EXECUTIVE: [521.86, 756],
                FOLIO: [612, 936],
                LEGAL: [612, 1008],
                LETTER: [612, 792],
                TABLOID: [792, 1224]
              };
            }
          ),
          /***/
          28034: (
            /***/
            function(l, c, t) {
              var s = t(16920).isString, r = t(16920).isArray, a = t(16920).isUndefined, o = t(16920).isNull;
              function f(u, h) {
                this.defaultStyle = h || {}, this.styleDictionary = u, this.styleOverrides = [];
              }
              f.prototype.clone = function() {
                var u = new f(this.styleDictionary, this.defaultStyle);
                return this.styleOverrides.forEach(function(h) {
                  u.styleOverrides.push(h);
                }), u;
              }, f.prototype.push = function(u) {
                this.styleOverrides.push(u);
              }, f.prototype.pop = function(u) {
                for (u = u || 1; u-- > 0; )
                  this.styleOverrides.pop();
              }, f.prototype.autopush = function(u) {
                if (s(u))
                  return 0;
                var h = [];
                u.style && (r(u.style) ? h = u.style : h = [u.style]);
                for (var d = 0, i = h.length; d < i; d++)
                  this.push(h[d]);
                var p = [
                  "font",
                  "fontSize",
                  "fontFeatures",
                  "bold",
                  "italics",
                  "alignment",
                  "color",
                  "columnGap",
                  "fillColor",
                  "fillOpacity",
                  "decoration",
                  "decorationStyle",
                  "decorationColor",
                  "background",
                  "lineHeight",
                  "characterSpacing",
                  "noWrap",
                  "markerColor",
                  "leadingIndent",
                  "sup",
                  "sub"
                  //'tableCellPadding'
                  // 'cellBorder',
                  // 'headerCellBorder',
                  // 'oddRowCellBorder',
                  // 'evenRowCellBorder',
                  // 'tableBorder'
                ], y = {}, m = !1;
                return p.forEach(function(e) {
                  !a(u[e]) && !o(u[e]) && (y[e] = u[e], m = !0);
                }), m && this.push(y), h.length + (m ? 1 : 0);
              }, f.prototype.auto = function(u, h) {
                var d = this.autopush(u), i = h();
                return d > 0 && this.pop(d), i;
              }, f.prototype.getProperty = function(u) {
                if (this.styleOverrides)
                  for (var h = this.styleOverrides.length - 1; h >= 0; h--) {
                    var d = this.styleOverrides[h];
                    if (s(d)) {
                      var i = this.styleDictionary[d];
                      if (i && !a(i[u]) && !o(i[u]))
                        return i[u];
                    } else if (!a(d[u]) && !o(d[u]))
                      return d[u];
                  }
                return this.defaultStyle && this.defaultStyle[u];
              }, l.exports = f;
            }
          ),
          /***/
          48730: (
            /***/
            function(l, c, t) {
              var s = t(26651);
              function r(f) {
                var u = parseFloat(f);
                if (!(typeof u != "number" || isNaN(u)))
                  return u;
              }
              function a(f) {
                var u;
                try {
                  u = new s.XmlDocument(f);
                } catch (h) {
                  throw new Error("SVGMeasure: " + h);
                }
                if (u.name !== "svg")
                  throw new Error("SVGMeasure: expected <svg> document");
                return u;
              }
              function o() {
              }
              o.prototype.measureSVG = function(f) {
                var u = a(f), h = r(u.attr.width), d = r(u.attr.height);
                if ((h == null || d == null) && typeof u.attr.viewBox == "string") {
                  var i = u.attr.viewBox.split(/[,\s]+/);
                  if (i.length !== 4)
                    throw new Error("Unexpected svg viewbox format, should have 4 entries but found: '" + u.attr.viewBox + "'");
                  h == null && (h = r(i[2])), d == null && (d = r(i[3]));
                }
                return {
                  width: h,
                  height: d
                };
              }, o.prototype.writeDimensions = function(f, u) {
                var h = a(f);
                return h.attr.width = "" + u.width, h.attr.height = "" + u.height, h.toString();
              }, l.exports = o;
            }
          ),
          /***/
          41729: (
            /***/
            function(l, c, t) {
              var s = t(65354), r = t(16920).isFunction, a = t(16920).isNumber;
              function o(f) {
                this.tableNode = f;
              }
              o.prototype.beginTable = function(f) {
                var u, h, d = this;
                if (u = this.tableNode, this.offsets = u._offsets, this.layout = u._layout, h = f.context().availableWidth - this.offsets.total, s.buildColumnWidths(u.table.widths, h), this.tableWidth = u._offsets.total + i(), this.rowSpanData = p(), this.cleanUpRepeatables = !1, this.headerRows = u.table.headerRows || 0, this.headerRows > u.table.body.length)
                  throw new Error(`Too few rows in the table. Property headerRows requires at least ${this.headerRows}, contains only ${u.table.body.length}`);
                this.rowsWithoutPageBreak = this.headerRows + (u.table.keepWithHeaderRows || 0), this.dontBreakRows = u.table.dontBreakRows || !1, this.rowsWithoutPageBreak && f.beginUnbreakableBlock(), y(this.tableNode.table.body), this.drawHorizontalLine(0, f);
                function i() {
                  var m = 0;
                  return u.table.widths.forEach(function(e) {
                    m += e._calcWidth;
                  }), m;
                }
                function p() {
                  var m = [], e = 0, x = 0;
                  m.push({ left: 0, rowSpan: 0 });
                  for (var S = 0, P = d.tableNode.table.body[0].length; S < P; S++) {
                    var O = d.layout.paddingLeft(S, d.tableNode) + d.layout.paddingRight(S, d.tableNode), T = d.layout.vLineWidth(S, d.tableNode);
                    x = O + T + d.tableNode.table.widths[S]._calcWidth, m[m.length - 1].width = x, e += x, m.push({ left: e, rowSpan: 0, width: 0 });
                  }
                  return m;
                }
                function y(m) {
                  for (var e = 0; e < m.length; e++)
                    for (var x = m[e], S = 0; S < x.length; S++) {
                      var P = x[S];
                      if (P.border) {
                        for (var O = P.rowSpan || 1, T = P.colSpan || 1, A = 0; A < O; A++)
                          P.border[0] !== void 0 && A > 0 && D(e + A, S, 0, P.border[0]), P.border[2] !== void 0 && D(e + A, S + T - 1, 2, P.border[2]);
                        for (var E = 0; E < T; E++)
                          P.border[1] !== void 0 && E > 0 && D(e, S + E, 1, P.border[1]), P.border[3] !== void 0 && D(e + O - 1, S + E, 3, P.border[3]);
                      }
                    }
                  function D(b, R, L, N) {
                    var M = m[b][R];
                    M.border = M.border || {}, M.border[L] = N;
                  }
                }
              }, o.prototype.onRowBreak = function(f, u) {
                var h = this;
                return function() {
                  var d = h.rowPaddingTop + (h.headerRows ? 0 : h.topLineWidth);
                  u.context().availableHeight -= h.reservedAtBottom, u.context().moveDown(d);
                };
              }, o.prototype.beginRow = function(f, u) {
                this.topLineWidth = this.layout.hLineWidth(f, this.tableNode), this.rowPaddingTop = this.layout.paddingTop(f, this.tableNode), this.bottomLineWidth = this.layout.hLineWidth(f + 1, this.tableNode), this.rowPaddingBottom = this.layout.paddingBottom(f, this.tableNode), this.rowCallback = this.onRowBreak(f, u), u.tracker.startTracking("pageChanged", this.rowCallback), this.dontBreakRows && u.beginUnbreakableBlock(), this.rowTopY = u.context().y, this.reservedAtBottom = this.bottomLineWidth + this.rowPaddingBottom, u.context().availableHeight -= this.reservedAtBottom, u.context().moveDown(this.rowPaddingTop);
              }, o.prototype.drawHorizontalLine = function(f, u, h) {
                var d = this.layout.hLineWidth(f, this.tableNode);
                if (d) {
                  var i = this.layout.hLineStyle(f, this.tableNode), p;
                  i && i.dash && (p = i.dash);
                  for (var y = d / 2, m = null, e = this.tableNode.table.body, x, S, P, O = 0, T = this.rowSpanData.length; O < T; O++) {
                    var A = this.rowSpanData[O], E = !A.rowSpan, D = null;
                    if (E && O < T - 1) {
                      var b = !1, R = !1, L = !1;
                      f > 0 && (x = e[f - 1][O], R = x.border ? x.border[3] : this.layout.defaultBorder, R && x.borderColor && (D = x.borderColor[3])), f < e.length && (S = e[f][O], b = S.border ? S.border[1] : this.layout.defaultBorder, b && D == null && S.borderColor && (D = S.borderColor[1])), E = b || R;
                    }
                    if (x && x._rowSpanCurrentOffset && (P = e[f - 1 - x._rowSpanCurrentOffset][O], L = P && P.border ? P.border[3] : this.layout.defaultBorder, L && P && P.borderColor && (D = P.borderColor[3])), D == null && (D = r(this.layout.hLineColor) ? this.layout.hLineColor(f, this.tableNode, O) : this.layout.hLineColor), !m && E && (m = { left: A.left, width: 0 }), E) {
                      var N = 0;
                      if (P && P.colSpan && L) {
                        for (; P.colSpan > N; )
                          m.width += this.rowSpanData[O + N++].width || 0;
                        O += N - 1;
                      } else if (x && x.colSpan && R) {
                        for (; x.colSpan > N; )
                          m.width += this.rowSpanData[O + N++].width || 0;
                        O += N - 1;
                      } else if (S && S.colSpan && b) {
                        for (; S.colSpan > N; )
                          m.width += this.rowSpanData[O + N++].width || 0;
                        O += N - 1;
                      } else
                        m.width += this.rowSpanData[O].width || 0;
                    }
                    var M = (h || 0) + y;
                    E && m && m.width && (u.addVector({
                      type: "line",
                      x1: m.left,
                      x2: m.left + m.width,
                      y1: M,
                      y2: M,
                      lineWidth: d,
                      dash: p,
                      lineColor: D
                    }, !1, h), m = null, D = null, x = null, S = null, P = null);
                  }
                  u.context().moveDown(d);
                }
              }, o.prototype.drawVerticalLine = function(f, u, h, d, i, p, y) {
                var m = this.layout.vLineWidth(d, this.tableNode);
                if (m !== 0) {
                  var e = this.layout.vLineStyle(d, this.tableNode), x;
                  e && e.dash && (x = e.dash);
                  var S = this.tableNode.table.body, P, O, T;
                  if (d > 0 && (P = S[p][y], P && P.borderColor && (P.border ? P.border[2] : this.layout.defaultBorder) && (T = P.borderColor[2])), T == null && d < S.length && (O = S[p][d], O && O.borderColor && (O.border ? O.border[0] : this.layout.defaultBorder) && (T = O.borderColor[0])), T == null && P && P._rowSpanCurrentOffset) {
                    var A = S[p - P._rowSpanCurrentOffset][y];
                    A.borderColor && (A.border ? A.border[2] : this.layout.defaultBorder) && (T = A.borderColor[2]);
                  }
                  if (T == null && O && O._rowSpanCurrentOffset) {
                    var E = S[p - O._rowSpanCurrentOffset][d];
                    E.borderColor && (E.border ? E.border[2] : this.layout.defaultBorder) && (T = E.borderColor[2]);
                  }
                  T == null && (T = r(this.layout.vLineColor) ? this.layout.vLineColor(d, this.tableNode, p) : this.layout.vLineColor), i.addVector({
                    type: "line",
                    x1: f + m / 2,
                    x2: f + m / 2,
                    y1: u,
                    y2: h,
                    lineWidth: m,
                    dash: x,
                    lineColor: T
                  }, !1, !0), P = null, O = null, T = null;
                }
              }, o.prototype.endTable = function(f) {
                this.cleanUpRepeatables && f.popFromRepeatables();
              }, o.prototype.endRow = function(f, u, h) {
                var d, i, p = this;
                u.tracker.stopTracking("pageChanged", this.rowCallback), u.context().moveDown(this.layout.paddingBottom(f, this.tableNode)), u.context().availableHeight += this.reservedAtBottom;
                var y = u.context().page, m = u.context().y, e = z(), x = [], S = h && h.length > 0, P = this.tableNode.table.body;
                if (x.push({
                  y0: this.rowTopY,
                  page: S ? h[0].prevPage : y
                }), S)
                  for (i = 0, d = h.length; i < d; i++) {
                    var O = h[i];
                    x[x.length - 1].y1 = O.prevY, x.push({ y0: O.y, page: O.prevPage + 1 });
                  }
                x[x.length - 1].y1 = m;
                for (var T = x[0].y1 - x[0].y0 === this.rowPaddingTop, A = T ? 1 : 0, E = x.length; A < E; A++) {
                  var D = A < x.length - 1, b = A > 0 && !this.headerRows, R = b ? 0 : this.topLineWidth, L = x[A].y0, N = x[A].y1;
                  for (D && (N = N + this.rowPaddingBottom), u.context().page != x[A].page && (u.context().page = x[A].page, this.reservedAtBottom = 0), i = 0, d = e.length; i < d; i++) {
                    var M = !1, K = !1, ct = e[i].index;
                    if (ct < P[f].length) {
                      var J = P[f][ct];
                      M = J.border ? J.border[0] : this.layout.defaultBorder, K = J.border ? J.border[2] : this.layout.defaultBorder;
                    }
                    if (ct > 0 && !M) {
                      var J = P[f][ct - 1];
                      M = J.border ? J.border[2] : this.layout.defaultBorder;
                    }
                    if (ct + 1 < P[f].length && !K) {
                      var J = P[f][ct + 1];
                      K = J.border ? J.border[0] : this.layout.defaultBorder;
                    }
                    if (M && this.drawVerticalLine(e[i].x, L - R, N + this.bottomLineWidth, e[i].index, u, f, e[i - 1] ? e[i - 1].index : null), i < d - 1) {
                      var nt = P[f][ct].fillColor, yt = P[f][ct].fillOpacity;
                      nt || (nt = r(this.layout.fillColor) ? this.layout.fillColor(f, this.tableNode, ct) : this.layout.fillColor), a(yt) || (yt = r(this.layout.fillOpacity) ? this.layout.fillOpacity(f, this.tableNode, ct) : this.layout.fillOpacity);
                      var bt = P[f][ct].overlayPattern, Tt = P[f][ct].overlayOpacity;
                      if (nt || bt) {
                        var It = M ? this.layout.vLineWidth(ct, this.tableNode) : 0, Lt;
                        (ct === 0 || ct + 1 == P[f].length) && !K ? Lt = this.layout.vLineWidth(ct + 1, this.tableNode) : K ? Lt = this.layout.vLineWidth(ct + 1, this.tableNode) / 2 : Lt = 0;
                        var zt = this.dontBreakRows ? e[i].x + It : e[i].x + It / 2, Q = this.dontBreakRows ? L : L - R / 2, gt = e[i + 1].x + Lt, ht = this.dontBreakRows ? N + this.bottomLineWidth : N + this.bottomLineWidth / 2, st = gt - zt, xt = ht - Q;
                        nt && u.addVector({
                          type: "rect",
                          x: zt,
                          y: Q,
                          w: st,
                          h: xt,
                          lineWidth: 0,
                          color: nt,
                          fillOpacity: yt
                        }, !1, !0, u.context().backgroundLength[u.context().page]), bt && u.addVector({
                          type: "rect",
                          x: zt,
                          y: Q,
                          w: st,
                          h: xt,
                          lineWidth: 0,
                          color: bt,
                          fillOpacity: Tt
                        }, !1, !0);
                      }
                    }
                  }
                  D && this.layout.hLineWhenBroken !== !1 && this.drawHorizontalLine(f + 1, u, N), b && this.layout.hLineWhenBroken !== !1 && this.drawHorizontalLine(f, u, L);
                }
                u.context().page = y, u.context().y = m;
                var G = this.tableNode.table.body[f];
                for (i = 0, d = G.length; i < d; i++) {
                  if (G[i].rowSpan) {
                    if (this.rowSpanData[i].rowSpan = G[i].rowSpan, G[i].colSpan && G[i].colSpan > 1)
                      for (var Ft = 1; Ft < G[i].rowSpan; Ft++)
                        this.tableNode.table.body[f + Ft][i]._colSpan = G[i].colSpan;
                    if (G[i].rowSpan && G[i].rowSpan > 1)
                      for (var Ft = 1; Ft < G[i].rowSpan; Ft++)
                        this.tableNode.table.body[f + Ft][i]._rowSpanCurrentOffset = Ft;
                  }
                  this.rowSpanData[i].rowSpan > 0 && this.rowSpanData[i].rowSpan--;
                }
                this.drawHorizontalLine(f + 1, u), this.headerRows && f === this.headerRows - 1 && (this.headerRepeatable = u.currentBlockToRepeatable()), this.dontBreakRows && u.tracker.auto(
                  "pageChanged",
                  function() {
                    !p.headerRows && p.layout.hLineWhenBroken !== !1 && p.drawHorizontalLine(f, u);
                  },
                  function() {
                    u.commitUnbreakableBlock();
                  }
                ), this.headerRepeatable && (f === this.rowsWithoutPageBreak - 1 || f === this.tableNode.table.body.length - 1) && (u.commitUnbreakableBlock(), u.pushToRepeatables(this.headerRepeatable), this.cleanUpRepeatables = !0, this.headerRepeatable = null);
                function z() {
                  for (var C = [], k = 0, V = 0, ot = p.tableNode.table.body[f].length; V < ot; V++) {
                    if (!k) {
                      C.push({ x: p.rowSpanData[V].left, index: V });
                      var et = p.tableNode.table.body[f][V];
                      k = et._colSpan || et.colSpan || 0;
                    }
                    k > 0 && k--;
                  }
                  return C.push({ x: p.rowSpanData[p.rowSpanData.length - 1].left, index: p.rowSpanData.length - 1 }), C;
                }
              }, l.exports = o;
            }
          ),
          /***/
          4986: (
            /***/
            function(l, c, t) {
              var s = t(16920).isArray, r = t(16920).isPattern, a = t(16920).getPattern;
              function o(d) {
                for (var i = [], p = null, y = 0, m = d.inlines.length; y < m; y++) {
                  var e = d.inlines[y], x = e.decoration;
                  if (!x) {
                    p = null;
                    continue;
                  }
                  s(x) || (x = [x]);
                  for (var S = e.decorationColor || e.color || "black", P = e.decorationStyle || "solid", O = 0, T = x.length; O < T; O++) {
                    var A = x[O];
                    !p || A !== p.decoration || P !== p.decorationStyle || S !== p.decorationColor ? (p = {
                      line: d,
                      decoration: A,
                      decorationColor: S,
                      decorationStyle: P,
                      inlines: [e]
                    }, i.push(p)) : p.inlines.push(e);
                  }
                }
                return i;
              }
              function f(d, i, p, y) {
                function m() {
                  for (var It = 0, Lt = 0, zt = d.inlines.length; Lt < zt; Lt++) {
                    var Q = d.inlines[Lt];
                    It = Q.fontSize > It ? Lt : It;
                  }
                  return d.inlines[It];
                }
                function e() {
                  for (var It = 0, Lt = 0, zt = d.inlines.length; Lt < zt; Lt++) {
                    var Q = d.inlines[Lt].justifyShift || 0;
                    It += d.inlines[Lt].width + Q;
                  }
                  return It;
                }
                var x = d.inlines[0], S = m(), P = e(), O = d.line.getAscenderHeight(), T = S.font.ascender / 1e3 * S.fontSize, A = S.height, E = A - T, D = 0.5 + Math.floor(Math.max(S.fontSize - 8, 0) / 2) * 0.12;
                switch (d.decoration) {
                  case "underline":
                    p += O + E * 0.45;
                    break;
                  case "overline":
                    p += O - T * 0.85;
                    break;
                  case "lineThrough":
                    p += O - T * 0.25;
                    break;
                  default:
                    throw "Unknown decoration : " + d.decoration;
                }
                if (y.save(), d.decorationStyle === "double") {
                  var b = Math.max(0.5, D * 2);
                  y.fillColor(d.decorationColor).rect(i + x.x, p - D / 2, P, D / 2).fill().rect(i + x.x, p + b - D / 2, P, D / 2).fill();
                } else if (d.decorationStyle === "dashed") {
                  var R = Math.ceil(P / 6.8), L = i + x.x;
                  y.rect(L, p, P, D).clip(), y.fillColor(d.decorationColor);
                  for (var N = 0; N < R; N++)
                    y.rect(L, p - D / 2, 3.96, D).fill(), L += 6.8;
                } else if (d.decorationStyle === "dotted") {
                  var M = Math.ceil(P / (D * 3)), K = i + x.x;
                  y.rect(K, p, P, D).clip(), y.fillColor(d.decorationColor);
                  for (var ct = 0; ct < M; ct++)
                    y.rect(K, p - D / 2, D, D).fill(), K += D * 3;
                } else if (d.decorationStyle === "wavy") {
                  var J = 0.7, nt = 1, yt = Math.ceil(P / (J * 2)) + 1, bt = i + x.x - 1;
                  y.rect(i + x.x, p - nt, P, p + nt).clip(), y.lineWidth(0.24), y.moveTo(bt, p);
                  for (var Tt = 0; Tt < yt; Tt++)
                    y.bezierCurveTo(bt + J, p - nt, bt + J * 2, p - nt, bt + J * 3, p).bezierCurveTo(bt + J * 4, p + nt, bt + J * 5, p + nt, bt + J * 6, p), bt += J * 6;
                  y.stroke(d.decorationColor);
                } else
                  y.fillColor(d.decorationColor).rect(i + x.x, p - D / 2, P, D).fill();
                y.restore();
              }
              function u(d, i, p, y) {
                for (var m = o(d), e = 0, x = m.length; e < x; e++)
                  f(m[e], i, p, y);
              }
              function h(d, i, p, y, m) {
                for (var e = d.getHeight(), x = 0, S = d.inlines.length; x < S; x++) {
                  var P = d.inlines[x];
                  if (P.background) {
                    var O = P.background;
                    r(P.background) && (O = a(P.background, y));
                    var T = P.justifyShift || 0;
                    m.fillColor(O).rect(i + P.x - T, p, P.width + T, e).fill();
                  }
                }
              }
              l.exports = {
                drawBackground: h,
                drawDecorations: u
              };
            }
          ),
          /***/
          28045: (
            /***/
            function(l, c, t) {
              var s = t(16920).isString, r = t(16920).isNumber, a = t(16920).isObject, o = t(16920).isArray, f = t(16920).isUndefined, u = t(46982), h = /^(\s)+/g, d = /(\s)+$/g;
              function i(O) {
                this.fontProvider = O;
              }
              i.prototype.buildInlines = function(O, T) {
                var A = S(this.fontProvider, O, T), E = 0, D = 0, b;
                return A.forEach(function(L) {
                  E = Math.max(E, L.width - L.leadingCut - L.trailingCut), b || (b = { width: 0, leadingCut: L.leadingCut, trailingCut: 0 }), b.width += L.width, b.trailingCut = L.trailingCut, D = Math.max(D, R(b)), L.lineEnd && (b = null);
                }), x({}, T, "noWrap", !1) && (E = D), {
                  items: A,
                  minWidth: E,
                  maxWidth: D
                };
                function R(L) {
                  return Math.max(0, L.width - L.leadingCut - L.trailingCut);
                }
              }, i.prototype.sizeOfString = function(O, T) {
                O = O ? O.toString().replace(/\t/g, "    ") : "";
                var A = x({}, T, "font", "Roboto"), E = x({}, T, "fontSize", 12), D = x({}, T, "fontFeatures", null), b = x({}, T, "bold", !1), R = x({}, T, "italics", !1), L = x({}, T, "lineHeight", 1), N = x({}, T, "characterSpacing", 0), M = this.fontProvider.provideFont(A, b, R);
                return {
                  width: P(O, M, E, N, D),
                  height: M.lineHeight(E) * L,
                  fontSize: E,
                  lineHeight: L,
                  ascender: M.ascender / 1e3 * E,
                  descender: M.descender / 1e3 * E
                };
              }, i.prototype.sizeOfRotatedText = function(O, T, A) {
                var E = T * Math.PI / -180, D = this.sizeOfString(O, A);
                return {
                  width: Math.abs(D.height * Math.sin(E)) + Math.abs(D.width * Math.cos(E)),
                  height: Math.abs(D.width * Math.sin(E)) + Math.abs(D.height * Math.cos(E))
                };
              }, i.prototype.widthOfString = function(O, T, A, E, D) {
                return P(O, T, A, E, D);
              };
              function p(O, T) {
                var A = [];
                if (O = O.replace(/\t/g, "    "), T)
                  return A.push({ text: O }), A;
                for (var E = new u(O), D = 0, b; b = E.nextBreak(); ) {
                  var R = O.slice(D, b.position);
                  b.required || R.match(/\r?\n$|\r$/) ? (R = R.replace(/\r?\n$|\r$/, ""), A.push({ text: R, lineEnd: !0 })) : A.push({ text: R }), D = b.position;
                }
                return A;
              }
              function y(O, T) {
                T = T || {}, O = O || {};
                for (var A in O)
                  A != "text" && O.hasOwnProperty(A) && (T[A] = O[A]);
                return T;
              }
              function m(O, T) {
                function A(It) {
                  return It.reduce(function(Lt, zt) {
                    var Q = o(zt.text) ? A(zt.text) : zt, gt = [].concat(Q).some(Array.isArray);
                    return Lt.concat(gt ? A(Q) : Q);
                  }, []);
                }
                function E(It, Lt, zt) {
                  if (f(Lt[It]) || Lt[It].lineEnd)
                    return null;
                  var Q = Lt[It].text;
                  if (zt) {
                    var gt = p(e(Q), !1);
                    if (f(gt[gt.length - 1]))
                      return null;
                    Q = gt[gt.length - 1].text;
                  }
                  return Q;
                }
                var D = [];
                o(O) || (O = [O]), O = A(O);
                for (var b = null, R = 0, L = O.length; R < L; R++) {
                  var N = O[R], M = null, K, ct = x(N || {}, T, "noWrap", !1);
                  if (a(N) ? (N._textRef && N._textRef._textNodeRef.text && (N.text = N._textRef._textNodeRef.text), K = p(e(N.text), ct), M = y(N)) : K = p(e(N), ct), b && K.length) {
                    var J = E(0, K, ct), nt = p(e(b + J), !1);
                    nt.length === 1 && (D[D.length - 1].noNewLine = !0);
                  }
                  for (var yt = 0, bt = K.length; yt < bt; yt++) {
                    var Tt = {
                      text: K[yt].text
                    };
                    K[yt].lineEnd && (Tt.lineEnd = !0), y(M, Tt), D.push(Tt);
                  }
                  b = null, R + 1 < L && (b = E(K.length - 1, K, ct));
                }
                return D;
              }
              function e(O) {
                return O == null ? "" : r(O) ? O.toString() : s(O) ? O : O.toString();
              }
              function x(O, T, A, E) {
                var D;
                return O[A] !== void 0 && O[A] !== null ? O[A] : T ? (T.auto(O, function() {
                  D = T.getProperty(A);
                }), D != null ? D : E) : E;
              }
              function S(O, T, A) {
                var E = m(T, A);
                if (E.length) {
                  var D = x(E[0], A, "leadingIndent", 0);
                  D && (E[0].leadingCut = -D, E[0].leadingIndent = D);
                }
                return E.forEach(function(b) {
                  var R = x(b, A, "font", "Roboto"), L = x(b, A, "fontSize", 12), N = x(b, A, "fontFeatures", null), M = x(b, A, "bold", !1), K = x(b, A, "italics", !1), ct = x(b, A, "color", "black"), J = x(b, A, "decoration", null), nt = x(b, A, "decorationColor", null), yt = x(b, A, "decorationStyle", null), bt = x(b, A, "background", null), Tt = x(b, A, "lineHeight", 1), It = x(b, A, "characterSpacing", 0), Lt = x(b, A, "link", null), zt = x(b, A, "linkToPage", null), Q = x(b, A, "linkToDestination", null), gt = x(b, A, "noWrap", null), ht = x(b, A, "preserveLeadingSpaces", !1), st = x(b, A, "preserveTrailingSpaces", !1), xt = x(b, A, "opacity", 1), G = x(b, A, "sup", !1), Ft = x(b, A, "sub", !1);
                  (G || Ft) && b.fontSize === void 0 && (L *= 0.58);
                  var z = O.provideFont(R, M, K);
                  b.width = P(b.text, z, L, It, N), b.height = z.lineHeight(L) * Tt, b.leadingCut || (b.leadingCut = 0);
                  var C;
                  !ht && (C = b.text.match(h)) && (b.leadingCut += P(C[0], z, L, It, N));
                  var k;
                  !st && (k = b.text.match(d)) ? b.trailingCut = P(k[0], z, L, It, N) : b.trailingCut = 0, b.alignment = x(b, A, "alignment", "left"), b.font = z, b.fontSize = L, b.fontFeatures = N, b.characterSpacing = It, b.color = ct, b.decoration = J, b.decorationColor = nt, b.decorationStyle = yt, b.background = bt, b.link = Lt, b.linkToPage = zt, b.linkToDestination = Q, b.noWrap = gt, b.opacity = xt, b.sup = G, b.sub = Ft;
                }), E;
              }
              function P(O, T, A, E, D) {
                return T.widthOfString(O, A, D) + (E || 0) * (O.length - 1);
              }
              l.exports = i;
            }
          ),
          /***/
          73602: (
            /***/
            function(l) {
              function c() {
                this.events = {};
              }
              c.prototype.startTracking = function(t, s) {
                var r = this.events[t] || (this.events[t] = []);
                r.indexOf(s) < 0 && r.push(s);
              }, c.prototype.stopTracking = function(t, s) {
                var r = this.events[t];
                if (r) {
                  var a = r.indexOf(s);
                  a >= 0 && r.splice(a, 1);
                }
              }, c.prototype.emit = function(t) {
                var s = Array.prototype.slice.call(arguments, 1), r = this.events[t];
                r && r.forEach(function(a) {
                  a.apply(this, s);
                });
              }, c.prototype.auto = function(t, s, r) {
                this.startTracking(t, s), r(), this.stopTracking(t, s);
              }, l.exports = c;
            }
          ),
          /***/
          70457: (
            /***/
            function(l, c, t) {
              var s, r, a;
              (function(o, f) {
                r = [], s = f, a = typeof s == "function" ? s.apply(c, r) : s, a !== void 0 && (l.exports = a);
              })(this, function() {
                function o(y, m) {
                  return typeof m == "undefined" ? m = { autoBom: !1 } : typeof m != "object" && (console.warn("Deprecated: Expected third argument to be a object"), m = { autoBom: !m }), m.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(y.type) ? new Blob(["\uFEFF", y], { type: y.type }) : y;
                }
                function f(y, m, e) {
                  var x = new XMLHttpRequest();
                  x.open("GET", y), x.responseType = "blob", x.onload = function() {
                    p(x.response, m, e);
                  }, x.onerror = function() {
                    console.error("could not download file");
                  }, x.send();
                }
                function u(y) {
                  var m = new XMLHttpRequest();
                  m.open("HEAD", y, !1);
                  try {
                    m.send();
                  } catch (e) {
                  }
                  return 200 <= m.status && 299 >= m.status;
                }
                function h(y) {
                  try {
                    y.dispatchEvent(new MouseEvent("click"));
                  } catch (e) {
                    var m = document.createEvent("MouseEvents");
                    m.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), y.dispatchEvent(m);
                  }
                }
                var d = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof t.g == "object" && t.g.global === t.g ? t.g : void 0, i = d.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), p = d.saveAs || (typeof window != "object" || window !== d ? function() {
                } : typeof HTMLAnchorElement != "undefined" && "download" in HTMLAnchorElement.prototype && !i ? function(y, m, e) {
                  var x = d.URL || d.webkitURL, S = document.createElement("a");
                  m = m || y.name || "download", S.download = m, S.rel = "noopener", typeof y == "string" ? (S.href = y, S.origin === location.origin ? h(S) : u(S.href) ? f(y, m, e) : h(S, S.target = "_blank")) : (S.href = x.createObjectURL(y), setTimeout(function() {
                    x.revokeObjectURL(S.href);
                  }, 4e4), setTimeout(function() {
                    h(S);
                  }, 0));
                } : "msSaveOrOpenBlob" in navigator ? function(y, m, e) {
                  if (m = m || y.name || "download", typeof y != "string")
                    navigator.msSaveOrOpenBlob(o(y, e), m);
                  else if (u(y))
                    f(y, m, e);
                  else {
                    var x = document.createElement("a");
                    x.href = y, x.target = "_blank", setTimeout(function() {
                      h(x);
                    });
                  }
                } : function(y, m, e, x) {
                  if (x = x || open("", "_blank"), x && (x.document.title = x.document.body.innerText = "downloading..."), typeof y == "string")
                    return f(y, m, e);
                  var S = y.type === "application/octet-stream", P = /constructor/i.test(d.HTMLElement) || d.safari, O = /CriOS\/[\d]+/.test(navigator.userAgent);
                  if ((O || S && P || i) && typeof FileReader != "undefined") {
                    var T = new FileReader();
                    T.onloadend = function() {
                      var D = T.result;
                      D = O ? D : D.replace(/^data:[^;]*;/, "data:attachment/file;"), x ? x.location.href = D : location = D, x = null;
                    }, T.readAsDataURL(y);
                  } else {
                    var A = d.URL || d.webkitURL, E = A.createObjectURL(y);
                    x ? x.location = E : location.href = E, x = null, setTimeout(function() {
                      A.revokeObjectURL(E);
                    }, 4e4);
                  }
                });
                d.saveAs = p.saveAs = p, l.exports = p;
              });
            }
          ),
          /***/
          89233: (
            /***/
            function(l, c, t) {
              var s = t(43060).Buffer;
              t(26364), t(86632), t(61928), t(16543), t(33142), t(10853), t(6208), t(80044), t(18821), t(54883), t(30644), t(45007), t(68995), t(55862), t(80174), t(73214), t(15158), t(54994), t(33130), t(66923), t(35054), t(80238), t(99041), t(45550), t(84750), t(55281), t(39275), t(75668), t(4845), t(85005), t(63815), t(83382), t(27013), t(51360), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(100), t(33290), t(29897);
              var r;
              function a(ft, X) {
                for (var rt = 0; rt < X.length; rt++) {
                  var B = X[rt];
                  B.enumerable = B.enumerable || !1, B.configurable = !0, "value" in B && (B.writable = !0), Object.defineProperty(ft, f(B.key), B);
                }
              }
              function o(ft, X, rt) {
                return X && a(ft.prototype, X), rt && a(ft, rt), Object.defineProperty(ft, "prototype", { writable: !1 }), ft;
              }
              function f(ft) {
                var X = u(ft, "string");
                return typeof X == "symbol" ? X : String(X);
              }
              function u(ft, X) {
                if (typeof ft != "object" || !ft)
                  return ft;
                var rt = ft[Symbol.toPrimitive];
                if (rt !== void 0) {
                  var B = rt.call(ft, X || "default");
                  if (typeof B != "object")
                    return B;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (X === "string" ? String : Number)(ft);
              }
              function h(ft, X) {
                ft.prototype = Object.create(X.prototype), ft.prototype.constructor = ft, d(ft, X);
              }
              function d(ft, X) {
                return d = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(B, U) {
                  return B.__proto__ = U, B;
                }, d(ft, X);
              }
              function i(ft, X) {
                var rt = typeof Symbol != "undefined" && ft[Symbol.iterator] || ft["@@iterator"];
                if (rt)
                  return (rt = rt.call(ft)).next.bind(rt);
                if (Array.isArray(ft) || (rt = p(ft)) || X && ft && typeof ft.length == "number") {
                  rt && (ft = rt);
                  var B = 0;
                  return function() {
                    return B >= ft.length ? { done: !0 } : { done: !1, value: ft[B++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function p(ft, X) {
                if (ft) {
                  if (typeof ft == "string")
                    return y(ft, X);
                  var rt = Object.prototype.toString.call(ft).slice(8, -1);
                  if (rt === "Object" && ft.constructor && (rt = ft.constructor.name), rt === "Map" || rt === "Set")
                    return Array.from(ft);
                  if (rt === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(rt))
                    return y(ft, X);
                }
              }
              function y(ft, X) {
                (X == null || X > ft.length) && (X = ft.length);
                for (var rt = 0, B = new Array(X); rt < X; rt++)
                  B[rt] = ft[rt];
                return B;
              }
              function m(ft) {
                return ft && typeof ft == "object" && "default" in ft ? ft.default : ft;
              }
              var e = m(t(27398)), x = t(76959), S = m(t(27074)), P = m(t(51348)), O = m(t(67827)), T = m(t(41966)), A = m(t(72986)), E = m(t(84346)), D = m(t(49435)), b = t(52773), R = {};
              R.logErrors = !1;
              var L = [];
              R.registerFormat = function(ft) {
                L.push(ft);
              }, R.openSync = function(ft, X) {
                var rt = b.readFileSync(ft);
                return R.create(rt, X);
              }, R.open = function(ft, X, rt) {
                typeof X == "function" && (rt = X, X = null), b.readFile(ft, function(B, U) {
                  if (B)
                    return rt(B);
                  try {
                    var H = R.create(U, X);
                  } catch (ut) {
                    return rt(ut);
                  }
                  return rt(null, H);
                });
              }, R.create = function(ft, X) {
                for (var rt = 0; rt < L.length; rt++) {
                  var B = L[rt];
                  if (B.probe(ft)) {
                    var U = new B(new e.DecodeStream(ft));
                    return X ? U.getFont(X) : U;
                  }
                }
                throw new Error("Unknown font format");
              }, R.defaultLanguage = "en", R.setDefaultLanguage = function(ft) {
                ft === void 0 && (ft = "en"), R.defaultLanguage = ft;
              };
              function N(ft, X, rt) {
                return X in ft ? Object.defineProperty(ft, X, {
                  value: rt,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : ft[X] = rt, ft;
              }
              function M(ft, X, rt, B, U) {
                var H = {};
                return Object.keys(B).forEach(function(ut) {
                  H[ut] = B[ut];
                }), H.enumerable = !!H.enumerable, H.configurable = !!H.configurable, ("value" in H || H.initializer) && (H.writable = !0), H = rt.slice().reverse().reduce(function(ut, pt) {
                  return pt(ft, X, ut) || ut;
                }, H), U && H.initializer !== void 0 && (H.value = H.initializer ? H.initializer.call(U) : void 0, H.initializer = void 0), H.initializer === void 0 && (Object.defineProperty(ft, X, H), H = null), H;
              }
              function K(ft, X, rt) {
                if (rt.get) {
                  var B = rt.get;
                  rt.get = function() {
                    var H = B.call(this);
                    return Object.defineProperty(this, X, {
                      value: H
                    }), H;
                  };
                } else if (typeof rt.value == "function") {
                  var U = rt.value;
                  return {
                    get: function() {
                      var ut = /* @__PURE__ */ new Map();
                      function pt() {
                        for (var vt = arguments.length, dt = new Array(vt), Bt = 0; Bt < vt; Bt++)
                          dt[Bt] = arguments[Bt];
                        var Xt = dt.length > 0 ? dt[0] : "value";
                        if (ut.has(Xt))
                          return ut.get(Xt);
                        var fe = U.apply(this, dt);
                        return ut.set(Xt, fe), fe;
                      }
                      return Object.defineProperty(this, X, {
                        value: pt
                      }), pt;
                    }
                  };
                }
              }
              var ct = new e.Struct({
                firstCode: e.uint16,
                entryCount: e.uint16,
                idDelta: e.int16,
                idRangeOffset: e.uint16
              }), J = new e.Struct({
                startCharCode: e.uint32,
                endCharCode: e.uint32,
                glyphID: e.uint32
              }), nt = new e.Struct({
                startUnicodeValue: e.uint24,
                additionalCount: e.uint8
              }), yt = new e.Struct({
                unicodeValue: e.uint24,
                glyphID: e.uint16
              }), bt = new e.Array(nt, e.uint32), Tt = new e.Array(yt, e.uint32), It = new e.Struct({
                varSelector: e.uint24,
                defaultUVS: new e.Pointer(e.uint32, bt, {
                  type: "parent"
                }),
                nonDefaultUVS: new e.Pointer(e.uint32, Tt, {
                  type: "parent"
                })
              }), Lt = new e.VersionedStruct(e.uint16, {
                0: {
                  // Byte encoding
                  length: e.uint16,
                  // Total table length in bytes (set to 262 for format 0)
                  language: e.uint16,
                  // Language code for this encoding subtable, or zero if language-independent
                  codeMap: new e.LazyArray(e.uint8, 256)
                },
                2: {
                  // High-byte mapping (CJK)
                  length: e.uint16,
                  language: e.uint16,
                  subHeaderKeys: new e.Array(e.uint16, 256),
                  subHeaderCount: function(X) {
                    return Math.max.apply(Math, X.subHeaderKeys);
                  },
                  subHeaders: new e.LazyArray(ct, "subHeaderCount"),
                  glyphIndexArray: new e.LazyArray(e.uint16, "subHeaderCount")
                },
                4: {
                  // Segment mapping to delta values
                  length: e.uint16,
                  // Total table length in bytes
                  language: e.uint16,
                  // Language code
                  segCountX2: e.uint16,
                  segCount: function(X) {
                    return X.segCountX2 >> 1;
                  },
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16,
                  endCode: new e.LazyArray(e.uint16, "segCount"),
                  reservedPad: new e.Reserved(e.uint16),
                  // This value should be zero
                  startCode: new e.LazyArray(e.uint16, "segCount"),
                  idDelta: new e.LazyArray(e.int16, "segCount"),
                  idRangeOffset: new e.LazyArray(e.uint16, "segCount"),
                  glyphIndexArray: new e.LazyArray(e.uint16, function(ft) {
                    return (ft.length - ft._currentOffset) / 2;
                  })
                },
                6: {
                  // Trimmed table
                  length: e.uint16,
                  language: e.uint16,
                  firstCode: e.uint16,
                  entryCount: e.uint16,
                  glyphIndices: new e.LazyArray(e.uint16, "entryCount")
                },
                8: {
                  // mixed 16-bit and 32-bit coverage
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint16,
                  is32: new e.LazyArray(e.uint8, 8192),
                  nGroups: e.uint32,
                  groups: new e.LazyArray(J, "nGroups")
                },
                10: {
                  // Trimmed Array
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  firstCode: e.uint32,
                  entryCount: e.uint32,
                  glyphIndices: new e.LazyArray(e.uint16, "numChars")
                },
                12: {
                  // Segmented coverage
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  nGroups: e.uint32,
                  groups: new e.LazyArray(J, "nGroups")
                },
                13: {
                  // Many-to-one range mappings (same as 12 except for group.startGlyphID)
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  nGroups: e.uint32,
                  groups: new e.LazyArray(J, "nGroups")
                },
                14: {
                  // Unicode Variation Sequences
                  length: e.uint32,
                  numRecords: e.uint32,
                  varSelectors: new e.LazyArray(It, "numRecords")
                }
              }), zt = new e.Struct({
                platformID: e.uint16,
                // Platform identifier
                encodingID: e.uint16,
                // Platform-specific encoding identifier
                table: new e.Pointer(e.uint32, Lt, {
                  type: "parent",
                  lazy: !0
                })
              }), Q = new e.Struct({
                version: e.uint16,
                numSubtables: e.uint16,
                tables: new e.Array(zt, "numSubtables")
              }), gt = new e.Struct({
                version: e.int32,
                // 0x00010000 (version 1.0)
                revision: e.int32,
                // set by font manufacturer
                checkSumAdjustment: e.uint32,
                magicNumber: e.uint32,
                // set to 0x5F0F3CF5
                flags: e.uint16,
                unitsPerEm: e.uint16,
                // range from 64 to 16384
                created: new e.Array(e.int32, 2),
                modified: new e.Array(e.int32, 2),
                xMin: e.int16,
                // for all glyph bounding boxes
                yMin: e.int16,
                // for all glyph bounding boxes
                xMax: e.int16,
                // for all glyph bounding boxes
                yMax: e.int16,
                // for all glyph bounding boxes
                macStyle: new e.Bitfield(e.uint16, ["bold", "italic", "underline", "outline", "shadow", "condensed", "extended"]),
                lowestRecPPEM: e.uint16,
                // smallest readable size in pixels
                fontDirectionHint: e.int16,
                indexToLocFormat: e.int16,
                // 0 for short offsets, 1 for long
                glyphDataFormat: e.int16
                // 0 for current format
              }), ht = new e.Struct({
                version: e.int32,
                ascent: e.int16,
                // Distance from baseline of highest ascender
                descent: e.int16,
                // Distance from baseline of lowest descender
                lineGap: e.int16,
                // Typographic line gap
                advanceWidthMax: e.uint16,
                // Maximum advance width value in 'hmtx' table
                minLeftSideBearing: e.int16,
                // Maximum advance width value in 'hmtx' table
                minRightSideBearing: e.int16,
                // Minimum right sidebearing value
                xMaxExtent: e.int16,
                caretSlopeRise: e.int16,
                // Used to calculate the slope of the cursor (rise/run); 1 for vertical
                caretSlopeRun: e.int16,
                // 0 for vertical
                caretOffset: e.int16,
                // Set to 0 for non-slanted fonts
                reserved: new e.Reserved(e.int16, 4),
                metricDataFormat: e.int16,
                // 0 for current format
                numberOfMetrics: e.uint16
                // Number of advance widths in 'hmtx' table
              }), st = new e.Struct({
                advance: e.uint16,
                bearing: e.int16
              }), xt = new e.Struct({
                metrics: new e.LazyArray(st, function(ft) {
                  return ft.parent.hhea.numberOfMetrics;
                }),
                bearings: new e.LazyArray(e.int16, function(ft) {
                  return ft.parent.maxp.numGlyphs - ft.parent.hhea.numberOfMetrics;
                })
              }), G = new e.Struct({
                version: e.int32,
                numGlyphs: e.uint16,
                // The number of glyphs in the font
                maxPoints: e.uint16,
                // Maximum points in a non-composite glyph
                maxContours: e.uint16,
                // Maximum contours in a non-composite glyph
                maxComponentPoints: e.uint16,
                // Maximum points in a composite glyph
                maxComponentContours: e.uint16,
                // Maximum contours in a composite glyph
                maxZones: e.uint16,
                // 1 if instructions do not use the twilight zone, 2 otherwise
                maxTwilightPoints: e.uint16,
                // Maximum points used in Z0
                maxStorage: e.uint16,
                // Number of Storage Area locations
                maxFunctionDefs: e.uint16,
                // Number of FDEFs
                maxInstructionDefs: e.uint16,
                // Number of IDEFs
                maxStackElements: e.uint16,
                // Maximum stack depth
                maxSizeOfInstructions: e.uint16,
                // Maximum byte count for glyph instructions
                maxComponentElements: e.uint16,
                // Maximum number of components referenced at âtop levelâ for any composite glyph
                maxComponentDepth: e.uint16
                // Maximum levels of recursion; 1 for simple components
              });
              function Ft(ft, X, rt) {
                return rt === void 0 && (rt = 0), ft === 1 && C[rt] ? C[rt] : z[ft][X];
              }
              var z = [
                // unicode
                ["utf16be", "utf16be", "utf16be", "utf16be", "utf16be", "utf16be"],
                // macintosh
                // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/
                // 0	Roman                 17	Malayalam
                // 1	Japanese	            18	Sinhalese
                // 2	Traditional Chinese	  19	Burmese
                // 3	Korean	              20	Khmer
                // 4	Arabic	              21	Thai
                // 5	Hebrew	              22	Laotian
                // 6	Greek	                23	Georgian
                // 7	Russian	              24	Armenian
                // 8	RSymbol	              25	Simplified Chinese
                // 9	Devanagari	          26	Tibetan
                // 10	Gurmukhi	            27	Mongolian
                // 11	Gujarati	            28	Geez
                // 12	Oriya	                29	Slavic
                // 13	Bengali	              30	Vietnamese
                // 14	Tamil	                31	Sindhi
                // 15	Telugu	              32	(Uninterpreted)
                // 16	Kannada
                ["macroman", "shift-jis", "big5", "euc-kr", "iso-8859-6", "iso-8859-8", "macgreek", "maccyrillic", "symbol", "Devanagari", "Gurmukhi", "Gujarati", "Oriya", "Bengali", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhalese", "Burmese", "Khmer", "macthai", "Laotian", "Georgian", "Armenian", "gb-2312-80", "Tibetan", "Mongolian", "Geez", "maccenteuro", "Vietnamese", "Sindhi"],
                // ISO (deprecated)
                ["ascii"],
                // windows
                // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx
                ["symbol", "utf16be", "shift-jis", "gb18030", "big5", "wansung", "johab", null, null, null, "utf16be"]
              ], C = {
                15: "maciceland",
                17: "macturkish",
                18: "maccroatian",
                24: "maccenteuro",
                25: "maccenteuro",
                26: "maccenteuro",
                27: "maccenteuro",
                28: "maccenteuro",
                30: "maciceland",
                37: "macromania",
                38: "maccenteuro",
                39: "maccenteuro",
                40: "maccenteuro",
                143: "macinuit",
                // Unsupported by iconv-lite
                146: "macgaelic"
                // Unsupported by iconv-lite
              }, k = [
                // unicode
                [],
                {
                  // macintosh
                  0: "en",
                  30: "fo",
                  60: "ks",
                  90: "rw",
                  1: "fr",
                  31: "fa",
                  61: "ku",
                  91: "rn",
                  2: "de",
                  32: "ru",
                  62: "sd",
                  92: "ny",
                  3: "it",
                  33: "zh",
                  63: "bo",
                  93: "mg",
                  4: "nl",
                  34: "nl-BE",
                  64: "ne",
                  94: "eo",
                  5: "sv",
                  35: "ga",
                  65: "sa",
                  128: "cy",
                  6: "es",
                  36: "sq",
                  66: "mr",
                  129: "eu",
                  7: "da",
                  37: "ro",
                  67: "bn",
                  130: "ca",
                  8: "pt",
                  38: "cz",
                  68: "as",
                  131: "la",
                  9: "no",
                  39: "sk",
                  69: "gu",
                  132: "qu",
                  10: "he",
                  40: "si",
                  70: "pa",
                  133: "gn",
                  11: "ja",
                  41: "yi",
                  71: "or",
                  134: "ay",
                  12: "ar",
                  42: "sr",
                  72: "ml",
                  135: "tt",
                  13: "fi",
                  43: "mk",
                  73: "kn",
                  136: "ug",
                  14: "el",
                  44: "bg",
                  74: "ta",
                  137: "dz",
                  15: "is",
                  45: "uk",
                  75: "te",
                  138: "jv",
                  16: "mt",
                  46: "be",
                  76: "si",
                  139: "su",
                  17: "tr",
                  47: "uz",
                  77: "my",
                  140: "gl",
                  18: "hr",
                  48: "kk",
                  78: "km",
                  141: "af",
                  19: "zh-Hant",
                  49: "az-Cyrl",
                  79: "lo",
                  142: "br",
                  20: "ur",
                  50: "az-Arab",
                  80: "vi",
                  143: "iu",
                  21: "hi",
                  51: "hy",
                  81: "id",
                  144: "gd",
                  22: "th",
                  52: "ka",
                  82: "tl",
                  145: "gv",
                  23: "ko",
                  53: "mo",
                  83: "ms",
                  146: "ga",
                  24: "lt",
                  54: "ky",
                  84: "ms-Arab",
                  147: "to",
                  25: "pl",
                  55: "tg",
                  85: "am",
                  148: "el-polyton",
                  26: "hu",
                  56: "tk",
                  86: "ti",
                  149: "kl",
                  27: "es",
                  57: "mn-CN",
                  87: "om",
                  150: "az",
                  28: "lv",
                  58: "mn",
                  88: "so",
                  151: "nn",
                  29: "se",
                  59: "ps",
                  89: "sw"
                },
                // ISO (deprecated)
                [],
                {
                  // windows                                        
                  1078: "af",
                  16393: "en-IN",
                  1159: "rw",
                  1074: "tn",
                  1052: "sq",
                  6153: "en-IE",
                  1089: "sw",
                  1115: "si",
                  1156: "gsw",
                  8201: "en-JM",
                  1111: "kok",
                  1051: "sk",
                  1118: "am",
                  17417: "en-MY",
                  1042: "ko",
                  1060: "sl",
                  5121: "ar-DZ",
                  5129: "en-NZ",
                  1088: "ky",
                  11274: "es-AR",
                  15361: "ar-BH",
                  13321: "en-PH",
                  1108: "lo",
                  16394: "es-BO",
                  3073: "ar",
                  18441: "en-SG",
                  1062: "lv",
                  13322: "es-CL",
                  2049: "ar-IQ",
                  7177: "en-ZA",
                  1063: "lt",
                  9226: "es-CO",
                  11265: "ar-JO",
                  11273: "en-TT",
                  2094: "dsb",
                  5130: "es-CR",
                  13313: "ar-KW",
                  2057: "en-GB",
                  1134: "lb",
                  7178: "es-DO",
                  12289: "ar-LB",
                  1033: "en",
                  1071: "mk",
                  12298: "es-EC",
                  4097: "ar-LY",
                  12297: "en-ZW",
                  2110: "ms-BN",
                  17418: "es-SV",
                  6145: "ary",
                  1061: "et",
                  1086: "ms",
                  4106: "es-GT",
                  8193: "ar-OM",
                  1080: "fo",
                  1100: "ml",
                  18442: "es-HN",
                  16385: "ar-QA",
                  1124: "fil",
                  1082: "mt",
                  2058: "es-MX",
                  1025: "ar-SA",
                  1035: "fi",
                  1153: "mi",
                  19466: "es-NI",
                  10241: "ar-SY",
                  2060: "fr-BE",
                  1146: "arn",
                  6154: "es-PA",
                  7169: "aeb",
                  3084: "fr-CA",
                  1102: "mr",
                  15370: "es-PY",
                  14337: "ar-AE",
                  1036: "fr",
                  1148: "moh",
                  10250: "es-PE",
                  9217: "ar-YE",
                  5132: "fr-LU",
                  1104: "mn",
                  20490: "es-PR",
                  1067: "hy",
                  6156: "fr-MC",
                  2128: "mn-CN",
                  3082: "es",
                  1101: "as",
                  4108: "fr-CH",
                  1121: "ne",
                  1034: "es",
                  2092: "az-Cyrl",
                  1122: "fy",
                  1044: "nb",
                  21514: "es-US",
                  1068: "az",
                  1110: "gl",
                  2068: "nn",
                  14346: "es-UY",
                  1133: "ba",
                  1079: "ka",
                  1154: "oc",
                  8202: "es-VE",
                  1069: "eu",
                  3079: "de-AT",
                  1096: "or",
                  2077: "sv-FI",
                  1059: "be",
                  1031: "de",
                  1123: "ps",
                  1053: "sv",
                  2117: "bn",
                  5127: "de-LI",
                  1045: "pl",
                  1114: "syr",
                  1093: "bn-IN",
                  4103: "de-LU",
                  1046: "pt",
                  1064: "tg",
                  8218: "bs-Cyrl",
                  2055: "de-CH",
                  2070: "pt-PT",
                  2143: "tzm",
                  5146: "bs",
                  1032: "el",
                  1094: "pa",
                  1097: "ta",
                  1150: "br",
                  1135: "kl",
                  1131: "qu-BO",
                  1092: "tt",
                  1026: "bg",
                  1095: "gu",
                  2155: "qu-EC",
                  1098: "te",
                  1027: "ca",
                  1128: "ha",
                  3179: "qu",
                  1054: "th",
                  3076: "zh-HK",
                  1037: "he",
                  1048: "ro",
                  1105: "bo",
                  5124: "zh-MO",
                  1081: "hi",
                  1047: "rm",
                  1055: "tr",
                  2052: "zh",
                  1038: "hu",
                  1049: "ru",
                  1090: "tk",
                  4100: "zh-SG",
                  1039: "is",
                  9275: "smn",
                  1152: "ug",
                  1028: "zh-TW",
                  1136: "ig",
                  4155: "smj-NO",
                  1058: "uk",
                  1155: "co",
                  1057: "id",
                  5179: "smj",
                  1070: "hsb",
                  1050: "hr",
                  1117: "iu",
                  3131: "se-FI",
                  1056: "ur",
                  4122: "hr-BA",
                  2141: "iu-Latn",
                  1083: "se",
                  2115: "uz-Cyrl",
                  1029: "cs",
                  2108: "ga",
                  2107: "se-SE",
                  1091: "uz",
                  1030: "da",
                  1076: "xh",
                  8251: "sms",
                  1066: "vi",
                  1164: "prs",
                  1077: "zu",
                  6203: "sma-NO",
                  1106: "cy",
                  1125: "dv",
                  1040: "it",
                  7227: "sms",
                  1160: "wo",
                  2067: "nl-BE",
                  2064: "it-CH",
                  1103: "sa",
                  1157: "sah",
                  1043: "nl",
                  1041: "ja",
                  7194: "sr-Cyrl-BA",
                  1144: "ii",
                  3081: "en-AU",
                  1099: "kn",
                  3098: "sr",
                  1130: "yo",
                  10249: "en-BZ",
                  1087: "kk",
                  6170: "sr-Latn-BA",
                  4105: "en-CA",
                  1107: "km",
                  2074: "sr-Latn",
                  9225: "en-029",
                  1158: "quc",
                  1132: "nso"
                }
              ], V = new e.Struct({
                platformID: e.uint16,
                encodingID: e.uint16,
                languageID: e.uint16,
                nameID: e.uint16,
                length: e.uint16,
                string: new e.Pointer(e.uint16, new e.String("length", function(ft) {
                  return Ft(ft.platformID, ft.encodingID, ft.languageID);
                }), {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.parent.stringOffset;
                  },
                  allowNull: !1
                })
              }), ot = new e.Struct({
                length: e.uint16,
                tag: new e.Pointer(e.uint16, new e.String("length", "utf16be"), {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.stringOffset;
                  }
                })
              }), et = new e.VersionedStruct(e.uint16, {
                0: {
                  count: e.uint16,
                  stringOffset: e.uint16,
                  records: new e.Array(V, "count")
                },
                1: {
                  count: e.uint16,
                  stringOffset: e.uint16,
                  records: new e.Array(V, "count"),
                  langTagCount: e.uint16,
                  langTags: new e.Array(ot, "langTagCount")
                }
              }), tt = [
                "copyright",
                "fontFamily",
                "fontSubfamily",
                "uniqueSubfamily",
                "fullName",
                "version",
                "postscriptName",
                // Note: A font may have only one PostScript name and that name must be ASCII.
                "trademark",
                "manufacturer",
                "designer",
                "description",
                "vendorURL",
                "designerURL",
                "license",
                "licenseURL",
                null,
                // reserved
                "preferredFamily",
                "preferredSubfamily",
                "compatibleFull",
                "sampleText",
                "postscriptCIDFontName",
                "wwsFamilyName",
                "wwsSubfamilyName"
              ];
              et.process = function(ft) {
                for (var X = {}, rt = i(this.records), B; !(B = rt()).done; ) {
                  var U = B.value, H = k[U.platformID][U.languageID];
                  H == null && this.langTags != null && U.languageID >= 32768 && (H = this.langTags[U.languageID - 32768].tag), H == null && (H = U.platformID + "-" + U.languageID);
                  var ut = U.nameID >= 256 ? "fontFeatures" : tt[U.nameID] || U.nameID;
                  X[ut] == null && (X[ut] = {});
                  var pt = X[ut];
                  U.nameID >= 256 && (pt = pt[U.nameID] || (pt[U.nameID] = {})), (typeof U.string == "string" || typeof pt[H] != "string") && (pt[H] = U.string);
                }
                this.records = X;
              }, et.preEncode = function() {
                if (!Array.isArray(this.records)) {
                  this.version = 0;
                  var ft = [];
                  for (var X in this.records) {
                    var rt = this.records[X];
                    X !== "fontFeatures" && (ft.push({
                      platformID: 3,
                      encodingID: 1,
                      languageID: 1033,
                      nameID: tt.indexOf(X),
                      length: s.byteLength(rt.en, "utf16le"),
                      string: rt.en
                    }), X === "postscriptName" && ft.push({
                      platformID: 1,
                      encodingID: 0,
                      languageID: 0,
                      nameID: tt.indexOf(X),
                      length: rt.en.length,
                      string: rt.en
                    }));
                  }
                  this.records = ft, this.count = ft.length, this.stringOffset = et.size(this, null, !1);
                }
              };
              var At = new e.VersionedStruct(e.uint16, {
                header: {
                  xAvgCharWidth: e.int16,
                  // average weighted advance width of lower case letters and space
                  usWeightClass: e.uint16,
                  // visual weight of stroke in glyphs
                  usWidthClass: e.uint16,
                  // relative change from the normal aspect ratio (width to height ratio)
                  fsType: new e.Bitfield(e.uint16, [
                    // Indicates font embedding licensing rights
                    null,
                    "noEmbedding",
                    "viewOnly",
                    "editable",
                    null,
                    null,
                    null,
                    null,
                    "noSubsetting",
                    "bitmapOnly"
                  ]),
                  ySubscriptXSize: e.int16,
                  // recommended horizontal size in pixels for subscripts
                  ySubscriptYSize: e.int16,
                  // recommended vertical size in pixels for subscripts
                  ySubscriptXOffset: e.int16,
                  // recommended horizontal offset for subscripts
                  ySubscriptYOffset: e.int16,
                  // recommended vertical offset form the baseline for subscripts
                  ySuperscriptXSize: e.int16,
                  // recommended horizontal size in pixels for superscripts
                  ySuperscriptYSize: e.int16,
                  // recommended vertical size in pixels for superscripts
                  ySuperscriptXOffset: e.int16,
                  // recommended horizontal offset for superscripts
                  ySuperscriptYOffset: e.int16,
                  // recommended vertical offset from the baseline for superscripts
                  yStrikeoutSize: e.int16,
                  // width of the strikeout stroke
                  yStrikeoutPosition: e.int16,
                  // position of the strikeout stroke relative to the baseline
                  sFamilyClass: e.int16,
                  // classification of font-family design
                  panose: new e.Array(e.uint8, 10),
                  // describe the visual characteristics of a given typeface
                  ulCharRange: new e.Array(e.uint32, 4),
                  vendorID: new e.String(4),
                  // four character identifier for the font vendor
                  fsSelection: new e.Bitfield(e.uint16, [
                    // bit field containing information about the font
                    "italic",
                    "underscore",
                    "negative",
                    "outlined",
                    "strikeout",
                    "bold",
                    "regular",
                    "useTypoMetrics",
                    "wws",
                    "oblique"
                  ]),
                  usFirstCharIndex: e.uint16,
                  // The minimum Unicode index in this font
                  usLastCharIndex: e.uint16
                  // The maximum Unicode index in this font
                },
                // The Apple version of this table ends here, but the Microsoft one continues on...
                0: {},
                1: {
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2)
                },
                2: {
                  // these should be common with version 1 somehow
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2),
                  xHeight: e.int16,
                  capHeight: e.int16,
                  defaultChar: e.uint16,
                  breakChar: e.uint16,
                  maxContent: e.uint16
                },
                5: {
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2),
                  xHeight: e.int16,
                  capHeight: e.int16,
                  defaultChar: e.uint16,
                  breakChar: e.uint16,
                  maxContent: e.uint16,
                  usLowerOpticalPointSize: e.uint16,
                  usUpperOpticalPointSize: e.uint16
                }
              }), Nt = At.versions;
              Nt[3] = Nt[4] = Nt[2];
              var Kt = new e.VersionedStruct(e.fixed32, {
                header: {
                  // these fields exist at the top of all versions
                  italicAngle: e.fixed32,
                  // Italic angle in counter-clockwise degrees from the vertical.
                  underlinePosition: e.int16,
                  // Suggested distance of the top of the underline from the baseline
                  underlineThickness: e.int16,
                  // Suggested values for the underline thickness
                  isFixedPitch: e.uint32,
                  // Whether the font is monospaced
                  minMemType42: e.uint32,
                  // Minimum memory usage when a TrueType font is downloaded as a Type 42 font
                  maxMemType42: e.uint32,
                  // Maximum memory usage when a TrueType font is downloaded as a Type 42 font
                  minMemType1: e.uint32,
                  // Minimum memory usage when a TrueType font is downloaded as a Type 1 font
                  maxMemType1: e.uint32
                  // Maximum memory usage when a TrueType font is downloaded as a Type 1 font
                },
                1: {},
                // version 1 has no additional fields
                2: {
                  numberOfGlyphs: e.uint16,
                  glyphNameIndex: new e.Array(e.uint16, "numberOfGlyphs"),
                  names: new e.Array(new e.String(e.uint8))
                },
                2.5: {
                  numberOfGlyphs: e.uint16,
                  offsets: new e.Array(e.uint8, "numberOfGlyphs")
                },
                3: {},
                // version 3 has no additional fields
                4: {
                  map: new e.Array(e.uint32, function(ft) {
                    return ft.parent.maxp.numGlyphs;
                  })
                }
              }), Vt = new e.Struct({
                controlValues: new e.Array(e.int16)
              }), Ot = new e.Struct({
                instructions: new e.Array(e.uint8)
              }), ie = new e.VersionedStruct("head.indexToLocFormat", {
                0: {
                  offsets: new e.Array(e.uint16)
                },
                1: {
                  offsets: new e.Array(e.uint32)
                }
              });
              ie.process = function() {
                if (this.version === 0)
                  for (var ft = 0; ft < this.offsets.length; ft++)
                    this.offsets[ft] <<= 1;
              }, ie.preEncode = function() {
                if (this.version === 0)
                  for (var ft = 0; ft < this.offsets.length; ft++)
                    this.offsets[ft] >>>= 1;
              };
              var Ae = new e.Struct({
                controlValueProgram: new e.Array(e.uint8)
              }), be = new e.Array(new e.Buffer()), de = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.type = rt;
                }
                var X = ft.prototype;
                return X.getCFFVersion = function(B) {
                  for (; B && !B.hdrSize; )
                    B = B.parent;
                  return B ? B.version : -1;
                }, X.decode = function(B, U) {
                  var H = this.getCFFVersion(U), ut = H >= 2 ? B.readUInt32BE() : B.readUInt16BE();
                  if (ut === 0)
                    return [];
                  var pt = B.readUInt8(), vt;
                  if (pt === 1)
                    vt = e.uint8;
                  else if (pt === 2)
                    vt = e.uint16;
                  else if (pt === 3)
                    vt = e.uint24;
                  else if (pt === 4)
                    vt = e.uint32;
                  else
                    throw new Error("Bad offset size in CFFIndex: ".concat(pt, " ").concat(B.pos));
                  for (var dt = [], Bt = B.pos + (ut + 1) * pt - 1, Xt = vt.decode(B), fe = 0; fe < ut; fe++) {
                    var $t = vt.decode(B);
                    if (this.type != null) {
                      var he = B.pos;
                      B.pos = Bt + Xt, U.length = $t - Xt, dt.push(this.type.decode(B, U)), B.pos = he;
                    } else
                      dt.push({
                        offset: Bt + Xt,
                        length: $t - Xt
                      });
                    Xt = $t;
                  }
                  return B.pos = Bt + Xt, dt;
                }, X.size = function(B, U) {
                  var H = 2;
                  if (B.length === 0)
                    return H;
                  for (var ut = this.type || new e.Buffer(), pt = 1, vt = 0; vt < B.length; vt++) {
                    var dt = B[vt];
                    pt += ut.size(dt, U);
                  }
                  var Bt;
                  if (pt <= 255)
                    Bt = e.uint8;
                  else if (pt <= 65535)
                    Bt = e.uint16;
                  else if (pt <= 16777215)
                    Bt = e.uint24;
                  else if (pt <= 4294967295)
                    Bt = e.uint32;
                  else
                    throw new Error("Bad offset in CFFIndex");
                  return H += 1 + Bt.size() * (B.length + 1), H += pt - 1, H;
                }, X.encode = function(B, U, H) {
                  if (B.writeUInt16BE(U.length), U.length !== 0) {
                    for (var ut = this.type || new e.Buffer(), pt = [], vt = 1, dt = i(U), Bt; !(Bt = dt()).done; ) {
                      var Xt = Bt.value, fe = ut.size(Xt, H);
                      pt.push(fe), vt += fe;
                    }
                    var $t;
                    if (vt <= 255)
                      $t = e.uint8;
                    else if (vt <= 65535)
                      $t = e.uint16;
                    else if (vt <= 16777215)
                      $t = e.uint24;
                    else if (vt <= 4294967295)
                      $t = e.uint32;
                    else
                      throw new Error("Bad offset in CFFIndex");
                    B.writeUInt8($t.size()), vt = 1, $t.encode(B, vt);
                    for (var he = 0, me = pt; he < me.length; he++) {
                      var Fe = me[he];
                      vt += Fe, $t.encode(B, vt);
                    }
                    for (var je = i(U), tr; !(tr = je()).done; ) {
                      var Ze = tr.value;
                      ut.encode(B, Ze, H);
                    }
                  }
                }, ft;
              }(), Se = 15, Wt = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"], _t = {
                ".": 10,
                E: 11,
                "E-": 12,
                "-": 14
              }, ce = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(rt, B) {
                  if (32 <= B && B <= 246)
                    return B - 139;
                  if (247 <= B && B <= 250)
                    return (B - 247) * 256 + rt.readUInt8() + 108;
                  if (251 <= B && B <= 254)
                    return -(B - 251) * 256 - rt.readUInt8() - 108;
                  if (B === 28)
                    return rt.readInt16BE();
                  if (B === 29)
                    return rt.readInt32BE();
                  if (B === 30) {
                    for (var U = ""; ; ) {
                      var H = rt.readUInt8(), ut = H >> 4;
                      if (ut === Se)
                        break;
                      U += Wt[ut];
                      var pt = H & 15;
                      if (pt === Se)
                        break;
                      U += Wt[pt];
                    }
                    return parseFloat(U);
                  }
                  return null;
                }, ft.size = function(rt) {
                  if (rt.forceLarge && (rt = 32768), (rt | 0) !== rt) {
                    var B = "" + rt;
                    return 1 + Math.ceil((B.length + 1) / 2);
                  } else
                    return -107 <= rt && rt <= 107 ? 1 : 108 <= rt && rt <= 1131 || -1131 <= rt && rt <= -108 ? 2 : -32768 <= rt && rt <= 32767 ? 3 : 5;
                }, ft.encode = function(rt, B) {
                  var U = Number(B);
                  if (B.forceLarge)
                    return rt.writeUInt8(29), rt.writeInt32BE(U);
                  if ((U | 0) !== U) {
                    rt.writeUInt8(30);
                    for (var H = "" + U, ut = 0; ut < H.length; ut += 2) {
                      var pt = H[ut], vt = _t[pt] || +pt;
                      if (ut === H.length - 1)
                        var dt = Se;
                      else
                        var Bt = H[ut + 1], dt = _t[Bt] || +Bt;
                      rt.writeUInt8(vt << 4 | dt & 15);
                    }
                    if (dt !== Se)
                      return rt.writeUInt8(Se << 4);
                  } else
                    return -107 <= U && U <= 107 ? rt.writeUInt8(U + 139) : 108 <= U && U <= 1131 ? (U -= 108, rt.writeUInt8((U >> 8) + 247), rt.writeUInt8(U & 255)) : -1131 <= U && U <= -108 ? (U = -U - 108, rt.writeUInt8((U >> 8) + 251), rt.writeUInt8(U & 255)) : -32768 <= U && U <= 32767 ? (rt.writeUInt8(28), rt.writeInt16BE(U)) : (rt.writeUInt8(29), rt.writeInt32BE(U));
                }, ft;
              }(), pe = /* @__PURE__ */ function() {
                function ft(rt) {
                  rt === void 0 && (rt = []), this.ops = rt, this.fields = {};
                  for (var B = i(rt), U; !(U = B()).done; ) {
                    var H = U.value, ut = Array.isArray(H[0]) ? H[0][0] << 8 | H[0][1] : H[0];
                    this.fields[ut] = H;
                  }
                }
                var X = ft.prototype;
                return X.decodeOperands = function(B, U, H, ut) {
                  var pt = this;
                  if (Array.isArray(B))
                    return ut.map(function(vt, dt) {
                      return pt.decodeOperands(B[dt], U, H, [vt]);
                    });
                  if (B.decode != null)
                    return B.decode(U, H, ut);
                  switch (B) {
                    case "number":
                    case "offset":
                    case "sid":
                      return ut[0];
                    case "boolean":
                      return !!ut[0];
                    default:
                      return ut;
                  }
                }, X.encodeOperands = function(B, U, H, ut) {
                  var pt = this;
                  return Array.isArray(B) ? ut.map(function(vt, dt) {
                    return pt.encodeOperands(B[dt], U, H, vt)[0];
                  }) : B.encode != null ? B.encode(U, ut, H) : typeof ut == "number" ? [ut] : typeof ut == "boolean" ? [+ut] : Array.isArray(ut) ? ut : [ut];
                }, X.decode = function(B, U) {
                  var H = B.pos + U.length, ut = {}, pt = [];
                  Object.defineProperties(ut, {
                    parent: {
                      value: U
                    },
                    _startOffset: {
                      value: B.pos
                    }
                  });
                  for (var vt in this.fields) {
                    var dt = this.fields[vt];
                    ut[dt[1]] = dt[3];
                  }
                  for (; B.pos < H; ) {
                    var Bt = B.readUInt8();
                    if (Bt < 28) {
                      Bt === 12 && (Bt = Bt << 8 | B.readUInt8());
                      var Xt = this.fields[Bt];
                      if (!Xt)
                        throw new Error("Unknown operator ".concat(Bt));
                      var fe = this.decodeOperands(Xt[2], B, ut, pt);
                      fe != null && (fe instanceof x.PropertyDescriptor ? Object.defineProperty(ut, Xt[1], fe) : ut[Xt[1]] = fe), pt = [];
                    } else
                      pt.push(ce.decode(B, Bt));
                  }
                  return ut;
                }, X.size = function(B, U, H) {
                  H === void 0 && (H = !0);
                  var ut = {
                    parent: U,
                    val: B,
                    pointerSize: 0,
                    startOffset: U.startOffset || 0
                  }, pt = 0;
                  for (var vt in this.fields) {
                    var dt = this.fields[vt], Bt = B[dt[1]];
                    if (!(Bt == null || S(Bt, dt[3]))) {
                      for (var Xt = this.encodeOperands(dt[2], null, ut, Bt), fe = i(Xt), $t; !($t = fe()).done; ) {
                        var he = $t.value;
                        pt += ce.size(he);
                      }
                      var me = Array.isArray(dt[0]) ? dt[0] : [dt[0]];
                      pt += me.length;
                    }
                  }
                  return H && (pt += ut.pointerSize), pt;
                }, X.encode = function(B, U, H) {
                  var ut = {
                    pointers: [],
                    startOffset: B.pos,
                    parent: H,
                    val: U,
                    pointerSize: 0
                  };
                  ut.pointerOffset = B.pos + this.size(U, ut, !1);
                  for (var pt = i(this.ops), vt; !(vt = pt()).done; ) {
                    var dt = vt.value, Bt = U[dt[1]];
                    if (!(Bt == null || S(Bt, dt[3]))) {
                      for (var Xt = this.encodeOperands(dt[2], B, ut, Bt), fe = i(Xt), $t; !($t = fe()).done; ) {
                        var he = $t.value;
                        ce.encode(B, he);
                      }
                      for (var me = Array.isArray(dt[0]) ? dt[0] : [dt[0]], Fe = i(me), je; !(je = Fe()).done; ) {
                        var tr = je.value;
                        B.writeUInt8(tr);
                      }
                    }
                  }
                  for (var Ze = 0; Ze < ut.pointers.length; ) {
                    var vr = ut.pointers[Ze++];
                    vr.type.encode(B, vr.val, vr.parent);
                  }
                }, ft;
              }(), we = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X(B, U) {
                  return U === void 0 && (U = {}), U.type == null && (U.type = "global"), ft.call(this, null, B, U) || this;
                }
                var rt = X.prototype;
                return rt.decode = function(U, H, ut) {
                  return this.offsetType = {
                    decode: function() {
                      return ut[0];
                    }
                  }, ft.prototype.decode.call(this, U, H, ut);
                }, rt.encode = function(U, H, ut) {
                  if (!U)
                    return this.offsetType = {
                      size: function() {
                        return 0;
                      }
                    }, this.size(H, ut), [new Be(0)];
                  var pt = null;
                  return this.offsetType = {
                    encode: function(dt, Bt) {
                      return pt = Bt;
                    }
                  }, ft.prototype.encode.call(this, U, H, ut), [new Be(pt)];
                }, X;
              }(e.Pointer), Be = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.val = rt, this.forceLarge = !0;
                }
                var X = ft.prototype;
                return X.valueOf = function() {
                  return this.val;
                }, ft;
              }(), Ie = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(rt, B, U) {
                  for (var H = U.pop(); U.length > H; )
                    U.pop();
                }, ft;
              }(), Dt = new pe([
                // key       name                    type                                          default
                [6, "BlueValues", "delta", null],
                [7, "OtherBlues", "delta", null],
                [8, "FamilyBlues", "delta", null],
                [9, "FamilyOtherBlues", "delta", null],
                [[12, 9], "BlueScale", "number", 0.039625],
                [[12, 10], "BlueShift", "number", 7],
                [[12, 11], "BlueFuzz", "number", 1],
                [10, "StdHW", "number", null],
                [11, "StdVW", "number", null],
                [[12, 12], "StemSnapH", "delta", null],
                [[12, 13], "StemSnapV", "delta", null],
                [[12, 14], "ForceBold", "boolean", !1],
                [[12, 17], "LanguageGroup", "number", 0],
                [[12, 18], "ExpansionFactor", "number", 0.06],
                [[12, 19], "initialRandomSeed", "number", 0],
                [20, "defaultWidthX", "number", 0],
                [21, "nominalWidthX", "number", 0],
                [22, "vsindex", "number", 0],
                [23, "blend", Ie, null],
                [19, "Subrs", new we(new de(), {
                  type: "local"
                }), null]
              ]), ue = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], lt = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], Y = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], j = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron"], wt = [".notdef", "space", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], it = [".notdef", "space", "dollaroldstyle", "dollarsuperior", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "hyphensuperior", "colonmonetary", "onefitted", "rupiah", "centoldstyle", "figuredash", "hypheninferior", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior"], Ht = new e.Struct({
                reserved: new e.Reserved(e.uint16),
                reqFeatureIndex: e.uint16,
                featureCount: e.uint16,
                featureIndexes: new e.Array(e.uint16, "featureCount")
              }), te = new e.Struct({
                tag: new e.String(4),
                langSys: new e.Pointer(e.uint16, Ht, {
                  type: "parent"
                })
              }), _ = new e.Struct({
                defaultLangSys: new e.Pointer(e.uint16, Ht),
                count: e.uint16,
                langSysRecords: new e.Array(te, "count")
              }), Qt = new e.Struct({
                tag: new e.String(4),
                script: new e.Pointer(e.uint16, _, {
                  type: "parent"
                })
              }), ee = new e.Array(Qt, e.uint16), Et = new e.Struct({
                featureParams: e.uint16,
                // pointer
                lookupCount: e.uint16,
                lookupListIndexes: new e.Array(e.uint16, "lookupCount")
              }), jt = new e.Struct({
                tag: new e.String(4),
                feature: new e.Pointer(e.uint16, Et, {
                  type: "parent"
                })
              }), le = new e.Array(jt, e.uint16), Ne = new e.Struct({
                markAttachmentType: e.uint8,
                flags: new e.Bitfield(e.uint8, ["rightToLeft", "ignoreBaseGlyphs", "ignoreLigatures", "ignoreMarks", "useMarkFilteringSet"])
              });
              function Oe(ft) {
                var X = new e.Struct({
                  lookupType: e.uint16,
                  flags: Ne,
                  subTableCount: e.uint16,
                  subTables: new e.Array(new e.Pointer(e.uint16, ft), "subTableCount"),
                  markFilteringSet: new e.Optional(e.uint16, function(rt) {
                    return rt.flags.flags.useMarkFilteringSet;
                  })
                });
                return new e.LazyArray(new e.Pointer(e.uint16, X), e.uint16);
              }
              var Ue = new e.Struct({
                start: e.uint16,
                end: e.uint16,
                startCoverageIndex: e.uint16
              }), Me = new e.VersionedStruct(e.uint16, {
                1: {
                  glyphCount: e.uint16,
                  glyphs: new e.Array(e.uint16, "glyphCount")
                },
                2: {
                  rangeCount: e.uint16,
                  rangeRecords: new e.Array(Ue, "rangeCount")
                }
              }), on = new e.Struct({
                start: e.uint16,
                end: e.uint16,
                class: e.uint16
              }), er = new e.VersionedStruct(e.uint16, {
                1: {
                  // Class array
                  startGlyph: e.uint16,
                  glyphCount: e.uint16,
                  classValueArray: new e.Array(e.uint16, "glyphCount")
                },
                2: {
                  // Class ranges
                  classRangeCount: e.uint16,
                  classRangeRecord: new e.Array(on, "classRangeCount")
                }
              }), Ye = new e.Struct({
                a: e.uint16,
                // startSize for hinting Device, outerIndex for VariationIndex
                b: e.uint16,
                // endSize for Device, innerIndex for VariationIndex
                deltaFormat: e.uint16
              }), Cr = new e.Struct({
                sequenceIndex: e.uint16,
                lookupListIndex: e.uint16
              }), Pr = new e.Struct({
                glyphCount: e.uint16,
                lookupCount: e.uint16,
                input: new e.Array(e.uint16, function(ft) {
                  return ft.glyphCount - 1;
                }),
                lookupRecords: new e.Array(Cr, "lookupCount")
              }), Jr = new e.Array(new e.Pointer(e.uint16, Pr), e.uint16), In = new e.Struct({
                glyphCount: e.uint16,
                lookupCount: e.uint16,
                classes: new e.Array(e.uint16, function(ft) {
                  return ft.glyphCount - 1;
                }),
                lookupRecords: new e.Array(Cr, "lookupCount")
              }), Gn = new e.Array(new e.Pointer(e.uint16, In), e.uint16), nr = new e.VersionedStruct(e.uint16, {
                1: {
                  // Simple context
                  coverage: new e.Pointer(e.uint16, Me),
                  ruleSetCount: e.uint16,
                  ruleSets: new e.Array(new e.Pointer(e.uint16, Jr), "ruleSetCount")
                },
                2: {
                  // Class-based context
                  coverage: new e.Pointer(e.uint16, Me),
                  classDef: new e.Pointer(e.uint16, er),
                  classSetCnt: e.uint16,
                  classSet: new e.Array(new e.Pointer(e.uint16, Gn), "classSetCnt")
                },
                3: {
                  glyphCount: e.uint16,
                  lookupCount: e.uint16,
                  coverages: new e.Array(new e.Pointer(e.uint16, Me), "glyphCount"),
                  lookupRecords: new e.Array(Cr, "lookupCount")
                }
              }), sn = new e.Struct({
                backtrackGlyphCount: e.uint16,
                backtrack: new e.Array(e.uint16, "backtrackGlyphCount"),
                inputGlyphCount: e.uint16,
                input: new e.Array(e.uint16, function(ft) {
                  return ft.inputGlyphCount - 1;
                }),
                lookaheadGlyphCount: e.uint16,
                lookahead: new e.Array(e.uint16, "lookaheadGlyphCount"),
                lookupCount: e.uint16,
                lookupRecords: new e.Array(Cr, "lookupCount")
              }), zr = new e.Array(new e.Pointer(e.uint16, sn), e.uint16), tn = new e.VersionedStruct(e.uint16, {
                1: {
                  // Simple context glyph substitution
                  coverage: new e.Pointer(e.uint16, Me),
                  chainCount: e.uint16,
                  chainRuleSets: new e.Array(new e.Pointer(e.uint16, zr), "chainCount")
                },
                2: {
                  // Class-based chaining context
                  coverage: new e.Pointer(e.uint16, Me),
                  backtrackClassDef: new e.Pointer(e.uint16, er),
                  inputClassDef: new e.Pointer(e.uint16, er),
                  lookaheadClassDef: new e.Pointer(e.uint16, er),
                  chainCount: e.uint16,
                  chainClassSet: new e.Array(new e.Pointer(e.uint16, zr), "chainCount")
                },
                3: {
                  // Coverage-based chaining context
                  backtrackGlyphCount: e.uint16,
                  backtrackCoverage: new e.Array(new e.Pointer(e.uint16, Me), "backtrackGlyphCount"),
                  inputGlyphCount: e.uint16,
                  inputCoverage: new e.Array(new e.Pointer(e.uint16, Me), "inputGlyphCount"),
                  lookaheadGlyphCount: e.uint16,
                  lookaheadCoverage: new e.Array(new e.Pointer(e.uint16, Me), "lookaheadGlyphCount"),
                  lookupCount: e.uint16,
                  lookupRecords: new e.Array(Cr, "lookupCount")
                }
              }), Gr = new e.Fixed(16, "BE", 14), Kn = new e.Struct({
                startCoord: Gr,
                peakCoord: Gr,
                endCoord: Gr
              }), Jn = new e.Struct({
                axisCount: e.uint16,
                regionCount: e.uint16,
                variationRegions: new e.Array(new e.Array(Kn, "axisCount"), "regionCount")
              }), ze = new e.Struct({
                shortDeltas: new e.Array(e.int16, function(ft) {
                  return ft.parent.shortDeltaCount;
                }),
                regionDeltas: new e.Array(e.int8, function(ft) {
                  return ft.parent.regionIndexCount - ft.parent.shortDeltaCount;
                }),
                deltas: function(X) {
                  return X.shortDeltas.concat(X.regionDeltas);
                }
              }), We = new e.Struct({
                itemCount: e.uint16,
                shortDeltaCount: e.uint16,
                regionIndexCount: e.uint16,
                regionIndexes: new e.Array(e.uint16, "regionIndexCount"),
                deltaSets: new e.Array(ze, "itemCount")
              }), _e = new e.Struct({
                format: e.uint16,
                variationRegionList: new e.Pointer(e.uint32, Jn),
                variationDataCount: e.uint16,
                itemVariationData: new e.Array(new e.Pointer(e.uint32, We), "variationDataCount")
              }), hr = new e.VersionedStruct(e.uint16, {
                1: (r = {
                  axisIndex: e.uint16
                }, r.axisIndex = e.uint16, r.filterRangeMinValue = Gr, r.filterRangeMaxValue = Gr, r)
              }), Cn = new e.Struct({
                conditionCount: e.uint16,
                conditionTable: new e.Array(new e.Pointer(e.uint32, hr), "conditionCount")
              }), En = new e.Struct({
                featureIndex: e.uint16,
                alternateFeatureTable: new e.Pointer(e.uint32, Et, {
                  type: "parent"
                })
              }), na = new e.Struct({
                version: e.fixed32,
                substitutionCount: e.uint16,
                substitutions: new e.Array(En, "substitutionCount")
              }), Ea = new e.Struct({
                conditionSet: new e.Pointer(e.uint32, Cn, {
                  type: "parent"
                }),
                featureTableSubstitution: new e.Pointer(e.uint32, na, {
                  type: "parent"
                })
              }), aa = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                featureVariationRecordCount: e.uint32,
                featureVariationRecords: new e.Array(Ea, "featureVariationRecordCount")
              }), ia = /* @__PURE__ */ function() {
                function ft(rt, B) {
                  this.predefinedOps = rt, this.type = B;
                }
                var X = ft.prototype;
                return X.decode = function(B, U, H) {
                  return this.predefinedOps[H[0]] ? this.predefinedOps[H[0]] : this.type.decode(B, U, H);
                }, X.size = function(B, U) {
                  return this.type.size(B, U);
                }, X.encode = function(B, U, H) {
                  var ut = this.predefinedOps.indexOf(U);
                  return ut !== -1 ? ut : this.type.encode(B, U, H);
                }, ft;
              }(), Jt = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.call(this, "UInt8") || this;
                }
                var rt = X.prototype;
                return rt.decode = function(U) {
                  return e.uint8.decode(U) & 127;
                }, X;
              }(e.Number), Pt = new e.Struct({
                first: e.uint16,
                nLeft: e.uint8
              }), ne = new e.Struct({
                first: e.uint16,
                nLeft: e.uint16
              }), Rt = new e.VersionedStruct(new Jt(), {
                0: {
                  nCodes: e.uint8,
                  codes: new e.Array(e.uint8, "nCodes")
                },
                1: {
                  nRanges: e.uint8,
                  ranges: new e.Array(Pt, "nRanges")
                }
                // TODO: supplement?
              }), Mt = new ia([lt, Y], new we(Rt, {
                lazy: !0
              })), kt = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var rt = X.prototype;
                return rt.decode = function(U, H) {
                  for (var ut = x.resolveLength(this.length, U, H), pt = 0, vt = []; pt < ut; ) {
                    var dt = this.type.decode(U, H);
                    dt.offset = pt, pt += dt.nLeft + 1, vt.push(dt);
                  }
                  return vt;
                }, X;
              }(e.Array), Gt = new e.VersionedStruct(e.uint8, {
                0: {
                  glyphs: new e.Array(e.uint16, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                },
                1: {
                  ranges: new kt(Pt, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                },
                2: {
                  ranges: new kt(ne, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                }
              }), re = new ia([j, wt, it], new we(Gt, {
                lazy: !0
              })), Ut = new e.Struct({
                first: e.uint16,
                fd: e.uint8
              }), oe = new e.Struct({
                first: e.uint32,
                fd: e.uint16
              }), Yt = new e.VersionedStruct(e.uint8, {
                0: {
                  fds: new e.Array(e.uint8, function(ft) {
                    return ft.parent.CharStrings.length;
                  })
                },
                3: {
                  nRanges: e.uint16,
                  ranges: new e.Array(Ut, "nRanges"),
                  sentinel: e.uint16
                },
                4: {
                  nRanges: e.uint32,
                  ranges: new e.Array(oe, "nRanges"),
                  sentinel: e.uint32
                }
              }), xe = new we(Dt), Pe = /* @__PURE__ */ function() {
                function ft() {
                }
                var X = ft.prototype;
                return X.decode = function(B, U, H) {
                  return U.length = H[0], xe.decode(B, U, [H[1]]);
                }, X.size = function(B, U) {
                  return [Dt.size(B, U, !1), xe.size(B, U)[0]];
                }, X.encode = function(B, U, H) {
                  return [Dt.size(U, H, !1), xe.encode(B, U, H)[0]];
                }, ft;
              }(), Re = new pe([
                // key       name                   type(s)                                 default
                [18, "Private", new Pe(), null],
                [[12, 38], "FontName", "sid", null],
                [[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]],
                [[12, 5], "PaintType", "number", 0]
              ]), Ge = new pe([
                // key       name                   type(s)                                 default
                [[12, 30], "ROS", ["sid", "sid", "number"], null],
                [0, "version", "sid", null],
                [1, "Notice", "sid", null],
                [[12, 0], "Copyright", "sid", null],
                [2, "FullName", "sid", null],
                [3, "FamilyName", "sid", null],
                [4, "Weight", "sid", null],
                [[12, 1], "isFixedPitch", "boolean", !1],
                [[12, 2], "ItalicAngle", "number", 0],
                [[12, 3], "UnderlinePosition", "number", -100],
                [[12, 4], "UnderlineThickness", "number", 50],
                [[12, 5], "PaintType", "number", 0],
                [[12, 6], "CharstringType", "number", 2],
                [[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]],
                [13, "UniqueID", "number", null],
                [5, "FontBBox", "array", [0, 0, 0, 0]],
                [[12, 8], "StrokeWidth", "number", 0],
                [14, "XUID", "array", null],
                [15, "charset", re, j],
                [16, "Encoding", Mt, lt],
                [17, "CharStrings", new we(new de()), null],
                [18, "Private", new Pe(), null],
                [[12, 20], "SyntheticBase", "number", null],
                [[12, 21], "PostScript", "sid", null],
                [[12, 22], "BaseFontName", "sid", null],
                [[12, 23], "BaseFontBlend", "delta", null],
                // CID font specific
                [[12, 31], "CIDFontVersion", "number", 0],
                [[12, 32], "CIDFontRevision", "number", 0],
                [[12, 33], "CIDFontType", "number", 0],
                [[12, 34], "CIDCount", "number", 8720],
                [[12, 35], "UIDBase", "number", null],
                [[12, 37], "FDSelect", new we(Yt), null],
                [[12, 36], "FDArray", new we(new de(Re)), null],
                [[12, 38], "FontName", "sid", null]
              ]), Qe = new e.Struct({
                length: e.uint16,
                itemVariationStore: _e
              }), ar = new pe([[[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]], [17, "CharStrings", new we(new de()), null], [[12, 37], "FDSelect", new we(Yt), null], [[12, 36], "FDArray", new we(new de(Re)), null], [24, "vstore", new we(Qe), null], [25, "maxstack", "number", 193]]), ge = new e.VersionedStruct(e.fixed16, {
                1: {
                  hdrSize: e.uint8,
                  offSize: e.uint8,
                  nameIndex: new de(new e.String("length")),
                  topDictIndex: new de(Ge),
                  stringIndex: new de(new e.String("length")),
                  globalSubrIndex: new de()
                },
                2: {
                  hdrSize: e.uint8,
                  length: e.uint16,
                  topDict: ar,
                  globalSubrIndex: new de()
                }
              }), Le = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.stream = rt, this.decode();
                }
                ft.decode = function(B) {
                  return new ft(B);
                };
                var X = ft.prototype;
                return X.decode = function() {
                  this.stream.pos;
                  var B = ge.decode(this.stream);
                  for (var U in B) {
                    var H = B[U];
                    this[U] = H;
                  }
                  if (this.version < 2) {
                    if (this.topDictIndex.length !== 1)
                      throw new Error("Only a single font is allowed in CFF");
                    this.topDict = this.topDictIndex[0];
                  }
                  return this.isCIDFont = this.topDict.ROS != null, this;
                }, X.string = function(B) {
                  return this.version >= 2 ? null : B < ue.length ? ue[B] : this.stringIndex[B - ue.length];
                }, X.getCharString = function(B) {
                  return this.stream.pos = this.topDict.CharStrings[B].offset, this.stream.readBuffer(this.topDict.CharStrings[B].length);
                }, X.getGlyphName = function(B) {
                  if (this.version >= 2 || this.isCIDFont)
                    return null;
                  var U = this.topDict.charset;
                  if (Array.isArray(U))
                    return U[B];
                  if (B === 0)
                    return ".notdef";
                  switch (B -= 1, U.version) {
                    case 0:
                      return this.string(U.glyphs[B]);
                    case 1:
                    case 2:
                      for (var H = 0; H < U.ranges.length; H++) {
                        var ut = U.ranges[H];
                        if (ut.offset <= B && B <= ut.offset + ut.nLeft)
                          return this.string(ut.first + (B - ut.offset));
                      }
                      break;
                  }
                  return null;
                }, X.fdForGlyph = function(B) {
                  if (!this.topDict.FDSelect)
                    return null;
                  switch (this.topDict.FDSelect.version) {
                    case 0:
                      return this.topDict.FDSelect.fds[B];
                    case 3:
                    case 4:
                      for (var U = this.topDict.FDSelect.ranges, H = 0, ut = U.length - 1; H <= ut; ) {
                        var pt = H + ut >> 1;
                        if (B < U[pt].first)
                          ut = pt - 1;
                        else if (pt < ut && B >= U[pt + 1].first)
                          H = pt + 1;
                        else
                          return U[pt].fd;
                      }
                    default:
                      throw new Error("Unknown FDSelect version: ".concat(this.topDict.FDSelect.version));
                  }
                }, X.privateDictForGlyph = function(B) {
                  if (this.topDict.FDSelect) {
                    var U = this.fdForGlyph(B);
                    return this.topDict.FDArray[U] ? this.topDict.FDArray[U].Private : null;
                  }
                  return this.version < 2 ? this.topDict.Private : this.topDict.FDArray[0].Private;
                }, o(ft, [{
                  key: "postscriptName",
                  get: function() {
                    return this.version < 2 ? this.nameIndex[0] : null;
                  }
                }, {
                  key: "fullName",
                  get: function() {
                    return this.string(this.topDict.FullName);
                  }
                }, {
                  key: "familyName",
                  get: function() {
                    return this.string(this.topDict.FamilyName);
                  }
                }]), ft;
              }(), $e = new e.Struct({
                glyphIndex: e.uint16,
                vertOriginY: e.int16
              }), He = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                defaultVertOriginY: e.int16,
                numVertOriginYMetrics: e.uint16,
                metrics: new e.Array($e, "numVertOriginYMetrics")
              }), ir = new e.Struct({
                height: e.uint8,
                width: e.uint8,
                horiBearingX: e.int8,
                horiBearingY: e.int8,
                horiAdvance: e.uint8,
                vertBearingX: e.int8,
                vertBearingY: e.int8,
                vertAdvance: e.uint8
              }), Ke = new e.Struct({
                height: e.uint8,
                width: e.uint8,
                bearingX: e.int8,
                bearingY: e.int8,
                advance: e.uint8
              }), dr = new e.Struct({
                glyph: e.uint16,
                xOffset: e.int8,
                yOffset: e.int8
              }), sr = function() {
              }, Tr = function() {
              };
              new e.VersionedStruct("version", {
                1: {
                  metrics: Ke,
                  data: sr
                },
                2: {
                  metrics: Ke,
                  data: Tr
                },
                // format 3 is deprecated
                // format 4 is not supported by Microsoft
                5: {
                  data: Tr
                },
                6: {
                  metrics: ir,
                  data: sr
                },
                7: {
                  metrics: ir,
                  data: Tr
                },
                8: {
                  metrics: Ke,
                  pad: new e.Reserved(e.uint8),
                  numComponents: e.uint16,
                  components: new e.Array(dr, "numComponents")
                },
                9: {
                  metrics: ir,
                  pad: new e.Reserved(e.uint8),
                  numComponents: e.uint16,
                  components: new e.Array(dr, "numComponents")
                },
                17: {
                  metrics: Ke,
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                },
                18: {
                  metrics: ir,
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                },
                19: {
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                }
              });
              var Wr = new e.Struct({
                ascender: e.int8,
                descender: e.int8,
                widthMax: e.uint8,
                caretSlopeNumerator: e.int8,
                caretSlopeDenominator: e.int8,
                caretOffset: e.int8,
                minOriginSB: e.int8,
                minAdvanceSB: e.int8,
                maxBeforeBL: e.int8,
                minAfterBL: e.int8,
                pad: new e.Reserved(e.int8, 2)
              }), Br = new e.Struct({
                glyphCode: e.uint16,
                offset: e.uint16
              }), Dr = new e.VersionedStruct(e.uint16, {
                header: {
                  imageFormat: e.uint16,
                  imageDataOffset: e.uint32
                },
                1: {
                  offsetArray: new e.Array(e.uint32, function(ft) {
                    return ft.parent.lastGlyphIndex - ft.parent.firstGlyphIndex + 1;
                  })
                },
                2: {
                  imageSize: e.uint32,
                  bigMetrics: ir
                },
                3: {
                  offsetArray: new e.Array(e.uint16, function(ft) {
                    return ft.parent.lastGlyphIndex - ft.parent.firstGlyphIndex + 1;
                  })
                },
                4: {
                  numGlyphs: e.uint32,
                  glyphArray: new e.Array(Br, function(ft) {
                    return ft.numGlyphs + 1;
                  })
                },
                5: {
                  imageSize: e.uint32,
                  bigMetrics: ir,
                  numGlyphs: e.uint32,
                  glyphCodeArray: new e.Array(e.uint16, "numGlyphs")
                }
              }), Rr = new e.Struct({
                firstGlyphIndex: e.uint16,
                lastGlyphIndex: e.uint16,
                subtable: new e.Pointer(e.uint32, Dr)
              }), rn = new e.Struct({
                indexSubTableArray: new e.Pointer(e.uint32, new e.Array(Rr, 1), {
                  type: "parent"
                }),
                indexTablesSize: e.uint32,
                numberOfIndexSubTables: e.uint32,
                colorRef: e.uint32,
                hori: Wr,
                vert: Wr,
                startGlyphIndex: e.uint16,
                endGlyphIndex: e.uint16,
                ppemX: e.uint8,
                ppemY: e.uint8,
                bitDepth: e.uint8,
                flags: new e.Bitfield(e.uint8, ["horizontal", "vertical"])
              }), Dn = new e.Struct({
                version: e.uint32,
                // 0x00020000
                numSizes: e.uint32,
                sizes: new e.Array(rn, "numSizes")
              }), ln = new e.Struct({
                ppem: e.uint16,
                resolution: e.uint16,
                imageOffsets: new e.Array(new e.Pointer(e.uint32, "void"), function(ft) {
                  return ft.parent.parent.maxp.numGlyphs + 1;
                })
              }), An = new e.Struct({
                version: e.uint16,
                flags: new e.Bitfield(e.uint16, ["renderOutlines"]),
                numImgTables: e.uint32,
                imageTables: new e.Array(new e.Pointer(e.uint32, ln), "numImgTables")
              }), Mn = new e.Struct({
                gid: e.uint16,
                // Glyph ID of layer glyph (must be in z-order from bottom to top).
                paletteIndex: e.uint16
                // Index value to use in the appropriate palette. This value must
              }), fn = new e.Struct({
                gid: e.uint16,
                // Glyph ID of reference glyph. This glyph is for reference only
                // and is not rendered for color.
                firstLayerIndex: e.uint16,
                // Index (from beginning of the Layer Records) to the layer record.
                // There will be numLayers consecutive entries for this base glyph.
                numLayers: e.uint16
              }), pn = new e.Struct({
                version: e.uint16,
                numBaseGlyphRecords: e.uint16,
                baseGlyphRecord: new e.Pointer(e.uint32, new e.Array(fn, "numBaseGlyphRecords")),
                layerRecords: new e.Pointer(e.uint32, new e.Array(Mn, "numLayerRecords"), {
                  lazy: !0
                }),
                numLayerRecords: e.uint16
              }), hn = new e.Struct({
                blue: e.uint8,
                green: e.uint8,
                red: e.uint8,
                alpha: e.uint8
              }), ii = new e.VersionedStruct(e.uint16, {
                header: {
                  numPaletteEntries: e.uint16,
                  numPalettes: e.uint16,
                  numColorRecords: e.uint16,
                  colorRecords: new e.Pointer(e.uint32, new e.Array(hn, "numColorRecords")),
                  colorRecordIndices: new e.Array(e.uint16, "numPalettes")
                },
                0: {},
                1: {
                  offsetPaletteTypeArray: new e.Pointer(e.uint32, new e.Array(e.uint32, "numPalettes")),
                  offsetPaletteLabelArray: new e.Pointer(e.uint32, new e.Array(e.uint16, "numPalettes")),
                  offsetPaletteEntryLabelArray: new e.Pointer(e.uint32, new e.Array(e.uint16, "numPaletteEntries"))
                }
              }), ga = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  coordinate: e.int16
                  // X or Y value, in design units
                },
                2: {
                  // Design units plus contour point
                  coordinate: e.int16,
                  // X or Y value, in design units
                  referenceGlyph: e.uint16,
                  // GlyphID of control glyph
                  baseCoordPoint: e.uint16
                  // Index of contour point on the referenceGlyph
                },
                3: {
                  // Design units plus Device table
                  coordinate: e.int16,
                  // X or Y value, in design units
                  deviceTable: new e.Pointer(e.uint16, Ye)
                  // Device table for X or Y value
                }
              }), oi = new e.Struct({
                defaultIndex: e.uint16,
                // Index of default baseline for this script-same index in the BaseTagList
                baseCoordCount: e.uint16,
                baseCoords: new e.Array(new e.Pointer(e.uint16, ga), "baseCoordCount")
              }), si = new e.Struct({
                tag: new e.String(4),
                // 4-byte feature identification tag-must match FeatureTag in FeatureList
                minCoord: new e.Pointer(e.uint16, ga, {
                  type: "parent"
                }),
                // May be NULL
                maxCoord: new e.Pointer(e.uint16, ga, {
                  type: "parent"
                })
                // May be NULL
              }), Za = new e.Struct({
                minCoord: new e.Pointer(e.uint16, ga),
                // May be NULL
                maxCoord: new e.Pointer(e.uint16, ga),
                // May be NULL
                featMinMaxCount: e.uint16,
                // May be 0
                featMinMaxRecords: new e.Array(si, "featMinMaxCount")
                // In alphabetical order
              }), ma = new e.Struct({
                tag: new e.String(4),
                // 4-byte language system identification tag
                minMax: new e.Pointer(e.uint16, Za, {
                  type: "parent"
                })
              }), Ya = new e.Struct({
                baseValues: new e.Pointer(e.uint16, oi),
                // May be NULL
                defaultMinMax: new e.Pointer(e.uint16, Za),
                // May be NULL
                baseLangSysCount: e.uint16,
                // May be 0
                baseLangSysRecords: new e.Array(ma, "baseLangSysCount")
                // in alphabetical order by BaseLangSysTag
              }), Ta = new e.Struct({
                tag: new e.String(4),
                // 4-byte script identification tag
                script: new e.Pointer(e.uint16, Ya, {
                  type: "parent"
                })
              }), kn = new e.Array(Ta, e.uint16), St = new e.Array(new e.String(4), e.uint16), Z = new e.Struct({
                baseTagList: new e.Pointer(e.uint16, St),
                // May be NULL
                baseScriptList: new e.Pointer(e.uint16, kn)
              }), W = new e.VersionedStruct(e.uint32, {
                header: {
                  horizAxis: new e.Pointer(e.uint16, Z),
                  // May be NULL
                  vertAxis: new e.Pointer(e.uint16, Z)
                  // May be NULL
                },
                65536: {},
                65537: {
                  itemVariationStore: new e.Pointer(e.uint32, _e)
                }
              }), at = new e.Array(e.uint16, e.uint16), q = new e.Struct({
                coverage: new e.Pointer(e.uint16, Me),
                glyphCount: e.uint16,
                attachPoints: new e.Array(new e.Pointer(e.uint16, at), "glyphCount")
              }), mt = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  coordinate: e.int16
                },
                2: {
                  // Contour point
                  caretValuePoint: e.uint16
                },
                3: {
                  // Design units plus Device table
                  coordinate: e.int16,
                  deviceTable: new e.Pointer(e.uint16, Ye)
                }
              }), Ct = new e.Array(new e.Pointer(e.uint16, mt), e.uint16), qt = new e.Struct({
                coverage: new e.Pointer(e.uint16, Me),
                ligGlyphCount: e.uint16,
                ligGlyphs: new e.Array(new e.Pointer(e.uint16, Ct), "ligGlyphCount")
              }), ae = new e.Struct({
                markSetTableFormat: e.uint16,
                markSetCount: e.uint16,
                coverage: new e.Array(new e.Pointer(e.uint32, Me), "markSetCount")
              }), ve = new e.VersionedStruct(e.uint32, {
                header: {
                  glyphClassDef: new e.Pointer(e.uint16, er),
                  attachList: new e.Pointer(e.uint16, q),
                  ligCaretList: new e.Pointer(e.uint16, qt),
                  markAttachClassDef: new e.Pointer(e.uint16, er)
                },
                65536: {},
                65538: {
                  markGlyphSetsDef: new e.Pointer(e.uint16, ae)
                },
                65539: {
                  markGlyphSetsDef: new e.Pointer(e.uint16, ae),
                  itemVariationStore: new e.Pointer(e.uint32, _e)
                }
              }), ye = new e.Bitfield(e.uint16, ["xPlacement", "yPlacement", "xAdvance", "yAdvance", "xPlaDevice", "yPlaDevice", "xAdvDevice", "yAdvDevice"]), Ce = {
                xPlacement: e.int16,
                yPlacement: e.int16,
                xAdvance: e.int16,
                yAdvance: e.int16,
                xPlaDevice: new e.Pointer(e.uint16, Ye, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                yPlaDevice: new e.Pointer(e.uint16, Ye, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                xAdvDevice: new e.Pointer(e.uint16, Ye, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                yAdvDevice: new e.Pointer(e.uint16, Ye, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                })
              }, Ee = /* @__PURE__ */ function() {
                function ft(rt) {
                  rt === void 0 && (rt = "valueFormat"), this.key = rt;
                }
                var X = ft.prototype;
                return X.buildStruct = function(B) {
                  for (var U = B; !U[this.key] && U.parent; )
                    U = U.parent;
                  if (U[this.key]) {
                    var H = {};
                    H.rel = function() {
                      return U._startOffset;
                    };
                    var ut = U[this.key];
                    for (var pt in ut)
                      ut[pt] && (H[pt] = Ce[pt]);
                    return new e.Struct(H);
                  }
                }, X.size = function(B, U) {
                  return this.buildStruct(U).size(B, U);
                }, X.decode = function(B, U) {
                  var H = this.buildStruct(U).decode(B, U);
                  return delete H.rel, H;
                }, ft;
              }(), De = new e.Struct({
                secondGlyph: e.uint16,
                value1: new Ee("valueFormat1"),
                value2: new Ee("valueFormat2")
              }), Ve = new e.Array(De, e.uint16), Xe = new e.Struct({
                value1: new Ee("valueFormat1"),
                value2: new Ee("valueFormat2")
              }), qe = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  xCoordinate: e.int16,
                  yCoordinate: e.int16
                },
                2: {
                  // Design units plus contour point
                  xCoordinate: e.int16,
                  yCoordinate: e.int16,
                  anchorPoint: e.uint16
                },
                3: {
                  // Design units plus Device tables
                  xCoordinate: e.int16,
                  yCoordinate: e.int16,
                  xDeviceTable: new e.Pointer(e.uint16, Ye),
                  yDeviceTable: new e.Pointer(e.uint16, Ye)
                }
              }), cr = new e.Struct({
                entryAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                }),
                exitAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                })
              }), Or = new e.Struct({
                class: e.uint16,
                markAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                })
              }), en = new e.Array(Or, e.uint16), br = new e.Array(new e.Pointer(e.uint16, qe), function(ft) {
                return ft.parent.classCount;
              }), Qr = new e.Array(br, e.uint16), bn = new e.Array(new e.Pointer(e.uint16, qe), function(ft) {
                return ft.parent.parent.classCount;
              }), _r = new e.Array(bn, e.uint16), wn = new e.Array(new e.Pointer(e.uint16, _r), e.uint16), On = new e.VersionedStruct("lookupType", {
                1: new e.VersionedStruct(e.uint16, {
                  // Single Adjustment
                  1: {
                    // Single positioning value
                    coverage: new e.Pointer(e.uint16, Me),
                    valueFormat: ye,
                    value: new Ee()
                  },
                  2: {
                    coverage: new e.Pointer(e.uint16, Me),
                    valueFormat: ye,
                    valueCount: e.uint16,
                    values: new e.LazyArray(new Ee(), "valueCount")
                  }
                }),
                2: new e.VersionedStruct(e.uint16, {
                  // Pair Adjustment Positioning
                  1: {
                    // Adjustments for glyph pairs
                    coverage: new e.Pointer(e.uint16, Me),
                    valueFormat1: ye,
                    valueFormat2: ye,
                    pairSetCount: e.uint16,
                    pairSets: new e.LazyArray(new e.Pointer(e.uint16, Ve), "pairSetCount")
                  },
                  2: {
                    // Class pair adjustment
                    coverage: new e.Pointer(e.uint16, Me),
                    valueFormat1: ye,
                    valueFormat2: ye,
                    classDef1: new e.Pointer(e.uint16, er),
                    classDef2: new e.Pointer(e.uint16, er),
                    class1Count: e.uint16,
                    class2Count: e.uint16,
                    classRecords: new e.LazyArray(new e.LazyArray(Xe, "class2Count"), "class1Count")
                  }
                }),
                3: {
                  // Cursive Attachment Positioning
                  format: e.uint16,
                  coverage: new e.Pointer(e.uint16, Me),
                  entryExitCount: e.uint16,
                  entryExitRecords: new e.Array(cr, "entryExitCount")
                },
                4: {
                  // MarkToBase Attachment Positioning
                  format: e.uint16,
                  markCoverage: new e.Pointer(e.uint16, Me),
                  baseCoverage: new e.Pointer(e.uint16, Me),
                  classCount: e.uint16,
                  markArray: new e.Pointer(e.uint16, en),
                  baseArray: new e.Pointer(e.uint16, Qr)
                },
                5: {
                  // MarkToLigature Attachment Positioning
                  format: e.uint16,
                  markCoverage: new e.Pointer(e.uint16, Me),
                  ligatureCoverage: new e.Pointer(e.uint16, Me),
                  classCount: e.uint16,
                  markArray: new e.Pointer(e.uint16, en),
                  ligatureArray: new e.Pointer(e.uint16, wn)
                },
                6: {
                  // MarkToMark Attachment Positioning
                  format: e.uint16,
                  mark1Coverage: new e.Pointer(e.uint16, Me),
                  mark2Coverage: new e.Pointer(e.uint16, Me),
                  classCount: e.uint16,
                  mark1Array: new e.Pointer(e.uint16, en),
                  mark2Array: new e.Pointer(e.uint16, Qr)
                },
                7: nr,
                // Contextual positioning
                8: tn,
                // Chaining contextual positioning
                9: {
                  // Extension Positioning
                  posFormat: e.uint16,
                  lookupType: e.uint16,
                  // cannot also be 9
                  extension: new e.Pointer(e.uint32, On)
                }
              });
              On.versions[9].extension.type = On;
              var ya = new e.VersionedStruct(e.uint32, {
                header: {
                  scriptList: new e.Pointer(e.uint16, ee),
                  featureList: new e.Pointer(e.uint16, le),
                  lookupList: new e.Pointer(e.uint16, new Oe(On))
                },
                65536: {},
                65537: {
                  featureVariations: new e.Pointer(e.uint32, aa)
                }
              }), ca = new e.Array(e.uint16, e.uint16), Ni = ca, ha = new e.Struct({
                glyph: e.uint16,
                compCount: e.uint16,
                components: new e.Array(e.uint16, function(ft) {
                  return ft.compCount - 1;
                })
              }), Fa = new e.Array(new e.Pointer(e.uint16, ha), e.uint16), xa = new e.VersionedStruct("lookupType", {
                1: new e.VersionedStruct(e.uint16, {
                  // Single Substitution
                  1: {
                    coverage: new e.Pointer(e.uint16, Me),
                    deltaGlyphID: e.int16
                  },
                  2: {
                    coverage: new e.Pointer(e.uint16, Me),
                    glyphCount: e.uint16,
                    substitute: new e.LazyArray(e.uint16, "glyphCount")
                  }
                }),
                2: {
                  // Multiple Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Me),
                  count: e.uint16,
                  sequences: new e.LazyArray(new e.Pointer(e.uint16, ca), "count")
                },
                3: {
                  // Alternate Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Me),
                  count: e.uint16,
                  alternateSet: new e.LazyArray(new e.Pointer(e.uint16, Ni), "count")
                },
                4: {
                  // Ligature Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Me),
                  count: e.uint16,
                  ligatureSets: new e.LazyArray(new e.Pointer(e.uint16, Fa), "count")
                },
                5: nr,
                // Contextual Substitution
                6: tn,
                // Chaining Contextual Substitution
                7: {
                  // Extension Substitution
                  substFormat: e.uint16,
                  lookupType: e.uint16,
                  // cannot also be 7
                  extension: new e.Pointer(e.uint32, xa)
                },
                8: {
                  // Reverse Chaining Contextual Single Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Me),
                  backtrackCoverage: new e.Array(new e.Pointer(e.uint16, Me), "backtrackGlyphCount"),
                  lookaheadGlyphCount: e.uint16,
                  lookaheadCoverage: new e.Array(new e.Pointer(e.uint16, Me), "lookaheadGlyphCount"),
                  glyphCount: e.uint16,
                  substitutes: new e.Array(e.uint16, "glyphCount")
                }
              });
              xa.versions[7].extension.type = xa;
              var ba = new e.VersionedStruct(e.uint32, {
                header: {
                  scriptList: new e.Pointer(e.uint16, ee),
                  featureList: new e.Pointer(e.uint16, le),
                  lookupList: new e.Pointer(e.uint16, new Oe(xa))
                },
                65536: {},
                65537: {
                  featureVariations: new e.Pointer(e.uint32, aa)
                }
              }), oa = new e.Array(e.uint16, e.uint16), Mi = new e.Struct({
                shrinkageEnableGSUB: new e.Pointer(e.uint16, oa),
                shrinkageDisableGSUB: new e.Pointer(e.uint16, oa),
                shrinkageEnableGPOS: new e.Pointer(e.uint16, oa),
                shrinkageDisableGPOS: new e.Pointer(e.uint16, oa),
                shrinkageJstfMax: new e.Pointer(e.uint16, new Oe(On)),
                extensionEnableGSUB: new e.Pointer(e.uint16, oa),
                extensionDisableGSUB: new e.Pointer(e.uint16, oa),
                extensionEnableGPOS: new e.Pointer(e.uint16, oa),
                extensionDisableGPOS: new e.Pointer(e.uint16, oa),
                extensionJstfMax: new e.Pointer(e.uint16, new Oe(On))
              }), ki = new e.Array(new e.Pointer(e.uint16, Mi), e.uint16), Ui = new e.Struct({
                tag: new e.String(4),
                jstfLangSys: new e.Pointer(e.uint16, ki)
              }), li = new e.Struct({
                extenderGlyphs: new e.Pointer(e.uint16, new e.Array(e.uint16, e.uint16)),
                // array of glyphs to extend line length
                defaultLangSys: new e.Pointer(e.uint16, ki),
                langSysCount: e.uint16,
                langSysRecords: new e.Array(Ui, "langSysCount")
              }), zi = new e.Struct({
                tag: new e.String(4),
                script: new e.Pointer(e.uint16, li, {
                  type: "parent"
                })
              }), Wi = new e.Struct({
                version: e.uint32,
                // should be 0x00010000
                scriptCount: e.uint16,
                scriptList: new e.Array(zi, "scriptCount")
              }), xo = /* @__PURE__ */ function() {
                function ft(rt) {
                  this._size = rt;
                }
                var X = ft.prototype;
                return X.decode = function(B, U) {
                  switch (this.size(0, U)) {
                    case 1:
                      return B.readUInt8();
                    case 2:
                      return B.readUInt16BE();
                    case 3:
                      return B.readUInt24BE();
                    case 4:
                      return B.readUInt32BE();
                  }
                }, X.size = function(B, U) {
                  return x.resolveLength(this._size, null, U);
                }, ft;
              }(), Hi = new e.Struct({
                entry: new xo(function(ft) {
                  return ((ft.parent.entryFormat & 48) >> 4) + 1;
                }),
                outerIndex: function(X) {
                  return X.entry >> (X.parent.entryFormat & 15) + 1;
                },
                innerIndex: function(X) {
                  return X.entry & (1 << (X.parent.entryFormat & 15) + 1) - 1;
                }
              }), da = new e.Struct({
                entryFormat: e.uint16,
                mapCount: e.uint16,
                mapData: new e.Array(Hi, "mapCount")
              }), ji = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                itemVariationStore: new e.Pointer(e.uint32, _e),
                advanceWidthMapping: new e.Pointer(e.uint32, da),
                LSBMapping: new e.Pointer(e.uint32, da),
                RSBMapping: new e.Pointer(e.uint32, da)
              }), Ia = new e.Struct({
                format: e.uint32,
                length: e.uint32,
                offset: e.uint32
              }), ws = new e.Struct({
                reserved: new e.Reserved(e.uint16, 2),
                cbSignature: e.uint32,
                // Length (in bytes) of the PKCS#7 packet in pbSignature
                signature: new e.Buffer("cbSignature")
              }), Ss = new e.Struct({
                ulVersion: e.uint32,
                // Version number of the DSIG table (0x00000001)
                usNumSigs: e.uint16,
                // Number of signatures in the table
                usFlag: e.uint16,
                // Permission flags
                signatures: new e.Array(Ia, "usNumSigs"),
                signatureBlocks: new e.Array(ws, "usNumSigs")
              }), jf = new e.Struct({
                rangeMaxPPEM: e.uint16,
                // Upper limit of range, in ppem
                rangeGaspBehavior: new e.Bitfield(e.uint16, [
                  // Flags describing desired rasterizer behavior
                  "grayscale",
                  "gridfit",
                  "symmetricSmoothing",
                  "symmetricGridfit"
                  // only in version 1, for ClearType
                ])
              }), Gf = new e.Struct({
                version: e.uint16,
                // set to 0
                numRanges: e.uint16,
                gaspRanges: new e.Array(jf, "numRanges")
                // Sorted by ppem
              }), Vf = new e.Struct({
                pixelSize: e.uint8,
                maximumWidth: e.uint8,
                widths: new e.Array(e.uint8, function(ft) {
                  return ft.parent.parent.maxp.numGlyphs;
                })
              }), Xf = new e.Struct({
                version: e.uint16,
                numRecords: e.int16,
                sizeDeviceRecord: e.int32,
                records: new e.Array(Vf, "numRecords")
              }), Zf = new e.Struct({
                left: e.uint16,
                right: e.uint16,
                value: e.int16
              }), P0 = new e.Struct({
                firstGlyph: e.uint16,
                nGlyphs: e.uint16,
                offsets: new e.Array(e.uint16, "nGlyphs"),
                max: function(X) {
                  return X.offsets.length && Math.max.apply(Math, X.offsets);
                }
              }), Yf = new e.Struct({
                off: function(X) {
                  return X._startOffset - X.parent.parent._startOffset;
                },
                len: function(X) {
                  return ((X.parent.leftTable.max - X.off) / X.parent.rowWidth + 1) * (X.parent.rowWidth / 2);
                },
                values: new e.LazyArray(e.int16, "len")
              }), B0 = new e.VersionedStruct("format", {
                0: {
                  nPairs: e.uint16,
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16,
                  pairs: new e.Array(Zf, "nPairs")
                },
                2: {
                  rowWidth: e.uint16,
                  leftTable: new e.Pointer(e.uint16, P0, {
                    type: "parent"
                  }),
                  rightTable: new e.Pointer(e.uint16, P0, {
                    type: "parent"
                  }),
                  array: new e.Pointer(e.uint16, Yf, {
                    type: "parent"
                  })
                },
                3: {
                  glyphCount: e.uint16,
                  kernValueCount: e.uint8,
                  leftClassCount: e.uint8,
                  rightClassCount: e.uint8,
                  flags: e.uint8,
                  kernValue: new e.Array(e.int16, "kernValueCount"),
                  leftClass: new e.Array(e.uint8, "glyphCount"),
                  rightClass: new e.Array(e.uint8, "glyphCount"),
                  kernIndex: new e.Array(e.uint8, function(ft) {
                    return ft.leftClassCount * ft.rightClassCount;
                  })
                }
              }), R0 = new e.VersionedStruct("version", {
                0: {
                  // Microsoft uses this format
                  subVersion: e.uint16,
                  // Microsoft has an extra sub-table version number
                  length: e.uint16,
                  // Length of the subtable, in bytes
                  format: e.uint8,
                  // Format of subtable
                  coverage: new e.Bitfield(e.uint8, [
                    "horizontal",
                    // 1 if table has horizontal data, 0 if vertical
                    "minimum",
                    // If set to 1, the table has minimum values. If set to 0, the table has kerning values.
                    "crossStream",
                    // If set to 1, kerning is perpendicular to the flow of the text
                    "override"
                    // If set to 1 the value in this table replaces the accumulated value
                  ]),
                  subtable: B0,
                  padding: new e.Reserved(e.uint8, function(ft) {
                    return ft.length - ft._currentOffset;
                  })
                },
                1: {
                  // Apple uses this format
                  length: e.uint32,
                  coverage: new e.Bitfield(e.uint8, [
                    null,
                    null,
                    null,
                    null,
                    null,
                    "variation",
                    // Set if table has variation kerning values
                    "crossStream",
                    // Set if table has cross-stream kerning values
                    "vertical"
                    // Set if table has vertical kerning values
                  ]),
                  format: e.uint8,
                  tupleIndex: e.uint16,
                  subtable: B0,
                  padding: new e.Reserved(e.uint8, function(ft) {
                    return ft.length - ft._currentOffset;
                  })
                }
              }), Kf = new e.VersionedStruct(e.uint16, {
                0: {
                  // Microsoft Version
                  nTables: e.uint16,
                  tables: new e.Array(R0, "nTables")
                },
                1: {
                  // Apple Version
                  reserved: new e.Reserved(e.uint16),
                  // the other half of the version number
                  nTables: e.uint32,
                  tables: new e.Array(R0, "nTables")
                }
              }), Jf = new e.Struct({
                version: e.uint16,
                numGlyphs: e.uint16,
                yPels: new e.Array(e.uint8, "numGlyphs")
              }), Qf = new e.Struct({
                version: e.uint16,
                fontNumber: e.uint32,
                pitch: e.uint16,
                xHeight: e.uint16,
                style: e.uint16,
                typeFamily: e.uint16,
                capHeight: e.uint16,
                symbolSet: e.uint16,
                typeface: new e.String(16),
                characterComplement: new e.String(8),
                fileName: new e.String(6),
                strokeWeight: new e.String(1),
                widthType: new e.String(1),
                serifStyle: e.uint8,
                reserved: new e.Reserved(e.uint8)
              }), _f = new e.Struct({
                bCharSet: e.uint8,
                // Character set
                xRatio: e.uint8,
                // Value to use for x-Ratio
                yStartRatio: e.uint8,
                // Starting y-Ratio value
                yEndRatio: e.uint8
                // Ending y-Ratio value
              }), $f = new e.Struct({
                yPelHeight: e.uint16,
                // yPelHeight to which values apply
                yMax: e.int16,
                // Maximum value (in pels) for this yPelHeight
                yMin: e.int16
                // Minimum value (in pels) for this yPelHeight
              }), qf = new e.Struct({
                recs: e.uint16,
                // Number of height records in this group
                startsz: e.uint8,
                // Starting yPelHeight
                endsz: e.uint8,
                // Ending yPelHeight
                entries: new e.Array($f, "recs")
                // The VDMX records
              }), tu = new e.Struct({
                version: e.uint16,
                // Version number (0 or 1)
                numRecs: e.uint16,
                // Number of VDMX groups present
                numRatios: e.uint16,
                // Number of aspect ratio groupings
                ratioRanges: new e.Array(_f, "numRatios"),
                // Ratio ranges
                offsets: new e.Array(e.uint16, "numRatios"),
                // Offset to the VDMX group for this ratio range
                groups: new e.Array(qf, "numRecs")
                // The actual VDMX groupings
              }), eu = new e.Struct({
                version: e.uint16,
                // Version number of the Vertical Header Table
                ascent: e.int16,
                // The vertical typographic ascender for this font
                descent: e.int16,
                // The vertical typographic descender for this font
                lineGap: e.int16,
                // The vertical typographic line gap for this font
                advanceHeightMax: e.int16,
                // The maximum advance height measurement found in the font
                minTopSideBearing: e.int16,
                // The minimum top side bearing measurement found in the font
                minBottomSideBearing: e.int16,
                // The minimum bottom side bearing measurement found in the font
                yMaxExtent: e.int16,
                caretSlopeRise: e.int16,
                // Caret slope (rise/run)
                caretSlopeRun: e.int16,
                caretOffset: e.int16,
                // Set value equal to 0 for nonslanted fonts
                reserved: new e.Reserved(e.int16, 4),
                metricDataFormat: e.int16,
                // Set to 0
                numberOfMetrics: e.uint16
                // Number of advance heights in the Vertical Metrics table
              }), ru = new e.Struct({
                advance: e.uint16,
                // The advance height of the glyph
                bearing: e.int16
                // The top sidebearing of the glyph
              }), nu = new e.Struct({
                metrics: new e.LazyArray(ru, function(ft) {
                  return ft.parent.vhea.numberOfMetrics;
                }),
                bearings: new e.LazyArray(e.int16, function(ft) {
                  return ft.parent.maxp.numGlyphs - ft.parent.vhea.numberOfMetrics;
                })
              }), L0 = new e.Fixed(16, "BE", 14), au = new e.Struct({
                fromCoord: L0,
                toCoord: L0
              }), iu = new e.Struct({
                pairCount: e.uint16,
                correspondence: new e.Array(au, "pairCount")
              }), ou = new e.Struct({
                version: e.fixed32,
                axisCount: e.uint32,
                segment: new e.Array(iu, "axisCount")
              }), su = /* @__PURE__ */ function() {
                function ft(rt, B, U) {
                  this.type = rt, this.stream = B, this.parent = U, this.base = this.stream.pos, this._items = [];
                }
                var X = ft.prototype;
                return X.getItem = function(B) {
                  if (this._items[B] == null) {
                    var U = this.stream.pos;
                    this.stream.pos = this.base + this.type.size(null, this.parent) * B, this._items[B] = this.type.decode(this.stream, this.parent), this.stream.pos = U;
                  }
                  return this._items[B];
                }, X.inspect = function() {
                  return "[UnboundedArray ".concat(this.type.constructor.name, "]");
                }, ft;
              }(), wa = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X(B) {
                  return ft.call(this, B, 0) || this;
                }
                var rt = X.prototype;
                return rt.decode = function(U, H) {
                  return new su(this.type, U, H);
                }, X;
              }(e.Array), Na = function(X) {
                X === void 0 && (X = e.uint16);
                var rt = /* @__PURE__ */ function() {
                  function pt(dt) {
                    this.type = dt;
                  }
                  var vt = pt.prototype;
                  return vt.decode = function(Bt, Xt) {
                    return Xt = Xt.parent.parent, this.type.decode(Bt, Xt);
                  }, vt.size = function(Bt, Xt) {
                    return Xt = Xt.parent.parent, this.type.size(Bt, Xt);
                  }, vt.encode = function(Bt, Xt, fe) {
                    return fe = fe.parent.parent, this.type.encode(Bt, Xt, fe);
                  }, pt;
                }();
                X = new rt(X);
                var B = new e.Struct({
                  unitSize: e.uint16,
                  nUnits: e.uint16,
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16
                }), U = new e.Struct({
                  lastGlyph: e.uint16,
                  firstGlyph: e.uint16,
                  value: X
                }), H = new e.Struct({
                  lastGlyph: e.uint16,
                  firstGlyph: e.uint16,
                  values: new e.Pointer(e.uint16, new e.Array(X, function(pt) {
                    return pt.lastGlyph - pt.firstGlyph + 1;
                  }), {
                    type: "parent"
                  })
                }), ut = new e.Struct({
                  glyph: e.uint16,
                  value: X
                });
                return new e.VersionedStruct(e.uint16, {
                  0: {
                    values: new wa(X)
                    // length == number of glyphs maybe?
                  },
                  2: {
                    binarySearchHeader: B,
                    segments: new e.Array(U, function(pt) {
                      return pt.binarySearchHeader.nUnits;
                    })
                  },
                  4: {
                    binarySearchHeader: B,
                    segments: new e.Array(H, function(pt) {
                      return pt.binarySearchHeader.nUnits;
                    })
                  },
                  6: {
                    binarySearchHeader: B,
                    segments: new e.Array(ut, function(pt) {
                      return pt.binarySearchHeader.nUnits;
                    })
                  },
                  8: {
                    firstGlyph: e.uint16,
                    count: e.uint16,
                    values: new e.Array(X, "count")
                  }
                });
              };
              function bo(ft, X) {
                ft === void 0 && (ft = {}), X === void 0 && (X = e.uint16);
                var rt = Object.assign({
                  newState: e.uint16,
                  flags: e.uint16
                }, ft), B = new e.Struct(rt), U = new wa(new e.Array(e.uint16, function(ut) {
                  return ut.nClasses;
                })), H = new e.Struct({
                  nClasses: e.uint32,
                  classTable: new e.Pointer(e.uint32, new Na(X)),
                  stateArray: new e.Pointer(e.uint32, U),
                  entryTable: new e.Pointer(e.uint32, new wa(B))
                });
                return H;
              }
              function lu(ft, X) {
                ft === void 0 && (ft = {}), X === void 0 && (X = e.uint16);
                var rt = new e.Struct({
                  version: function() {
                    return 8;
                  },
                  // simulate LookupTable
                  firstGlyph: e.uint16,
                  values: new e.Array(e.uint8, e.uint16)
                }), B = Object.assign({
                  newStateOffset: e.uint16,
                  // convert offset to stateArray index
                  newState: function(vt) {
                    return (vt.newStateOffset - (vt.parent.stateArray.base - vt.parent._startOffset)) / vt.parent.nClasses;
                  },
                  flags: e.uint16
                }, ft), U = new e.Struct(B), H = new wa(new e.Array(e.uint8, function(pt) {
                  return pt.nClasses;
                })), ut = new e.Struct({
                  nClasses: e.uint16,
                  classTable: new e.Pointer(e.uint16, rt),
                  stateArray: new e.Pointer(e.uint16, H),
                  entryTable: new e.Pointer(e.uint16, new wa(U))
                });
                return ut;
              }
              var fu = new e.VersionedStruct("format", {
                0: {
                  // Distance-based, no mapping
                  deltas: new e.Array(e.int16, 32)
                },
                1: {
                  // Distance-based, with mapping
                  deltas: new e.Array(e.int16, 32),
                  mappingData: new Na(e.uint16)
                },
                2: {
                  // Control point-based, no mapping
                  standardGlyph: e.uint16,
                  controlPoints: new e.Array(e.uint16, 32)
                },
                3: {
                  // Control point-based, with mapping
                  standardGlyph: e.uint16,
                  controlPoints: new e.Array(e.uint16, 32),
                  mappingData: new Na(e.uint16)
                }
              }), uu = new e.Struct({
                version: e.fixed32,
                format: e.uint16,
                defaultBaseline: e.uint16,
                subtable: fu
              }), cu = new e.Struct({
                setting: e.uint16,
                nameIndex: e.int16,
                name: function(X) {
                  return X.parent.parent.parent.name.records.fontFeatures[X.nameIndex];
                }
              }), hu = new e.Struct({
                feature: e.uint16,
                nSettings: e.uint16,
                settingTable: new e.Pointer(e.uint32, new e.Array(cu, "nSettings"), {
                  type: "parent"
                }),
                featureFlags: new e.Bitfield(e.uint8, [null, null, null, null, null, null, "hasDefault", "exclusive"]),
                defaultSetting: e.uint8,
                nameIndex: e.int16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameIndex];
                }
              }), du = new e.Struct({
                version: e.fixed32,
                featureNameCount: e.uint16,
                reserved1: new e.Reserved(e.uint16),
                reserved2: new e.Reserved(e.uint32),
                featureNames: new e.Array(hu, "featureNameCount")
              }), vu = new e.Struct({
                axisTag: new e.String(4),
                minValue: e.fixed32,
                defaultValue: e.fixed32,
                maxValue: e.fixed32,
                flags: e.uint16,
                nameID: e.uint16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameID];
                }
              }), pu = new e.Struct({
                nameID: e.uint16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameID];
                },
                flags: e.uint16,
                coord: new e.Array(e.fixed32, function(ft) {
                  return ft.parent.axisCount;
                }),
                postscriptNameID: new e.Optional(e.uint16, function(ft) {
                  return ft.parent.instanceSize - ft._currentOffset > 0;
                })
              }), gu = new e.Struct({
                version: e.fixed32,
                offsetToData: e.uint16,
                countSizePairs: e.uint16,
                axisCount: e.uint16,
                axisSize: e.uint16,
                instanceCount: e.uint16,
                instanceSize: e.uint16,
                axis: new e.Array(vu, "axisCount"),
                instance: new e.Array(pu, "instanceCount")
              }), mu = new e.Fixed(16, "BE", 14), yu = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(rt, B) {
                  return B.flags ? rt.readUInt32BE() : rt.readUInt16BE() * 2;
                }, ft;
              }(), xu = new e.Struct({
                version: e.uint16,
                reserved: new e.Reserved(e.uint16),
                axisCount: e.uint16,
                globalCoordCount: e.uint16,
                globalCoords: new e.Pointer(e.uint32, new e.Array(new e.Array(mu, "axisCount"), "globalCoordCount")),
                glyphCount: e.uint16,
                flags: e.uint16,
                offsetToData: e.uint32,
                offsets: new e.Array(new e.Pointer(yu, "void", {
                  relativeTo: function(X) {
                    return X.offsetToData;
                  },
                  allowNull: !1
                }), function(ft) {
                  return ft.glyphCount + 1;
                })
              }), bu = new e.Struct({
                length: e.uint16,
                coverage: e.uint16,
                subFeatureFlags: e.uint32,
                stateTable: new lu()
              }), wu = new e.Struct({
                justClass: e.uint32,
                beforeGrowLimit: e.fixed32,
                beforeShrinkLimit: e.fixed32,
                afterGrowLimit: e.fixed32,
                afterShrinkLimit: e.fixed32,
                growFlags: e.uint16,
                shrinkFlags: e.uint16
              }), Su = new e.Array(wu, e.uint32), Cu = new e.VersionedStruct("actionType", {
                0: {
                  // Decomposition action
                  lowerLimit: e.fixed32,
                  upperLimit: e.fixed32,
                  order: e.uint16,
                  glyphs: new e.Array(e.uint16, e.uint16)
                },
                1: {
                  // Unconditional add glyph action
                  addGlyph: e.uint16
                },
                2: {
                  // Conditional add glyph action
                  substThreshold: e.fixed32,
                  addGlyph: e.uint16,
                  substGlyph: e.uint16
                },
                3: {},
                // Stretch glyph action (no data, not supported by CoreText)
                4: {
                  // Ductile glyph action (not supported by CoreText)
                  variationAxis: e.uint32,
                  minimumLimit: e.fixed32,
                  noStretchValue: e.fixed32,
                  maximumLimit: e.fixed32
                },
                5: {
                  // Repeated add glyph action
                  flags: e.uint16,
                  glyph: e.uint16
                }
              }), Au = new e.Struct({
                actionClass: e.uint16,
                actionType: e.uint16,
                actionLength: e.uint32,
                actionData: Cu,
                padding: new e.Reserved(e.uint8, function(ft) {
                  return ft.actionLength - ft._currentOffset;
                })
              }), Eu = new e.Array(Au, e.uint32), Tu = new e.Struct({
                lookupTable: new Na(new e.Pointer(e.uint16, Eu))
              }), N0 = new e.Struct({
                classTable: new e.Pointer(e.uint16, bu, {
                  type: "parent"
                }),
                wdcOffset: e.uint16,
                postCompensationTable: new e.Pointer(e.uint16, Tu, {
                  type: "parent"
                }),
                widthDeltaClusters: new Na(new e.Pointer(e.uint16, Su, {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.wdcOffset;
                  }
                }))
              }), Fu = new e.Struct({
                version: e.uint32,
                format: e.uint16,
                horizontal: new e.Pointer(e.uint16, N0),
                vertical: new e.Pointer(e.uint16, N0)
              }), Iu = {
                action: e.uint16
              }, Du = {
                markIndex: e.uint16,
                currentIndex: e.uint16
              }, Ou = {
                currentInsertIndex: e.uint16,
                markedInsertIndex: e.uint16
              }, Pu = new e.Struct({
                items: new wa(new e.Pointer(e.uint32, new Na()))
              }), Bu = new e.VersionedStruct("type", {
                0: {
                  // Indic Rearrangement Subtable
                  stateTable: new bo()
                },
                1: {
                  // Contextual Glyph Substitution Subtable
                  stateTable: new bo(Du),
                  substitutionTable: new e.Pointer(e.uint32, Pu)
                },
                2: {
                  // Ligature subtable
                  stateTable: new bo(Iu),
                  ligatureActions: new e.Pointer(e.uint32, new wa(e.uint32)),
                  components: new e.Pointer(e.uint32, new wa(e.uint16)),
                  ligatureList: new e.Pointer(e.uint32, new wa(e.uint16))
                },
                4: {
                  // Non-contextual Glyph Substitution Subtable
                  lookupTable: new Na()
                },
                5: {
                  // Glyph Insertion Subtable
                  stateTable: new bo(Ou),
                  insertionActions: new e.Pointer(e.uint32, new wa(e.uint16))
                }
              }), Ru = new e.Struct({
                length: e.uint32,
                coverage: e.uint24,
                type: e.uint8,
                subFeatureFlags: e.uint32,
                table: Bu,
                padding: new e.Reserved(e.uint8, function(ft) {
                  return ft.length - ft._currentOffset;
                })
              }), Lu = new e.Struct({
                featureType: e.uint16,
                featureSetting: e.uint16,
                enableFlags: e.uint32,
                disableFlags: e.uint32
              }), Nu = new e.Struct({
                defaultFlags: e.uint32,
                chainLength: e.uint32,
                nFeatureEntries: e.uint32,
                nSubtables: e.uint32,
                features: new e.Array(Lu, "nFeatureEntries"),
                subtables: new e.Array(Ru, "nSubtables")
              }), Mu = new e.Struct({
                version: e.uint16,
                unused: new e.Reserved(e.uint16),
                nChains: e.uint32,
                chains: new e.Array(Nu, "nChains")
              }), ku = new e.Struct({
                left: e.int16,
                top: e.int16,
                right: e.int16,
                bottom: e.int16
              }), Uu = new e.Struct({
                version: e.fixed32,
                format: e.uint16,
                lookupTable: new Na(ku)
              }), lr = {};
              lr.cmap = Q, lr.head = gt, lr.hhea = ht, lr.hmtx = xt, lr.maxp = G, lr.name = et, lr["OS/2"] = At, lr.post = Kt, lr.fpgm = Ot, lr.loca = ie, lr.prep = Ae, lr["cvt "] = Vt, lr.glyf = be, lr["CFF "] = Le, lr.CFF2 = Le, lr.VORG = He, lr.EBLC = Dn, lr.CBLC = lr.EBLC, lr.sbix = An, lr.COLR = pn, lr.CPAL = ii, lr.BASE = W, lr.GDEF = ve, lr.GPOS = ya, lr.GSUB = ba, lr.JSTF = Wi, lr.HVAR = ji, lr.DSIG = Ss, lr.gasp = Gf, lr.hdmx = Xf, lr.kern = Kf, lr.LTSH = Jf, lr.PCLT = Qf, lr.VDMX = tu, lr.vhea = eu, lr.vmtx = nu, lr.avar = ou, lr.bsln = uu, lr.feat = du, lr.fvar = gu, lr.gvar = xu, lr.just = Fu, lr.morx = Mu, lr.opbd = Uu;
              var zu = new e.Struct({
                tag: new e.String(4),
                checkSum: e.uint32,
                offset: new e.Pointer(e.uint32, "void", {
                  type: "global"
                }),
                length: e.uint32
              }), wo = new e.Struct({
                tag: new e.String(4),
                numTables: e.uint16,
                searchRange: e.uint16,
                entrySelector: e.uint16,
                rangeShift: e.uint16,
                tables: new e.Array(zu, "numTables")
              });
              wo.process = function() {
                for (var ft = {}, X = i(this.tables), rt; !(rt = X()).done; ) {
                  var B = rt.value;
                  ft[B.tag] = B;
                }
                this.tables = ft;
              }, wo.preEncode = function(ft) {
                var X = [];
                for (var rt in this.tables) {
                  var B = this.tables[rt];
                  B && X.push({
                    tag: rt,
                    checkSum: 0,
                    offset: new e.VoidPointer(lr[rt], B),
                    length: lr[rt].size(B)
                  });
                }
                this.tag = "true", this.numTables = X.length, this.tables = X;
                var U = Math.floor(Math.log(this.numTables) / Math.LN2), H = Math.pow(2, U);
                this.searchRange = H * 16, this.entrySelector = Math.log(H) / Math.LN2, this.rangeShift = this.numTables * 16 - this.searchRange;
              };
              function So(ft, X) {
                for (var rt = 0, B = ft.length - 1; rt <= B; ) {
                  var U = rt + B >> 1, H = X(ft[U]);
                  if (H < 0)
                    B = U - 1;
                  else if (H > 0)
                    rt = U + 1;
                  else
                    return U;
                }
                return -1;
              }
              function fi(ft, X) {
                for (var rt = []; ft < X; )
                  rt.push(ft++);
                return rt;
              }
              var Ma;
              try {
                var Cs = t(32766);
              } catch (ft) {
              }
              var Wu = (Ma = /* @__PURE__ */ function() {
                function ft(rt) {
                  if (this.encoding = null, this.cmap = this.findSubtable(rt, [
                    // 32-bit subtables
                    [3, 10],
                    [0, 6],
                    [0, 4],
                    // 16-bit subtables
                    [3, 1],
                    [0, 3],
                    [0, 2],
                    [0, 1],
                    [0, 0]
                  ]), !this.cmap && Cs)
                    for (var B = i(rt.tables), U; !(U = B()).done; ) {
                      var H = U.value, ut = Ft(H.platformID, H.encodingID, H.table.language - 1);
                      Cs.encodingExists(ut) && (this.cmap = H.table, this.encoding = ut);
                    }
                  if (!this.cmap)
                    throw new Error("Could not find a supported cmap table");
                  this.uvs = this.findSubtable(rt, [[0, 5]]), this.uvs && this.uvs.version !== 14 && (this.uvs = null);
                }
                var X = ft.prototype;
                return X.findSubtable = function(B, U) {
                  for (var H = i(U), ut; !(ut = H()).done; )
                    for (var pt = ut.value, vt = pt[0], dt = pt[1], Bt = i(B.tables), Xt; !(Xt = Bt()).done; ) {
                      var fe = Xt.value;
                      if (fe.platformID === vt && fe.encodingID === dt)
                        return fe.table;
                    }
                  return null;
                }, X.lookup = function(B, U) {
                  if (this.encoding) {
                    var H = Cs.encode(String.fromCodePoint(B), this.encoding);
                    B = 0;
                    for (var ut = 0; ut < H.length; ut++)
                      B = B << 8 | H[ut];
                  } else if (U) {
                    var pt = this.getVariationSelector(B, U);
                    if (pt)
                      return pt;
                  }
                  var vt = this.cmap;
                  switch (vt.version) {
                    case 0:
                      return vt.codeMap.get(B) || 0;
                    case 4: {
                      for (var dt = 0, Bt = vt.segCount - 1; dt <= Bt; ) {
                        var Xt = dt + Bt >> 1;
                        if (B < vt.startCode.get(Xt))
                          Bt = Xt - 1;
                        else if (B > vt.endCode.get(Xt))
                          dt = Xt + 1;
                        else {
                          var fe = vt.idRangeOffset.get(Xt), $t = void 0;
                          if (fe === 0)
                            $t = B + vt.idDelta.get(Xt);
                          else {
                            var he = fe / 2 + (B - vt.startCode.get(Xt)) - (vt.segCount - Xt);
                            $t = vt.glyphIndexArray.get(he) || 0, $t !== 0 && ($t += vt.idDelta.get(Xt));
                          }
                          return $t & 65535;
                        }
                      }
                      return 0;
                    }
                    case 8:
                      throw new Error("TODO: cmap format 8");
                    case 6:
                    case 10:
                      return vt.glyphIndices.get(B - vt.firstCode) || 0;
                    case 12:
                    case 13: {
                      for (var me = 0, Fe = vt.nGroups - 1; me <= Fe; ) {
                        var je = me + Fe >> 1, tr = vt.groups.get(je);
                        if (B < tr.startCharCode)
                          Fe = je - 1;
                        else if (B > tr.endCharCode)
                          me = je + 1;
                        else
                          return vt.version === 12 ? tr.glyphID + (B - tr.startCharCode) : tr.glyphID;
                      }
                      return 0;
                    }
                    case 14:
                      throw new Error("TODO: cmap format 14");
                    default:
                      throw new Error("Unknown cmap format ".concat(vt.version));
                  }
                }, X.getVariationSelector = function(B, U) {
                  if (!this.uvs)
                    return 0;
                  var H = this.uvs.varSelectors.toArray(), ut = So(H, function(vt) {
                    return U - vt.varSelector;
                  }), pt = H[ut];
                  return ut !== -1 && pt.defaultUVS && (ut = So(pt.defaultUVS, function(vt) {
                    return B < vt.startUnicodeValue ? -1 : B > vt.startUnicodeValue + vt.additionalCount ? 1 : 0;
                  })), ut !== -1 && pt.nonDefaultUVS && (ut = So(pt.nonDefaultUVS, function(vt) {
                    return B - vt.unicodeValue;
                  }), ut !== -1) ? pt.nonDefaultUVS[ut].glyphID : 0;
                }, X.getCharacterSet = function() {
                  var B = this.cmap;
                  switch (B.version) {
                    case 0:
                      return fi(0, B.codeMap.length);
                    case 4: {
                      for (var U = [], H = B.endCode.toArray(), ut = 0; ut < H.length; ut++) {
                        var pt = H[ut] + 1, vt = B.startCode.get(ut);
                        U.push.apply(U, fi(vt, pt));
                      }
                      return U;
                    }
                    case 8:
                      throw new Error("TODO: cmap format 8");
                    case 6:
                    case 10:
                      return fi(B.firstCode, B.firstCode + B.glyphIndices.length);
                    case 12:
                    case 13: {
                      for (var dt = [], Bt = i(B.groups.toArray()), Xt; !(Xt = Bt()).done; ) {
                        var fe = Xt.value;
                        dt.push.apply(dt, fi(fe.startCharCode, fe.endCharCode + 1));
                      }
                      return dt;
                    }
                    case 14:
                      throw new Error("TODO: cmap format 14");
                    default:
                      throw new Error("Unknown cmap format ".concat(B.version));
                  }
                }, X.codePointsForGlyph = function(B) {
                  var U = this.cmap;
                  switch (U.version) {
                    case 0: {
                      for (var H = [], ut = 0; ut < 256; ut++)
                        U.codeMap.get(ut) === B && H.push(ut);
                      return H;
                    }
                    case 4: {
                      for (var pt = [], vt = 0; vt < U.segCount; vt++)
                        for (var dt = U.endCode.get(vt), Bt = U.startCode.get(vt), Xt = U.idRangeOffset.get(vt), fe = U.idDelta.get(vt), $t = Bt; $t <= dt; $t++) {
                          var he = 0;
                          if (Xt === 0)
                            he = $t + fe;
                          else {
                            var me = Xt / 2 + ($t - Bt) - (U.segCount - vt);
                            he = U.glyphIndexArray.get(me) || 0, he !== 0 && (he += fe);
                          }
                          he === B && pt.push($t);
                        }
                      return pt;
                    }
                    case 12: {
                      for (var Fe = [], je = i(U.groups.toArray()), tr; !(tr = je()).done; ) {
                        var Ze = tr.value;
                        B >= Ze.glyphID && B <= Ze.glyphID + (Ze.endCharCode - Ze.startCharCode) && Fe.push(Ze.startCharCode + (B - Ze.glyphID));
                      }
                      return Fe;
                    }
                    case 13: {
                      for (var vr = [], fr = i(U.groups.toArray()), gr; !(gr = fr()).done; ) {
                        var wr = gr.value;
                        B === wr.glyphID && vr.push.apply(vr, fi(wr.startCharCode, wr.endCharCode + 1));
                      }
                      return vr;
                    }
                    default:
                      throw new Error("Unknown cmap format ".concat(U.version));
                  }
                }, ft;
              }(), M(Ma.prototype, "getCharacterSet", [K], Object.getOwnPropertyDescriptor(Ma.prototype, "getCharacterSet"), Ma.prototype), M(Ma.prototype, "codePointsForGlyph", [K], Object.getOwnPropertyDescriptor(Ma.prototype, "codePointsForGlyph"), Ma.prototype), Ma), Hu = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.kern = rt.kern;
                }
                var X = ft.prototype;
                return X.process = function(B, U) {
                  for (var H = 0; H < B.length - 1; H++) {
                    var ut = B[H].id, pt = B[H + 1].id;
                    U[H].xAdvance += this.getKerning(ut, pt);
                  }
                }, X.getKerning = function(B, U) {
                  for (var H = 0, ut = i(this.kern.tables), pt; !(pt = ut()).done; ) {
                    var vt = pt.value;
                    if (!vt.coverage.crossStream) {
                      switch (vt.version) {
                        case 0:
                          if (!vt.coverage.horizontal)
                            continue;
                          break;
                        case 1:
                          if (vt.coverage.vertical || vt.coverage.variation)
                            continue;
                          break;
                        default:
                          throw new Error("Unsupported kerning table version ".concat(vt.version));
                      }
                      var dt = 0, Bt = vt.subtable;
                      switch (vt.format) {
                        case 0:
                          var Xt = So(Bt.pairs, function(me) {
                            return B - me.left || U - me.right;
                          });
                          Xt >= 0 && (dt = Bt.pairs[Xt].value);
                          break;
                        case 2:
                          var fe = 0, $t = 0;
                          B >= Bt.leftTable.firstGlyph && B < Bt.leftTable.firstGlyph + Bt.leftTable.nGlyphs ? fe = Bt.leftTable.offsets[B - Bt.leftTable.firstGlyph] : fe = Bt.array.off, U >= Bt.rightTable.firstGlyph && U < Bt.rightTable.firstGlyph + Bt.rightTable.nGlyphs && ($t = Bt.rightTable.offsets[U - Bt.rightTable.firstGlyph]);
                          var he = (fe + $t - Bt.array.off) / 2;
                          dt = Bt.array.values.get(he);
                          break;
                        case 3:
                          if (B >= Bt.glyphCount || U >= Bt.glyphCount)
                            return 0;
                          dt = Bt.kernValue[Bt.kernIndex[Bt.leftClass[B] * Bt.rightClassCount + Bt.rightClass[U]]];
                          break;
                        default:
                          throw new Error("Unsupported kerning sub-table format ".concat(vt.format));
                      }
                      vt.coverage.override ? H = dt : H += dt;
                    }
                  }
                  return H;
                }, ft;
              }(), ju = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.font = rt;
                }
                var X = ft.prototype;
                return X.positionGlyphs = function(B, U) {
                  for (var H = 0, ut = 0, pt = 0; pt < B.length; pt++) {
                    var vt = B[pt];
                    vt.isMark ? ut = pt : (H !== ut && this.positionCluster(B, U, H, ut), H = ut = pt);
                  }
                  return H !== ut && this.positionCluster(B, U, H, ut), U;
                }, X.positionCluster = function(B, U, H, ut) {
                  var pt = B[H], vt = pt.cbox.copy();
                  pt.codePoints.length > 1 && (vt.minX += (pt.codePoints.length - 1) * vt.width / pt.codePoints.length);
                  for (var dt = -U[H].xAdvance, Bt = 0, Xt = this.font.unitsPerEm / 16, fe = H + 1; fe <= ut; fe++) {
                    var $t = B[fe], he = $t.cbox, me = U[fe], Fe = this.getCombiningClass($t.codePoints[0]);
                    if (Fe !== "Not_Reordered") {
                      switch (me.xOffset = me.yOffset = 0, Fe) {
                        case "Double_Above":
                        case "Double_Below":
                          me.xOffset += vt.minX - he.width / 2 - he.minX;
                          break;
                        case "Attached_Below_Left":
                        case "Below_Left":
                        case "Above_Left":
                          me.xOffset += vt.minX - he.minX;
                          break;
                        case "Attached_Above_Right":
                        case "Below_Right":
                        case "Above_Right":
                          me.xOffset += vt.maxX - he.width - he.minX;
                          break;
                        default:
                          me.xOffset += vt.minX + (vt.width - he.width) / 2 - he.minX;
                      }
                      switch (Fe) {
                        case "Double_Below":
                        case "Below_Left":
                        case "Below":
                        case "Below_Right":
                        case "Attached_Below_Left":
                        case "Attached_Below":
                          (Fe === "Attached_Below_Left" || Fe === "Attached_Below") && (vt.minY += Xt), me.yOffset = -vt.minY - he.maxY, vt.minY += he.height;
                          break;
                        case "Double_Above":
                        case "Above_Left":
                        case "Above":
                        case "Above_Right":
                        case "Attached_Above":
                        case "Attached_Above_Right":
                          (Fe === "Attached_Above" || Fe === "Attached_Above_Right") && (vt.maxY += Xt), me.yOffset = vt.maxY - he.minY, vt.maxY += he.height;
                          break;
                      }
                      me.xAdvance = me.yAdvance = 0, me.xOffset += dt, me.yOffset += Bt;
                    } else
                      dt -= me.xAdvance, Bt -= me.yAdvance;
                  }
                }, X.getCombiningClass = function(B) {
                  var U = P.getCombiningClass(B);
                  if ((B & -256) === 3584) {
                    if (U === "Not_Reordered")
                      switch (B) {
                        case 3633:
                        case 3636:
                        case 3637:
                        case 3638:
                        case 3639:
                        case 3655:
                        case 3660:
                        case 3645:
                        case 3662:
                          return "Above_Right";
                        case 3761:
                        case 3764:
                        case 3765:
                        case 3766:
                        case 3767:
                        case 3771:
                        case 3788:
                        case 3789:
                          return "Above";
                        case 3772:
                          return "Below";
                      }
                    else if (B === 3642)
                      return "Below_Right";
                  }
                  switch (U) {
                    case "CCC10":
                    case "CCC11":
                    case "CCC12":
                    case "CCC13":
                    case "CCC14":
                    case "CCC15":
                    case "CCC16":
                    case "CCC17":
                    case "CCC18":
                    case "CCC20":
                    case "CCC22":
                      return "Below";
                    case "CCC23":
                      return "Attached_Above";
                    case "CCC24":
                      return "Above_Right";
                    case "CCC25":
                    case "CCC19":
                      return "Above_Left";
                    case "CCC26":
                      return "Above";
                    case "CCC21":
                      break;
                    case "CCC27":
                    case "CCC28":
                    case "CCC30":
                    case "CCC31":
                    case "CCC33":
                    case "CCC34":
                    case "CCC35":
                    case "CCC36":
                      return "Above";
                    case "CCC29":
                    case "CCC32":
                      return "Below";
                    case "CCC103":
                      return "Below_Right";
                    case "CCC107":
                      return "Above_Right";
                    case "CCC118":
                      return "Below";
                    case "CCC122":
                      return "Above";
                    case "CCC129":
                    case "CCC132":
                      return "Below";
                    case "CCC130":
                      return "Above";
                  }
                  return U;
                }, ft;
              }(), ui = /* @__PURE__ */ function() {
                function ft(rt, B, U, H) {
                  rt === void 0 && (rt = 1 / 0), B === void 0 && (B = 1 / 0), U === void 0 && (U = -1 / 0), H === void 0 && (H = -1 / 0), this.minX = rt, this.minY = B, this.maxX = U, this.maxY = H;
                }
                var X = ft.prototype;
                return X.addPoint = function(B, U) {
                  Math.abs(B) !== 1 / 0 && (B < this.minX && (this.minX = B), B > this.maxX && (this.maxX = B)), Math.abs(U) !== 1 / 0 && (U < this.minY && (this.minY = U), U > this.maxY && (this.maxY = U));
                }, X.copy = function() {
                  return new ft(this.minX, this.minY, this.maxX, this.maxY);
                }, o(ft, [{
                  key: "width",
                  get: function() {
                    return this.maxX - this.minX;
                  }
                  /**
                   * The height of the bounding box
                   * @type {number}
                   */
                }, {
                  key: "height",
                  get: function() {
                    return this.maxY - this.minY;
                  }
                }]), ft;
              }(), ci = {
                Caucasian_Albanian: "aghb",
                Arabic: "arab",
                Imperial_Aramaic: "armi",
                Armenian: "armn",
                Avestan: "avst",
                Balinese: "bali",
                Bamum: "bamu",
                Bassa_Vah: "bass",
                Batak: "batk",
                Bengali: ["bng2", "beng"],
                Bopomofo: "bopo",
                Brahmi: "brah",
                Braille: "brai",
                Buginese: "bugi",
                Buhid: "buhd",
                Chakma: "cakm",
                Canadian_Aboriginal: "cans",
                Carian: "cari",
                Cham: "cham",
                Cherokee: "cher",
                Coptic: "copt",
                Cypriot: "cprt",
                Cyrillic: "cyrl",
                Devanagari: ["dev2", "deva"],
                Deseret: "dsrt",
                Duployan: "dupl",
                Egyptian_Hieroglyphs: "egyp",
                Elbasan: "elba",
                Ethiopic: "ethi",
                Georgian: "geor",
                Glagolitic: "glag",
                Gothic: "goth",
                Grantha: "gran",
                Greek: "grek",
                Gujarati: ["gjr2", "gujr"],
                Gurmukhi: ["gur2", "guru"],
                Hangul: "hang",
                Han: "hani",
                Hanunoo: "hano",
                Hebrew: "hebr",
                Hiragana: "hira",
                Pahawh_Hmong: "hmng",
                Katakana_Or_Hiragana: "hrkt",
                Old_Italic: "ital",
                Javanese: "java",
                Kayah_Li: "kali",
                Katakana: "kana",
                Kharoshthi: "khar",
                Khmer: "khmr",
                Khojki: "khoj",
                Kannada: ["knd2", "knda"],
                Kaithi: "kthi",
                Tai_Tham: "lana",
                Lao: "lao ",
                Latin: "latn",
                Lepcha: "lepc",
                Limbu: "limb",
                Linear_A: "lina",
                Linear_B: "linb",
                Lisu: "lisu",
                Lycian: "lyci",
                Lydian: "lydi",
                Mahajani: "mahj",
                Mandaic: "mand",
                Manichaean: "mani",
                Mende_Kikakui: "mend",
                Meroitic_Cursive: "merc",
                Meroitic_Hieroglyphs: "mero",
                Malayalam: ["mlm2", "mlym"],
                Modi: "modi",
                Mongolian: "mong",
                Mro: "mroo",
                Meetei_Mayek: "mtei",
                Myanmar: ["mym2", "mymr"],
                Old_North_Arabian: "narb",
                Nabataean: "nbat",
                Nko: "nko ",
                Ogham: "ogam",
                Ol_Chiki: "olck",
                Old_Turkic: "orkh",
                Oriya: ["ory2", "orya"],
                Osmanya: "osma",
                Palmyrene: "palm",
                Pau_Cin_Hau: "pauc",
                Old_Permic: "perm",
                Phags_Pa: "phag",
                Inscriptional_Pahlavi: "phli",
                Psalter_Pahlavi: "phlp",
                Phoenician: "phnx",
                Miao: "plrd",
                Inscriptional_Parthian: "prti",
                Rejang: "rjng",
                Runic: "runr",
                Samaritan: "samr",
                Old_South_Arabian: "sarb",
                Saurashtra: "saur",
                Shavian: "shaw",
                Sharada: "shrd",
                Siddham: "sidd",
                Khudawadi: "sind",
                Sinhala: "sinh",
                Sora_Sompeng: "sora",
                Sundanese: "sund",
                Syloti_Nagri: "sylo",
                Syriac: "syrc",
                Tagbanwa: "tagb",
                Takri: "takr",
                Tai_Le: "tale",
                New_Tai_Lue: "talu",
                Tamil: ["tml2", "taml"],
                Tai_Viet: "tavt",
                Telugu: ["tel2", "telu"],
                Tifinagh: "tfng",
                Tagalog: "tglg",
                Thaana: "thaa",
                Thai: "thai",
                Tibetan: "tibt",
                Tirhuta: "tirh",
                Ugaritic: "ugar",
                Vai: "vai ",
                Warang_Citi: "wara",
                Old_Persian: "xpeo",
                Cuneiform: "xsux",
                Yi: "yi  ",
                Inherited: "zinh",
                Common: "zyyy",
                Unknown: "zzzz"
              }, As = {};
              for (var Es in ci) {
                var Ts = ci[Es];
                if (Array.isArray(Ts))
                  for (var Gu = i(Ts), M0; !(M0 = Gu()).done; ) {
                    var Vu = M0.value;
                    As[Vu] = Es;
                  }
                else
                  As[Ts] = Es;
              }
              function Xu(ft) {
                return As[ft];
              }
              function Zu(ft) {
                for (var X = ft.length, rt = 0; rt < X; ) {
                  var B = ft.charCodeAt(rt++);
                  if (55296 <= B && B <= 56319 && rt < X) {
                    var U = ft.charCodeAt(rt);
                    56320 <= U && U <= 57343 && (rt++, B = ((B & 1023) << 10) + (U & 1023) + 65536);
                  }
                  var H = P.getScript(B);
                  if (H !== "Common" && H !== "Inherited" && H !== "Unknown")
                    return ci[H];
                }
                return ci.Unknown;
              }
              function Yu(ft) {
                for (var X = 0; X < ft.length; X++) {
                  var rt = ft[X], B = P.getScript(rt);
                  if (B !== "Common" && B !== "Inherited" && B !== "Unknown")
                    return ci[B];
                }
                return ci.Unknown;
              }
              var Ku = {
                arab: !0,
                // Arabic
                hebr: !0,
                // Hebrew
                syrc: !0,
                // Syriac
                thaa: !0,
                // Thaana
                cprt: !0,
                // Cypriot Syllabary
                khar: !0,
                // Kharosthi
                phnx: !0,
                // Phoenician
                "nko ": !0,
                // N'Ko
                lydi: !0,
                // Lydian
                avst: !0,
                // Avestan
                armi: !0,
                // Imperial Aramaic
                phli: !0,
                // Inscriptional Pahlavi
                prti: !0,
                // Inscriptional Parthian
                sarb: !0,
                // Old South Arabian
                orkh: !0,
                // Old Turkic, Orkhon Runic
                samr: !0,
                // Samaritan
                mand: !0,
                // Mandaic, Mandaean
                merc: !0,
                // Meroitic Cursive
                mero: !0,
                // Meroitic Hieroglyphs
                // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)
                mani: !0,
                // Manichaean
                mend: !0,
                // Mende Kikakui
                nbat: !0,
                // Nabataean
                narb: !0,
                // Old North Arabian
                palm: !0,
                // Palmyrene
                phlp: !0
                // Psalter Pahlavi
              };
              function k0(ft) {
                return Ku[ft] ? "rtl" : "ltr";
              }
              for (var Ju = /* @__PURE__ */ function() {
                function ft(X, rt, B, U, H) {
                  if (this.glyphs = X, this.positions = null, this.script = B, this.language = U || null, this.direction = H || k0(B), this.features = {}, Array.isArray(rt))
                    for (var ut = i(rt), pt; !(pt = ut()).done; ) {
                      var vt = pt.value;
                      this.features[vt] = !0;
                    }
                  else
                    typeof rt == "object" && (this.features = rt);
                }
                return o(ft, [{
                  key: "advanceWidth",
                  get: function() {
                    for (var rt = 0, B = i(this.positions), U; !(U = B()).done; ) {
                      var H = U.value;
                      rt += H.xAdvance;
                    }
                    return rt;
                  }
                  /**
                   * The total advance height of the run.
                   * @type {number}
                   */
                }, {
                  key: "advanceHeight",
                  get: function() {
                    for (var rt = 0, B = i(this.positions), U; !(U = B()).done; ) {
                      var H = U.value;
                      rt += H.yAdvance;
                    }
                    return rt;
                  }
                  /**
                   * The bounding box containing all glyphs in the run.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    for (var rt = new ui(), B = 0, U = 0, H = 0; H < this.glyphs.length; H++) {
                      var ut = this.glyphs[H], pt = this.positions[H], vt = ut.bbox;
                      rt.addPoint(vt.minX + B + pt.xOffset, vt.minY + U + pt.yOffset), rt.addPoint(vt.maxX + B + pt.xOffset, vt.maxY + U + pt.yOffset), B += pt.xAdvance, U += pt.yAdvance;
                    }
                    return rt;
                  }
                }]), ft;
              }(), Qu = function(X, rt, B, U) {
                X === void 0 && (X = 0), rt === void 0 && (rt = 0), B === void 0 && (B = 0), U === void 0 && (U = 0), this.xAdvance = X, this.yAdvance = rt, this.xOffset = B, this.yOffset = U;
              }, Ka = {
                allTypographicFeatures: {
                  code: 0,
                  exclusive: !1,
                  allTypeFeatures: 0
                },
                ligatures: {
                  code: 1,
                  exclusive: !1,
                  requiredLigatures: 0,
                  commonLigatures: 2,
                  rareLigatures: 4,
                  // logos: 6
                  rebusPictures: 8,
                  diphthongLigatures: 10,
                  squaredLigatures: 12,
                  abbrevSquaredLigatures: 14,
                  symbolLigatures: 16,
                  contextualLigatures: 18,
                  historicalLigatures: 20
                },
                cursiveConnection: {
                  code: 2,
                  exclusive: !0,
                  unconnected: 0,
                  partiallyConnected: 1,
                  cursive: 2
                },
                letterCase: {
                  code: 3,
                  exclusive: !0
                },
                // upperAndLowerCase: 0          # deprecated
                // allCaps: 1                    # deprecated
                // allLowerCase: 2               # deprecated
                // smallCaps: 3                  # deprecated
                // initialCaps: 4                # deprecated
                // initialCapsAndSmallCaps: 5    # deprecated
                verticalSubstitution: {
                  code: 4,
                  exclusive: !1,
                  substituteVerticalForms: 0
                },
                linguisticRearrangement: {
                  code: 5,
                  exclusive: !1,
                  linguisticRearrangement: 0
                },
                numberSpacing: {
                  code: 6,
                  exclusive: !0,
                  monospacedNumbers: 0,
                  proportionalNumbers: 1,
                  thirdWidthNumbers: 2,
                  quarterWidthNumbers: 3
                },
                smartSwash: {
                  code: 8,
                  exclusive: !1,
                  wordInitialSwashes: 0,
                  wordFinalSwashes: 2,
                  // lineInitialSwashes: 4
                  // lineFinalSwashes: 6
                  nonFinalSwashes: 8
                },
                diacritics: {
                  code: 9,
                  exclusive: !0,
                  showDiacritics: 0,
                  hideDiacritics: 1,
                  decomposeDiacritics: 2
                },
                verticalPosition: {
                  code: 10,
                  exclusive: !0,
                  normalPosition: 0,
                  superiors: 1,
                  inferiors: 2,
                  ordinals: 3,
                  scientificInferiors: 4
                },
                fractions: {
                  code: 11,
                  exclusive: !0,
                  noFractions: 0,
                  verticalFractions: 1,
                  diagonalFractions: 2
                },
                overlappingCharacters: {
                  code: 13,
                  exclusive: !1,
                  preventOverlap: 0
                },
                typographicExtras: {
                  code: 14,
                  exclusive: !1,
                  // hyphensToEmDash: 0
                  // hyphenToEnDash: 2
                  slashedZero: 4
                },
                // formInterrobang: 6
                // smartQuotes: 8
                // periodsToEllipsis: 10
                mathematicalExtras: {
                  code: 15,
                  exclusive: !1,
                  // hyphenToMinus: 0
                  // asteristoMultiply: 2
                  // slashToDivide: 4
                  // inequalityLigatures: 6
                  // exponents: 8
                  mathematicalGreek: 10
                },
                ornamentSets: {
                  code: 16,
                  exclusive: !0,
                  noOrnaments: 0,
                  dingbats: 1,
                  piCharacters: 2,
                  fleurons: 3,
                  decorativeBorders: 4,
                  internationalSymbols: 5,
                  mathSymbols: 6
                },
                characterAlternatives: {
                  code: 17,
                  exclusive: !0,
                  noAlternates: 0
                },
                // user defined options
                designComplexity: {
                  code: 18,
                  exclusive: !0,
                  designLevel1: 0,
                  designLevel2: 1,
                  designLevel3: 2,
                  designLevel4: 3,
                  designLevel5: 4
                },
                styleOptions: {
                  code: 19,
                  exclusive: !0,
                  noStyleOptions: 0,
                  displayText: 1,
                  engravedText: 2,
                  illuminatedCaps: 3,
                  titlingCaps: 4,
                  tallCaps: 5
                },
                characterShape: {
                  code: 20,
                  exclusive: !0,
                  traditionalCharacters: 0,
                  simplifiedCharacters: 1,
                  JIS1978Characters: 2,
                  JIS1983Characters: 3,
                  JIS1990Characters: 4,
                  traditionalAltOne: 5,
                  traditionalAltTwo: 6,
                  traditionalAltThree: 7,
                  traditionalAltFour: 8,
                  traditionalAltFive: 9,
                  expertCharacters: 10,
                  JIS2004Characters: 11,
                  hojoCharacters: 12,
                  NLCCharacters: 13,
                  traditionalNamesCharacters: 14
                },
                numberCase: {
                  code: 21,
                  exclusive: !0,
                  lowerCaseNumbers: 0,
                  upperCaseNumbers: 1
                },
                textSpacing: {
                  code: 22,
                  exclusive: !0,
                  proportionalText: 0,
                  monospacedText: 1,
                  halfWidthText: 2,
                  thirdWidthText: 3,
                  quarterWidthText: 4,
                  altProportionalText: 5,
                  altHalfWidthText: 6
                },
                transliteration: {
                  code: 23,
                  exclusive: !0,
                  noTransliteration: 0
                },
                // hanjaToHangul: 1
                // hiraganaToKatakana: 2
                // katakanaToHiragana: 3
                // kanaToRomanization: 4
                // romanizationToHiragana: 5
                // romanizationToKatakana: 6
                // hanjaToHangulAltOne: 7
                // hanjaToHangulAltTwo: 8
                // hanjaToHangulAltThree: 9
                annotation: {
                  code: 24,
                  exclusive: !0,
                  noAnnotation: 0,
                  boxAnnotation: 1,
                  roundedBoxAnnotation: 2,
                  circleAnnotation: 3,
                  invertedCircleAnnotation: 4,
                  parenthesisAnnotation: 5,
                  periodAnnotation: 6,
                  romanNumeralAnnotation: 7,
                  diamondAnnotation: 8,
                  invertedBoxAnnotation: 9,
                  invertedRoundedBoxAnnotation: 10
                },
                kanaSpacing: {
                  code: 25,
                  exclusive: !0,
                  fullWidthKana: 0,
                  proportionalKana: 1
                },
                ideographicSpacing: {
                  code: 26,
                  exclusive: !0,
                  fullWidthIdeographs: 0,
                  proportionalIdeographs: 1,
                  halfWidthIdeographs: 2
                },
                unicodeDecomposition: {
                  code: 27,
                  exclusive: !1,
                  canonicalComposition: 0,
                  compatibilityComposition: 2,
                  transcodingComposition: 4
                },
                rubyKana: {
                  code: 28,
                  exclusive: !1,
                  // noRubyKana: 0     # deprecated - use rubyKanaOff instead
                  // rubyKana: 1     # deprecated - use rubyKanaOn instead
                  rubyKana: 2
                },
                CJKSymbolAlternatives: {
                  code: 29,
                  exclusive: !0,
                  noCJKSymbolAlternatives: 0,
                  CJKSymbolAltOne: 1,
                  CJKSymbolAltTwo: 2,
                  CJKSymbolAltThree: 3,
                  CJKSymbolAltFour: 4,
                  CJKSymbolAltFive: 5
                },
                ideographicAlternatives: {
                  code: 30,
                  exclusive: !0,
                  noIdeographicAlternatives: 0,
                  ideographicAltOne: 1,
                  ideographicAltTwo: 2,
                  ideographicAltThree: 3,
                  ideographicAltFour: 4,
                  ideographicAltFive: 5
                },
                CJKVerticalRomanPlacement: {
                  code: 31,
                  exclusive: !0,
                  CJKVerticalRomanCentered: 0,
                  CJKVerticalRomanHBaseline: 1
                },
                italicCJKRoman: {
                  code: 32,
                  exclusive: !1,
                  // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead
                  // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead
                  CJKItalicRoman: 2
                },
                caseSensitiveLayout: {
                  code: 33,
                  exclusive: !1,
                  caseSensitiveLayout: 0,
                  caseSensitiveSpacing: 2
                },
                alternateKana: {
                  code: 34,
                  exclusive: !1,
                  alternateHorizKana: 0,
                  alternateVertKana: 2
                },
                stylisticAlternatives: {
                  code: 35,
                  exclusive: !1,
                  noStylisticAlternates: 0,
                  stylisticAltOne: 2,
                  stylisticAltTwo: 4,
                  stylisticAltThree: 6,
                  stylisticAltFour: 8,
                  stylisticAltFive: 10,
                  stylisticAltSix: 12,
                  stylisticAltSeven: 14,
                  stylisticAltEight: 16,
                  stylisticAltNine: 18,
                  stylisticAltTen: 20,
                  stylisticAltEleven: 22,
                  stylisticAltTwelve: 24,
                  stylisticAltThirteen: 26,
                  stylisticAltFourteen: 28,
                  stylisticAltFifteen: 30,
                  stylisticAltSixteen: 32,
                  stylisticAltSeventeen: 34,
                  stylisticAltEighteen: 36,
                  stylisticAltNineteen: 38,
                  stylisticAltTwenty: 40
                },
                contextualAlternates: {
                  code: 36,
                  exclusive: !1,
                  contextualAlternates: 0,
                  swashAlternates: 2,
                  contextualSwashAlternates: 4
                },
                lowerCase: {
                  code: 37,
                  exclusive: !0,
                  defaultLowerCase: 0,
                  lowerCaseSmallCaps: 1,
                  lowerCasePetiteCaps: 2
                },
                upperCase: {
                  code: 38,
                  exclusive: !0,
                  defaultUpperCase: 0,
                  upperCaseSmallCaps: 1,
                  upperCasePetiteCaps: 2
                },
                languageTag: {
                  // indices into ltag table
                  code: 39,
                  exclusive: !0
                },
                CJKRomanSpacing: {
                  code: 103,
                  exclusive: !0,
                  halfWidthCJKRoman: 0,
                  proportionalCJKRoman: 1,
                  defaultCJKRoman: 2,
                  fullWidthCJKRoman: 3
                }
              }, ke = function(X, rt) {
                return [Ka[X].code, Ka[X][rt]];
              }, Co = {
                rlig: ke("ligatures", "requiredLigatures"),
                clig: ke("ligatures", "contextualLigatures"),
                dlig: ke("ligatures", "rareLigatures"),
                hlig: ke("ligatures", "historicalLigatures"),
                liga: ke("ligatures", "commonLigatures"),
                hist: ke("ligatures", "historicalLigatures"),
                // ??
                smcp: ke("lowerCase", "lowerCaseSmallCaps"),
                pcap: ke("lowerCase", "lowerCasePetiteCaps"),
                frac: ke("fractions", "diagonalFractions"),
                dnom: ke("fractions", "diagonalFractions"),
                // ??
                numr: ke("fractions", "diagonalFractions"),
                // ??
                afrc: ke("fractions", "verticalFractions"),
                // aalt
                // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?
                // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?
                // unic, vatu, vhal, vjmo, vpal, vrt2
                // dist -> trak table?
                // kern, vkrn -> kern table
                // lfbd + opbd + rtbd -> opbd table?
                // mark, mkmk -> acnt table?
                // locl -> languageTag + ltag table
                case: ke("caseSensitiveLayout", "caseSensitiveLayout"),
                // also caseSensitiveSpacing
                ccmp: ke("unicodeDecomposition", "canonicalComposition"),
                // compatibilityComposition?
                cpct: ke("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                // guess..., probably not given below
                valt: ke("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                swsh: ke("contextualAlternates", "swashAlternates"),
                cswh: ke("contextualAlternates", "contextualSwashAlternates"),
                curs: ke("cursiveConnection", "cursive"),
                // ??
                c2pc: ke("upperCase", "upperCasePetiteCaps"),
                c2sc: ke("upperCase", "upperCaseSmallCaps"),
                init: ke("smartSwash", "wordInitialSwashes"),
                // ??
                fin2: ke("smartSwash", "wordFinalSwashes"),
                // ??
                medi: ke("smartSwash", "nonFinalSwashes"),
                // ??
                med2: ke("smartSwash", "nonFinalSwashes"),
                // ??
                fin3: ke("smartSwash", "wordFinalSwashes"),
                // ??
                fina: ke("smartSwash", "wordFinalSwashes"),
                // ??
                pkna: ke("kanaSpacing", "proportionalKana"),
                half: ke("textSpacing", "halfWidthText"),
                // also HalfWidthCJKRoman, HalfWidthIdeographs?
                halt: ke("textSpacing", "altHalfWidthText"),
                hkna: ke("alternateKana", "alternateHorizKana"),
                vkna: ke("alternateKana", "alternateVertKana"),
                // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated
                ital: ke("italicCJKRoman", "CJKItalicRoman"),
                lnum: ke("numberCase", "upperCaseNumbers"),
                onum: ke("numberCase", "lowerCaseNumbers"),
                mgrk: ke("mathematicalExtras", "mathematicalGreek"),
                // nalt: not enough info. what type of annotation?
                // ornm: ditto, which ornament style?
                calt: ke("contextualAlternates", "contextualAlternates"),
                // or more?
                vrt2: ke("verticalSubstitution", "substituteVerticalForms"),
                // oh... below?
                vert: ke("verticalSubstitution", "substituteVerticalForms"),
                tnum: ke("numberSpacing", "monospacedNumbers"),
                pnum: ke("numberSpacing", "proportionalNumbers"),
                sups: ke("verticalPosition", "superiors"),
                subs: ke("verticalPosition", "inferiors"),
                ordn: ke("verticalPosition", "ordinals"),
                pwid: ke("textSpacing", "proportionalText"),
                hwid: ke("textSpacing", "halfWidthText"),
                qwid: ke("textSpacing", "quarterWidthText"),
                // also QuarterWidthNumbers?
                twid: ke("textSpacing", "thirdWidthText"),
                // also ThirdWidthNumbers?
                fwid: ke("textSpacing", "proportionalText"),
                //??
                palt: ke("textSpacing", "altProportionalText"),
                trad: ke("characterShape", "traditionalCharacters"),
                smpl: ke("characterShape", "simplifiedCharacters"),
                jp78: ke("characterShape", "JIS1978Characters"),
                jp83: ke("characterShape", "JIS1983Characters"),
                jp90: ke("characterShape", "JIS1990Characters"),
                jp04: ke("characterShape", "JIS2004Characters"),
                expt: ke("characterShape", "expertCharacters"),
                hojo: ke("characterShape", "hojoCharacters"),
                nlck: ke("characterShape", "NLCCharacters"),
                tnam: ke("characterShape", "traditionalNamesCharacters"),
                ruby: ke("rubyKana", "rubyKana"),
                titl: ke("styleOptions", "titlingCaps"),
                zero: ke("typographicExtras", "slashedZero"),
                ss01: ke("stylisticAlternatives", "stylisticAltOne"),
                ss02: ke("stylisticAlternatives", "stylisticAltTwo"),
                ss03: ke("stylisticAlternatives", "stylisticAltThree"),
                ss04: ke("stylisticAlternatives", "stylisticAltFour"),
                ss05: ke("stylisticAlternatives", "stylisticAltFive"),
                ss06: ke("stylisticAlternatives", "stylisticAltSix"),
                ss07: ke("stylisticAlternatives", "stylisticAltSeven"),
                ss08: ke("stylisticAlternatives", "stylisticAltEight"),
                ss09: ke("stylisticAlternatives", "stylisticAltNine"),
                ss10: ke("stylisticAlternatives", "stylisticAltTen"),
                ss11: ke("stylisticAlternatives", "stylisticAltEleven"),
                ss12: ke("stylisticAlternatives", "stylisticAltTwelve"),
                ss13: ke("stylisticAlternatives", "stylisticAltThirteen"),
                ss14: ke("stylisticAlternatives", "stylisticAltFourteen"),
                ss15: ke("stylisticAlternatives", "stylisticAltFifteen"),
                ss16: ke("stylisticAlternatives", "stylisticAltSixteen"),
                ss17: ke("stylisticAlternatives", "stylisticAltSeventeen"),
                ss18: ke("stylisticAlternatives", "stylisticAltEighteen"),
                ss19: ke("stylisticAlternatives", "stylisticAltNineteen"),
                ss20: ke("stylisticAlternatives", "stylisticAltTwenty")
              }, Ao = 1; Ao <= 99; Ao++)
                Co["cv".concat("00".concat(Ao).slice(-2))] = [Ka.characterAlternatives.code, Ao];
              var Ja = {};
              for (var U0 in Co) {
                var Eo = Co[U0];
                Ja[Eo[0]] == null && (Ja[Eo[0]] = {}), Ja[Eo[0]][Eo[1]] = U0;
              }
              function _u(ft) {
                var X = {};
                for (var rt in ft) {
                  var B = void 0;
                  (B = Co[rt]) && (X[B[0]] == null && (X[B[0]] = {}), X[B[0]][B[1]] = ft[rt]);
                }
                return X;
              }
              function z0(ft) {
                var X = ft[0], rt = ft[1];
                if (isNaN(X))
                  var B = Ka[X] && Ka[X].code;
                else
                  var B = X;
                if (isNaN(rt))
                  var U = Ka[X] && Ka[X][rt];
                else
                  var U = rt;
                return [B, U];
              }
              function $u(ft) {
                var X = {};
                if (Array.isArray(ft))
                  for (var rt = 0; rt < ft.length; rt++) {
                    var B = void 0, U = z0(ft[rt]);
                    (B = Ja[U[0]] && Ja[U[0]][U[1]]) && (X[B] = !0);
                  }
                else if (typeof ft == "object")
                  for (var H in ft) {
                    var ut = ft[H];
                    for (var pt in ut) {
                      var vt = void 0, dt = z0([H, pt]);
                      ut[pt] && (vt = Ja[dt[0]] && Ja[dt[0]][dt[1]]) && (X[vt] = !0);
                    }
                  }
                return Object.keys(X);
              }
              var Gi, To = (Gi = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.table = rt;
                }
                var X = ft.prototype;
                return X.lookup = function(B) {
                  switch (this.table.version) {
                    case 0:
                      return this.table.values.getItem(B);
                    case 2:
                    case 4: {
                      for (var U = 0, H = this.table.binarySearchHeader.nUnits - 1; U <= H; ) {
                        var ut = U + H >> 1, pt = this.table.segments[ut];
                        if (pt.firstGlyph === 65535)
                          return null;
                        if (B < pt.firstGlyph)
                          H = ut - 1;
                        else if (B > pt.lastGlyph)
                          U = ut + 1;
                        else
                          return this.table.version === 2 ? pt.value : pt.values[B - pt.firstGlyph];
                      }
                      return null;
                    }
                    case 6: {
                      for (var vt = 0, dt = this.table.binarySearchHeader.nUnits - 1; vt <= dt; ) {
                        var ut = vt + dt >> 1, pt = this.table.segments[ut];
                        if (pt.glyph === 65535)
                          return null;
                        if (B < pt.glyph)
                          dt = ut - 1;
                        else if (B > pt.glyph)
                          vt = ut + 1;
                        else
                          return pt.value;
                      }
                      return null;
                    }
                    case 8:
                      return this.table.values[B - this.table.firstGlyph];
                    default:
                      throw new Error("Unknown lookup table format: ".concat(this.table.version));
                  }
                }, X.glyphsForValue = function(B) {
                  var U = [];
                  switch (this.table.version) {
                    case 2:
                    case 4: {
                      for (var H = i(this.table.segments), ut; !(ut = H()).done; ) {
                        var pt = ut.value;
                        if (this.table.version === 2 && pt.value === B)
                          U.push.apply(U, fi(pt.firstGlyph, pt.lastGlyph + 1));
                        else
                          for (var vt = 0; vt < pt.values.length; vt++)
                            pt.values[vt] === B && U.push(pt.firstGlyph + vt);
                      }
                      break;
                    }
                    case 6: {
                      for (var dt = i(this.table.segments), Bt; !(Bt = dt()).done; ) {
                        var Xt = Bt.value;
                        Xt.value === B && U.push(Xt.glyph);
                      }
                      break;
                    }
                    case 8: {
                      for (var fe = 0; fe < this.table.values.length; fe++)
                        this.table.values[fe] === B && U.push(this.table.firstGlyph + fe);
                      break;
                    }
                    default:
                      throw new Error("Unknown lookup table format: ".concat(this.table.version));
                  }
                  return U;
                }, ft;
              }(), M(Gi.prototype, "glyphsForValue", [K], Object.getOwnPropertyDescriptor(Gi.prototype, "glyphsForValue"), Gi.prototype), Gi), qu = 0, W0 = 0, H0 = 1, j0 = 2, tc = 16384, ec = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.stateTable = rt, this.lookupTable = new To(rt.classTable);
                }
                var X = ft.prototype;
                return X.process = function(B, U, H) {
                  for (var ut = qu, pt = U ? B.length - 1 : 0, vt = U ? -1 : 1; vt === 1 && pt <= B.length || vt === -1 && pt >= -1; ) {
                    var dt = null, Bt = H0, Xt = !0;
                    pt === B.length || pt === -1 ? Bt = W0 : (dt = B[pt], dt.id === 65535 ? Bt = j0 : (Bt = this.lookupTable.lookup(dt.id), Bt == null && (Bt = H0)));
                    var fe = this.stateTable.stateArray.getItem(ut), $t = fe[Bt], he = this.stateTable.entryTable.getItem($t);
                    Bt !== W0 && Bt !== j0 && (H(dt, he, pt), Xt = !(he.flags & tc)), ut = he.newState, Xt && (pt += vt);
                  }
                  return B;
                }, X.traverse = function(B, U, H) {
                  if (U === void 0 && (U = 0), H === void 0 && (H = /* @__PURE__ */ new Set()), !H.has(U)) {
                    H.add(U);
                    for (var ut = this.stateTable, pt = ut.nClasses, vt = ut.stateArray, dt = ut.entryTable, Bt = vt.getItem(U), Xt = 4; Xt < pt; Xt++)
                      for (var fe = Bt[Xt], $t = dt.getItem(fe), he = i(this.lookupTable.glyphsForValue(Xt)), me; !(me = he()).done; ) {
                        var Fe = me.value;
                        B.enter && B.enter(Fe, $t), $t.newState !== 0 && this.traverse(B, $t.newState, H), B.exit && B.exit(Fe, $t);
                      }
                  }
                }, ft;
              }(), Vi, rc = 32768, nc = 8192, ac = 15, G0 = 32768, ic = 32768, oc = 8192, sc = 2147483648, lc = 1073741824, fc = 1073741823, V0 = 4194304, uc = 2048, cc = 1024, hc = 992, dc = 31, vc = (Vi = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.processIndicRearragement = this.processIndicRearragement.bind(this), this.processContextualSubstitution = this.processContextualSubstitution.bind(this), this.processLigature = this.processLigature.bind(this), this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this), this.processGlyphInsertion = this.processGlyphInsertion.bind(this), this.font = rt, this.morx = rt.morx, this.inputCache = null;
                }
                var X = ft.prototype;
                return X.process = function(B, U) {
                  U === void 0 && (U = {});
                  for (var H = i(this.morx.chains), ut; !(ut = H()).done; ) {
                    for (var pt = ut.value, vt = pt.defaultFlags, dt = i(pt.features), Bt; !(Bt = dt()).done; ) {
                      var Xt = Bt.value, fe = void 0;
                      (fe = U[Xt.featureType]) && (fe[Xt.featureSetting] ? (vt &= Xt.disableFlags, vt |= Xt.enableFlags) : fe[Xt.featureSetting] === !1 && (vt |= ~Xt.disableFlags, vt &= ~Xt.enableFlags));
                    }
                    for (var $t = i(pt.subtables), he; !(he = $t()).done; ) {
                      var me = he.value;
                      me.subFeatureFlags & vt && this.processSubtable(me, B);
                    }
                  }
                  for (var Fe = B.length - 1; Fe >= 0; )
                    B[Fe].id === 65535 && B.splice(Fe, 1), Fe--;
                  return B;
                }, X.processSubtable = function(B, U) {
                  if (this.subtable = B, this.glyphs = U, this.subtable.type === 4) {
                    this.processNoncontextualSubstitutions(this.subtable, this.glyphs);
                    return;
                  }
                  this.ligatureStack = [], this.markedGlyph = null, this.firstGlyph = null, this.lastGlyph = null, this.markedIndex = null;
                  var H = this.getStateMachine(B), ut = this.getProcessor(), pt = !!(this.subtable.coverage & V0);
                  return H.process(this.glyphs, pt, ut);
                }, X.getStateMachine = function(B) {
                  return new ec(B.table.stateTable);
                }, X.getProcessor = function() {
                  switch (this.subtable.type) {
                    case 0:
                      return this.processIndicRearragement;
                    case 1:
                      return this.processContextualSubstitution;
                    case 2:
                      return this.processLigature;
                    case 4:
                      return this.processNoncontextualSubstitutions;
                    case 5:
                      return this.processGlyphInsertion;
                    default:
                      throw new Error("Invalid morx subtable type: ".concat(this.subtable.type));
                  }
                }, X.processIndicRearragement = function(B, U, H) {
                  U.flags & rc && (this.firstGlyph = H), U.flags & nc && (this.lastGlyph = H), pc(this.glyphs, U.flags & ac, this.firstGlyph, this.lastGlyph);
                }, X.processContextualSubstitution = function(B, U, H) {
                  var ut = this.subtable.table.substitutionTable.items;
                  if (U.markIndex !== 65535) {
                    var pt = ut.getItem(U.markIndex), vt = new To(pt);
                    B = this.glyphs[this.markedGlyph];
                    var dt = vt.lookup(B.id);
                    dt && (this.glyphs[this.markedGlyph] = this.font.getGlyph(dt, B.codePoints));
                  }
                  if (U.currentIndex !== 65535) {
                    var Bt = ut.getItem(U.currentIndex), Xt = new To(Bt);
                    B = this.glyphs[H];
                    var dt = Xt.lookup(B.id);
                    dt && (this.glyphs[H] = this.font.getGlyph(dt, B.codePoints));
                  }
                  U.flags & G0 && (this.markedGlyph = H);
                }, X.processLigature = function(B, U, H) {
                  if (U.flags & ic && this.ligatureStack.push(H), U.flags & oc) {
                    for (var ut, pt = this.subtable.table.ligatureActions, vt = this.subtable.table.components, dt = this.subtable.table.ligatureList, Bt = U.action, Xt = !1, fe = 0, $t = [], he = []; !Xt; ) {
                      var me, Fe = this.ligatureStack.pop();
                      (me = $t).unshift.apply(me, this.glyphs[Fe].codePoints);
                      var je = pt.getItem(Bt++);
                      Xt = !!(je & sc);
                      var tr = !!(je & lc), Ze = (je & fc) << 2 >> 2;
                      Ze += this.glyphs[Fe].id;
                      var vr = vt.getItem(Ze);
                      if (fe += vr, Xt || tr) {
                        var fr = dt.getItem(fe);
                        this.glyphs[Fe] = this.font.getGlyph(fr, $t), he.push(Fe), fe = 0, $t = [];
                      } else
                        this.glyphs[Fe] = this.font.getGlyph(65535);
                    }
                    (ut = this.ligatureStack).push.apply(ut, he);
                  }
                }, X.processNoncontextualSubstitutions = function(B, U, H) {
                  var ut = new To(B.table.lookupTable);
                  for (H = 0; H < U.length; H++) {
                    var pt = U[H];
                    if (pt.id !== 65535) {
                      var vt = ut.lookup(pt.id);
                      vt && (U[H] = this.font.getGlyph(vt, pt.codePoints));
                    }
                  }
                }, X._insertGlyphs = function(B, U, H, ut) {
                  for (var pt, vt = []; H--; ) {
                    var dt = this.subtable.table.insertionActions.getItem(U++);
                    vt.push(this.font.getGlyph(dt));
                  }
                  ut || B++, (pt = this.glyphs).splice.apply(pt, [B, 0].concat(vt));
                }, X.processGlyphInsertion = function(B, U, H) {
                  if (U.flags & G0 && (this.markedIndex = H), U.markedInsertIndex !== 65535) {
                    var ut = (U.flags & dc) >>> 5, pt = !!(U.flags & cc);
                    this._insertGlyphs(this.markedIndex, U.markedInsertIndex, ut, pt);
                  }
                  if (U.currentInsertIndex !== 65535) {
                    var vt = (U.flags & hc) >>> 5, dt = !!(U.flags & uc);
                    this._insertGlyphs(H, U.currentInsertIndex, vt, dt);
                  }
                }, X.getSupportedFeatures = function() {
                  for (var B = [], U = i(this.morx.chains), H; !(H = U()).done; )
                    for (var ut = H.value, pt = i(ut.features), vt; !(vt = pt()).done; ) {
                      var dt = vt.value;
                      B.push([dt.featureType, dt.featureSetting]);
                    }
                  return B;
                }, X.generateInputs = function(B) {
                  return this.inputCache || this.generateInputCache(), this.inputCache[B] || [];
                }, X.generateInputCache = function() {
                  this.inputCache = {};
                  for (var B = i(this.morx.chains), U; !(U = B()).done; )
                    for (var H = U.value, ut = H.defaultFlags, pt = i(H.subtables), vt; !(vt = pt()).done; ) {
                      var dt = vt.value;
                      dt.subFeatureFlags & ut && this.generateInputsForSubtable(dt);
                    }
                }, X.generateInputsForSubtable = function(B) {
                  var U = this;
                  if (B.type === 2) {
                    var H = !!(B.coverage & V0);
                    if (H)
                      throw new Error("Reverse subtable, not supported.");
                    this.subtable = B, this.ligatureStack = [];
                    var ut = this.getStateMachine(B), pt = this.getProcessor(), vt = [], dt = [];
                    this.glyphs = [], ut.traverse({
                      enter: function(Xt, fe) {
                        var $t = U.glyphs;
                        dt.push({
                          glyphs: $t.slice(),
                          ligatureStack: U.ligatureStack.slice()
                        });
                        var he = U.font.getGlyph(Xt);
                        vt.push(he), $t.push(vt[vt.length - 1]), pt($t[$t.length - 1], fe, $t.length - 1);
                        for (var me = 0, Fe = 0, je = 0; je < $t.length && me <= 1; je++)
                          $t[je].id !== 65535 && (me++, Fe = $t[je].id);
                        if (me === 1) {
                          var tr = vt.map(function(vr) {
                            return vr.id;
                          }), Ze = U.inputCache[Fe];
                          Ze ? Ze.push(tr) : U.inputCache[Fe] = [tr];
                        }
                      },
                      exit: function() {
                        var Xt = dt.pop();
                        U.glyphs = Xt.glyphs, U.ligatureStack = Xt.ligatureStack, vt.pop();
                      }
                    });
                  }
                }, ft;
              }(), M(Vi.prototype, "getStateMachine", [K], Object.getOwnPropertyDescriptor(Vi.prototype, "getStateMachine"), Vi.prototype), Vi);
              function Un(ft, X, rt, B, U) {
                B === void 0 && (B = !1), U === void 0 && (U = !1);
                var H = ft.splice(rt[0] - (rt[1] - 1), rt[1]);
                U && H.reverse();
                var ut = ft.splice.apply(ft, [X[0], X[1]].concat(H));
                return B && ut.reverse(), ft.splice.apply(ft, [rt[0] - (X[1] - 1), 0].concat(ut)), ft;
              }
              function pc(ft, X, rt, B) {
                switch (X) {
                  case 0:
                    return ft;
                  case 1:
                    return Un(ft, [rt, 1], [B, 0]);
                  case 2:
                    return Un(ft, [rt, 0], [B, 1]);
                  case 3:
                    return Un(ft, [rt, 1], [B, 1]);
                  case 4:
                    return Un(ft, [rt, 2], [B, 0]);
                  case 5:
                    return Un(ft, [rt, 2], [B, 0], !0, !1);
                  case 6:
                    return Un(ft, [rt, 0], [B, 2]);
                  case 7:
                    return Un(ft, [rt, 0], [B, 2], !1, !0);
                  case 8:
                    return Un(ft, [rt, 1], [B, 2]);
                  case 9:
                    return Un(ft, [rt, 1], [B, 2], !1, !0);
                  case 10:
                    return Un(ft, [rt, 2], [B, 1]);
                  case 11:
                    return Un(ft, [rt, 2], [B, 1], !0, !1);
                  case 12:
                    return Un(ft, [rt, 2], [B, 2]);
                  case 13:
                    return Un(ft, [rt, 2], [B, 2], !0, !1);
                  case 14:
                    return Un(ft, [rt, 2], [B, 2], !1, !0);
                  case 15:
                    return Un(ft, [rt, 2], [B, 2], !0, !0);
                  default:
                    throw new Error("Unknown verb: ".concat(X));
                }
              }
              var gc = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.font = rt, this.morxProcessor = new vc(rt), this.fallbackPosition = !1;
                }
                var X = ft.prototype;
                return X.substitute = function(B) {
                  B.direction === "rtl" && B.glyphs.reverse(), this.morxProcessor.process(B.glyphs, _u(B.features));
                }, X.getAvailableFeatures = function(B, U) {
                  return $u(this.morxProcessor.getSupportedFeatures());
                }, X.stringsForGlyph = function(B) {
                  for (var U = this.morxProcessor.generateInputs(B), H = /* @__PURE__ */ new Set(), ut = i(U), pt; !(pt = ut()).done; ) {
                    var vt = pt.value;
                    this._addStrings(vt, 0, H, "");
                  }
                  return H;
                }, X._addStrings = function(B, U, H, ut) {
                  for (var pt = this.font._cmapProcessor.codePointsForGlyph(B[U]), vt = i(pt), dt; !(dt = vt()).done; ) {
                    var Bt = dt.value, Xt = ut + String.fromCodePoint(Bt);
                    U < B.length - 1 ? this._addStrings(B, U + 1, H, Xt) : H.add(Xt);
                  }
                }, ft;
              }(), mc = /* @__PURE__ */ function() {
                function ft(rt, B, U) {
                  this.font = rt, this.script = B, this.direction = U, this.stages = [], this.globalFeatures = {}, this.allFeatures = {};
                }
                var X = ft.prototype;
                return X._addFeatures = function(B, U) {
                  for (var H = this.stages.length - 1, ut = this.stages[H], pt = i(B), vt; !(vt = pt()).done; ) {
                    var dt = vt.value;
                    this.allFeatures[dt] == null && (ut.push(dt), this.allFeatures[dt] = H, U && (this.globalFeatures[dt] = !0));
                  }
                }, X.add = function(B, U) {
                  if (U === void 0 && (U = !0), this.stages.length === 0 && this.stages.push([]), typeof B == "string" && (B = [B]), Array.isArray(B))
                    this._addFeatures(B, U);
                  else if (typeof B == "object")
                    this._addFeatures(B.global || [], !0), this._addFeatures(B.local || [], !1);
                  else
                    throw new Error("Unsupported argument to ShapingPlan#add");
                }, X.addStage = function(B, U) {
                  typeof B == "function" ? this.stages.push(B, []) : (this.stages.push([]), this.add(B, U));
                }, X.setFeatureOverrides = function(B) {
                  if (Array.isArray(B))
                    this.add(B);
                  else if (typeof B == "object") {
                    for (var U in B)
                      if (B[U])
                        this.add(U);
                      else if (this.allFeatures[U] != null) {
                        var H = this.stages[this.allFeatures[U]];
                        H.splice(H.indexOf(U), 1), delete this.allFeatures[U], delete this.globalFeatures[U];
                      }
                  }
                }, X.assignGlobalFeatures = function(B) {
                  for (var U = i(B), H; !(H = U()).done; ) {
                    var ut = H.value;
                    for (var pt in this.globalFeatures)
                      ut.features[pt] = !0;
                  }
                }, X.process = function(B, U, H) {
                  for (var ut = i(this.stages), pt; !(pt = ut()).done; ) {
                    var vt = pt.value;
                    typeof vt == "function" ? H || vt(this.font, U, this) : vt.length > 0 && B.applyFeatures(vt, U, H);
                  }
                }, ft;
              }(), yc = ["rvrn"], xc = ["ccmp", "locl", "rlig", "mark", "mkmk"], bc = ["frac", "numr", "dnom"], wc = ["calt", "clig", "liga", "rclt", "curs", "kern"], Sc = {
                ltr: ["ltra", "ltrm"],
                rtl: ["rtla", "rtlm"]
              }, ka = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.plan = function(rt, B, U) {
                  this.planPreprocessing(rt), this.planFeatures(rt), this.planPostprocessing(rt, U), rt.assignGlobalFeatures(B), this.assignFeatures(rt, B);
                }, ft.planPreprocessing = function(rt) {
                  rt.add({
                    global: [].concat(yc, Sc[rt.direction]),
                    local: bc
                  });
                }, ft.planFeatures = function(rt) {
                }, ft.planPostprocessing = function(rt, B) {
                  rt.add([].concat(xc, wc)), rt.setFeatureOverrides(B);
                }, ft.assignFeatures = function(rt, B) {
                  for (var U = 0; U < B.length; U++) {
                    var H = B[U];
                    if (H.codePoints[0] === 8260) {
                      for (var ut = U, pt = U + 1; ut > 0 && P.isDigit(B[ut - 1].codePoints[0]); )
                        B[ut - 1].features.numr = !0, B[ut - 1].features.frac = !0, ut--;
                      for (; pt < B.length && P.isDigit(B[pt].codePoints[0]); )
                        B[pt].features.dnom = !0, B[pt].features.frac = !0, pt++;
                      H.features.frac = !0, U = pt - 1;
                    }
                  }
                }, ft;
              }();
              N(ka, "zeroMarkWidths", "AFTER_GPOS");
              var Cc = new O(s("APABAAAAAAAAOAAAAf0BAv7tmi1MxDAUx7vtvjhAgcDgkEgEAnmXEBIMCYaEcygEiqBQ4FAkCE4ikUgMiiBJSAgSiUQSDMn9L9eSl6bddddug9t7yS/trevre+3r27pcNxZiG+yCfdCVv/9LeQxOwRm4AJegD27ALbgD9+ABPJF+z+BN/h7yDj5k/VOWX6SdmU5+wLWknggxDxaS8u0qiiX4uiz9XamQ3wzDMAzDMAzDMAzDVI/h959V/v7BMAzDMAzDMLlyNTNiMSdewVxbiA44B4/guz1qW58VYlMI0WsJ0W+N6kXw0spvPtdwhtkwnGM6uLaV4Xyzg3v3PM9DPfQ/sOg4xPWjipy31P8LTqbU304c/cLCUmWJLNB2Uz2U1KTeRKNmKHVMfbJC+/0loTZRH/W5cvEvBJPMbREkWt3FD1NcqXZBSpuE2Ad0PBehPtNrPtIEdYP+hiRt/V1jIiE69X4NT/uVZI3PUHE9bm5M7ePGdZWy951v7Nn6j8v1WWKP3mt6ttnsigx6VN7Vc0VomSSGqW2mGNP1muZPl7LfjNUaKNFtDGVf2fvE9O7VlBS5j333c5p/eeoOqcs1R/hIqDWLJ7TTlksirVT1SI7l8k4Yp+g3jafGcrU1RM6l9th80XOpnlN97bDNY4i4s61B0Si/ipa0uHMl6zqEjlFfCZm/TM8KmzQDjmuTAQ==", "base64")), X0 = ["isol", "fina", "fin2", "fin3", "medi", "med2", "init"], Fs = {
                Non_Joining: 0,
                Left_Joining: 1,
                Right_Joining: 2,
                Dual_Joining: 3,
                Join_Causing: 3,
                ALAPH: 4,
                "DALATH RISH": 5,
                Transparent: 6
              }, $r = "isol", Ua = "fina", Is = "fin2", Ac = "fin3", Fo = "medi", Io = "med2", Do = "init", Ir = null, Ec = [
                //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH
                // State 0: prev was U,  not willing to join.
                [[Ir, Ir, 0], [Ir, $r, 2], [Ir, $r, 1], [Ir, $r, 2], [Ir, $r, 1], [Ir, $r, 6]],
                // State 1: prev was R or ISOL/ALAPH,  not willing to join.
                [[Ir, Ir, 0], [Ir, $r, 2], [Ir, $r, 1], [Ir, $r, 2], [Ir, Is, 5], [Ir, $r, 6]],
                // State 2: prev was D/L in ISOL form,  willing to join.
                [[Ir, Ir, 0], [Ir, $r, 2], [Do, Ua, 1], [Do, Ua, 3], [Do, Ua, 4], [Do, Ua, 6]],
                // State 3: prev was D in FINA form,  willing to join.
                [[Ir, Ir, 0], [Ir, $r, 2], [Fo, Ua, 1], [Fo, Ua, 3], [Fo, Ua, 4], [Fo, Ua, 6]],
                // State 4: prev was FINA ALAPH,  not willing to join.
                [[Ir, Ir, 0], [Ir, $r, 2], [Io, $r, 1], [Io, $r, 2], [Io, Is, 5], [Io, $r, 6]],
                // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.
                [[Ir, Ir, 0], [Ir, $r, 2], [$r, $r, 1], [$r, $r, 2], [$r, Is, 5], [$r, $r, 6]],
                // State 6: prev was DALATH/RISH,  not willing to join.
                [[Ir, Ir, 0], [Ir, $r, 2], [Ir, $r, 1], [Ir, $r, 2], [Ir, Ac, 5], [Ir, $r, 6]]
              ], za = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(B) {
                  B.add(["ccmp", "locl"]);
                  for (var U = 0; U < X0.length; U++) {
                    var H = X0[U];
                    B.addStage(H, !1);
                  }
                  B.addStage("mset");
                }, X.assignFeatures = function(B, U) {
                  ft.assignFeatures.call(this, B, U);
                  for (var H = -1, ut = 0, pt = [], vt = 0; vt < U.length; vt++) {
                    var dt = void 0, Bt = void 0, Xt = U[vt], fe = Tc(Xt.codePoints[0]);
                    if (fe === Fs.Transparent) {
                      pt[vt] = Ir;
                      continue;
                    }
                    var $t = Ec[ut][fe];
                    Bt = $t[0], dt = $t[1], ut = $t[2], Bt !== Ir && H !== -1 && (pt[H] = Bt), pt[vt] = dt, H = vt;
                  }
                  for (var he = 0; he < U.length; he++) {
                    var me = void 0, Xt = U[he];
                    (me = pt[he]) && (Xt.features[me] = !0);
                  }
                }, X;
              }(ka);
              function Tc(ft) {
                var X = Cc.get(ft);
                if (X)
                  return X - 1;
                var rt = P.getCategory(ft);
                return rt === "Mn" || rt === "Me" || rt === "Cf" ? Fs.Transparent : Fs.Non_Joining;
              }
              var Fc = /* @__PURE__ */ function() {
                function ft(rt, B) {
                  this.glyphs = rt, this.reset(B);
                }
                var X = ft.prototype;
                return X.reset = function(B, U) {
                  B === void 0 && (B = {}), U === void 0 && (U = 0), this.options = B, this.flags = B.flags || {}, this.markAttachmentType = B.markAttachmentType || 0, this.index = U;
                }, X.shouldIgnore = function(B) {
                  return this.flags.ignoreMarks && B.isMark || this.flags.ignoreBaseGlyphs && B.isBase || this.flags.ignoreLigatures && B.isLigature || this.markAttachmentType && B.isMark && B.markAttachmentType !== this.markAttachmentType;
                }, X.move = function(B) {
                  for (this.index += B; 0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]); )
                    this.index += B;
                  return 0 > this.index || this.index >= this.glyphs.length ? null : this.glyphs[this.index];
                }, X.next = function() {
                  return this.move(1);
                }, X.prev = function() {
                  return this.move(-1);
                }, X.peek = function(B) {
                  B === void 0 && (B = 1);
                  var U = this.index, H = this.increment(B);
                  return this.index = U, H;
                }, X.peekIndex = function(B) {
                  B === void 0 && (B = 1);
                  var U = this.index;
                  this.increment(B);
                  var H = this.index;
                  return this.index = U, H;
                }, X.increment = function(B) {
                  B === void 0 && (B = 1);
                  var U = B < 0 ? -1 : 1;
                  for (B = Math.abs(B); B--; )
                    this.move(U);
                  return this.glyphs[this.index];
                }, o(ft, [{
                  key: "cur",
                  get: function() {
                    return this.glyphs[this.index] || null;
                  }
                }]), ft;
              }(), Ic = ["DFLT", "dflt", "latn"], Oo = /* @__PURE__ */ function() {
                function ft(rt, B) {
                  this.font = rt, this.table = B, this.script = null, this.scriptTag = null, this.language = null, this.languageTag = null, this.features = {}, this.lookups = {}, this.variationsIndex = rt._variationProcessor ? this.findVariationsIndex(rt._variationProcessor.normalizedCoords) : -1, this.selectScript(), this.glyphs = [], this.positions = [], this.ligatureID = 1, this.currentFeature = null;
                }
                var X = ft.prototype;
                return X.findScript = function(B) {
                  if (this.table.scriptList == null)
                    return null;
                  Array.isArray(B) || (B = [B]);
                  for (var U = i(B), H; !(H = U()).done; )
                    for (var ut = H.value, pt = i(this.table.scriptList), vt; !(vt = pt()).done; ) {
                      var dt = vt.value;
                      if (dt.tag === ut)
                        return dt;
                    }
                  return null;
                }, X.selectScript = function(B, U, H) {
                  var ut = !1, pt;
                  if (!this.script || B !== this.scriptTag) {
                    if (pt = this.findScript(B), pt || (pt = this.findScript(Ic)), !pt)
                      return this.scriptTag;
                    this.scriptTag = pt.tag, this.script = pt.script, this.language = null, this.languageTag = null, ut = !0;
                  }
                  if ((!H || H !== this.direction) && (this.direction = H || k0(B)), U && U.length < 4 && (U += " ".repeat(4 - U.length)), !U || U !== this.languageTag) {
                    this.language = null;
                    for (var vt = i(this.script.langSysRecords), dt; !(dt = vt()).done; ) {
                      var Bt = dt.value;
                      if (Bt.tag === U) {
                        this.language = Bt.langSys, this.languageTag = Bt.tag;
                        break;
                      }
                    }
                    this.language || (this.language = this.script.defaultLangSys, this.languageTag = null), ut = !0;
                  }
                  if (ut && (this.features = {}, this.language))
                    for (var Xt = i(this.language.featureIndexes), fe; !(fe = Xt()).done; ) {
                      var $t = fe.value, he = this.table.featureList[$t], me = this.substituteFeatureForVariations($t);
                      this.features[he.tag] = me || he.feature;
                    }
                  return this.scriptTag;
                }, X.lookupsForFeatures = function(B, U) {
                  B === void 0 && (B = []);
                  for (var H = [], ut = i(B), pt; !(pt = ut()).done; ) {
                    var vt = pt.value, dt = this.features[vt];
                    if (dt)
                      for (var Bt = i(dt.lookupListIndexes), Xt; !(Xt = Bt()).done; ) {
                        var fe = Xt.value;
                        U && U.indexOf(fe) !== -1 || H.push({
                          feature: vt,
                          index: fe,
                          lookup: this.table.lookupList.get(fe)
                        });
                      }
                  }
                  return H.sort(function($t, he) {
                    return $t.index - he.index;
                  }), H;
                }, X.substituteFeatureForVariations = function(B) {
                  if (this.variationsIndex === -1)
                    return null;
                  for (var U = this.table.featureVariations.featureVariationRecords[this.variationsIndex], H = U.featureTableSubstitution.substitutions, ut = i(H), pt; !(pt = ut()).done; ) {
                    var vt = pt.value;
                    if (vt.featureIndex === B)
                      return vt.alternateFeatureTable;
                  }
                  return null;
                }, X.findVariationsIndex = function(B) {
                  var U = this.table.featureVariations;
                  if (!U)
                    return -1;
                  for (var H = U.featureVariationRecords, ut = 0; ut < H.length; ut++) {
                    var pt = H[ut].conditionSet.conditionTable;
                    if (this.variationConditionsMatch(pt, B))
                      return ut;
                  }
                  return -1;
                }, X.variationConditionsMatch = function(B, U) {
                  return B.every(function(H) {
                    var ut = H.axisIndex < U.length ? U[H.axisIndex] : 0;
                    return H.filterRangeMinValue <= ut && ut <= H.filterRangeMaxValue;
                  });
                }, X.applyFeatures = function(B, U, H) {
                  var ut = this.lookupsForFeatures(B);
                  this.applyLookups(ut, U, H);
                }, X.applyLookups = function(B, U, H) {
                  this.glyphs = U, this.positions = H, this.glyphIterator = new Fc(U);
                  for (var ut = i(B), pt; !(pt = ut()).done; ) {
                    var vt = pt.value, dt = vt.feature, Bt = vt.lookup;
                    for (this.currentFeature = dt, this.glyphIterator.reset(Bt.flags); this.glyphIterator.index < U.length; ) {
                      if (!(dt in this.glyphIterator.cur.features)) {
                        this.glyphIterator.next();
                        continue;
                      }
                      for (var Xt = i(Bt.subTables), fe; !(fe = Xt()).done; ) {
                        var $t = fe.value, he = this.applyLookup(Bt.lookupType, $t);
                        if (he)
                          break;
                      }
                      this.glyphIterator.next();
                    }
                  }
                }, X.applyLookup = function(B, U) {
                  throw new Error("applyLookup must be implemented by subclasses");
                }, X.applyLookupList = function(B) {
                  for (var U = this.glyphIterator.options, H = this.glyphIterator.index, ut = i(B), pt; !(pt = ut()).done; ) {
                    var vt = pt.value;
                    this.glyphIterator.reset(U, H), this.glyphIterator.increment(vt.sequenceIndex);
                    var dt = this.table.lookupList.get(vt.lookupListIndex);
                    this.glyphIterator.reset(dt.flags, this.glyphIterator.index);
                    for (var Bt = i(dt.subTables), Xt; !(Xt = Bt()).done; ) {
                      var fe = Xt.value;
                      if (this.applyLookup(dt.lookupType, fe))
                        break;
                    }
                  }
                  return this.glyphIterator.reset(U, H), !0;
                }, X.coverageIndex = function(B, U) {
                  switch (U == null && (U = this.glyphIterator.cur.id), B.version) {
                    case 1:
                      return B.glyphs.indexOf(U);
                    case 2:
                      for (var H = i(B.rangeRecords), ut; !(ut = H()).done; ) {
                        var pt = ut.value;
                        if (pt.start <= U && U <= pt.end)
                          return pt.startCoverageIndex + U - pt.start;
                      }
                      break;
                  }
                  return -1;
                }, X.match = function(B, U, H, ut) {
                  for (var pt = this.glyphIterator.index, vt = this.glyphIterator.increment(B), dt = 0; dt < U.length && vt && H(U[dt], vt); )
                    ut && ut.push(this.glyphIterator.index), dt++, vt = this.glyphIterator.next();
                  return this.glyphIterator.index = pt, dt < U.length ? !1 : ut || !0;
                }, X.sequenceMatches = function(B, U) {
                  return this.match(B, U, function(H, ut) {
                    return H === ut.id;
                  });
                }, X.sequenceMatchIndices = function(B, U) {
                  var H = this;
                  return this.match(B, U, function(ut, pt) {
                    return H.currentFeature in pt.features ? ut === pt.id : !1;
                  }, []);
                }, X.coverageSequenceMatches = function(B, U) {
                  var H = this;
                  return this.match(B, U, function(ut, pt) {
                    return H.coverageIndex(ut, pt.id) >= 0;
                  });
                }, X.getClassID = function(B, U) {
                  switch (U.version) {
                    case 1:
                      var H = B - U.startGlyph;
                      if (H >= 0 && H < U.classValueArray.length)
                        return U.classValueArray[H];
                      break;
                    case 2:
                      for (var ut = i(U.classRangeRecord), pt; !(pt = ut()).done; ) {
                        var vt = pt.value;
                        if (vt.start <= B && B <= vt.end)
                          return vt.class;
                      }
                      break;
                  }
                  return 0;
                }, X.classSequenceMatches = function(B, U, H) {
                  var ut = this;
                  return this.match(B, U, function(pt, vt) {
                    return pt === ut.getClassID(vt.id, H);
                  });
                }, X.applyContext = function(B) {
                  switch (B.version) {
                    case 1:
                      var U = this.coverageIndex(B.coverage);
                      if (U === -1)
                        return !1;
                      for (var H = B.ruleSets[U], ut = i(H), pt; !(pt = ut()).done; ) {
                        var vt = pt.value;
                        if (this.sequenceMatches(1, vt.input))
                          return this.applyLookupList(vt.lookupRecords);
                      }
                      break;
                    case 2:
                      if (this.coverageIndex(B.coverage) === -1 || (U = this.getClassID(this.glyphIterator.cur.id, B.classDef), U === -1))
                        return !1;
                      H = B.classSet[U];
                      for (var dt = i(H), Bt; !(Bt = dt()).done; ) {
                        var Xt = Bt.value;
                        if (this.classSequenceMatches(1, Xt.classes, B.classDef))
                          return this.applyLookupList(Xt.lookupRecords);
                      }
                      break;
                    case 3:
                      if (this.coverageSequenceMatches(0, B.coverages))
                        return this.applyLookupList(B.lookupRecords);
                      break;
                  }
                  return !1;
                }, X.applyChainingContext = function(B) {
                  switch (B.version) {
                    case 1:
                      var U = this.coverageIndex(B.coverage);
                      if (U === -1)
                        return !1;
                      for (var H = B.chainRuleSets[U], ut = i(H), pt; !(pt = ut()).done; ) {
                        var vt = pt.value;
                        if (this.sequenceMatches(-vt.backtrack.length, vt.backtrack) && this.sequenceMatches(1, vt.input) && this.sequenceMatches(1 + vt.input.length, vt.lookahead))
                          return this.applyLookupList(vt.lookupRecords);
                      }
                      break;
                    case 2:
                      if (this.coverageIndex(B.coverage) === -1)
                        return !1;
                      U = this.getClassID(this.glyphIterator.cur.id, B.inputClassDef);
                      var dt = B.chainClassSet[U];
                      if (!dt)
                        return !1;
                      for (var Bt = i(dt), Xt; !(Xt = Bt()).done; ) {
                        var fe = Xt.value;
                        if (this.classSequenceMatches(-fe.backtrack.length, fe.backtrack, B.backtrackClassDef) && this.classSequenceMatches(1, fe.input, B.inputClassDef) && this.classSequenceMatches(1 + fe.input.length, fe.lookahead, B.lookaheadClassDef))
                          return this.applyLookupList(fe.lookupRecords);
                      }
                      break;
                    case 3:
                      if (this.coverageSequenceMatches(-B.backtrackGlyphCount, B.backtrackCoverage) && this.coverageSequenceMatches(0, B.inputCoverage) && this.coverageSequenceMatches(B.inputGlyphCount, B.lookaheadCoverage))
                        return this.applyLookupList(B.lookupRecords);
                      break;
                  }
                  return !1;
                }, ft;
              }(), Da = /* @__PURE__ */ function() {
                function ft(rt, B, U, H) {
                  if (U === void 0 && (U = []), this._font = rt, this.codePoints = U, this.id = B, this.features = {}, Array.isArray(H))
                    for (var ut = 0; ut < H.length; ut++) {
                      var pt = H[ut];
                      this.features[pt] = !0;
                    }
                  else
                    typeof H == "object" && Object.assign(this.features, H);
                  this.ligatureID = null, this.ligatureComponent = null, this.isLigated = !1, this.cursiveAttachment = null, this.markAttachment = null, this.shaperInfo = null, this.substituted = !1, this.isMultiplied = !1;
                }
                var X = ft.prototype;
                return X.copy = function() {
                  return new ft(this._font, this.id, this.codePoints, this.features);
                }, o(ft, [{
                  key: "id",
                  get: function() {
                    return this._id;
                  },
                  set: function(B) {
                    this._id = B, this.substituted = !0;
                    var U = this._font.GDEF;
                    if (U && U.glyphClassDef) {
                      var H = Oo.prototype.getClassID(B, U.glyphClassDef);
                      this.isBase = H === 1, this.isLigature = H === 2, this.isMark = H === 3, this.markAttachmentType = U.markAttachClassDef ? Oo.prototype.getClassID(B, U.markAttachClassDef) : 0;
                    } else
                      this.isMark = this.codePoints.length > 0 && this.codePoints.every(P.isMark), this.isBase = !this.isMark, this.isLigature = this.codePoints.length > 1, this.markAttachmentType = 0;
                  }
                }]), ft;
              }(), Z0 = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(B) {
                  B.add(["ljmo", "vjmo", "tjmo"], !1);
                }, X.assignFeatures = function(B, U) {
                  for (var H = 0, ut = 0; ut < U.length; ) {
                    var pt = void 0, vt = U[ut], dt = vt.codePoints[0], Bt = Mo(dt), Xt = Zc[H][Bt];
                    switch (pt = Xt[0], H = Xt[1], pt) {
                      case Oa:
                        B.font.hasGlyphForCodePoint(dt) || (ut = Q0(U, ut, B.font));
                        break;
                      case Os:
                        ut = Yc(U, ut, B.font);
                        break;
                      case Ps:
                        Jc(U, ut, B.font);
                        break;
                      case Bs:
                        ut = Qc(U, ut, B.font);
                        break;
                    }
                    ut++;
                  }
                }, X;
              }(ka);
              N(Z0, "zeroMarkWidths", "NONE");
              var hi = 44032, Y0 = 55204, Dc = Y0 - hi + 1, Po = 4352, Bo = 4449, Qa = 4519, Oc = 19, Ro = 21, Xi = 28, Pc = Po + Oc - 1, Bc = Bo + Ro - 1, Rc = Qa + Xi - 1, K0 = 9676, Lc = function(X) {
                return 4352 <= X && X <= 4447 || 43360 <= X && X <= 43388;
              }, Nc = function(X) {
                return 4448 <= X && X <= 4519 || 55216 <= X && X <= 55238;
              }, Mc = function(X) {
                return 4520 <= X && X <= 4607 || 55243 <= X && X <= 55291;
              }, kc = function(X) {
                return 12334 <= X && X <= 12335;
              }, Uc = function(X) {
                return hi <= X && X <= Y0;
              }, zc = function(X) {
                return X - hi < Dc && (X - hi) % Xi === 0;
              }, Wc = function(X) {
                return Po <= X && X <= Pc;
              }, Hc = function(X) {
                return Bo <= X && X <= Bc;
              }, jc = function(X) {
                return 1 <= X && X <= Rc;
              }, Gc = 0, Vc = 1, Lo = 2, Ds = 3, No = 4, J0 = 5, Xc = 6;
              function Mo(ft) {
                return Lc(ft) ? Vc : Nc(ft) ? Lo : Mc(ft) ? Ds : zc(ft) ? No : Uc(ft) ? J0 : kc(ft) ? Xc : Gc;
              }
              var Vn = 0, Oa = 1, Os = 2, Ps = 4, Bs = 5, Zc = [
                //       X                 L                 V                T                  LV                LVT               M
                // State 0: start state
                [[Vn, 0], [Vn, 1], [Vn, 0], [Vn, 0], [Oa, 2], [Oa, 3], [Bs, 0]],
                // State 1: <L>
                [[Vn, 0], [Vn, 1], [Os, 2], [Vn, 0], [Oa, 2], [Oa, 3], [Bs, 0]],
                // State 2: <L,V> or <LV>
                [[Vn, 0], [Vn, 1], [Vn, 0], [Os, 3], [Oa, 2], [Oa, 3], [Ps, 0]],
                // State 3: <L,V,T> or <LVT>
                [[Vn, 0], [Vn, 1], [Vn, 0], [Vn, 0], [Oa, 2], [Oa, 3], [Ps, 0]]
              ];
              function Zi(ft, X, rt) {
                return new Da(ft, ft.glyphForCodePoint(X).id, [X], rt);
              }
              function Q0(ft, X, rt) {
                var B = ft[X], U = B.codePoints[0], H = U - hi, ut = Qa + H % Xi;
                H = H / Xi | 0;
                var pt = Po + H / Ro | 0, vt = Bo + H % Ro;
                if (!rt.hasGlyphForCodePoint(pt) || !rt.hasGlyphForCodePoint(vt) || ut !== Qa && !rt.hasGlyphForCodePoint(ut))
                  return X;
                var dt = Zi(rt, pt, B.features);
                dt.features.ljmo = !0;
                var Bt = Zi(rt, vt, B.features);
                Bt.features.vjmo = !0;
                var Xt = [dt, Bt];
                if (ut > Qa) {
                  var fe = Zi(rt, ut, B.features);
                  fe.features.tjmo = !0, Xt.push(fe);
                }
                return ft.splice.apply(ft, [X, 1].concat(Xt)), X + Xt.length - 1;
              }
              function Yc(ft, X, rt) {
                var B = ft[X], U = ft[X].codePoints[0], H = Mo(U), ut = ft[X - 1].codePoints[0], pt = Mo(ut), vt, dt, Bt, Xt;
                if (pt === No && H === Ds)
                  vt = ut, Xt = B;
                else {
                  H === Lo ? (dt = ft[X - 1], Bt = B) : (dt = ft[X - 2], Bt = ft[X - 1], Xt = B);
                  var fe = dt.codePoints[0], $t = Bt.codePoints[0];
                  Wc(fe) && Hc($t) && (vt = hi + ((fe - Po) * Ro + ($t - Bo)) * Xi);
                }
                var he = Xt && Xt.codePoints[0] || Qa;
                if (vt != null && (he === Qa || jc(he))) {
                  var me = vt + (he - Qa);
                  if (rt.hasGlyphForCodePoint(me)) {
                    var Fe = pt === Lo ? 3 : 2;
                    return ft.splice(X - Fe + 1, Fe, Zi(rt, me, B.features)), X - Fe + 1;
                  }
                }
                return dt && (dt.features.ljmo = !0), Bt && (Bt.features.vjmo = !0), Xt && (Xt.features.tjmo = !0), pt === No ? (Q0(ft, X - 1, rt), X + 1) : X;
              }
              function Kc(ft) {
                switch (Mo(ft)) {
                  case No:
                  case J0:
                    return 1;
                  case Lo:
                    return 2;
                  case Ds:
                    return 3;
                }
              }
              function Jc(ft, X, rt) {
                var B = ft[X], U = ft[X].codePoints[0];
                if (rt.glyphForCodePoint(U).advanceWidth !== 0) {
                  var H = ft[X - 1].codePoints[0], ut = Kc(H);
                  return ft.splice(X, 1), ft.splice(X - ut, 0, B);
                }
              }
              function Qc(ft, X, rt) {
                var B = ft[X], U = ft[X].codePoints[0];
                if (rt.hasGlyphForCodePoint(K0)) {
                  var H = Zi(rt, K0, B.features), ut = rt.glyphForCodePoint(U).advanceWidth === 0 ? X : X + 1;
                  ft.splice(ut, 0, H), X++;
                }
                return X;
              }
              var _c = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]], $c = [!1, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !1, !1, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0], qc = [[], ["broken_cluster"], ["consonant_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["symbol_cluster"], [], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], ["consonant_syllable"], ["vowel_syllable"], ["standalone_cluster"]], th = {
                stateTable: _c,
                accepting: $c,
                tags: qc
              }, eh = ["O", "IND", "S", "GB", "B", "FM", "CGJ", "VMAbv", "VMPst", "VAbv", "VPst", "CMBlw", "VPre", "VBlw", "H", "VMBlw", "CMAbv", "MBlw", "CS", "R", "SUB", "MPst", "MPre", "FAbv", "FPst", "FBlw", "null", "SMAbv", "SMBlw", "VMPre", "ZWNJ", "ZWJ", "WJ", "M", "VS", "N", "HN", "MAbv"], rh = {
                2507: [2503, 2494],
                2508: [2503, 2519],
                2888: [2887, 2902],
                2891: [2887, 2878],
                2892: [2887, 2903],
                3018: [3014, 3006],
                3019: [3015, 3006],
                3020: [3014, 3031],
                3144: [3142, 3158],
                3264: [3263, 3285],
                3271: [3270, 3285],
                3272: [3270, 3286],
                3274: [3270, 3266],
                3275: [3270, 3266, 3285],
                3402: [3398, 3390],
                3403: [3399, 3390],
                3404: [3398, 3415],
                3546: [3545, 3530],
                3548: [3545, 3535],
                3549: [3545, 3535, 3530],
                3550: [3545, 3551],
                3635: [3661, 3634],
                3763: [3789, 3762],
                3955: [3953, 3954],
                3957: [3953, 3956],
                3958: [4018, 3968],
                3959: [4018, 3953, 3968],
                3960: [4019, 3968],
                3961: [4019, 3953, 3968],
                3969: [3953, 3968],
                6971: [6970, 6965],
                6973: [6972, 6965],
                6976: [6974, 6965],
                6977: [6975, 6965],
                6979: [6978, 6965],
                69934: [69937, 69927],
                69935: [69938, 69927],
                70475: [70471, 70462],
                70476: [70471, 70487],
                70843: [70841, 70842],
                70844: [70841, 70832],
                70846: [70841, 70845],
                71098: [71096, 71087],
                71099: [71097, 71087]
              }, nh = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 2, 0, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]], ah = [!1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0], ih = [[], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["virama_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["number_joiner_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["numeral_cluster"]], ko = {
                categories: eh,
                decompositions: rh,
                stateTable: nh,
                accepting: ah,
                tags: ih
              }, Ar = {
                X: 1,
                C: 2,
                V: 4,
                N: 8,
                H: 16,
                ZWNJ: 32,
                ZWJ: 64,
                M: 128,
                SM: 256,
                VD: 512,
                A: 1024,
                Placeholder: 2048,
                Dotted_Circle: 4096,
                RS: 8192,
                // Register Shifter, used in Khmer OT spec.
                Coeng: 16384,
                // Khmer-style Virama.
                Repha: 32768,
                // Atomically-encoded logical or visual repha.
                Ra: 65536,
                CM: 1 << 17,
                // Consonant-Medial.
                Symbol: 1 << 18
                // Avagraha, etc that take marks (SM,A,VD).
              }, rr = {
                Start: 1,
                Ra_To_Become_Reph: 2,
                Pre_M: 4,
                Pre_C: 8,
                Base_C: 16,
                After_Main: 32,
                Above_C: 64,
                Before_Sub: 128,
                Below_C: 256,
                After_Sub: 512,
                Before_Post: 1024,
                Post_C: 2048,
                After_Post: 4096,
                Final_C: 8192,
                SMVD: 16384,
                End: 32768
              }, oh = Ar.C | Ar.Ra | Ar.CM | Ar.V | Ar.Placeholder | Ar.Dotted_Circle, _0 = Ar.ZWJ | Ar.ZWNJ, Yi = Ar.H | Ar.Coeng, $0 = {
                Default: {
                  hasOldSpec: !1,
                  virama: 0,
                  basePos: "Last",
                  rephPos: rr.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Devanagari: {
                  hasOldSpec: !0,
                  virama: 2381,
                  basePos: "Last",
                  rephPos: rr.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Bengali: {
                  hasOldSpec: !0,
                  virama: 2509,
                  basePos: "Last",
                  rephPos: rr.After_Sub,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Gurmukhi: {
                  hasOldSpec: !0,
                  virama: 2637,
                  basePos: "Last",
                  rephPos: rr.Before_Sub,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Gujarati: {
                  hasOldSpec: !0,
                  virama: 2765,
                  basePos: "Last",
                  rephPos: rr.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Oriya: {
                  hasOldSpec: !0,
                  virama: 2893,
                  basePos: "Last",
                  rephPos: rr.After_Main,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Tamil: {
                  hasOldSpec: !0,
                  virama: 3021,
                  basePos: "Last",
                  rephPos: rr.After_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Telugu: {
                  hasOldSpec: !0,
                  virama: 3149,
                  basePos: "Last",
                  rephPos: rr.After_Post,
                  rephMode: "Explicit",
                  blwfMode: "Post_Only"
                },
                Kannada: {
                  hasOldSpec: !0,
                  virama: 3277,
                  basePos: "Last",
                  rephPos: rr.After_Post,
                  rephMode: "Implicit",
                  blwfMode: "Post_Only"
                },
                Malayalam: {
                  hasOldSpec: !0,
                  virama: 3405,
                  basePos: "Last",
                  rephPos: rr.After_Main,
                  rephMode: "Log_Repha",
                  blwfMode: "Pre_And_Post"
                },
                // Handled by UniversalShaper
                // Sinhala: {
                //   hasOldSpec: false,
                //   virama: 0x0DCA,
                //   basePos: 'Last_Sinhala',
                //   rephPos: POSITIONS.After_Main,
                //   rephMode: 'Explicit',
                //   blwfMode: 'Pre_And_Post'
                // },
                Khmer: {
                  hasOldSpec: !1,
                  virama: 6098,
                  basePos: "First",
                  rephPos: rr.Ra_To_Become_Reph,
                  rephMode: "Vis_Repha",
                  blwfMode: "Pre_And_Post"
                }
              }, sh = {
                // Khmer
                6078: [6081, 6078],
                6079: [6081, 6079],
                6080: [6081, 6080],
                6084: [6081, 6084],
                6085: [6081, 6085]
              }, lh = ko.decompositions, q0 = new O(s("AAARAAAAAABg2AAAAWYPmfDtnXuMXFUdx+/uzs7M7szudAtECGJRIMRQbUAithQWkGAKiVhNpFVRRAmIQVCDkDYICGotIA9BTCz8IeUviv7BQ2PBtBIRLBBQIWAUsKg1BKxRAqIgfs/cc+aeOXPej3tnZX7JJ/dxzj3nd36/8753Z5fUsuxgsAwcAU4Gp4BPgM+Cd4P3RjieDs4GXwLrHJ5bDy4DG8A14LvgZrAZbAF3gns0z18ALgY/B78C94NHwBPgabAE/AX8DbwM5sF/QX0yD5vFcU/wVnAgWAoOAyvAceBE8CGwBpwGzgJfAF8BXwXfAFeC68EmsBlsAXeCreA+8CB4DDwF/gh2gd3gFfAGmKxn2QzYC+wHDgRLweFgJTgWrKrnuq/GcQ04jV6fheN54EJwEbgcXAG+Q8O/j+Mt4DZwB9haz8t9Hz3a8iCN/xiOvwRP0evH6fE68AzOH+Ke2eWYhw3PcGnuxvkr4A3QaGRZB7wFLAEHg2XgiEZ/fHKcp/ceBh/A+cngFPCpRm6vM3E8l8a5gN67GMdvgqsbeX2ap9yI601gM7gN3AG20mfuo8cdOP6GpvdUg9oKxz839GV90RDO2/glxN1B790NXsN1rZll7WYRdw+c70uvTwIHNAfTO0RyL5TDmnnbc3lmRQI9UnM0dD5eovfz4FpJ/BNpXNYWV+N6Lfg0hY97JK1vn+Pur9DoQur2F7m436bHDUK8C5t5/8vruo4+97WmXG+GLmzEiBF+PDwEOowYMWLEiBEjRoxYeBw5BDqIPEfXut9yWN+vVNxfrnnmWqR/PdgENoMt4E5wD9gOHgCPgifBs2BXM99b2o3jP8F/wMRUlrXAHNgHvH0q3895J46HguXgWHAGLctmLv9VuL96qnp7jxgxYsSbCbJvuRZ97/tqxT59VVRtixEjRsThBG7OSt5zzoPT0M+cBc4T5noXOs79TqLHeZrHUeCSqeJ96gacXy2kecNU8V6Hh7yXuQlhtw7B/PO1RTkr52Aj8JNFZjYg3gOKuC/g/v6Ls2wNuAY8urg//PcIb+6RZXuDNeCS6SzbBrJWlh0DLiFHco8ed9IjzzvaWfa9sZzTcf6D9mCcnbg3PlNcH4fzS8F2MDaLdQG4dLZIJxbbaZqv4ri8k58f3+mPs66T6/TTzqDeI0aMGDGiHP5dcR8ce/xxYcWi6vOfr725uRzcjnngXVOD61Hync+9uL+Nmyfej/NHpvL56A5Jeuz7uyfo+pqcPz2Vf1NH0ttJ03pekt8SmuY/EPYy9zzbN319ym/9TL6ZIt9MHCXRdxJtoAkWTRdz472n87D9cTwYLJvuz++I6WIePo/zE8AHp4v8WLyP0nufnM6/+zoDx8+DL08P6r9+urheRtO+jD6/cdrsx3mqu8w+xH4PScKIXa5D2jeCm8Et4DbwI/BjcC/4BXgI/Bb8DuwEu8Bu8Ap4A9RaRZptnO8J9gUHgEPAoWA5OLY1qMO90GEV7q+mYWtxPBWcIYnL4p+DsPNbxfVFOP86uAr8DNc34HgTDb8Vx9sVaRFI/LtagzYjnCqpb908EX87eBA8Bh4Hf2jle/9/wvGFVv787rrZZy8h7qtgDOuFOmiBuXYRvg/O9wMHgXeB97SLspk4sq0OI/q9v13+ek+sh3zYSRp9jrYorw9ll1/GRzR+KotYZSHf8laVP2lvpA/8OGdPMk59hqtXZ+L8nHbxvWwqO65ryu+fT3VZz+l4dET7L0R072ljsMyzTpaJqQxsbL8M9WajY789DO85XMp/Dcp3Qztdn+9qf/a97ZWK8PXc3G+TpC/nv8Mncy7ZvICF302P5O+aNiOtLdTXd+D4Q7DVwfcvWvx9zTEJ/o5iG3R8YAjGNFseha5PGuZKz7b7xxXbOrXMcu5eJSo//rXdH/73Enz6L1q/X+fyIu8wZGtNBmkjkzNZNgP2AvuBg2bysKUzduXn/66JtNeN4PCZvO0/x7Ujdn4VnYOvRJzjZ/I+9sQZeftX2Tc1RPcPz/Tf4/si0g+t5Mq+kfZjZL34Mc5ul3PPnE7TOxvHK2qDaZ+L++db2HyYqMo/qVnb/P8uH8/rmnFxR0k6DCu/rjj/RxT7KGUSWgbd+LMQuEgYB1zsk2qtvJD8v5AhdfdttbEunSxbcJD9Zf7chqp1Hlbe7FK1/aPVTfp7FgtC1yGGiSncFK/DhZvi+epZta0WWjlsfDZMyPRdSPrryqSSKnXx1bkq/Ye9TlRpk7Lrjq1UrfdC9X+MtKqwP6+3a/4pJFUZF0pZZpv91MYjMBaRRXbxpho5zQmUY3F+Pt4o7rvQrBXPdm00TaE24uMadaM2meLSI7iu071t3er3b6ZLi8JEde3qw+6zGv+ycF5kaRBh/m1T/7Yl/mMyTuMwadP4xL9ifjJpNwbvDZRJ8G8vnqV/Wf12aa/kyOdl69+BspTsXzGueE6E+JfZnvmXIfNPW+FfXkjb1YmqPNpnLP3b61fHCj/X5tzGANf2y3yqvC7Jv7btV4TVbdammI9l/g0dS5lNxLrk2j9r8xjjxhBQnygg0lgg/bOrfyct+udJi/Yrk0lFnxC7f+5kRbsNmcexfrubt0X/rGvLqrGSnYv3ZPHEe8r7lvMvUfi2LOu/2dg8LrRtQt2yfcv8r5IU70VkIs6nbebUXf0M/o7Znl39Sdoz+X1oEb5N8ffF67qhPfPP6eoUbxf+GRf/6sRnvaSdmw+Bf1VxmbD+2sa//DU7t/Gv2PfKpKdrBP92Ojk+IvqX16ks/2qxbL8EZnc2HqsgYuqPuzZV+I3RbujbDm+T0PmWCVO/5jqftp1zy+wSA6s0JWtp2z5e1oZV+yMsjB3ZXolsv0Ulrv01v3/iKrF94Qtbt9siCnmeb6fjjf59KnLk1xaEbvtvFnFirGvEOqmycQrbm/IMsXd3P28uh4nM3swXRER717OiX8kc7K2qqyn2p3maFGU/aruP5VCv+PraoTYU8yUmmbDwcYo6pusnM486xdoga4dkPCb1pK7Sfc6ebvkd4qeAtQcd/N63bB3lU3dlUnUf38VyvqCqK7JxlNSd7lydrDlm+/uqHiRvl30Nrp/n9zpkZRjoJ3V1diyP05rIYXHYs+w+D5+WMS8b5gZtKcuX0KT5d/WwtB97VnyvY6rjMukI56HI0rFJPwt8PjT/1OXzSbcMeEmdh294qvKK4rNu7j4n3LNZg8TKXwafv025U+XvKjHsT8Q7/7LGaJt9lAh7Asz3uv0XEX6t0duDoWN/93wmh92XpUHmCKb9GALbG+rZP3AfNbQPKKv/jpF/bP0JXfuW1QYk7dhljcyvk5mw+933Hpo1g26PQ2ZP6zVmTJt47P25jncD9vPwGS+q9QS/V6RaY8j8K8LmvUr9HfYCpH5OWL9lZY+Sv6pesHCJHbtrf9k6etZvf0G1L0ja4cAe1UT/s3zdCe3/Q5/n372wMc97/E1Qh0Tbmfwh3m/V9On72tNnrCF1sJkVe1EyXMdBa7+lHMsk44zMF6St9e2djNnbm8ybpHkq+gbbemMaH0UZmD8obKGrk7r+nt+3bE7o83YZp/vqOKdv6PzJNN6mTJsI/51XR7i2ZrGA5B6zFwnjzxmqPjaGfW3tZNrz1eljq29mOOqeCfF/irRt87PNw0uXSVAvrmOMNT569MptsYaV0sic/wbY13e8hPrb9K2ySUJ0j6G/Lu0U4qpTrR23jMp6m5hU+YTaWCeh9aIsm/rqUHV4bFv42kgnZdfH1PUj1D7DVH9d8khRN1zFRl/+/TW//qxL1uH83+mk3H+SvRtS2TDU90nX2TpM6/1xzZpZtoYdK763dqlz0f6uNeFehcs+H/nbGP77MpX06n/ofpzP+tVmTUvRtVuX/cjS67OE5kRBrxyJ+w/dPo7r+9cO1160e3gqu0S2uW7PjN/L6ns/UfMf10Lai87frJ+3KndAfc8yTf1M3T4s6qm4/yh7/2GSkG8UMw//DvRLgbYZSEOxr0LCWvRdjfh9XGzfqN4NivfZd7rsmFp08zmbssrKJEuTfVMZopdpbuwSrhNv3/N2s+0PDG3KNB6RMrFvJHv6B85HXObAoWsd3zm3i+6uZYytv+5+pohbpo6+tpZJFfmGlrcMf4c8b1Pe2OUIsaXJrinCTfaxtZOt+NYnU3hIfQlN20Z/1+dt7JaqLsbIzycNWZmrlNg2Dc2/LJ1T+T6WrrYSml4Ku7ik7yIx2opJD51vU9UfVRmrqL8u/olZj0PyCLV5irxcdKoi/6rKb8qTrHsnhW9jyZH/nSpeWDzxd9769uQ016lgUuf2pAfKPhu2FpfZL2Yb9snLNl/fNIepXaUsj4vNXCXUZ75px8ojNP8UPvAta2g6fb+F1ckZuneshv1vGXXDeyRRrN/bBPS1Jul+l+7zW86R7Wv63WXyDpt/RxraRjvC+TC3O61/Sqj/prag8x372yQivn+XwudrI2X2E2KdtJEov52e0L+uv4FO3p/rvssgsL8F4d/z9PzlWS94m8fqS3361Fi+6qaVYHwi9Yz4iH2fobIj+45cpz/TUaarr/4+z+vaWtVtyAX2d1LG8W9C3f+F1mnf36/k4w3YPrLv+XBVXCJs3cr+n4MKJuLv/fN9GhNdXVP5pJMN9vFi3rpv3/r8Ywg3SYp66zNOsO8QGcxPpnmRS/1mvmJjju3v7absI2xspQrvs1dNbjOj/wP7h1RlZyKGy8occ408UL8En4v6xfC/K3z52XzJd62T8vuZGGsxo/6O46ntmNqqFb/jps2/hHV4rPKH0svT4pstU7t2tZ9u/ZdqbJL1MwP6O86Fyt4jYaIrGz9mjEt8lFL4PtVE6votG2P6fpdf/GZRse7s3bf4BtSl/DIbKMctx++Z+8o6K6z9FPOwKsRmXiaNl7C+6NYRpjlbqG1j72f49qsuY4brd/amb4ZVc8TQ+sSH985LrEe8iPWJnfPrJRbWbb+dwn4x6o+r/aS2S7w3qWt//LnYz2ntE0vH1uDcyKatx1rH+EiMPEN1SZG/iz6+9o01Rob6O7Q+xLZ1jHobK61U+pWVvo2EpuWqzzD6Poa+pvhli0wn8Zq/72Mzm2d90o5VN1x9ZKuzbTgvqWwUIin8FSpl1CXXvFRxU0iozVPYJDRtF3uFphn6XAyJUUdD7SjTJ8v6n9fVbVObkKWp001lc9VRlqdOf5v0ZM+bymdbfp1NfG0bq27Y5JMyfxeJkU6o/inKH8O2Zfgidb6h/g3VJ7QcVbWL0Pxt6rlrPqa4KfQ25a2zl4/E8GdM/4fK/wA=", "base64")), fh = new T(th), gn = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(B) {
                  B.addStage(uh), B.addStage(["locl", "ccmp"]), B.addStage(hh), B.addStage("nukt"), B.addStage("akhn"), B.addStage("rphf", !1), B.addStage("rkrf"), B.addStage("pref", !1), B.addStage("blwf", !1), B.addStage("abvf", !1), B.addStage("half", !1), B.addStage("pstf", !1), B.addStage("vatu"), B.addStage("cjct"), B.addStage("cfar", !1), B.addStage(dh), B.addStage({
                    local: ["init"],
                    global: ["pres", "abvs", "blws", "psts", "haln", "dist", "abvm", "blwm", "calt", "clig"]
                  }), B.unicodeScript = Xu(B.script), B.indicConfig = $0[B.unicodeScript] || $0.Default, B.isOldSpec = B.indicConfig.hasOldSpec && B.script[B.script.length - 1] !== "2";
                }, X.assignFeatures = function(B, U) {
                  for (var H = function(vt) {
                    var dt = U[vt].codePoints[0], Bt = sh[dt] || lh[dt];
                    if (Bt) {
                      var Xt = Bt.map(function(fe) {
                        var $t = B.font.glyphForCodePoint(fe);
                        return new Da(B.font, $t.id, [fe], U[vt].features);
                      });
                      U.splice.apply(U, [vt, 1].concat(Xt));
                    }
                  }, ut = U.length - 1; ut >= 0; ut--)
                    H(ut);
                }, X;
              }(ka);
              N(gn, "zeroMarkWidths", "NONE");
              function Rs(ft) {
                return q0.get(ft.codePoints[0]) >> 8;
              }
              function tl(ft) {
                return 1 << (q0.get(ft.codePoints[0]) & 255);
              }
              var Uo = function(X, rt, B, U) {
                this.category = X, this.position = rt, this.syllableType = B, this.syllable = U;
              };
              function uh(ft, X) {
                for (var rt = 0, B = 0, U = i(fh.match(X.map(Rs))), H; !(H = U()).done; ) {
                  var ut = H.value, pt = ut[0], vt = ut[1], dt = ut[2];
                  if (pt > B) {
                    ++rt;
                    for (var Bt = B; Bt < pt; Bt++)
                      X[Bt].shaperInfo = new Uo(Ar.X, rr.End, "non_indic_cluster", rt);
                  }
                  ++rt;
                  for (var Xt = pt; Xt <= vt; Xt++)
                    X[Xt].shaperInfo = new Uo(1 << Rs(X[Xt]), tl(X[Xt]), dt[0], rt);
                  B = vt + 1;
                }
                if (B < X.length) {
                  ++rt;
                  for (var fe = B; fe < X.length; fe++)
                    X[fe].shaperInfo = new Uo(Ar.X, rr.End, "non_indic_cluster", rt);
                }
              }
              function _a(ft) {
                return ft.shaperInfo.category & oh;
              }
              function Sa(ft) {
                return ft.shaperInfo.category & _0;
              }
              function Pa(ft) {
                return ft.shaperInfo.category & Yi;
              }
              function Ba(ft, X) {
                for (var rt = i(ft), B; !(B = rt()).done; ) {
                  var U, H = B.value;
                  H.features = (U = {}, U[X] = !0, U);
                }
                var ut = ft[0]._font._layoutEngine.engine.GSUBProcessor;
                return ut.applyFeatures([X], ft), ft.length === 1;
              }
              function ch(ft, X, rt) {
                var B = [rt, X, rt];
                return Ba(B.slice(0, 2), "blwf") || Ba(B.slice(1, 3), "blwf") ? rr.Below_C : Ba(B.slice(0, 2), "pstf") || Ba(B.slice(1, 3), "pstf") || Ba(B.slice(0, 2), "pref") || Ba(B.slice(1, 3), "pref") ? rr.Post_C : rr.Base_C;
              }
              function hh(ft, X, rt) {
                var B = rt.indicConfig, U = ft._layoutEngine.engine.GSUBProcessor.features, H = ft.glyphForCodePoint(9676).id, ut = ft.glyphForCodePoint(B.virama).id;
                if (ut)
                  for (var pt = new Da(ft, ut, [B.virama]), vt = 0; vt < X.length; vt++)
                    X[vt].shaperInfo.position === rr.Base_C && (X[vt].shaperInfo.position = ch(ft, X[vt].copy(), pt));
                for (var dt = 0, Bt = zo(X, 0); dt < X.length; dt = Bt, Bt = zo(X, dt)) {
                  var Xt = X[dt].shaperInfo;
                  Xt.category;
                  var fe = Xt.syllableType;
                  if (!(fe === "symbol_cluster" || fe === "non_indic_cluster")) {
                    if (fe === "broken_cluster" && H) {
                      var $t = new Da(ft, H, [9676]);
                      $t.shaperInfo = new Uo(1 << Rs($t), tl($t), X[dt].shaperInfo.syllableType, X[dt].shaperInfo.syllable);
                      for (var he = dt; he < Bt && X[he].shaperInfo.category === Ar.Repha; )
                        he++;
                      X.splice(he++, 0, $t), Bt++;
                    }
                    var me = Bt, Fe = dt, je = !1;
                    if (B.rephPos !== rr.Ra_To_Become_Reph && U.rphf && dt + 3 <= Bt && (B.rephMode === "Implicit" && !Sa(X[dt + 2]) || B.rephMode === "Explicit" && X[dt + 2].shaperInfo.category === Ar.ZWJ)) {
                      var tr = [X[dt].copy(), X[dt + 1].copy(), X[dt + 2].copy()];
                      if (Ba(tr.slice(0, 2), "rphf") || B.rephMode === "Explicit" && Ba(tr, "rphf")) {
                        for (Fe += 2; Fe < Bt && Sa(X[Fe]); )
                          Fe++;
                        me = dt, je = !0;
                      }
                    } else if (B.rephMode === "Log_Repha" && X[dt].shaperInfo.category === Ar.Repha) {
                      for (Fe++; Fe < Bt && Sa(X[Fe]); )
                        Fe++;
                      me = dt, je = !0;
                    }
                    switch (B.basePos) {
                      case "Last": {
                        var Ze = Bt, vr = !1;
                        do {
                          var fr = X[--Ze].shaperInfo;
                          if (_a(X[Ze])) {
                            if (fr.position !== rr.Below_C && (fr.position !== rr.Post_C || vr)) {
                              me = Ze;
                              break;
                            }
                            fr.position === rr.Below_C && (vr = !0), me = Ze;
                          } else if (dt < Ze && fr.category === Ar.ZWJ && X[Ze - 1].shaperInfo.category === Ar.H)
                            break;
                        } while (Ze > Fe);
                        break;
                      }
                      case "First": {
                        me = dt;
                        for (var gr = me + 1; gr < Bt; gr++)
                          _a(X[gr]) && (X[gr].shaperInfo.position = rr.Below_C);
                      }
                    }
                    je && me === dt && Fe - me <= 2 && (je = !1);
                    for (var wr = dt; wr < me; wr++) {
                      var Vr = X[wr].shaperInfo;
                      Vr.position = Math.min(rr.Pre_C, Vr.position);
                    }
                    me < Bt && (X[me].shaperInfo.position = rr.Base_C);
                    for (var nn = me + 1; nn < Bt; nn++)
                      if (X[nn].shaperInfo.category === Ar.M) {
                        for (var Hr = nn + 1; Hr < Bt; Hr++)
                          if (_a(X[Hr])) {
                            X[Hr].shaperInfo.position = rr.Final_C;
                            break;
                          }
                        break;
                      }
                    if (je && (X[dt].shaperInfo.position = rr.Ra_To_Become_Reph), rt.isOldSpec) {
                      for (var mr = rt.unicodeScript !== "Malayalam", Lr = me + 1; Lr < Bt; Lr++)
                        if (X[Lr].shaperInfo.category === Ar.H) {
                          var jr = void 0;
                          for (jr = Bt - 1; jr > Lr && !(_a(X[jr]) || mr && X[jr].shaperInfo.category === Ar.H); jr--)
                            ;
                          if (X[jr].shaperInfo.category !== Ar.H && jr > Lr) {
                            var vn = X[Lr];
                            X.splice.apply(X, [Lr, 0].concat(X.splice(Lr + 1, jr - Lr))), X[jr] = vn;
                          }
                          break;
                        }
                    }
                    for (var xr = rr.Start, Nr = dt; Nr < Bt; Nr++) {
                      var Xr = X[Nr].shaperInfo;
                      if (Xr.category & (_0 | Ar.N | Ar.RS | Ar.CM | Yi & Xr.category)) {
                        if (Xr.position = xr, Xr.category === Ar.H && Xr.position === rr.Pre_M) {
                          for (var Sr = Nr; Sr > dt; Sr--)
                            if (X[Sr - 1].shaperInfo.position !== rr.Pre_M) {
                              Xr.position = X[Sr - 1].shaperInfo.position;
                              break;
                            }
                        }
                      } else
                        Xr.position !== rr.SMVD && (xr = Xr.position);
                    }
                    for (var cn = me, Sn = me + 1; Sn < Bt; Sn++)
                      if (_a(X[Sn])) {
                        for (var Pn = cn + 1; Pn < Sn; Pn++)
                          X[Pn].shaperInfo.position < rr.SMVD && (X[Pn].shaperInfo.position = X[Sn].shaperInfo.position);
                        cn = Sn;
                      } else
                        X[Sn].shaperInfo.category === Ar.M && (cn = Sn);
                    var zn = X.slice(dt, Bt);
                    zn.sort(function(va, Ms) {
                      return va.shaperInfo.position - Ms.shaperInfo.position;
                    }), X.splice.apply(X, [dt, zn.length].concat(zn));
                    for (var Bn = dt; Bn < Bt; Bn++)
                      if (X[Bn].shaperInfo.position === rr.Base_C) {
                        me = Bn;
                        break;
                      }
                    for (var Xn = dt; Xn < Bt && X[Xn].shaperInfo.position === rr.Ra_To_Become_Reph; Xn++)
                      X[Xn].features.rphf = !0;
                    for (var Zn = !rt.isOldSpec && B.blwfMode === "Pre_And_Post", Tn = dt; Tn < me; Tn++)
                      X[Tn].features.half = !0, Zn && (X[Tn].features.blwf = !0);
                    for (var yn = me + 1; yn < Bt; yn++)
                      X[yn].features.abvf = !0, X[yn].features.pstf = !0, X[yn].features.blwf = !0;
                    if (rt.isOldSpec && rt.unicodeScript === "Devanagari")
                      for (var Wn = dt; Wn + 1 < me; Wn++)
                        X[Wn].shaperInfo.category === Ar.Ra && X[Wn + 1].shaperInfo.category === Ar.H && (Wn + 1 === me || X[Wn + 2].shaperInfo.category === Ar.ZWJ) && (X[Wn].features.blwf = !0, X[Wn + 1].features.blwf = !0);
                    var Mr = 2;
                    if (U.pref && me + Mr < Bt)
                      for (var Fr = me + 1; Fr + Mr - 1 < Bt; Fr++) {
                        var qr = [X[Fr].copy(), X[Fr + 1].copy()];
                        if (Ba(qr, "pref")) {
                          for (var Zr = 0; Zr < Mr; Zr++)
                            X[Fr++].features.pref = !0;
                          if (U.cfar)
                            for (; Fr < Bt; Fr++)
                              X[Fr].features.cfar = !0;
                          break;
                        }
                      }
                    for (var kr = dt + 1; kr < Bt; kr++)
                      if (Sa(X[kr])) {
                        var Fn = X[kr].shaperInfo.category === Ar.ZWNJ, di = kr;
                        do
                          di--, Fn && delete X[di].features.half;
                        while (di > dt && !_a(X[di]));
                      }
                  }
                }
              }
              function dh(ft, X, rt) {
                for (var B = rt.indicConfig, U = ft._layoutEngine.engine.GSUBProcessor.features, H = 0, ut = zo(X, 0); H < X.length; H = ut, ut = zo(X, H)) {
                  for (var pt = !!U.pref, vt = H; vt < ut; vt++)
                    if (X[vt].shaperInfo.position >= rr.Base_C) {
                      if (pt && vt + 1 < ut) {
                        for (var dt = vt + 1; dt < ut; dt++)
                          if (X[dt].features.pref) {
                            if (!(X[dt].substituted && X[dt].isLigated && !X[dt].isMultiplied)) {
                              for (vt = dt; vt < ut && Pa(X[vt]); )
                                vt++;
                              X[vt].shaperInfo.position = rr.BASE_C, pt = !1;
                            }
                            break;
                          }
                      }
                      if (rt.unicodeScript === "Malayalam")
                        for (var Bt = vt + 1; Bt < ut; Bt++) {
                          for (; Bt < ut && Sa(X[Bt]); )
                            Bt++;
                          if (Bt === ut || !Pa(X[Bt]))
                            break;
                          for (Bt++; Bt < ut && Sa(X[Bt]); )
                            Bt++;
                          Bt < ut && _a(X[Bt]) && X[Bt].shaperInfo.position === rr.Below_C && (vt = Bt, X[vt].shaperInfo.position = rr.Base_C);
                        }
                      H < vt && X[vt].shaperInfo.position > rr.Base_C && vt--;
                      break;
                    }
                  if (vt === ut && H < vt && X[vt - 1].shaperInfo.category === Ar.ZWJ && vt--, vt < ut)
                    for (; H < vt && X[vt].shaperInfo.category & (Ar.N | Yi); )
                      vt--;
                  if (H + 1 < ut && H < vt) {
                    var Xt = vt === ut ? vt - 2 : vt - 1;
                    if (rt.unicodeScript !== "Malayalam" && rt.unicodeScript !== "Tamil") {
                      for (; Xt > H && !(X[Xt].shaperInfo.category & (Ar.M | Yi)); )
                        Xt--;
                      Pa(X[Xt]) && X[Xt].shaperInfo.position !== rr.Pre_M ? Xt + 1 < ut && Sa(X[Xt + 1]) && Xt++ : Xt = H;
                    }
                    if (H < Xt && X[Xt].shaperInfo.position !== rr.Pre_M) {
                      for (var fe = Xt; fe > H; fe--)
                        if (X[fe - 1].shaperInfo.position === rr.Pre_M) {
                          var $t = fe - 1;
                          $t < vt && vt <= Xt && vt--;
                          var he = X[$t];
                          X.splice.apply(X, [$t, 0].concat(X.splice($t + 1, Xt - $t))), X[Xt] = he, Xt--;
                        }
                    }
                  }
                  if (H + 1 < ut && X[H].shaperInfo.position === rr.Ra_To_Become_Reph && X[H].shaperInfo.category === Ar.Repha !== (X[H].isLigated && !X[H].isMultiplied)) {
                    var me = void 0, Fe = B.rephPos, je = !1;
                    if (Fe !== rr.After_Post) {
                      for (me = H + 1; me < vt && !Pa(X[me]); )
                        me++;
                      if (me < vt && Pa(X[me]) && (me + 1 < vt && Sa(X[me + 1]) && me++, je = !0), !je && Fe === rr.After_Main) {
                        for (me = vt; me + 1 < ut && X[me + 1].shaperInfo.position <= rr.After_Main; )
                          me++;
                        je = me < ut;
                      }
                      if (!je && Fe === rr.After_Sub) {
                        for (me = vt; me + 1 < ut && !(X[me + 1].shaperInfo.position & (rr.Post_C | rr.After_Post | rr.SMVD)); )
                          me++;
                        je = me < ut;
                      }
                    }
                    if (!je) {
                      for (me = H + 1; me < vt && !Pa(X[me]); )
                        me++;
                      me < vt && Pa(X[me]) && (me + 1 < vt && Sa(X[me + 1]) && me++, je = !0);
                    }
                    if (!je) {
                      for (me = ut - 1; me > H && X[me].shaperInfo.position === rr.SMVD; )
                        me--;
                      if (Pa(X[me]))
                        for (var tr = vt + 1; tr < me; tr++)
                          X[tr].shaperInfo.category === Ar.M && me--;
                    }
                    var Ze = X[H];
                    X.splice.apply(X, [H, 0].concat(X.splice(H + 1, me - H))), X[me] = Ze, H < vt && vt <= me && vt--;
                  }
                  if (pt && vt + 1 < ut) {
                    for (var vr = vt + 1; vr < ut; vr++)
                      if (X[vr].features.pref) {
                        if (X[vr].isLigated && !X[vr].isMultiplied) {
                          var fr = vt;
                          if (rt.unicodeScript !== "Malayalam" && rt.unicodeScript !== "Tamil") {
                            for (; fr > H && !(X[fr - 1].shaperInfo.category & (Ar.M | Yi)); )
                              fr--;
                            if (fr > H && X[fr - 1].shaperInfo.category === Ar.M) {
                              for (var gr = vr, wr = vt + 1; wr < gr; wr++)
                                if (X[wr].shaperInfo.category === Ar.M) {
                                  fr--;
                                  break;
                                }
                            }
                          }
                          fr > H && Pa(X[fr - 1]) && fr < ut && Sa(X[fr]) && fr++;
                          var Vr = vr, nn = X[Vr];
                          X.splice.apply(X, [fr + 1, 0].concat(X.splice(fr, Vr - fr))), X[fr] = nn, fr <= vt && vt < Vr && vt++;
                        }
                        break;
                      }
                  }
                  X[H].shaperInfo.position === rr.Pre_M && (!H || !/Cf|Mn/.test(P.getCategory(X[H - 1].codePoints[0]))) && (X[H].features.init = !0);
                }
              }
              function zo(ft, X) {
                if (X >= ft.length)
                  return X;
                for (var rt = ft[X].shaperInfo.syllable; ++X < ft.length && ft[X].shaperInfo.syllable === rt; )
                  ;
                return X;
              }
              var vh = ko.categories, el = ko.decompositions, ph = new O(s("AAACAAAAAAAQugAAAQUO+vHtnHuMX0UVx2d3u/t7bXe7FlqgvB+mpQhFmhikMRAg0ZQmakMU+cPWBzZisEGNjUpoiIYCEgmGUGOEGqOVNPUZUGNA+QNIBU2KREEFFSMBUYRISMXE+B3vnPzOzp553tcWfif5ZO5jnufMzJ2ZO/eumlDqFLAWnAMuBBvBZnC5uXZeBe4WsA1sBzs8/naCXcL1G8GtYDfYA74NvgfuAfcZHmT+fwEeBb8DTwvxPQWeAavACyZvq8z9VYxXwCGglijVBcvACnA8eCM4E6wHG8BF4BLwbvA+8AHwUbAd7AA7wS5wC9gN7gR7wX5wN7gXPAAeBr8Gvwd/Ac+CF8EhoCaV6oBZsBKcAE4FZ0wWeV8P9zxwoTnfCHczuBxsAdvAx8Gnzf1r4X4B3AxuA1+bHJb9m5PzdVGW/Yjv+xXHyfmxFfd9OH8Q/Ar8Bjw1WZT3GfACeAX8N5CfqSmlZsAKsGqqCH8K3DXgbHCuuXYB3HeAd4HLpgrdarbi+EPgY+CT4HPg8ybMTcb9MtyvghtYut/A+b4pf95+ELgfw08Qx/3gADgInjDl0veehPtX8A/wsrn2KtzxDuogWNoJx38k/BzXKeI8Ee5qcBZYD9aZtDbg+AwT19uMX83F7JizCdcvBZdZ97c6/BMfMWmfzfTm88/95aLj+DDSvApcDXZ04uPfaen3TMHPLvi5BezuFPVtD4t/qUcfe3FvP7gb3Ouwo9T+H+gMy/UIjh8DfwBPm7T08d/M8WMBe1Sh3xEjXo+M2s+IESNGjBgxYsSI1wLrOsM1gRsi/P+TzV3/Zc1jvxgR/j8IM9Et1mEGcJeDFeA4cJq5/ia467uF/w1wzwdvB+80998LdwvYZs63w90Bdnbd6Wp/uzz3R4wYMWJEvZzTMm2Xf8SIEfVQd/v+EsaPt3eL90J3wP2WMJ78Trd4t6+P77Hu37cIxp9/ny6YXqrUJeCR6TA74e/nll81MzxejeMtYA94HBwy91bPYow+O/S3A8d7oIM/gRN7CAP29Iqx/B1ThfuwOecM+vA3NmRjf6Gfm3BtH7v+PI7XDpS6EuwDz4O10+0/f9om1F4ehO4OmHp6EO7jxl56nvhsN/15ut+4Z0b657yYkZ7UJ0jhX0bcr3bn+6P87vekN4762QNzvWHZtL+jcH5srzg/uTf0f3pvfj5i+6tYW7rK9+aefO+tuL4BXAQ2gs3gPeBJc//9OL4CXAWuNvc/A64DN4Jbwe0s7jtxvBfsAz8EPwX3gwPgoJAHPQ9/Atf/bO7p/TTP4fglwS/5/zfujfWH5z0cz4Gj+8X5Sf1ib4m+vwbHZ/fdOtP+z+3LOnPp/QL4vxhsApeCy8BWk/a2ftFmYu22Hf4/Ba4B14Hrwc0sP7fh+Cvg6+Au8F1WthA/8pT7UeTxZ/12njkuXT8UyM9i6iur1EEb6f+yPz/eg0b3v4X7x365fMaW42lPu7PTv6vi8i/G+lWF/cvUk7bLl1r+5/rN5tu3j2qvWTd/qV+4h+AqjDGnBsX59GDo94iBXDa6v6Yjl6vu+h8itJcsZq/ZykHhHg/3tMHhUe9s/Yfuny7YNxTvQ8LYdrER2+/c0GBezhrMv3ZNRv7PmYirh7oOv4W1Y72/cwPOzx8U7X8d2295sfE3MPnbBPfSQbHv9nK4HxTqiK/trI7Yy5mLzvuVg/nX+N7V51A3r+gMy/4J434W7l2dYf5PZWGuNX6uh3uzEPetuLY7sZ20zTETY2oxyBhj3DrnfsidYPeXRGLHpxzX6pbFofGRkFBdGhcgW40L4cYtd9JAElO36q4LEzXHX7VMtZ2BEhJjy9dT25fazOtJxhwsBrHzwfu8w12kMYN9fLhIbp2RxlI59rX1dzjpsKl2Fxt3iu6rbofc9q5+KcRrXVzzDn6/Crvk6p/y1GFgGhs9/6maHjBLgv8/18fTxl1q0bPoW8ywsFTGWaazHosrNn/kP2eeqEroZYLZphsZl7L82eephMIqNT8dyT9JjH1Jpg32ubZvTB/SF665ymSnnaqjUHum+1Qn+NyOtz9f2r6y5OQ51b6hYy0D40r2tYXar30+Y/mbVX6JqY+hMC60XZapoh3S/HdOpT3DYu3rs0lKnquyb277JZvyPlqp+f1zVVK2/dJYNpQGf04uYyh1+PTPqfalZ2tO/xwSu+3bOrDzmWvfcTW/fLmibRx6lkvlcOlc8qsE/y5/rnSk67F1iAu1VT6+4jKt5tufn8e2b+n57JKcckhrsKG1Cd6Wu+Y8tf2l5DenPafqQZ/7xstKLeyr+XnInjSelvRgS9n27JPQM5n6Am7jmLG8VK6m7OvyS2L313XYV2r/tth5LWPfNxhyhI+1Up7HVbe/HMgeZE8brtNQ/7tcyX0cn//H2LTO9kpir5VI6yYp9szJW9W2jI1Tqfl5ic2v1GZ5XaG6RDZbyvxMO/DVh1SdUj5y1vraaHs+2/TYNXvtSRoXk4wrf9w6fEctnFt0zL2y+xFsfSrLza2zOTqMiZv8xOpbn8+xsL5ykdj6VsxNKb/Lvxb7nX8u48y1x6yuMW3V9tNxTlouzXslibVxndjC14xda8g2NIbg5x01XAP2lfeIBFSi/zrQEporTXru8fCueiy1CUnqrhspSM9SzbSS64tep9R1ZsZcOxKsUEUfNZeYtr0vjY5DeXW915hT8/PRV8MxlR1HV4DHZZc9R7dzajgWoXikdLtGr0uEfPigsGS/NvYjSHW87XejoXZehZ74XrcqpQ4d5T5f7Gu8f6g7fQmefoqOqk4/VarQv2o4/VDetPDnhjR2dc3BCBp/9NVw7KGfwStVMf6aZNAajj6224j9HCZbpZa/LvH1gU30i/q5WnUdSNEprxv2eIOwx2pcjjLMsmObo008k0J4u69P3d9QdbspW/dy080Nb8PXqcrmj0vsc7tu6qwD1A5oLYr3U3XWSxqj6/a10nCMkudJMyxvrvbK55jUrqU+Xlr/Iai98jY7mVAml5QNHxq31j2m5TrSdmp6z5p+9kpzQntdQbI1Pafr6I9C60gxrALHGtdF6tyhLTtxeBuW+hhqyzPMX931xl6rJ5f6n5h3blpsW7vKbvdBfL1gpYfjDLrvob1drrRT+mcuMf1OrJSdW/P+RfufdUB+pOtdTzhpL5t0jfKr46P3obQfQdPGt1jS+DEkx4MT2PmEg1j72OthqfZNWX+JuZ4at/2sTAmn5cSIMqZIjk0pnD0+aUI6YS9ekdaspWsp8cWEC62dS66UTkq+ypajyvXSlPz4xhQhm/ns6wpXBVI560jHN9aKkdT46spvWT916rONdHNsGSNtl6Hp8oakTVukpF9n3U3Jx0TNefbp3R4jltVfFfpvQkJpNaH/puyco++qbZPz7sE1L3DFGVovc4XPLUPO3ELyrzLiSpmPhaTJfqeJ+t60PiTh9snNW2656upDQ+Wtyg6ueJquB7HSVPspW9a28lDWJouhb6iyv7XjTfVL67j2vjDpvUfMt1Vl4GvctMaeq/vYcFWXIfV5Ku3XaxK951H6dsWFrhcxa3pU/pz3C1xc71tTcaXjGjtJbYIj7UHm7wxSyx+D/d7SfpfJ3wPpfSQp32tS2dt8V2tD7+Bce3rpPa3eC6Dr8Ulq+K+J3HFvbn312Zv2RdStr9g0pP0P/B04XbP3Q8cIT2dlRF6orkrhY/Rv27FqHfL1DP480ffo/V6V7aTHXLKDbTdXOOrnyG1ScvSv6xqve30lPzdpj36M8Pilb+L5vr0xE3dd30nWIfZ45uSSxK4x+CRmTUK6F/LrSsfnj+aOdYyvpXyMK7/OpHWjlDTsa0rJum5K7Ppnj7F9c+0q0qtr7pQji2X9oMwcVrJfmblwU2V2SV3rEk3YuO46XXf8MfrQz077G2zftyDkj/ZqhcZr9nldkOg5ykAt3GunJbR3NGYsUfWafd3ts853C4dLHppOM6WcfM5C+xSbaC/2HMa1H9v1vXdoXm/LKSVpYh5wqmr/X67SfwHtPc9a97p/k8bt0hpbW0j1Svr2m+7Rd98qIQ1pvSF273dKOjHYNmk6fd8/JX3tWIddblBqoU5p7zrZKnd9TppjVq0DSitWqkwz12b2exb7vwjaRvS/TFd/S+8AYvIo+Suri5TwvvZRdV1IQevQ1/8SA+UeH5eto7n/X1Oe86ptaafl8kPjcF7P7W93eD9d5n+oSvn7fFe7I/G9q1IBfylSR71N6fft94ZU18hOXKR+JqUO8f4+5dvLsmWlMQb/Vov+CUDlpTGUndeQlG3fdZWdRPoPgl3mmDlsLnaey/4X3tVuU+o6L3/Pym+qlLV/jk6rlBRd8394hZ6JdnuqIv2ykOh3pfq96Wkq/E8qu2xl88/tOJ4R3tfmpbGi3c5T859bzqr7MbsN03iI5itUNj5eaEKWqIX/KJCQ/iFWNZMmHXs8ovWk53JzFq5vPul6zDjLV36pX7bzvNzB0YlQOZephWtRS5T7eeSq8030R77/HvC1d7tN83Zt9yltrDdwSR0XxsZd5l+MvvvU1/M9jSnj+Nh6FPJbBld/w6XHXH5MZeXrOfS/65g9RTl1JCa8chzX2RZ9/3lXSh4/VqWfEBNq4b82Ytp6m+9Qqxir1jX+rfPdT1vvsWhM6bPbmON6E1LnPCZW7L0qqXswmtqf0MQelZj4myrzYtzvIYmURlvtqapyx+gzRfd0XPfahVSOquMoG+dibBdl46iyfdbV1qvUW9m8+KTudMvkzZe/pqTJ+pWTflX5zw1fVfox6ZTVc8hvHflOSb+OuG1JsZ0kufXAJf8D", "base64")), gh = new T(ko), yr = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(B) {
                  B.addStage(yh), B.addStage(["locl", "ccmp", "nukt", "akhn"]), B.addStage(nl), B.addStage(["rphf"], !1), B.addStage(xh), B.addStage(nl), B.addStage(["pref"]), B.addStage(bh), B.addStage(["rkrf", "abvf", "blwf", "half", "pstf", "vatu", "cjct"]), B.addStage(wh), B.addStage(["abvs", "blws", "pres", "psts", "dist", "abvm", "blwm"]);
                }, X.assignFeatures = function(B, U) {
                  for (var H = function(vt) {
                    var dt = U[vt].codePoints[0];
                    if (el[dt]) {
                      var Bt = el[dt].map(function(Xt) {
                        var fe = B.font.glyphForCodePoint(Xt);
                        return new Da(B.font, fe.id, [Xt], U[vt].features);
                      });
                      U.splice.apply(U, [vt, 1].concat(Bt));
                    }
                  }, ut = U.length - 1; ut >= 0; ut--)
                    H(ut);
                }, X;
              }(ka);
              N(yr, "zeroMarkWidths", "BEFORE_GPOS");
              function rl(ft) {
                return ph.get(ft.codePoints[0]);
              }
              var mh = function(X, rt, B) {
                this.category = X, this.syllableType = rt, this.syllable = B;
              };
              function yh(ft, X) {
                for (var rt = 0, B = i(gh.match(X.map(rl))), U; !(U = B()).done; ) {
                  var H = U.value, ut = H[0], pt = H[1], vt = H[2];
                  ++rt;
                  for (var dt = ut; dt <= pt; dt++)
                    X[dt].shaperInfo = new mh(vh[rl(X[dt])], vt[0], rt);
                  for (var Bt = X[ut].shaperInfo.category === "R" ? 1 : Math.min(3, pt - ut), Xt = ut; Xt < ut + Bt; Xt++)
                    X[Xt].features.rphf = !0;
                }
              }
              function nl(ft, X) {
                for (var rt = i(X), B; !(B = rt()).done; ) {
                  var U = B.value;
                  U.substituted = !1;
                }
              }
              function xh(ft, X) {
                for (var rt = i(X), B; !(B = rt()).done; ) {
                  var U = B.value;
                  U.substituted && U.features.rphf && (U.shaperInfo.category = "R");
                }
              }
              function bh(ft, X) {
                for (var rt = i(X), B; !(B = rt()).done; ) {
                  var U = B.value;
                  U.substituted && (U.shaperInfo.category = "VPre");
                }
              }
              function wh(ft, X) {
                for (var rt = ft.glyphForCodePoint(9676).id, B = 0, U = al(X, 0); B < X.length; B = U, U = al(X, B)) {
                  var H = void 0, ut = void 0, pt = X[B].shaperInfo, vt = pt.syllableType;
                  if (!(vt !== "virama_terminated_cluster" && vt !== "standard_cluster" && vt !== "broken_cluster")) {
                    if (vt === "broken_cluster" && rt) {
                      var dt = new Da(ft, rt, [9676]);
                      for (dt.shaperInfo = pt, H = B; H < U && X[H].shaperInfo.category === "R"; H++)
                        ;
                      X.splice(++H, 0, dt), U++;
                    }
                    if (pt.category === "R" && U - B > 1) {
                      for (H = B + 1; H < U; H++)
                        if (pt = X[H].shaperInfo, il(pt) || Wo(X[H])) {
                          Wo(X[H]) && H--, X.splice.apply(X, [B, 0].concat(X.splice(B + 1, H - B), [X[H]]));
                          break;
                        }
                    }
                    for (H = B, ut = U; H < U; H++)
                      pt = X[H].shaperInfo, il(pt) || Wo(X[H]) ? ut = Wo(X[H]) ? H + 1 : H : (pt.category === "VPre" || pt.category === "VMPre") && ut < H && X.splice.apply(X, [ut, 1, X[H]].concat(X.splice(ut, H - ut)));
                  }
                }
              }
              function al(ft, X) {
                if (X >= ft.length)
                  return X;
                for (var rt = ft[X].shaperInfo.syllable; ++X < ft.length && ft[X].shaperInfo.syllable === rt; )
                  ;
                return X;
              }
              function Wo(ft) {
                return ft.shaperInfo.category === "H" && !ft.isLigated;
              }
              function il(ft) {
                return ft.category === "B" || ft.category === "GB";
              }
              var Sh = {
                arab: za,
                // Arabic
                mong: za,
                // Mongolian
                syrc: za,
                // Syriac
                "nko ": za,
                // N'Ko
                phag: za,
                // Phags Pa
                mand: za,
                // Mandaic
                mani: za,
                // Manichaean
                phlp: za,
                // Psalter Pahlavi
                hang: Z0,
                // Hangul
                bng2: gn,
                // Bengali
                beng: gn,
                // Bengali
                dev2: gn,
                // Devanagari
                deva: gn,
                // Devanagari
                gjr2: gn,
                // Gujarati
                gujr: gn,
                // Gujarati
                guru: gn,
                // Gurmukhi
                gur2: gn,
                // Gurmukhi
                knda: gn,
                // Kannada
                knd2: gn,
                // Kannada
                mlm2: gn,
                // Malayalam
                mlym: gn,
                // Malayalam
                ory2: gn,
                // Oriya
                orya: gn,
                // Oriya
                taml: gn,
                // Tamil
                tml2: gn,
                // Tamil
                telu: gn,
                // Telugu
                tel2: gn,
                // Telugu
                khmr: gn,
                // Khmer
                bali: yr,
                // Balinese
                batk: yr,
                // Batak
                brah: yr,
                // Brahmi
                bugi: yr,
                // Buginese
                buhd: yr,
                // Buhid
                cakm: yr,
                // Chakma
                cham: yr,
                // Cham
                dupl: yr,
                // Duployan
                egyp: yr,
                // Egyptian Hieroglyphs
                gran: yr,
                // Grantha
                hano: yr,
                // Hanunoo
                java: yr,
                // Javanese
                kthi: yr,
                // Kaithi
                kali: yr,
                // Kayah Li
                khar: yr,
                // Kharoshthi
                khoj: yr,
                // Khojki
                sind: yr,
                // Khudawadi
                lepc: yr,
                // Lepcha
                limb: yr,
                // Limbu
                mahj: yr,
                // Mahajani
                // mand: UniversalShaper, // Mandaic
                // mani: UniversalShaper, // Manichaean
                mtei: yr,
                // Meitei Mayek
                modi: yr,
                // Modi
                // mong: UniversalShaper, // Mongolian
                // 'nko ': UniversalShaper, // NâKo
                hmng: yr,
                // Pahawh Hmong
                // phag: UniversalShaper, // Phags-pa
                // phlp: UniversalShaper, // Psalter Pahlavi
                rjng: yr,
                // Rejang
                saur: yr,
                // Saurashtra
                shrd: yr,
                // Sharada
                sidd: yr,
                // Siddham
                sinh: yr,
                // Sinhala
                sund: yr,
                // Sundanese
                sylo: yr,
                // Syloti Nagri
                tglg: yr,
                // Tagalog
                tagb: yr,
                // Tagbanwa
                tale: yr,
                // Tai Le
                lana: yr,
                // Tai Tham
                tavt: yr,
                // Tai Viet
                takr: yr,
                // Takri
                tibt: yr,
                // Tibetan
                tfng: yr,
                // Tifinagh
                tirh: yr,
                // Tirhuta
                latn: ka,
                // Latin
                DFLT: ka
                // Default
              };
              function Ch(ft) {
                Array.isArray(ft) || (ft = [ft]);
                for (var X = i(ft), rt; !(rt = X()).done; ) {
                  var B = rt.value, U = Sh[B];
                  if (U)
                    return U;
                }
                return ka;
              }
              for (var Ah = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var rt = X.prototype;
                return rt.applyLookup = function(U, H) {
                  var ut = this;
                  switch (U) {
                    case 1: {
                      var pt = this.coverageIndex(H.coverage);
                      if (pt === -1)
                        return !1;
                      var vt = this.glyphIterator.cur;
                      switch (H.version) {
                        case 1:
                          vt.id = vt.id + H.deltaGlyphID & 65535;
                          break;
                        case 2:
                          vt.id = H.substitute.get(pt);
                          break;
                      }
                      return !0;
                    }
                    case 2: {
                      var dt = this.coverageIndex(H.coverage);
                      if (dt !== -1) {
                        var Bt, Xt = H.sequences.get(dt);
                        if (Xt.length === 0)
                          return this.glyphs.splice(this.glyphIterator.index, 1), !0;
                        this.glyphIterator.cur.id = Xt[0], this.glyphIterator.cur.ligatureComponent = 0;
                        var fe = this.glyphIterator.cur.features, $t = this.glyphIterator.cur, he = Xt.slice(1).map(function(Zn, Tn) {
                          var yn = new Da(ut.font, Zn, void 0, fe);
                          return yn.shaperInfo = $t.shaperInfo, yn.isLigated = $t.isLigated, yn.ligatureComponent = Tn + 1, yn.substituted = !0, yn.isMultiplied = !0, yn;
                        });
                        return (Bt = this.glyphs).splice.apply(Bt, [this.glyphIterator.index + 1, 0].concat(he)), !0;
                      }
                      return !1;
                    }
                    case 3: {
                      var me = this.coverageIndex(H.coverage);
                      if (me !== -1) {
                        var Fe = 0;
                        return this.glyphIterator.cur.id = H.alternateSet.get(me)[Fe], !0;
                      }
                      return !1;
                    }
                    case 4: {
                      var je = this.coverageIndex(H.coverage);
                      if (je === -1)
                        return !1;
                      for (var tr = i(H.ligatureSets.get(je)), Ze; !(Ze = tr()).done; ) {
                        var vr = Ze.value, fr = this.sequenceMatchIndices(1, vr.components);
                        if (fr) {
                          for (var gr = this.glyphIterator.cur, wr = gr.codePoints.slice(), Vr = i(fr), nn; !(nn = Vr()).done; ) {
                            var Hr, mr = nn.value;
                            (Hr = wr).push.apply(Hr, this.glyphs[mr].codePoints);
                          }
                          var Lr = new Da(this.font, vr.glyph, wr, gr.features);
                          Lr.shaperInfo = gr.shaperInfo, Lr.isLigated = !0, Lr.substituted = !0;
                          for (var jr = gr.isMark, vn = 0; vn < fr.length && jr; vn++)
                            jr = this.glyphs[fr[vn]].isMark;
                          Lr.ligatureID = jr ? null : this.ligatureID++;
                          for (var xr = gr.ligatureID, Nr = gr.codePoints.length, Xr = Nr, Sr = this.glyphIterator.index + 1, cn = i(fr), Sn; !(Sn = cn()).done; ) {
                            var Pn = Sn.value;
                            if (jr)
                              Sr = Pn;
                            else
                              for (; Sr < Pn; ) {
                                var zn = Xr - Nr + Math.min(this.glyphs[Sr].ligatureComponent || 1, Nr);
                                this.glyphs[Sr].ligatureID = Lr.ligatureID, this.glyphs[Sr].ligatureComponent = zn, Sr++;
                              }
                            xr = this.glyphs[Sr].ligatureID, Nr = this.glyphs[Sr].codePoints.length, Xr += Nr, Sr++;
                          }
                          if (xr && !jr)
                            for (var Bn = Sr; Bn < this.glyphs.length && this.glyphs[Bn].ligatureID === xr; Bn++) {
                              var zn = Xr - Nr + Math.min(this.glyphs[Bn].ligatureComponent || 1, Nr);
                              this.glyphs[Bn].ligatureComponent = zn;
                            }
                          for (var Xn = fr.length - 1; Xn >= 0; Xn--)
                            this.glyphs.splice(fr[Xn], 1);
                          return this.glyphs[this.glyphIterator.index] = Lr, !0;
                        }
                      }
                      return !1;
                    }
                    case 5:
                      return this.applyContext(H);
                    case 6:
                      return this.applyChainingContext(H);
                    case 7:
                      return this.applyLookup(H.lookupType, H.extension);
                    default:
                      throw new Error("GSUB lookupType ".concat(U, " is not supported"));
                  }
                }, X;
              }(Oo), Eh = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var rt = X.prototype;
                return rt.applyPositionValue = function(U, H) {
                  var ut = this.positions[this.glyphIterator.peekIndex(U)];
                  H.xAdvance != null && (ut.xAdvance += H.xAdvance), H.yAdvance != null && (ut.yAdvance += H.yAdvance), H.xPlacement != null && (ut.xOffset += H.xPlacement), H.yPlacement != null && (ut.yOffset += H.yPlacement);
                  var pt = this.font._variationProcessor, vt = this.font.GDEF && this.font.GDEF.itemVariationStore;
                  pt && vt && (H.xPlaDevice && (ut.xOffset += pt.getDelta(vt, H.xPlaDevice.a, H.xPlaDevice.b)), H.yPlaDevice && (ut.yOffset += pt.getDelta(vt, H.yPlaDevice.a, H.yPlaDevice.b)), H.xAdvDevice && (ut.xAdvance += pt.getDelta(vt, H.xAdvDevice.a, H.xAdvDevice.b)), H.yAdvDevice && (ut.yAdvance += pt.getDelta(vt, H.yAdvDevice.a, H.yAdvDevice.b)));
                }, rt.applyLookup = function(U, H) {
                  switch (U) {
                    case 1: {
                      var ut = this.coverageIndex(H.coverage);
                      if (ut === -1)
                        return !1;
                      switch (H.version) {
                        case 1:
                          this.applyPositionValue(0, H.value);
                          break;
                        case 2:
                          this.applyPositionValue(0, H.values.get(ut));
                          break;
                      }
                      return !0;
                    }
                    case 2: {
                      var pt = this.glyphIterator.peek();
                      if (!pt)
                        return !1;
                      var vt = this.coverageIndex(H.coverage);
                      if (vt === -1)
                        return !1;
                      switch (H.version) {
                        case 1:
                          for (var dt = H.pairSets.get(vt), Bt = i(dt), Xt; !(Xt = Bt()).done; ) {
                            var fe = Xt.value;
                            if (fe.secondGlyph === pt.id)
                              return this.applyPositionValue(0, fe.value1), this.applyPositionValue(1, fe.value2), !0;
                          }
                          return !1;
                        case 2:
                          var $t = this.getClassID(this.glyphIterator.cur.id, H.classDef1), he = this.getClassID(pt.id, H.classDef2);
                          if ($t === -1 || he === -1)
                            return !1;
                          var me = H.classRecords.get($t).get(he);
                          return this.applyPositionValue(0, me.value1), this.applyPositionValue(1, me.value2), !0;
                      }
                    }
                    case 3: {
                      var Fe = this.glyphIterator.peekIndex(), je = this.glyphs[Fe];
                      if (!je)
                        return !1;
                      var tr = H.entryExitRecords[this.coverageIndex(H.coverage)];
                      if (!tr || !tr.exitAnchor)
                        return !1;
                      var Ze = H.entryExitRecords[this.coverageIndex(H.coverage, je.id)];
                      if (!Ze || !Ze.entryAnchor)
                        return !1;
                      var vr = this.getAnchor(Ze.entryAnchor), fr = this.getAnchor(tr.exitAnchor), gr = this.positions[this.glyphIterator.index], wr = this.positions[Fe];
                      switch (this.direction) {
                        case "ltr":
                          gr.xAdvance = fr.x + gr.xOffset;
                          var Vr = vr.x + wr.xOffset;
                          wr.xAdvance -= Vr, wr.xOffset -= Vr;
                          break;
                        case "rtl":
                          Vr = fr.x + gr.xOffset, gr.xAdvance -= Vr, gr.xOffset -= Vr, wr.xAdvance = vr.x + wr.xOffset;
                          break;
                      }
                      return this.glyphIterator.flags.rightToLeft ? (this.glyphIterator.cur.cursiveAttachment = Fe, gr.yOffset = vr.y - fr.y) : (je.cursiveAttachment = this.glyphIterator.index, gr.yOffset = fr.y - vr.y), !0;
                    }
                    case 4: {
                      var nn = this.coverageIndex(H.markCoverage);
                      if (nn === -1)
                        return !1;
                      for (var Hr = this.glyphIterator.index; --Hr >= 0 && (this.glyphs[Hr].isMark || this.glyphs[Hr].ligatureComponent > 0); )
                        ;
                      if (Hr < 0)
                        return !1;
                      var mr = this.coverageIndex(H.baseCoverage, this.glyphs[Hr].id);
                      if (mr === -1)
                        return !1;
                      var Lr = H.markArray[nn], jr = H.baseArray[mr][Lr.class];
                      return this.applyAnchor(Lr, jr, Hr), !0;
                    }
                    case 5: {
                      var vn = this.coverageIndex(H.markCoverage);
                      if (vn === -1)
                        return !1;
                      for (var xr = this.glyphIterator.index; --xr >= 0 && this.glyphs[xr].isMark; )
                        ;
                      if (xr < 0)
                        return !1;
                      var Nr = this.coverageIndex(H.ligatureCoverage, this.glyphs[xr].id);
                      if (Nr === -1)
                        return !1;
                      var Xr = H.ligatureArray[Nr], Sr = this.glyphIterator.cur, cn = this.glyphs[xr], Sn = cn.ligatureID && cn.ligatureID === Sr.ligatureID && Sr.ligatureComponent > 0 ? Math.min(Sr.ligatureComponent, cn.codePoints.length) - 1 : cn.codePoints.length - 1, Pn = H.markArray[vn], zn = Xr[Sn][Pn.class];
                      return this.applyAnchor(Pn, zn, xr), !0;
                    }
                    case 6: {
                      var Bn = this.coverageIndex(H.mark1Coverage);
                      if (Bn === -1)
                        return !1;
                      var Xn = this.glyphIterator.peekIndex(-1), Zn = this.glyphs[Xn];
                      if (!Zn || !Zn.isMark)
                        return !1;
                      var Tn = this.glyphIterator.cur, yn = !1;
                      if (Tn.ligatureID === Zn.ligatureID ? Tn.ligatureID ? Tn.ligatureComponent === Zn.ligatureComponent && (yn = !0) : yn = !0 : (Tn.ligatureID && !Tn.ligatureComponent || Zn.ligatureID && !Zn.ligatureComponent) && (yn = !0), !yn)
                        return !1;
                      var Wn = this.coverageIndex(H.mark2Coverage, Zn.id);
                      if (Wn === -1)
                        return !1;
                      var Mr = H.mark1Array[Bn], Fr = H.mark2Array[Wn][Mr.class];
                      return this.applyAnchor(Mr, Fr, Xn), !0;
                    }
                    case 7:
                      return this.applyContext(H);
                    case 8:
                      return this.applyChainingContext(H);
                    case 9:
                      return this.applyLookup(H.lookupType, H.extension);
                    default:
                      throw new Error("Unsupported GPOS table: ".concat(U));
                  }
                }, rt.applyAnchor = function(U, H, ut) {
                  var pt = this.getAnchor(H), vt = this.getAnchor(U.markAnchor);
                  this.positions[ut];
                  var dt = this.positions[this.glyphIterator.index];
                  dt.xOffset = pt.x - vt.x, dt.yOffset = pt.y - vt.y, this.glyphIterator.cur.markAttachment = ut;
                }, rt.getAnchor = function(U) {
                  var H = U.xCoordinate, ut = U.yCoordinate, pt = this.font._variationProcessor, vt = this.font.GDEF && this.font.GDEF.itemVariationStore;
                  return pt && vt && (U.xDeviceTable && (H += pt.getDelta(vt, U.xDeviceTable.a, U.xDeviceTable.b)), U.yDeviceTable && (ut += pt.getDelta(vt, U.yDeviceTable.a, U.yDeviceTable.b))), {
                    x: H,
                    y: ut
                  };
                }, rt.applyFeatures = function(U, H, ut) {
                  ft.prototype.applyFeatures.call(this, U, H, ut);
                  for (var pt = 0; pt < this.glyphs.length; pt++)
                    this.fixCursiveAttachment(pt);
                  this.fixMarkAttachment();
                }, rt.fixCursiveAttachment = function(U) {
                  var H = this.glyphs[U];
                  if (H.cursiveAttachment != null) {
                    var ut = H.cursiveAttachment;
                    H.cursiveAttachment = null, this.fixCursiveAttachment(ut), this.positions[U].yOffset += this.positions[ut].yOffset;
                  }
                }, rt.fixMarkAttachment = function() {
                  for (var U = 0; U < this.glyphs.length; U++) {
                    var H = this.glyphs[U];
                    if (H.markAttachment != null) {
                      var ut = H.markAttachment;
                      if (this.positions[U].xOffset += this.positions[ut].xOffset, this.positions[U].yOffset += this.positions[ut].yOffset, this.direction === "ltr")
                        for (var pt = ut; pt < U; pt++)
                          this.positions[U].xOffset -= this.positions[pt].xAdvance, this.positions[U].yOffset -= this.positions[pt].yAdvance;
                      else
                        for (var vt = ut + 1; vt < U + 1; vt++)
                          this.positions[U].xOffset += this.positions[vt].xAdvance, this.positions[U].yOffset += this.positions[vt].yAdvance;
                    }
                  }
                }, X;
              }(Oo), Th = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.font = rt, this.glyphInfos = null, this.plan = null, this.GSUBProcessor = null, this.GPOSProcessor = null, this.fallbackPosition = !0, rt.GSUB && (this.GSUBProcessor = new Ah(rt, rt.GSUB)), rt.GPOS && (this.GPOSProcessor = new Eh(rt, rt.GPOS));
                }
                var X = ft.prototype;
                return X.setup = function(B) {
                  var U = this;
                  this.glyphInfos = B.glyphs.map(function(pt) {
                    return new Da(U.font, pt.id, [].concat(pt.codePoints));
                  });
                  var H = null;
                  this.GPOSProcessor && (H = this.GPOSProcessor.selectScript(B.script, B.language, B.direction)), this.GSUBProcessor && (H = this.GSUBProcessor.selectScript(B.script, B.language, B.direction)), this.shaper = Ch(H), this.plan = new mc(this.font, H, B.direction), this.shaper.plan(this.plan, this.glyphInfos, B.features);
                  for (var ut in this.plan.allFeatures)
                    B.features[ut] = !0;
                }, X.substitute = function(B) {
                  var U = this;
                  this.GSUBProcessor && (this.plan.process(this.GSUBProcessor, this.glyphInfos), B.glyphs = this.glyphInfos.map(function(H) {
                    return U.font.getGlyph(H.id, H.codePoints);
                  }));
                }, X.position = function(B) {
                  return this.shaper.zeroMarkWidths === "BEFORE_GPOS" && this.zeroMarkAdvances(B.positions), this.GPOSProcessor && this.plan.process(this.GPOSProcessor, this.glyphInfos, B.positions), this.shaper.zeroMarkWidths === "AFTER_GPOS" && this.zeroMarkAdvances(B.positions), B.direction === "rtl" && (B.glyphs.reverse(), B.positions.reverse()), this.GPOSProcessor && this.GPOSProcessor.features;
                }, X.zeroMarkAdvances = function(B) {
                  for (var U = 0; U < this.glyphInfos.length; U++)
                    this.glyphInfos[U].isMark && (B[U].xAdvance = 0, B[U].yAdvance = 0);
                }, X.cleanup = function() {
                  this.glyphInfos = null, this.plan = null, this.shaper = null;
                }, X.getAvailableFeatures = function(B, U) {
                  var H = [];
                  return this.GSUBProcessor && (this.GSUBProcessor.selectScript(B, U), H.push.apply(H, Object.keys(this.GSUBProcessor.features))), this.GPOSProcessor && (this.GPOSProcessor.selectScript(B, U), H.push.apply(H, Object.keys(this.GPOSProcessor.features))), H;
                }, ft;
              }(), Fh = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.font = rt, this.unicodeLayoutEngine = null, this.kernProcessor = null, this.font.morx ? this.engine = new gc(this.font) : (this.font.GSUB || this.font.GPOS) && (this.engine = new Th(this.font));
                }
                var X = ft.prototype;
                return X.layout = function(B, U, H, ut, pt) {
                  if (typeof U == "string" && (pt = ut, ut = H, H = U, U = []), typeof B == "string") {
                    H == null && (H = Zu(B));
                    var vt = this.font.glyphsForString(B);
                  } else {
                    if (H == null) {
                      for (var dt = [], Bt = i(B), Xt; !(Xt = Bt()).done; ) {
                        var fe = Xt.value;
                        dt.push.apply(dt, fe.codePoints);
                      }
                      H = Yu(dt);
                    }
                    var vt = B;
                  }
                  var $t = new Ju(vt, U, H, ut, pt);
                  return vt.length === 0 ? ($t.positions = [], $t) : (this.engine && this.engine.setup && this.engine.setup($t), this.substitute($t), this.position($t), this.hideDefaultIgnorables($t.glyphs, $t.positions), this.engine && this.engine.cleanup && this.engine.cleanup(), $t);
                }, X.substitute = function(B) {
                  this.engine && this.engine.substitute && this.engine.substitute(B);
                }, X.position = function(B) {
                  B.positions = B.glyphs.map(function(H) {
                    return new Qu(H.advanceWidth);
                  });
                  var U = null;
                  this.engine && this.engine.position && (U = this.engine.position(B)), !U && (!this.engine || this.engine.fallbackPosition) && (this.unicodeLayoutEngine || (this.unicodeLayoutEngine = new ju(this.font)), this.unicodeLayoutEngine.positionGlyphs(B.glyphs, B.positions)), (!U || !U.kern) && B.features.kern !== !1 && this.font.kern && (this.kernProcessor || (this.kernProcessor = new Hu(this.font)), this.kernProcessor.process(B.glyphs, B.positions), B.features.kern = !0);
                }, X.hideDefaultIgnorables = function(B, U) {
                  for (var H = this.font.glyphForCodePoint(32), ut = 0; ut < B.length; ut++)
                    this.isDefaultIgnorable(B[ut].codePoints[0]) && (B[ut] = H, U[ut].xAdvance = 0, U[ut].yAdvance = 0);
                }, X.isDefaultIgnorable = function(B) {
                  var U = B >> 16;
                  if (U === 0)
                    switch (B >> 8) {
                      case 0:
                        return B === 173;
                      case 3:
                        return B === 847;
                      case 6:
                        return B === 1564;
                      case 23:
                        return 6068 <= B && B <= 6069;
                      case 24:
                        return 6155 <= B && B <= 6158;
                      case 32:
                        return 8203 <= B && B <= 8207 || 8234 <= B && B <= 8238 || 8288 <= B && B <= 8303;
                      case 254:
                        return 65024 <= B && B <= 65039 || B === 65279;
                      case 255:
                        return 65520 <= B && B <= 65528;
                      default:
                        return !1;
                    }
                  else
                    switch (U) {
                      case 1:
                        return 113824 <= B && B <= 113827 || 119155 <= B && B <= 119162;
                      case 14:
                        return 917504 <= B && B <= 921599;
                      default:
                        return !1;
                    }
                }, X.getAvailableFeatures = function(B, U) {
                  var H = [];
                  return this.engine && H.push.apply(H, this.engine.getAvailableFeatures(B, U)), this.font.kern && H.indexOf("kern") === -1 && H.push("kern"), H;
                }, X.stringsForGlyph = function(B) {
                  for (var U = /* @__PURE__ */ new Set(), H = this.font._cmapProcessor.codePointsForGlyph(B), ut = i(H), pt; !(pt = ut()).done; ) {
                    var vt = pt.value;
                    U.add(String.fromCodePoint(vt));
                  }
                  if (this.engine && this.engine.stringsForGlyph)
                    for (var dt = i(this.engine.stringsForGlyph(B)), Bt; !(Bt = dt()).done; ) {
                      var Xt = Bt.value;
                      U.add(Xt);
                    }
                  return Array.from(U);
                }, ft;
              }(), Ih = {
                moveTo: "M",
                lineTo: "L",
                quadraticCurveTo: "Q",
                bezierCurveTo: "C",
                closePath: "Z"
              }, Ho = /* @__PURE__ */ function() {
                function ft() {
                  this.commands = [], this._bbox = null, this._cbox = null;
                }
                var X = ft.prototype;
                return X.toFunction = function() {
                  var B = this;
                  return function(U) {
                    B.commands.forEach(function(H) {
                      return U[H.command].apply(U, H.args);
                    });
                  };
                }, X.toSVG = function() {
                  var B = this.commands.map(function(U) {
                    var H = U.args.map(function(ut) {
                      return Math.round(ut * 100) / 100;
                    });
                    return "".concat(Ih[U.command]).concat(H.join(" "));
                  });
                  return B.join("");
                }, X.mapPoints = function(B) {
                  for (var U = new ft(), H = i(this.commands), ut; !(ut = H()).done; ) {
                    for (var pt = ut.value, vt = [], dt = 0; dt < pt.args.length; dt += 2) {
                      var Bt = B(pt.args[dt], pt.args[dt + 1]), Xt = Bt[0], fe = Bt[1];
                      vt.push(Xt, fe);
                    }
                    U[pt.command].apply(U, vt);
                  }
                  return U;
                }, X.transform = function(B, U, H, ut, pt, vt) {
                  return this.mapPoints(function(dt, Bt) {
                    return dt = B * dt + H * Bt + pt, Bt = U * dt + ut * Bt + vt, [dt, Bt];
                  });
                }, X.translate = function(B, U) {
                  return this.transform(1, 0, 0, 1, B, U);
                }, X.rotate = function(B) {
                  var U = Math.cos(B), H = Math.sin(B);
                  return this.transform(U, H, -H, U, 0, 0);
                }, X.scale = function(B, U) {
                  return U === void 0 && (U = B), this.transform(B, 0, 0, U, 0, 0);
                }, o(ft, [{
                  key: "cbox",
                  get: function() {
                    if (!this._cbox) {
                      for (var B = new ui(), U = i(this.commands), H; !(H = U()).done; )
                        for (var ut = H.value, pt = 0; pt < ut.args.length; pt += 2)
                          B.addPoint(ut.args[pt], ut.args[pt + 1]);
                      this._cbox = Object.freeze(B);
                    }
                    return this._cbox;
                  }
                  /**
                   * Gets the exact bounding box of the path by evaluating curve segments.
                   * Slower to compute than the control box, but more accurate.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    if (this._bbox)
                      return this._bbox;
                    for (var B = new ui(), U = 0, H = 0, ut = function(cn) {
                      return Math.pow(1 - cn, 3) * wr[mr] + 3 * Math.pow(1 - cn, 2) * cn * Vr[mr] + 3 * (1 - cn) * Math.pow(cn, 2) * nn[mr] + Math.pow(cn, 3) * Hr[mr];
                    }, pt = i(this.commands), vt; !(vt = pt()).done; ) {
                      var dt = vt.value;
                      switch (dt.command) {
                        case "moveTo":
                        case "lineTo":
                          var Bt = dt.args, Xt = Bt[0], fe = Bt[1];
                          B.addPoint(Xt, fe), U = Xt, H = fe;
                          break;
                        case "quadraticCurveTo":
                        case "bezierCurveTo":
                          if (dt.command === "quadraticCurveTo")
                            var $t = dt.args, he = $t[0], me = $t[1], Fe = $t[2], je = $t[3], tr = U + 2 / 3 * (he - U), Ze = H + 2 / 3 * (me - H), vr = Fe + 2 / 3 * (he - Fe), fr = je + 2 / 3 * (me - je);
                          else
                            var gr = dt.args, tr = gr[0], Ze = gr[1], vr = gr[2], fr = gr[3], Fe = gr[4], je = gr[5];
                          B.addPoint(Fe, je);
                          for (var wr = [U, H], Vr = [tr, Ze], nn = [vr, fr], Hr = [Fe, je], mr = 0; mr <= 1; mr++) {
                            var Lr = 6 * wr[mr] - 12 * Vr[mr] + 6 * nn[mr], jr = -3 * wr[mr] + 9 * Vr[mr] - 9 * nn[mr] + 3 * Hr[mr];
                            if (dt = 3 * Vr[mr] - 3 * wr[mr], jr === 0) {
                              if (Lr === 0)
                                continue;
                              var vn = -dt / Lr;
                              0 < vn && vn < 1 && (mr === 0 ? B.addPoint(ut(vn), B.maxY) : mr === 1 && B.addPoint(B.maxX, ut(vn)));
                              continue;
                            }
                            var xr = Math.pow(Lr, 2) - 4 * dt * jr;
                            if (!(xr < 0)) {
                              var Nr = (-Lr + Math.sqrt(xr)) / (2 * jr);
                              0 < Nr && Nr < 1 && (mr === 0 ? B.addPoint(ut(Nr), B.maxY) : mr === 1 && B.addPoint(B.maxX, ut(Nr)));
                              var Xr = (-Lr - Math.sqrt(xr)) / (2 * jr);
                              0 < Xr && Xr < 1 && (mr === 0 ? B.addPoint(ut(Xr), B.maxY) : mr === 1 && B.addPoint(B.maxX, ut(Xr)));
                            }
                          }
                          U = Fe, H = je;
                          break;
                      }
                    }
                    return this._bbox = Object.freeze(B);
                  }
                }]), ft;
              }(), Dh = function(X) {
                Ho.prototype[X] = function() {
                  this._bbox = this._cbox = null;
                  for (var rt = arguments.length, B = new Array(rt), U = 0; U < rt; U++)
                    B[U] = arguments[U];
                  return this.commands.push({
                    command: X,
                    args: B
                  }), this;
                };
              }, Ls = 0, ol = ["moveTo", "lineTo", "quadraticCurveTo", "bezierCurveTo", "closePath"]; Ls < ol.length; Ls++) {
                var Oh = ol[Ls];
                Dh(Oh);
              }
              var Ki = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"], mn, jo = (mn = /* @__PURE__ */ function() {
                function ft(rt, B, U) {
                  this.id = rt, this.codePoints = B, this._font = U, this.isMark = this.codePoints.length > 0 && this.codePoints.every(P.isMark), this.isLigature = this.codePoints.length > 1;
                }
                var X = ft.prototype;
                return X._getPath = function() {
                  return new Ho();
                }, X._getCBox = function() {
                  return this.path.cbox;
                }, X._getBBox = function() {
                  return this.path.bbox;
                }, X._getTableMetrics = function(B) {
                  if (this.id < B.metrics.length)
                    return B.metrics.get(this.id);
                  var U = B.metrics.get(B.metrics.length - 1), H = {
                    advance: U ? U.advance : 0,
                    bearing: B.bearings.get(this.id - B.metrics.length) || 0
                  };
                  return H;
                }, X._getMetrics = function(B) {
                  if (this._metrics)
                    return this._metrics;
                  var U = this._getTableMetrics(this._font.hmtx), H = U.advance, ut = U.bearing;
                  if (this._font.vmtx)
                    var pt = this._getTableMetrics(this._font.vmtx), vt = pt.advance, dt = pt.bearing;
                  else {
                    var Bt;
                    if ((typeof B == "undefined" || B === null) && (B = this.cbox), (Bt = this._font["OS/2"]) && Bt.version > 0)
                      var vt = Math.abs(Bt.typoAscender - Bt.typoDescender), dt = Bt.typoAscender - B.maxY;
                    else
                      var Xt = this._font.hhea, vt = Math.abs(Xt.ascent - Xt.descent), dt = Xt.ascent - B.maxY;
                  }
                  return this._font._variationProcessor && this._font.HVAR && (H += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR)), this._metrics = {
                    advanceWidth: H,
                    advanceHeight: vt,
                    leftBearing: ut,
                    topBearing: dt
                  };
                }, X.getScaledPath = function(B) {
                  var U = 1 / this._font.unitsPerEm * B;
                  return this.path.scale(U);
                }, X._getName = function() {
                  var B = this._font.post;
                  if (!B)
                    return null;
                  switch (B.version) {
                    case 1:
                      return Ki[this.id];
                    case 2:
                      var U = B.glyphNameIndex[this.id];
                      return U < Ki.length ? Ki[U] : B.names[U - Ki.length];
                    case 2.5:
                      return Ki[this.id + B.offsets[this.id]];
                    case 4:
                      return String.fromCharCode(B.map[this.id]);
                  }
                }, X.render = function(B, U) {
                  B.save();
                  var H = 1 / this._font.head.unitsPerEm * U;
                  B.scale(H, H);
                  var ut = this.path.toFunction();
                  ut(B), B.fill(), B.restore();
                }, o(ft, [{
                  key: "cbox",
                  get: function() {
                    return this._getCBox();
                  }
                  /**
                   * The glyphâs bounding box, i.e. the rectangle that encloses the
                   * glyph outline as tightly as possible.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    return this._getBBox();
                  }
                  /**
                   * A vector Path object representing the glyph outline.
                   * @type {Path}
                   */
                }, {
                  key: "path",
                  get: function() {
                    return this._getPath();
                  }
                }, {
                  key: "advanceWidth",
                  get: function() {
                    return this._getMetrics().advanceWidth;
                  }
                  /**
                   * The glyph's advance height.
                   * @type {number}
                   */
                }, {
                  key: "advanceHeight",
                  get: function() {
                    return this._getMetrics().advanceHeight;
                  }
                }, {
                  key: "ligatureCaretPositions",
                  get: function() {
                  }
                }, {
                  key: "name",
                  get: function() {
                    return this._getName();
                  }
                }]), ft;
              }(), M(mn.prototype, "cbox", [K], Object.getOwnPropertyDescriptor(mn.prototype, "cbox"), mn.prototype), M(mn.prototype, "bbox", [K], Object.getOwnPropertyDescriptor(mn.prototype, "bbox"), mn.prototype), M(mn.prototype, "path", [K], Object.getOwnPropertyDescriptor(mn.prototype, "path"), mn.prototype), M(mn.prototype, "advanceWidth", [K], Object.getOwnPropertyDescriptor(mn.prototype, "advanceWidth"), mn.prototype), M(mn.prototype, "advanceHeight", [K], Object.getOwnPropertyDescriptor(mn.prototype, "advanceHeight"), mn.prototype), M(mn.prototype, "name", [K], Object.getOwnPropertyDescriptor(mn.prototype, "name"), mn.prototype), mn), sl = new e.Struct({
                numberOfContours: e.int16,
                // if negative, this is a composite glyph
                xMin: e.int16,
                yMin: e.int16,
                xMax: e.int16,
                yMax: e.int16
              }), Ph = 1, Bh = 2, Rh = 4, Lh = 8, Nh = 16, Mh = 32, kh = 1, Uh = 8, ll = 32, zh = 64, Wh = 128, Hh = 256, Ra = /* @__PURE__ */ function() {
                function ft(rt, B, U, H) {
                  U === void 0 && (U = 0), H === void 0 && (H = 0), this.onCurve = rt, this.endContour = B, this.x = U, this.y = H;
                }
                var X = ft.prototype;
                return X.copy = function() {
                  return new ft(this.onCurve, this.endContour, this.x, this.y);
                }, ft;
              }(), jh = function(X, rt, B) {
                this.glyphID = X, this.dx = rt, this.dy = B, this.pos = 0, this.scaleX = this.scaleY = 1, this.scale01 = this.scale10 = 0;
              }, Go = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var rt = X.prototype;
                return rt._getCBox = function(U) {
                  if (this._font._variationProcessor && !U)
                    return this.path.cbox;
                  var H = this._font._getTableStream("glyf");
                  H.pos += this._font.loca.offsets[this.id];
                  var ut = sl.decode(H), pt = new ui(ut.xMin, ut.yMin, ut.xMax, ut.yMax);
                  return Object.freeze(pt);
                }, rt._parseGlyphCoord = function(U, H, ut, pt) {
                  if (ut) {
                    var vt = U.readUInt8();
                    pt || (vt = -vt), vt += H;
                  } else if (pt)
                    var vt = H;
                  else
                    var vt = H + U.readInt16BE();
                  return vt;
                }, rt._decode = function() {
                  var U = this._font.loca.offsets[this.id], H = this._font.loca.offsets[this.id + 1];
                  if (U === H)
                    return null;
                  var ut = this._font._getTableStream("glyf");
                  ut.pos += U;
                  var pt = ut.pos, vt = sl.decode(ut);
                  return vt.numberOfContours > 0 ? this._decodeSimple(vt, ut) : vt.numberOfContours < 0 && this._decodeComposite(vt, ut, pt), vt;
                }, rt._decodeSimple = function(U, H) {
                  U.points = [];
                  var ut = new e.Array(e.uint16, U.numberOfContours).decode(H);
                  U.instructions = new e.Array(e.uint8, e.uint16).decode(H);
                  for (var pt = [], vt = ut[ut.length - 1] + 1; pt.length < vt; ) {
                    var dt = H.readUInt8();
                    if (pt.push(dt), dt & Lh)
                      for (var Bt = H.readUInt8(), Xt = 0; Xt < Bt; Xt++)
                        pt.push(dt);
                  }
                  for (var fe = 0; fe < pt.length; fe++) {
                    var dt = pt[fe], $t = new Ra(!!(dt & Ph), ut.indexOf(fe) >= 0, 0, 0);
                    U.points.push($t);
                  }
                  for (var he = 0, fe = 0; fe < pt.length; fe++) {
                    var dt = pt[fe];
                    U.points[fe].x = he = this._parseGlyphCoord(H, he, dt & Bh, dt & Nh);
                  }
                  for (var me = 0, fe = 0; fe < pt.length; fe++) {
                    var dt = pt[fe];
                    U.points[fe].y = me = this._parseGlyphCoord(H, me, dt & Rh, dt & Mh);
                  }
                  if (this._font._variationProcessor) {
                    var Fe = U.points.slice();
                    Fe.push.apply(Fe, this._getPhantomPoints(U)), this._font._variationProcessor.transformPoints(this.id, Fe), U.phantomPoints = Fe.slice(-4);
                  }
                }, rt._decodeComposite = function(U, H, ut) {
                  ut === void 0 && (ut = 0), U.components = [];
                  for (var pt = !1, vt = ll; vt & ll; ) {
                    vt = H.readUInt16BE();
                    var dt = H.pos - ut, Bt = H.readUInt16BE();
                    if (pt || (pt = (vt & Hh) !== 0), vt & kh)
                      var Xt = H.readInt16BE(), fe = H.readInt16BE();
                    else
                      var Xt = H.readInt8(), fe = H.readInt8();
                    var $t = new jh(Bt, Xt, fe);
                    $t.pos = dt, vt & Uh ? $t.scaleX = $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824 : vt & zh ? ($t.scaleX = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824) : vt & Wh && ($t.scaleX = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scale01 = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scale10 = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824), U.components.push($t);
                  }
                  if (this._font._variationProcessor) {
                    for (var he = [], me = 0; me < U.components.length; me++) {
                      var $t = U.components[me];
                      he.push(new Ra(!0, !0, $t.dx, $t.dy));
                    }
                    he.push.apply(he, this._getPhantomPoints(U)), this._font._variationProcessor.transformPoints(this.id, he), U.phantomPoints = he.splice(-4, 4);
                    for (var Fe = 0; Fe < he.length; Fe++) {
                      var je = he[Fe];
                      U.components[Fe].dx = je.x, U.components[Fe].dy = je.y;
                    }
                  }
                  return pt;
                }, rt._getPhantomPoints = function(U) {
                  var H = this._getCBox(!0);
                  this._metrics == null && (this._metrics = jo.prototype._getMetrics.call(this, H));
                  var ut = this._metrics, pt = ut.advanceWidth, vt = ut.advanceHeight, dt = ut.leftBearing, Bt = ut.topBearing;
                  return [new Ra(!1, !0, U.xMin - dt, 0), new Ra(!1, !0, U.xMin - dt + pt, 0), new Ra(!1, !0, 0, U.yMax + Bt), new Ra(!1, !0, 0, U.yMax + Bt + vt)];
                }, rt._getContours = function() {
                  var U = this._decode();
                  if (!U)
                    return [];
                  var H = [];
                  if (U.numberOfContours < 0)
                    for (var ut = i(U.components), pt; !(pt = ut()).done; )
                      for (var vt = pt.value, dt = this._font.getGlyph(vt.glyphID)._getContours(), Bt = 0; Bt < dt.length; Bt++)
                        for (var Xt = dt[Bt], fe = 0; fe < Xt.length; fe++) {
                          var $t = Xt[fe], he = $t.x * vt.scaleX + $t.y * vt.scale01 + vt.dx, me = $t.y * vt.scaleY + $t.x * vt.scale10 + vt.dy;
                          H.push(new Ra($t.onCurve, $t.endContour, he, me));
                        }
                  else
                    H = U.points || [];
                  U.phantomPoints && !this._font.directory.tables.HVAR && (this._metrics.advanceWidth = U.phantomPoints[1].x - U.phantomPoints[0].x, this._metrics.advanceHeight = U.phantomPoints[3].y - U.phantomPoints[2].y, this._metrics.leftBearing = U.xMin - U.phantomPoints[0].x, this._metrics.topBearing = U.phantomPoints[2].y - U.yMax);
                  for (var Fe = [], je = [], tr = 0; tr < H.length; tr++) {
                    var Ze = H[tr];
                    je.push(Ze), Ze.endContour && (Fe.push(je), je = []);
                  }
                  return Fe;
                }, rt._getMetrics = function() {
                  if (this._metrics)
                    return this._metrics;
                  var U = this._getCBox(!0);
                  return ft.prototype._getMetrics.call(this, U), this._font._variationProcessor && !this._font.HVAR && this.path, this._metrics;
                }, rt._getPath = function() {
                  for (var U = this._getContours(), H = new Ho(), ut = 0; ut < U.length; ut++) {
                    var pt = U[ut], vt = pt[0], dt = pt[pt.length - 1], Bt = 0;
                    if (vt.onCurve) {
                      var Xt = null;
                      Bt = 1;
                    } else {
                      dt.onCurve ? vt = dt : vt = new Ra(!1, !1, (vt.x + dt.x) / 2, (vt.y + dt.y) / 2);
                      var Xt = vt;
                    }
                    H.moveTo(vt.x, vt.y);
                    for (var fe = Bt; fe < pt.length; fe++) {
                      var $t = pt[fe], he = fe === 0 ? vt : pt[fe - 1];
                      if (he.onCurve && $t.onCurve)
                        H.lineTo($t.x, $t.y);
                      else if (he.onCurve && !$t.onCurve)
                        var Xt = $t;
                      else if (!he.onCurve && !$t.onCurve) {
                        var me = (he.x + $t.x) / 2, Fe = (he.y + $t.y) / 2;
                        H.quadraticCurveTo(he.x, he.y, me, Fe);
                        var Xt = $t;
                      } else if (!he.onCurve && $t.onCurve) {
                        H.quadraticCurveTo(Xt.x, Xt.y, $t.x, $t.y);
                        var Xt = null;
                      } else
                        throw new Error("Unknown TTF path state");
                    }
                    Xt && H.quadraticCurveTo(Xt.x, Xt.y, vt.x, vt.y), H.closePath();
                  }
                  return H;
                }, X;
              }(jo), Gh = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var rt = X.prototype;
                return rt._getName = function() {
                  return this._font.CFF2 ? ft.prototype._getName.call(this) : this._font["CFF "].getGlyphName(this.id);
                }, rt.bias = function(U) {
                  return U.length < 1240 ? 107 : U.length < 33900 ? 1131 : 32768;
                }, rt._getPath = function() {
                  var U = this._font.CFF2 || this._font["CFF "], H = U.stream, ut = U.topDict.CharStrings[this.id], pt = ut.offset + ut.length;
                  H.pos = ut.offset;
                  var vt = new Ho(), dt = [], Bt = [], Xt = null, fe = 0, $t = 0, he = 0, me, Fe, je = !1;
                  this._usedGsubrs = me = {}, this._usedSubrs = Fe = {};
                  var tr = U.globalSubrIndex || [], Ze = this.bias(tr), vr = U.privateDictForGlyph(this.id) || {}, fr = vr.Subrs || [], gr = this.bias(fr), wr = U.topDict.vstore && U.topDict.vstore.itemVariationStore, Vr = vr.vsindex, nn = this._font._variationProcessor;
                  function Hr() {
                    Xt == null && (Xt = dt.shift() + vr.nominalWidthX);
                  }
                  function mr() {
                    return dt.length % 2 !== 0 && Hr(), fe += dt.length >> 1, dt.length = 0;
                  }
                  function Lr(vn, xr) {
                    je && vt.closePath(), vt.moveTo(vn, xr), je = !0;
                  }
                  var jr = function vn() {
                    for (; H.pos < pt; ) {
                      var xr = H.readUInt8();
                      if (xr < 32)
                        switch (xr) {
                          case 1:
                          case 3:
                          case 18:
                          case 23:
                            mr();
                            break;
                          case 4:
                            dt.length > 1 && Hr(), he += dt.shift(), Lr($t, he);
                            break;
                          case 5:
                            for (; dt.length >= 2; )
                              $t += dt.shift(), he += dt.shift(), vt.lineTo($t, he);
                            break;
                          case 6:
                          case 7:
                            for (var Nr = xr === 6; dt.length >= 1; )
                              Nr ? $t += dt.shift() : he += dt.shift(), vt.lineTo($t, he), Nr = !Nr;
                            break;
                          case 8:
                            for (; dt.length > 0; ) {
                              var Mr = $t + dt.shift(), Fr = he + dt.shift(), qr = Mr + dt.shift(), Zr = Fr + dt.shift();
                              $t = qr + dt.shift(), he = Zr + dt.shift(), vt.bezierCurveTo(Mr, Fr, qr, Zr, $t, he);
                            }
                            break;
                          case 10:
                            var Xr = dt.pop() + gr, Sr = fr[Xr];
                            if (Sr) {
                              Fe[Xr] = !0;
                              var cn = H.pos, Sn = pt;
                              H.pos = Sr.offset, pt = Sr.offset + Sr.length, vn(), H.pos = cn, pt = Sn;
                            }
                            break;
                          case 11:
                            if (U.version >= 2)
                              break;
                            return;
                          case 14:
                            if (U.version >= 2)
                              break;
                            dt.length > 0 && Hr(), je && (vt.closePath(), je = !1);
                            break;
                          case 15: {
                            if (U.version < 2)
                              throw new Error("vsindex operator not supported in CFF v1");
                            Vr = dt.pop();
                            break;
                          }
                          case 16: {
                            if (U.version < 2)
                              throw new Error("blend operator not supported in CFF v1");
                            if (!nn)
                              throw new Error("blend operator in non-variation font");
                            for (var Pn = nn.getBlendVector(wr, Vr), zn = dt.pop(), Bn = zn * Pn.length, Xn = dt.length - Bn, Zn = Xn - zn, Tn = 0; Tn < zn; Tn++) {
                              for (var yn = dt[Zn + Tn], Wn = 0; Wn < Pn.length; Wn++)
                                yn += Pn[Wn] * dt[Xn++];
                              dt[Zn + Tn] = yn;
                            }
                            for (; Bn--; )
                              dt.pop();
                            break;
                          }
                          case 19:
                          case 20:
                            mr(), H.pos += fe + 7 >> 3;
                            break;
                          case 21:
                            dt.length > 2 && Hr(), $t += dt.shift(), he += dt.shift(), Lr($t, he);
                            break;
                          case 22:
                            dt.length > 1 && Hr(), $t += dt.shift(), Lr($t, he);
                            break;
                          case 24:
                            for (; dt.length >= 8; ) {
                              var Mr = $t + dt.shift(), Fr = he + dt.shift(), qr = Mr + dt.shift(), Zr = Fr + dt.shift();
                              $t = qr + dt.shift(), he = Zr + dt.shift(), vt.bezierCurveTo(Mr, Fr, qr, Zr, $t, he);
                            }
                            $t += dt.shift(), he += dt.shift(), vt.lineTo($t, he);
                            break;
                          case 25:
                            for (; dt.length >= 8; )
                              $t += dt.shift(), he += dt.shift(), vt.lineTo($t, he);
                            var Mr = $t + dt.shift(), Fr = he + dt.shift(), qr = Mr + dt.shift(), Zr = Fr + dt.shift();
                            $t = qr + dt.shift(), he = Zr + dt.shift(), vt.bezierCurveTo(Mr, Fr, qr, Zr, $t, he);
                            break;
                          case 26:
                            for (dt.length % 2 && ($t += dt.shift()); dt.length >= 4; )
                              Mr = $t, Fr = he + dt.shift(), qr = Mr + dt.shift(), Zr = Fr + dt.shift(), $t = qr, he = Zr + dt.shift(), vt.bezierCurveTo(Mr, Fr, qr, Zr, $t, he);
                            break;
                          case 27:
                            for (dt.length % 2 && (he += dt.shift()); dt.length >= 4; )
                              Mr = $t + dt.shift(), Fr = he, qr = Mr + dt.shift(), Zr = Fr + dt.shift(), $t = qr + dt.shift(), he = Zr, vt.bezierCurveTo(Mr, Fr, qr, Zr, $t, he);
                            break;
                          case 28:
                            dt.push(H.readInt16BE());
                            break;
                          case 29:
                            if (Xr = dt.pop() + Ze, Sr = tr[Xr], Sr) {
                              me[Xr] = !0;
                              var cn = H.pos, Sn = pt;
                              H.pos = Sr.offset, pt = Sr.offset + Sr.length, vn(), H.pos = cn, pt = Sn;
                            }
                            break;
                          case 30:
                          case 31:
                            for (Nr = xr === 31; dt.length >= 4; )
                              Nr ? (Mr = $t + dt.shift(), Fr = he, qr = Mr + dt.shift(), Zr = Fr + dt.shift(), he = Zr + dt.shift(), $t = qr + (dt.length === 1 ? dt.shift() : 0)) : (Mr = $t, Fr = he + dt.shift(), qr = Mr + dt.shift(), Zr = Fr + dt.shift(), $t = qr + dt.shift(), he = Zr + (dt.length === 1 ? dt.shift() : 0)), vt.bezierCurveTo(Mr, Fr, qr, Zr, $t, he), Nr = !Nr;
                            break;
                          case 12:
                            switch (xr = H.readUInt8(), xr) {
                              case 3:
                                var kr = dt.pop(), Fn = dt.pop();
                                dt.push(kr && Fn ? 1 : 0);
                                break;
                              case 4:
                                kr = dt.pop(), Fn = dt.pop(), dt.push(kr || Fn ? 1 : 0);
                                break;
                              case 5:
                                kr = dt.pop(), dt.push(kr ? 0 : 1);
                                break;
                              case 9:
                                kr = dt.pop(), dt.push(Math.abs(kr));
                                break;
                              case 10:
                                kr = dt.pop(), Fn = dt.pop(), dt.push(kr + Fn);
                                break;
                              case 11:
                                kr = dt.pop(), Fn = dt.pop(), dt.push(kr - Fn);
                                break;
                              case 12:
                                kr = dt.pop(), Fn = dt.pop(), dt.push(kr / Fn);
                                break;
                              case 14:
                                kr = dt.pop(), dt.push(-kr);
                                break;
                              case 15:
                                kr = dt.pop(), Fn = dt.pop(), dt.push(kr === Fn ? 1 : 0);
                                break;
                              case 18:
                                dt.pop();
                                break;
                              case 20:
                                var di = dt.pop(), va = dt.pop();
                                Bt[va] = di;
                                break;
                              case 21:
                                va = dt.pop(), dt.push(Bt[va] || 0);
                                break;
                              case 22:
                                var Ms = dt.pop(), Od = dt.pop(), Pd = dt.pop(), Bd = dt.pop();
                                dt.push(Pd <= Bd ? Ms : Od);
                                break;
                              case 23:
                                dt.push(Math.random());
                                break;
                              case 24:
                                kr = dt.pop(), Fn = dt.pop(), dt.push(kr * Fn);
                                break;
                              case 26:
                                kr = dt.pop(), dt.push(Math.sqrt(kr));
                                break;
                              case 27:
                                kr = dt.pop(), dt.push(kr, kr);
                                break;
                              case 28:
                                kr = dt.pop(), Fn = dt.pop(), dt.push(Fn, kr);
                                break;
                              case 29:
                                va = dt.pop(), va < 0 ? va = 0 : va > dt.length - 1 && (va = dt.length - 1), dt.push(dt[va]);
                                break;
                              case 30:
                                var Vo = dt.pop(), Ji = dt.pop();
                                if (Ji >= 0)
                                  for (; Ji > 0; ) {
                                    for (var ks = dt[Vo - 1], Xo = Vo - 2; Xo >= 0; Xo--)
                                      dt[Xo + 1] = dt[Xo];
                                    dt[0] = ks, Ji--;
                                  }
                                else
                                  for (; Ji < 0; ) {
                                    for (var ks = dt[0], Zo = 0; Zo <= Vo; Zo++)
                                      dt[Zo] = dt[Zo + 1];
                                    dt[Vo - 1] = ks, Ji++;
                                  }
                                break;
                              case 34:
                                Mr = $t + dt.shift(), Fr = he, qr = Mr + dt.shift(), Zr = Fr + dt.shift();
                                var Qi = qr + dt.shift(), _i = Zr, $i = Qi + dt.shift(), qi = _i, to = $i + dt.shift(), eo = qi, ro = to + dt.shift(), no = eo;
                                $t = ro, he = no, vt.bezierCurveTo(Mr, Fr, qr, Zr, Qi, _i), vt.bezierCurveTo($i, qi, to, eo, ro, no);
                                break;
                              case 35:
                                for (var Wa = [], Sl = 0; Sl <= 5; Sl++)
                                  $t += dt.shift(), he += dt.shift(), Wa.push($t, he);
                                vt.bezierCurveTo.apply(vt, Wa.slice(0, 6)), vt.bezierCurveTo.apply(vt, Wa.slice(6)), dt.shift();
                                break;
                              case 36:
                                Mr = $t + dt.shift(), Fr = he + dt.shift(), qr = Mr + dt.shift(), Zr = Fr + dt.shift(), Qi = qr + dt.shift(), _i = Zr, $i = Qi + dt.shift(), qi = _i, to = $i + dt.shift(), eo = qi + dt.shift(), ro = to + dt.shift(), no = eo, $t = ro, he = no, vt.bezierCurveTo(Mr, Fr, qr, Zr, Qi, _i), vt.bezierCurveTo($i, qi, to, eo, ro, no);
                                break;
                              case 37:
                                var Cl = $t, Al = he;
                                Wa = [];
                                for (var El = 0; El <= 4; El++)
                                  $t += dt.shift(), he += dt.shift(), Wa.push($t, he);
                                Math.abs($t - Cl) > Math.abs(he - Al) ? ($t += dt.shift(), he = Al) : ($t = Cl, he += dt.shift()), Wa.push($t, he), vt.bezierCurveTo.apply(vt, Wa.slice(0, 6)), vt.bezierCurveTo.apply(vt, Wa.slice(6));
                                break;
                              default:
                                throw new Error("Unknown op: 12 ".concat(xr));
                            }
                            break;
                          default:
                            throw new Error("Unknown op: ".concat(xr));
                        }
                      else if (xr < 247)
                        dt.push(xr - 139);
                      else if (xr < 251) {
                        var Us = H.readUInt8();
                        dt.push((xr - 247) * 256 + Us + 108);
                      } else if (xr < 255) {
                        var Us = H.readUInt8();
                        dt.push(-(xr - 251) * 256 - Us - 108);
                      } else
                        dt.push(H.readInt32BE() / 65536);
                    }
                  };
                  return jr(), je && vt.closePath(), vt;
                }, X;
              }(jo), Vh = new e.Struct({
                originX: e.uint16,
                originY: e.uint16,
                type: new e.String(4),
                data: new e.Buffer(function(ft) {
                  return ft.parent.buflen - ft._currentOffset;
                })
              }), Xh = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var rt = X.prototype;
                return rt.getImageForSize = function(U) {
                  for (var H = 0; H < this._font.sbix.imageTables.length; H++) {
                    var ut = this._font.sbix.imageTables[H];
                    if (ut.ppem >= U)
                      break;
                  }
                  var pt = ut.imageOffsets, vt = pt[this.id], dt = pt[this.id + 1];
                  return vt === dt ? null : (this._font.stream.pos = vt, Vh.decode(this._font.stream, {
                    buflen: dt - vt
                  }));
                }, rt.render = function(U, H) {
                  var ut = this.getImageForSize(H);
                  if (ut != null) {
                    var pt = H / this._font.unitsPerEm;
                    U.image(ut.data, {
                      height: H,
                      x: ut.originX,
                      y: (this.bbox.minY - ut.originY) * pt
                    });
                  }
                  this._font.sbix.flags.renderOutlines && ft.prototype.render.call(this, U, H);
                }, X;
              }(Go), fl = function(X, rt) {
                this.glyph = X, this.color = rt;
              }, Zh = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var rt = X.prototype;
                return rt._getBBox = function() {
                  for (var U = new ui(), H = 0; H < this.layers.length; H++) {
                    var ut = this.layers[H], pt = ut.glyph.bbox;
                    U.addPoint(pt.minX, pt.minY), U.addPoint(pt.maxX, pt.maxY);
                  }
                  return U;
                }, rt.render = function(U, H) {
                  for (var ut = i(this.layers), pt; !(pt = ut()).done; ) {
                    var vt = pt.value, dt = vt.glyph, Bt = vt.color;
                    U.fillColor([Bt.red, Bt.green, Bt.blue], Bt.alpha / 255 * 100), dt.render(U, H);
                  }
                }, o(X, [{
                  key: "layers",
                  get: function() {
                    for (var U = this._font.CPAL, H = this._font.COLR, ut = 0, pt = H.baseGlyphRecord.length - 1; ut <= pt; ) {
                      var vt = ut + pt >> 1, dt = H.baseGlyphRecord[vt];
                      if (this.id < dt.gid)
                        pt = vt - 1;
                      else if (this.id > dt.gid)
                        ut = vt + 1;
                      else {
                        var Bt = dt;
                        break;
                      }
                    }
                    if (Bt == null) {
                      var Xt = this._font._getBaseGlyph(this.id), fe = {
                        red: 0,
                        green: 0,
                        blue: 0,
                        alpha: 255
                      };
                      return [new fl(Xt, fe)];
                    }
                    for (var $t = [], he = Bt.firstLayerIndex; he < Bt.firstLayerIndex + Bt.numLayers; he++) {
                      var dt = H.layerRecords[he], fe = U.colorRecords[dt.paletteIndex], Xt = this._font._getBaseGlyph(dt.gid);
                      $t.push(new fl(Xt, fe));
                    }
                    return $t;
                  }
                }]), X;
              }(jo), Yh = 32768, Kh = 4095, Jh = 32768, ul = 16384, Qh = 8192, cl = 4095, hl = 128, dl = 127, _h = 128, $h = 64, qh = 63, td = /* @__PURE__ */ function() {
                function ft(rt, B) {
                  this.font = rt, this.normalizedCoords = this.normalizeCoords(B), this.blendVectors = /* @__PURE__ */ new Map();
                }
                var X = ft.prototype;
                return X.normalizeCoords = function(B) {
                  for (var U = [], H = 0; H < this.font.fvar.axis.length; H++) {
                    var ut = this.font.fvar.axis[H];
                    B[H] < ut.defaultValue ? U.push((B[H] - ut.defaultValue + Number.EPSILON) / (ut.defaultValue - ut.minValue + Number.EPSILON)) : U.push((B[H] - ut.defaultValue + Number.EPSILON) / (ut.maxValue - ut.defaultValue + Number.EPSILON));
                  }
                  if (this.font.avar)
                    for (var H = 0; H < this.font.avar.segment.length; H++)
                      for (var pt = this.font.avar.segment[H], vt = 0; vt < pt.correspondence.length; vt++) {
                        var dt = pt.correspondence[vt];
                        if (vt >= 1 && U[H] < dt.fromCoord) {
                          var Bt = pt.correspondence[vt - 1];
                          U[H] = ((U[H] - Bt.fromCoord) * (dt.toCoord - Bt.toCoord) + Number.EPSILON) / (dt.fromCoord - Bt.fromCoord + Number.EPSILON) + Bt.toCoord;
                          break;
                        }
                      }
                  return U;
                }, X.transformPoints = function(B, U) {
                  if (!(!this.font.fvar || !this.font.gvar)) {
                    var H = this.font.gvar;
                    if (!(B >= H.glyphCount)) {
                      var ut = H.offsets[B];
                      if (ut !== H.offsets[B + 1]) {
                        var pt = this.font.stream;
                        if (pt.pos = ut, !(pt.pos >= pt.length)) {
                          var vt = pt.readUInt16BE(), dt = ut + pt.readUInt16BE();
                          if (vt & Yh) {
                            var Bt = pt.pos;
                            pt.pos = dt;
                            var Xt = this.decodePoints();
                            dt = pt.pos, pt.pos = Bt;
                          }
                          var fe = U.map(function(Pn) {
                            return Pn.copy();
                          });
                          vt &= Kh;
                          for (var $t = 0; $t < vt; $t++) {
                            var he = pt.readUInt16BE(), me = pt.readUInt16BE();
                            if (me & Jh)
                              for (var Fe = [], je = 0; je < H.axisCount; je++)
                                Fe.push(pt.readInt16BE() / 16384);
                            else {
                              if ((me & cl) >= H.globalCoordCount)
                                throw new Error("Invalid gvar table");
                              var Fe = H.globalCoords[me & cl];
                            }
                            if (me & ul) {
                              for (var tr = [], Ze = 0; Ze < H.axisCount; Ze++)
                                tr.push(pt.readInt16BE() / 16384);
                              for (var vr = [], fr = 0; fr < H.axisCount; fr++)
                                vr.push(pt.readInt16BE() / 16384);
                            }
                            var gr = this.tupleFactor(me, Fe, tr, vr);
                            if (gr === 0) {
                              dt += he;
                              continue;
                            }
                            var Bt = pt.pos;
                            if (pt.pos = dt, me & Qh)
                              var wr = this.decodePoints();
                            else
                              var wr = Xt;
                            var Vr = wr.length === 0 ? U.length : wr.length, nn = this.decodeDeltas(Vr), Hr = this.decodeDeltas(Vr);
                            if (wr.length === 0)
                              for (var mr = 0; mr < U.length; mr++) {
                                var Lr = U[mr];
                                Lr.x += Math.round(nn[mr] * gr), Lr.y += Math.round(Hr[mr] * gr);
                              }
                            else {
                              for (var jr = fe.map(function(zn) {
                                return zn.copy();
                              }), vn = U.map(function() {
                                return !1;
                              }), xr = 0; xr < wr.length; xr++) {
                                var Nr = wr[xr];
                                if (Nr < U.length) {
                                  var Xr = jr[Nr];
                                  vn[Nr] = !0, Xr.x += Math.round(nn[xr] * gr), Xr.y += Math.round(Hr[xr] * gr);
                                }
                              }
                              this.interpolateMissingDeltas(jr, fe, vn);
                              for (var Sr = 0; Sr < U.length; Sr++) {
                                var cn = jr[Sr].x - fe[Sr].x, Sn = jr[Sr].y - fe[Sr].y;
                                U[Sr].x += cn, U[Sr].y += Sn;
                              }
                            }
                            dt += he, pt.pos = Bt;
                          }
                        }
                      }
                    }
                  }
                }, X.decodePoints = function() {
                  var B = this.font.stream, U = B.readUInt8();
                  U & hl && (U = (U & dl) << 8 | B.readUInt8());
                  for (var H = new Uint16Array(U), ut = 0, pt = 0; ut < U; )
                    for (var vt = B.readUInt8(), dt = (vt & dl) + 1, Bt = vt & hl ? B.readUInt16 : B.readUInt8, Xt = 0; Xt < dt && ut < U; Xt++)
                      pt += Bt.call(B), H[ut++] = pt;
                  return H;
                }, X.decodeDeltas = function(B) {
                  for (var U = this.font.stream, H = 0, ut = new Int16Array(B); H < B; ) {
                    var pt = U.readUInt8(), vt = (pt & qh) + 1;
                    if (pt & _h)
                      H += vt;
                    else
                      for (var dt = pt & $h ? U.readInt16BE : U.readInt8, Bt = 0; Bt < vt && H < B; Bt++)
                        ut[H++] = dt.call(U);
                  }
                  return ut;
                }, X.tupleFactor = function(B, U, H, ut) {
                  for (var pt = this.normalizedCoords, vt = this.font.gvar, dt = 1, Bt = 0; Bt < vt.axisCount; Bt++)
                    if (U[Bt] !== 0) {
                      if (pt[Bt] === 0)
                        return 0;
                      if (B & ul) {
                        if (pt[Bt] < H[Bt] || pt[Bt] > ut[Bt])
                          return 0;
                        pt[Bt] < U[Bt] ? dt = dt * (pt[Bt] - H[Bt] + Number.EPSILON) / (U[Bt] - H[Bt] + Number.EPSILON) : dt = dt * (ut[Bt] - pt[Bt] + Number.EPSILON) / (ut[Bt] - U[Bt] + Number.EPSILON);
                      } else {
                        if (pt[Bt] < Math.min(0, U[Bt]) || pt[Bt] > Math.max(0, U[Bt]))
                          return 0;
                        dt = (dt * pt[Bt] + Number.EPSILON) / (U[Bt] + Number.EPSILON);
                      }
                    }
                  return dt;
                }, X.interpolateMissingDeltas = function(B, U, H) {
                  if (B.length !== 0)
                    for (var ut = 0; ut < B.length; ) {
                      for (var pt = ut, vt = ut, dt = B[vt]; !dt.endContour; )
                        dt = B[++vt];
                      for (; ut <= vt && !H[ut]; )
                        ut++;
                      if (!(ut > vt)) {
                        var Bt = ut, Xt = ut;
                        for (ut++; ut <= vt; )
                          H[ut] && (this.deltaInterpolate(Xt + 1, ut - 1, Xt, ut, U, B), Xt = ut), ut++;
                        Xt === Bt ? this.deltaShift(pt, vt, Xt, U, B) : (this.deltaInterpolate(Xt + 1, vt, Xt, Bt, U, B), Bt > 0 && this.deltaInterpolate(pt, Bt - 1, Xt, Bt, U, B)), ut = vt + 1;
                      }
                    }
                }, X.deltaInterpolate = function(B, U, H, ut, pt, vt) {
                  if (!(B > U))
                    for (var dt = ["x", "y"], Bt = 0; Bt < dt.length; Bt++) {
                      var Xt = dt[Bt];
                      if (pt[H][Xt] > pt[ut][Xt]) {
                        var fe = H;
                        H = ut, ut = fe;
                      }
                      var $t = pt[H][Xt], he = pt[ut][Xt], me = vt[H][Xt], Fe = vt[ut][Xt];
                      if ($t !== he || me === Fe)
                        for (var je = $t === he ? 0 : (Fe - me) / (he - $t), tr = B; tr <= U; tr++) {
                          var Ze = pt[tr][Xt];
                          Ze <= $t ? Ze += me - $t : Ze >= he ? Ze += Fe - he : Ze = me + (Ze - $t) * je, vt[tr][Xt] = Ze;
                        }
                    }
                }, X.deltaShift = function(B, U, H, ut, pt) {
                  var vt = pt[H].x - ut[H].x, dt = pt[H].y - ut[H].y;
                  if (!(vt === 0 && dt === 0))
                    for (var Bt = B; Bt <= U; Bt++)
                      Bt !== H && (pt[Bt].x += vt, pt[Bt].y += dt);
                }, X.getAdvanceAdjustment = function(B, U) {
                  var H, ut;
                  if (U.advanceWidthMapping) {
                    var pt = B;
                    pt >= U.advanceWidthMapping.mapCount && (pt = U.advanceWidthMapping.mapCount - 1), U.advanceWidthMapping.entryFormat;
                    var vt = U.advanceWidthMapping.mapData[pt];
                    H = vt.outerIndex, ut = vt.innerIndex;
                  } else
                    H = 0, ut = B;
                  return this.getDelta(U.itemVariationStore, H, ut);
                }, X.getDelta = function(B, U, H) {
                  if (U >= B.itemVariationData.length)
                    return 0;
                  var ut = B.itemVariationData[U];
                  if (H >= ut.deltaSets.length)
                    return 0;
                  for (var pt = ut.deltaSets[H], vt = this.getBlendVector(B, U), dt = 0, Bt = 0; Bt < ut.regionIndexCount; Bt++)
                    dt += pt.deltas[Bt] * vt[Bt];
                  return dt;
                }, X.getBlendVector = function(B, U) {
                  var H = B.itemVariationData[U];
                  if (this.blendVectors.has(H))
                    return this.blendVectors.get(H);
                  for (var ut = this.normalizedCoords, pt = [], vt = 0; vt < H.regionIndexCount; vt++) {
                    for (var dt = 1, Bt = H.regionIndexes[vt], Xt = B.variationRegionList.variationRegions[Bt], fe = 0; fe < Xt.length; fe++) {
                      var $t = Xt[fe], he = void 0;
                      $t.startCoord > $t.peakCoord || $t.peakCoord > $t.endCoord || $t.startCoord < 0 && $t.endCoord > 0 && $t.peakCoord !== 0 || $t.peakCoord === 0 ? he = 1 : ut[fe] < $t.startCoord || ut[fe] > $t.endCoord ? he = 0 : ut[fe] === $t.peakCoord ? he = 1 : ut[fe] < $t.peakCoord ? he = (ut[fe] - $t.startCoord + Number.EPSILON) / ($t.peakCoord - $t.startCoord + Number.EPSILON) : he = ($t.endCoord - ut[fe] + Number.EPSILON) / ($t.endCoord - $t.peakCoord + Number.EPSILON), dt *= he;
                    }
                    pt[vt] = dt;
                  }
                  return this.blendVectors.set(H, pt), pt;
                }, ft;
              }(), ed = Promise.resolve(), vl = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.font = rt, this.glyphs = [], this.mapping = {}, this.includeGlyph(0);
                }
                var X = ft.prototype;
                return X.includeGlyph = function(B) {
                  return typeof B == "object" && (B = B.id), this.mapping[B] == null && (this.glyphs.push(B), this.mapping[B] = this.glyphs.length - 1), this.mapping[B];
                }, X.encodeStream = function() {
                  var B = this, U = new e.EncodeStream();
                  return ed.then(function() {
                    return B.encode(U), U.end();
                  }), U;
                }, ft;
              }(), rd = 1, nd = 2, ad = 4, id = 8, od = 16, sd = 32, pl = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.size = function(rt) {
                  return rt >= 0 && rt <= 255 ? 1 : 2;
                }, ft.encode = function(rt, B) {
                  B >= 0 && B <= 255 ? rt.writeUInt8(B) : rt.writeInt16BE(B);
                }, ft;
              }(), gl = new e.Struct({
                numberOfContours: e.int16,
                // if negative, this is a composite glyph
                xMin: e.int16,
                yMin: e.int16,
                xMax: e.int16,
                yMax: e.int16,
                endPtsOfContours: new e.Array(e.uint16, "numberOfContours"),
                instructions: new e.Array(e.uint8, e.uint16),
                flags: new e.Array(e.uint8, 0),
                xPoints: new e.Array(pl, 0),
                yPoints: new e.Array(pl, 0)
              }), ld = /* @__PURE__ */ function() {
                function ft() {
                }
                var X = ft.prototype;
                return X.encodeSimple = function(B, U) {
                  U === void 0 && (U = []);
                  for (var H = [], ut = [], pt = [], vt = [], dt = 0, Bt = 0, Xt = 0, fe = 0, $t = 0, he = 0; he < B.commands.length; he++) {
                    for (var me = B.commands[he], Fe = 0; Fe < me.args.length; Fe += 2) {
                      var je = me.args[Fe], tr = me.args[Fe + 1], Ze = 0;
                      if (me.command === "quadraticCurveTo" && Fe === 2) {
                        var vr = B.commands[he + 1];
                        if (vr && vr.command === "quadraticCurveTo") {
                          var fr = (Bt + vr.args[0]) / 2, gr = (Xt + vr.args[1]) / 2;
                          if (je === fr && tr === gr)
                            continue;
                        }
                      }
                      me.command === "quadraticCurveTo" && Fe === 0 || (Ze |= rd), Ze = this._encodePoint(je, Bt, ut, Ze, nd, od), Ze = this._encodePoint(tr, Xt, pt, Ze, ad, sd), Ze === fe && dt < 255 ? (vt[vt.length - 1] |= id, dt++) : (dt > 0 && (vt.push(dt), dt = 0), vt.push(Ze), fe = Ze), Bt = je, Xt = tr, $t++;
                    }
                    me.command === "closePath" && H.push($t - 1);
                  }
                  B.commands.length > 1 && B.commands[B.commands.length - 1].command !== "closePath" && H.push($t - 1);
                  var wr = B.bbox, Vr = {
                    numberOfContours: H.length,
                    xMin: wr.minX,
                    yMin: wr.minY,
                    xMax: wr.maxX,
                    yMax: wr.maxY,
                    endPtsOfContours: H,
                    instructions: U,
                    flags: vt,
                    xPoints: ut,
                    yPoints: pt
                  }, nn = gl.size(Vr), Hr = 4 - nn % 4, mr = new e.EncodeStream(nn + Hr);
                  return gl.encode(mr, Vr), Hr !== 0 && mr.fill(0, Hr), mr.buffer;
                }, X._encodePoint = function(B, U, H, ut, pt, vt) {
                  var dt = B - U;
                  return B === U ? ut |= vt : (-255 <= dt && dt <= 255 && (ut |= pt, dt < 0 ? dt = -dt : ut |= vt), H.push(dt)), ut;
                }, ft;
              }(), fd = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X(B) {
                  var U;
                  return U = ft.call(this, B) || this, U.glyphEncoder = new ld(), U;
                }
                var rt = X.prototype;
                return rt._addGlyph = function(U) {
                  var H = this.font.getGlyph(U), ut = H._decode(), pt = this.font.loca.offsets[U], vt = this.font.loca.offsets[U + 1], dt = this.font._getTableStream("glyf");
                  dt.pos += pt;
                  var Bt = dt.readBuffer(vt - pt);
                  if (ut && ut.numberOfContours < 0) {
                    Bt = s.from(Bt);
                    for (var Xt = i(ut.components), fe; !(fe = Xt()).done; ) {
                      var $t = fe.value;
                      U = this.includeGlyph($t.glyphID), Bt.writeUInt16BE(U, $t.pos);
                    }
                  } else
                    ut && this.font._variationProcessor && (Bt = this.glyphEncoder.encodeSimple(H.path, ut.instructions));
                  return this.glyf.push(Bt), this.loca.offsets.push(this.offset), this.hmtx.metrics.push({
                    advance: H.advanceWidth,
                    bearing: H._getMetrics().leftBearing
                  }), this.offset += Bt.length, this.glyf.length - 1;
                }, rt.encode = function(U) {
                  this.glyf = [], this.offset = 0, this.loca = {
                    offsets: [],
                    version: this.font.loca.version
                  }, this.hmtx = {
                    metrics: [],
                    bearings: []
                  };
                  for (var H = 0; H < this.glyphs.length; )
                    this._addGlyph(this.glyphs[H++]);
                  var ut = A(this.font.maxp);
                  ut.numGlyphs = this.glyf.length, this.loca.offsets.push(this.offset);
                  var pt = A(this.font.head);
                  pt.indexToLocFormat = this.loca.version;
                  var vt = A(this.font.hhea);
                  vt.numberOfMetrics = this.hmtx.metrics.length, wo.encode(U, {
                    tables: {
                      head: pt,
                      hhea: vt,
                      loca: this.loca,
                      maxp: ut,
                      "cvt ": this.font["cvt "],
                      prep: this.font.prep,
                      glyf: this.glyf,
                      hmtx: this.hmtx,
                      fpgm: this.font.fpgm
                      // name: clone @font.name
                      // 'OS/2': clone @font['OS/2']
                      // post: clone @font.post
                      // cmap: cmap
                    }
                  });
                }, X;
              }(vl), ud = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X(B) {
                  var U;
                  if (U = ft.call(this, B) || this, U.cff = U.font["CFF "], !U.cff)
                    throw new Error("Not a CFF Font");
                  return U;
                }
                var rt = X.prototype;
                return rt.subsetCharstrings = function() {
                  this.charstrings = [];
                  for (var U = {}, H = i(this.glyphs), ut; !(ut = H()).done; ) {
                    var pt = ut.value;
                    this.charstrings.push(this.cff.getCharString(pt));
                    var vt = this.font.getGlyph(pt);
                    vt.path;
                    for (var dt in vt._usedGsubrs)
                      U[dt] = !0;
                  }
                  this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, U);
                }, rt.subsetSubrs = function(U, H) {
                  for (var ut = [], pt = 0; pt < U.length; pt++) {
                    var vt = U[pt];
                    H[pt] ? (this.cff.stream.pos = vt.offset, ut.push(this.cff.stream.readBuffer(vt.length))) : ut.push(s.from([11]));
                  }
                  return ut;
                }, rt.subsetFontdict = function(U) {
                  U.FDArray = [], U.FDSelect = {
                    version: 0,
                    fds: []
                  };
                  for (var H = {}, ut = [], pt = {}, vt = i(this.glyphs), dt; !(dt = vt()).done; ) {
                    var Bt = dt.value, Xt = this.cff.fdForGlyph(Bt);
                    if (Xt != null) {
                      H[Xt] || (U.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[Xt])), ut.push({}), pt[Xt] = U.FDArray.length - 1), H[Xt] = !0, U.FDSelect.fds.push(pt[Xt]);
                      var fe = this.font.getGlyph(Bt);
                      fe.path;
                      for (var $t in fe._usedSubrs)
                        ut[pt[Xt]][$t] = !0;
                    }
                  }
                  for (var he = 0; he < U.FDArray.length; he++) {
                    var me = U.FDArray[he];
                    delete me.FontName, me.Private && me.Private.Subrs && (me.Private = Object.assign({}, me.Private), me.Private.Subrs = this.subsetSubrs(me.Private.Subrs, ut[he]));
                  }
                }, rt.createCIDFontdict = function(U) {
                  for (var H = {}, ut = i(this.glyphs), pt; !(pt = ut()).done; ) {
                    var vt = pt.value, dt = this.font.getGlyph(vt);
                    dt.path;
                    for (var Bt in dt._usedSubrs)
                      H[Bt] = !0;
                  }
                  var Xt = Object.assign({}, this.cff.topDict.Private);
                  return this.cff.topDict.Private && this.cff.topDict.Private.Subrs && (Xt.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, H)), U.FDArray = [{
                    Private: Xt
                  }], U.FDSelect = {
                    version: 3,
                    nRanges: 1,
                    ranges: [{
                      first: 0,
                      fd: 0
                    }],
                    sentinel: this.charstrings.length
                  };
                }, rt.addString = function(U) {
                  return U ? (this.strings || (this.strings = []), this.strings.push(U), ue.length + this.strings.length - 1) : null;
                }, rt.encode = function(U) {
                  this.subsetCharstrings();
                  var H = {
                    version: this.charstrings.length > 255 ? 2 : 1,
                    ranges: [{
                      first: 1,
                      nLeft: this.charstrings.length - 2
                    }]
                  }, ut = Object.assign({}, this.cff.topDict);
                  ut.Private = null, ut.charset = H, ut.Encoding = null, ut.CharStrings = this.charstrings;
                  for (var pt = 0, vt = ["version", "Notice", "Copyright", "FullName", "FamilyName", "Weight", "PostScript", "BaseFontName", "FontName"]; pt < vt.length; pt++) {
                    var dt = vt[pt];
                    ut[dt] = this.addString(this.cff.string(ut[dt]));
                  }
                  ut.ROS = [this.addString("Adobe"), this.addString("Identity"), 0], ut.CIDCount = this.charstrings.length, this.cff.isCIDFont ? this.subsetFontdict(ut) : this.createCIDFontdict(ut);
                  var Bt = {
                    version: 1,
                    hdrSize: this.cff.hdrSize,
                    offSize: 4,
                    header: this.cff.header,
                    nameIndex: [this.cff.postscriptName],
                    topDictIndex: [ut],
                    stringIndex: this.strings,
                    globalSubrIndex: this.gsubrs
                  };
                  ge.encode(U, Bt);
                }, X;
              }(vl), un, $a = (un = /* @__PURE__ */ function() {
                ft.probe = function(B) {
                  var U = B.toString("ascii", 0, 4);
                  return U === "true" || U === "OTTO" || U === String.fromCharCode(0, 1, 0, 0);
                };
                function ft(rt, B) {
                  B === void 0 && (B = null), this.defaultLanguage = null, this.stream = rt, this.variationCoords = B, this._directoryPos = this.stream.pos, this._tables = {}, this._glyphs = {}, this._decodeDirectory();
                  for (var U in this.directory.tables) {
                    var H = this.directory.tables[U];
                    lr[U] && H.length > 0 && Object.defineProperty(this, U, {
                      get: this._getTable.bind(this, H)
                    });
                  }
                }
                var X = ft.prototype;
                return X.setDefaultLanguage = function(B) {
                  B === void 0 && (B = null), this.defaultLanguage = B;
                }, X._getTable = function(B) {
                  if (!(B.tag in this._tables))
                    try {
                      this._tables[B.tag] = this._decodeTable(B);
                    } catch (U) {
                      R.logErrors && (console.error("Error decoding table ".concat(B.tag)), console.error(U.stack));
                    }
                  return this._tables[B.tag];
                }, X._getTableStream = function(B) {
                  var U = this.directory.tables[B];
                  return U ? (this.stream.pos = U.offset, this.stream) : null;
                }, X._decodeDirectory = function() {
                  return this.directory = wo.decode(this.stream, {
                    _startOffset: 0
                  });
                }, X._decodeTable = function(B) {
                  var U = this.stream.pos, H = this._getTableStream(B.tag), ut = lr[B.tag].decode(H, this, B.length);
                  return this.stream.pos = U, ut;
                }, X.getName = function(B, U) {
                  U === void 0 && (U = this.defaultLanguage || R.defaultLanguage);
                  var H = this.name && this.name.records[B];
                  return H && (H[U] || H[this.defaultLanguage] || H[R.defaultLanguage] || H.en || H[Object.keys(H)[0]]) || null;
                }, X.hasGlyphForCodePoint = function(B) {
                  return !!this._cmapProcessor.lookup(B);
                }, X.glyphForCodePoint = function(B) {
                  return this.getGlyph(this._cmapProcessor.lookup(B), [B]);
                }, X.glyphsForString = function(B) {
                  for (var U = [], H = B.length, ut = 0, pt = -1, vt = -1; ut <= H; ) {
                    var dt = 0, Bt = 0;
                    if (ut < H) {
                      if (dt = B.charCodeAt(ut++), 55296 <= dt && dt <= 56319 && ut < H) {
                        var Xt = B.charCodeAt(ut);
                        56320 <= Xt && Xt <= 57343 && (ut++, dt = ((dt & 1023) << 10) + (Xt & 1023) + 65536);
                      }
                      Bt = 65024 <= dt && dt <= 65039 || 917760 <= dt && dt <= 917999 ? 1 : 0;
                    } else
                      ut++;
                    vt === 0 && Bt === 1 ? U.push(this.getGlyph(this._cmapProcessor.lookup(pt, dt), [pt, dt])) : vt === 0 && Bt === 0 && U.push(this.glyphForCodePoint(pt)), pt = dt, vt = Bt;
                  }
                  return U;
                }, X.layout = function(B, U, H, ut, pt) {
                  return this._layoutEngine.layout(B, U, H, ut, pt);
                }, X.stringsForGlyph = function(B) {
                  return this._layoutEngine.stringsForGlyph(B);
                }, X.getAvailableFeatures = function(B, U) {
                  return this._layoutEngine.getAvailableFeatures(B, U);
                }, X._getBaseGlyph = function(B, U) {
                  return U === void 0 && (U = []), this._glyphs[B] || (this.directory.tables.glyf ? this._glyphs[B] = new Go(B, U, this) : (this.directory.tables["CFF "] || this.directory.tables.CFF2) && (this._glyphs[B] = new Gh(B, U, this))), this._glyphs[B] || null;
                }, X.getGlyph = function(B, U) {
                  return U === void 0 && (U = []), this._glyphs[B] || (this.directory.tables.sbix ? this._glyphs[B] = new Xh(B, U, this) : this.directory.tables.COLR && this.directory.tables.CPAL ? this._glyphs[B] = new Zh(B, U, this) : this._getBaseGlyph(B, U)), this._glyphs[B] || null;
                }, X.createSubset = function() {
                  return this.directory.tables["CFF "] ? new ud(this) : new fd(this);
                }, X.getVariation = function(B) {
                  if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2)))
                    throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");
                  if (typeof B == "string" && (B = this.namedVariations[B]), typeof B != "object")
                    throw new Error("Variation settings must be either a variation name or settings object.");
                  var U = this.fvar.axis.map(function(pt, vt) {
                    var dt = pt.axisTag.trim();
                    return dt in B ? Math.max(pt.minValue, Math.min(pt.maxValue, B[dt])) : pt.defaultValue;
                  }), H = new e.DecodeStream(this.stream.buffer);
                  H.pos = this._directoryPos;
                  var ut = new ft(H, U);
                  return ut._tables = this._tables, ut;
                }, X.getFont = function(B) {
                  return this.getVariation(B);
                }, o(ft, [{
                  key: "postscriptName",
                  get: function() {
                    return this.getName("postscriptName");
                  }
                  /**
                   * The font's full name, e.g. "Helvetica Bold"
                   * @type {string}
                   */
                }, {
                  key: "fullName",
                  get: function() {
                    return this.getName("fullName");
                  }
                  /**
                   * The font's family name, e.g. "Helvetica"
                   * @type {string}
                   */
                }, {
                  key: "familyName",
                  get: function() {
                    return this.getName("fontFamily");
                  }
                  /**
                   * The font's sub-family, e.g. "Bold".
                   * @type {string}
                   */
                }, {
                  key: "subfamilyName",
                  get: function() {
                    return this.getName("fontSubfamily");
                  }
                  /**
                   * The font's copyright information
                   * @type {string}
                   */
                }, {
                  key: "copyright",
                  get: function() {
                    return this.getName("copyright");
                  }
                  /**
                   * The font's version number
                   * @type {string}
                   */
                }, {
                  key: "version",
                  get: function() {
                    return this.getName("version");
                  }
                  /**
                   * The fontâs [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))
                   * @type {number}
                   */
                }, {
                  key: "ascent",
                  get: function() {
                    return this.hhea.ascent;
                  }
                  /**
                   * The fontâs [descender](https://en.wikipedia.org/wiki/Descender)
                   * @type {number}
                   */
                }, {
                  key: "descent",
                  get: function() {
                    return this.hhea.descent;
                  }
                  /**
                   * The amount of space that should be included between lines
                   * @type {number}
                   */
                }, {
                  key: "lineGap",
                  get: function() {
                    return this.hhea.lineGap;
                  }
                  /**
                   * The offset from the normal underline position that should be used
                   * @type {number}
                   */
                }, {
                  key: "underlinePosition",
                  get: function() {
                    return this.post.underlinePosition;
                  }
                  /**
                   * The weight of the underline that should be used
                   * @type {number}
                   */
                }, {
                  key: "underlineThickness",
                  get: function() {
                    return this.post.underlineThickness;
                  }
                  /**
                   * If this is an italic font, the angle the cursor should be drawn at to match the font design
                   * @type {number}
                   */
                }, {
                  key: "italicAngle",
                  get: function() {
                    return this.post.italicAngle;
                  }
                  /**
                   * The height of capital letters above the baseline.
                   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.
                   * @type {number}
                   */
                }, {
                  key: "capHeight",
                  get: function() {
                    var B = this["OS/2"];
                    return B ? B.capHeight : this.ascent;
                  }
                  /**
                   * The height of lower case letters in the font.
                   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.
                   * @type {number}
                   */
                }, {
                  key: "xHeight",
                  get: function() {
                    var B = this["OS/2"];
                    return B ? B.xHeight : 0;
                  }
                  /**
                   * The number of glyphs in the font.
                   * @type {number}
                   */
                }, {
                  key: "numGlyphs",
                  get: function() {
                    return this.maxp.numGlyphs;
                  }
                  /**
                   * The size of the fontâs internal coordinate grid
                   * @type {number}
                   */
                }, {
                  key: "unitsPerEm",
                  get: function() {
                    return this.head.unitsPerEm;
                  }
                  /**
                   * The fontâs bounding box, i.e. the box that encloses all glyphs in the font.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    return Object.freeze(new ui(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));
                  }
                }, {
                  key: "_cmapProcessor",
                  get: function() {
                    return new Wu(this.cmap);
                  }
                  /**
                   * An array of all of the unicode code points supported by the font.
                   * @type {number[]}
                   */
                }, {
                  key: "characterSet",
                  get: function() {
                    return this._cmapProcessor.getCharacterSet();
                  }
                }, {
                  key: "_layoutEngine",
                  get: function() {
                    return new Fh(this);
                  }
                }, {
                  key: "availableFeatures",
                  get: function() {
                    return this._layoutEngine.getAvailableFeatures();
                  }
                }, {
                  key: "variationAxes",
                  get: function() {
                    var B = {};
                    if (!this.fvar)
                      return B;
                    for (var U = i(this.fvar.axis), H; !(H = U()).done; ) {
                      var ut = H.value;
                      B[ut.axisTag.trim()] = {
                        name: ut.name.en,
                        min: ut.minValue,
                        default: ut.defaultValue,
                        max: ut.maxValue
                      };
                    }
                    return B;
                  }
                  /**
                   * Returns an object describing the named variation instances
                   * that the font designer has specified. Keys are variation names
                   * and values are the variation settings for this instance.
                   *
                   * @type {object}
                   */
                }, {
                  key: "namedVariations",
                  get: function() {
                    var B = {};
                    if (!this.fvar)
                      return B;
                    for (var U = i(this.fvar.instance), H; !(H = U()).done; ) {
                      for (var ut = H.value, pt = {}, vt = 0; vt < this.fvar.axis.length; vt++) {
                        var dt = this.fvar.axis[vt];
                        pt[dt.axisTag.trim()] = ut.coord[vt];
                      }
                      B[ut.name.en] = pt;
                    }
                    return B;
                  }
                }, {
                  key: "_variationProcessor",
                  get: function() {
                    if (!this.fvar)
                      return null;
                    var B = this.variationCoords;
                    return !B && !this.CFF2 ? null : (B || (B = this.fvar.axis.map(function(U) {
                      return U.defaultValue;
                    })), new td(this, B));
                  }
                }]), ft;
              }(), M(un.prototype, "bbox", [K], Object.getOwnPropertyDescriptor(un.prototype, "bbox"), un.prototype), M(un.prototype, "_cmapProcessor", [K], Object.getOwnPropertyDescriptor(un.prototype, "_cmapProcessor"), un.prototype), M(un.prototype, "characterSet", [K], Object.getOwnPropertyDescriptor(un.prototype, "characterSet"), un.prototype), M(un.prototype, "_layoutEngine", [K], Object.getOwnPropertyDescriptor(un.prototype, "_layoutEngine"), un.prototype), M(un.prototype, "variationAxes", [K], Object.getOwnPropertyDescriptor(un.prototype, "variationAxes"), un.prototype), M(un.prototype, "namedVariations", [K], Object.getOwnPropertyDescriptor(un.prototype, "namedVariations"), un.prototype), M(un.prototype, "_variationProcessor", [K], Object.getOwnPropertyDescriptor(un.prototype, "_variationProcessor"), un.prototype), un), cd = new e.Struct({
                tag: new e.String(4),
                offset: new e.Pointer(e.uint32, "void", {
                  type: "global"
                }),
                compLength: e.uint32,
                length: e.uint32,
                origChecksum: e.uint32
              }), ml = new e.Struct({
                tag: new e.String(4),
                // should be 'wOFF'
                flavor: e.uint32,
                length: e.uint32,
                numTables: e.uint16,
                reserved: new e.Reserved(e.uint16),
                totalSfntSize: e.uint32,
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                metaOffset: e.uint32,
                metaLength: e.uint32,
                metaOrigLength: e.uint32,
                privOffset: e.uint32,
                privLength: e.uint32,
                tables: new e.Array(cd, "numTables")
              });
              ml.process = function() {
                for (var ft = {}, X = i(this.tables), rt; !(rt = X()).done; ) {
                  var B = rt.value;
                  ft[B.tag] = B;
                }
                this.tables = ft;
              };
              var hd = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                X.probe = function(U) {
                  return U.toString("ascii", 0, 4) === "wOFF";
                };
                var rt = X.prototype;
                return rt._decodeDirectory = function() {
                  this.directory = ml.decode(this.stream, {
                    _startOffset: 0
                  });
                }, rt._getTableStream = function(U) {
                  var H = this.directory.tables[U];
                  if (H)
                    if (this.stream.pos = H.offset, H.compLength < H.length) {
                      this.stream.pos += 2;
                      var ut = s.alloc(H.length), pt = E(this.stream.readBuffer(H.compLength - 2), ut);
                      return new e.DecodeStream(pt);
                    } else
                      return this.stream;
                  return null;
                }, X;
              }($a), dd = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var rt = X.prototype;
                return rt._decode = function() {
                  return this._font._transformedGlyphs[this.id];
                }, rt._getCBox = function() {
                  return this.path.bbox;
                }, X;
              }(Go), yl = {
                decode: function(X) {
                  for (var rt = 0, B = [0, 1, 2, 3, 4], U = 0; U < B.length; U++) {
                    var H = X.readUInt8();
                    if (rt & 3758096384)
                      throw new Error("Overflow");
                    if (rt = rt << 7 | H & 127, !(H & 128))
                      return rt;
                  }
                  throw new Error("Bad base 128 number");
                }
              }, vd = ["cmap", "head", "hhea", "hmtx", "maxp", "name", "OS/2", "post", "cvt ", "fpgm", "glyf", "loca", "prep", "CFF ", "VORG", "EBDT", "EBLC", "gasp", "hdmx", "kern", "LTSH", "PCLT", "VDMX", "vhea", "vmtx", "BASE", "GDEF", "GPOS", "GSUB", "EBSC", "JSTF", "MATH", "CBDT", "CBLC", "COLR", "CPAL", "SVG ", "sbix", "acnt", "avar", "bdat", "bloc", "bsln", "cvar", "fdsc", "feat", "fmtx", "fvar", "gvar", "hsty", "just", "lcar", "mort", "morx", "opbd", "prop", "trak", "Zapf", "Silf", "Glat", "Gloc", "Feat", "Sill"], pd = new e.Struct({
                flags: e.uint8,
                customTag: new e.Optional(new e.String(4), function(ft) {
                  return (ft.flags & 63) === 63;
                }),
                tag: function(X) {
                  return X.customTag || vd[X.flags & 63];
                },
                // || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },
                length: yl,
                transformVersion: function(X) {
                  return X.flags >>> 6 & 3;
                },
                transformed: function(X) {
                  return X.tag === "glyf" || X.tag === "loca" ? X.transformVersion === 0 : X.transformVersion !== 0;
                },
                transformLength: new e.Optional(yl, function(ft) {
                  return ft.transformed;
                })
              }), xl = new e.Struct({
                tag: new e.String(4),
                // should be 'wOF2'
                flavor: e.uint32,
                length: e.uint32,
                numTables: e.uint16,
                reserved: new e.Reserved(e.uint16),
                totalSfntSize: e.uint32,
                totalCompressedSize: e.uint32,
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                metaOffset: e.uint32,
                metaLength: e.uint32,
                metaOrigLength: e.uint32,
                privOffset: e.uint32,
                privLength: e.uint32,
                tables: new e.Array(pd, "numTables")
              });
              xl.process = function() {
                for (var ft = {}, X = 0; X < this.tables.length; X++) {
                  var rt = this.tables[X];
                  ft[rt.tag] = rt;
                }
                return this.tables = ft;
              };
              var gd = /* @__PURE__ */ function(ft) {
                h(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                X.probe = function(U) {
                  return U.toString("ascii", 0, 4) === "wOF2";
                };
                var rt = X.prototype;
                return rt._decodeDirectory = function() {
                  this.directory = xl.decode(this.stream), this._dataPos = this.stream.pos;
                }, rt._decompress = function() {
                  if (!this._decompressed) {
                    this.stream.pos = this._dataPos;
                    var U = this.stream.readBuffer(this.directory.totalCompressedSize), H = 0;
                    for (var ut in this.directory.tables) {
                      var pt = this.directory.tables[ut];
                      pt.offset = H, H += pt.transformLength != null ? pt.transformLength : pt.length;
                    }
                    var vt = D(U, H);
                    if (!vt)
                      throw new Error("Error decoding compressed data in WOFF2");
                    this.stream = new e.DecodeStream(s.from(vt)), this._decompressed = !0;
                  }
                }, rt._decodeTable = function(U) {
                  return this._decompress(), ft.prototype._decodeTable.call(this, U);
                }, rt._getBaseGlyph = function(U, H) {
                  if (H === void 0 && (H = []), !this._glyphs[U])
                    return this.directory.tables.glyf && this.directory.tables.glyf.transformed ? (this._transformedGlyphs || this._transformGlyfTable(), this._glyphs[U] = new dd(U, H, this)) : ft.prototype._getBaseGlyph.call(this, U, H);
                }, rt._transformGlyfTable = function() {
                  this._decompress(), this.stream.pos = this.directory.tables.glyf.offset;
                  for (var U = md.decode(this.stream), H = [], ut = 0; ut < U.numGlyphs; ut++) {
                    var pt = {}, vt = U.nContours.readInt16BE();
                    if (pt.numberOfContours = vt, vt > 0) {
                      for (var dt = [], Bt = 0, Xt = 0; Xt < vt; Xt++) {
                        var fe = Ns(U.nPoints);
                        Bt += fe, dt.push(Bt);
                      }
                      pt.points = wd(U.flags, U.glyphs, Bt);
                      for (var $t = 0; $t < vt; $t++)
                        pt.points[dt[$t] - 1].endContour = !0;
                      Ns(U.glyphs);
                    } else if (vt < 0) {
                      var he = Go.prototype._decodeComposite.call({
                        _font: this
                      }, pt, U.composites);
                      he && Ns(U.glyphs);
                    }
                    H.push(pt);
                  }
                  this._transformedGlyphs = H;
                }, X;
              }($a), qa = /* @__PURE__ */ function() {
                function ft(rt) {
                  this.length = rt, this._buf = new e.Buffer(rt);
                }
                var X = ft.prototype;
                return X.decode = function(B, U) {
                  return new e.DecodeStream(this._buf.decode(B, U));
                }, ft;
              }(), md = new e.Struct({
                version: e.uint32,
                numGlyphs: e.uint16,
                indexFormat: e.uint16,
                nContourStreamSize: e.uint32,
                nPointsStreamSize: e.uint32,
                flagStreamSize: e.uint32,
                glyphStreamSize: e.uint32,
                compositeStreamSize: e.uint32,
                bboxStreamSize: e.uint32,
                instructionStreamSize: e.uint32,
                nContours: new qa("nContourStreamSize"),
                nPoints: new qa("nPointsStreamSize"),
                flags: new qa("flagStreamSize"),
                glyphs: new qa("glyphStreamSize"),
                composites: new qa("compositeStreamSize"),
                bboxes: new qa("bboxStreamSize"),
                instructions: new qa("instructionStreamSize")
              }), yd = 253, xd = 254, bd = 255, bl = 253;
              function Ns(ft) {
                var X = ft.readUInt8();
                return X === yd ? ft.readUInt16BE() : X === bd ? ft.readUInt8() + bl : X === xd ? ft.readUInt8() + bl * 2 : X;
              }
              function Ca(ft, X) {
                return ft & 1 ? X : -X;
              }
              function wd(ft, X, rt) {
                for (var B, U = B = 0, H = [], ut = 0; ut < rt; ut++) {
                  var pt = 0, vt = 0, dt = ft.readUInt8(), Bt = !(dt >> 7);
                  if (dt &= 127, dt < 10)
                    pt = 0, vt = Ca(dt, ((dt & 14) << 7) + X.readUInt8());
                  else if (dt < 20)
                    pt = Ca(dt, ((dt - 10 & 14) << 7) + X.readUInt8()), vt = 0;
                  else if (dt < 84) {
                    var Xt = dt - 20, fe = X.readUInt8();
                    pt = Ca(dt, 1 + (Xt & 48) + (fe >> 4)), vt = Ca(dt >> 1, 1 + ((Xt & 12) << 2) + (fe & 15));
                  } else if (dt < 120) {
                    var Xt = dt - 84;
                    pt = Ca(dt, 1 + (Xt / 12 << 8) + X.readUInt8()), vt = Ca(dt >> 1, 1 + (Xt % 12 >> 2 << 8) + X.readUInt8());
                  } else if (dt < 124) {
                    var fe = X.readUInt8(), $t = X.readUInt8();
                    pt = Ca(dt, (fe << 4) + ($t >> 4)), vt = Ca(dt >> 1, (($t & 15) << 8) + X.readUInt8());
                  } else
                    pt = Ca(dt, X.readUInt16BE()), vt = Ca(dt >> 1, X.readUInt16BE());
                  U += pt, B += vt, H.push(new Ra(Bt, !1, U, B));
                }
                return H;
              }
              var Sd = new e.VersionedStruct(e.uint32, {
                65536: {
                  numFonts: e.uint32,
                  offsets: new e.Array(e.uint32, "numFonts")
                },
                131072: {
                  numFonts: e.uint32,
                  offsets: new e.Array(e.uint32, "numFonts"),
                  dsigTag: e.uint32,
                  dsigLength: e.uint32,
                  dsigOffset: e.uint32
                }
              }), Cd = /* @__PURE__ */ function() {
                ft.probe = function(B) {
                  return B.toString("ascii", 0, 4) === "ttcf";
                };
                function ft(rt) {
                  if (this.stream = rt, rt.readString(4) !== "ttcf")
                    throw new Error("Not a TrueType collection");
                  this.header = Sd.decode(rt);
                }
                var X = ft.prototype;
                return X.getFont = function(B) {
                  for (var U = i(this.header.offsets), H; !(H = U()).done; ) {
                    var ut = H.value, pt = new e.DecodeStream(this.stream.buffer);
                    pt.pos = ut;
                    var vt = new $a(pt);
                    if (vt.postscriptName === B)
                      return vt;
                  }
                  return null;
                }, o(ft, [{
                  key: "fonts",
                  get: function() {
                    for (var B = [], U = i(this.header.offsets), H; !(H = U()).done; ) {
                      var ut = H.value, pt = new e.DecodeStream(this.stream.buffer);
                      pt.pos = ut, B.push(new $a(pt));
                    }
                    return B;
                  }
                }]), ft;
              }(), Ad = new e.String(e.uint8);
              new e.Struct({
                len: e.uint32,
                buf: new e.Buffer("len")
              });
              var Ed = new e.Struct({
                id: e.uint16,
                nameOffset: e.int16,
                attr: e.uint8,
                dataOffset: e.uint24,
                handle: e.uint32
              }), Td = new e.Struct({
                name: new e.String(4),
                maxTypeIndex: e.uint16,
                refList: new e.Pointer(e.uint16, new e.Array(Ed, function(ft) {
                  return ft.maxTypeIndex + 1;
                }), {
                  type: "parent"
                })
              }), Fd = new e.Struct({
                length: e.uint16,
                types: new e.Array(Td, function(ft) {
                  return ft.length + 1;
                })
              }), Id = new e.Struct({
                reserved: new e.Reserved(e.uint8, 24),
                typeList: new e.Pointer(e.uint16, Fd),
                nameListOffset: new e.Pointer(e.uint16, "void")
              }), wl = new e.Struct({
                dataOffset: e.uint32,
                map: new e.Pointer(e.uint32, Id),
                dataLength: e.uint32,
                mapLength: e.uint32
              }), Dd = /* @__PURE__ */ function() {
                ft.probe = function(B) {
                  var U = new e.DecodeStream(B);
                  try {
                    var H = wl.decode(U);
                  } catch (dt) {
                    return !1;
                  }
                  for (var ut = i(H.map.typeList.types), pt; !(pt = ut()).done; ) {
                    var vt = pt.value;
                    if (vt.name === "sfnt")
                      return !0;
                  }
                  return !1;
                };
                function ft(rt) {
                  this.stream = rt, this.header = wl.decode(this.stream);
                  for (var B = i(this.header.map.typeList.types), U; !(U = B()).done; ) {
                    for (var H = U.value, ut = i(H.refList), pt; !(pt = ut()).done; ) {
                      var vt = pt.value;
                      vt.nameOffset >= 0 ? (this.stream.pos = vt.nameOffset + this.header.map.nameListOffset, vt.name = Ad.decode(this.stream)) : vt.name = null;
                    }
                    H.name === "sfnt" && (this.sfnt = H);
                  }
                }
                var X = ft.prototype;
                return X.getFont = function(B) {
                  if (!this.sfnt)
                    return null;
                  for (var U = i(this.sfnt.refList), H; !(H = U()).done; ) {
                    var ut = H.value, pt = this.header.dataOffset + ut.dataOffset + 4, vt = new e.DecodeStream(this.stream.buffer.slice(pt)), dt = new $a(vt);
                    if (dt.postscriptName === B)
                      return dt;
                  }
                  return null;
                }, o(ft, [{
                  key: "fonts",
                  get: function() {
                    for (var B = [], U = i(this.sfnt.refList), H; !(H = U()).done; ) {
                      var ut = H.value, pt = this.header.dataOffset + ut.dataOffset + 4, vt = new e.DecodeStream(this.stream.buffer.slice(pt));
                      B.push(new $a(vt));
                    }
                    return B;
                  }
                }]), ft;
              }();
              R.registerFormat($a), R.registerFormat(hd), R.registerFormat(gd), R.registerFormat(Cd), R.registerFormat(Dd), l.exports = R;
            }
          ),
          /***/
          46982: (
            /***/
            function(l, c, t) {
              var s = t(67827), r = t(5155), a = t(71692), o = a.BK, f = a.CR, u = a.LF, h = a.NL, d = a.SG, i = a.WJ, p = a.SP, y = a.ZWJ, m = a.BA, e = a.HY, x = a.NS, S = a.AI, P = a.AL, O = a.CJ, T = a.HL, A = a.RI, E = a.SA, D = a.XX, b = t(54069), R = b.DI_BRK, L = b.IN_BRK, N = b.CI_BRK, M = b.CP_BRK;
              b.PR_BRK;
              var K = b.pairTable, ct = r.toByteArray("AAgOAAAAAACA3QAAAe0OEvHtnXuMXUUdx+d2d2/33r237V3YSoFC11r6IGgbRFBEfFF5KCVCMYKFaKn8AYqmwUeqECFabUGQipUiNCkgSRElUkKwJRWtwSpJrZpCI4E2NQqiBsFGwWL8Tu6Md3Z23o9zbund5JM5c+b1m9/85nnOuXtTHyFrwXpwL9gBngTPgj+Dv4H9Ae4B0N9PSAMcDqaB0X57urmIs8AQ72SEnQ4+ABaBxWAJWAquENJ9BtdfANeCleBGcCv4NvgeuBv8AGwCm8FWlpbzOPw7wC7wFNgDngMvgpfAq2DCACF10ACHgaPAzIF2+PFwT2Th1P8OuO8FZ4MPggvAxWAp+A6VHe5ysILFvx7u6oF2+Wvg3g7uYvlT+TbC/TH4CdgCtoGtfW3/E2An8++Gu5eleR7uP8B+8BoLf4LFH6i23Vp1rB5a1Q7TGMeCUYYY18RcxF0gxT8H5b3dIw8X3iPkdxauPwQWgyVgWbVT30/h+mrwZan8r8L/FcEWVsJ/E1grpKXcwdLdI9y/H9cPgUerbbun0PadCHcbjQd+D55mafcx9y9wXwKvCLJUJiLdRH09ef4xupqE/KeCY8Bx4M3gbeBdYCE4G3wYXASWgGXgSibTcuaugHs9WA3WgNvBBha2Ee4D4GFNPTYL9x/D9XaJXwnXvwW7wDPgTzQd2A9eAwODhDTBCJgOZoETwEngtEFmF3DPAouY/0K4Swb9dbaMpbkS7nKP9CsCyrpOSrNK8K9kNnYL7q0DGwbb/XnjoDv3gQfBZvBz8GvwO/AHdr3Pkv4F4fplj3J79OgRBx8HypajR48ePXr06NGjx8HFv7pABhX/HRx7HqKjr9Y+y6PXg7X2WRoPm1Kzpz8CcWaweLPhHt/fPq95C65PZnmfDnchOLfWPo/7OLgQ15ewdJ+E++na2PMhyudw72bDGc01CP8aWAm+Dr4BVoHV4IZeWC+sF9YL64UlD1sD1oE7au0z0zK5p1YuZde/R49uJnYdez/62EPgkVr4c7pHkfYXivTbcW8n2A32gOekOH+F/5/gAOivE9IArXpbrmlwR+vljz9bJrV552RCvgQ2GXgRzJ9CyGVTxofdLd17Gv6jW4RcAG5ote/9FO4B8NZhQs4DN4O9kOFY6OFSsB48C/qGCFkAyERCzh9q+0WuA2sqHX4m+Smv4t6RjXYelItwvQ7sBtOahHwU3NYcn+5Q4pFmRz89evTocajxStM898/FfLSgrg8/sT5+zcLDTkXY+6S0C+E/l907SXO+Rt/Lujrxe1kmztPU70JDvSmXILwJWS9TxLuC3VtuycPGCoV+VfD41yvKW6W4d1O9/S5YtZ+Qtbi+k/m/D/eHYBPzb4G7DfyS+enZ42/qnXPFp+pjZdgD/yX0XcV6+93DF+H+G5AhtcxPIs/BoY5cg0g7RRGXx/8Ewo8Y6vhp/Bnwz2F5zId7CgunZ6Dv1uTF0585pNY7P9NdhPCPDI1Ncyn8l4OrwHKwguVB12WrNPnpoPW5BWluA3eCuxRl3cfyfFCom43NBjkeQ9h2Tzlzs7PL5CmD3UwHew26+KMm7AVHu8hJaL1fTtj29L3E/wi6oPvWvkY7bAjucKOYtpymKWdGo/3e5KxGR8YTGvmfZ4XW46RGmnMIG6excs6Ae46nPuh7pGXbvm/fOB91vLhRXvkmlkKuK8BnFTb8xYL6TyqugbzXJZCZ9tlVrO9+C+53G5134A8G1htsjdbvXoT/KEBPmwq04dS2v6UxNnxbAXV5gul4Z6J+tMtBZtv4+Qzy2Ndof+fwPHP/zsbg/QFz02tIM4B9ZRO0mp379NxxBpgD5gv3T8H16eAMcCZYxMIWw/2YEG8pri9n/qvgfr45fm67VtjPzmbpVrJ7NzL3VrjvF/Jdh+sN3M/cB+A+LOV/bVNdX13b0G9KtmrSHCo8jvqfGjFu7WiWP37E8s2+yv8ZwVbYRgvMAm9kvMkhjStzAZbIBGIR+ngAy2NSZ9f0Hv2bIIShCckU5k5sb+OdGGQ0BKqSPzeE1WFCgWXK5dO2rDD/COn9zTvEUfXJ4zT3c9DP2oH2+ZoAtc9RBr/mY0SLdGyap+Nxh6W0In2Sn5C8/W00c/7dXn63we1DtAHud9WZbFNimmFL2iIoqt8eDPQHptERIkNoO8prFVvblm13OaG6oGM+n7P4/RrRz2HdTktotxHFdZW5tvm72UWEtm9dQF6n++hU1FmVFL++L2Nsdt3/1IVrWaacda4Se91t+pHDVXF5HFd9pG7X14NNyePr6wkfPTRI+H6qDPvLqRM5DR2beZ8W95Divq0IWXXyy/d18Yq09ZhyY/fyPjafY37yta8ybD9l3W15+crXYhQ5rsj2Wkb7iDadon1c+tKI4p5NR6HjPl/vqvLm92uK8lTjWNntkwJTu9hkiJmHVf3S1V5UOii6PWL1nVqOkP5QI/b2L2o+Kqr/h9i0bHNl9HudnKn0btKBbZzItQ7n47Drmutg6P+ubZK7/5va0PU8XZS56DP4Isci07gUo3/fscdlfMyp6xR6dy0vt/275K1bJ8qkHI99bdK3v4vt4Gtzs7sEWa5aZH4NDz3yfWG368bXLlQ6GZYQ7/UL1y3mryroZ+nkZwK28SD1vlt+7sNd+lcR3Ji1RKq1WcvhftFzousYxftH7Ngu2pZubcGfD8eMizp5Y/uha/m69NNK5siSOapkcq2lTOOGvE4y9aPclFl20eXTvwoZO374ymob90Jx3Zfk2h/I849q7VNE+WXsj+ZFlJ96Xcd1PyD4ue2J69/Q9V+u9uPrQC7/sHRftjE+n+eQP2Ztl5Kc+0TX/WND8vP2iF23xO7lfO3XtKfLhUm/PE6Ze78RD/3Fknr8i907yWsoUx+M3S+0SNjcHyu7qg6+aYvqF671TLXfTzU+2uaTnOOzbFc+7yHoZE59npIL175kay/ZxlKMH6a+NSJdl90XKXytpbMpTr/kP5zJfqxQDzneYWTstxh9pPPdYJ/CL8alTBag+fFvHFXtQMutWxBloOUMMHS6GWSyVYS4pvgmexXtVjc/TFWk9ZnnZLt3+caI10/8Xkb+hsYlfeh+QOyPNQN1S7hv2nqivEVSj/Ex+1lu73Ib1olbu4jpfN4ddbWbHN+/mcpWfUem+g7RhK4833SuepHbN0d5PjKF1kUll3xPFc5d+btTW9uqdCHXwaQ7kw252ENIW9vKTdEfTLox+VPYT6r8XXUWq7tYuXyZnEAG+ic+pwyVdRLDp8wcOp0kEZNXzLyqw3f+yEkjMI1sFznk8ulDKcoKlcFVlz75qPyu9+U8YuvnqnfXNDn6t6neNr3xfHj4JEU500ma8SSkjjodptBlTLurbI7rTxUnhcxF6d9W76KRbd6G3DdVNj2qia/qD3KY2O90elLJocpHJc90Q7kqVLqaLlGUjYj+Pg00jD8Xk+Wnf5UAN8c8HGrvXKYi+4irnsoo09ctU29Fll2UraSyaxnTOar8DFw+w60St+cRNlzfm9E9y9CNUTZM5/7iOTWR6imOgaKf/pn6hJw/f8dDdS6u0tNhDN1ZOlGUoauTrqyQNvCd21Mjy8N/T7AixBkQrm3tRKS0tngDwrWYzobuLFwXV3WfP5uR9TGTXdvc3BRVjq18l3rbwmaS8c9QByR4m3Sb/lPVX2V/M4naDkV79GFmJDad2NaLOdpBpxsbvs+/YubgVPO5bn3h+75BahnEOU/EVb+yTL7vQeTQp04GH/twfTYaCv9ehe8XXdZ0Ic+IY94Hcik/9h0Zk35c7MdWXo737HM/y6dllPENj9zeuvq7vMMYam88fZnfU7nOHznf6/AdP+W8ffXv2q6uelDlE1N/Wx+Prb/MG8ARBVJ0eb7rz5Tf6sl5l/G9nizDnJLJudZoaNqU/hbsCPH73dhu+03aWPiZhW9/yLHf8IGvT1OtzwZJ56yG/7YvX5sSdn+yof6x5av2ebxcV1dOZ9pDVgSXys/36uLzG1s5Nvj7pKo9axm2zsueylxeT1lWlQ4rkuuzx5f3+VXPPGIhgbLnKp/rtiJdcz2lOtMpAtMZV27E/kRttyaF83dFbf3NdYwXx6sZpH0uVkZ/VslmOrspa24V1+O56u3TdmXpQdaJy36wLPm4LZVR7jyp/CLOmULtzeWZoqstuLS9rhzTmqwIe3LVia0f2OSP3c/71Ec8V0itv6JtONbOXdb3Oc5YdcTaQVFzRWg7+z6HydnHy+qPoWO+j1yq8anofifWl7ri97chNiq/z6KyM37t8333sJR/SF/3bUvd+z+8nV3KNPWfIvt3mfNZijFAZT8xfXSekLfOtl3rHCuPzxrEdT7U9UvRjn3HKV5/XTuo2i3n+E3L5L+3yN+TkH+z07ZGDlkviuXLcX3aL7b+8m+duhCzJonp/yF9wabPItZhJmJ/N8pVfvn31Fok7PeiYsalFON4bPnyuOO7Ru2G+S52fqB5DAt55bJtXf2LtJdQParCVevHlqcufduvKJuQ5yxxvA/Zw6W0l5D3+nz7a4wdieXxd+FS2SjPN7Z9XXDRp62/dMv4GTM22uwx1/iTe7zTUSfjf1Mqld36EHv2xvPoprMnGfGvIiDHk+/x+EQTP7fMOjl928f0/855OTnaJ5XeQsevVHNojO5147ePXLH681mDqOBhqef/Ivp+7PMF1Vxs02kMITLK30zp/k+FbX1RdP/w1b2OMt9hiR1bKLHfZ+XWT+4+ahqzVM8iUug81r5tfTf3+JB6DPFpk1zllLUu9523cpPLdlR6zTVP+bShGFd1lh/Td33rVdT44WqTtjqktOtc87osc8x5hM9vyLrK49v+Pvmp7De0/vyvLJvk1C3+1OOyLyG/aSSud1L/TlLq/BoZ5M2xNj66IFRlT9fcT4GqDYosQ3df/G0zlR5U4UVzjAJZPpW8NlLI5lOejzwq+eS4rnWZbsjTx7ZUrq4sXdrQPmAa82Pb0HVuyZl3rrrZ7Nal/ULzdy0zBUXrMaQcU18v6ncmxd9eM/1fkdQ24Tvu+paZ2q5S6z13+anlTyVfrv4aWz/desfFfn3WEj727rNGKHJdlqsM1VompjzT+shXv7F75dj3J3K3qY7QM7DcZ2L/Aw=="), J = new s(ct), nt = function(Lt) {
                switch (Lt) {
                  case S:
                    return P;
                  case E:
                  case d:
                  case D:
                    return P;
                  case O:
                    return x;
                  default:
                    return Lt;
                }
              }, yt = function(Lt) {
                switch (Lt) {
                  case u:
                  case h:
                    return o;
                  case p:
                    return i;
                  default:
                    return Lt;
                }
              }, bt = function(Lt, zt) {
                zt === void 0 && (zt = !1), this.position = Lt, this.required = zt;
              }, Tt = /* @__PURE__ */ function() {
                function It(zt) {
                  this.string = zt, this.pos = 0, this.lastPos = 0, this.curClass = null, this.nextClass = null, this.LB8a = !1, this.LB21a = !1, this.LB30a = 0;
                }
                var Lt = It.prototype;
                return Lt.nextCodePoint = function() {
                  var Q = this.string.charCodeAt(this.pos++), gt = this.string.charCodeAt(this.pos);
                  return 55296 <= Q && Q <= 56319 && 56320 <= gt && gt <= 57343 ? (this.pos++, (Q - 55296) * 1024 + (gt - 56320) + 65536) : Q;
                }, Lt.nextCharClass = function() {
                  return nt(J.get(this.nextCodePoint()));
                }, Lt.getSimpleBreak = function() {
                  switch (this.nextClass) {
                    case p:
                      return !1;
                    case o:
                    case u:
                    case h:
                      return this.curClass = o, !1;
                    case f:
                      return this.curClass = f, !1;
                  }
                  return null;
                }, Lt.getPairTableBreak = function(Q) {
                  var gt = !1;
                  switch (K[this.curClass][this.nextClass]) {
                    case R:
                      gt = !0;
                      break;
                    case L:
                      gt = Q === p;
                      break;
                    case N:
                      if (gt = Q === p, !gt)
                        return gt = !1, gt;
                      break;
                    case M:
                      if (Q !== p)
                        return gt;
                      break;
                  }
                  return this.LB8a && (gt = !1), this.LB21a && (this.curClass === e || this.curClass === m) ? (gt = !1, this.LB21a = !1) : this.LB21a = this.curClass === T, this.curClass === A ? (this.LB30a++, this.LB30a == 2 && this.nextClass === A && (gt = !0, this.LB30a = 0)) : this.LB30a = 0, this.curClass = this.nextClass, gt;
                }, Lt.nextBreak = function() {
                  if (this.curClass == null) {
                    var Q = this.nextCharClass();
                    this.curClass = yt(Q), this.nextClass = Q, this.LB8a = Q === y, this.LB30a = 0;
                  }
                  for (; this.pos < this.string.length; ) {
                    this.lastPos = this.pos;
                    var gt = this.nextClass;
                    if (this.nextClass = this.nextCharClass(), this.curClass === o || this.curClass === f && this.nextClass !== u)
                      return this.curClass = yt(nt(this.nextClass)), new bt(this.lastPos, !0);
                    var ht = this.getSimpleBreak();
                    if (ht === null && (ht = this.getPairTableBreak(gt)), this.LB8a = this.nextClass === y, ht)
                      return new bt(this.lastPos);
                  }
                  return this.lastPos < this.string.length ? (this.lastPos = this.string.length, new bt(this.string.length)) : null;
                }, It;
              }();
              l.exports = Tt;
            }
          ),
          /***/
          42480: (
            /***/
            function() {
            }
          ),
          /***/
          25832: (
            /***/
            function() {
            }
          ),
          /***/
          69862: (
            /***/
            function() {
            }
          ),
          /***/
          40964: (
            /***/
            function() {
            }
          ),
          /***/
          14343: (
            /***/
            function(l, c, t) {
              var s = [
                "BigInt64Array",
                "BigUint64Array",
                "Float32Array",
                "Float64Array",
                "Int16Array",
                "Int32Array",
                "Int8Array",
                "Uint16Array",
                "Uint32Array",
                "Uint8Array",
                "Uint8ClampedArray"
              ], r = typeof globalThis == "undefined" ? t.g : globalThis;
              l.exports = function() {
                for (var o = [], f = 0; f < s.length; f++)
                  typeof r[s[f]] == "function" && (o[o.length] = s[f]);
                return o;
              };
            }
          ),
          /***/
          51348: (
            /***/
            function(l, c, t) {
              var s = t(5155), r = t(67827);
              function a(ht) {
                return ht && ht.__esModule ? ht.default : ht;
              }
              function o(ht) {
                Object.defineProperty(ht, "__esModule", { value: !0, configurable: !0 });
              }
              function f(ht, st, xt, G) {
                Object.defineProperty(ht, st, { get: xt, set: G, enumerable: !0, configurable: !0 });
              }
              o(l.exports), f(l.exports, "getCategory", () => L), f(l.exports, "getCombiningClass", () => N), f(l.exports, "getScript", () => M), f(l.exports, "getEastAsianWidth", () => K), f(l.exports, "getNumericValue", () => ct), f(l.exports, "isAlphabetic", () => J), f(l.exports, "isDigit", () => nt), f(l.exports, "isPunctuation", () => yt), f(l.exports, "isLowerCase", () => bt), f(l.exports, "isUpperCase", () => Tt), f(l.exports, "isTitleCase", () => It), f(l.exports, "isWhiteSpace", () => Lt), f(l.exports, "isBaseForm", () => zt), f(l.exports, "isMark", () => Q), f(l.exports, "default", () => gt);
              var u = {};
              u = JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');
              const h = new (a(r))(a(s).toByteArray("")), d = Math.log2 || ((ht) => Math.log(ht) / Math.LN2), i = (ht) => d(ht) + 1 | 0, p = i((/* @__PURE__ */ a(u)).categories.length - 1), y = i((/* @__PURE__ */ a(u)).combiningClasses.length - 1), m = i((/* @__PURE__ */ a(u)).scripts.length - 1), e = i((/* @__PURE__ */ a(u)).eaw.length - 1), x = 10, S = y + m + e + x, P = m + e + x, O = e + x, T = x, A = (1 << p) - 1, E = (1 << y) - 1, D = (1 << m) - 1, b = (1 << e) - 1, R = (1 << x) - 1;
              function L(ht) {
                const st = h.get(ht);
                return (/* @__PURE__ */ a(u)).categories[st >> S & A];
              }
              function N(ht) {
                const st = h.get(ht);
                return (/* @__PURE__ */ a(u)).combiningClasses[st >> P & E];
              }
              function M(ht) {
                const st = h.get(ht);
                return (/* @__PURE__ */ a(u)).scripts[st >> O & D];
              }
              function K(ht) {
                const st = h.get(ht);
                return (/* @__PURE__ */ a(u)).eaw[st >> T & b];
              }
              function ct(ht) {
                let st = h.get(ht), xt = st & R;
                if (xt === 0)
                  return null;
                if (xt <= 50)
                  return xt - 1;
                if (xt < 480) {
                  const G = (xt >> 4) - 12, Ft = (xt & 15) + 1;
                  return G / Ft;
                } else if (xt < 768) {
                  st = (xt >> 5) - 14;
                  let G = (xt & 31) + 2;
                  for (; G > 0; )
                    st *= 10, G--;
                  return st;
                } else {
                  st = (xt >> 2) - 191;
                  let G = (xt & 3) + 1;
                  for (; G > 0; )
                    st *= 60, G--;
                  return st;
                }
              }
              function J(ht) {
                const st = L(ht);
                return st === "Lu" || st === "Ll" || st === "Lt" || st === "Lm" || st === "Lo" || st === "Nl";
              }
              function nt(ht) {
                return L(ht) === "Nd";
              }
              function yt(ht) {
                const st = L(ht);
                return st === "Pc" || st === "Pd" || st === "Pe" || st === "Pf" || st === "Pi" || st === "Po" || st === "Ps";
              }
              function bt(ht) {
                return L(ht) === "Ll";
              }
              function Tt(ht) {
                return L(ht) === "Lu";
              }
              function It(ht) {
                return L(ht) === "Lt";
              }
              function Lt(ht) {
                const st = L(ht);
                return st === "Zs" || st === "Zl" || st === "Zp";
              }
              function zt(ht) {
                const st = L(ht);
                return st === "Nd" || st === "No" || st === "Nl" || st === "Lu" || st === "Ll" || st === "Lt" || st === "Lm" || st === "Lo" || st === "Me" || st === "Mc";
              }
              function Q(ht) {
                const st = L(ht);
                return st === "Mn" || st === "Me" || st === "Mc";
              }
              var gt = {
                getCategory: L,
                getCombiningClass: N,
                getScript: M,
                getEastAsianWidth: K,
                getNumericValue: ct,
                isAlphabetic: J,
                isDigit: nt,
                isPunctuation: yt,
                isLowerCase: bt,
                isUpperCase: Tt,
                isTitleCase: It,
                isWhiteSpace: Lt,
                isBaseForm: zt,
                isMark: Q
              };
            }
          ),
          /***/
          63480: (
            /***/
            function(l) {
              l.exports = JSON.parse('[["8740","ä°ä°²ää¦ä¸ð§§äµ·ä³ð§²±ä³¢ð§³ã®ä¶ää±ä±ð¤¿ð£ð§ð¦ºð§ä±ðªäää²ð§±¬ä´äª¤ä¡ð¦¬£ç¥ð¥©ð¡©£ð£¸ð£½¡æå»"],["8767","ç¶å¤ð¨®¹ã·´é´ð§¯¯å¯ð¡µåª¤ã¥ð©º°å«å®·å³¼æ®èð©¥ç¡çã¡µð¡µð£ð¦¡ã»¬"],["87a1","ð¥£ã«µç«¼é¾ð¤¡ð¨¤ð£ªð ªð£äèé¾é¯ä¤°èå¢ééç§ç¨²æ æ¨©è¢çç¯æç¨¬åéã¦çð¥¶¹çé¿å³ä¤¯åä±ð£å ç©²ð§­¥è®ä®ð¦ºäð¥¶ç®®ð¢¼é¿ð¢ð¢ð¢é¿èð£»ä´é¿ä¡ðª·¿æç®é¿"],["8840","ã",4,"ð ãð ð ããð ð¡¿¨ãð ããããð ããÄÃÇÃÄÃÄÃÅÃÇÃà¿¿ÃÌáº¾à¿¿ÃÌá»ÃÄÃ¡ÇÃ ÉÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇ"],["88a1","ÇÃ¼à¿¿ÃªÌáº¿à¿¿ÃªÌá»ÃªÉ¡ââ"],["8940","ðª©ð¡"],["8943","æ"],["8946","ä¸½æ»éµé"],["894c","ð§µæä¼ä¼¨ä¾¨åå´åå¤å¡å¨å»åååå¢å£°å¤å¤å¤²å¤´å­¦å®å®å²åºæ»ææ¾æ æ¡¥æµç¼çµçº¤çº¬çººç»ç»ç»ç¼ç¼·èºèè¯è§è®¾è¯¢è½¦è½§è½®"],["89a1","çç³¼ç·æ¥ç«å§"],["89ab","éç¢¸éè¼"],["89b0","è´è¶ð §§"],["89b5","èé»ä³é·é¸ä°¾ð©·¶ð§é¸ðª³ã"],["89c1","æºè¾ç"],["89c5","ä¤é©¬éªé¾ç¦ð¨¬ð¡·ð ð¢«¦ä¸¤äºäºäºäº¿ä»«ä¼·ãä¾½ã¹ååã½ãã¥åå¤åå¼åäºå¹åå§ãå©ãå°ãåå£ã­ã²ãåå£å´å¹åå¯åå£å¨ãå¿ã¥ã¿åã"],["8a40","ð§¶å¥"],["8a43","ð ±ð ´ð¥«åð¢³ã§¬ð è¹ð¤¶¸ð©¥äð¨¾çºð¢°¸ã¨´äð¨ð¦§²ð¤·ªæð µ¼ð ¾´ð ³ð¡´æè¹¾ð ºð °ð ½¤ð¢²©ð¨ð¤"],["8a64","ð µð©©ð¨©ä´ð¤º§ð¢³éª²ã©§ð©´ã¿­ãð¥ð©ð§£ð¢µéµ®é "],["8a76","äð¦¥æ´å£ð¢µð¢¯ð¡·ã§»ð¡¯"],["8aa1","ð¦ð¦ð§¦ æªð¥ð ±è¹¨ð¢¡ð¨­ð ±"],["8aac","ä ð ©ã¿ºå¡³ð¢¶"],["8ab2","ð¤ð ¼ð¦ð ½ð ¶å¹ä»äº"],["8abb","äª´ð¢©¦ð¡èªé£µð ¶æ¹ã§¾ð¢µè·å¡æ¼ã¹"],["8ac9","ðªð ¸ð¢«ð¢³"],["8ace","ð¡ð£§ã¦ã¨ð¨ã¸ð¥¹ð¢åð ¼±ð¢²²ð© ã¼æ°½ð¤¸»"],["8adf","ð§´ð¢ºð¢ðªð¨³ð ¹ºð °´ð¦ ç¾ð¡ð¢ ð¢¤¹ã»ð¥£ð ºð ¾ð ºªã¾ð ¼°ð µð¡ð ¹"],["8af6","ð º«ð ®©ð µð¡ð¡½ã¿¹ð¢æ²ð ¾­"],["8b40","ð£´ð§¹ð¢¯ð µ¾ð µ¿ð¢±ð¢±ã¨ð ºð¡ð ¼®ðª²ð¦­ð¨³ð¨¶ð¨³éªåèå¹"],["8b55","ð©»é°¦éª¶ð§ð¢·®çè­è¬å°ð¦²è´ãåð¨½é¶ð »ºð ¸ð ¹·ð »»ãð¤·«ãð ³å¯ð¢µð¡ð ¸ð ¹¸ð¡¸ð¡ð¨ð¡ð ¹¹ð¤¹ð¢¶¤å©ð¡ð¡ð¡µð¡¶åð ¸"],["8ba1","ð§ð¨ð ¾µð ¹»ð¥¾ãð ¾¶ð¡ð¥ðª½ð¤§ð¡ ºð¤·ð¨¼å¢å¨ãð¥½ç®²å­¨ä ä¬¬é¼§ä§§é°é®ð¥­´ð£½å»ã²åä¸¨å¤ð¡¯ð¯¡¸éð ä¹äº»ã¾å°£å½å¿ã£ºææµæ­ºæ°µæ°ºç¬ç«ä¸¬ç­ð¤£©ç½ç¤»ç³¹ç½ð¦ªã"],["8bde","ð¦èèð¦ð¦¥åè¡¤è§ð§¢²è® è´éé¸é¿é¨ð¨¸é¦é¡µé£é£é¥£ð© é±¼é¸é»æ­¯ï¤ä¸·ð éæ·é¢"],["8c40","å»æ·¾ð©±³é¾¦ã·è¢ð¤ç·å³µä¬ ð¥ãð¥´°æ¢ð¨¨²è¾§é¶çæçºð£ðªã²ð¡¦ä¬ç£¤çå®ð¨äæ©£ðªºä£èð ©¯ç¨ªð©¥ð¨«ªéçå¤ð¢¾é´çð¨§£é¾§çäº£ä¿°å¼ä¸¯ä¼é¾¨å´ç¶å¢å£ð¡¶¶åºåºå¿ð¢æ"],["8ca1","ð£¹æ¤æ©ð£±£æ³¿"],["8ca7","çð¤çã»ð¤¨å¬ç¹è®ð¥²¤ð¥çªç¯¬ç³ç¹¬è¸èé¾©è¢é¾ªèº¹é¾«è¿èé§ é¡é¾¬ð¨¶¹ð¡¿ä±ä¢å¨"],["8cc9","é¡¨æ«ä¶å½"],["8cce","èð¤¥»è¿ð§ä²ð¦µ´åµ»ð¦¬ð¦¾¾é¾­é¾®å®é¾¯æ§ç¹æ¹ç§ã¶äð£ð¢ää¶"],["8ce6","å³ð£¬è«¹å±¸ã´ð£åµ¸é¾²çäð¤¬ð¡¸£ä±·ã¥¸ãð ¤ð¦±è«ä¾´ð ¹å¦¿è¬é¡ð©£ºå¼»"],["8d40","ð ®"],["8d42","ð¢ð¨¥­ää»ð©¹ã¼é¾³ðªµä¸ãä·ð¦±ä¼ð¨²ð§¿ä­ã£ð¥ä¡ää¶ä±»äµ¶äªã¿ð¤¬ã¡ää½ä­å´¾åµåµã·¼ã å¶¤å¶¹ã  ã ¸å¹åº½å¼¥å¾ã¤ã¤ã¤¿ã¥ææ½å³¥ã¦æ·æ¹æã¦¸æ¬ææ¥æã§¸å±"],["8da1","ã¨æ¢æ»ææã©æå´å¡é¾ãªæãª½æ¿æã«²æã¬¢æã­æ¤æ ã­æ¡æ¢ã­²ã­±ã­»æ¤æ¥çæ¥¤æ¦æ¦ã®¼æ§ã¯æ©¥æ©´æ©±æªã¯¬æªã¯²æª«æªµæ«æ«¶æ®æ¯æ¯ªæ±µæ²ªã³æ´æ´æ´¦æ¶ã³¯æ¶¤æ¶±æ¸æ¸æ¸©æºð¨§æº»æ»¢æ»é½¿æ»¨æ»©æ¼¤æ¼´ãµð£½æ¾æ¾¾ãµªãµµç·å²ã¶ç¬ã¶ççç¯ç¿çð ¥äã±ð »"],["8e40","ð£»å¾ð¦»ç¾ð¥ ãæ¦¢ð¨¯©å­´ç©ð¥£¡ð©ç©¥ç©½ð¥¦¬çª»çª°ç«ç«çð¦äç«ç«ç«ªä¯å²ð¥°ç¬ç­ç¬©ð¥ð¥³¾ç®¢ç­¯èð¥®´ð¦±¿ç¯è¡ç®ç®¸ð¥´ ã¶­ð¥±¥èç¯ºç°ç°µð¥³ç±ç²ð¤¢ç²¦æ½ð¤¸ç³ç³ç³¦ç±´ç³³ç³µç³"],["8ea1","ç¹§äð¦¹çµð¦»çç¶ç¶«çµç¶³ç·ð¤ð¦©ç·¤ã´ç·µð¡¹ç·¥ð¨­ç¸ð¦¡ð¦ç¹®çºä«é¬ç¸§ç½ç½ç½ç¤¶ð¦é§¡ç¾ð¦ç¾£ð¡¡ð ¨äð£¦äð¨ºç¿ºð¦èèèè¨è¯ðªð¦³è»è¼è¡ð¢ä¦ð¦¦ð£·£ð¦¨æ¥è§ð¨©èèå¢°ð¢¶æ±¿ð¦ð¤¾¸æ§ð¡èð¡¡æ©ð¤©¥ð¤ªäºè©ð ¬ð¦©ð£µ¾ä¿¹ð¡½è¢è¢ð¦¬ð¤¦§ð£°ð¡³ð£·¸èªæ¤ð¯¦ä"],["8f40","èèèð ¸ð¡´ãð£½ð£è»è¢èð£ºð¦¶£ð¦¬ð¦®ð£ã¶¿èå¬èäð¦¶¥è¬èèã¾ð¦»æ©èãð¦¹ð¢»¯èð¥¯¤è±ã·ä¤æª§èð£²µç¥è¨ð¦®ð¦¹·ð¦¹èèèä èè¤ð¥²äð¥³äè´å«²ð¦ºä§è³äæ¿è"],["8fa1","ð¨¥ð¨»èð§èð¡ð§ð¯¦²äªè¨ãð¡¢¢å·ð§è¾è±ðª¸è®ð¢°§è±èè å¡è¬æ¡äè¡è¡ð§ ð£¶¹ð§¤è¡è¢äè¢´è¢µæè£ç·ð§è¦è¦è¦¦è¦©è¦§è¦¼ð¨¨¥è§§ð§¤¤ð§ª½èªçé¾èªð§©ç«©ð§¬ºð£¾äð§¬¸ç¼è¬è¬ð¥°ð¥¥è¬¿è­è­èª©ð¤©ºè®è®èª¯ð¡äè¡è²ð§µð§¶ð¯§ã¥ð§µè³ð§¶ð§¶½è´è´ð¡¤è³çè´ð¤³ã»èµ·"],["9040","è¶©ð¨ð¡ð¤¦ã­¼ð¨¼ð§ç«§èº­èº¶è»éè¼è¼­ð¨¥ð¨è¾¥éðªð ©è¾³ä¤ªð¨§ð¨½ð£¶»å»¸ð£¢è¿¹ðªð¨¼ð¨ð¢¥ã¦ð¦»é·ð¨¼ð§ª¾é¡ð¨¬ð¨é¨ð¨éð¨¦é®é½é§ã«°é©éç²¬ð¨¤³ð¡ºéæ²éé¢ð¥¹é¹ð¨«ð£²ð¨¬ð¥"],["90a1","ð ´±é¬é«ð¨«¡ð¨¯«çå«ð¨«¢ð¨«¥ä¥¥éð¨¯¬ð¨°¹ð¨¯¿é³éèº¼éé¦é¦é æ¿¶ä¹ð¢ºð¨ð¡¼ð£¸®ä§æ°é»éä¬é£ð¦»æé¶ç£µð¨« é½åä¦¡ð¦²¸ð ´ð¦ð©¯ð©¥ð¤«ð¡¤ð£é±èé¶ä¨ä½äð¤«©çµå­ééð©éå­ð©«éé¥åð£·ð£¼ééé±é¾ééé ð¥¬é®çð©³é¿éµð©ð§¥ºä«é ´é ³é¡é¡¦ã¬ð§µãµð °ð¤"],["9140","ð¥é£é¢·é£é£ä«¿ð¦´§ð¡å°é£¡é£¦é£¬é¸é¤¹ð¤¨©ä­²ð©¡ð©¤é§µé¨é¨»é¨é©ð¥¥ãð©±ð©¯é« é«¢ð©¬é«´ä°é¬é¬­ð¨å´é¬´ð¦¦¨ã£ð£½é­é­ð©´¾å©ð¡¡£é®ð¤é°é¯¿é°ð©¹¨é·ð©¾·ðªðª«ðª¡ðª£ðªéµ¾é¶ðª´é¸æ¢"],["91a1","é·ð¢ðªðª ð¡¤»ðª³é´¹ðª¹ðª´éºéºéºéº¢ä´´éºªéº¯ð¤¤é»ã­ ã§¥ã´ä¼²ã¾ð¨°«é¼é¼ä®é¤ð¦¶¢é¼é¼é¼¹ååé½é¦¸ð©é²è¿é½¢é½©ç«é¾çä®¾ð¤¥µð¤¦»ç·ð¤§¸ð¤ð¤©çð¨¯ð¡£ºç¦ð¨¥¾ð¨¸¶é©é³ð¨©é¬ééð¨¥¬ð¤¹çã»«ç²ç©çð¤³ð¤¸ç¾ð¡¯ç£ð¡¢¾ð£ã»ð¡¢ð¥¯ð¡¸ã¢ð¡»ð¡ ¹ã¡ð¡´ð¡£ð¥½ã£ð¡åð¤¨¥ð¡¾ð¡¨"],["9240","ð¡ð¡¶èð£¦èèð¤¦ð§¥ð£¸±ð¥ð£»»ð§ä´ð£®ð©¦ð¦¼¦æ¹ã³ã°ã·§å¡¬ð¡¤¢æ äð£¿ð¤¡ð¤ð¤ð¦°¡ååð¦±åð ¿ð ®¨ð ¸éð¨¬éä»¸å«ã ð¤¶äº¼ð ¥ð ¿ä½ä¾ð¥å©¨ð «ð ã¦ð ð ãµä¼©ð ð¨º³ð µè«ð äº"],["92a1","ååä¾¢ä¼ð¤¨ð£ºä½å®å¬åä¿ä¿¥åå¼ååååæ¹¶ð£ð£¸¹ð£º¿æµ²ð¡¢ð£ºå¨åð  äð £ð ð èµºð¨ªð åå¤ð ¡³å¡é®äºçð¤ð ° ð¤¦¬ð¡¤æ§ð ¸ç¹ã»ççççä®ð¤ª¼ð¤åãçð¤å´ð åð ¯åéé´é¦ååå¿ã¾å£åªð¨©ð¡ºð¡¯ð¡å¨¬å¦¸éå©¾å«å¨ð¥¥ð¡§³ð¡¡¡ð¤ãµæ´çå¨¡ð¥º"],["9340","åªð¨¯ð é çð¡çä¥²éð¨§»é½ã å°å²å¹å¹ð¡¦ð¡¥¼ð£«®å»å­ð¡¤ð¡¤ãð¡¢ ãð¡¾ãèªð¨©ð¡¶ºð£²ð¨¦¨å¼å¼ð¡¤§ð¡«å©«ð¡»å­èð§½è¡ æ¾ð¢¡ ð¢«å¿ãº¸ð¢¯ð¢¾ð©ð¦½³æð ¾ð ð¢æææµð¢²ð¢´ð¤ð©"],["93a1","æ±ð¤¥ð¢­ªã¨©ð¢¬¢ð£ð©£ªð¢¹¸æ·ðªæ¶æ±æð¤§£ð¢µ§æ¤ð¢²¡æ»æ«æ¥²ã¯´ð£ð£­ð¤¦ð£«åð£ ð¡£ð©¿æð£ð£³ã« äð¥ð¨¬¢ð¥ð¡¼ð¥ð¥¥ç£®ð£ð¡ ªð£´ã¤ð£ð£ð¤æð¦´¤æ«ä®æ°ð§¡°ð¡·«æ£ð£ð£¡æð¥¡²ã£ð£ ºð£¼ã®ð£¢ð£¾çã®æð¤ªæ¢¶æ ã¯æª¾ã¡£ð£ð¤æ¨³æ©æ«æ¬ð¡¤ææ¢æ©ã¯æ©ºæ­ð£¿ð£²é é²ð¨¯ªð¨«"],["9440","éð¨ð¨§é§æ¶¥æ¼ð¤§¬æµ§ð£½¿ã¶æ¸ð¤¼å¨½æ¸å¡æ´¤ç¡ç»ð¤ð¤¶ç±çççð¤ð¤¥å¹ð¤ª¤ð «çºð£»¸ð£ð¤©ð¤¤ð¥¿¡ã¼ãº±ð¤«ð¨°£ð£¼µæ§ã»³çç¼éç·äð¦·ªäçã½£ð¤³ð¤´ã½çç³ðªã¬ç¨ð¨«ð¤¦«ð¤¦ã«»"],["94a1","ã·ð¤©ã»¿ð¤§ð¤£³éºå²éð¨«£ð¡¡¤åð¥¡ð¥§ç¸ð£²ççç»ð¤ð£ã©ð¤£°ç¸çãº¿ð¤ªºð¤«äð¤ªð¦®éð¥ç ç¢ç¢ç£çç¥ð§ð¥£äç¦èç¦¥æ¨­ð£»ºç¨ºç§´ä®ð¡¦ä²éµç§±ð µð¤¦ð ð£¶ºð¡®ãå«ã°ãªð ð °ç«¢å©ð¢µð¥ª¯ð¥ªå¨ð ç£°å¨ªð¥¯ç«¾ä¹ç±ç±­äð¥®³ð¥º¼ð¥º¦ç³ð¤§¹ð¡°ç²ç±¼ç²®æª²ç·ç¸ç·ç½ð¦¡"],["9540","ð¦ð§­ç¶ð¥ºäªð¦­µð ¤æð ð£åð¦ð¦¸ð¤¥¢ç¿ç¬§ð  ¬ð¥«©ð¥µç¬ð¥¸é§¦èé©£æ¨ð£¿ã§¢ð¤§·ð¦­é¨ð¦ èð§§ð¦³äªè·äèèèð¦´é£ð¦©è¢è¥ð¦©èð¦¶§èð§åªä¿ð¡¡å¬«ð¡¢¡å«¤ð¡£è ð¯¦¼ð£¶è ­ð§¢å¨"],["95a1","è¡®ä½è¢è¢¿è£¦è¥¥è¥ð¥è¥ð§ð§ð¨¯µð¨¯ð¨®ð¨§¹ãº­è£äµäã²è¨½è¨ð©å½é«ð¤æç©çð¡¡éµ­è²è³©ð§·å¦çå§°ä®ãè¸ªèº§ð¤°è¼°è½ä´æ±æ¾»ð¢¡ä¢æ½¹æºð¡é¯©ãµð¤¤¯é»éå±ä¤é»éð¨©ä¢ð¨«¼é§ð¨°ð¨°»è¥è¨«éé§ééð¨´´çã»ð¤£¿ð¤©ð¤ªã»§ð£¥éð¨»§ð¨¹¦ð¨¹¥ã»ð¤§­ð¤©¸ð£¿®çç«ã»¼éð©°"],["9640","æ¡ä¨ð©ð¥éé¨ð¨¦ð¨°¦ð¨¬¯ð¦¾éºå¬è­©ä¤¼ç¹ð¤éé±é¤¸ð ¼¦å·ð¨¯ð¤ª²é ð©é¶ð©é¥äð¨­ð¤©§ð¨­¤é£ð¨©ã¼éªä¤¥èé¤»é¥ð§¬ã·½é¦ä­¯é¦ªé©ð¨­¥ð¥£æªé¨¡å«¾é¨¯ð©£±ä®ð©¥é¦¼ä®½ä®é½å¡²ð¡å ¢ð¤¦¸"],["96a1","ð¡¨ç¡ð¢ð£¶¸æ£ãµ½éã¤§æð¢ð¢¥«æé±é±é±»é°µé°é­¿é¯ð©¸­é®ðªµðª¾é´¡ä²®ð¤é¸ä²°é´ðª´ðª­ðª³ð©¤¯é¶¥è½ð¦¸ð¦¿ð¦®è¼ä³ð¦¶¤ð¦ºð¦·°è è®ð¦¸ð£ð¦¤ç§¢ð£ð£ä¤­ð¤§ãµ¢éé¾éð ¿ç¢¹é·éä¿¤ãé¤ð¥ç ½ç¡ç¢¶ç¡ð¡ð£ð¤¥ãä½²æ¿æ¿ççåð¤µå»å£³åé´åç´ã¯ð¤¬ç«ð¦±ð¤¾å¬¨ð¡µð¨©"],["9740","æå«å¨ä¼ð¤ã¬ä­»ð¨§¼é»é¸ð¡£ð ¼è²ð¦³ð¡ð¤ºð¢°¦ð¤å¦ð£¶·ð¦ç¶¨ð¦ð¦¤ð¤¦¹ð¤¦ð¨§ºé¥ç¢ã»©ç´ð¨­£ð¡¢ã»¡ð¤ª³æ«ç³ç»ã»ð¤¨¾ð¤ªð¡ð¤©¦ð §ð¡¤ð¤§¥çð¤¤ç¥ð¤¥¶éç¦éð ¾é±ð¨«ð¨¨éð¨¯§ð¥ä¤µð¨ªç«"],["97a1","ð¤¥ð ³¿å¤ð ð ¯«ð ²¸åç§ð¡ºç·¾ð¡ð¤©ð¡¡ä®éãð¨«ð¤¦­å¦°ð¡¢¿ð¡¢ð§åª¡ã¢ð£µã°éå©¹ð¨ªð¡¡¢é´ã³ð ª´äªã¦å´ãµ©ãµð¡çµä»ð¨æ¸ð©¤ä«æµð§¹ç§æ²¯ã³ð£¿­ð£¸­æ¸æ¼ãµ¯ð µçã¼ãäã»ä¡±å§é®ä¤¾è½ð¨°ð¦¯å åãð¡ç¾ð¤¢ð¤©±ð¢¿£ð¡°ð¢½æ¢¹æ¥§ð¡ð£¥ð§¯´ð£ð¨ªð£ð£ºð¤²æ¨ð£­ð¦²·è¾ää"],["9840","ð¦´¦ð¦µð¦²ð¦¿æ¼ð§è½ð¡ºè­ð¦²ð§ð¡å¦åªð¡³å©¡å©±ð¡¤ð¤¼ã­å§¯ð¡¼ãçéæð¤¥å©®å¨«ð¤æ¨«ð£»¹ð§¶ð¤ð¤çð¤ð¨§¡ä¾°ð¦´¨å³ð¤ð§¹ð¤½æ¨ð¤ð¡ç¦ç³ð¤©ã¶¥æ³ð¯ ¥ð¤©ç¹¥å§«å´¯ã·³å½ð¤©ð¡ç¶¤è¦"],["98a1","åð£«ºð£ð å¾ð £ð ã¿¥ð¡¾ðª¶çð©åµ°çç³ð¨©ð© ä¿ç¿§ççð§«´ç¸ç¹ð¥¶ççãº©ð§¬é¬çµð¤£²ç¡è¶ã»çã»æ²¢å½çççã»¢ã»°ã»´ã»ºçã¼ã½çç­ç²çã½¼ççã¿çã¿ç´ã¿çºð¤½çå£è¦å¡©äçä¹æ¡äãçäªä¯å±ç¾çå£²ç ç¹ç ä¨ç ¹ç¡ç¡ç¡¦èð¥µç¤³æ ç¤²ä"],["9940","äç¦ç¦è¾»ç¨è¾¼ä§çªä²çª¼è¹äç«ç«ää¸¡ç­¢ç­¬ç­»ç°ç°ä äºç±»ç²äç²¸äç³­è¾çð ³ç·ç·ç·ç·½ç¾®ç¾´çäè è¥ç¬¹è®è±èã·å´ç è·è©ä­èçªèèç èäã¬¹èèè"],["99a1","äå ºè¼èä¥èä­è¥å¯èè¤èäè¦è¶èèè¿ä°èé©æ¦èçµè¤æ£èäè¾è¡è¸èè¸èä»è¯è°è ä·è²èè²è¯éèääè¢®è£¿è¤¤è¥è¦ð§¥§è¨©è¨¸èªèª´è±è³è³²è´äå¡è·ä­ä»®è¸ºååè¹±åµèº°ä ·è»è»¢è»¤è»­è»²è¾·è¿è¿è¿é³é§ä¢­é£ éä¤é¨éé«é±é®é¿"],["9a40","é£é«é³é´é½ééé­ä¥ä¥éº¿éåéé­é¾ä¥ªéé¹é­é¢ä¦§é´é³ä§¥æ ä¨¤éä¨µé²éåä«¤æ¨é¢¹ä¬é£±å¡é¤é¤å´é¤é¤·é¥é¥é¥¢ä­°é§ä®é¨¼é¬çªé­©é®é¯é¯±é¯´ä±­é° ã¯ð¡¯éµé°º"],["9aa1","é»¾åé¶é¶½é·é·¼é¶è¾¶é¹»éº¬éº±éº½é»éé»¢é»±é»¸ç«é½ð ð ·ð  æ¤éå¦¬ð å¡éã¹ð ð ð ¶ð¡ºåç³ð «ð «ð ®¿åªð¯ »ð ¯åð ¯»ð °»ð ±ð ±¥ð ±¼æ§ð ²åºð ²µð ³ð ³­ð µ¯ð ¶²ð ·æ¥é°¯è¥ð ¸ð ¸ð »ð ¾ð ¼­ð ¹³å° ð ¾¼å¸ð¡ð¡ð¡¶æð¡»ð¡ð¡ãð¡¿ð¡ð¡¯ð¡»å¤è­ð¡£ð¡µð¡¶è®ð¡·ð¡ð¡ð¡ä¹¸ç»ð¡ ­ð¡¥ª"],["9b40","ð¡¨­ð¡©ð¡°ªð¡±°ð¡²¬ð¡»æð¡»ð¡¼çæ¡ð¢æ§©ãð¢¼ð¢ð¢ºð¢ªð¢¡±ð¢¥è½ð¢¥§ð¢¦ð¢«è¦¥ð¢«¨è¾ ð¢¬é¸ð¢¬¿é¡éª½ð¢±"],["9b62","ð¢²ð¢²·ð¥¯¨ð¢´ð¢´ð¢¶·ð¢¶ð¢¹ð¢½´ð¢¿ð£³ð£¦ð£ð£å¾±ææ¿ð§©¹ð£§ð£³çð¤¦ºçð£ð£çºð å¢µæ"],["9ba1","æ¤ð£ª§ð§ð¥¿¢ð£¸ð£º¹ð§¾ð¢ä£äª¸ð¤ð¨ªð¤®ð¤ð¤»ð¤´ð¤ð¤©ð åð å¦ð¡º¨ã®¾ð£³¿ð¤ð¤åð¤´ã¦ð¤¯ð¨¨ð©§ã¢ð¢è­ð¨­é§ð¤ ð¤£»ð¤¨çð¤«ð ±¸å¥¥ð¤º¥ð¤¾ð ¹è»ð¥¬åå¿ç±ð¥ð¥ð£½ð¤ª§å¼ð¥ð¥®ð¦­éã³ð¥¿ð§²ð¥äð¥¢ð¥¦ð¥ð¤¤¿ð¥¡å¦ã»ð£æð¥¤ä¼ð¨¥ð¥ª®ð¥®ð¥°ð¡¶å¡çæ¾¶ð¦ð§°éð¦²ð¤¾è­¢ð¦ð¦"],["9c40","åµð¦¯·è¼¶ð¦ð¡¤è«ªð¤§¶ð¦ð£¿¯ð¦ä¯ð¦¿ð¦µð¢é¥ð¥¡æå¨§ð¯£ä¾»å¹ð¤¡ð¦¼ä¹ªð¤¤´éæ¶ð¦²½ãè¥·ð¦ð¦¡®ð¦ð¦¡çð¦£ç­ð©ð ¨ð¦¤¦éð¦¤¹ç©é·°ð¦§ºé¨¦ð¦¨­ãð¦©ð ¡ç¦ð¦¨´ð¦­å´¬ð£èð¦®äð¦²¤ç»è¡¥ð¦¶®å¢¶"],["9ca1","ãð¢ð§ð§ã±ð§ð§éð¢ºð§é°ð§¦ð¤§æ°¹éð§ð »¸è §è£µð¢¤¦ð¨³ð¡±æº¸ð¤¨ªð¡  ã¦¤ã¹å°ç§£ä¿æ¶ð©²­ð©¢¤è¥ð§ð§¡åäð¡ã¦¡ð£¯ð¨¨ð¡ç­è¦ð§§ð©¨å©§ä²·ð§¯ð¨¦«ð§§½ð§¨ð§¬ð§µ¦ð¤ºç­ç¥¾ð¨æ¾µðªæ¨ð¨å¢ð¦¸é¿æ ¶éð¨¯ð¨£ð¦¦µð¡­ð£¯ð¨å¶ð¨°°ð¨åé £ð¨¥å¶«ð¤¦æ¾æ§åð¤ª¥ð£¾ã°æ¶ð¨ð¨´ð¨®ð¡¾¡ð¨"],["9d40","ð¨ð¨¯ð¨ð¨ð¨¯ð¨ãð¨¨ð¨ªä£ºæ¦ð¨¥ç éð¨¦¸ä²ð¨§§äð¨§¨ð¨­ð¨¯å§¸ð¨°è¼ð¨¿ð©¬ç­ð©ð©¼ã··ð©ð¤«è¿çåð©§ð©©ð©°ð©¸ð©²ð©£ð©¥ð©¥ªð©§ð©¨¨ð©¬ð©µð©¶çºð©»¸ð©¼£ä²¤éðªç¢ðª¿ä¶éðªä¶ð ²è¾¾å"],["9da1","è¾ºð¢°è¾¹ð¤ªäç¹¿æ½æª±ä»ªã¤ð¨¬¬ð§¢ãºèºð¡µð¨¤ð¨­¬ð¨®ð§¨¾ð¦¯ã·«ð§ð£²·ð¥µð¥¥äºð¥ºð¦å¿ð ¹­è¸å­­ð£ºð¤²ææð¡¶ð¡¡»æ°å­ð¥±åð¥ã·ð©¶ä±½å¢åç½ð¥»å¥µð£µè°ä¸ð ¿ªð µð£ºèéµè´ç»é±çç¹éå²èè·å¥è²èè½åªç¥¢ååð ºãåå±æ±ð¨¢ã­ç´å°åºåå²ð ±ð ²å»ð¥ð ¹¶ð¢±¢"],["9e40","ð º¢éº«çµåð¡µæé­åè³ç¶é¶æ¼æ¹æ¾å©ð¢­é±²ð¢º³åãð ¶§å§åååç¦è¸­ð¦¢ç±è¶è èè£è¶èð¡ä¬çð¤å®èð¦¢å»ð¢´ð§´¯ð¤£ð§µ³ð¦»ð§¶é°ð¡éð£³¼ðª©ð º¬ð »¹ç¦ð¡²¢äð¤¿ð§¿¹ð ¿«äº"],["9ea1","é±æð¢¶ ä£³ð¤ ð©µ¼ð ¿¬ð ¸æ¢ð§£ð ¿­"],["9ead","ð¦ð¡ç£çºéµä¸ä¸ã·å¬æ²²å§ã¬ã§å½ã¥ð¤å¢ð¤­®è­ååªð¥ªð ¥¹"],["9ec5","ã©ð¢¥ç´ð©º¬ä´é¯­ð£³¾ð©¼°ä±ð¤¾©ð©ð©¿èð£¶¶ð§²ð¦³ð£ æ®ç´¥ð£»·ð£¸¬ã¨ªéåã¹´ãºä©ð çå«°ð º¶ç¡ºð§¼®å¢§ä¿å¼é®åµ´çðª´éºä³¡ç¹ã»æð£ð¤²"],["9ef5","åð¡©å§ð¤¥£ð©¸å´ð§®ã­æ±éµ¼"],["9f40","ç±é¬¹åð¡¬å±æð©ð¦µð§¤è­ð ´¨ð¦´¢ð¤«¢ð µ±"],["9f4f","å¾ð¡¼å¶éð¡·éºéç¬é¬å³ç®£æ¨æµé«¿ç¯é¬ªç±¾é¬®ç±ç²é°ç¯¼é¬é¼é°ð¤¤¾é½å³å¯ä¿½éºä¿²å ã¸åå§åå¦·å¸éé¶«è½å©é´é¥éºå¬æ°"],["9fa1","æ¤¬åé°é´ä°»éæ¦å¦çð¡­é§å³"],["9fae","ééé"],["9fb2","éð¨ºæ¿ð¦´£æ«åéçºæð ¼çç±°ð¥°¡ð£³½"],["9fc1","ð¤¤çé®ä¸ªð ³è¾è¡"],["9fc9","å±æ§å­åºåå·µä»æ°±ð ²ä¼¹åååè¶ã¾å¼ã³"],["9fdb","æ­é¼é¾¥é®é ®é¢´éªºéº¨éºçºç¬"],["9fe7","æ¯ºè ç½¸"],["9feb","å ðªè¹·é½"],["9ff0","è·è¹é¸è¸æð¨½è¸¨è¹µç«ð¤©·ç¨¾ç£æ³ªè©§ç"],["a040","ð¨©é¼¦æ³èçðª²ç¡ð¯¡è´ç¢ç±è¬­çç±è³«ð¤ª»è¯å¾ºè¢ ä·"],["a055","ð¡ »ð¦¸"],["a058","è©¾ð¢"],["a05b","æ½ç§é«éµé®é®èµ"],["a063","è è³·ç¬é¡é®°ãç²ä°ç±é¥ð¦æä°éºæ½"],["a073","åæ¯æ¦æ¹æã©æ¢åªð£µæ¤æ ã"],["a0a1","åµð¨¯è¿ð¨¸¹"],["a0a6","åð¡µç¤å²é¸ð ¼»ä¥"],["a0ae","ç¾"],["a0b0","ç³ð¥¼ç³ç¨­è¦è£çµçç²è¦èæè¢ð§èç°èç¤è¦ð¦çð¦»è©èèèè©è²­è­ç«ç¸èãµæ¦²è¶¦"],["a0d4","è¦©ç¨æ¶¹èð¤ç§ã·ç¶æ¤æã³ç¢æ·"],["a0e2","ç½±ð¨¬­çæ©ä­¾å ã°ð£³ð¥»ð§ð¥±ð¡¥ð¡¾ð©¤ð¦·ð§­å³ð¦­ð¨¨ð£·ð ®ð¦¡ð¤¼ä¢å¬ð¦é½éº¦ð¦«"],["a3c0","â",31,"â¡"],["c6a1","â ",9,"â´",9,"â°",9,"ä¸¶ä¸¿äºäº ååå«å¹å¸å©å¶å¤å®å·â¼³å¹¿å»´å½å½¡æ´æ çç¶è¾µé¶Â¨Ëã½ã¾ãããä»ãããã¼ï¼»ï¼½â½ã",23],["c740","ã",58,"ã¡ã¢ã£ã¤"],["c7a1","ã¥",81,"Ð",5,"ÐÐ",4],["c840","Ð",26,"ÑÐ¶",25,"â§â¸â¹ãð ä¹ð åä"],["c8a1","é¾°åé¾±ð§"],["c8cd","ï¿¢ï¿¤ï¼ï¼ã±ââ¡ããâºâºâºâºâºâºâºâºâºâºâºâº¥âº§âºªâº¬âº®âº¶âº¼âº¾â»â»â»â»â»â»â»â»â»£"],["c8f5","ÊÉÉÉÉµÅÃ¸ÅÊÉª"],["f9fe","ï¿­"],["fa40","ð éð ð£¿èäµç¯åµãð¤¥ð¨§¤éð¡§è®ð£³ç ¼ææð¤¤³ð¨¦ªð  ð¦®³ð¡ä¾«ð¢­åð¦´©ð§ªð£ð¤ª±ð¢å©ð ¾å¾¤ð ð æ»ð å½åãºåé¡¬ãèð¤¦¤ð å ð£´åªð ¯¿ð¢¼ð ¥ð¢°ð ð£³ð¡¦å®è½ð ³ð£²å²å¸"],["faa1","é´´åååã³åð¤ª¦å³å¢åå­èæ¤¾ð£­å½»åå¦å¼åµååå¹åç°èå èð¦¬åð¨«åæ»ð£¾ð ¥ð£¿¬å³åð ¯¢æ³ð¡¦æ çæãºªã£ð¡¨çä¢å­å´ð¨«å¾å¿ð¡ð¡ç¦åð¨ªå å«å®ç§ð¥²ã½çååæ±ä¹å¾åãª«ð ®å ð£¿«ð¢¶£å¶ð ±·åç¹å«ææµå­ð¦­ð µ´ååå¤ä¦ð¡ð »ã¶´ð µ"],["fb40","ð¨¦¼ð¢åä³­å¯çåå©åð¡£ð¤ºäð¤µæ³ð¡´å·æð£æ¤æ­ååç£±å±éå¾åå¯å­ð¨­¦ã£ð¡åð¤¥æ±®çåã±ð¦±¾å¦ð¡å ð¡ð¤£å ¦ð¤¯µå¡å¢ªã¡å£ å£ð¡¼å£»å¯¿åðªð¤¸éã¡å¤æ¢¦ãæ¹"],["fba1","ð¡¾å¨¤åð¡èå§ð µð¦²ð¦´ªð¡å§ð¡»ð¡²ð¦¶¦æµ±ð¡ ¨ð¡å§¹ð¦¹åª«å©£ã¦ð¤¦©å©·ãåªç¥å«ð¦¾¡ð¢ã¶ð¡¤ã²ð¡¸åºåå­¶æå­¼ð§¨ää¡ð å¯æ ð¡¨´ð¥§ð ¥å¯³å®ä´å°ð¡­å°çå°ð¡²¥ð¦¬¨å±ä£å²å³©å³¯å¶ð¡·¹ð¡¸·å´å´åµð¡º¤å²ºå·è¼ã ­ð¤¤ð¢ð¢³èã ¶ã¯å¸®æªå¹µå¹ºð¤¼ð ³å¦äº·å»å¨ð¡±å¸å»´ð¨"],["fc40","å»¹å»»ã¢ å»¼æ ¾éå¼ð ð¯¢ã«ä¢®ð¡ºå¼ºð¦¢ð¢å½ð¢±å½£é½ð¦¹®å½²éð¨¨¶å¾§å¶¶ãµð¥ð¡½ªð§¸ð¢¨éð ð¨¨©æ±æð¡¡·ã¥£ã·ã¹åð¢´ç¥±ã¹ææ¤æ³ð¤¦ð¤¦ð§©ç¤å¡åª æ¤è¤æð¯¢¦ð¦»æå´ð æå®ªð£¾·"],["fca1","ð¢¡æð¨®ð©¥æã¤²ð¢¦ð¢£æ£æææð æð¡°æð¢¸æ¬ð¤§ã¨æ¸æ¸ð¡ð¡¼ææ¾ð¢¸¶é ð¤ð¥æ¡æ¥é»ã©¦æºã©ææ¼ð¤¨¨ð¤¨£ææ­æð£¾æµð¤¥ä¬·æäð¡ ©æ æ£å¿ð£æð£·ð£¸æð£¤ð£¥æð ¹µæ§ð¥¦æ³æ´ð¡¸½ð£±ð¨´ð£ð¥çð¢£·é¦¤æð¤ð¤¨¡ã¬«æ§ºð£ææ§æ¢ð¤ð©­æä©æ ¢æ¹é¼æ ð£¦ð¦¶ æ¡"],["fd40","ð£¯æ§¡æ¨ð¨«æ¥³æ£ð£æ¤æ¤ã´²ã¨ð£¼ã®æ¬æ¥¡ð¨©ä¼æ¤¶æ¦ã®¡ð è£åæ§¹ð£ð¢ªæ©ð£æªã¯³æ±æ«ð©ã°æ¬ð ¤£ææ¬µæ­´ð¢æºµð£«ð µð¡¥ãå¡ð£­æ¯¡ð£»¼æ¯æ°·ð¢ð¤£±ð¦­æ±è¦æ±¹ð£¶¼äð£¶½ð¤¤ð¤¤ð¤¤"],["fda1","ð£³ã¥ã³«ð ´²é®ð£¹ð¢ç¾æ ·ð¦´¥ð¦¶¡ð¦·«æ¶æµæ¹¼æ¼ð¤¥¿ð¤ð¦¹²è³ð¦½´åæ²æ¸è®ð¨¬¡æ¸¯ð£¸¯çð£¾ç§æ¹åªð£æ¿¸ãæ¾ð£¸°æ»ºð¡ð¤½äé°æ½æ½ãµæ½´ð©°ã´»æ¾ð¤æ¿ð¤ð¤ð¤¹ð£¿°ð£¾´ð¤¿åð¤ð¤ð¤ð¦çç¾ç§çççççäã·¨ç´çð¤·ç«çåªçç®å²ð¤¥çé¢ð¤ç¬ð¤ð¤¨§ð¤¨¢çºð¨¯¨ç½ç"],["fe40","éçå¤éç¤éð¥ç®çð¤¥´æ¢½ççã¹ð£æ æ¼½ççªç«ð¤ £ð¨ «ä£­ð¨ ç¨ç®ççªð °ºð¦¨®ççð¤¢ð¡§ð¤¨¤æ£ãð¤¦·ð¤¦ð¤§»ç·çæ¤ð¤¨¦ç¹ð ã»çð¢¢­ç ð¨º²çç¤ç¶è¹ç¬ã°ç´é±æ¨¬çä¥ð¤ª"],["fea1","ð¤ð¤©¹ð¨®å­ð¨°ð¡¢çð¡¦çç©çð¨»ð¡©å¯ð¨º¬éççç§ç®ð¤¾ã¼ð¤´çççç´çç¬ççç¯ç¶ð¦µçè¯ã¸ð¦¤ð¦¤ç¡ç¥ç·çð¦¾è¢ð¥ð¥½ð¡¸çç¦çæ¯ð¥ çð£¬ç¯ð¨¥¤ð¨¥¨ð¡ç´ç ð¡¶ð¤¨æ£ç¢¯ç£ç£é¥ç¤®ð¥ ç£ç¤´ç¢±ð§è¾¸è¢ð¨¬«ð¦ð¢ç¦è¤æ¤ç¦ð¥¡ç¦ð§¬¹ç¤¼ç¦©æ¸ªð§¦ãº¨ç§ð©ç§"]]');
            }
          ),
          /***/
          13336: (
            /***/
            function(l) {
              l.exports = JSON.parse('[["0","\\u0000",127,"â¬"],["8140","ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ ä¸¡ä¸£ä¸¦ä¸©ä¸®ä¸¯ä¸±ä¸³ä¸µä¸·ä¸¼ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹¢ä¹£ä¹¤ä¹¥ä¹§ä¹¨ä¹ª",5,"ä¹²ä¹´",9,"ä¹¿",6,"äºäº"],["8180","äºäºäºäºäºäºäºäº£äºªäº¯äº°äº±äº´äº¶äº·äº¸äº¹äº¼äº½äº¾ä»ä»ä»ä»ä»ä»ä»ä»ä» ä»¢ä»¦ä»§ä»©ä»­ä»®ä»¯ä»±ä»´ä»¸ä»¹ä»ºä»¼ä»¾ä¼ä¼",6,"ä¼ä¼ä¼",4,"ä¼ä¼ä¼¡ä¼£ä¼¨ä¼©ä¼¬ä¼­ä¼®ä¼±ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾",4,"ä½ä½ä½",5,"ä½ä½ä½ä½¡ä½¢ä½¦ä½¨ä½ªä½«ä½­ä½®ä½±ä½²ä½µä½·ä½¸ä½¹ä½ºä½½ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾¡ä¾¢"],["8240","ä¾¤ä¾«ä¾­ä¾°",4,"ä¾¶",8,"ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿",4,"ä¿ä¿ä¿ ä¿¢ä¿¤ä¿¥ä¿§ä¿«ä¿¬ä¿°ä¿²ä¿´ä¿µä¿¶ä¿·ä¿¹ä¿»ä¿¼ä¿½ä¿¿",11],["8280","åååååååååååå å¢å£å¤å§å«å¯",10,"å»å½å¿ååååååååååå",4,"åååååå",7,"å¦",5,"å­",8,"å¸å¹åºå¼å½ååååååååååå",20,"å¤å¦åªå«å­",4,"å³",6,"å¼"],["8340","å½",17,"å",5,"åååå",10,"å¨å©åªå«å¯å°å±å²å´å¶",4,"å¼",9,"å"],["8380","ååå",5,"å",13,"å¢",28,"åååååååååååååå",4,"å£å¤å¦å§å©åªå¯å²åºå¾å¿åååååååååååååååååå¡å£å¦",4,"å­å®å´å¸å¹åºå¾å¿åååååååååå",5],["8440","ååååååå¢å£å¥",5,"å¬å®å±å²å´å·å¾åååååååååååååå¡å¢å£å¥å¦å§åªå¬å¯å±å²å´åµå¼å¾å",5,"åååååååå"],["8480","åååååå å¢å£å¤å¦å¨å«å¬å­å®å°å±å³",9,"å¾åå",4,"å",6,"ååå",6,"åå¤å¥å¦å§å®å¯å°å´",9,"åååååååååååååååååå",5,"å å¡å¢å£å¥",10,"å±",7,"å»å¼å½åååååååååå"],["8540","åååååååååå¢å¤å¥å§å¨å©å«å¬å­å¯",9,"å¼å½åååååååååååååå¥å¨åªå¬å­å²å¶å¹å»å¼å½å¾åååååååå"],["8580","å",4,"ååååååå å¡å¤å§åªå«å¬å­å¯",6,"å·å¸å¹åºå¼å½å¾åå",4,"ååååååååååå¡å¢å§å´åºå¾å¿ååååååååååå¢å¤å¥åªå°å³å¶å·åºå½å¿ååååååååååååå",4,"å£å¥å§å©",7,"å´å¹åºå¾å¿åååååååååååååååå å¡"],["8640","å¢å¥å®å°å²åµå¶å·å¹åºå¼å¾åååååååå ",4,"å«å¬å¯å°å±å´",5,"å»å¾ååååååå",4,"ååå",5,"ååååå¡å¥å¦"],["8680","å¨å©å«å­å²å´åµå¶å¸å¹åºå»å½åååååå",4,"ååååå",4,"åååå å¢å£å¨å©å«å¯",5,"å¹åºå½å¿ååååååååååååååå ",6,"å¨",8,"å²å´å¶å¸åºå¼å¿",4,"åååååååååå",4,"åå å¢å§å©å­å®å°å±å´å¶å¸",4,"å¿åååå"],["8740","åååååå",7,"ååååå å¡å¢å¥å¦å¨å©åªå«å®å¯å°å³åµå·å¸åºå¼å½å¾å",11,"å",4,"ååååå",4],["8780","å£å¥å¦å§å­å®å¯å°å²å³å´åµå·å¸å¹åºå½",7,"å",6,"åååå",14,"å¤",10,"å°",6,"å¸å¹åºå»å½",12,"å",8,"åååååå£å¥",5,"å¬å®å¯å²å³å¶å·å¸å»å¼åååååå",6],["8840","å",9,"ååå å¡å¢å¤å¥å¦å§å«å±å²å´",4,"å¼å½å¿ååååååååå",4,"ååå¢å£å¥å§å¬å®å°å±å²å´åµå¸å¹åºå½å¾å¿å"],["8880","åååååå",4,"å",6,"ååååå¥å¨åªå¬å¯å°å±å³åµå¶å·å¹",8,"å",6,"ååååååååååå¡å¢å£å¥",7,"å®å°å±å²å³åµå¶å·å»å¼å¾å¿å å å å å å å å å å å å å å å å å å å å å å å ¢å £å ¥",4,"å «",4,"å ±å ²å ³å ´å ¶",7],["8940","å ¾",5,"å¡",6,"å¡å¡å¡å¡å¡å¡å¡å¡å¡",4,"å¡",5,"å¡¦",4,"å¡­",16,"å¡¿å¢å¢å¢å¢å¢å¢å¢å¢"],["8980","å¢",4,"å¢",4,"å¢å¢å¢å¢ ",7,"å¢ª",17,"å¢½å¢¾å¢¿å£å£å£å£å£",10,"å£å£å£å£",13,"å£¥",5,"å£­å£¯å£±å£²å£´å£µå£·å£¸å£º",7,"å¤å¤å¤å¤",4,"å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤ å¤¡å¤¢å¤£å¤¦å¤¨å¤¬å¤°å¤²å¤³å¤µå¤¶å¤»"],["8a40","å¤½å¤¾å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥",4,"å¥¡å¥£å¥¤å¥¦",12,"å¥µå¥·å¥ºå¥»å¥¼å¥¾å¥¿å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦ å¦¡å¦¢å¦¦"],["8a80","å¦§å¦¬å¦­å¦°å¦±å¦³",5,"å¦ºå¦¼å¦½å¦¿",6,"å§å§å§å§å§å§å§å§å§å§å§å§",4,"å§¤å§¦å§§å§©å§ªå§«å§­",11,"å§ºå§¼å§½å§¾å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨¡å¨¢å¨¤å¨¦å¨§å¨¨å¨ª",6,"å¨³å¨µå¨·",4,"å¨½å¨¾å¨¿å©",4,"å©å©å©",9,"å©å©å©å©å©",5],["8b40","å©¡å©£å©¤å©¥å©¦å©¨å©©å©«",8,"å©¸å©¹å©»å©¼å©½å©¾åª",17,"åª",6,"åª",13,"åª«åª¬"],["8b80","åª­",4,"åª´åª¶åª·åª¹",4,"åª¿å«å«",5,"å«å«å«",4,"å«å«å«å«å«å«å«å«å«å«¢å«¤å«¥å«§å«¨å«ªå«¬",4,"å«²",22,"å¬",11,"å¬",25,"å¬³å¬µå¬¶å¬¸",7,"å­",6],["8c40","å­",7,"å­å­å­å­ å­¡å­§å­¨å­«å­­å­®å­¯å­²å­´å­¶å­·å­¸å­¹å­»å­¼å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®å®§å®¨å®©å®¬å®­å®®å®¯å®±å®²å®·å®ºå®»å®¼å¯å¯å¯å¯å¯å¯å¯å¯å¯å¯"],["8c80","å¯å¯",8,"å¯ å¯¢å¯£å¯¦å¯§å¯©",4,"å¯¯å¯±",6,"å¯½å¯¾å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å° å°¡å°£å°¦å°¨å°©å°ªå°«å°­å°®å°¯å°°å°²å°³å°µå°¶å°·å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±¢å±¤å±§",6,"å±°å±²",6,"å±»å±¼å±½å±¾å²å²",4,"å²å²å²å²å²å²å²å²å²",4,"å²¤",4],["8d40","å²ªå²®å²¯å²°å²²å²´å²¶å²¹å²ºå²»å²¼å²¾å³å³å³å³",5,"å³",5,"å³",5,"å³",6,"å³¢å³£å³§å³©å³«å³¬å³®å³¯å³±",9,"å³¼",4],["8d80","å´å´å´å´",5,"å´",4,"å´å´å´å´å´å´å´å´",4,"å´¥å´¨å´ªå´«å´¬å´¯",4,"å´µ",7,"å´¿",7,"åµåµåµ",10,"åµåµåµåµ",10,"åµªåµ­åµ®åµ°åµ±åµ²åµ³åµµ",12,"å¶",21,"å¶å¶å¶å¶å¶å¶ "],["8e40","å¶¡",21,"å¶¸",12,"å·",6,"å·",12,"å·å·å· å·£å·¤å·ªå·¬å·­"],["8e80","å·°å·µå·¶å·¸",4,"å·¿å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸",7,"å¸¨",4,"å¸¯å¸°å¸²",4,"å¸¹å¸ºå¸¾å¸¿å¹å¹å¹å¹",5,"å¹",6,"å¹",4,"å¹å¹å¹å¹ å¹£",14,"å¹µå¹·å¹¹å¹¾åºåºåºåºåºåºåºåºåºåºåºåºåºåº¡åº¢åº£åº¤åº¨",4,"åº®",4,"åº´åººåº»åº¼åº½åº¿",6],["8f40","å»å»å»å»",5,"å»å»å»å»å»å»å»",11,"å»©å»«",8,"å»µå»¸å»¹å»»å»¼å»½å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤"],["8f80","å¼¨å¼«å¼¬å¼®å¼°å¼²",6,"å¼»å¼½å¼¾å¼¿å½",14,"å½å½å½å½å½å½å½å½å½ å½£å½¥å½§å½¨å½«å½®å½¯å½²å½´å½µå½¶å½¸å½ºå½½å½¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾ å¾¢",5,"å¾©å¾«å¾¬å¾¯",5,"å¾¶å¾¸å¾¹å¾ºå¾»å¾¾",4,"å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿¢å¿£å¿¥å¿¦å¿¨å¿©å¿¬å¿¯å¿°å¿²å¿³å¿´å¿¶å¿·å¿¹å¿ºå¿¼æ"],["9040","æææææææææææææ¢æ£æ¤æ¬æ­æ®æ°",4,"æ¶",4,"æ½æ¾ææ",6,"ææææææææææææææ æ¡æ¥æ¦æ®æ±æ²æ´æµæ·æ¾æ"],["9080","ææææææææææææææææææææ¡æ¢æ¤æ¥æ§æ©æªæ®æ°æ³æµæ¶æ·æ¹æºæ½",7,"ææææ",4,"æææææææææ¡",4,"æªæ±æ²æµæ·æ¸æ»",4,"æææææææææ",4,"æææææææææ¡æ¢æ¥æ¨æ©æªæ¬",18,"æ",6],["9140","ææææææææææ",6,"æææ æ¡æ£æ¤æ¥æ¦æ©",6,"æ±æ²æ³æ´æ¶æ¸",18,"æææ",4,"æ"],["9180","æ",6,"æ",8,"æªæ«æ­",9,"æ¸",5,"æ¿æææ",4,"ææ",4,"ææ",16,"æ§",13,"æ¶",8,"æ",5,"æææææææææ æ£æ¦æ§æ¨æ©æ«æ­æ¯æ°æ±æ²æµæ¶æ¸",4,"æææææ"],["9240","ææææææææ",6,"æ¤æ¥æ¨æ±æ²æ´æµæ·æ¸æºæ»æ½ææææææææ",5,"ææææææ£æ¦æ§æ©æªæ­æ®æ¯æ°æ²æ³æ´æ¶æ·æ¸æºæ¾ææ"],["9280","ææææææææ æ¡æ¤æªæ«æ°æ²æµæ¸æ¹æºæ»ææææææææææææææææææææ¦æ§æ©æ¬æ­æ®æ°æ±æ³",5,"æ»æ¼æ¾æ¿æææææææææææ",7,"æ æ¤æ¥æ¦æ¨æªæ«æ¬æ¯æ°æ²æ³æ´æµæ¸æ¹æ¼æ½æ¾æ¿æææææææææææææ",6,"æ¡æ¤æ¦æ«æ¯æ±æ²æµæ¶æ¹æ»æ½æ¿æ"],["9340","ææææææææææææææ",6,"ææ¢æ¤",4,"æ«æ¬æ®æ¯æ°æ±æ³æµæ·æ¹æºæ»æ¼æ¾æææ",4,"æææææ",5,"æææ¢æ£æ¤"],["9380","æ¥æ§æ¨æ©æ«æ®",5,"æµ",4,"æ»æ¼æ¾æææææ",6,"æææææ",4,"æ",7,"æ¨æªæ«æ¬æ®",9,"æ»",6,"æææ",8,"æææææææææ",4,"æ¥æ¦æ§æ¨æªæ«æ¯æ±æ²æ³æ´æ¶æ¹æ»æ½æ¾æ¿ææææ",6,"ææææææææ"],["9440","æææææ æ¡æ£æ¥æ§",24,"æ",7,"æ",7,"æ",4,"æ",8],["9480","æ¢æ£æ¤æ¦",4,"æ¬æ­æ°æ±æ²æ³æ·æºæ¼æ½æ",4,"ææææææææææææææææ æ¡æ¤æ¥æ§æ¨æ©æªæ­æ®æ¯æ±æ³æµæ¶æ¸",14,"æææææææææææææææ æ¢æ£æ¦æ¨æªæ¬æ®æ±",7,"æºæ»æ¾æ¿æææææææææææææ",7,"æ¡æ£æ¤æªæ«"],["9540","æ²æ³æ´æµæ¸æ¹æ»",4,"æææææææææææææææææææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ²æ³æ·",4,"æ½æ¿æææ",6,"æææææ"],["9580","ææææææ æ¢æ£æ¥æ§æ©",4,"æ±æ²æ³æµæ¸æ¹æ»æ¼æ½æ¿ææææææææææææææææææ",4,"æ",8,"æ©",4,"æ¯",4,"æµæ¶æ·æ¸æºæ»æ¼æ½æ¿",25,"ææ",7,"æ§æ¨æª",5,"æ±æµæ¶æ¸æºæ»æ½æææ"],["9640","æææææææææææææææææ ",5,"æ§æ©æ®æ°æ²æ³æ¶æ·æ¸æ¹æ»æ¼æ¾æ¿æææææææææææ",4,"ææ¢æ£æ¤æ¦æ§æ«æ¬æ®æ±æ´æ¶"],["9680","æ¸æ¹æºæ»æ½ææææææææææææææææææææ æ¡æ¤æ¦æ©æ¬æ®æ±æ²æ´æ¹",7,"ææ",9,"ææææææ¡æ£æ¤æ¦æ§æ¨æªæ«æ­æ®æ²æµ",7,"æ¾æ æ æ æ æ æ æ æ æ æ æ ",4,"æ æ æ  æ ¢",6,"æ «",6,"æ ´æ µæ ¶æ ºæ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡",5],["9740","æ¡æ¡æ¡æ¡æ¡ªæ¡¬",7,"æ¡µæ¡¸",8,"æ¢æ¢æ¢",7,"æ¢æ¢æ¢æ¢æ¢æ¢æ¢",9,"æ¢£æ¢¤æ¢¥æ¢©æ¢ªæ¢«æ¢¬æ¢®æ¢±æ¢²æ¢´æ¢¶æ¢·æ¢¸"],["9780","æ¢¹",6,"æ£æ£",5,"æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£",4,"æ£¡æ£¢æ£¤",9,"æ£¯æ£²æ£³æ£´æ£¶æ£·æ£¸æ£»æ£½æ£¾æ£¿æ¤æ¤æ¤æ¤æ¤",4,"æ¤æ¤æ¤æ¤",11,"æ¤¡æ¤¢æ¤£æ¤¥",7,"æ¤®æ¤¯æ¤±æ¤²æ¤³æ¤µæ¤¶æ¤·æ¤¸æ¤ºæ¤»æ¤¼æ¤¾æ¥æ¥æ¥",16,"æ¥æ¥æ¥æ¥æ¥æ¥æ¥"],["9840","æ¥¡æ¥¢æ¥¤æ¥¥æ¥§æ¥¨æ¥©æ¥ªæ¥¬æ¥­æ¥¯æ¥°æ¥²",4,"æ¥ºæ¥»æ¥½æ¥¾æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦æ¦",5,"æ¦æ¦æ¦æ¦æ¦",9,"æ¦©æ¦ªæ¦¬æ¦®æ¦¯æ¦°æ¦²æ¦³æ¦µæ¦¶æ¦¸æ¦¹æ¦ºæ¦¼æ¦½"],["9880","æ¦¾æ¦¿æ§æ§",7,"æ§æ§æ§æ§æ§æ§æ§",5,"æ§æ§æ§æ§¡",11,"æ§®æ§¯æ§°æ§±æ§³",9,"æ§¾æ¨",9,"æ¨",11,"æ¨",5,"æ¨ æ¨¢",5,"æ¨©æ¨«æ¨¬æ¨­æ¨®æ¨°æ¨²æ¨³æ¨´æ¨¶",6,"æ¨¿",4,"æ©æ©æ©",7,"æ©",6,"æ©"],["9940","æ©",4,"æ©¢æ©£æ©¤æ©¦",10,"æ©²",6,"æ©ºæ©»æ©½æ©¾æ©¿æªæªæªæª",8,"æªæª",4,"æª",7,"æª¡",5],["9980","æª§æª¨æªªæª­",114,"æ¬¥æ¬¦æ¬¨",6],["9a40","æ¬¯æ¬°æ¬±æ¬³æ¬´æ¬µæ¬¶æ¬¸æ¬»æ¬¼æ¬½æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­æ­",11,"æ­",7,"æ­¨æ­©æ­«",13,"æ­ºæ­½æ­¾æ­¿æ®æ®æ®"],["9a80","æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®",4,"æ®¢",7,"æ®«",7,"æ®¶æ®¸",6,"æ¯æ¯æ¯æ¯",4,"æ¯æ¯æ¯æ¯æ¯æ¯æ¯",4,"æ¯¢",7,"æ¯¬æ¯­æ¯®æ¯°æ¯±æ¯²æ¯´æ¯¶æ¯·æ¯¸æ¯ºæ¯»æ¯¼æ¯¾",6,"æ°",4,"æ°æ°æ°æ°æ°æ°æ° æ°£æ°¥æ°«æ°¬æ°­æ°±æ°³æ°¶æ°·æ°¹æ°ºæ°»æ°¼æ°¾æ°¿æ±æ±æ±æ±æ±",4,"æ±æ±æ±æ±æ±"],["9b40","æ±æ±æ±¢æ±£æ±¥æ±¦æ±§æ±«",4,"æ±±æ±³æ±µæ±·æ±¸æ±ºæ±»æ±¼æ±¿æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ² æ²¢æ²¨æ²¬æ²¯æ²°æ²´æ²µæ²¶æ²·æ²ºæ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["9b80","æ³æ³æ³æ³æ³æ³¤æ³¦æ³§æ³©æ³¬æ³­æ³²æ³´æ³¹æ³¿æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´",5,"æ´¦æ´¨æ´©æ´¬æ´­æ´¯æ´°æ´´æ´¶æ´·æ´¸æ´ºæ´¿æµæµæµæµæµæµæµæµæµæµæµæµæµæµ¡æµ¢æµ¤æµ¥æµ§æµ¨æµ«æµ¬æµ­æµ°æµ±æµ²æµ³æµµæµ¶æµ¹æµºæµ»æµ½",4,"æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶",4,"æ¶æ¶¢æ¶¥æ¶¬æ¶­æ¶°æ¶±æ¶³æ¶´æ¶¶æ¶·æ¶¹",5,"æ·æ·æ·æ·æ·æ·"],["9c40","æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·¢æ·£æ·¥æ·§æ·¨æ·©æ·ªæ·­æ·¯æ·°æ·²æ·´æ·µæ·¶æ·¸æ·ºæ·½",7,"æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸¢æ¸¦æ¸§æ¸¨æ¸ªæ¸¬æ¸®æ¸°æ¸±æ¸³æ¸µ"],["9c80","æ¸¶æ¸·æ¸¹æ¸»",7,"æ¹",7,"æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹ ",10,"æ¹¬æ¹­æ¹¯",14,"æºæºæºæºæºæºæº",4,"æº",6,"æºæºæºæºæºæº æº¡æº£æº¤æº¦æº¨æº©æº«æº¬æº­æº®æº°æº³æºµæº¸æº¹æº¼æº¾æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»£æ»§æ»ª",5],["9d40","æ»°æ»±æ»²æ»³æ»µæ»¶æ»·æ»¸æ»º",7,"æ¼æ¼æ¼æ¼æ¼æ¼",4,"æ¼æ¼æ¼æ¼",9,"æ¼¡æ¼¢æ¼£æ¼¥æ¼¦æ¼§æ¼¨æ¼¬æ¼®æ¼°æ¼²æ¼´æ¼µæ¼·",6,"æ¼¿æ½æ½æ½"],["9d80","æ½æ½æ½æ½æ½æ½æ½æ½",9,"æ½æ½æ½æ½æ½æ½ æ½¡æ½£æ½¤æ½¥æ½§",5,"æ½¯æ½°æ½±æ½³æ½µæ½¶æ½·æ½¹æ½»æ½½",6,"æ¾æ¾æ¾æ¾æ¾æ¾",12,"æ¾æ¾æ¾æ¾ æ¾¢",4,"æ¾¨",10,"æ¾´æ¾µæ¾·æ¾¸æ¾º",5,"æ¿æ¿",5,"æ¿",6,"æ¿",10,"æ¿æ¿¢æ¿£æ¿¤æ¿¥"],["9e40","æ¿¦",7,"æ¿°",32,"ç",7,"ç",6,"ç¤",6],["9e80","ç«",9,"ç¶ç·ç¸çº",17,"ççç",13,"ç",11,"ç®ç±ç²ç³ç´ç·ç¹çºç»ç½ççççççççççççççççççç",12,"ç°ç²ç´çµç¶çºç¾ç¿çççççç",12,"ç"],["9f40","çççç ç¡ç¢ç£ç¥çªç®ç°",6,"ç¸çºç»ç¼ç¾",10,"ç",4,"ççççç",10,"ç§",7,"ç²ç³ç´"],["9f80","çµç·",13,"ççççççç",12,"çç",4,"ç¥ç©",4,"ç¯ç°ç±ç´çµç¶ç·ç¹ç»ç¼ç¾",5,"ç",4,"çççççççççççç",4,"ç¡",6,"ç©çªç«ç­",5,"ç´ç¶ç·ç¸çº",8,"ç",9,"ç",4],["a040","ç",9,"ç¡ç¢ç£ç¤ç¦ç¨",5,"ç¯",9,"çº",11,"ç",19],["a080","ççç",9,"ç©ç«ç­ç®ç¯ç²ç³ç´çºç¼ç¾ç",6,"çççççççççççççççç ç£ç¤ç¥ç¨çªç«ç¬ç­ç°ç±ç³ç´ç¶ç·ç¸ç»ç¼ç½ççç",4,"ççççç",11,"ç ",11,"ç®ç±ç²ç³çµçº",6,"çççççççççççççççç"],["a1a1","ãããÂ·ËËÂ¨ããâï½ââ¦ââââããã",7,"ããããÂ±ÃÃ·â¶â§â¨âââªâ©ââ·ââ¥â¥â âââ«â®â¡âââ½ââ â®â¯â¤â¥ââµâ´ââÂ°â²â³âï¼Â¤ï¿ ï¿¡â°Â§âââââââââ¡â â³â²â»ââââã"],["a2a1","â°",9],["a2b1","â",19,"â´",19,"â ",9],["a2e5","ã ",9],["a2f1","â ",11],["a3a1","ï¼ï¼ï¼ï¿¥ï¼",88,"ï¿£"],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a6e0","ï¸µï¸¶ï¸¹ï¸ºï¸¿ï¹ï¸½ï¸¾ï¹ï¹ï¹ï¹"],["a6ee","ï¸»ï¸¼ï¸·ï¸¸ï¸±"],["a6f4","ï¸³ï¸´"],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a840","ËËËâââ¥âµâââââââââ£ââ¦â§â¿â",35,"â",6],["a880","â",7,"ââââ¼â½â¢â£â¤â¥ââããã"],["a8a1","ÄÃ¡ÇÃ ÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇÇÃ¼ÃªÉ"],["a8bd","ÅÅ"],["a8c0","É¡"],["a8c5","ã",36],["a940","ã¡",8,"ã£ãããããã¡ãããããï¸°ï¿¢ï¿¤"],["a959","â¡ã±"],["a95c","â"],["a960","ã¼ããã½ã¾ãããï¹",9,"ï¹ï¹ï¹ï¹ï¹",8],["a980","ï¹¢",4,"ï¹¨ï¹©ï¹ªï¹«"],["a996","ã"],["a9a4","â",75],["aa40","çççç¢",5,"çªç«çµç¶ç¹ç½ç¾ç¿ççç",5,"ççççççççççççç ç£ç¤ç¦ç§ç¨ç­ç¯ç°ç²ç³çµç¶çºç»ç¼ç½ç",8],["aa80","çççççççççççç",7,"ç¡",10,"ç®ç°ç±"],["ab40","ç²",11,"ç¿",4,"çççççççççççççççççççç ç¡ç£",5,"çªç¬ç­ç±ç´çµç¶ç¸ç¹ç¼ç½ç¾ç¿çç",4],["ab80","çççç",6,"çççççç¡ç¢ç£ç¤ç¦ç¨çªç«ç¬ç®ç¯ç°ç±ç³",4],["ac40","ç¸",10,"çççççççç",8,"ç",5,"ç£ç¤ç§ç©ç«ç­ç¯ç±ç²ç·",4,"ç½ç¾ç¿çç",11],["ac80","ç",6,"çççç ",12,"ç®ç¯ç±",4,"ç¸ç¹çº"],["ad40","ç»ç¼ç½ç¿ççççççççççç",10,"çç",7,"çª",15,"ç»",12],["ad80","ç",9,"ç",8,"ççç¡ç¥ç§",6,"ç°ç±ç²"],["ae40","ç³çµç¸",6,"ççççç",7,"ççççççççççç ",4,"ç¦ç§çªç®ç´ç¶ç¹ç¼ç½ç¿ççççççççççççççççç"],["ae80","ç",7,"ç§ç¨ç©ç«",6,"ç³çµç¶ç·çº",4,"çççççç"],["af40","çççççççççççççç¢ç¦",4,"ç­ç¶ç·çºç»ç¿ççççççççççççççççç ç¡ç¥ç©ç¬ç­ç®ç¯ç²ç³çµç¶ç·ç¸çºç»ç½ç¾çççç"],["af80","çççççççççççççççç¡ç£ç§ç¨ç¬ç®ç¯ç±ç²ç¶ç·ç¹çºç»ç½ççç"],["b040","ç",6,"ç",5,"çç",4,"ççç ç¡ç¢ç¤",6,"ç¬ç­ç®ç°",7,"ç¹çºç¼ç¿ççççççççççççççççç"],["b080","ç",7,"ç¥",8,"ç¯ç°ç³çµ",9,"çççåé¿åæ¨åååççè¼ç®è¾ç¢ç±ééæ°¨å®ä¿ºææå²¸èºæ¡è®æçå¹æç¬ç¿±è¢å²å¥¥ææ¾³è­ææå­å§ç¬å«ç¤å·´æè·é¶æèåé¸ç½¢ç¸ç½æç¾æä½°è´¥æç¨æç­æ¬æ³è¬é¢æ¿çæ®æä¼´ç£ååç»é¦å¸®æ¢æ¦èç»æ£ç£èéåè°¤èèåè¤å¥"],["b140","ççççççççççççç ",4,"ç¦",7,"ç°ç³çµç¶ç·çºç»ç½ç¿çççççççç",10,"ççççç¡ç£ç¤ç¥ç§çªç«"],["b180","ç¬ç®ç°",4,"ç¹ç»ç½ç¾ç¿ççççç",7,"ç",7,"çèé¹ä¿å ¡é¥±å®æ±æ¥æ´è±¹é²çæ¯ç¢æ²ååè¾èè´é¡åçå¤æ«çè¢«å¥è¯æ¬ç¬¨å´©ç»·ç­æ³µè¹¦è¿¸é¼é¼»æ¯éç¬å½¼ç¢§èè½æ¯æ¯æ¯å¸åºç¹é­æå¼å¿è¾å£èé¿éé­è¾¹ç¼è´¬æä¾¿ååè¾¨è¾©è¾«éæ å½ªèè¡¨é³æå«çªå½¬ææ¿æ»¨å®¾æåµå°æä¸ç§é¥¼ç³"],["b240","çççç ç¤ç§ç©çªç­",11,"çºç»ç¼çççç",5,"ççç",11,"ç¡ç£ç¤ç¦ç¨ç«ç­ç®ç¯ç±ç²ç´ç¶",4],["b280","ç¼ç¾ç",12,"ç",8,"çççç",4,"ç¤çå¹¶ç»è æ­æ¨éµæ³¢ååæéç®ä¼¯å¸è¶èèæ¸¤æ³é©³æååºè¡¥å ä¸å¸æ­¥ç°¿é¨ææ¦çè£ææè´¢ç¬è¸©éå½©èè¡é¤åèæ®æ­æ¨ç¿èè±ä»æ²§èæç³æ§½æ¹èåç­ä¾§åæµå±è¹­æåè¬è¶æ¥ç¢´æ½å¯å²å·®è¯§ææ´è±ºææºèé¦è°ç¼ é²äº§éé¢¤æç"],["b340","ç¦ç¨çªç¯ç°ç±ç²ç´çµç·ç¹çºç»ç¼ç ",5,"ç ç ç ç ç ç ç ç ç ç ç  ç ¡ç ¢ç ¤ç ¨ç ªç «ç ®ç ¯ç ±ç ²ç ³ç µç ¶ç ½ç ¿ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡"],["b380","ç¡ç¡ç¡",11,"ç¡¯",7,"ç¡¸ç¡¹ç¡ºç¡»ç¡½",6,"åºå°å¸¸é¿å¿è åæçå±å¡è¶æéæå²æ½®å·¢åµçè½¦æ¯æ¤æ£å½»æ¾é´è£è¾°å°æ¨å¿±æ²éè¶è¡¬æç§°åæ©æåä¹ç¨æ©æ¾è¯æ¿ééªç§¤åç´æåæ± è¿å¼é©°è»é½¿ä¾å°ºèµ¤ç¿æ¥ç½åå²è«å´å® æ½é¬ç´è¸ç¨ æç­¹ä»ç»¸çä¸è­ååºæ©±å¨èºééæ»é¤æ¥"],["b440","ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ ç¢¢ç¢¤ç¢¦ç¢¨",7,"ç¢µç¢¶ç¢·ç¢¸ç¢ºç¢»ç¢¼ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£",9],["b480","ç£¤ç£¥ç£¦ç£§ç£©ç£ªç£«ç£­",4,"ç£³ç£µç£¶ç£¸ç£¹ç£»",5,"ç¤ç¤ç¤ç¤",6,"ç¡å¨çæè§¦å¤æ£å·ç©¿æ¤½ä¼ è¹åä¸²ç®çªå¹¢åºé¯åå¹çæ¶é¤åæ¥æ¤¿éåæ·³çº¯è ¢æ³ç»°çµè¨ç£éè¾æç·è¯æ­¤åºèµæ¬¡èªè±å±åä»ä¸åç²éç°ä¿è¹¿ç¯¡çªæ§å´å¬èçç²¹æ·¬ç¿ æå­å¯¸ç£æ®ææªæ«éæ­è¾¾ç­ç©æå¤§åæ­¹å£æ´å¸¦æ®ä»£è´·è¢å¾é®"],["b540","ç¤",5,"ç¤",9,"ç¤",4,"ç¤¥",14,"ç¤µ",4,"ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥",8,"ç¥ç¥ç¥ç¥ç¥¡ç¥£"],["b580","ç¥¤ç¥¦ç¥©ç¥ªç¥«ç¥¬ç¥®ç¥°",6,"ç¥¹ç¥»",4,"ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦æ è½æä¸¹åé¸æ¸èæ¦æ°®ä½æ®æ·¡è¯å¼¹èå½æ¡åè¡æ¡£åæ£è¹åå²ç¥·å¯¼å°ç¨»æ¼éçå¾·å¾çè¹¬ç¯ç»ç­çªå³éå ¤ä½æ»´è¿ªæç¬çæ¶¤ç¿å«¡æµåºå°èç¬¬å¸å¼éç¼é¢ ææ»ç¢ç¹å¸éå«çµä½ç¸åºæ¦å¥ æ·æ®¿ç¢å¼éååæåéè°è·ç¹ç¢è¶è¿­è°å "],["b640","ç¦",6,"ç¦",11,"ç¦¨",10,"ç¦´",4,"ç¦¼ç¦¿ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§",5,"ç§ ç§¡ç§¢ç§¥ç§¨ç§ª"],["b680","ç§¬ç§®ç§±",6,"ç§¹ç§ºç§¼ç§¾ç§¿ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨",4,"ç¨ç¨ç¨ç¨ç¨ç¨ä¸ç¯å®éé¡¶é¼é­å®è®¢ä¸¢ä¸å¬è£æå¨æ ä¾æ«å»æ´åææé¡è±éçé½ç£æ¯çç¬è¯»å µç¹èµæéèåº¦æ¸¡å¦ç«¯ç­é»æ®µæ­ç¼å åéå¯¹å¢©å¨è¹²æ¦é¡¿å¤éç¾éæåå¤å¤ºåèº²æµè·ºèµåæ°å è¾å³¨é¹ä¿é¢è®¹å¨¥æ¶åæ¼ééé¥¿æ©èå¿è³å°é¥µæ´±äº"],["b740","ç¨ç¨ç¨¡ç¨¢ç¨¤",14,"ç¨´ç¨µç¨¶ç¨¸ç¨ºç¨¾ç©",5,"ç©",9,"ç©",4,"ç©",16],["b780","ç©©",6,"ç©±ç©²ç©³ç©µç©»ç©¼ç©½ç©¾çªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçª¡çª¢è´°åç½ç­ä¼ä¹éæ³çè©å¸çªç¿»æ¨ç¾éç¹å¡ç¦åè¿èè´©ç¯é¥­æ³åè³æ¹èªæ¿é²å¦¨ä»¿è®¿çººæ¾è²éå¡é£è¥åªè¯½å èºåºæ²¸è´¹è¬éå©æ°åçº·åçæ±¾ç²å¥ä»½å¿¿æ¤ç²ªä¸°å°æ«èå³°éé£ç¯ç½é¢å¯ç¼è®½å¥å¤ä½å¦å¤«æ·è¤å­µæ¶æè¾å¹æ°ç¬¦ä¼ä¿æ"],["b840","çª£çª¤çª§çª©çªªçª«çª®",4,"çª´",10,"ç«",10,"ç«",9,"ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¤ç«§",5,"ç«®ç«°ç«±ç«²ç«³"],["b880","ç«´",4,"ç«»ç«¼ç«¾ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬¡ç¬¢ç¬£ç¬§ç¬©ç¬­æµ®æ¶ªç¦è¢±å¼ç«æè¾ä¿¯éæ§è¯èåºèèµ´å¯è¦èµå¤åä»éç¶è¹è´å¯è®£éå¦ç¼åå¶åè¯¥æ¹æ¦éçæºå¹²çææç«¿èèµ¶æç§æ¢èµ£ååé¢ç¼¸èçº²å²æ¸¯æ ç¯çé«èç¾ç³æéç¨¿åå¥æ­ææé¸½è³çå²é©èæ ¼è¤ééé¬ä¸ªåç»æ ¹è·èæ´åºç¾¹"],["b940","ç¬¯ç¬°ç¬²ç¬´ç¬µç¬¶ç¬·ç¬¹ç¬»ç¬½ç¬¿",5,"ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­¡ç­£",10,"ç­¯ç­°ç­³ç­´ç­¶ç­¸ç­ºç­¼ç­½ç­¿ç®ç®ç®ç®ç®",6,"ç®ç®"],["b980","ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®£ç®¤ç®¥ç®®ç®¯ç®°ç®²ç®³ç®µç®¶ç®·ç®¹",7,"ç¯ç¯ç¯åè¿æ¢å·¥æ»åæ­é¾ä¾èº¬å¬å®«å¼å·©æ±æ±è´¡å±é©å¾æ²èçå¢æè´­å¤è¾èåç®ä¼°æ²½å­¤å§é¼å¤èéª¨è°·è¡æé¡¾åºéå®çåå¯¡æè¤ä¹ææªæ£ºå³å®å è§ç®¡é¦ç½æ¯çè´¯åå¹¿éç°è§å­ç¡å½é¾éºè½¨é¬¼è¯¡ç¸æ¡æè·ªè´µå½è¾æ»æ£éé­å½æè£¹è¿å"],["ba40","ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯",4,"ç¯ç¯ç¯ç¯ç¯ ç¯¢ç¯£ç¯¤ç¯§ç¯¨ç¯©ç¯«ç¯¬ç¯­ç¯¯ç¯°ç¯²",4,"ç¯¸ç¯¹ç¯ºç¯»ç¯½ç¯¿",7,"ç°ç°ç°ç°ç°ç°",5,"ç°ç°ç°"],["ba80","ç°",4,"ç° ",5,"ç°¨ç°©ç°«",12,"ç°¹",5,"ç±éª¸å­©æµ·æ°¦äº¥å®³éªé£æ¨é¯é©å«æ¶µå¯å½åç½ç¿°æ¼ææ±æ¾æçæ±æ±å¤¯æ­èªå£åè±ªæ¯«éå¥½èå·æµ©åµåè·èæ ¸ç¦¾åä½åçè²éæ²³æ¶¸èµ«è¤é¹¤è´ºå¿é»çå¾ç æ¨å¼äº¨æ¨ªè¡¡æè½°åçè¹é¸¿æ´ªå®å¼çº¢åä¾¯ç´å¼åååå¼ä¹å¿½çå£¶è«è¡è´çç³æ¹"],["bb40","ç±",9,"ç±",36,"ç±µ",5,"ç±¾",9],["bb80","ç²ç²",6,"ç²ç²ç²ç²ç²ç²ç² ç²¡ç²£ç²¦ç²§ç²¨ç²©ç²«ç²¬ç²­ç²¯ç²°ç²´",4,"ç²ºç²»å¼§èå¬æ¤äºæ²ªæ·è±ååç¾æ»ç»ååè¯æ§å¾ææ·®åæ¬¢ç¯æ¡è¿ç¼æ¢æ£å¤çªè±¢çæ¶£å®¦å¹»èæé»ç£ºèç°§çå°æ¶çæå¹æè°ç°æ¥è¾å¾½æ¢èåæ¯ææ§åæ æ¦è´¿ç§½ä¼ç©æ±è®³è¯²ç»è¤æå©é­æµæ··è±æ´»ä¼ç«è·ææéè´§ç¥¸å»å¾åºæºç¸ç¨½ç§¯ç®"],["bc40","ç²¿ç³ç³ç³ç³ç³ç³ç³ç³",6,"ç³ç³ç³ç³ç³ç³¡",6,"ç³©",5,"ç³°",7,"ç³¹ç³ºç³¼",13,"ç´",5],["bc80","ç´",14,"ç´¡ç´£ç´¤ç´¥ç´¦ç´¨ç´©ç´ªç´¬ç´­ç´®ç´°",6,"èé¥¥è¿¹æ¿è®¥é¸¡å§¬ç»©ç¼åææ£è¾ç±éåæ¥ç¾æ±²å³å«çº§æ¤å èå·±èæåå­£ä¼ç¥­åæ¸æµå¯å¯è®¡è®°æ¢å¿éå¦ç»§çºªåæ·å¤¹ä½³å®¶å èé¢è´¾ç²é¾åç¨¼ä»·æ¶é©¾å«æ­¼çåå°ç¬ºé´çå¼è©è°å¥¸ç¼è§æ£æ¬ç¢±ç¡·æ£æ¡ç®ä¿­åªåèæ§é´è·µè´±è§é®ç®­ä»¶"],["bd40","ç´·",54,"çµ¯",7],["bd80","çµ¸",32,"å¥è°åé¥¯æ¸æºæ¶§å»ºåµå§å°æµæ±çèæ¡¨å¥è®²å é±éèæ¤ç¤ç¦è¶äº¤éæµéªå¨å¼æé°ç«ä¾¥èç¡è§é¥ºç¼´ç»å¿æéµè½¿è¾å«çªæ­æ¥çç§¸è¡é¶æªå«èæ¡æ°æ·ç«ç«­æ´ç»è§£å§æèè¥çåä»ç¥è¯«å±å·¾ç­æ¤éä»æ´¥è¥ç´§é¦ä»è°¨è¿é³æç¦è¿ç¬æµ¸"],["be40","ç¶",12,"ç¶§",6,"ç¶¯",42],["be80","ç·",32,"å°½å²èå¢èçæ¶é²¸äº¬æç²¾ç²³ç»äºè­¦æ¯é¢éå¢æ¬éå¾çéç«ç«åç¯çªæªç©¶çº çé­ä¹ç¸ä¹éå©ææ§è¼èåå°±çé æçç½å±é©¹èå±åç©ä¸¾æ²®èææ®å·¨å·è·è¸é¯ä¿±å¥æ§ç¬å§æé¹å¨å¦ç·å·ç»¢ææ«ææåçµè§å³è¯ç»åèé§ååå³»"],["bf40","ç·»",62],["bf80","ç¸ºç¸¼",4,"ç¹",4,"ç¹",21,"ä¿ç«£æµé¡éªååå¡å¯å¼æ©æ¥·å¯æ¨åå ªååç çåº·æ·ç³ ææäº¢çèæ·ç¤é å·èæ¯æ£µç£é¢ç§å£³å³å¯æ¸´åå»å®¢è¯¾è¯åå¦æ³åå­ç©ºæå­æ§æ å£æ£å¯æ¯å­çªè¦é·åºè£¤å¤¸å®æè·¨è¯åç­·ä¾©å¿«å®½æ¬¾å¡ç­çæ¡ç¿ç¶æ·åµäºçå²¿çª¥èµå¥é­å"],["c040","ç¹",35,"çº",23,"çºçºçº"],["c080","çº®çº´çº»çº¼ç»ç»¤ç»¬ç»¹ç¼ç¼ç¼ç¼·ç¼¹ç¼»",6,"ç½ç½",9,"ç½ç½é¦æ§æºå¤ææå°æ¬æ©å»éåæåè¡èè¾£å¦è±æ¥èµèå©ªæ æ¦ç¯®éå°æ¾è°°æ½è§æç¼çæ»¥çæ¦ç¼å»éææµªæå³ç¢èä½¬å§¥éªçæ¶åä¹é·é­è¾ç£ç´¯å¡åæèç±»æ³ªæ£±æ¥å·åæ¢¨çé»ç¯±ç¸ç¦»æ¼çæéé²¤ç¤¼èèåæ ä¸½åå±ç ¾åå©åä¾ä¿"],["c140","ç½ç½ç½ç½ç½ç½ç½ ç½£",4,"ç½«ç½¬ç½­ç½¯ç½°ç½³ç½µç½¶ç½·ç½¸ç½ºç½»ç½¼ç½½ç½¿ç¾ç¾",7,"ç¾ç¾ç¾",4,"ç¾",4,"ç¾ç¾ç¾ ç¾¢ç¾£ç¾¥ç¾¦ç¾¨",6,"ç¾±"],["c180","ç¾³",4,"ç¾ºç¾»ç¾¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿",4,"ç¿ç¿ç¿",5,"ç¿¢ç¿£ç¢ç«ç²æ²¥é¶åçå©ä¿©èè²è¿é°å»ææ¶å¸æè¸é¾æç¼ç»ç²®åæ¢ç²±è¯ä¸¤è¾éæ¾äº®è°æ©èåççå¯¥è¾½æ½¦äºæé£å»æåè£çå£çç³æç£·éä¸´é»é³æ·åèµåæç²è±é¶é¾éä¼¶ç¾åçµéµå²­é¢å¦ä»¤æºçæ¦´ç¡«é¦çåç¤æµæ³å­é¾èåç¬¼çª¿"],["c240","ç¿¤ç¿§ç¿¨ç¿ªç¿«ç¿¬ç¿­ç¿¯ç¿²ç¿´",6,"ç¿½ç¿¾ç¿¿èèèèèèèèèèèèèèè¡è£è¤è«",5,"è²è´è¹èºè¼è¾èèèèèèèèèèèèèèè"],["c280","èè",13,"è«",5,"è²",11,"éåæ¢éæ¥¼å¨æç¯æ¼éè¦å¢é¢åºçæ³å¤èé²éºç¢é²è·¯èµé¹¿æ½ç¦å½éæ®é©´åéä¾£æå±¥å±¡ç¼èæ°¯å¾çæ»¤ç»¿å³¦æå­ªæ»¦åµä¹±æ ç¥æ¡è½®ä¼¦ä»æ²¦çº¶è®ºèèºç½é»é£ç®©éª¡è£¸è½æ´éªç»å¦éº»çç èé©¬éªåååä¹°éº¦åè¿èçé¦è®æ»¡èæ¼æ¢æ¼«"],["c340","è¾èèèèèè",5,"èèèèèè£è¦è§è¨è¬è°è³èµè¶è¸è¹è»èè",4,"è",6,"èèè è¢è£è¦è®èµè·è¹è»è¾è¿èèèèèèèè"],["c380","èèèèèèèè",12,"è­è®è°è³è´èµè·è¹",4,"è¿è°©èè«ç²æ°å¿è½ç«èéæ¯çéå¯èåå¸½è²è´¸ä¹ç«ææ¢é¶éç¤æ²¡çåªéæ¯ç¾æ§å¯å¦¹åªé¨é·ä»¬èèæª¬çé°çæ¢¦å­ç¯éé¡ç³è¿·è°å¼¥ç±³ç§è§æ³èå¯å¹æ£ç ç»µåååå¨©ç¼é¢èæçèç§æ¸ºåºå¦èç­æ°æ¿ç¿ææ¯é½æèé¸£é­åå½è°¬æ¸"],["c440","è",5,"èèèèèèèèèè",4,"è¡è¢è£è¤è¦è¨èªè«è¬è¯è²è³èµè¶è·è¸èè",4,"èèèèèèè",5,"èèè",4,"è¤è¥"],["c480","è§è©è«",7,"è´",5,"è¼è½è¾è¿èèèèèèè",6,"æ¹èæ¨¡èç£¨æ©é­æ¹æ«è«å¢¨é»æ²«æ¼ å¯éè°çææç¡äº©å§æ¯å¢æ®å¹åææ¨ç®ç¦ç§ç©æ¿åªåé é£å¨çº³æ°ä¹å¥¶èå¥åç·é¾åæ èæ¼é¹æ·å¢é¦åå«©è½å¦®éåªæ³¥å°¼æä½ å¿è»éæººè«æå¹´ç¢¾æµæ»å¿µå¨é¿é¸å°¿æèå­½å®ééæ¶æ¨æ çåå®"],["c540","è",14,"è¤è¥è¦è¨è©è«è®",4,"èµ",5,"è½è¿èè",4,"èèèèè",5,"èè è¤è¥è¦è§è©è®è²èºè¼è½è¿"],["c580","èèèèèèèèèèèè",7,"èèèèèè ",7,"è©æ§æ³çæ­é®çº½èæµåå¼å¥´åªæå¥³æèçæªæ¦ç³¯è¯ºå¦æ¬§é¸¥æ®´èåå¶æ²¤åªè¶´ç¬å¸æç¶ææçå¾æ¹æ´¾ææ½çç£ç¼çå¤åä¹åºæèªèæåå¨ç®è¢è·æ³¡å¸èå¹è£´èµéªéä½©æ²å·çç °æ¨ç¹æ¾å½­è¬æ£ç¡¼ç¯·è¨æé¹æ§ç¢°å¯ç é¹æ¹æ«åçµæ¯"],["c640","èªè«è¬è­è±èµè¶è·è¸è»è¼èèèèèèèèèèèèèèèèè è¢è£è§è²èµè¶èºè»è¼è¿èèèèèèèèèèèè¢è§è¨è©èªè¬è­è®è°è²è³èµè¶è¸"],["c680","èºè¼",4,"èèèèèèèèèè",9,"è©èªè®è°è²è·è»è½å¤è¾ç²ç®å¹çå»å±è­¬ç¯åçéªé£æ¼ç¢ç¥¨æç¥æ¼é¢è´«åèä¹åªè¹èå¹³å­ç¶è¯å±å¡æ³¼é¢å©ç ´é­è¿«ç²åæéºä»èè¡è©è²åæ´åæ®æµ¦è°±æçææ¬ºæ æå¦»ä¸åæ¼ææ²å¶æ£å¥æ­§ç¦å´èé½æç¥ç¥éªèµ·å²ä¹ä¼å¯å¥ç å¨æ°è¿å¼æ±½æ³£è®«æ"],["c740","è¾è¿èèèèèè",4,"èè",4,"èè¢è°",6,"è¹èºè¾",6,"èèèèèèèèèèèèèèèèèè¡",6,"è¬è­è®"],["c780","è¯èµè»è¾è¿èèèèèèèèèèèèèèèèèèèè¢è£è¤è¦è§è¨è«è¬è­æ°æ´½çµæ¦ééåè¿ç­¾ä»è°¦ä¹¾é»é±é³åæ½é£æµè°´å åµæ¬ æ­æªåèç¾å¢è·å¼ºæ¢æ©é¹æ²ææ¡¥ç§ä¹ä¾¨å·§éæ¬ç¿å³­ä¿çªåèä¸æ¯çªé¦ä¾µäº²ç§¦ç´å¤è¹æç¦½å¯æ²éè½»æ°¢å¾å¿æ¸ææ´æ°°æé¡·è¯·åºç¼ç©·ç§ä¸é±çæ±åéæ³è¶åºèæ²èº¯å±é©±æ¸ "],["c840","è®è¯è³",4,"èºè»è¼è¾è¿èèèèèèèèè",5,"èèèè",5,"è©",7,"è²",5,"è¹èºè»è¾",7,"èèè"],["c880","è",6,"è",4,"èèèèè è¢è¤",4,"èªè®è¯è°è²è´è·è¹è»è¼åå¨¶é¾è¶£å»åé¢§æéæ³å¨çæ³ç¬å¸åç¼ºçç¸å´é¹æ¦·ç¡®éè£ç¾¤ç¶çåæç¤å£¤æå·è®©é¥¶æ°ç»æ¹ç­å£¬ä»äººå¿é§ä»»è®¤åå¦çº«æä»æ¥æè¸èè£èçæº¶å®¹ç»åææèè¹è åå­ºå¦è¾±ä¹³æ±å¥è¤¥è½¯é®èçéé°æ¶¦è¥å¼±ææ´è¨è®é³å¡èµä¸å"],["c940","è½",4,"èèèèèèè",7,"èèèèèèè è¢",12,"è°è±è³èµè¶è·è»è¼è¾èèèèèèèèèèèèèèè"],["c980","è",4,"èè¡è¢è¤è§",4,"è­è®è¯è±",10,"è½è¾èèèä¼æ£æ¡åä¸§æéªæ«å«çè²æ¶©æ£®å§èç æå¹æ²çº±å»å¥çç­æçè«æå±±å ç½è¡«éªéæèµ¡è³åæ±æç¼®å¢ä¼¤åèµæä¸å°è£³æ¢¢æç¨ç§èåºé¶å°å¨éµç»å¥¢èµèèèèµ¦æå°ææ¶ç¤¾è®¾ç ·ç³å»ä¼¸èº«æ·±å¨ ç»ç¥æ²å®¡å©¶çè¾ææ¸å£°çç¥ç²åç»³"],["ca40","è",8,"èèèèèèèèèèèèèèè è¢",8,"è­",9,"è¾",4,"èèèèè",10],["ca80","èèèèèèè",4,"è¥è¦è§è©",8,"è³èµè¶è·è¸è¼è½è¿èèççå©èå£å¸å¤±ç®æ½æ¹¿è¯å°¸è±åç³æ¾æ¶ä»é£èå®è¯å²ç¢ä½¿å±é©¶å§å¼ç¤ºå£«ä¸æ¿äºæ­èªéå¿æ¯åå¬éä»ä¾éé¥°æ°å¸æå®¤è§è¯æ¶æé¦å®å¯¿æå®åç¦å½è¬æ¢æ¢³æ®æè¾åèæ·çä¹¦èµå­°çè¯ææç½²èé»é¼ å±æ¯è¿°æ ææç«å¢åº¶æ°æ¼±"],["cb40","èèèè",6,"è",10,"è",6,"è¥è¦è§è©è«è¬è­è±",5,"è¸èº",6,"è",6,"è",4,"èè"],["cb80","èè",5,"è",6,"è¥è¦è§è¨èª",14,"æå·èæè¡°ç©å¸æ æ´éåç½è°æ°´ç¡ç¨å®ç¬é¡ºèè¯´ç¡æçæ¯æå¶æç§å¸ä¸æ­»èå¯ºå£åä¼ºä¼¼é¥²å·³æ¾è¸æé¢éå®è®¼è¯µæèæå½èé¥ä¿ç´ éç²å³å¡æº¯å®¿è¯èé¸èç®è½ééç»¥é«ç¢å²ç©éé§ç¥å­æç¬èæ¢­åç¼©çç´¢éæå¡ä»å®å¥¹å¡"],["cc40","è¹èºè¼è½è¾è",4,"è",10,"èèèèè",15,"è¨èª",13,"è¹èºè»è½è¾è¿è"],["cc80","è",11,"èèè",4,"èèèèè è¡è£",7,"ç­æè¹è¸èèæ¬å°æ³°éå¤ªææ±°åæè´ªç«æ»©åæªç°æ½­è°­è°å¦æ¯¯è¢ç¢³æ¢å¹ç­æ±¤å¡æªå æ£ èåç³åèººæ·è¶ç«ææ¶æ»ç»¦èæ¡éæ·é¶è®¨å¥ç¹è¤è¾ç¼èªæ¢¯åè¸¢éæé¢è¹å¼ä½æ¿åææ¶åå±å¤©æ·»å¡«ç°çæ¬èèææ¡è¿¢çºè·³è´´éå¸åå¬ç"],["cd40","è­è¯è°è²",6,"è",6,"è",4,"èè",5,"è",4,"è¥è¦è«è­è®è²è³è·è¸è¹è»",4,"èèèèèèèèèèèèèè"],["cd80","èè è¡è¢è£è¥è¦è§è¨èªè«è¬è¯èµè¶è·èºè»è¼è½è¿èèèèèèèèèèèèæ±å»·åäº­åº­æºèéæ¡é®ç³åéå½¤ç«¥æ¡¶æç­ç»çå·æå¤´éå¸ç§çªå¾å¾éæ¶å± åååæ¹å¢æ¨é¢è¿èè¤ªéåå±¯èææè±é¸µéé©®é©¼æ¤­å¦¥æå¾æåèæ´¼å¨ç¦è¢æ­ªå¤è±å¼¯æ¹¾ç©é¡½ä¸¸ç·å®ç¢æ½æçæå®å©ä¸èæ±ªçäº¡æç½å¾æºæå¿å¦å¨"],["ce40","èèèèè è¤è¦è§è¨èªè«è¬è­è¯è°è²è³èµè¶è¸è¹èºè¼è½è",6,"èèèèèèèèèèèè",5,"è¡è¢è¦",7,"è¯è±è²è³èµ"],["ce80","è·è¸è¹èºè¿èèèèèèèèè",4,"èèèè",6,"è ",4,"å·å¾®å±é¦è¿æ¡å´å¯æä¸ºæ½ç»´èèå§ä¼ä¼ªå°¾çº¬æªèå³çèåé­ä½æ¸­è°å°æ°å«çæ¸©èæé»çº¹å»ç¨³ç´é®å¡ç¿ç®æèæ¶¡çªææ¡å§æ¡æ²å·«åé¨ä¹æ±¡è¯¬å±æ èæ¢§å¾å´æ¯æ­¦äºæåèä¼ä¾®åæé¾æ¤ç©å¿å¡æè¯¯æçæè¥¿ç¡ç½æ°å»å¸é¡çº"],["cf40","è¥è¦è§è©èªè®è°è±è²è´è¶è·è¸è¹è»è¼è¾è¿è",4,"èèèè",4,"è",6,"èèèèè¡è¢è£è¤è¦è§è¨è©è«è¬è­è¯",9],["cf80","èºè»è¼è½è¿è è è è ",5,"è ",7,"è è è è è è ",4,"è £ç¨æ¯å¸æèå¤æçç¯æºªæ±çæªè¢­å¸­ä¹ åª³åé£æ´ç³»éæç»çè¾å£éè¾æå³¡ä¾ ç­ä¸å¦å¤åæé¨åä»é²çº¤å¸è´¤è¡è·é²æ¶å¼¦å«æ¾é©ç°ç®å¿èºé¦ç¾¡å®ªé·éçº¿ç¸å¢é¶é¦ç®±è¥æ¹ä¹¡ç¿ç¥¥è¯¦æ³åäº«é¡¹å··æ©¡ååè±¡è§ç¡éåå®å£éæ¶å®µæ·æ"],["d040","è ¤",13,"è ³",5,"è ºè »è ½è ¾è ¿è¡è¡è¡è¡",5,"è¡",5,"è¡è¡è¡è¡",6,"è¡¦è¡§è¡ªè¡­è¡¯è¡±è¡³è¡´è¡µè¡¶è¡¸è¡¹è¡º"],["d080","è¡»è¡¼è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢",4,"è¢",4,"è¢£è¢¥",5,"å°å­æ ¡èå¸ç¬ææ¥äºæ­èéåææºéªæèè°åæ¢°å¸è¹ææ³æ³»è°¢å±èªè¯éæ¬£è¾æ°å¿»å¿ä¿¡è¡æè¥ç©æºå´ååå½¢é¢è¡éå¹¸ææ§å§åå¶è¸åæ±¹éçä¼ä¿®ç¾æ½åéç§è¢ç»£å¢æéèåé¡»å¾è®¸èéåæ­åºçæ¤çµ®å©¿ç»ªç»­è½©å§å®£æ¬æç"],["d140","è¢¬è¢®è¢¯è¢°è¢²",4,"è¢¸è¢¹è¢ºè¢»è¢½è¢¾è¢¿è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£",4,"è£ è£¡è£¦è£§è£©",6,"è£²è£µè£¶è£·è£ºè£»è£½è£¿è¤è¤è¤",5],["d180","è¤è¤",4,"è¤è¤",4,"è¤",4,"è¤¢è¤£è¤¤è¤¦è¤§è¤¨è¤©è¤¬è¤­è¤®è¤¯è¤±è¤²è¤³è¤µè¤·éç£ç©ç»é´èå­¦ç©´éªè¡åçå¾ªæ¬è¯¢å¯»é©¯å·¡æ®æ±è®­è®¯éè¿åæ¼é¸¦é¸­åä¸«è½çèå´è¡æ¶¯éåäºè®¶çå½éçæ·¹çä¸¥ç èå²©å»¶è¨é¢éçæ²¿å¥æ©ç¼è¡æ¼è³å °çåç éåå½¦ç°å®´è°éªæ®å¤®é¸¯ç§§æ¨æ¬ä½¯ç¡ç¾æ´é³æ°§ä»°çå»æ ·æ¼¾éè°å¦ç¶"],["d240","è¤¸",8,"è¥è¥è¥",24,"è¥ ",5,"è¥§",19,"è¥¼"],["d280","è¥½è¥¾è¦è¦è¦è¦è¦",26,"æå°§é¥çªè°£å§å¬èè¯è¦èæ¤°åè¶ç·éå¶ä¹é¡µæä¸å¶æ³èå¤æ¶²ä¸å£¹å»æé±ä¾ä¼è¡£é¢å¤·éç§»ä»ªè°çæ²å®å§¨å½æ¤èåå·²ä¹ç£ä»¥èºææéå±¹äº¿å½¹èé¸èç«äº¦è£ææ¯å¿ä¹çæº¢è¯£è®®è°è¯å¼ç¿¼ç¿ç»èµè«å æ®·é³é´å§»åé¶æ·«å¯é¥®å°¹å¼é"],["d340","è¦¢",30,"è§è§è§è§è§è§è§è§è§è§è§è§ è§¡è§¢è§¤è§§è§¨è§©è§ªè§¬è§­è§®è§°è§±è§²è§´",6],["d380","è§»",4,"è¨",5,"è¨",21,"å°è±æ¨±å©´é¹°åºç¼¨è¹è¤è¥è§èè¿èµ¢çå½±é¢ç¡¬æ åæ¥ä½£èçåº¸éè¸è¹åæ³³æ¶æ°¸æ¿åç¨å¹½ä¼æ å¿§å°¤ç±é®éç¹æ²¹æ¸¸éæåå³ä½éè¯±åå¹¼è¿æ·¤äºçæ¦èæèä½ä¿é¾é±¼ææ¸æ¸éäºå¨±é¨ä¸å±¿ç¦¹å®è¯­ç¾½çåèéåéå»å³ªå¾¡ææ¬²ç±è²èª"],["d440","è¨",31,"è¨¿",8,"è©",21],["d480","è©",25,"è©º",6,"æµ´å¯è£é¢è±«é©­é¸³æ¸å¤åå£è¢åæ´è¾å­ååç¿æºç¼è¿èæ¿æ¨é¢æ°çº¦è¶è·é¥å²³ç²¤ææ¦éèäºé§åé¨åè¿è´éæéµå­åç ¸ææ ½åç¾å®°è½½åå¨å±ææèµèµèè¬é­ç³å¿è»æ£æ©æ¾¡è¤èºåªé çç¶ç¥è´£æ©åæ³½è´¼æå¢ææ¾èµ æå³æ¸£æ­è½§"],["d540","èª",7,"èª",7,"èª",46],["d580","è«",32,"é¡é¸ç¨æ æ¦¨åä¹ç¸è¯ææå®çªåºå¯¨ç»æ¯¡è©¹ç²æ²¾çæ©è¾å´­å±è¸æ å æç«æ¹ç»½æ¨ç« å½°æ¼³å¼ ææ¶¨æä¸å¸è´¦ä»èç´éææ­æ¾æ²¼èµµç§ç½©åèå¬é®æå²è°è¾èéèè¿æµçæççç §è»è´éä¾¦æç¹è¯éæ¯ééµè¸æ£çå¾ç°äºææ´æ¯æ­£æ¿"],["d640","è«¤",34,"è¬",27],["d680","è¬¤è¬¥è¬§",30,"å¸§çéè¯èææ¯å±èç¥è¢èæ±ä¹ç»èç´æ¤æ®æ§å¼ä¾åææ­¢è¶¾åªæ¨çº¸å¿ææ·è³è´ç½®å¸å³å¶æºç§©ç¨è´¨ççæ»æ²»çªä¸­çå¿ éè¡·ç»ç§è¿éä»²ä¼èå¨å·æ´²è¯ç²¥è½´èå¸åç±å®æ¼éª¤ç æ ªèæ±çªè¯¸è¯éç«¹çç®æç©å±ä¸»èæ±å©èè´®é¸ç­"],["d740","è­",31,"è­§",4,"è­­",25],["d780","è®",24,"è®¬è®±è®»è¯è¯è¯ªè°è°ä½æ³¨ç¥é©»æçªæ½ä¸ç è½¬æ°èµç¯æ¡©åºè£å¦æå£®ç¶æ¤é¥è¿½èµå ç¼è°åææåæ¡ç¢èéåçç¼æµå¹å¨èµå§¿æ»æ·å­ç´«ä»ç±½æ»å­èªæ¸å­é¬æ£è¸ªå®ç»¼æ»çºµé¹èµ°å¥æç§è¶³åæç¥è¯é»ç»é»çºå´éæç½ªå°éµæ¨å·¦ä½æåä½ååº§"],["d840","è°¸",8,"è±è±è±è±è±è±è±è±",7,"è±è±è±è±è±",5,"è±£",6,"è±¬",6,"è±´è±µè±¶è±·è±»",6,"è²è²è²è²"],["d880","è²è²è²",6,"è²è²è²è²",20,"äºä¸åä¸å»¿åä¸äºä¸é¬²å­¬å©ä¸¨ç¦ºä¸¿åä¹å¤­ç»å®æ°åè¤é¦æ¯ç¾é¼ä¸¶äºé¼ä¹ä¹©äºèå­å¬åä»ååå£å¥å®é¥èµååµå¦å®å¾èµå¦å£åååå­å³å¿åååå¡åè¯å½åååååç½äº»ä»ä»ä»ä»¨ä»¡ä»«ä»ä¼ä»³ä¼¢ä½¤ä»µä¼¥ä¼§ä¼ä¼«ä½ä½§æ¸ä½ä½"],["d940","è²®",62],["d980","è³­",32,"ä½ä½ä¼²ä¼½ä½¶ä½´ä¾ä¾ä¾ä¾ä½¾ä½»ä¾ªä½¼ä¾¬ä¾ä¿¦ä¿¨ä¿ªä¿ä¿ä¿£ä¿ä¿ä¿ä¿¸å©åä¿³å¬åå®å­ä¿¾ååå¥å¨å¾ååååå¬å»å¥å§å©åºååå­å¬å¦å®ååä»æ°½ä½ä½¥ä¿é¾ æ±ç±´å®å·½é»é¦åå¤å¹åè¨åå«å¤åäº åäº³è¡®è¢¤äºµèè£ç¦å¬´è ç¾¸å«å±å½å¼"],["da40","è´",14,"è´ èµèµèµèµèµ¥èµ¨èµ©èµªèµ¬èµ®èµ¯èµ±èµ²èµ¸",8,"è¶è¶è¶è¶è¶è¶è¶",4,"è¶è¶è¶",9,"è¶ è¶¡"],["da80","è¶¢è¶¤",12,"è¶²è¶¶è¶·è¶¹è¶»è¶½è·è·è·è·è·è·è·è·è·è·è·è·è·ååå¢å¥è® è®¦è®§è®ªè®´è®µè®·è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯ è¯¤è¯¨è¯©è¯®è¯°è¯³è¯¶è¯¹è¯¼è¯¿è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è° è°¡è°¥è°§è°ªè°«è°®è°¯è°²è°³è°µè°¶å©åºéé¢é¡é±éªé½é¼ééééé§é¬é²é´éééé°ééééé¬é¡é´é³é¶éº"],["db40","è·è·è·è·è· è·¡è·¢è·¥è·¦è·§è·©è·­è·®è·°è·±è·²è·´è·¶è·¼è·¾",6,"è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸",7,"è¸ è¸¡è¸¤",4,"è¸«è¸­è¸°è¸²è¸³è¸´è¸¶è¸·è¸¸è¸»è¸¼è¸¾"],["db80","è¸¿è¹è¹è¹è¹",4,"è¹",5,"è¹",11,"è¹§è¹¨è¹ªè¹«è¹®è¹±é¸é°ééé¾ééééé¦é¢éééé«é¯é¾éé¢éé£é±é¯é¹ééåå¥å¢å¬å­å¾å¿ååå°åç®çå»´åµå¼é¬¯å¶å¼çå·¯åå©å¡å¡¾å¢¼å£å£å©å¬åªå³å¹å®å¯åå»åå©åå«åå¼å»å¨å­å¶å³å­å¤åå²åå§å´åå åååååå¸å´å¯å¸å¤å"],["dc40","è¹³è¹µè¹·",4,"è¹½è¹¾èºèºèºèºèºèº",6,"èºèºèºèº",6,"èºèº",11,"èº­èº®èº°èº±èº³",6,"èº»",7],["dc80","è»",10,"è»",21,"å å å½å­å å å å¡å  å¡¥å¡¬å¢å¢å¢å¢é¦¨é¼æ¿è¹è½è¿èèè¨èèèèèè«è¸è¾è°èèè£èè·è®èèèè©è´è¡èªèèèè¤è¡èè·è¤èèèè´èèèè»èèèèèèè èèèèèèèè¼è´è±èèè¯èèèèèèè è­èºè³è¦è¥"],["dd40","è»¥",62],["dd80","è¼¤",32,"è¨èè©è¬èªè­è®è°è¸è³è´è èªèèèè¼è¶è©è½è¸è»èèè¨èºè¼èèè¥èå èèèè½èèè¸èèèèèèè¸è¹èªèèè¦è°è¡èèèèè³èèèºèè¸è¼èè©è¶èèè±è­èèèè¦è½èèè¿èºè è¡è¹è´èè¥è£èçè¸è°è¹èèº"],["de40","è½",32,"è½ªè¾è¾è¾è¾è¾ è¾¡è¾¢è¾¤è¾¥è¾¦è¾§è¾ªè¾¬è¾­è¾®è¾¯è¾²è¾³è¾´è¾µè¾·è¾¸è¾ºè¾»è¾¼è¾¿è¿è¿è¿"],["de80","è¿",4,"è¿è¿è¿è¿è¿è¿ è¿¡è¿£è¿§è¿¬è¿¯è¿±è¿²è¿´è¿µè¿¶è¿ºè¿»è¿¼è¿¾è¿¿éééééééèè»è¿è¼èèè¨è¤èèºç¢èè²è»è¤è¨èèè¹è®èèè¹è·è°èèèè¿è§èè©èè¼å»¾å¼å¤¼å¥è·å¥å¥å¥åå°¢å°¥å°¬å°´ææªææ»ææææ®æ¢æ¶æ¹æææ­æ¶æ±æºææ´æ­æ¬ææ©æ®æ¼æ²æ¸æ æ¿ææææææ¾æææææ ææ¦æ¡æææ­æ"],["df40","ééé£é¤é¥é§",5,"é°",4,"é·é¹éºé½é¿ééééé",4,"ééééééé",5,"é¤é¦é§é©éªé«é¬é¯",4,"é¶",6,"é¾é"],["df80","ééééééé",4,"ééééééééé é¤é¥é§é¨é©é«é­é²é·é¼é½é¿éæºæ·æ¸ææºææææ¤æ¢ææ¥æ®å¼å¿çå¼åå±å½å©å¨å»åååååååååå¡ååå£å²ååå·å±å¤åååå¶å¦ååå­åå´åå§å¦ååå²å£åå»å¿ååååå©åªå¤ååååå§å å½åå³å¢å£ååå§åªå§ååµåå­ååå¿åå¼"],["e040","éééééééééééééééééé é£é¤é¥é©éªé¬é®é°é±é²é³éµé¶é·é¹éºé»é¼é¿éééé",19,"ééé"],["e080","ééé é¡é¤",10,"é°é²",6,"éº",8,"éå·ååµå¶å·å³å°ååååå±å¹åååå¾ååå»åå½å¾åååªå·åååå«å¬åå¦ååå¯å¥å²å³ååå¨åµå¤è¾ååååå¤å£å¾åå§å­åå¹åå¬åå¢åååååå¤å±å«å»å¼ååå¯åååå¡åµå«å¹å¿ååååå¸å¸å¸å¸å¸±å¸»å¸¼"],["e140","éééééééééééééé é¦é§é¨é«é­é³éºé»é¼é",4,"éééééé",6,"é",5,"é¤",5,"é«é¬é°é±é²é³é¶é·é¸é¹é»"],["e180","é¼",10,"éééé",9,"é",8,"å¸·å¹å¹å¹å¹å¹¡å²å±ºå²å²å²å²å²å²å²å²å²å²µå²¢å²½å²¬å²«å²±å²£å³å²·å³å³å³¤å³å³¥å´å´å´§å´¦å´®å´¤å´å´å´åµå´¾å´´å´½åµ¬åµåµ¯åµåµ«åµåµåµ©åµ´å¶å¶å¶è±³å¶·å·å½³å½·å¾å¾å¾å¾å¾å¾å¾å¾¨å¾­å¾µå¾¼è¡¢å½¡ç­ç°ç´ç·ç¸çççççç¨ç¯ç©ç²ç´ç·çç³ççº"],["e240","é¦",62],["e280","é¥",32,"ç»ççç¡ççççç¢ç¹ç¥ç¬ç¸ç±çççç ç¬ç¯ç¾èå¤¥é£§å¤¤å¤é¥£é¥§",5,"é¥´é¥·é¥½é¦é¦é¦é¦é¦é¦é¦é¦é¦é¦åºåºåºåºåº¥åº åº¹åºµåº¾åº³èµå»å»å»å»¨å»ªèºå¿å¿å¿å¿æå¿®æå¿¡å¿¤å¿¾ææå¿ªå¿­å¿¸ææµæ¦ææææ©æ«ææ¿æ¡æ¸æ¹æ»æºæ"],["e340","é",45,"éµ",16],["e380","é",7,"é",24,"æªæ½æææ­ææææææ¬æ»æ±æææææ´æ æ¦ææ£æ´æææ«ææµæ¬ææ§æ·ææµå¿é³é©é«é±é³éµé¶é¼é¾éééééééééééééééä¸¬ç¿ææ°µæ±æ±æ±æ²£æ²æ²æ²æ²æ±¨æ±©æ±´æ±¶æ²æ²©æ³æ³æ²­æ³·æ³¸æ³±æ³æ²²æ³ æ³æ³ºæ³«æ³®æ²±æ³æ³¯æ³¾"],["e440","é¨",5,"é¯",24,"é",31],["e480","é©",32,"æ´¹æ´§æ´æµæµæ´æ´æ´æ´æ´«æµæ´®æ´µæ´æµæµæµæ´³æ¶æµ¯æ¶æ¶ æµæ¶æ¶æµæµ æµ¼æµ£æ¸æ·æ·æ·æ¸æ¶¿æ· æ¸æ·¦æ·æ·æ¸æ¶«æ¸æ¶®æ¸«æ¹®æ¹æ¹«æº²æ¹æºæ¹æ¹æ¸²æ¸¥æ¹æ»æº±æºæ» æ¼­æ»¢æº¥æº§æº½æº»æº·æ»æº´æ»æºæ»æºæ½¢æ½æ½æ¼¤æ¼æ»¹æ¼¯æ¼¶æ½æ½´æ¼ªæ¼æ¼©æ¾æ¾æ¾æ½¸æ½²æ½¼æ½ºæ¿"],["e540","é",51,"é¿",10],["e580","é",31,"é«æ¿æ¾§æ¾¹æ¾¶æ¿æ¿¡æ¿®æ¿æ¿ æ¿¯çç£çç¹çµççå®å®å®å®å®¥å®¸ç¯éªæ´å¯¤å¯®è¤°å¯°è¹è¬è¾¶è¿è¿è¿¥è¿®è¿¤è¿©è¿¦è¿³è¿¨éééé¦éééé¡éµé¶é­é¯ééééé¨éé¢éæ¹é´é½ééééå½å½å½å½å°»å«å±å±å­±å±£å±¦ç¾¼å¼ªå¼©å¼­è´å¼¼é¬»å±®å¦å¦å¦å¦©å¦ªå¦£"],["e640","é¬",34,"é",27],["e680","é¬",29,"éééå¦å§å¦«å¦å¦¤å§å¦²å¦¯å§å¦¾å¨å¨å§å¨å§£å§å§¹å¨å¨å¨²å¨´å¨å¨£å¨å©å©§å©å©å¨¼å©¢å©µè¬åªªåªå©·å©ºåª¾å««åª²å«å«åª¸å« å«£å«±å«å«¦å«å«å¬å¬å¬å¬²å¬·å­å°å°å­å­¥å­³å­å­å­¢é©µé©·é©¸é©ºé©¿é©½éªéªéªéªéªéªéªéªéªéªéªéªéªéªéª éª¢éª£éª¥éª§çºçº¡çº£çº¥çº¨çº©"],["e740","é",7,"é",54],["e780","é",32,"çº­çº°çº¾ç»ç»ç»ç»ç»ç»ç»ç»ç»ç»ç» ç»¡ç»¨ç»«ç»®ç»¯ç»±ç»²ç¼ç»¶ç»ºç»»ç»¾ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼¡",6,"ç¼ªç¼«ç¼¬ç¼­ç¼¯",4,"ç¼µå¹ºç¿å·ç¾éççç®ç¢ççççç·ç³çççç¥çé¡¼çç©ç§ççºç²ççªçç¦ç¥ç¨ç°ç®ç¬"],["e840","é¯",14,"é¿",43,"é¬é­é®é¯"],["e880","é°",20,"ééééééééé¦é»éé çççççççç·ç­ç¾çççççççç¨ç©çç§ççºéªé«é¬æææææ©æ¥ææªæ³ææ§æµæ¨ææ­ææ·æ¼æ°æ ææ æ©æ°æ ææµææ³ææ ææ¸æ¢æ ææ½æ ²æ ³æ¡ æ¡¡æ¡æ¡¢æ¡æ¡¤æ¢æ æ¡æ¡¦æ¡æ¡§æ¡æ ¾æ¡æ¡æ ©æ¢µæ¢æ¡´æ¡·æ¢æ¡«æ£æ¥®æ£¼æ¤æ¤ æ£¹"],["e940","é§é³é½éééééé é®é´éµé·",7,"é",42],["e980","é«",32,"æ¤¤æ£°æ¤æ¤æ¥æ££æ¤æ¥±æ¤¹æ¥ æ¥æ¥æ¦æ¥«æ¦æ¦æ¥¸æ¤´æ§æ¦æ¦æ§æ¦æ¥¦æ¥£æ¥¹æ¦æ¦§æ¦»æ¦«æ¦­æ§æ¦±æ§æ§æ§æ¦æ§ æ¦æ§¿æ¨¯æ§­æ¨æ¨æ©¥æ§²æ©æ¨¾æª æ©æ©æ¨µæªæ©¹æ¨½æ¨¨æ©æ©¼æªæªæª©æªæª«ç·çæ®æ®æ®æ®æ®æ®æ®æ®æ®æ®¡æ®ªè½«è½­è½±è½²è½³è½µè½¶è½¸è½·è½¹è½ºè½¼è½¾è¾è¾è¾è¾è¾"],["ea40","é",27,"é¬é¿éééééé é£",6,"é«é¬é­é¯é°é·é¸é¹éºé¾éééééééééé"],["ea80","ééééééé é£é¥é¦é«é­",4,"é³é¸",12,"éééè¾è¾è¾è¾è¾è»æææææ¢æ¡æ¥æ¤æ¬è§ç¯ç´ç¿çççæ´æ®æ¯æ°æææ²æææçæ·ææ´æ±æ¶æµèææææææ¡ææ·æææ§ææ¾æææ¦æ©è´²è´³è´¶è´»è´½èµèµèµèµèµèµèµèµèµè§è§è§è§è§è§è§è§ç®ççç¦ç¯ç¾ç¿çççççææ²æ°"],["eb40","éééééééééé",9,"é¨",7,"é±é²é´éµé·é¸éºé»é¿éééééééééé",9,"é¡",6,"é«"],["eb80","é¬é­é®é°é±é²é´éµé¸éºé»é¼é½é¿éééééééééééé",4,"ééé æ¿æèæ¯ªæ¯³æ¯½æ¯µæ¯¹æ°æ°æ°æ°æ°æ°æ°æ°æ°¡æ°©æ°¤æ°ªæ°²æµææ«çççç°è¢åèèèè¼æè½è±è«è­è´è·è§è¨è©èªèèèèèèæèè«è±è´è­èèè²è¼æèè±è¶èè¬èè²èèèè´èèè±è è©è¼è½è­è§å¡åªµèèèæ»è£èªèæ¦èè»"],["ec40","é¡",8,"é«é¬é®é¯é±é³",4,"éºé»é¼é½é¿",18,"ééééééééé£é¤é¦é§é¨éª",7],["ec80","é²éµé·",4,"é½",7,"é",4,"ééééééééé",4,"èè¦æ¬¤æ¬·æ¬¹æ­æ­æ­é£é£é£é£é£é£æ®³å½æ¯è§³æé½ææ¼æææææææççççç»çç·ç«ç±ç¨ççççç¯ç±ç³çç¨çç²çç¸çºçç³çµç¨ç ç çç§ç¹çç¨ç¬çç¦ç¹æ¾æ½æææç¤»ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥¢ç¥ç¥ ç¥¯ç¥§ç¥ºç¦ç¦ç¦ç¦§ç¦³å¿å¿"],["ed40","ééé¡é¢é¤",6,"é¬é®é°é±é³éµ",46],["ed80","é¤é¥é¨é®",4,"é´é·",23,"æ¼æææ§æææ£æ«ææææ©ææææèè¿æ²æ³¶æ·¼ç¶ç¸ç ç ç ç ç æ«ç ­ç ç ç ¹ç ºç »ç ç ¼ç ¥ç ¬ç £ç ©ç¡ç¡­ç¡ç¡ç ¦ç¡ç¡ç¡ç¡ªç¢ç¢ç¢ç¢ç¢ç¢¡ç¢£ç¢²ç¢¹ç¢¥ç£ç£ç£ç£¬ç£²ç¤ç£´ç¤ç¤¤ç¤ç¤´é¾é»¹é»»é»¼ç±ççç¹çççç¢çç­ç¦çµç¸çççççç¨"],["ee40","é ",62],["ee80","é¡",32,"ç¢ç¥ç¿çç½ççççç ç°çµç½çºçççççç²ç¹çç½ç½¡ç½è©ç½¨ç½´ç½±ç½¹ç¾ç½¾çç¥è ²éééééééééééééééé£é¤é«éªé­é¬é¯é°é²é´é¶",4,"é¼é½é¿éé",6,"éééééééééééé é¢é¤é¥é§é¨éª"],["ef40","é¡¯",5,"é¢é¢é¢é¢é¢é¢£é¢¨",37,"é£é£é£é£é£é£é£é£é£ ",4],["ef80","é£¥é£¦é£©",30,"é©é«é®é¯é³é´éµé·é¹é¼é½é¿éééééééééé",4,"éééééé¢éªé«é©é¬é±é²é´é¶é·é¸é¼é¾é¿ééµééééééééééééééééééé¡é¢é¤",8,"é¯é±é²é³éºç§ç¬éç§ç§­ç§£ç§«ç¨åµç¨ç¨ç¨ç¨"],["f040","é¤",4,"é¤é¤é¤",28,"é¤¯",26],["f080","é¥",9,"é¥",12,"é¥¤é¥¦é¥³é¥¸é¥¹é¥»é¥¾é¦é¦é¦ç¨¹ç¨·ç©é»é¦¥ç©°ççççç¤çç ç¬é¸ é¸¢é¸¨",4,"é¸²é¸±é¸¶é¸¸é¸·é¸¹é¸ºé¸¾é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹£é¹¦",6,"é¹±é¹­é¹³çççç çç¬ç£ç³ç´ç¸çç±ç°ççççç£ç¨ç¦ç¤ç«ç§çç±ç¼ç¿ççççççç¥ççç"],["f140","é¦é¦é¦",10,"é¦¦é¦§é¦©",47],["f180","é§",32,"çç¼ç¢ç çç­ç°ç¿çµçç¾ç³çççççç«ç¯ç¿ç«¦ç©¸ç©¹çªçªçªçªçª¦çª çª¬çª¨çª­çª³è¡¤è¡©è¡²è¡½è¡¿è¢è¢¢è£è¢·è¢¼è£è£¢è£è££è£¥è£±è¤è£¼è£¨è£¾è£°è¤¡è¤è¤è¤è¤è¤´è¤«è¤¶è¥è¥¦è¥»çè¥ç²ç´çèèèèè è¢è¥è¦è§è©è¨è±èèµèèèèè©è±è¦é¡¸é¢é¢"],["f240","é§º",62],["f280","é¨¹",32,"é¢é¢é¢é¢é¢é¢é¢é¢é¢é¢¡é¢¢é¢¥é¢¦èèè¬è®è¿èºè¼è»è¨èèè¬èè§è£èªèè©è¶èèµèè°èºè±è¯èèè´è©è±è²è­è³èèèè´èèèèèè¸èèèèè£è»èè¥è®èè¾èè´è±è©è·è¿èè¢è½è¾è»è è°èè®èèè£è¼è¤èè¥èè¯è¨è"],["f340","é©",17,"é©²éªéªéªéªéªéªéªéª¦éª©",6,"éª²éª³éª´éªµéª¹éª»éª½éª¾éª¿é«é«é«",4,"é«é«é«é«é«é«é«é«é«é«é«é«é«"],["f380","é«é«é« é«¢é«£é«¤é«¥é«§é«¨é«©é«ªé«¬é«®é«°",8,"é«ºé«¼",6,"é¬é¬é¬èèèè­èèè«è¥è¬èµè³èèè½èèèèèªè è®è è è¾è è è ¡è ¹è ¼ç¼¶ç½ç½ç½èç«ºç«½ç¬ç¬ç¬ç¬ç¬ç¬«ç¬ç­ç¬¸ç¬ªç¬ç¬®ç¬±ç¬ ç¬¥ç¬¤ç¬³ç¬¾ç¬ç­ç­ç­ç­µç­ç­ç­ ç­®ç­»ç­¢ç­²ç­±ç®ç®¦ç®§ç®¸ç®¬ç®ç®¨ç®ç®ªç®ç®¢ç®«ç®´ç¯ç¯ç¯ç¯ç¯ç¯¥ç¯¦ç¯ªç°ç¯¾ç¯¼ç°ç°ç°"],["f440","é¬é¬",5,"é¬é¬é¬é¬",10,"é¬ é¬¡é¬¢é¬¤",10,"é¬°é¬±é¬³",7,"é¬½é¬¾é¬¿é­é­é­é­é­é­é­é­é­é­",5],["f480","é­",32,"ç°ç°ªç°¦ç°¸ç±ç±è¾èèèè¬è¡è¡è¢è£è­è¯è¨è«è¸è»è³è´è¾èèèèèèè¨è¡¾è¢è¢è£è£è¥ç¾ç¾ç¾§ç¾¯ç¾°ç¾²ç±¼æç²ç²ç²ç²ç²¢ç²²ç²¼ç²½ç³ç³ç³ç³ç³ç³ç³ç³¨è®æ¨ç¾¿ç¿ç¿ç¿¥ç¿¡ç¿¦ç¿©ç¿®ç¿³ç³¸çµ·ç¶¦ç¶®ç¹çºéº¸éº´èµ³è¶è¶è¶è¶±èµ§èµ­è±è±ééééé¤"],["f540","é­¼",62],["f580","é®»",32,"é¢é¡é°é©é¯é½é¾é²é´é¹éééééé¢é£éªé­é®é¯éµé´éºè±é¹¾è¶¸è·«è¸è¹è¹©è¶µè¶¿è¶¼è¶ºè·è·è·è·è·è·è·è·è·è·¬è··è·¸è·£è·¹è·»è·¤è¸è·½è¸è¸è¸è¸¬è¸®è¸£è¸¯è¸ºè¹è¸¹è¸µè¸½è¸±è¹è¹è¹è¹è¹è¹è¹°è¹¶è¹¼è¹¯è¹´èºèºèºèºèºèºè±¸è²è²è²è²è²æè§è§è§è§"],["f640","é¯",62],["f680","é°",32,"è§¥è§«è§¯è¨¾è¬¦éé©é³é¯ééééééªé­é°é¾é¾é¾é¾",5,"é¾é»¾é¼é¼é¹é¼é½ééç¿é éé®éé¾éªééé¾é«é±¿é²é²é²é²é²ç¨£é²é²é²é²é²é²é²é²é²é²",5,"é²¥",4,"é²«é²­é²®é²°",7,"é²ºé²»é²¼é²½é³é³é³é³é³é³"],["f740","é°¼",62],["f780","é±»é±½é±¾é²é²é²é²é²é²é²é²é²é²é²é²é²é²ªé²¬é²¯é²¹é²¾",4,"é³é³é³é³é³é³é³ é³¡é³",4,"é³é³é³é³é³é³é³é³é³é³¢é¼ééééé¯é«é£é²é´éª±éª°éª·é¹éª¶éªºéª¼é«é«é«é«é«é«é«é­é­é­é­é­é­é­é£¨é¤é¤®é¥é¥é«é«¡é«¦é«¯é««é«»é«­é«¹é¬é¬é¬é¬é¬£éº½éº¾ç¸»éºéºéºéºéºééºéºé»é»é»é» é»é»¢é»©é»§é»¥é»ªé»¯é¼¢é¼¬é¼¯é¼¹é¼·é¼½é¼¾é½"],["f840","é³£",62],["f880","é´¢",32],["f940","éµ",62],["f980","é¶",32],["fa40","é¶£",62],["fa80","é·¢",32],["fb40","é¸",27,"é¸¤é¸§é¸®é¸°é¸´é¸»é¸¼é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹ é¹¡é¹¢é¹¥é¹®é¹¯é¹²é¹´",9,"éº"],["fb80","éºéºéºéºéºéºéºéº",5,"éº",8,"éºéº ",5,"éº§éº¨éº©éºª"],["fc40","éº«",8,"éºµéº¶éº·éº¹éººéº¼éº¿",4,"é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»¡é»£é»¤é»¦é»¨é»«é»¬é»­é»®é»°",8,"é»ºé»½é»¿",6],["fc80","é¼",4,"é¼é¼é¼é¼é¼é¼é¼é¼é¼",5,"é¼¡é¼£",8,"é¼­é¼®é¼°é¼±"],["fd40","é¼²",4,"é¼¸é¼ºé¼¼é¼¿",4,"é½",10,"é½",38],["fd80","é½¹",5,"é¾é¾é¾",11,"é¾é¾é¾é¾¡",4,"ï¤¬ï¥¹ï¦ï§§ï§±"],["fe40","ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ ï¨¡ï¨£ï¨¤ï¨§ï¨¨ï¨©"]]');
            }
          ),
          /***/
          77348: (
            /***/
            function(l) {
              l.exports = JSON.parse('[["0","\\u0000",127],["8141","ê°ê°ê°ê°ê°",4,"ê°ê°ê°ê°¡ê°¢ê°£ê°¥",6,"ê°®ê°²ê°³ê°´"],["8161","ê°µê°¶ê°·ê°ºê°»ê°½ê°¾ê°¿ê±",9,"ê±ê±",5,"ê±"],["8181","ê±ê±ê±ê±ê±ê±",18,"ê±²ê±³ê±µê±¶ê±¹ê±»",4,"ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²",6,"ê²ê²¢",5,"ê²«ê²­ê²®ê²±",6,"ê²ºê²¾ê²¿ê³ê³ê³ê³ê³ê³ê³ê³ê³ê³",7,"ê³ê³",7,"ê³¢ê³£ê³¥ê³¦ê³©ê³«ê³­ê³®ê³²ê³´ê³·",4,"ê³¾ê³¿ê´ê´ê´ê´ê´",4,"ê´ê´ê´ê´"],["8241","ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´¡",7,"ê´ªê´«ê´®",5],["8261","ê´¶ê´·ê´¹ê´ºê´»ê´½",6,"êµêµêµ",5,"êµêµêµêµêµêµ"],["8281","êµ",7,"êµ¢êµ¤",7,"êµ®êµ¯êµ±êµ²êµ·êµ¸êµ¹êµºêµ¾ê¶ê¶",4,"ê¶ê¶ê¶ê¶ê¶ê¶",10,"ê¶",5,"ê¶¥",17,"ê¶¸",7,"ê·ê·ê·ê·ê·ê·",6,"ê·ê·",7,"ê·ê·ê·ê·¡ê·¢ê·£ê·¥",18],["8341","ê·ºê·»ê·½ê·¾ê¸",5,"ê¸ê¸ê¸",5,"ê¸",7],["8361","ê¸",18,"ê¸²ê¸³ê¸µê¸¶ê¸¹ê¸»ê¸¼"],["8381","ê¸½ê¸¾ê¸¿ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹",4,"ê¹ê¹¢ê¹£ê¹¤ê¹¦ê¹§ê¹ªê¹«ê¹­ê¹®ê¹¯ê¹±",6,"ê¹ºê¹¾",5,"êº",5,"êº",46,"êº¿ê»ê»ê»ê»",6,"ê»ê»",5,"ê»ê»ê»",8],["8441","ê»¦ê»§ê»©ê»ªê»¬ê»®",5,"ê»µê»¶ê»·ê»¹ê»ºê»»ê»½",8],["8461","ê¼ê¼ê¼ê¼ê¼ê¼ê¼ê¼",18],["8481","ê¼¤",7,"ê¼®ê¼¯ê¼±ê¼³ê¼µ",6,"ê¼¾ê½ê½ê½ê½ê½ê½",5,"ê½",10,"ê½",5,"ê½¦",18,"ê½º",5,"ê¾ê¾ê¾ê¾ê¾ê¾ê¾",6,"ê¾ê¾ê¾ê¾",5,"ê¾",26,"ê¾ºê¾»ê¾½ê¾¾"],["8541","ê¾¿ê¿",5,"ê¿ê¿ê¿",4,"ê¿",6,"ê¿",4],["8561","ê¿¢",5,"ê¿ª",5,"ê¿²ê¿³ê¿µê¿¶ê¿·ê¿¹",6,"ëë"],["8581","ë",6,"ëëëëëëë",6,"ë",9,"ë©",26,"ëëëëëëëëëëëëëëë",29,"ë¾ë¿ëëëë",6,"ëëë",5,"ëëëë£ë¤"],["8641","ë¥ë¦ë§ëªë°ë²ë¶ë·ë¹ëºë»ë½",6,"ëë",5,"ë"],["8661","ëëëëë",6,"ë¡ë¢ë£ë¤ë¦",10],["8681","ë±",22,"ëëëëëëëëëëë",4,"ë¦ë§ë©ëªë«ë­",6,"ë¶ëº",5,"ëëëëëë",6,"ëëëëëëëëëëë¡",22,"ëºë»ë½ë¾ë¿ëë",4,"ëëëëëëëëëëëëë"],["8741","ë",9,"ë©",15],["8761","ë¹",18,"ëëëëëëë"],["8781","ë",5,"ëë ",7,"ëªë«ë­ë®ë¯ë±",7,"ëºë¼ë¾",5,"ëëëëë",6,"ëëë",5,"ë¡",18,"ëµ",6,"ë½",26,"ëëëëëëë¡",6,"ëª",4],["8841","ë¯",4,"ë¶",5,"ë½",6,"ëëëë",4],["8861","ëëëëëëë",4,"ë¢ë¤ë§ë¨ë©ë«ë­ë®ë¯ë±ë²ë³ëµë¶ë·"],["8881","ë¸",15,"ëëëëëëë",4,"ëëëëë ë¡ë£ë§ë©ëªë°ë±ë²ë¶ë¼ë½ë¾ëëëëëë",6,"ëë",5,"ë",54,"ëëëëë ë¡ë¢ë£"],["8941","ë¦ë¨ëªë¬ë­ë¯ë²ë³ëµë¶ë·ë¹",6,"ëë",5,"ë"],["8961","ëëëëëë",10,"ë¢",5,"ë©ëªë«ë­"],["8981","ë®",21,"ëëëëëëëëëëëëëëëë¡ë¢ë£ë¥ë¦ë§ë©",18,"ë½",18,"ë",6,"ëëëëëëë¡",6,"ëªë¬",7,"ëµ",15],["8a41","ë",10,"ëëëëëë",6,"ë¢ë¤ë¦"],["8a61","ë§",4,"ë­",18,"ëë"],["8a81","ë",4,"ë",19,"ë",5,"ë¥ë¦ë§ë©ëªë«ë­",7,"ë¶ë¸ëº",5,"ëëëëëëë",6,"ëëëëë",5,"ëëë¡ë¢ë¥ë§",4,"ë®ë°ë²",5,"ë¹",26,"ëëëëë"],["8b41","ë",5,"ë¦ë«",4,"ë²ë³ëµë¶ë·ë¹",6,"ëë"],["8b61","ëëëëëëëëëë",6,"ëë¢",8],["8b81","ë«",52,"ë¢ë£ë¥ë¦ë§ë©ë¬ë­ë®ë¯ë²ë¶",4,"ë¾ë¿ëëëë",6,"ëë",5,"ë",18,"ë­",18],["8c41","ë",15,"ëëëëëë",4],["8c61","ë",6,"ë¦",5,"ë­",6,"ëµ",5],["8c81","ë»",12,"ë",26,"ë¥ë¦ë§ë©",50,"ëëë¡ë¢ë£ë¥",5,"ë­ë®ë¯ë°ë²",16],["8d41","ë",16,"ë",8],["8d61","ë",17,"ë±ë²ë³ëµë¶ë·ë¹ëº"],["8d81","ë»",4,"ëëëë",33,"ëªë«ë­ë®ë±",6,"ëºë¼",7,"ëëëëëëë",6,"ë",9,"ë¡ë¢ë£ë¥ë¦ë§ë©",6,"ë²ë´ë¶",5,"ë¾ë¿ëëëë",6,"ëëëëëëëë"],["8e41","ëë¡",6,"ëªë®",5,"ë¶ë·ë¹",8],["8e61","ë",4,"ëë",19],["8e81","ë",13,"ë®ë¯ë±ë²ë³ëµ",6,"ë¾ë ",4,"ë ë ë ë ë ë ",6,"ë ë ë ",5,"ë ¦ë §ë ©ë ªë «ë ­",6,"ë ¶ë º",5,"ë¡ë¡ë¡ë¡",11,"ë¡ë¡",7,"ë¡ë¡ë¡¡ë¡¢ë¡£ë¡¥",6,"ë¡®ë¡°ë¡²",5,"ë¡¹ë¡ºë¡»ë¡½",7],["8f41","ë¢",7,"ë¢",17],["8f61","ë¢ ",7,"ë¢©",6,"ë¢±ë¢²ë¢³ë¢µë¢¶ë¢·ë¢¹",4],["8f81","ë¢¾ë¢¿ë£ë£ë£",5,"ë£ë£ë£ë£ë£ë£ë£",7,"ë£ë£ ë£¢",5,"ë£ªë£«ë£­ë£®ë£¯ë£±",6,"ë£ºë£¼ë£¾",5,"ë¤",18,"ë¤",6,"ë¤¡",26,"ë¤¾ë¤¿ë¥ë¥ë¥ë¥",6,"ë¥ë¥ë¥ë¥",5],["9041","ë¥ë¥ë¥ë¥ë¥ë¥¡",6,"ë¥ªë¥¬ë¥®",5,"ë¥¶ë¥·ë¥¹ë¥ºë¥»ë¥½"],["9061","ë¥¾",5,"ë¦ë¦ë¦ë¦ë¦",15],["9081","ë¦",12,"ë¦®ë¦¯ë¦±ë¦²ë¦³ë¦µ",6,"ë¦¾ë§ë§",5,"ë§ë§ë§ë§",4,"ë§ë§ë§ë§ ë§¢ë§¦ë§§ë§©ë§ªë§«ë§­",6,"ë§¶ë§»",4,"ë¨",5,"ë¨",11,"ë¨",33,"ë¨ºë¨»ë¨½ë¨¾ë¨¿ë©ë©ë©ë©ë©"],["9141","ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©",6,"ë©¦ë©ª",5],["9161","ë©²ë©³ë©µë©¶ë©·ë©¹",9,"ëªëªëªëªëªëª",5],["9181","ëª",20,"ëªªëª­ëª®ëª¯ëª±ëª³",4,"ëªºëª¼ëª¾",5,"ë«ë«ë«ë«",14,"ë«",33,"ë«½ë«¾ë«¿ë¬ë¬ë¬ë¬",7,"ë¬ë¬ë¬",5,"ë¬ë¬ë¬ë¬ë¬ë¬ë¬¡",6],["9241","ë¬¨ë¬ªë¬¬",7,"ë¬·ë¬¹ë¬ºë¬¿",4,"ë­ë­ë­ë­ë­ë­ë­ë­"],["9261","ë­ë­ë­ë­ë­",7,"ë­¢ë­¤",7,"ë­­",4],["9281","ë­²",21,"ë®ë®ë®ë®ë®ë®ë®",18,"ë®¥ë®¦ë®§ë®©ë®ªë®«ë®­",6,"ë®µë®¶ë®¸",7,"ë¯ë¯ë¯ë¯ë¯ë¯ë¯",6,"ë¯ë¯ë¯",35,"ë¯ºë¯»ë¯½ë¯¾ë°"],["9341","ë°",4,"ë°ë°ë°ë°ë°ë°ë°ë° ë°¡ë°¢ë°£ë°¦ë°¨ë°ªë°«ë°¬ë°®ë°¯ë°²ë°³ë°µ"],["9361","ë°¶ë°·ë°¹",6,"ë±ë±ë±ë±ë±ë±ë±ë±ë±",8],["9381","ë±ë±ë±ë±",37,"ë²ë²ë²ë²ë²ë²",4,"ë²ë²ë²",4,"ë²¢ë²£ë²¥ë²¦ë²©",6,"ë²²ë²¶",5,"ë²¾ë²¿ë³ë³ë³ë³",7,"ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³",22,"ë³·ë³¹ë³ºë³»ë³½"],["9441","ë³¾",5,"ë´ë´ë´",5,"ë´ë´ë´ë´",8],["9461","ë´",5,"ë´¥",6,"ë´­",12],["9481","ë´º",5,"ëµ",6,"ëµëµëµëµëµëµ",6,"ëµ",9,"ëµ¥ëµ¦ëµ§ëµ©",22,"ë¶ë¶ë¶ë¶ë¶",4,"ë¶ë¶ë¶ë¶ë¶ë¶ë¶",6,"ë¶¥",10,"ë¶±",6,"ë¶¹",24],["9541","ë·ë·ë·ë·ë·ë·ë·ë·",11,"ë·ª",5,"ë·±"],["9561","ë·²ë·³ë·µë·¶ë··ë·¹",6,"ë¸ë¸ë¸ë¸",5,"ë¸ë¸ë¸ë¸ë¸"],["9581","ë¸",6,"ë¸ë¸ ",35,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹",4,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹¢ë¹£ë¹¥ë¹¦ë¹§ë¹©ë¹«",4,"ë¹²ë¹¶",4,"ë¹¾ë¹¿ëºëºëºëº",6,"ëºëº",5,"ëº",13,"ëº©",14],["9641","ëº¸",23,"ë»ë»"],["9661","ë»ë»ë»",6,"ë»¡ë»¢ë»¦",5,"ë»­",8],["9681","ë»¶",10,"ë¼",5,"ë¼",13,"ë¼ë¼",33,"ë½ë½ë½ë½ë½ë½",6,"ë½ë½ë½ë½",44],["9741","ë¾",16,"ë¾",8],["9761","ë¾",17,"ë¾±",7],["9781","ë¾¹",11,"ë¿",5,"ë¿ë¿ë¿ë¿ë¿ë¿",6,"ë¿ë¿ë¿ ë¿¢",89,"ì½ì¾ì¿"],["9841","ì",16,"ì",5,"ììì"],["9861","ìììì¡",6,"ìª",15],["9881","ìº",21,"ìììììì",6,"ì¢ì¤ì¦",5,"ì®ì±ì²ì·",4,"ì¾ììììììììììì",6,"ìì",5,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì¸ìº",5,"ììììììì",6,"ììììì",5,"ì¡ì¢ì¥ì¨ì©ìªì«ì®"],["9941","ì²ì³ì´ìµì·ìºì»ì½ì¾ì¿ì",6,"ìì",5,"ìì"],["9961","ìììì",6,"ì¦ìª",5,"ì±ì²ì³ìµì¶ì·ì¹ìºì»"],["9981","ì¼",8,"ì",5,"ìììììì",4,"ìì ì¢ì£ì¤ì¦ì§ìªì«ì­ì®ì¯ì±",11,"ì¾",5,"ììììììì",6,"ììì",6,"ì¡ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´",7,"ì¾ì¿ìììì",6,"ììì",5,"ììììì¡ì¢ì£"],["9a41","ì¤ì¥ì¦ì§ìªì¬ì®ì°ì³ìµ",16],["9a61","ììì",6,"ìììììì",6,"ì¡ì¢ì£ì¤ì¦"],["9a81","ì§",4,"ì®ì¯ì±ì²ì³ìµ",6,"ì¾ìì",5,"ì",5,"ì",6,"ìììì",5,"ì¦ì§ì©ìªì«ì®",5,"ì¶ì¸ìº",33,"ììì¡ì¢ì¥",5,"ì®ì°ì²ì³ì´ìµì·ìºì½ì¾ì¿ì",6,"ìììì"],["9b41","ììììììììì",6,"ì¦ì§ìª",8],["9b61","ì³",17,"ì",7],["9b81","ì",25,"ìªì«ì­ì®ì¯ì±ì³",4,"ìºì»ì¾",5,"ììììììì",50,"ì",22,"ì"],["9c41","ìììì¡ì£",4,"ìªì«ì¬ì®",5,"ì¶ì·ì¹",5],["9c61","ì¿",8,"ì",6,"ì",9],["9c81","ì",8,"ì¥",6,"ì­ì®ì¯ì±ì²ì³ìµ",6,"ì¾",9,"ì",26,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì·ì¸ìº",5,"ì",18,"ì",6,"ì",12],["9d41","ìª",13,"ì¹ìºì»ì½",8],["9d61","ì",25],["9d81","ì ",8,"ìª",5,"ì²ì³ìµì¶ì·ì¹ì»ì¼ì½ì¾ì",9,"ììììììì",6,"ì",10,"ìªì«ì­ì®ì¯ì±",6,"ìºì¼ì¾",5,"ììììììììììììì¢ì£ì¥ì¦ì§ì©",6,"ì²ì¶",5,"ì¾ì¿ìììììììììììììì"],["9e41","ìììììììì¡",7,"ìª",9,"ì¶"],["9e61","ì·ìºì¿",4,"ììììììììì",6,"ì¢ì¤ì¦ì§"],["9e81","ì¨ì©ìªì«ì¯ì±ì²ì³ìµì¸ì¹ìºì»ìììììììììì",6,"ìì",6,"ì¦ì§ì©ìªì«ì¯ì±ì²ì¶ì¸ìºì¼ì½ì¾ì¿ìììììì",6,"ìì",5,"ììì¡",10,"ì­ì®ì°ì²",5,"ìºì»ì½ì¾ì¿ì",6,"ììì",5,"ìììììì",6,"ì¦"],["9f41","ì¨ìª",5,"ì²ì³ìµì¶ì·ì»",4,"ììì",5,"ì"],["9f61","ììììì",6,"ììì¢",5,"ìªì«ì­ì®ì¯ì±ì²"],["9f81","ì³",4,"ìºì»ì¼ì¾",5,"ìììììì",6,"ììì",5,"ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´ì¶ì¸ì¹ìºì»ì¾ì¿ìììì",4,"ìììììììììì¡",6,"ì©ìªì¬",7,"ì¶ì·ì¹ìºì»ì¿ììììììììììììì",4,"ì¢ì§",4,"ì®ì¯ì±ì²ì³ìµì¶ì·"],["a041","ì¸ì¹ìºì»ì¾ì",5,"ììììì",6,"ìììì"],["a061","ì",5,"ì¥ì¦ì§ì©ìªì«ì­",13],["a081","ì»",4,"ì ì ì ì ì ì ì ",4,"ì ì ì ",4,"ì ì ì ¡ì ¢ì £ì ¥",6,"ì ®ì °ì ²",5,"ì ¹ì ºì »ì ½ì ¾ì ¿ì¡",6,"ì¡ì¡ì¡",5,"ì¡",26,"ì¡²ì¡³ì¡µì¡¶ì¡·ì¡¹ì¡»",4,"ì¢ì¢ì¢ì¢ì¢ì¢",5,"ì¢",7,"ì¢ì¢ ì¢¢ì¢£ì¢¤"],["a141","ì¢¥ì¢¦ì¢§ì¢©",18,"ì¢¾ì¢¿ì£ì£"],["a161","ì£ì£ì£ì£ì£ì£ì£ì£ì£",6,"ì£ì£ì£",5,"ì£¢ì££ì£¥"],["a181","ì£¦",14,"ì£¶",5,"ì£¾ì£¿ì¤ì¤ì¤ì¤",4,"ì¤ãããÂ·â¥â¦Â¨ãÂ­ââ¥ï¼¼â¼ââââããã",9,"Â±ÃÃ·â â¤â¥ââ´Â°â²â³ââ«ï¿ ï¿¡ï¿¥âââ â¥ââââ¡âÂ§â»ââââââââ¡â â³â²â½â¼âââââãâªâ«ââ½ââµâ«â¬âââââââªâ©â§â¨ï¿¢"],["a241","ì¤ì¤",5,"ì¤",18],["a261","ì¤­",6,"ì¤µ",18],["a281","ì¥",7,"ì¥ì¥ì¥ì¥ì¥ì¥",6,"ì¥¢ì¥¤",7,"ì¥­ì¥®ì¥¯ââââÂ´ï½ËËËËËÂ¸ËÂ¡Â¿Ëâ®ââÂ¤ââ°âââ·â¶â¤â â¡â¥â§â£âââ£ââââ¤â¥â¨â§â¦â©â¨ââââÂ¶â â¡ââââââ­â©âªâ¬ã¿ãâãâ¢ããâ¡â¬Â®"],["a341","ì¥±ì¥²ì¥³ì¥µ",6,"ì¥½",10,"ì¦ì¦ì¦ì¦ì¦"],["a361","ì¦",6,"ì¦ì¦ì¦",16],["a381","ì¦¯",16,"ì§ì§ì§ì§ì§ì§",4,"ì§ì§ì§ì§ì§ï¼",58,"ï¿¦ï¼½",32,"ï¿£"],["a441","ì§ì§ì§¡ì§£ì§¥ì§¦ì§¨ì§©ì§ªì§«ì§®ì§²",5,"ì§ºì§»ì§½ì§¾ì§¿ì¨ì¨ì¨ì¨"],["a461","ì¨ì¨ì¨ì¨ì¨",5,"ì¨ì¨ì¨ì¨",12],["a481","ì¨¦ì¨§ì¨¨ì¨ª",28,"ã±",93],["a541","ì©",4,"ì©ì©ì©ì©ì©ì©",6,"ì©ì©¢",5,"ì©©ì©ª"],["a561","ì©«",17,"ì©¾",5,"ìªìª"],["a581","ìª",16,"ìª",14,"â°",9],["a5b0","â ",9],["a5c1","Î",16,"Î£",6],["a5e1","Î±",16,"Ï",6],["a641","ìª¨",19,"ìª¾ìª¿ì«ì«ì«ì«"],["a661","ì«",5,"ì«ì«ì«ì«ì«ì«ì«ì«",5,"ì«¡",6],["a681","ì«¨ì«©ì«ªì««ì«­",6,"ì«µ",18,"ì¬ì¬ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸ââââââââââââ¡â¢â¦â§â©âªâ­â®â±â²âµâ¶â¹âºâ½â¾âââ",7],["a741","ì¬",4,"ì¬ì¬ì¬ì¬ì¬ì¬ì¬",6,"ì¬¢",7],["a761","ì¬ª",22,"ì­ì­ì­"],["a781","ì­ì­ì­ì­ì­ì­ì­ì­ì­",6,"ì­ì­ì­ì­",5,"ì­¥",7,"ãããâããã£ã¤ã¥ã¦ã",9,"ããããããããã§ã¨ã°",9,"ã",4,"ãº",5,"ã",4,"â¦ãããããããã­ã®ã¯ãã©ãªã«ã¬ããããããã"],["a841","ì­­",10,"ì­º",14],["a861","ì®",18,"ì®",6],["a881","ì®¤",19,"ì®¹",11,"ÃÃÂªÄ¦"],["a8a6","Ä²"],["a8a8","Ä¿ÅÃÅÂºÃÅ¦Å"],["a8b1","ã ",27,"â",25,"â ",14,"Â½ââÂ¼Â¾ââââ"],["a941","ì¯",14,"ì¯",10],["a961","ì¯ ì¯¡ì¯¢ì¯£ì¯¥ì¯¦ì¯¨ì¯ª",18],["a981","ì¯½",14,"ì°ì°ì°ì°ì°ì°",6,"ì°ì°ì° ì°£ì°¤Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÃ¸ÅÃÃ¾Å§ÅÅã",27,"â",25,"â´",14,"Â¹Â²Â³â´â¿ââââ"],["aa41","ì°¥ì°¦ì°ªì°«ì°­ì°¯ì°±",6,"ì°ºì°¿",4,"ì±ì±ì±ì±ì±ì±ì±"],["aa61","ì±",4,"ì±ì±",5,"ì±¡ì±¢ì±£ì±¥ì±§ì±©",6,"ì±±ì±²"],["aa81","ì±³ì±´ì±¶",29,"ã",82],["ab41","ì²ì²ì²ì²ì²ì²ì²ì²ì²ì²¡",6,"ì²ªì²®",5,"ì²¶ì²·ì²¹"],["ab61","ì²ºì²»ì²½",6,"ì³ì³ì³",5,"ì³ì³ì³ì³",5],["ab81","ì³",8,"ì³¥",6,"ì³­ì³®ì³¯ì³±",12,"ã¡",85],["ac41","ì³¾ì³¿ì´ì´",5,"ì´ì´ì´ì´ì´ì´",6,"ì´ì´ì´ì´ì´ "],["ac61","ì´¡ì´¢ì´£ì´¥ì´¦ì´§ì´©ì´ªì´«ì´­",11,"ì´º",4],["ac81","ì´¿",28,"ìµìµìµÐ",5,"ÐÐ",25],["acd1","Ð°",5,"ÑÐ¶",25],["ad41","ìµ¡ìµ¢ìµ£ìµ¥",6,"ìµ®ìµ°ìµ²",5,"ìµ¹",7],["ad61","ì¶",6,"ì¶",10,"ì¶ì¶ì¶ì¶ì¶ì¶ì¶ì¶"],["ad81","ì¶ ì¶¡ì¶¢ì¶£ì¶¦ì¶¨ì¶ª",5,"ì¶±",18,"ì·"],["ae41","ì·",5,"ì·ì·ì·ì·",16],["ae61","ì·¢",5,"ì·©ì·ªì·«ì·­ì·®ì·¯ì·±",6,"ì·ºì·¼ì·¾",4],["ae81","ì¸ì¸ì¸ì¸ì¸ì¸ì¸ì¸",6,"ì¸ì¸ì¸ì¸ì¸",5,"ì¸¢ì¸£ì¸¥ì¸¦ì¸§ì¸©ì¸ªì¸«"],["af41","ì¸¬ì¸­ì¸®ì¸¯ì¸²ì¸´ì¸¶",19],["af61","ì¹",13,"ì¹ì¹ì¹ì¹ì¹¢",5,"ì¹ªì¹¬"],["af81","ì¹®",5,"ì¹¶ì¹·ì¹¹ì¹ºì¹»ì¹½",6,"ìºìºìº",5,"ìºìºìºìºìºìº"],["b041","ìº",5,"ìº¢ìº¦",5,"ìº®",12],["b061","ìº»",5,"ì»",19],["b081","ì»",13,"ì»¦ì»§ì»©ì»ªì»­",6,"ì»¶ì»º",5,"ê°ê°ê°ê°ê°ê°ê°ê°",7,"ê°",4,"ê° ê°¤ê°¬ê°­ê°¯ê°°ê°±ê°¸ê°¹ê°¼ê±ê±ê±ê±ê±ê±ê±°ê±±ê±´ê±·ê±¸ê±ºê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê² ê²¡ê²¨ê²©ê²ªê²¬ê²¯ê²°ê²¸ê²¹ê²»ê²¼ê²½ê³ê³ê³ê³ê³ê³ê³ ê³¡ê³¤ê³§ê³¨ê³ªê³¬ê³¯ê³°ê³±ê³³ê³µê³¶ê³¼ê³½ê´ê´ê´"],["b141","ì¼ì¼ì¼ì¼ì¼ì¼",6,"ì¼ì¼ì¼",5,"ì¼ì¼ì¼ì¼¡ì¼¢ì¼£"],["b161","ì¼¥",6,"ì¼®ì¼²",5,"ì¼¹",11],["b181","ì½",14,"ì½ì½ì½ì½ì½ì½",6,"ì½¦ì½¨ì½ªì½«ì½¬ê´ê´ê´ê´ê´ê´ê´ ê´©ê´¬ê´­ê´´ê´µê´¸ê´¼êµêµêµêµêµêµêµêµ¡êµ£êµ¬êµ­êµ°êµ³êµ´êµµêµ¶êµ»êµ¼êµ½êµ¿ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶¤ê¶·ê·ê·ê·ê·ê·ê·ê·ê·ê· ê·¤ê·¸ê·¹ê·¼ê·¿ê¸ê¸ê¸ê¸ê¸ê¸ê¸ê¸°ê¸±ê¸´ê¸·ê¸¸ê¸ºê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ ê¹¡ê¹¥ê¹¨ê¹©ê¹¬ê¹°ê¹¸"],["b241","ì½­ì½®ì½¯ì½²ì½³ì½µì½¶ì½·ì½¹",6,"ì¾ì¾ì¾ì¾ì¾",5,"ì¾"],["b261","ì¾",18,"ì¾¢",5,"ì¾©"],["b281","ì¾ª",5,"ì¾±",18,"ì¿",6,"ê¹¹ê¹»ê¹¼ê¹½êºêºêºêº¼êº½êº¾ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»¨ê»«ê»­ê»´ê»¸ê»¼ê¼ê¼ê¼ê¼ê¼¬ê¼­ê¼°ê¼²ê¼´ê¼¼ê¼½ê¼¿ê½ê½ê½ê½ê½ê½ê½ê½ê½¤ê½¥ê½¹ê¾ê¾ê¾ê¾ê¾ê¾ê¾ê¾¸ê¾¹ê¾¼ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿¨ê¿©ê¿°ê¿±ê¿´ê¿¸ëëëëëëëëë¨ëëëëëëëëëëë"],["b341","ì¿",19,"ì¿¢ì¿£ì¿¥ì¿¦ì¿§ì¿©"],["b361","ì¿ª",5,"ì¿²ì¿´ì¿¶",5,"ì¿½ì¿¾ì¿¿íííí",5],["b381","í",5,"í",5,"í",19,"ëë¼ë½ëëëëëëëëëëëë ë¡ë¢ë¨ë©ë«",4,"ë±ë³ë´ëµë¸ë¼ëëëëëëëëëë ë¥ëëëëëëëëëëëëë£ë¤ë¥ë¨ë¬ë´ëµë·ë¸ë¹ëëëëëëëëëëë ë¸ë¹ë¼ëëëëëëëëëëëë¨ëëëëë"],["b441","í®",5,"í¶í·í¹íºí»í½",6,"ííí",5],["b461","ííííííí",6,"í¡",10,"í®í¯"],["b481","í±í²í³íµ",6,"í¾í¿íí",18,"ëë¨ë©ë¬ë°ë¹ë»ë½ëëëëëëëëëë ë´ë¼ëëë ë¨ë©ë´ëµë¼ëëëëëëëëëë ë¡ë£ë¥ë¦ëªë¬ë°ë´ëëëëëëëëëë¢ë¤ë¥ë¦ë¨ë«",4,"ë³ë´ëµë·",4,"ë¿ëëëëëëëëëëëëëëëëëëë¤ë¥"],["b541","í",14,"í¦í§í©íªí«í­",5],["b561","í³í¶í¸íº",5,"íííííí",5,"íí",4],["b581","íííí¡í¢í£í¥",6,"í®í²",5,"í¹",11,"ë§ë©ë«ë®ë°ë±ë´ë¸ëëëëëëëëë ë¡ë¨ë¬ëëëëëëëëëëëëëë ë¤ë¨ë¼ëëëë ë¨ë©ë«ë´ëëëëë ë¡ë£ë¥ë¬ëëëë¤ë¨ë¬ëµë·ë¹ëëëëëëëë ë£ë¤ë¦ë¬ë­ë¯ë±ë¸ëëëëëë¤ë¥ë§ë¨ë©ëªë°ë±ë´ë¸"],["b641","í",7,"í",17],["b661","í ",15,"í²í³íµí¶í·í¹í»í¼í½í¾"],["b681","í¿íí",5,"íííííí",6,"íí í¢",5,"í©íªí«í­ëëëëëëëëëëëëëë ë¡ë ë¡ë¤ë¨ëªë«ë°ë±ë³ë´ëµë»ë¼ë½ëëëëëëëëë¬ëëëëë¥ë¬ë´ëë¤ë¨ëëë ë¤ë«ë¬ë±ëë°ë´ë¸ëëëë¨ë©ë¬ë¯ë°ë¸ë¹ë»ëëëëëë ë¤ë¨ë°ë±ë³ëµë¼ë½ëëëëëëëëëë"],["b741","í®",13,"í½",6,"ííííí"],["b761","í",20,"í¢í£í¥í¦í§"],["b781","í©",6,"í²í´í¶í·í¸í¹í»í½í¾í¿í",14,"ëëëë ë¨ë©ë«ë¬ë­ë´ëµë¸ëëë¬ë­ë°ë´ë¼ë½ë¿ë ë ë ë ë ë ë ë ë ë ë ë ¤ë ¥ë ¨ë ¬ë ´ë µë ·ë ¸ë ¹ë¡ë¡ë¡ë¡ë¡ë¡ë¡ ë¡¤ë¡¬ë¡­ë¡¯ë¡±ë¡¸ë¡¼ë¢ë¢¨ë¢°ë¢´ë¢¸ë£ë£ë£ë£ë£ë£ë£ë£ë£ë£¡ë£¨ë£©ë£¬ë£°ë£¸ë£¹ë£»ë£½ë¤ë¤ë¤ ë¤¼ë¤½ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ ë¥¨ë¥©"],["b841","í",7,"í",17],["b861","í«",8,"íµí¶í·í¹",13],["b881","íí",5,"í",24,"ë¥«ë¥­ë¥´ë¥µë¥¸ë¥¼ë¦ë¦ë¦ë¦ë¦ë¦ë¦ë¦¬ë¦­ë¦°ë¦´ë¦¼ë¦½ë¦¿ë§ë§ë§ë§ë§",4,"ë§ë§ë§ë§ë§ë§¡ë§£ë§¤ë§¥ë§¨ë§¬ë§´ë§µë§·ë§¸ë§¹ë§ºë¨ë¨ë¨ë¨ë¨¸ë¨¹ë¨¼ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©¤ë©¥ë©§ë©¨ë©©ë©°ë©±ë©´ë©¸ëªëªëªëªëªëª¨ëª©ëª«ëª¬ëª°ëª²ëª¸ëª¹ëª»ëª½ë«ë«ë«ë«ë«¼"],["b941","íªí«í®í¯í±í²í³íµ",6,"í¾íí",5,"íííí"],["b961","í",14,"í",6,"í¥í¦í§í¨"],["b981","í©",22,"íííííííííë¬ë¬ë¬ë¬ë¬ë¬ë¬ë¬ ë¬©ë¬«ë¬´ë¬µë¬¶ë¬¸ë¬»ë¬¼ë¬½ë¬¾ë­ë­ë­ë­ë­ë­ë­ë­ë­ë­¡ë­£ë­¬ë®ë®ë®ë®¤ë®¨ë®¬ë®´ë®·ë¯ë¯ë¯ë¯ë¯ë¯¸ë¯¹ë¯¼ë¯¿ë°ë°ë°ë°ë°ë°ë°ë°ë°ë°",4,"ë°",4,"ë°¤ë°¥ë°§ë°©ë°­ë°°ë°±ë°´ë°¸ë±ë±ë±ë±ë±ë±ë±ë±ë±ë±ë²ë²ë²ë²ë²ë²ë²ë²ë²"],["ba41","ííííííí",5,"íííí¡í¢í£í¥",6,"í­"],["ba61","í®í¯í°í²",5,"íºí»í½í¾íí",4,"íí",5],["ba81","ííííííííí",6,"í¦",9,"í²í³íµí¶í·í¹íºë²ë²ë² ë²¡ë²¤ë²§ë²¨ë²°ë²±ë²³ë²´ë²µë²¼ë²½ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³´ë³µë³¶ë³¸ë³¼ë´ë´ë´ë´ë´ë´ë´¤ë´¬ëµëµëµëµëµëµëµëµ¤ëµ¨ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶¤ë¶°ë¶¸ë·ë·ë·ë·ë·©ë·°ë·´ë·¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ ë¹¡ë¹¤"],["bb41","í»",4,"ííí",5,"íííííí",4,"íí¢í£"],["bb61","í¤í¦í§íªí«í­í®í¯í±",6,"íºí¾",5,"íííí"],["bb81","í",31,"ë¹¨ë¹ªë¹°ë¹±ë¹³ë¹´ë¹µë¹»ë¹¼ë¹½ëºëºëºëºëºëºëºëºëºëº¨ë»ë»ë»ë»ë»ë» ë»£ë»¤ë»¥ë»¬ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë½ë½ë½ë½ë½ë½ë½ë¾ë¾°ë¿ë¿ë¿ë¿ë¿ë¿ë¿ë¿¡ì¼ìììì ì¨ì©ììììì ì¡ì£ì¥ì¬ì­ì¯ì°ì³ì´ìµì¶ì¼ì½ì¿ììììììììììììì¤"],["bc41","íª",17,"í¾í¿íííííí"],["bc61","íííííí",5,"íííííí¡",6,"íªí¬í®"],["bc81","í¯",4,"íµí¶í·í¹íºí»í½",6,"ííí",5,"í",5,"ì¥ì¨ì¬ì´ìµì·ì¹ìììììì",4,"ì£ì¤ì¦ì§ì¬ì­ì¯ì°ì±ì¶ì¸ì¹ì¼ììììììììììì¤ì¥ì§ì¨ì©ì°ì´ì¸ììììììììììì¡ì¥ì¨ì©ì¬ì°ì½ììììììì ì¤ì¨ì°ì±ì³ì¼ì½ììììììììììì ì¨ì©ì«ì­"],["bd41","íí",7,"í¢í¤",7,"í®í¯í±í²í³íµí¶í·"],["bd61","í¸í¹íºí»í¾íí",5,"í",13],["bd81","í",5,"í",25,"ì¯ì±ì²ì´ìììììì ì¥ì¬ì­ì°ì´ì¼ì½ì¿ìììììììì¤ì¥ì¨ì¬ì­ì´ìµì·ì¹ììì ì£ì¤ì«ì¬ì­ì¯ì±ì¶ì¸ì¹ì»ì¼ììììììììììì¤ì¥ì¨ì©ìì¨ì©ì¬ì°ì²ì¸ì¹ì¼ì½ììììììììì ì¢ì¨ì©ì­ì´ìµì¸ììì¤ì¬ì°"],["be41","í¸",7,"íííí",14],["be61","í",7,"íííí¡í¢í£í¥",7,"í®í°í±í²"],["be81","í³",4,"íºí»í½í¾íí",4,"ííí",5,"í",8,"ì´ì¼ì½ìì¤ì¥ì¨ì¬ì´ìµì¹ìììì¸ì¼ì©ì°ì±ì´ì¸ìºì¿ììììììì¨ì©ì¬ì°ì¸ì¹ì»ì½ììììììììììììììììì ì¡ì¤ì¨ì°ì±ì³ì´ìµì¼ì½ìììììììììììì ì©ì´ìµì¸ì¹ì»ì¼ì½ì¾ì",6,"ìì"],["bf41","í",10,"íª",14],["bf61","í¹",18,"ííííííí"],["bf81","í",5,"ííí ",7,"í©íªí«í­í®í¯í±",6,"í¹íºí¼ììììì ì¡ì£ì¥ì¬ì­ì®ì°ì´ì¶ì·ì¼",5,"ììììììììììì¤ì¥ì¨ì¬ì­ì®ì°ì³ì´ìµì·ì¹ì»ìììììììììììì ì¬ì¯ì±ì¸ì¹ì¼ìììììììììì¤ì¥ì§ì©ì°ì±ì´ì¸ì¹ìºììììììììììì ì¡ì¨"],["c041","í¾",5,"ííííííí",6,"íí",5],["c061","í",25],["c081","í¸í¹íºí»í¾í¿íííí",6,"ííí",5,"íííííí¡í¢í£ì©ì¬ì°ì¸ì¹ì½ììììììììì ì¡ì¤ì¨ì°ì±ì³ìµì·ì¼ì½ììììììì",7,"ìì ì¨ì«ì´ìµì¸ì¼ì½ì¾ìììììììììììììììì ì¡ì£ì¤ì¥ì¦ì¬ì­ì°ì´ì¼ì½ì¿ìììììììììì¤ì¨ì¬ì ì ì ì ì "],["c141","í¤í¦í§íªí¬í®",5,"í¶í·í¹íºí»í½",6,"ííí"],["c161","ííííí",19,"í¦í§"],["c181","í¨",31,"ì ì ì ì ì ì ì ì  ì ¤ì ¬ì ­ì ¯ì ±ì ¸ì ¼ì¡ì¡ì¡ì¡ì¡ì¡ì¡°ì¡±ì¡´ì¡¸ì¡ºì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢¡ì¢¨ì¢¼ì¢½ì£ì£ì£ì£ì£ì£ì£ì£ ì£¡ì£¤ì£µì£¼ì£½ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤¬ì¤´ì¥ì¥ì¥ì¥ì¥ ì¥¡ì¥£ì¥¬ì¥°ì¥´ì¥¼ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì§ì§ì§ì§ì§ì§ì§ì§ì§"],["c241","ííííííí",4,"ííí",5,"í¦í§í©íªí«í­í®"],["c261","í¯",4,"í¶í¸íº",5,"íííííí",6,"í"],["c281","í",5,"íííí¡í¢í£í¥",7,"í®",9,"íºí»ì§ì§ì§ì§ì§ì§ì§ ì§¢ì§¤ì§§ì§¬ì§­ì§¯ì§°ì§±ì§¸ì§¹ì§¼ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨©ì©ì©ì©ì©ì©ì©ì©ì© ì©¡ì©¨ì©½ìªìªìª¼ìª½ì«ì«ì«ì«ì«ì«ì«ì«ì«ì« ì«¬ì«´ì¬ì¬ì¬ì¬ì¬ ì¬¡ì­ì­ì­ì­ì­ì­ì­ì­ì­¤ì­¸ì­¹ì®ì®¸ì¯ì¯¤ì¯§ì¯©ì°ì°ì°ì°ì°ì°ì°¡ì°¢ì°§ì°¨ì°©ì°¬ì°®ì°°ì°¸ì°¹ì°»"],["c341","í½í¾í¿ííííííííííííííííííí",4],["c361","í¢",4,"í¨íª",5,"í²í³íµ",11],["c381","íííí",5,"íííííí",7,"íí í¢",5,"í©íªì°¼ì°½ì°¾ì±ì±ì±ì±ì±ì±ì±ì±ì±ì± ì±¤ì±¦ì±¨ì±°ì±µì²ì²ì²ì² ì²¨ì²©ì²«ì²¬ì²­ì²´ì²µì²¸ì²¼ì³ì³ì³ì³ì³ì³ì³¤ì³¬ì³°ì´ì´ì´ì´ì´ì´ì´ì´ì´ì´¤ì´¨ì´¬ì´¹ìµìµ ìµ¤ìµ¬ìµ­ìµ¯ìµ±ìµ¸ì¶ì¶ì¶ì¶ì¶ì¶¤ì¶¥ì¶§ì¶©ì¶°ì·ì·ì·ì·¨ì·¬ì·°ì·¸ì·¹ì·»ì·½ì¸ì¸ì¸ì¸ì¸ì¸ ì¸¡ì¸¤ì¸¨ì¸°ì¸±ì¸³ì¸µ"],["c441","í«í­í®í¯í±",7,"íºí¼",7,"ííííí"],["c461","íííííííííí",5,"í¡í¢í£í¥í¦í§í©",4],["c481","í®í¯í±í²í³í´í¶",5,"í¾í¿íííí",11,"íííì¹ì¹ì¹ì¹ì¹ ì¹¡ì¹¨ì¹©ì¹«ì¹­ì¹´ì¹µì¹¸ì¹¼ìºìºìºìºìºìºìºìºìº ìº¡ìº£ìº¤ìº¥ìº¬ìº­ì»ì»¤ì»¥ì»¨ì»«ì»¬ì»´ì»µì»·ì»¸ì»¹ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ ì¼¤ì¼¬ì¼­ì¼¯ì¼°ì¼±ì¼¸ì½ì½ì½ì½ì½¤ì½¥ì½§ì½©ì½°ì½±ì½´ì½¸ì¾ì¾ì¾ì¾¡ì¾¨ì¾°ì¿ì¿ ì¿¡ì¿¤ì¿¨ì¿°ì¿±ì¿³ì¿µì¿¼ííííí­í´íµí¸í¼"],["c541","ííííííííí¡",6,"íªí¬í®",5,"í¶í·í¹"],["c561","íºí»í½",6,"íííí",5,"íííí",4],["c581","íí¢í¤í¦í§í¨íªí«í­í®í¯í±í²í³íµ",6,"í¾í¿íí",5,"íííííííííí í¬í­í°í´í¼í½íí¤í¥í¨í¬í´íµí·í¹ííííííííííííí í¤í¬í­í¯í°í±í¸íí°í±í´í¸íºííííííííííííí¡í¨í¬í¼ííí í¡í¤í¨í°í±í³íµíºí¼ííí´í¸íííí¬í­í°í´í¼í½í¿ííí"],["c641","íííí",6,"ííí",5],["c6a1","í¤ííííííííí í¤í¬í±í¸í¹í¼í¿ííííííííí¤í¥í°í±í´í¸íííííííííííííí í¡í¥í¨í©í¬í°í¸í¹í»í¼í½ííí¼í½ííííííííííí í¨í©í«í­í´í¸í¼ííííííí¡í£í¬í­í°í´í¼í½í¿í"],["c7a1","íííííí í¤í­í¯í¸í¹í¼í¿íííííííí©íííííí¨í¬í°í¸í»í½ííííííí¼í½íííííííííí í¥í¨í©í«í­í´íµí¸í¼ííííííí¥íííííííííí¤í¥í¨í¬í´íµí·í¹ííííííííííí "],["c8a1","í¤í­í¸í¹í¼íííííííííííí§í©í°í±í´ííííííííí¡í¨í¬í°í¹í»ííííííííí í¤í¨í°íµí¼í½ííííííí í¨í©í«í­í´íµí¸í¼ííííííííííí í¡í£í¥í©í¬í°í´í¼í½ííííííííí"],["caa1","ä¼½ä½³åå¹å å¯åµå¥åå«å®¶ææ¶æ·æ¯æ­ççç¨¼èèè¡è¢è¨¶è³è·è»»è¿¦é§å»å´åæªæ¤æ®¼çèè¦ºè§é£ä¾åå¢¾å¥¸å§¦å¹²å¹¹ææææ¬æ¡¿æ¾ççç£µç¨ç«¿ç°¡èè®è±è««éä¹«åæ·æ¸´ç¢£ç«­èè¤èé¨ååå ªåµææ¾æ¡æ¢ææ©æ¸çç³ç£ç°ç´ºé¯ééé¾"],["cba1","å£å²¬ç²èééåå å§å²¡å´åº·å¼ºå½æ·æ±çºçç³ çµ³ç¶±ç¾èè¡èè¥è¬é¼éé±ä»ä»·åå±å¡æ·æ¾æ¨æ¹æ§ªæ¼ç¥ççç®è¥èï¤é§éåå®¢åï¤ç²³ç¾¹éµå¨å»å±å·¨ææ®ææ§æ¸ ç¬ç¥è·è¸ï¤é½éé¸ä¹¾ä»¶å¥å·¾å»ºææ¥è±èè¹éµé¨«ä¹åæ°æ¡åååæª¢"],["cca1","ç¼éé»å«æ¯è¿²åæ©æ­ææ ¼æªæ¿èè¦¡éå ç½ç¬ççµ¹ç¹­è©è¦è­´é£éµææ±ºæ½çµç¼ºè¨£å¼æç®è¬ééäº¬ä¿åå¾åååå¿å°å¢åºå¾æ¶æ¬ææ¬æ¯æ»æ´æ¢æ¶çç±çç¥ççç¡¬ç£¬ç«ç«¶çµç¶èè¿èèè­¦è¼éé¡é é ¸é©é¯¨ä¿åå ºå¥å­£å±æ¸ææ¡æ¢°"],["cda1","æ£¨æºªçç¸ç£ç¨½ç³»ç¹«ç¹¼è¨èª¡è°¿éé·å¤å©åå±åºå§å­¤å°»åº«æ·æ·ææ²æ æ¯æ§æ²½ç¼çç¾ç¨¿ç¾èè¡èè¦è½è°èè ±è¢´èª¥ï¤è¾é®éé¡§é«é¼å­ææ²æ¢ç©è°·éµ å°å¤å´ææ¢±æ£æ»¾ç¨è¢é¯¤æ±¨ï¤éª¨ä¾å¬å±åå­å·¥ææ­æ±æ§æ»çç©ºè£è²¢éä¸²å¯¡ææç"],["cea1","ç§èèªèª²è·¨ééé¡å»æ§¨è¿é­ï¤å å®å¯¬æ£æ£ºæ¬¾çç¯çç®¡ç½èè§è²«éé¤¨å®ææ¬éä¾åå¡å£å»£æ æ´¸çççç­è±éå¦æç½«ä¹åå¡å£æªæ§ææ§é­å®ç´è±è½äº¤åå¬å¬å¬å¶ å·§æªææ ¡æ©ç¡çç¯çµç¿¹è èèè¼è½éé¤é©é®«ä¸ä¹ä¹ä»ä¿±å·å¾"],["cfa1","åå£å¥åååµå¢å¯å¶å»æ¼æææ¸æ©æ§æ­æ¯æ¯¬æ±æºç¸çççç¿ç©ç©¶çµ¿èè¼èèèè¡¢è¬³è³¼è»éé±é¤é¶é§é©é³©é·é¾åå±èé é«éº´åçªç¾¤è£è»é¡å å±æçªå®®å¼ç©¹çª®èèº¬å¦å¸å¸å·åæ³æ²æ¬æ·ç·å¥çè¨è¹¶éæºæ«æ½°è©­è»é¥ï¤æ·æ­¸è²´"],["d0a1","é¬¼ï¤å«å­å¥ææ§»çªç¡çªºç«ç³¾èµè¦èµ³éµé¨å»åçç­ èéï¤æ©åååææ£æ¥µéåå¤å¤ææ¤æ ¹æ§¿ç¾ç­è¹è«è¦²è¬¹è¿é¥ï¤ä»å¦æææªç´ç¦ç¦½è©è¡¾è¡¿è¥ï¤é¦ä¼åæ¥æ±æ±²ç´çµ¦äºå¢çè¯ä¼ä¼å¶ååå¨å»åºå¼å¤å¥å¦å¯å²å´å·±å¹¾å¿æææ£"],["d1a1","ææææ£æ£æ©æ¬ºæ°£æ±½æ²æ·çç¦çªçç£ç¸ç¿ç¢ç£¯ç¥ç¥ç¥ç¥ºç®ç´ç¶ºç¾èè­èè¨è­è±èµ·é¡é¤é£¢é¥é¨é¨é©¥éºç·ä½¶åæ®æ¡éå«åºï¤ï¤å¨æ¦ï¤ææ¿ï¤",5,"é£ï¤",4,"è«¾ï¤ï¤ï¤ï¤æï¤çï¤ï¤é£ï¤ ææºåï¤¡ææ¥ æ¹³ï¤¢ç·ï¤£ï¤¤ï¤¥"],["d2a1","ç´ï¤¦ï¤§è¡²åå¨ï¤¨",4,"ä¹ï¤­å§å¥æ°èï¤®å¥³å¹´æç§å¿µæ¬ææ»å¯§å¯åªï¤¯å¥´å¼©æï¤°ï¤±ï¤²çï¤³",5,"é§ï¤¹",10,"æ¿ï¥ï¥è¿è¾²æ±ï¥ï¥è¦ï¥ï¥å°¿ï¥",7,"å«©è¨¥æ»ç´ï¥",5,"è½ï¥ï¥å°¼æ³¥å¿æººå¤è¶"],["d3a1","ä¸¹äº¶ä½å®åå£å½æ·æ¦æªæ®µæ¹ç­ç«¯ç°ç·èè¢é²éæ»æ¾¾çºç¸éååæºæææ·¡æ¹æ½­æ¾¹ç°èè½èè¦è«è­éæ²çç­è¸éåå å¡å¹¢æææ£ ç¶ç³è³é»¨ä»£åå®å¤§å°å²±å¸¶å¾æ´æ¡ç³èºè¢è²¸éé»å®å¾·æ³ååå°åå µå¡å°å± å³¶å¶åº¦å¾æ¼ææææ¡"],["d4a1","æ£¹æ«æ·æ¸¡æ»æ¿¤ç¾çç¹ç¦±ç¨»èè¦©è³­è·³è¹éééé½éé¶éæ¯ççç¢ç¨ç£ç¦¿ç¯¤çºè®å¢©ææ¦æ½æ¾æ²ççè±é ä¹­çªä»å¬åååæ§æ±æ¡æ£æ´æ½¼ç¼ç³ç«¥è´è£éåæææçç«è³ï¥è±éé ­å±¯èèéé¯éå¾å¶æ©çç»ç­è¤è¬é§é¨°åæ¶ï¥ç©ç¾"],["d5a1","è¿èºè£¸éï¥æ´çççµ¡è½ï¥éªé§±ï¥äºåµæ¬æ¬ç¾çè­é¸åè¾£åµæ¥æ¬æ¬æ¿«ç±çºèè¥¤è¦½æèè å»ææµªç¼çç¯èéä¾å´å¾ èå·æ ç¥äº®åå©åæ¢æ¨ç²®ç²±ç³§è¯è«è¼éä¾¶å·åµåå»¬æ®æ¾ææ«æ¿¾ç¤ªèè £é­é©¢é©ªéºé»åææ­·çç¤«è½¢éæææ£æ¼£"],["d6a1","ççç·´è¯è®è¼¦é£éå½åå£æ´çè£å»ææ®®æ¿ç°¾çµä»¤ä¼¶å¹ï¥å²ºå¶ºæç²ç¬­ç¾ç¿èéé´é¶éé é½¡ä¾æ¾§ç¦®é´é·åï¥ æææ«æ½ççç§èèèè·¯è¼é²é­¯é·ºé¹µç¢ç¥¿ç¶ èéé¹¿éºè«å£å¼æ§ç§çç± è¾å¡ç¨ç¢ç£è³è³è³´é·äºåå¯®å»æççç­èè¼"],["d7a1","é¼é¬§é¾å£å©å±¢æ¨æ·æ¼ç»ç´¯ç¸·èè¤¸é¤éåææ³æ¦´æµæºççç çç¤ç¡«è¬¬é¡å­æ®é¸ä¾å«å´æ·ªç¶¸è¼ªå¾ææ ï¥¡éåèååæ¥ç¨ç¶¾è±éµä¿å©åååå±¥æ§ææ¢¨æµ¬çç¸ççï¥¢ç¢ç±¬ç½¹ç¾¸èè£è£¡ééé¢é¯åæ½¾ççèºèºªé£é±éºææ·ç³è¨éç ¬"],["d8a1","ç«ç¬ ç²æ©çªç²ç¢¼ç£¨é¦¬é­éº»å¯å¹æ¼ èè«éä¸åå¨©å·å½æ¢æ½æ©æ¼æ»¿æ¼«ç£çè¬èè »è¼é¥é°»åæ¹æ«æ²«èè¥ªéºäº¡å¦å¿å¿æç¶²ç½èè«è½è¼éåå¦¹åªå¯æ§ææ¢æ¯ç¤ç½µè²·è³£éé­èè²éé©éº¥å­æ°çç²çèåªè¦åååæ£æ²çç ç¶¿ç·¬é¢éºµæ»"],["d9a1","èå¥åå½æææ¤§æºç¿çèèèé©éé³´è¢ä¾®ååå§å¸½ææ¸æ¹æ®ææ¨¡æ¯æ¯çç¡çç¸çèè¼èè¬è¬¨è²æ¨æ²ç§ç®ç¦ç©é¶©æ­¿æ²å¤¢æ¦èå¯å¢å¦å»ææ´æ³æ¸ºç«ç«èé¨åå·«æ®ææææ«æ æ¥æ­¦æ¯ç¡ç·çç¹èèèªèª£è²¿é§éµ¡å¢¨é»ååå»åæ"],["daa1","æ±¶ç´ç´èèéé¯å¿æ²ç©å³åªå°¾åµå½å¾®æªæ¢¶æ¥£æ¸¼æ¹çç±³ç¾èè¬è¿·é¡é»´å²·æ¶ææ«ææ»æ¼æ°æ³¯ççç·¡éå¯èè¬ååæææ²æ´æ¨¸æ³ççç®ç²ç¸èè¶èè¿«é¹é§ä¼´åååææ¬æææ§æ³®æ½ç­çç¢ç¤ç¼ç£ç£»ç¤¬çµè¬è è¿é é£¯åææ¥æ¸¤æ½"],["dba1","ç¼è·é±é¢é«®é­å£ååå¦¨å°¨å¹å½·æ¿æ¾æ¹ææææ¦æ»ç£ç´¡èªèè«è³è¡èè¨ªè¬é¦é²é¾åä¿³ï¥£å¹å¾æææ¯æ¹ççèèè£´è£µè¤è³ è¼©ééªä¼¯ä½°å¸ææ ¢ç½ç¾é­å¹¡æ¨ç©ççªï¥¤ç¹èè©é£ä¼ç­ç½°é¥å¡å¸æ¢µæ°¾æ±æ³ç¯ç¯èæ³çºå»åå£ææªç§ç"],["dca1","ç¢§èé¢é¹ï¥¥åå¼è®è¾¨è¾¯éå¥ç¥é±é¼ä¸ååµå±å¹·ææºææ£ç³ççç§ç«è¼§é¤ é¨ä¿å ¡å ±å¯¶æ®æ­¥æ´æ¹ºæ½½ç¤ç«è©è£è¤è­è¼ä¼åååå®å¾©æç¦è¹è¯èè¤è¦è¼¹è¼»é¦¥é°æ¬ä¹¶ä¿¸å¥å°å³¯å³°æ§æ£ç½ç¢ç«ç¸«è¬èé¢éé³³ä¸ä»ä¿¯ååå¯å¦åå å¤«å©¦"],["dda1","å­å­µå¯åºï¥¦æ¶æ·æ§æµ®æº¥ç¶ç¬¦ç°¿ç¼¶èèèèèè©è¨è² è³¦è³»èµ´è¶ºé¨éééé§é³§ååå©å´å¢³å¥å¥®å¿¿æ¤æ®ææ±¾ççç²ç³ç´è¬è³é°ï¥§ä½å¼å½¿æå´©ææ£ç¡¼ç¹éµ¬ä¸åååªåå¦å©¢åºæ²æææ¹æææ¦§æ¯æ¯æ¯æ¯æ²¸ï¥¨çµçºç ç¢ç§ç§ç²ç·ç¿¡è¥"],["dea1","è¾èè²èè£¨èª¹è­¬è²»ééé£é¼»å¬å¬ªå½¬ææª³æ®¯æµæ¿±ççç­è²§è³é »ææ°·èé¨ä¹äºäºä»ä¼ºä¼¼ä½¿ä¿å¿å²å¸åå£åå£«å¥¢å¨å¯«å¯ºå°å·³å¸«å¾ææ¨ææ¯æ¶æ»æ¢­æ­»æ²æ³æ¸£ççç ç¤¾ç¥ç¥ ç§ç¯©ç´çµ²èèèèèè£è©è©è¬è³èµ¦è¾­éªé£¼é§éºåï¥©æï¥ª"],["dfa1","ååªå±±æ£æ±çç£çç®èé¸é°ä¹·ææ®ºçè©ä¸ï¥«ææ£®æ¸èèè¡«æ·æ¾éé¢¯ä¸å·ååååªåå­å°å³ å¸¸åºåº å»æ³æ¡æ©¡æ¹ç½ççç¸ç¥¥ç®±ç¿è£³è§´è©³è±¡è³éå¡ç½è³½åï¥¬ç©¡ç´¢è²ç²çç¥ï¥­ç¬å¢å£»å¶¼åºåº¶å¾æææ¿ææææ¸æ æ£²ççç­®çµ®ç·ç½²"],["e0a1","è¥èè¯è¥¿èªéé¤é»é¼ å¤å¥­å¸­æææ³ææ±æ·æ½ç³ç¢©èéé«ä»åååå¬å®£ææ¾ææ¸²ç½çççç¿ç¬ç¦ªç·ç¹ç¾¨èºè³è¹èè¬è©µè·£é¸éé¥é¥é®®å¨å±æ¥æ³æ´©æ¸«èèè¤»è¨­èªªéªé½§å¡æ¹æ®²çºè¾è´ééææ¶ç®ï¥®åå§å®¬æ§æºæææç©ç¹ççç­¬"],["e1a1","èè²è¥èª éä¸å¢æ­²æ´ç¨ç¬¹ç´°ï¥¯è²°å¬å¯å¡å®µå°å°å·¢ææææ­æ¢³æ²¼æ¶æº¯çç¤çç¦çççç¬ç¯ ç°«ç´ ç´¹è¬è­èè¨´éé¡éµé·é¶é¨·ä¿å±¬ææ¶ç²çºè¬è´éå­«å·½æèéé£¡çå®ææ¾æ·è¨èª¦éé å·ï¥°çç¢éè¡°éä¿®åå½ååå£½å«å®å²«å³å¸¥æ"],["e2a1","æææææ¶æ¸æ¨¹æ®æ°´æ´æ¼±ç§ç©ç¸çç²ç¦ç¡ç§ç©ç«ªç²¹ç¶ç¶¬ç¹¡ç¾è©è±èèèªè¢èª°è®è¼¸ééé¬éé¹éé§é¨ééé é¦é«é¬åå¡¾å¤å­°å®¿æ·æ½çç¡ç¹èè½å·¡å¾å¾ªææ¬æ æ¥¯æ©æ®æ´µæ·³ç£ç¾ç¬ç­ç´è£èèè´è£è©¢è«ééé é¦´æè¡è¿°é¥å´å´§"],["e3a1","åµ©çèè¨æ¿æ¾ç¿è¤¶è¥²ä¸ä¹å§ååæ¿æç¹©è éä¾åå¶å§åª¤å°¸å±å±å¸å¼ææ½æ¯ææ¾æ´çç¢ç¤ºç¿èèè¦è©¦è©©è«¡è±è±ºå´å¯å¼æ¯æ­æ¤æ®æ¹çç¯èè­è»¾é£é£¾ä¼¸ä¾ä¿¡å»å¨ å®¸æ¼æ°æ¨ç¼ç³ç¥ç´³èè£èèªèèè¨èº«è¾ï¥±è¿å¤±å®¤å¯¦æå¯©å°å¿æ²"],["e4a1","ï¥²æ·±ççè¯è«¶ä»åï¥³éæ°äºä¿ååå¨¥å³¨æçè½èªè¾è¡è¨é¿éé¤é´éµå å²³å¶½å¹æ¡ææ¡æ¨æ¸¥ééé¡é°é½·å®å²¸æææ¡ç¼ééé¡é®æ¡è¬è»é¼åµå²©å·åºµæçè´éå£æ¼çé´¨ä»°å¤®ææ»æ®ç§§é´¦åååå´æææ¶¯ç¢è¾ééåæ¼ææ¶²ç¸èé¡"],["e5a1","æ«»ç½é¶¯é¸ä¹å»å¶å¤æ¹æ¶æ¤°çºè¶ï¥´éå¼±ï¥µï¥¶ç´è¥è¯è»è¥èºï¥·ä½¯ï¥¸ï¥¹å£¤å­ææææ­æï¥ºæ¥æ¨£æ´çç¬ççç¦³ç©°ï¥»ç¾ï¥¼è¥ï¥½è®éé½ï¥¾é¤åå¾¡æ¼æ¼çç¦¦èªé¦­é­é½¬åæ¶ææªèåå °å½¦çè¨è«ºå­¼èä¿ºå¼å´å¥æ©æ·¹å¶ªæ¥­åäºä½ï¥¿ï¦ï¦å¦ï¦"],["e6a1","ï¦æ­æ±ï¦çµç¤ï¦èèè¹è¼¿è½ï¦é¤ï¦ï¦ï¦äº¦ï¦åå½¹æï¦ï¦ç«ç¹¹è­¯ï¦éé©å¥å §å§¸å¨å®´ï¦å»¶ï¦ï¦ææ»ï¦æ¤½æ²æ²¿æ¶æ¶æ·µæ¼ï¦çç¶çï¦ççï¦ç¡ç¡¯ï¦ç­µç·£ï¦ç¸¯ï¦è¡è»ï¦ï¦ï¦éï¦é³¶ï¦ï¦ï¦ææ¶ï¦ç±ï¦ ï¦¡é±å­ï¦¢ï¦£ï¦¤æï¦¥çç°ç°è¶è"],["e7a1","ï¦¦é»é«¥é¹½æï¦§çèï¦¨ï¦©å¡ï¦ªï¦«å¶¸å½±ï¦¬æ ææ¥¹æ¦®æ°¸æ³³æ¸¶æ½æ¿çç¯ççç°ï¦­çï¦®ççç©çºï¦¯ï¦°è±è© è¿ï¦±éï¦²éï¦³ï¦´ä¹åªï¦µåå¡æ³æ±­æ¿çç¿ç©¢è®èèï¦¶è£è©£è­½è±«ï¦·é³ï¦¸éé äºä¼ä¿å²åå¾å³åå¡¢å¢ºå¥§å¨å¯¤æï¦¹æææ¿æ¤æ¢§æ±æ¾³"],["e8a1","çç¬çç­½èèª¤é°²é¼å±æ²ççéºæº«ç¥çç©©ç¸èåå£æç®çç°ç¿ééé¥æ¸¦ç¦çª©çªªè¥èè¸è¨å©å®å®æ¢¡æ¤æµ£ç©çç¬ç¢ç·©ç¿«èèèè±é®é æ°å¾æºææ±ªçå­å¨æ­ªç®å¤åµ¬å·ç¥çï¦ºï¦»å¥å¹å ¯å¤­å¦å§å¯¥ï¦¼ï¦½å¶¢ææææ¾ï¦¾æï¦¿æ©ï§ç¿ç¤ï§"],["e9a1","çªçª¯ç¹ç¹èè°ï§è¯è¦è¬ éï§éé¥æ¾æ¬²æµ´ç¸è¤¥è¾±ä¿å­åååå¢å®¹åº¸ææ¦æ¶æ¹§æº¶çç¢ç¨ç¬è³è¸èè¸ééï§äºä½å¶åªååå³å®å¯å°¤æææ´ççççç¥ç¦ç¦¹ç´ç¾½èèèè¿ééµéªéé¨é©åå½§æ­æ±æ ¯çç¨¶éé äºï§æ©æ®æ¾çèè¸è"],["eaa1","ééé²é»èé¬±äºçéååå¡ååå£åªå«å¯æ¨æ¿æ´æ²æ´¹æ¹²æºç°ç¿çèè¢è½é ï§é¢é¡é´æè¶éä½ååå±åå§å¨å°æ°ææ¸­ç²çç·¯èèè¦è¿èè¡è¤è¬ééé­ä¹³ä¾ååªï§å¯å©å­ºå®¥å¹¼å¹½åº¾æ æææææ¸æï§ææï§æ¥¡æ¥¢æ²¹æ´§ï§æ¸¸ï§"],["eba1","æ¿¡ç¶ç·ï§çç±ï§çï§ï§ç¶­è¾è¸è£èªè«è«­è¸°è¹éé¾éºééé®ï§ï§å ï§æ¯èè²ï§ï§åå¥«å°¹ï§ï§æ½¤ç§è¤è´ï§ééï§ï§ï§ï§è¿æççµ¨èï§å æ©ææ®·èª¾éé±ä¹åæ·«è­é°é³é£®ææ³£éåæèºé·¹ä¾ååå®ææ¿æ¬æ¤æ¯çç£ç¾©è¤èè»è¡£èª¼"],["eca1","è­°é«äºä»¥ä¼ï§ï§å¤·å§¨ï§å·²å¼å½æ¡ï§ ï§¡ï§¢ï§£ç¾ç¥ï§¤ç°çï§¥ç§»ï§¦èè³èè¡èï§§ï§¨è²½è²³éï§©ï§ªé£´é¤ï§«ï§¬ç·çç¿ç¿ç¿¼è¬äººä»åå°ï§­å½å å§»å¯å¼å¿æ¹®ï§®ï§¯çµªèµï§°èèªï§±é­é·ï§²ï§³ä¸ä½ä½¾å£¹æ¥æº¢é¸é°é¦¹ä»»å£¬å¦å§æï§´ï§µç¨ï§¶èè³å¥å"],["eda1","ï§·ï§¸ï§¹ä»å©å­è¿ä»åºå¨å§å§¿å­å­å­æ£ææ»çç®çç·çµç£ç´«èèªè¨èèè«®è³éä½åºå¼æ«æ¨ç¼ç¸çµç¶½èéééµ²å­±æ£§æ®æ½ºçå²æ«æ½ç®´ç°ªè ¶éä¸ä»å å ´å¢»å£¯å¥¬å°å¸³åºå¼µææ²ææ¨æª£æ¬æ¼¿çï§ºççç« ç²§è¸èè§èè¬è£èèè£è´é¬é·"],["eea1","éååå¨å®°æææ ½æ¢æ¸½æ»ç½ç¸¡è£è²¡è¼é½é½ç­ç®è«éä½ä½å²åå§åºæµæµæ¥®æ¨æ²®æ¸ççªç½ç®¸ç´µè§è¹èè·è©è²¯èºéé¸éé½å£åå«¡å¯ææµæ»´çï§»çç©ç¬ç±ç¸¾ç¿è»è¬«è³èµ¤è·¡è¹è¿ªè¿¹é©éä½ä½ºå³å¨å¸ååªå¡¡å¡¼å¥ å°å±å»ææ°æ æ®¿æ°æ¾±"],["efa1","çç ç°ç¸çç²ç­ç®ç®­ç¯çºè©®è¼¾è½é¿éé¢é«é»é¡é¡«é¤åæªææµç¤ç«ç¯çµ¶å å²¾åºæ¼¸ç¹ç²éé®é»æ¥æºè¶ä¸äºäº­ååµåå§å®å¹åº­å»·å¾ææºæ¿æ´ææ¶æ¸æ¾æ¥¨æªæ­£æ±æ·æ·¨æ¸æ¹çç¡çç½çºçç¢ç¦ç¨ç©½ç²¾ç¶èè¨è«ªè²é­ééé¦éé éé"],["f0a1","éé é¼å¶åå¼å ¤å¸å¼æææ¢¯æ¿ç¥­ç¬¬èèºè£½è«¸è¹éé¤éé½é¡é½ä¿ååå©å²å¼å½«æªææ©ææºæ¹ææ¢æ£æ§½æ¼æ½®ç§ç¥çªçªçºç¥ç¥ç§ç¨ çªç²ç³çµç¹°èè»è¤è©èª¿è¶èºé é­é£é»éé³¥æç°è¶³éå­å°åæçå§å®å¾æ°æ«æ£æ·ç®ç¨®çµç¶ç¸±è«"],["f1a1","è¸ªè¸µé¾éä½åå·¦åº§æ«ç½ªä¸»ä½ä¾åå§èåªå¨å¾å¥å®å·å»ææ±æ±æ ªæ³¨æ´²æ¹æ¾ç·ç çç±ç´ç´¬ç¶¢èèè¨»èªèµ°èºè¼³é±éééé§ç«¹ç²¥ä¿åååå¯¯å³»ææ¨½æµæºæ¿¬çç¯ç«£è ¢é¡éµéé§¿èä¸­ä»²è¡éå½æ«æ¥«æ±èºå¢ææ¾æ¯çççç¹è¸è­è´ä¹åª"],["f2a1","å«å°åå¿æææ¯æ¯æ¨æºææ³æ­¢æ± æ²æ¼¬ç¥ç ¥ç¥ç¥ç´è¢èè³èè·èèªï§¼è´è¶¾é²ç´ç¨ç¨·ç¹è·ååå¡µæ¯æ¢æææ¡­æ¦æ®æ´¥æº±çç¨ç¡çç¹ç¡ççç§¦ç¸ç¸è»è¯è¢è¨ºè³è»«è¾°é²é­é£é³éä¾å±å§ªå«å¸æ¡çç¾ç§©çªè£è­è³ªè·è¿­ææï§½å·æ½ç·è¼¯"],["f3a1","é¶éå¾µæ²æ¾ä¸ä¾ååååµ¯å·®æ¬¡æ­¤ç£ç®ï§¾è¹è»é®ææ¾ççªé¯é¿é½ªæ°æ¾¯ç¦ç¨çç«ç°çºç²²çºè®è´é½é¤é¥å¹å¯æ¦æ­ç´®å­åå¡¹æææºæ¬ç«è®è®åå¡åµå±å¨¼å» å½°æ´æææ¶æ¢æ§æ»æ¼²çç¡çªè¹èèè¼åµå°å¯å¯¨å½©æ¡ç ¦ç¶µèè¡ééµåæµç­"],["f4a1","è²¬åå¦»æ½èåï§¿åå°ºæ½æææ²æ¥æ»ç èè¹ éé»ä»ååå¤©å·ææ³æ·ºçç©¿èè¦è³¤è¸é·é§é¡é¡éå¸å²åå¾¹æ¤æ¾ç¶´è¼è½éµåå°æ²¾æ·»çç»ç°½ç±¤è©¹è«å å¦¾å¸æ·ççç«è«è²¼è¼å»³æ´æ·¸è½èè«éé¯ï¨åæ¿æ¶æ»¯ç· è«¦é®éé«åå¿å¨ææææ¢¢"],["f5a1","æ¤æ¥æ¨µçç¦ç¡ç¤ç¤ç§ç¨èè¸èèèè²è¶é¢éé®ä¿åç­çèè§¸å¯¸å¿æé¨å¢å¡å¯µæ¤ææ ç¸½è°è¥éæ®å¬å´æå¢æ½æ¨æ¤æ¥¸æ¨æ¹«çºç§è»è©è«è¶¨è¿½éééééééé¨¶é°ä¸çç¥ç«ºç­ç¯ç¸®èè¹è¹´è»¸éæ¥æ¤¿çåºæ®é»åå¿ æ²è²è¡è¡·æ´èµè"],["f6a1","è´åå¹å´å¨¶å°±çç¿ èèè­è¶£éé©é·²å´ä»å æ»æ¸¬å±¤ä¾å¤å¤å³å¹æ¥æ¢æ²»æ·ç¾çç´ç¡ç¨ç©ç·ç·»ç½®è´è©è¼éé¦³é½ååé£­è¦ªä¸ææ¼ä¾µå¯¢ææ²æµ¸çç §éé¼èç§¤ç¨±å¿«ä»å¤å¾å¢®å¦¥æ°æææ¶æ¥èµéé¦±é§å¬ååå¼ï¨æï¨æ¢æ«ææ¿æ¿¯ç¢ç¸è¨"],["f7a1","é¸ååå¦å½ææ­çç­ç¶»èªå¥ªè«æ¢çè½è²ªå¡æ­æ¦»å®å¸æ¹¯ï¨è©åå°å¤ªæ ææ®æ±°æ³°ç¬èèè·é°é¢±ï¨ææ¾¤ææåååè¨ææ¡¶ï¨çç­çµ±éå æ§è¿è¤ªéé ¹å¸å¥å¦¬æéé¬ªæç¹éå¡å©å·´ææ­æºæ·æ³¢æ´¾ç¬ç¶ç ´ç½·è­è·é å¤åæ¿çç£è²©è¾¦é"],["f8a1","éªå«å­æä½©åæææ²æµ¿çç½ç¨è¦è²å½­æ¾ç¹è¨æä¾¿åæçç¯ç·¨ç¿©éé­é¨è²¶åªå¹³æ°èè©å å¬å¹£å»¢å¼æèºè½ééä½åååååºåå¸æææ±æï¨æ³¡æµ¦ç±ç ²èè¯èè¡è²è¢è¤ééªé£½é®å¹æ´æççï¨ä¿µå½å½ªæææ¨æ¼ç¢ç¥¨è¡¨è±¹é£é£é©"],["f9a1","åç¨æ¥è«·è±é¢¨é¦®å½¼æ«ç²ç®è¢«é¿éå¹å¼¼å¿æ³çç¢çç­è¾é¦ä¹é¼ä¸ä½å¦å¤å»æ°æ²³çè·è¦è³ééé°å£å­¸èè¬é¶´å¯æ¨ææ±æ±æ¼¢æ¾£çç½ç¿°ééééå²è½å½å«å¸å£åæª»æ¶µç·è¦éé·é¹¹ååçè¤é¤ééäº¢ä¼å§®å«¦å··æææ­æ¡æ²æ¸¯ç¼¸èèª"],["faa1","ï¨ï¨é äº¥åå³åå¥å­©å®³ææ¥·æµ·ç£è¹è§£è©²è«§éé§­éª¸å¾æ ¸åå¹¸æèè¡äº«åå®ç¦éé¿é¤é¥é¦åå¢èè¨±æ²æ«¶ç»è»æ­éªé©å¥çèµ«é©ä¿å³´å¼¦æ¸ææ³«ç«çç¹ç¾ç©ççµçµ¢ç¸£è·è¡ï¨è³¢éé¡¯å­ç©´è¡é å«ä¿ åå¤¾å³½æ¾æµ¹ç¹èèè¢éé °äº¨ååå"],["fba1","å½¢æ³æ»ççç¯çç©ç©èè¢è¡¡éé¢é£é¦¨å®å½æ æ§æ³èè¹é¯éä¹äºå¼å£å£ºå¥½å²µå¼§æ¶æææ§æ¯«æµ©æ·æ¹æ»¸æ¾æ¿ æ¿©ççç¥çç çç¥ç³ç¸è¡è¦è«è¿èèè´è­·è±ªé¬é é¡¥ææé·å©ææ··æ¸¾ç¿é­å¿½æç¬åå¼æ±æ³æ´ªçç´è¹è¨é´»ååå¬æ¨ºç«çµ"],["fca1","ç¦ç¦¾è±è¯è©±è­è²¨é´ï¨æ´æ«ç¢ºç¢»ç©«ä¸¸åå¥å®¦å¹»æ£ææ­¡æ¥æ¡æ¸ç¥ç°ç´éé©©é°¥æ´»æ»ç¾è±éå°å¹å¾¨ææ¶æ°ææææ¦¥æ³æ¹æ»æ½¢çççç¯ç°§èèééé»å¯åå»»å¾æ¢ææ·æ¦ææªæ·®æ¾®ç°çªç¹ªè¾è´èèª¨è³åç²å®æ©«éå®åå­ææææ¢æ¶æ·"],["fda1","ç»è´éµé©ä¾¯åååå¼ååå¸¿å¾æ½ç¦çéåå³å¡¤å£ççç»è°è¨æè¨å§æçè±ååæ¯å½å¾½æ®æçè«±è¼éº¾ä¼æºçç¦è§æ¤è­é·¸åå¶åæ´¶è¸é»ææ¬£ççåå±¹ç´è¨æ¬ æ¬½æ­å¸æ°æ´½ç¿èåååå«åå§¬å¬å¸æææ±ææ¦çç¹çºç§ç¦§ç¨ç¾²è©°"]]');
            }
          ),
          /***/
          74284: (
            /***/
            function(l) {
              l.exports = JSON.parse('[["0","\\u0000",127],["a140","ãï¼ããï¼â§ï¼ï¼ï¼ï¼ï¸°â¦â¥ï¹ï¹ï¹Â·ï¹ï¹ï¹ï¹ï½âï¸±âï¸³â´ï¸´ï¹ï¼ï¼ï¸µï¸¶ï½ï½ï¸·ï¸¸ããï¸¹ï¸ºããï¸»ï¸¼ããï¸½ï¸¾ããï¸¿ï¹ããï¹ï¹ããï¹ï¹ï¹ï¹"],["a1a1","ï¹ï¹ï¹ï¹ââââããâµâ²ï¼ï¼ï¼â»Â§ãâââ³â²ââââââ¡â â½â¼ã£âÂ¯ï¿£ï¼¿Ëï¹ï¹ï¹ï¹ï¹ï¹ï¹ï¹ ï¹¡ï¼ï¼ÃÃ·Â±âï¼ï¼ï¼â¦â§â âââ¡ï¹¢",4,"ï½â©âªâ¥â ââ¿ããâ«â®âµâ´âââââââââââââ¥â£ï¼"],["a240","ï¼¼âï¹¨ï¼ï¿¥ãï¿ ï¿¡ï¼ï¼ ââï¹©ï¹ªï¹«ãããããã¡ãããÂ°ååååå¡å£å§ç©ç³â",7,"ââââââââ¼â´â¬â¤ââââââââââ­"],["a2a1","â®â°â¯âââªâ¡â¢â£â¥â¤â±â²â³ï¼",9,"â ",9,"ã¡",8,"åååï¼¡",25,"ï½",21],["a340","ï½ï½ï½ï½Î",16,"Î£",6,"Î±",16,"Ï",6,"ã",10],["a3a1","ã",25,"ËËËËË"],["a3e1","â¬"],["a440","ä¸ä¹ä¸ä¸ä¹ä¹äºäºäººå¿å¥å«å åååååååä¸ä¸ä¸ä¸ä¸«ä¸¸å¡ä¹ä¹ä¹ä¹äºäº¡åååºååå£åå£«å¤å¤§å¥³å­å­å­å¯¸å°å°¢å°¸å±±å·å·¥å·±å·²å·³å·¾å¹²å»¾å¼å¼æ"],["a4a1","ä¸ä¸ä¸ä¸­ä¸°ä¸¹ä¹å°¹äºäºäºäºäºäº¢ä»ä»ä»ä»ä»ä»ä»ä»ä»ååå§å­å®å¬åå¶åååå»å¾å¿åå¹ååååååååå£¬å¤©å¤«å¤ªå¤­å­å°å°¤å°ºå±¯å·´å¹»å»¿å¼å¼å¿ææ¶æææ¯æææ¤æ¹æ¥æ°ææ¨æ¬ æ­¢æ­¹æ¯æ¯æ¯æ°æ°´ç«çªç¶ç»çççç¬çä¸"],["a540","ä¸ä¸ä¸ä¸ä¸»ä¹ä¹ä¹ä»¥ä»ä»ä»ä»ä»ä»£ä»¤ä»ä»ååååå¬å¹åºå¸åå åååååä»ååå¡å å¯å®å»å¯å¤å³å¬å®å©å¨å¼å¸åµå«å¦åªå²å±å°å¥å­å»ååå¤"],["a5a1","å¤®å¤±å¥´å¥¶å­å®å°¼å·¨å·§å·¦å¸å¸å¹³å¹¼å¼å¼å¼å¿ææææææ¥æ¦æ®æ¬æªæ«æ­æ­£æ¯æ°æ°æ°¸æ±æ±æ°¾ç¯çççç¦ççç¨ç©ç°ç±ç²ç³çç½ç®ç¿ç®çç¢ç³ç¤ºç¦¾ç©´ç«ä¸ä¸ä¹ä¹ä¹©äºäº¤äº¦äº¥ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä»²ä»¶ä»»ä»°ä»³ä»½ä¼ä¼ååååå¨"],["a640","å±åå°åååååå£åå¡å å°å±åååååååååååååååå ååå³å°å¨å­å¬å¯å©å¤å¤å¤·å¤¸å¦å¥¸å¦å¥½å¥¹å¦å¦å­å­å®å®å®å®å¯ºå°å±¹å·å¸å¹¶å¹´"],["a6a1","å¼å¼å¿å¿æææææ£æææ¶æ©æ¨æ¬æ­æ²æ³ææ½æ´æ±æµæ¬¡æ­¤æ­»æ°æ±æ±æ±æ±æ± æ±æ±æ±¡æ±æ±æ±ç°ççç¾ç«¹ç±³ç³¸ç¼¶ç¾ç¾½èèèèè³è¿èèèè£èªè³è¼èèèè®è²è¾è«è¡è¡è¡£è¥¿é¡ä¸²äº¨ä½ä½ä½ä½ä½ä¼´ä½ä½ä¼°ä½ä½ä¼½ä¼ºä¼¸ä½ä½ä¼¼ä½ä½£"],["a740","ä½ä½ ä¼¯ä½ä¼¶ä½ä½ä½ä½ååååµå¶å·å¥å¤å©åªå¨å«å©åªå¬å£å³åµåå­åå¾å¦åå§ååå³åååå©åå¹å»å¸å®åµå¶å å¼åå±å«åå¬åªå°å¤å«åååå"],["a7a1","ååå¾ååå»å£¯å¤¾å¦å¦å¦¨å¦å¦£å¦å¦å¦å¦¤å¦å¦å¦¥å­å­å­å­å®å®å®å°¬å±å±å°¿å°¾å²å²å²å²å·«å¸åºåºåºå»·å¼å¼å½¤å½¢å½·å½¹å¿å¿å¿å¿å¿±å¿«å¿¸å¿ªæææææææ¶ææ­ææ¼æ¾æ¹æ³ææ¯ææ®æææææ¹æ»æ¸æ±æ´æææææææææææ "],["a840","æææ­¥æ¯æ±æ±æ²æ²æ²æ²æ²æ²æ±ªæ±ºæ²æ±°æ²æ±¨æ²æ²æ±½æ²æ±²æ±¾æ±´æ²æ±¶æ²æ²æ²æ²ç¶ç¼ç½ç¸ç¢ç¡ç çççç¬ç«ç·ç¸çç¯ç£ç§ç§ç¦¿ç©¶ç³»ç½èèèèèèè²è¯è"],["a8a1","èèè¦è§è¨è°·è±è±è²èµ¤èµ°è¶³èº«è»è¾è¾°è¿è¿è¿è¿å·¡éé¢éªé¦é£éééé²é®é±éªé¬ä¸¦ä¹ä¹³äºäºäºäº«äº¬ä½¯ä¾ä¾ä½³ä½¿ä½¬ä¾ä¾ä¾ä¾ä½°ä½µä¾ä½©ä½»ä¾ä½¾ä¾ä¾ä½ºåååå©å·å¶å¸å½å½å»å¸å·åºå°å®å¶åå¾å»ååååå¦å·å¸å¹åååå³åµ"],["a940","åå¸ååå»å·åååå¼åå±å¶ååå¢å¨åå½ååºåå·åªå©å¡å¦å¤å¼å¤å¥å¥å¥å¥å¥å¦¾å¦»å§å¦¹å¦®å§å§å§å§å§å§å§å¦¯å¦³å§å§å­å­¤å­£å®å®å®å®å®å®å°å±å±"],["a9a1","å±å²·å²¡å²¸å²©å²«å²±å²³å¸å¸å¸å¸å¸å¸å¹¸åºåºåºåºåºå»¶å¼¦å¼§å¼©å¾å¾å½¿å½¼å¿å¿ å¿½å¿µå¿¿æææ¯æµææªææ¡æ§æ©æ«ææææ¿æ¾ææ¿ææææ¿ææ¹æææ«æææææ¨æ½æ¼æææææµææ±æææææ¬ææ¾æ§æ¼æºææææææææææ"],["aa40","ææææ­æææ±ææ³æ·ææææ¯æ°æ¿ææ¾ææµæææ¼æªæ²æ¬£æ­¦æ­§æ­¿æ°æ°æ³£æ³¨æ³³æ²±æ³æ³¥æ²³æ²½æ²¾æ²¼æ³¢æ²«æ³æ³æ²¸æ³æ²¹æ³æ²®æ³æ³æ³±æ²¿æ²»æ³¡æ³æ³æ²¬æ³¯æ³æ³æ³ "],["aaa1","çççççç¬ç­ç¸çç§ç©çççççç©ç¨çç«ç¥ç½çççççç²ç´ç¥ç½ç¤¾ç¥ç¥ç§ç§ç©ºç©¹ç«ºç³¾ç½ç¾ç¾èèºè¥è¢è±è¡è«è©è´èªè¯è¥è¾èè³èèè­è½èè¹è±è¬è¥è¯è¸è£è°è¾è·èè±åè¡¨è»è¿è¿è¿éµé¸é±é¶ééé·éééé¿é»é"],["ab40","éé¹é¨ééäºäº­äº®ä¿¡ä¾µä¾¯ä¾¿ä¿ ä¿ä¿ä¿ä¿ä¾¶ä¿ä¿ä¿ä¿ä¾®ä¿ä¿ä¿ä¿ä¿ä¿ä¾·åååå åååååååååååååå»ååå¬åå¨ååå¸å¦å³ååå½åªå"],["aba1","ååå¯å«å±å»å©å§å¿å¿ååå å£å¢åå®åå¥å¥å¥å¥å¥å§å§å§¿å§£å§¨å¨å§¥å§ªå§å§¦å¨å§»å­©å®£å®¦å®¤å®¢å®¥å°å±å±å±å±å³å³å··å¸å¸¥å¸å¹½åº åº¦å»ºå¼å¼­å½¥å¾å¾å¾å¾å¾å¾å¾æææ æ¥ææ¨ææ°æ¨æ¢æææ¬æ«æªæ¤æææææ¼æ­ææ®æ½ææ±æ·"],["ac40","æ¯æ¬æ¾æ´æææ¿ææ«æ½æ¢æ¥æ­æ æ§æ¯ææ¨æ±æ¤æ·æ¿ææ±æææ¬æ¶æ¯æµæ©æ¯æææ´ææ¥æ¸æææ³æ°ææ¢æææ­ªæ®æ®æ®µæ¯æ¯æ°æ³æ´æ´²æ´ªæµæ´¥æ´æ´±æ´æ´"],["aca1","æ´»æ´½æ´¾æ´¶æ´æ³µæ´¹æ´§æ´¸æ´©æ´®æ´µæ´æ´«ç«çºç³ç¬ç¯ç­ç¸ç®ç¤ç°ç²ç¯ç´ç©ç ç¡ç·çç»ç²ççç³çç­ççççç«ç¤ç¥ç¢ç£ç¸ççççççççç¹ç¸ççç¾ç¼ççç ç ç ç ç¥ç¥ç¥ç¥ç¦¹ç¦ºç§ç§ç§ç©¿çªç«¿ç«½ç±½ç´ç´ç´ç´ç´ç´ç´ç¼¸ç¾ç¾¿è"],["ad40","èèèè¶èè¥èèèèè¡èèèè¤èè´è¢è§èèè£èè¦èè¥èèèèè±èèèèèèèè¯èèè¹è»èºè¡è¡«è¦è§è¨è¨è¨è²è² èµ´èµ³è¶´è»è»è¿°è¿¦è¿¢è¿ªè¿¥"],["ada1","è¿­è¿«è¿¤è¿¨ééééééééééééé¢é©éé­é³é é¢¨é£é£é¦é¦ä¹äº³ååå£ä¿¯å¦å¥ä¿¸å©ååå¼ååååä¿ºååå¨ä¿±å¡åååä¿³ä¿®å­åªä¿¾å«åå¼å¤å¥å¢ååååååååååªå¿åååå¨ååå·å¼å¥å²ååºåå©å­å¡åå®åª"],["ae40","å¦å§åå½åååååååå å¤å¥å¥å¥å¨å¨å¨å¨å¨å¨å§¬å¨ å¨£å¨©å¨¥å¨å¨å­«å±å®°å®³å®¶å®´å®®å®µå®¹å®¸å°å±å±å±å³­å³½å³»å³ªå³¨å³°å³¶å´å³´å·®å¸­å¸«åº«åº­åº§å¼±å¾å¾å¾æ"],["aea1","æ£æ¥æææ­æ©æ¯ææææææææææ³ææ¿ææ¾æ¯ææææææºææ½æªæ«æ¨ææææææææææææææææ¸ææææ ¡æ ¸æ¡æ¡æ¡æ ¹æ¡æ¡æ ©æ¢³æ æ¡æ¡æ ½æ´æ¡æ¡æ ¼æ¡æ ªæ¡æ æ æ¡æ®æ®æ®·æ°£æ°§æ°¨æ°¦æ°¤æ³°æµªæ¶æ¶æ¶æµ¦æµ¸æµ·æµæ¶"],["af40","æµ¬æ¶æµ®æµæµ´æµ©æ¶æ¶æµ¹æ¶æµ¥æ¶ççç¤çççç¹ç¹ç¼ç¹ç½ç¸ç·çç­çç®ç çªççççççç¾ççç²ç³ç½ç¼ç¹çç¸çç°çççç©çç ç¨ç©ç °ç §ç ¸ç ç ´ç ·"],["afa1","ç ¥ç ­ç  ç ç ²ç¥ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ç§¤ç§£ç§§ç§ç§¦ç§©ç§çªçªç«ç¬ç¬ç²ç´¡ç´ç´ç´ç´ ç´¢ç´ç´ç´ç´ç´ç´ç´ç´ç¼ºç½ç¾ç¿ç¿èèèèèè½è¿è±èè°èè­è´èè¸è³èè½èè¼è¯è­è¬èèèªè«è¨è¬è»è«èèèè¸èèèµè´èè²è¹è¶èèè±è¨è"],["b040","èèèªèè¤è©èè£èè¡°è¡·è¢è¢è¡½è¡¹è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è±è±ºè±¹è²¡è²¢èµ·èº¬è»è»è»è¾±ééè¿·éè¿ºè¿´éè¿½éè¿¸éé¡éé¢éééééééééé¢é£é¡"],["b0a1","ééé¤ééé»é£¢é¦¬éª¨é«é¬¥é¬²é¬¼ä¹¾åºå½ååååååå¥å¶åååµå´å·ååå¯å­ååå°åªå¯åååååååå¿åå¾åæ¼ååªå¦ååå¡ååå±åååå¯å¤å¸å®åå¬å£å³ååååååå å å å å¤åºå å µå·å¹å¤ å¥¢å¨¶å©å©å©¦å©ªå©"],["b140","å¨¼å©¢å©å©å©å­°å¯å¯å¯å¯å®¿å¯å°å°å°å± å±å±å´å´å´å´å´å´¢å´å´©å´å´å´¤å´§å´å·¢å¸¸å¸¶å¸³å¸·åº·åº¸åº¶åºµåº¾å¼µå¼·å½å½¬å½©å½«å¾å¾å¾å¾å¾¡å¾ å¾æ¿æ£ææ æ¨ææ´æ¦æ½"],["b1a1","ææ»æµææ¼æææææ¸ææææææ æ§æ²ææ¢æ¥æ·æ§ææªæ±æ©ææææ«æ¨ææææ¡æ¬ææææ»æ©æ¨æºæææææåæææææææ¬æææææææ¤æ¨æ¦ææ¹åææ¢æ¢¯æ¢¢æ¢æ¢µæ¡¿æ¡¶æ¢±æ¢§æ¢æ¢°æ¢æ£æ¢­æ¢æ¢æ¢æ¢æ¢¨æ¢æ¢¡æ¢æ¬²æ®º"],["b240","æ¯«æ¯¬æ°«æ¶æ¶¼æ·³æ·æ¶²æ·¡æ·æ·¤æ·»æ·ºæ¸æ·æ·æ¶¯æ·æ¶®æ·æ·¹æ¶¸æ··æ·µæ·æ·æ¸æ¶µæ·æ·«æ·æ·ªæ·±æ·®æ·¨æ·æ·æ¶ªæ·¬æ¶¿æ·¦ç¹ççç½ç¯ç½ç½çççççççççççç¾çç ç¶"],["b2a1","ç·çç¢ç¥ç¦ç¢ç°ççççµççççççç·ç¾ç¼ç¶ç¸çºç¡«ç¡ç¡ç¥¥ç¥¨ç¥­ç§»çªçªç¬ ç¬¨ç¬ç¬¬ç¬¦ç¬ç¬ç¬®ç²ç²ç²çµçµçµ±ç´®ç´¹ç´¼çµç´°ç´³çµç´¯çµç´²ç´±ç¼½ç¾ç¾ç¿ç¿ç¿èèèè¯èè£è«è©è°è¤èèµè·è¶è¹èèèè¸è¢èè½è«èèèèè è·è»è¼"],["b340","èè§èå½ªèèè¶èèµèèè±è¯èè¡è¢è¢è¢«è¢è¢è¢è¢è¦è¦è¨ªè¨è¨£è¨¥è¨±è¨­è¨è¨è¨¢è±è±è²©è²¬è²«è²¨è²ªè²§èµ§èµ¦è¶¾è¶ºè»è»ééééé£éééééé éé¢ééé"],["b3a1","é¨é­é½éééµé¦é£é§é­é©ééªéµé³é¸é°é´é¶é·é¬ééªé©ç« ç«é é é­é³¥é¹µé¹¿éº¥éº»å¢ååååååååæå±å²å´åµå©ååååå¥å»åå§å¼ååååååªååååå³å®åå¾å²åå»å¬å±å¾åå«ååå ¯å ªå ´å ¤å °å ±å ¡å å  å£¹å£ºå¥ "],["b440","å©·åªå©¿åªåªåª§å­³å­±å¯å¯å¯å¯å°å°å°±åµåµå´´åµå·½å¹å¸½å¹å¹å¹¾å»å»å»å»å¼¼å½­å¾©å¾ªå¾¨ææ¡æ²æ¶æ ææ£æºææ°æ»æ´æ¨æ±ææ¶ææææææ£ææææ©æææ"],["b4a1","ææ£ææ¡ææ­æ®æ¶æ´æªææææ¹ææ¦æ¢æ£æææ¯æ®æ°æ´æ¶æ¯ææºæ¾æ·æ¾æ¿æææ£ºæ£æ£ æ£æ£æ¤æ£æ£µæ£®æ£§æ£¹æ£æ£²æ££æ£æ£æ¤æ¤æ¤æ£æ£æ¥®æ£»æ¬¾æ¬ºæ¬½æ®æ®æ®¼æ¯¯æ°®æ°¯æ°¬æ¸¯æ¸¸æ¹æ¸¡æ¸²æ¹§æ¹æ¸ æ¸¥æ¸£æ¸æ¹æ¹æ¸¤æ¹æ¹®æ¸­æ¸¦æ¹¯æ¸´æ¹æ¸ºæ¸¬æ¹æ¸æ¸¾æ»"],["b540","æºæ¸æ¹æ¹£æ¹æ¹²æ¹©æ¹ççç¦ç°ç¡ç¶ç®ççççç¶ç¥ç´ç©çºçªç³ç¢ç¥çµç¶ç´ç¯çç¦ç¨ç¥ç¦ç«çªç¢çç£çççç ç»ç¼ççç´ççç­ç¡ç¡¬ç¡¯ç¨ç¨ç¨ç¨ç¨çª"],["b5a1","çªçªç«¥ç«£ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç²ç²¥çµçµçµ¨çµç´«çµ®çµ²çµ¡çµ¦çµ¢çµ°çµ³åç¿ç¿èèèèèèèèè¹èè¾èèè´èèè©èè¸èè èèèè¯è±è´èèè°èèè½è²èè¸èèèèèèèèèè­èèè¤èèè¡è£è£è¢±è¦è¦è¨»è© è©è©è¨¼è©"],["b640","è©è©è©è©è¨´è¨ºè¨¶è©è±¡è²è²¯è²¼è²³è²½è³è²»è³è²´è²·è²¶è²¿è²¸è¶è¶è¶è·è·è·è·è·è·è·è·è»»è»¸è»¼è¾é®éµé±é¸é²é¶ééµéé¾é£é¥éééé£éééééééééé"],["b6a1","ééééééé½éééé²ééééééé¯é²éé é é é£§é£ªé£¯é£©é£²é£­é¦®é¦­é»é»é»äºå­åµå²å³åå¾å¬å·å»å¯åå¿å·å½åå¦å¤å¢å£å¯åå¨åå¦ååååå£å¤å¯åå¡ååå¥åååå¡å¡å¡å¡å¡å¡å¡«å¡å¡­å¡å¡¢å¡å¡å¥§å«å«å«åª¾åª½åª¼"],["b740","åª³å«åª²åµ©åµ¯å¹å¹¹å»å»å¼å½å¾¬å¾®æææææ³ææ¹æææææææ¾æ´æ§æææ·æ¡æ¢ææ¾ææªæ­æ½æ¬æææææ¶ææææ¬ææ°ææææææææææ¦æ¥­"],["b7a1","æ¥æ¥·æ¥ æ¥æ¥µæ¤°æ¦æ¥æ¥¨æ¥«æ¥æ¥æ¥¹æ¦æ¥æ¥£æ¥æ­æ­²æ¯æ®¿æ¯æ¯½æº¢æº¯æ»æº¶æ»æºæºæ»æ»æº¥æºæº¼æººæº«æ»æºæºæ»æ»æºªæº§æº´ççç©ç¤çç§çç¬ç¦çç¥ççç¨ççºçç·çç¿ç¾ç¯çççççç¿çççç¶ç¸çç°çç²ç±çºç¿ç´ç³çççç«ç¦çç£"],["b840","ç¹çªç¬çç¥ç¨ç¢ç®ç¢ç¢°ç¢ç¢ç¢ç¢ç¡¼ç¢ç¢ç¡¿ç¥ºç¥¿ç¦è¬ç¦½ç¨ç¨ç¨ ç¨ç¨ç¨çªçª ç­·ç¯ç­ ç­®ç­§ç²±ç²³ç²µç¶çµ¹ç¶ç¶ç¶çµç½®ç½©ç½ªç½²ç¾©ç¾¨ç¾¤èèèèè±è°è¸è¥è®è³è«"],["b8a1","è¹èºè¦èèèè·è½è±èµè¦è«èè¬èè¼èµè¡è£è©è­èèèèè¹èèèèè¾è»èèèèè¡è£è£è£è£è£è£è£¡è£è£è£è¦è§£è©«è©²è©³è©¦è©©è©°èªè©¼è©£èª è©±èªè©­è©¢è©®è©¬è©¹è©»è¨¾è©¨è±¢è²è²è³è³è³è³è²²è³è³è³è·¡è·è·¨è·¯è·³è·ºè·ªè·¤è·¦èº²è¼è¼è»¾è¼"],["b940","è¾è¾²éééééé¼éééééééé¾éééé¬éªé©éé·éé¸é½éé¾ééé¤éé´éééé¹é¿éééééééééé·é»é¹é¶éé´é¶é é é é é é é£¼é£´"],["b9a1","é£½é£¾é¦³é¦±é¦´é«¡é³©éºé¼é¼é¼ å§å®å¥åå­ååååå±åå©å¢å³ååå±å­å¾åååå½åååååå·ååååå¶ååå¡µå¡¾å¢å¢å¢å¡¹å¢å¡½å£½å¤¥å¤¢å¤¤å¥ªå¥©å«¡å«¦å«©å«å«å«å«£å­µå¯å¯§å¯¡å¯¥å¯¦å¯¨å¯¢å¯¤å¯å°å±¢å¶å¶å¹å¹£å¹å¹å¹å»å»å¼å½å½°å¾¹æ"],["ba40","æ¿ææ·æ¢æ£ææææµæªææææ¤æ¸ææºææ§æ´æ­æ»æ²æ¡æææ¢æ¨ææ¦æ¦¨æ¦æ§æ¦®æ§æ§æ¦æ¦·æ¦»æ¦«æ¦´æ§æ§æ¦­æ§æ¦¦æ§æ¦£æ­æ­æ°³æ¼³æ¼æ»¾æ¼æ»´æ¼©æ¼¾æ¼ æ¼¬æ¼æ¼æ¼¢"],["baa1","æ»¿æ»¯æ¼æ¼±æ¼¸æ¼²æ¼£æ¼æ¼«æ¼¯æ¾æ¼ªæ»¬æ¼æ»²æ»æ»·ççç½çççç¾ççççç¤ç£çªç°ç­ççç§ççççç¡ç£çç½ç¿ç¡ç£ç¢ç¢§ç¢³ç¢©ç¢£ç¦ç¦ç¦ç¨®ç¨±çªªçª©ç«­ç«¯ç®¡ç®ç®ç­µç®ç®ç®ç®ç®¸ç®ç®ç²¹ç²½ç²¾ç¶»ç¶°ç¶ç¶½ç¶¾ç¶ ç·ç¶´ç¶²ç¶±ç¶ºç¶¢ç¶¿ç¶µç¶¸ç¶­ç·ç·ç¶¬"],["bb40","ç½°ç¿ ç¿¡ç¿èèèèèèèèè¿èè§èºèèèèèè¿èèèèè²èèè¸èèèè¼èèè¿èè»è¢è¥è´èèè·è©è£³è¤è£´è£¹è£¸è£½è£¨è¤è£¯èª¦èªèªèª£èªèª¡èªèª¤"],["bba1","èªªèª¥èª¨èªèªèªèª§è±ªè²è²è³è³è³èµ«è¶è¶è·¼è¼è¼è¼è¼è¾£é ééé£ééé¢ééééééµé¸é·é´é¸ééééé»ééé¨é¼éé¡é¨é©é£é¥é¤ééééééé¼éé¶é é é¢¯é¢±é¤é¤é¤é¤é§éª¯éª°é«¦é­é­é³´é³¶é³³éº¼é¼»é½ååå»åµå¹ååååå"],["bc40","åååååå°å²å®å»å¹å²å¿å´å©åååå´å¶å¯å°å¢å¢å¢å¢³å¢å¢®å¢©å¢¦å¥­å¬å«»å¬å«µå¬å¬å¯®å¯¬å¯©å¯«å±¤å±¥å¶å¶å¹¢å¹å¹¡å»¢å»å»å»å»£å» å½å½±å¾·å¾µæ¶æ§æ®æææ"],["bca1","æ¼æ°æ«æ¾æ§ææ«ææ¬ææ¤ææ®æ®æ©æ¯æ¹ææ²æææ°æ¥æææ©ææ®æ­æ«ææ¬ææ¢æ³æµæ·æ¸æ®æ«æ´æ±æ¨£æ¨æ§¨æ¨æ¨æ¨æ§½æ¨¡æ¨æ¨æ§³æ¨æ¨æ§­æ¨æ­æ­æ®¤æ¯æ¯æ¼¿æ½¼æ¾æ½æ½¦æ½æ¾æ½­æ½æ½¸æ½®æ¾æ½ºæ½°æ½¤æ¾æ½æ»æ½¯æ½ æ½çç¬ç±ç¨ççççç©çç"],["bd40","ç¾çç¿ç ç©çç¤ç¦ç¡ç¢ççºç¤çççççç£ç£ç¢ºç£ç¢¾ç£ç¢¼ç£ç¨¿ç¨¼ç©ç¨½ç¨·ç¨»çª¯çª®ç®­ç®±ç¯ç®´ç¯ç¯ç¯ç® ç¯ç³ç· ç·´ç·¯ç·»ç·ç·¬ç·ç·¨ç·£ç·ç·ç·©ç¶ç·ç·²ç·¹ç½µç½·ç¾¯"],["bda1","ç¿©è¦èèèè èèèè½èè®è¬è­èèè£è¡èè¬è¥è¿èèè´è¶è è¦è¸è¨èèèèè¡è¡è¤è¤è¤è¤è¤è¤èª¼è«è«è«èªè«è«¸èª²è«è«èª¿èª°è«è«èª¶èª¹è«è±è±è±¬è³ è³è³¦è³¤è³¬è³­è³¢è³£è³è³ªè³¡èµ­è¶è¶£è¸«è¸è¸è¸¢è¸è¸©è¸è¸¡è¸èººè¼è¼è¼è¼©è¼¦è¼ªè¼è¼"],["be40","è¼¥é©é®é¨é­é·é°é­é§é±éééééé»é·éªé¬é¤éé³é¼ééé°é²é­é±ééééé éééé ¡é «é é¢³é¤é¤é¤é¤é§é§é§é§é§é§é§é§éª·é«®é«¯é¬§é­é­é­·é­¯é´é´"],["bea1","é´éº©éº¾é»å¢¨é½åååååååªåååå³åå«å¹å©å¤å¸åªå¨å¥å±å¯å¬å¢å¶å£å¢¾å£å£å¥®å¬å¬´å­¸å¯°å°å½æ²ææ©æææ¶æ¾æææ°ææææ»æ¼ææææææ¿æææ¾æ´æææ¹æææ¸æ¨½æ¨¸æ¨ºæ©æ©«æ©æ¨¹æ©æ©¢æ©¡æ©æ©æ¨µæ©æ©æ­æ­·æ°æ¿æ¾±æ¾¡"],["bf40","æ¿æ¾¤æ¿æ¾§æ¾³æ¿æ¾¹æ¾¶æ¾¦æ¾ æ¾´ç¾çççççç¹çççççç¨çç£çççç¢ççç´ç¸çºç§ç¥ç ççç¥ç£¨ç£ç£¬ç£§ç¦¦ç©ç©ç©ç©ç©çªºç¯ç°ç¯ç¯¤ç¯ç¯¡ç¯©ç¯¦ç³ç³ç¸"],["bfa1","ç¸ç¸ç¸ç¸£ç¸ç¸ç¸ç¸ç½¹ç¾²ç¿°ç¿±ç¿®è¨è³è©è¨è»èèèèèèè¨è©èèè­èªèèèèè¢èè¡¡è¤ªè¤²è¤¥è¤«è¤¡è¦ªè¦¦è«¦è«ºè««è«±è¬è«è«§è«®è«¾è¬è¬è«·è«­è«³è«¶è«¼è±«è±­è²è³´è¹è¸±è¸´è¹è¸¹è¸µè¼»è¼¯è¼¸è¼³è¾¨è¾¦éµé´é¸é²é¼éºé´éé é¶é¸é³é¯é¢é¼é«éé"],["c040","éé¦é¡éé®éé»é§é¨éªéééééééééé¦éé °é ¸é »é ·é ­é ¹é ¤é¤é¤¨é¤é¤é¤¡é¤é§­é§¢é§±éª¸éª¼é«»é«­é¬¨é®é´é´£é´¦é´¨é´é´é»é»é¾é¾åªåå¡å²åµååååå"],["c0a1","åå£å£å£å£å¬°å¬ªå¬¤å­ºå°·å±¨å¶¼å¶ºå¶½å¶¸å¹«å½å¾½ææææ¦ææ²æ´ææææ æ°æ¦æ¬æ±æ¢æ­æææææªæªæªæª¢æªæ«æª£æ©¾æªæªæª æ­æ®®æ¯æ°æ¿æ¿±æ¿æ¿ æ¿æ¿¤æ¿«æ¿¯æ¾æ¿¬æ¿¡æ¿©æ¿æ¿®æ¿°ç§çç®ç¦ç¥ç­ç¬ç´ç çµçç°ç²ç©ç°ç¦ç¨ççççªç³çªç°ç¬"],["c140","ç§ç­ç¯ç£·ç£ºç£´ç£¯ç¤ç¦§ç¦ªç©çª¿ç°ç°ç¯¾ç¯·ç°ç¯ ç³ ç³ç³ç³¢ç³ç³ç³ç¸®ç¸¾ç¹ç¸·ç¸²ç¹ç¸«ç¸½ç¸±ç¹ç¹ç¸´ç¸¹ç¹ç¸µç¸¿ç¸¯ç½ç¿³ç¿¼è±è²è°è¯è³èèèºèèè¿è½èè¾è¨èè±èª"],["c1a1","èè¾èèèè¯èèè¨èè§èèè³èèè«è»èºèèè¤»è¤¶è¥è¤¸è¤½è¦¬è¬è¬è¬è¬è¬è¬ è¬è¬è¬è±è°¿è±³è³ºè³½è³¼è³¸è³»è¶¨è¹è¹è¹è¹è½è¼¾è½è½è¼¿é¿é½ééééé¹é£ééééé¨éµéé¥ééé¾é¬éé°éééééééé±é¸éééé éé¡é¢¶é¤µé¨"],["c240","é§¿é®®é®«é®ªé®­é´»é´¿éºé»é»é»é»é»é¼¾é½å¢åå®å£å£å¬¸å½æ£æ³æ´æ²æ¾ææºæ»æ·æ·ææ¦æª³æª¬æ«æª»æª¸æ«æª®æª¯æ­æ­¸æ®¯ççæ¿¾çæ¿ºççç»ç¼ç¾ç¸ç·çµç§ç¿ççç"],["c2a1","çç½ç¿ç»ç¼ç¤ç¦®ç©¡ç©¢ç© ç«ç«ç°«ç°§ç°ªç°ç°£ç°¡ç³§ç¹ç¹ç¹ç¹ç¹¡ç¹ç¹ç½ç¿¹ç¿»è·è¶èèèèè©èèèè°èºè¹è¦è¯è¬è²è è¦è¦²è§´è¬¨è¬¹è¬¬è¬«è±è´è¹è¹£è¹¦è¹¤è¹è¹è»è½è½éééé«é¬ééééé¢é³é®é¬é°éééééééé¢ééééé¤é£é¦"],["c340","é­é¹é¡é¡é¡é¡é¡é¢ºé¤¾é¤¿é¤½é¤®é¦¥é¨é«é¬é¬é­é­é­é¯é¯é¯½é¯é¯éµéµéµ é» é¼é¼¬å³å¥å£å£å£¢å¯µé¾å»¬æ²æ·æ¶æµæææ ææ«¥æ«æ«æ«ççç¨çççççççç¢ç¸"],["c3a1","çºç½çç£çççç¡çç¤ç¦±ç©«ç©©ç°¾ç°¿ç°¸ç°½ç°·ç±ç¹«ç¹­ç¹¹ç¹©ç¹ªç¾ç¹³ç¾¶ç¾¹ç¾¸èè©èèªèè¤è¥è·è»è è è¹è¾è¥ è¥è¥è¥è­è­è­è­è­è­è­è­è­è´è´è¹¼è¹²èºè¹¶è¹¬è¹ºè¹´è½è½è¾­ééé±é®é¡éééééééé¢ééé¤éé¨éé´é£éªé§é¡éé»é¡"],["c440","é¡é¡é¢¼é¥é¥é¨é¨é¬é¯¨é¯§é¯é¯é¶éµ¡éµ²éµªéµ¬éºéºéºéº´å¸å¨å·å¶å´å¼å£¤å­å­å­½å¯¶å·æ¸æºææææ¦æ§æ«¬ç¾ç°ç²çç»çç¢ç¥ç¤¦ç¤ªç¤¬ç¤«ç«ç«¶ç±ç±ç±ç³¯ç³°è¾®ç¹½ç¹¼"],["c4a1","çºç½èèè¦è»è¹èèºèèèèè è è¥¤è¦ºè§¸è­°è­¬è­¦è­¯è­è­«è´è´èºèºèºèºé´éééé½é¡é°é£é¥é¥é¦¨é¨«é¨°é¨·é¨µé°é°é¹¹éºµé»¨é¼¯é½é½£é½¡å·å¸åååå¤å±¬å·æ¼æ¾ææææ©æ«»æ¬æ«ºæ®²ççç§ççç©çç±çºçºç¾¼èè­èè £è ¢è ¡è è¥ªè¥¬è¦½è­´"],["c540","è­·è­½è´èºèºèºè½è¾¯éºé®é³éµéºé¸é²é«é¢é¸é¹é²é¿é¡§é¡¥é¥é©é©é©é¨¾é«é­é­é°­é°¥é¶¯é¶´é·é¶¸éºé»¯é¼é½é½¦é½§å¼å»åååå­¿å·å·å½æ¿æ¤æ¬æ­¡çççç¤çç®ç¬"],["c5a1","ç¦³ç± ç±è¾è½èè¥²è¥¯è§¼è®è´è´èºèºè½¡ééééé½é¾ééé¡«é¥é©é©é«é¬é±é°±é°¾é°»é·é·é¼´é½¬é½ªé¾åå·ææ£æ«æªæ¬æ¬çç«ç±¤ç±£ç±¥çºçºçºè¢è¸è¿è ±è®ééé£é é¤é¨é¡¯é¥é©é©é©é«é«é«é±é±é±é·¥éºé»´åå£©æ¬çç±ç²çç½ç¾è ¶è ¹è¡¢è®è®"],["c640","è®è·è´ééªééééé¡°é©é¬¢é­é±é·¹é·ºé¹¼é¹½é¼é½·é½²å»³æ¬ç£ç±¬ç±®è »è§èº¡éé²é°é¡±é¥é«é¬£é»ç¤çè®é·éé©¢é©¥çºè®èºªéé½é¾é¼é±·é±¸é»·è±é¿é¸ç¨é©ªé¬±é¸é¸ç±²"],["c940","ä¹ä¹åµååä¸ä¸ä¹äºåï¨å±®å½³ä¸åä¸ä¸®äºä»ä»ä»åå¼å¬å¹å å¤å¤¬å°å·¿æ¡æ®³æ¯æ°ç¿ä¸±ä¸¼ä»¨ä»ä»©ä»¡ä»ä»åååå¢å£å¤å¤¯å®å®å°å°»å±´å±³å¸åºåºå¿æææ°"],["c9a1","æ°¶æ±æ°¿æ°»ç®ç°çç¦¸èéä¼ä¼ä¼¬ä»µä¼ä»±ä¼ä»·ä¼ä¼ä¼ä¼ä¼¢ä¼ä¼ä»´ä¼å±åååå¦å¢ååååå¡åå®åªå´å¤¼å¦å¥¼å¦å¥»å¥¾å¥·å¥¿å­å°å°¥å±¼å±ºå±»å±¾å·å¹µåºå¼å¼å½´å¿å¿å¿æææ¤æ¡æ¦æ¢ææ ææ¥æ¯æ®æ¾æ¹æ¸æ»æºæ¿æ¼æ³æ°æ±æ±æ±æ±æ±æ±æ±"],["ca40","æ±ç±çç´çµççªç¿ç©µç½è¸è¼èè½è¿èè¥¾éééééé¢é¤é é£ä½ä¼»ä½¢ä½ä½ä½¤ä¼¾ä½§ä½ä½ä½ä½ä¼­ä¼³ä¼¿ä½¡åå¹ååå¡å­å®åå£å²ååå°å·åªååååå¥å"],["caa1","å½ååå¨å¤åå®å§å¥ååååååå¤å¥å¦¦å¦å¦ å¦å¦å¦¢å¦å¦å¦§å¦¡å®å®å°¨å°ªå²å²å²å²å²å²å²å²å²å²å· å¸å¸åºåºåºåºåºå¼å¼å½¸å½¶å¿å¿å¿å¿­å¿¨å¿®å¿³å¿¡å¿¤å¿£å¿ºå¿¯å¿·å¿»æå¿´æºæææææææ±æ»æºæ°æææ·æ½æ²æ´æ·æ°æ´æ³æ²æµææ"],["cb40","æææææææææ¯æ°æ°æ±¸æ±§æ±«æ²æ²æ²æ±±æ±¯æ±©æ²æ±­æ²æ²æ²æ±¦æ±³æ±¥æ±»æ²ç´çºç£ç¿ç½ççççºçççççççºç¹çççç¤½è´èèèèèèèèèèè"],["cba1","èèèè±¸è¿è¾¿éé¡é¥éé§é é°é¨é¯é­ä¸³ä¾ä½¼ä¾ä½½ä¾ä¾ä½¶ä½´ä¾ä¾ä½·ä½ä¾ä½ªä¾ä½¹ä¾ä½¸ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä½«ä½®åå¼å¾åµå²å³åå±å¼ååå¼åååå¿ååååå«åºå¾å¥å¬å´å¦åå¯å¡å åå£å§å¤å·å¹å¯å²å­å«å±å°å¶ååµå»å³å´å¢"],["cc40","å¨å½å¤å¥å¦µå¦ºå§å§å¦²å§å§å¦¶å¦¼å§å§å¦±å¦½å§å§å¦´å§å­¢å­¥å®å®å±å±å²®å²¤å² å²µå²¯å²¨å²¬å²å²£å²­å²¢å²ªå²§å²å²¥å²¶å²°å²¦å¸å¸å¸å¼¨å¼¢å¼£å¼¤å½å¾å½¾å½½å¿å¿¥æ­æ¦ææ²æ"],["cca1","æ´æææ³æææ¬æ¢æææ®æææææææ½æ­æ´ææ¾æªæ¶ææ®æ³æ¯æ»æ©æ°æ¸æ½æ¨æ»ææ¼ææææ»æææææ½æææ¶æææ¬æææ¶æ»ææææ´æææºæææææ½ææ¸æ¹ææ¬¥æ®æ­¾æ¯æ°æ²æ³¬æ³«æ³®æ³æ²¶æ³æ²­æ³§æ²·æ³æ³æ²ºæ³æ³æ³­æ³²"],["cd40","æ³æ³æ²´æ²æ²æ²æ³æ³æ´°æ³æ³æ²°æ³¹æ³æ³©æ³ççççççççççççªççççççççççç¤ç¡ç­ç¦ç¢ç ç¬ççç¨ç¿çç¾ççç¯ç³ç±ç°çµç¸ç¼ç¹ç»çº"],["cda1","ç·ç¥ç¤¿ç§ç©¸ç©»ç«»ç±µç³½èµèè®è£è¸èµè­è è èè«èèèèµè§è®è¼èèºè´è¨è¡è©èè¤èè¶è¢è°è¯è­è®è±è¿è¿è¿è¿è¿è¿è¿é²é´é¯é³é°é¹é½é¼éºéä¿ä¿ä¿ä¾²ä¿ä¿ä¿ä¿ä¿ä¿ä¾»ä¾³ä¿ä¿ä¿ä¾ºä¿ä¾¹ä¿¬ååååå½å¼åååååºå¡å­å¥å"],["ce40","åèå·å®åå¶ååå å°å¼å¢å¾å²åå°åµååå¤ååååååååå¥ååå£´å¤å¥å§¡å§å§®å¨å§±å§å§ºå§½å§¼å§¶å§¤å§²å§·å§å§©å§³å§µå§ å§¾å§´å§­å®¨å±å³å³å³å³å³å³"],["cea1","å³å³å³å³å³å³å³å³å³å³å³å³å³å³¸å·¹å¸¡å¸¢å¸£å¸ å¸¤åº°åº¤åº¢åºåº£åº¥å¼å¼®å½å¾æ·æ¹ææ²æææææææææææ¤æææ¦æ®ææææææµæææ«æ¹æææ¸æ¶ææææºææ»æ°æææªæ¿æ¶æ¡æ²æµææ¦æ¢æ³æ«æºææ´æ¹æ®ææææ²ææº"],["cf40","ææ»æ¸æææ·ææ«æ¤ææµææ³æ·æ¶æ®æ£ææ¹ææ§æ°æ²æ¼ææ­ææ®æ¦ææºææææªææ¬¨æ®æ®æ®¶æ¯æ¯æ¯ æ° æ°¡æ´¨æ´´æ´­æ´æ´¼æ´¿æ´æ´æ³æ´³æ´æ´æ´ºæ´æ´æ´æ´æµ"],["cfa1","æ´æ´æ´·æ´æ´æµæ´æ´ æ´¬æ´æ´¢æ´æ´ç·çç¾ç±ç°ç¡ç´çµç©çççç¬ç°ç³ç®çç¤ç¨ç«ççªç¦ç£çççççç¹ç¶çµç´ç«ç¿çç¾ççç¸çç¬ç®ç®ççç§çªç¹ççççççç·ç»çºç§ç¨ç ç ç ç ç ç ç ç ç ç ç¥ç¥ç¥ç¥ç¥ç§ç§ç§ç§ç§çª"],["d040","ç©¾ç«ç¬ç¬ç±ºç±¸ç±¹ç±¿ç²ç²ç´ç´ç´ç½ç¾ç¾ç¾¾èèèèè·èèè èèèèèè£èèèèèèèè¦èè¿è¡èèè¾è¹èè¨èèèºè«èè´è¬è¡è²èµèè»è¶è°èª"],["d0a1","è¤è èºè³è­è·è´è¼è³è¡è¡è¡§è¡ªè¡©è§è¨è¨èµ²è¿£è¿¡è¿®è¿ é±é½é¿ééé¾éééééééééééååååå¢å°åä¿µä¿´å³å·å¬ä¿¶ä¿·ååå å§åµå¯å±åååååååååå¡åååååå¢åååå¦å¢ååå§å³å¤åå¿ååå«ååå±"],["d140","åå»å·å¸å ååååååå ²åååºåå½å¼å¸å¶å¿ååå¹åå¤å¥å¨å¨å¨­å¨®å¨å¨å¨å¨å¨å¨³å­¬å®§å®­å®¬å°å±å±å³¬å³¿å³®å³±å³·å´å³¹å¸©å¸¨åº¨åº®åºªåº¬å¼³å¼°å½§æææ§"],["d1a1","ææ¢æææææææææææææææ²æææ¬æææ¶ææ¤æ¹æææ¼æ©ææ´ææææ­ææ³æææ¸ææææææææææææææææ æ æ¡æ ²æ ³æ »æ¡æ¡æ æ ±æ æ µæ «æ ­æ ¯æ¡æ¡æ ´æ æ æ æ ¦æ ¨æ ®æ¡æ ºæ ¥æ  æ¬¬æ¬¯æ¬­æ¬±æ¬´æ­­èæ®æ¯¦æ¯¤"],["d240","æ¯¨æ¯£æ¯¢æ¯§æ°¥æµºæµ£æµ¤æµ¶æ´æµ¡æ¶æµæµ¢æµ­æµ¯æ¶æ¶æ·¯æµ¿æ¶æµæµ§æµ æ¶æµ°æµ¼æµæ¶æ¶æ´¯æµ¨æ¶æµ¾æ¶æ¶æ´æ¶æµ»æµ½æµµæ¶çççççç¼¹ç¢çççç çççççççç¡çç¸"],["d2a1","ç·ç¶ççºç´ç¾ç¶ç³ç»çççç¥çç¼ç§ç£ç©ççççççççç¨ççç´çµç¡ççç°çç»ççç¿ç¶çºçççççççç£ççççç¢ç§ç £ç ¬ç ¢ç µç ¯ç ¨ç ®ç «ç ¡ç ©ç ³ç ªç ±ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç§«ç§¬ç§ ç§®ç§­ç§ªç§ç§ç§çªçªçªçªçªçªçªç«ç¬"],["d340","ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç²ç²ç²ç²ç²ç²ç²ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç½ç½¡ç½ç½ ç½ç½ç¾ç¾ç¿ç¿ç¿èè¾è¹èºè²è¹èµèè»èèè¯è¥è³è­èèèè¥èè¿èè¦èè¢"],["d3a1","èèèèªèè¼èèè¤è è·è¯è©èèèèèè¬èè§èèèè¢è¨èèèèèèèèèèè¥èè¡è§èèèèèèè¡è¡è¡­è¡µè¡¶è¡²è¢è¡±è¡¿è¡¯è¢è¡¾è¡´è¡¼è¨è±è±è±»è²¤è²£èµ¶èµ¸è¶µè¶·è¶¶è»è»è¿¾è¿µéè¿¿è¿»éè¿¼è¿¶éé ééé£éé¥ééééé¤é"],["d440","éééé¢éééé¼é££é«é¬¯ä¹¿å°åªå¡åå åååå²åååååå¢åååå©å«å£å¤ååå®å³åååå«å­å¬å®ååå­ååµå¶å¼ååå´åªåå¢å¶åµå°åå"],["d4a1","åå²å¥åå¹åå­å»ååååå»å å¢å¶åå´å å­å½å å¸å å³åå å®å£å²å¥å¬å¡å å¼å å§å å å±å©å°å å å¥å© å©å©å©§å©å¨¸å¨µå©­å©å©å©¥å©¬å©å©¤å©å©å©å©å©å©å©åªå¨¾å©å¨¹å©å©°å©©å©å©å©å©å©å­²å­®å¯å¯å±å´å´å´å´å´ å´å´¨å´å´¦å´¥å´"],["d540","å´°å´å´£å´å´®å¸¾å¸´åº±åº´åº¹åº²åº³å¼¶å¼¸å¾å¾å¾ææææ¾æ°æºææææ¤ææææ±ææ·ææ¿ææææ²æ¥æææ½æ½ææ­æææ«ææ¯æææ®æ¯æµææ­æ®æ¼æ¤æ»æ"],["d5a1","æ¸æææææ°æææ¥æ¡ææææ¢ææ¡¹æ¢æ¢æ¢æ¡­æ¡®æ¢®æ¢«æ¥æ¡¯æ¢£æ¢¬æ¢©æ¡µæ¡´æ¢²æ¢æ¡·æ¢æ¡¼æ¡«æ¡²æ¢ªæ¢æ¡±æ¡¾æ¢æ¢æ¢æ¢ æ¢æ¢¤æ¡¸æ¡»æ¢æ¢æ¢æ¡½æ¬¶æ¬³æ¬·æ¬¸æ®æ®æ®æ®æ®æ°ªæ·æ¶«æ¶´æ¶³æ¹´æ¶¬æ·©æ·¢æ¶·æ·¶æ·æ¸æ·æ· æ·æ·æ¶¾æ·¥æ·æ·æ·æ·´æ·æ¶½æ·­æ·°æ¶ºæ·æ·æ·æ·"],["d640","æ·æ·²æ·æ·½æ·æ·æ·£æ¶»çºçç·çç´çç°çç³çç¼ç¿çççç¸ç¶çççç¾ç»ç¼ç¿çççççççç¿çççç¶ç¸çµççç½çççºç¼ç¿ççç´çç¤ç£ççç"],["d6a1","çççççççç¹ç¯ç­ç±ç²ç´ç³ç½ç¥ç»çµç¡ç¡ç¡ç¡ç¡ç¡ç ¦ç¡ç¡ç¥¤ç¥§ç¥©ç¥ªç¥£ç¥«ç¥¡ç¦»ç§ºç§¸ç§¶ç§·çªçªçªç¬µç­ç¬´ç¬¥ç¬°ç¬¢ç¬¤ç¬³ç¬ç¬ªç¬ç¬±ç¬«ç¬­ç¬¯ç¬²ç¬¸ç¬ç¬£ç²ç²ç²ç²£ç´µç´½ç´¸ç´¶ç´ºçµç´¬ç´©çµçµç´¾ç´¿çµç´»ç´¨ç½£ç¾ç¾ç¾ç¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿è"],["d740","èèèèèèè¥èèè­èè¬èè¡èè§èè¢èè¸è³èºè´è²è´èè£è¨èèºè³è¤è´èèèèèµèè©è½èèèèèªèè¾è¥è¯èèè°è¿è¦èè®è¶èèèè¿è·"],["d7a1","èèèèºè°èè¹è³è¸èè´è»è¼èè½è¾è¡è¢è¢è¢¨è¢¢è¢ªè¢è¢è¢¡è¢è¢è¢§è¢è¢è¢è¢¤è¢¬è¢è¢è¢è¦è§è§è§è¨°è¨§è¨¬è¨è°¹è°»è±è±è±½è²¥èµ½èµ»èµ¹è¶¼è·è¶¹è¶¿è·è»è»è»è»è»è» è»¡é¤ééééé¡é¯éªé°é´é²é³éé«é¬é©éééééé¬é´é±é³é¸é¤é¹éª"],["d840","é«é·é¨é®éºééé¼é­é«é±é¯é¿éªé é£¥é¦åååååå£ååååå¨ååååååååå¤å§åå¨å¥å­å·åå¢ååååµåå£åå¤å½åå¦å¿åå¡ååå ©å ·"],["d8a1","å å å §å £å ¨åµå¡å ¥å å å ³å ¿å ¶å ®å ¹å ¸å ­å ¬å »å¥¡åª¯åªåªå©ºåª¢åªå©¸åª¦å©¼åª¥åª¬åªåª®å¨·åªåªåªåªåªåª©å©»å©½åªåªåªåªåªå¯ªå¯å¯å¯å¯å¯å¯å°å°°å´·åµåµ«åµåµå´¿å´µåµåµåµå´³å´ºåµå´½å´±åµåµå´¹åµå´¸å´¼å´²å´¶åµåµå¹å¹å½å¾¦å¾¥å¾«ææ¹ææ¢æææ"],["d940","æ²ææææµææ¸æ¼æ¾ææææææ¿æææææ±æ°ææ¥æ¨æ¯æææ³ææ æ¶ææ²æµæ¡ææ¾æææææææææææ°æææ²æ§æªæ¤ææ¨æ¥ææææ®ææ"],["d9a1","æ¼æ¬æ»ææ±æ¹æªæ²ææ¤æ£æ¤æ£æ¤ªæ£¬æ£ªæ£±æ¤æ£æ£·æ£«æ£¤æ£¶æ¤æ¤æ£³æ£¡æ¤æ£æ¤æ¥°æ¢´æ¤æ£¯æ£æ¤æ£¸æ£æ£½æ£¼æ£¨æ¤æ¤æ¤æ£æ£æ£æ£æ£¦æ£´æ£æ¤æ£æ£©æ¤æ¤¥æ£æ¬¹æ¬»æ¬¿æ¬¼æ®æ®æ®æ®æ®½æ¯°æ¯²æ¯³æ°°æ·¼æ¹æ¹æ¸æ¹æºæ¸¼æ¸½æ¹æ¹¢æ¸«æ¸¿æ¹æ¹æ¹³æ¸æ¸³æ¹æ¹æ¹æ¸»æ¸æ¸®æ¹"],["da40","æ¹¨æ¹æ¹¡æ¸±æ¸¨æ¹ æ¹±æ¹«æ¸¹æ¸¢æ¸°æ¹æ¹¥æ¸§æ¹¸æ¹¤æ¹·æ¹æ¹¹æ¹æ¹¦æ¸µæ¸¶æ¹ç çç¯ç»ç®ç±ç£ç¥ç¢ç²çç¨çºççççççççççç°ç¢ç±ç³ç§ç²ç­ç¦ç£çµçç®ç¬ç°ç«ç"],["daa1","çç¡ç­ç±ç¤ç£çç©ç ç²ç»ç¯ç¯ç¬ç§çç¡ç¦ççç¤ççççççççççççççç¬ç¡ ç¡¤ç¡¥ç¡ç¡­ç¡±ç¡ªç¡®ç¡°ç¡©ç¡¨ç¡ç¡¢ç¥´ç¥³ç¥²ç¥°ç¨ç¨ç¨ç¨ç¨çªç«¦ç«¤ç­ç¬»ç­ç­ç­ç­ç­ç­ç­ç²¢ç²ç²¨ç²¡çµçµ¯çµ£çµçµçµ§çµªçµçµ­çµçµ«çµçµçµ©çµçµçµç¼¾ç¼¿ç½¥"],["db40","ç½¦ç¾¢ç¾ ç¾¡ç¿èèèè¾èèèèèèè½èèºè¦è®è·è¸è¹èè¼è½è¿èµè»èè¹è£èè¨èè§è¤è¼è¶èèèè«è£è¿èèè¥èè¿è¡èèèèµèèèèèèèè³"],["dba1","èèºèèèªèèè¬è®èè»èè¢èèè¾èè¢è¦èè£èèªèè«èè¬è©èè¨èè¡è¡è¡è¢ºè£è¢¹è¢¸è£è¢¾è¢¶è¢¼è¢·è¢½è¢²è¤è£è¦è¦è¦è§è§è§è©è©è¨¹è©è©è©è©è©è©è©è©è©è©è©è©è±è²è²è²ºè²¾è²°è²¹è²µè¶è¶è¶è·è·è·è·è·è·è·è·è·è·è·è·è»¯è»·è»º"],["dc40","è»¹è»¦è»®è»¥è»µè»§è»¨è»¶è»«è»±è»¬è»´è»©é­é´é¯éé¬éé¿é¼éé¹é»éééééé¡é¤éé¢é ééé¥ééé¦ééééé¿é½ééé§ééé¤ééééé»ééééé¾é"],["dca1","ééééééé±é°é¬é°é®é é¢©é£«é³¦é»¹äºäºäº¶å½å¿åå®ååå´ååå°ååºå±ååå¶å¸ååºå¸å»å¼ååååååååååå©å¿ååååå¢ååå²ååååå¡å¡¨å¡¤å¡å¡å¡å¡¯å¡å¡å¡å¡å¡¥å¡å ½å¡£å¡±å£¼å«å«å«åªºåª¸åª±åªµåª°åª¿å«åª»å«"],["dd40","åª·å«å«åª´åª¶å«åª¹åªå¯å¯å¯å°å°³åµ±åµ£åµåµ¥åµ²åµ¬åµåµ¨åµ§åµ¢å·°å¹å¹å¹å¹å¹å»å»å»å»å»å½å¾¯å¾­æ·æææ«ææ¶æ²æ®ææ¯ææ©ææ é¨æ£æ¥æ¤ææ±æ«ææææ æ¤"],["dda1","æ³æææææ¹æ·æ¢æ£ææ¦æ°æ¨ææµæ¯ææææ¥æ§ææ§ææ®æ¡ææ¯æææææææææææ¸æ æ¥¦æ¥æ¤¸æ¥æ¥¢æ¥±æ¤¿æ¥æ¥ªæ¤¹æ¥æ¥æ¥æ¥ºæ¥æ¥æ¤µæ¥¬æ¤³æ¤½æ¥¥æ£°æ¥¸æ¤´æ¥©æ¥æ¥¯æ¥æ¥¶æ¥æ¥æ¥´æ¥æ¤»æ¥æ¤·æ¥æ¥æ¥æ¤²æ¥æ¤¯æ¥»æ¤¼æ­æ­æ­æ­æ­æ­æ®ï¨æ¯»æ¯¼"],["de40","æ¯¹æ¯·æ¯¸æºæ»æ»æºæ»æºæºæºæº æº±æº¹æ»æ»æº½æ»æºæ»æº·æº°æ»æº¦æ»æº²æº¾æ»æ»æ»æºæºæºæºæº¤æº¡æº¿æº³æ»æ»æºæº®æº£çççç£ç ççç¢ç²ç¸çªç¡ççççç°ççç"],["dea1","çççççççççç¼çç»çºçççççççççççççççççç¡ç¿ç¾ç½çç¹ç·æ¦ç¯ççç·ç¾ç¼ç¹ç¸çç»ç¶ç­çµç½ççµçççç çççç©ç§ççç­ç ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢¡ç¢ç¡¹ç¢ç¢ç¢ç¡»ç¥¼ç¦ç¥½ç¥¹ç¨ç¨ç¨ç¨ç¨ç¨ç¨¢ç¨"],["df40","ç¨ç¨çª£çª¢çªç««ç­¦ç­¤ç­­ç­´ç­©ç­²ç­¥ç­³ç­±ç­°ç­¡ç­¸ç­¶ç­£ç²²ç²´ç²¯ç¶ç¶ç¶ç¶çµ¿ç¶çµºç¶çµ»ç¶çµ¼ç¶ç¶ç¶çµ½ç¶ç½­ç½«ç½§ç½¨ç½¬ç¾¦ç¾¥ç¾§ç¿ç¿è¡è¤è è·èè©èè¢è²æ¡èè¶è§è¯"],["dfa1","èè¡èèèèèèè±è¿èè¶è¹èèè¥èèèè§è°èè½èèè´è³èèèè·èºè´èºèè¸è²èè©èèè¯èè­èè°è¹èèèè¯èèè»èè¶è³è¨è¾èè«è èè®èèèè·èèºèèµèè¸èèèè¶èèè£è£è£è£è£è£è£è£è£è¦è¦è§è§¥è§¤"],["e040","è§¡è§ è§¢è§è§¦è©¶èªè©¿è©¡è¨¿è©·èªèªè©µèªèªè©´è©ºè°¼è±è±è±¥è±¤è±¦è²è²è²è³èµ¨èµ©è¶è¶è¶è¶è¶è¶è¶è¶è¶è·°è· è·¬è·±è·®è·è·©è·£è·¢è·§è·²è·«è·´è¼è»¿è¼è¼è¼è¼è¼è¼è¼éé¿"],["e0a1","ééé½ééééééééé®é¯ééé°éºé¦é³é¥ééé®ééé­é¬éé é§é¯é¶é¡é°é±éé£éé²ééééé²ééééééééééºé½é¸éµé³é·é¸é²é é é é¢¬é£¶é£¹é¦¯é¦²é¦°é¦µéª­éª«é­é³ªé³­é³§éºé»½å¦ååå¨å³ååªåå¤åå¬å°å¯å£å "],["e140","åååå©å«å°å¬å§åååå¼ååååååºååå¿å¹å¢å¡¼å¢å¢å¢å¢å¡¿å¡´å¢å¡ºå¢å¢å¢å¡¶å¢å¢å¡»å¢å¢å£¾å¥«å«å«®å«¥å«å«ªå«å«­å««å«³å«¢å« å«å«¬å«å«å«å«¨å«å­·å¯ "],["e1a1","å¯£å±£å¶å¶åµ½å¶åµºå¶åµ·å¶å¶å¶åµ¾åµ¼å¶åµ¹åµ¿å¹å¹å¹å»å»å»å»å»å»å»å»å»å½å½å½¯å¾¶æ¬æ¨æææ±æ³æææ²æ¬ææ´ææºææ¥æ»æªæ¡ææ©æ§æ«æ«ææææ´æ¶æ²æ³æ½æµæ¦æ¦æææææææ ææ¿æ¿æ¬æ«ææ¥æ·æ³æ æ¡æ ææææ¢æ¦±æ¦¶æ§"],["e240","æ¦ æ§æ¦æ¦°æ¦¬æ¦¼æ¦æ¦æ¦æ¦§æ¦æ¦©æ¦¾æ¦¯æ¦¿æ§æ¦½æ¦¤æ§æ¦¹æ§æ¦æ§æ¦³æ¦æ¦ªæ¦¡æ¦æ§æ¦æ¦æ§æ¦µæ¦¥æ§æ­æ­æ­æ®æ®æ® æ¯æ¯æ¯¾æ»æ»µæ»±æ¼æ¼¥æ»¸æ¼·æ»»æ¼®æ¼æ½æ¼æ¼æ¼§æ¼æ¼»æ¼æ»­æ¼"],["e2a1","æ¼¶æ½³æ»¹æ»®æ¼­æ½æ¼°æ¼¼æ¼µæ»«æ¼æ¼æ½æ¼æ»½æ»¶æ¼¹æ¼æ»¼æ¼ºæ¼æ¼æ¼æ¼æ¼¡çççççççç»ççççççççççççç¢ç³ç±çµç²ç§ç®çççç½ççççççççç¸çç¼ççç®çç¯ç¾çç¢²ç¢ªç¢´ç¢­ç¢¨ç¡¾ç¢«ç¢ç¢¥ç¢ ç¢¬ç¢¢ç¢¤ç¦ç¦ç¦ç¦ç¦ç¦ç¦"],["e340","ç¦ç¦ç¦ç¦ç¨«ç©ç¨°ç¨¯ç¨¨ç¨¦çª¨çª«çª¬ç«®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®åç®ç®¤ç®ç²»ç²¿ç²¼ç²ºç¶§ç¶·ç·ç¶£ç¶ªç·ç·ç·ç¶ç·ç·ç·ç·ç·ç¶¯ç¶¹ç¶ç¶¼ç¶ç¶¦ç¶®ç¶©ç¶¡ç·ç½³ç¿¢ç¿£ç¿¥ç¿"],["e3a1","è¤èèèèèèèèèèèè¤è¡èèºèèè¬è®è«è¹è´èèèªèè±èèè§è»è¢èèèèè©è¯è¨èèè¶èè èèèèè°èè¡è³è£è¨è«èè®èè¡èèèè¬èè¾èè è²èªè­è¼èèºè±èµèè¦è§è¸è¤èè°èè£·è£§è£±è£²è£ºè£¾è£®è£¼è£¶è£»"],["e440","è£°è£¬è£«è¦è¦¡è¦è¦è§©è§«è§¨èª«èªèªèªèªèªè°½è±¨è±©è³è³è³è¶è¸è¸è·¿è¸è·½è¸è¸è¸è¸è¸è·¾è¸è¸è¼è¼è¼è¼é£éé é¢éééé¤é¡ééºé²é¹é³é¥é¤é¶ééºé ééªé"],["e4a1","é¦éé«é¹éé¿é£é®éééé¢é½éé¡ééééé§é¾éé©ééé­éé¡é¿éé½éºé¾éééé»ééé¿ééé é¢­é¢®é¤é¤é¤é¦é¦é§é¦¹é¦»é¦ºé§é¦½é§éª±é«£é«§é¬¾é¬¿é­ é­¡é­é³±é³²é³µéº§å¿åå°å¸ååå¶å¾ååå½åååå±å¯ååååµååååå"],["e540","ååå³å½å¬å¾å¸åªåºåå¢«å¢å¢±å¢ å¢£å¢¯å¢¬å¢¥å¢¡å£¿å«¿å«´å«½å«·å«¶å¬å«¸å¬å«¹å¬å¬å¬å¬å±§å¶å¶å¶å¶å¶¢å¶å¶å¶ å¶å¶¡å¶å¶å¹©å¹å¹ å¹ç·³å»å»å»¡å½å¾²æææ¹æ±æ°æ¢æ"],["e5a1","æææ¯æ­æææªæ¡ææ¦æ³æ­æ®æ°ææ ææææææææ£ææ¨æ±ææ¶æºæ¹æ»æ²æ³æµæ°æ©æ²æ·æªæ¯æ¨æ¨æ¨æ§¥æ§¸æ¨æ§±æ§¤æ¨ æ§¿æ§¬æ§¢æ¨æ¨æ§¾æ¨§æ§²æ§®æ¨æ§·æ§§æ©æ¨æ§¦æ§»æ¨æ§¼æ§«æ¨æ¨æ¨æ¨¥æ¨æ§¶æ¨¦æ¨æ§´æ¨æ­æ®¥æ®£æ®¢æ®¦æ°æ°æ¯¿æ°æ½æ¼¦æ½¾æ¾æ¿æ¾"],["e640","æ¾æ¾æ¾æ½¢æ½æ¾æ½æ¾æ½¶æ½¬æ¾æ½æ½²æ½æ½æ½æ¾æ¾æ½æ¼æ½¡æ½«æ½½æ½§æ¾æ½æ¾æ½©æ½¿æ¾æ½£æ½·æ½ªæ½»ç²ç¯çç°ç çç©çµçç¥çç¤ç¡çªçç§ç³ççççççç ççç¡çç"],["e6a1","ç¢çççççç½ççç¼ç¹ççç¾ç¥ççççç£çç¨çççççççççç£ç¢»ç£ç£ç£ç£ç£ç£ç£ç£ç£ç¦ç¦¡ç¦ ç¦ç¦¢ç¦æ­¶ç¨¹çª²çª´çª³ç®·ç¯ç®¾ç®¬ç¯ç®¯ç®¹ç¯ç®µç³ç³ç³ç³ç··ç·ç·ªç·§ç·ç·¡ç¸ç·ºç·¦ç·¶ç·±ç·°ç·®ç·ç½¶ç¾¬ç¾°ç¾­ç¿­ç¿«ç¿ªç¿¬ç¿¦ç¿¨è¤è§è£è"],["e740","èèè¢èèèèèèèèèè¤è»èèè©èèèèèè§èè»è«èºèèè´èªè²èè·è«è³è¼èèªè©èè¾è¨èè®èè½èè¶è±è¦è§è¨è°è¯è¹èè è°èèè¯è¢"],["e7a1","èè£è¤è·è¡è³èèèèè¡èèèè­èªèèèèè¯è¬èºè®èè¥èè»èµè¢è§è©è¡è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¦¢è¦¤è¦£è§­è§°è§¬è«è«èª¸è«è«è«è«èª»è«èª¾è«è«è«è«èªºèª½è«è°¾è±è²è³¥è³è³è³¨è³è³è³§è¶ è¶è¶¡è¶è¸ è¸£è¸¥è¸¤è¸®è¸è¸è¸è¸è¸è¸¦è¸§"],["e840","è¸è¸è¸è¸è¸è¸è¸è¼¬è¼¤è¼è¼è¼ è¼£è¼è¼é³é°é¯é§é«é¯é«é©éªé²é¦é®ééééééééééééé¶éé±ééé©éééé¯éé¨éééé¦éééé éé§éé"],["e8a1","éµé¡éé´é¼é¬é«é®é°é¤é¢ééééééééééé é é ¦é ©é ¨é  é é §é¢²é¤é£ºé¤é¤é¤é¤é¤é§é§é§é§é§é§é§é§é§é§é§é§éª³é«¬é««é«³é«²é«±é­é­é­§é­´é­±é­¦é­¶é­µé­°é­¨é­¤é­¬é³¼é³ºé³½é³¿é³·é´é´é³¹é³»é´é´é´éºé»é¼é¼ååååååå´å¡å°å å®"],["e940","å³å¦å£å­å²åå·ååå£å¢½å£å¢¿å¢ºå£å¢¼å£å¬å¬å¬å¬¡å¬å¬å¬å¬å¬¨å¬å¬ å¬å¯¯å¶¬å¶±å¶©å¶§å¶µå¶°å¶®å¶ªå¶¨å¶²å¶­å¶¯å¶´å¹§å¹¨å¹¦å¹¯å»©å»§å»¦å»¨å»¥å½å¾¼ææ¨æææ´ææææº"],["e9a1","æ¿æ¸æææææææ½ææææ³ææ³æ¿æ¼æ¢ææ¾æææææ½æ»æºææ£æ¨´æ©¦æ©æ©§æ¨²æ©¨æ¨¾æ©æ©­æ©¶æ©æ©æ¨¨æ©æ¨»æ¨¿æ©æ©ªæ©¤æ©æ©æ©æ©¯æ©©æ© æ¨¼æ©æ©æ©æ©æ©æ©æ­æ­æ­æ®§æ®ªæ®«æ¯æ¯æ°æ°æ°æ¾­æ¿æ¾£æ¿æ¾¼æ¿æ¿æ½æ¿æ¾½æ¾æ¿æ¾¨çæ¾¥æ¾®æ¾ºæ¾¬æ¾ªæ¿æ¾¿æ¾¸"],["ea40","æ¾¢æ¿æ¾«æ¿æ¾¯æ¾²æ¾°ççç¿ç¸ççççççççç½çç¼çççççç©ç¦ç§ç¬ç¥ç«çªç¿çç çççç¡ççç¯ç­ç±ç½ç³ç¼çµç²ç°ç»ç¦ççç¡ççç¢ç£çç"],["eaa1","çç£ç£©ç£¥ç£ªç£ç££ç£ç£¡ç£¢ç£­ç£ç£ ç¦¤ç©ç©ç©çª¶çª¸çªµçª±çª·ç¯ç¯£ç¯§ç¯ç¯ç¯¥ç¯ç¯¨ç¯¹ç¯ç¯ªç¯¢ç¯ç¯«ç¯ç¯ç³ç³ç³ç³ç³ç¸ç¸¡ç¸ç¸ç¸ç¸ ç¸ç¸ç¸ç¸ç¸ç¸¢ç¸ç¸ç¸ç¸ç¸ç¸¥ç¸¤ç½ç½»ç½¼ç½ºç¾±ç¿¯èªè©è¬è±è¦è®è¹èµè«è°è¬è´è²è·è§è²èèèèèè«èèè¡è"],["eb40","èèè¤èè¢èèèè£è¾èè±èè®èµèè§è èè¦èèè¥è¬è£è¥è¤èèèèèèèèèè¹èè£èèèèèèèèèè¤è¤¦è¤°è¤­è¤®è¤§è¤±è¤¢è¤©è¤£è¤¯è¤¬è¤è§±è« "],["eba1","è«¢è«²è«´è«µè«è¬è«¤è«è«°è«è«è«¡è«¨è«¿è«¯è«»è²è²è²è³µè³®è³±è³°è³³èµ¬èµ®è¶¥è¶§è¸³è¸¾è¸¸è¹è¹è¸¶è¸¼è¸½è¹è¸°è¸¿èº½è¼¶è¼®è¼µè¼²è¼¹è¼·è¼´é¶é¹é»ééºé³éµé¶éééééé§ééééééºé¸é¼éé£éééé­éééééºé¥éé¹é·é´éé¤é¿é©é¹éµéªéé"],["ec40","éé¾ééé»éé¼éé¾é¹éºé¶é¿éµé½é©éééééééé°é¸é µé ¯é ²é¤¤é¤é¤§é¤©é¦é§®é§¬é§¥é§¤é§°é§£é§ªé§©é§§éª¹éª¿éª´éª»é«¶é«ºé«¹é«·é¬³é®é®é®é­¼é­¾é­»é®é®é®é®é­ºé®"],["eca1","é­½é®é´¥é´é´ é´é´é´©é´é´é´¢é´é´é´éºéºéºéº®éº­é»é»é»ºé¼é¼½å¦å¥å¢å¤å å©å´ååååååå¾åå¿åå£å£å£å£å¬­å¬¥å¬²å¬£å¬¬å¬§å¬¦å¬¯å¬®å­»å¯±å¯²å¶·å¹¬å¹ªå¾¾å¾»ææµæ¼æ§æ æ¥æ¤æ¨ææ¯æ©æ£æ«æ¤æ¨æææ¶æææªæªæªæª¥æªæªæªæª¡æªæªæªæª"],["ed40","æªæªæª¨æª¤æªæ©¿æª¦æªæªæªæªæ­æ®­æ°æ¿æ¾©æ¿´æ¿æ¿£æ¿æ¿­æ¿§æ¿¦æ¿æ¿²æ¿æ¿¢æ¿¨ç¡ç±ç¨ç²ç¤ç°ç¢ç³ç®ç¯çç²ç«ççªç­ç±ç¥ç¯çççççççççç¤ç©çµç«ç²ç·ç¶"],["eda1","ç´ç±ç¨ç°ç£³ç£½ç¤ç£»ç£¼ç£²ç¤ç£¹ç£¾ç¤ç¦«ç¦¨ç©ç©ç©ç©ç©ç©çª¾ç«ç«ç°ç°ç¯²ç°ç¯¿ç¯»ç°ç¯´ç°ç¯³ç°ç°ç°ç°ç¯¸ç¯½ç°ç¯°ç¯±ç°ç°ç³¨ç¸­ç¸¼ç¹ç¸³é¡ç¸¸ç¸ªç¹ç¹ç¹ç¸©ç¹ç¸°ç¸»ç¸¶ç¹ç¸ºç½ç½¿ç½¾ç½½ç¿´ç¿²è¬è»èèèèèè¼è©èèèèèèè§èè èè£è»è¤èè"],["ee40","è·è¼èè¡èºè¸èèèèèèèèè¢èèèè¹è¶èèèè¨è¾èªè­èè°è¬è¹èµè¼è®èèèèè·è¯èèè´è¶è¿è¸è½èè²è¤µè¤³è¤¼è¤¾è¥è¥è¤·è¥è¦­è¦¯è¦®è§²è§³è¬"],["eea1","è¬è¬è¬è¬è¬è¬¢è¬è¬è¬è¬è¬è¬è¬è¬è¬è¬è±è±°è±²è±±è±¯è²è²è³¹èµ¯è¹è¹è¹è¹è¹è¹è½è½éé¾é¸éé¢éééé¡éé é¡éé¯é¤ééé¼ééé¶éééé é­éééªé¹ééééé±é·é»é¡éé£é§ééééééééé·é®é°é¬é éééééé¡é"],["ef40","ééééé±é¡é¡é¡é¡é¡é¡é¤¥é¤«é¤¬é¤ªé¤³é¤²é¤¯é¤­é¤±é¤°é¦é¦£é¦¡é¨é§ºé§´é§·é§¹é§¸é§¶é§»é§½é§¾é§¼é¨éª¾é«¾é«½é¬é«¼é­é®é®¨é®é®é®¦é®¡é®¥é®¤é®é®¢é® é®¯é´³éµéµ§é´¶é´®é´¯é´±é´¸é´°"],["efa1","éµéµéµé´¾é´·éµé´½ç¿µé´­éºéºéºéº°é»é»é»»é»¿é¼¤é¼£é¼¢é½é¾ å±å­å®ååååååå¥°å¬¼å±©å±ªå·å¹­å¹®æææ­æ®æ±æªæ°æ«ææ©æ¿ææ½æ¸æææ¼ææææææ«æª¹æª½æ«¡æ«æªºæª¶æª·æ«æª´æª­æ­æ¯æ°çççççççæ¿¿çæ¿»ç¦æ¿¼æ¿·ççç¿ç¹çç½ç¶"],["f040","ç¸ççµçç¾ç¶ç»ççççç¤çççççç¦ç½ç¬ççºç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¦­ç¦¬ç©ç°ç°©ç°ç° ç°ç°­ç°ç°¦ç°¨ç°¢ç°¥ç°°ç¹ç¹ç¹ç¹£ç¹ç¹¢ç¹ç¹ç¹ ç¹ç¹ç¾µç¾³ç¿·ç¿¸èµèè"],["f0a1","èèèè´èèèèè³èµè½èèè¿èèèèè±è¶èè¤è¸è·è¾è©è§è¦è¢èè«èªè¥èè³è¤èèèè­èè£è¤èèè è´è¨èè¥è¥è¥è¥è¥è¥è¥è¥è¬ªè¬§è¬£è¬³è¬°è¬µè­è¬¯è¬¼è¬¾è¬±è¬¥è¬·è¬¦è¬¶è¬®è¬¤è¬»è¬½è¬ºè±è±µè²è²è²è³¾è´è´è´è¹è¹¢è¹ è¹è¹è¹è¹¥è¹§"],["f140","è¹è¹è¹¡è¹è¹©è¹è½è½è½è½é¨éºé»é¾é¨é¥é§é¯éªéµééé·éééé§ééªéé¦éééééé±éé²é¤é¨é´é£é¥éééé³ééå·éééé£é¢é¥é¬é®é¨é«é¤éª"],["f1a1","é¢é¥éééééºé¡é¡é¡é¢¸é¥é¤¼é¤ºé¨é¨é¨é¨é¨é¨é¨é¨é¨é¨é«é«é¬é¬é¬é¬©é¬µé­é­é­é¯é¯é¯é®¿é¯é®µé®¸é¯é®¶é¯é®¹é®½éµéµéµéµéµéµéµéµéµéµéµéµéµéµéµéºéºé»é¼é¼é¼é¼¥é¼«é¼ªé¼©é¼¨é½é½å´åµåå·å´å«å­å¦å§åªå¬å£å£å£å¤å¬½å¬¾å¬¿å·å¹°"],["f240","å¾¿æ»æææææææææææ«§æ« æ«æ«æ«æ«æ«æ«æ«æ««æ«æ«æ«æ­ æ®°æ°çç§ç çç«ç¡ç¢ç£ç©çç¤ççªçççççç¥ç¦ç¤ç£ç¡ççç·ççç çççç±ç¤ç¤"],["f2a1","ç¤¡ç¤ç¤ç¤ç¦°ç©§ç©¨ç°³ç°¼ç°¹ç°¬ç°»ç³¬ç³ªç¹¶ç¹µç¹¸ç¹°ç¹·ç¹¯ç¹ºç¹²ç¹´ç¹¨ç½ç½ç¾ç¾ç¾·ç¿½ç¿¾è¸èèè¤è¡è£è«è±è­èè¡è¨èèè¬è²è¸èèè£èèè°è¦è¯èè¢è èºè è¶è·è è è è è¼è è¿è è è¥¢è¥è¥è¥è¥¡è¥è¥è¥è¥è¦è¦·è¦¶è§¶è­è­è­è­è­è­è­è­è­"],["f340","è­è­è­è­è±è±·è±¶è²è´è´è´è¶¬è¶ªè¶­è¶«è¹­è¹¸è¹³è¹ªè¹¯è¹»è»è½è½è½è½è½è¾´éé¿é°é­ééééééé¹é¬ééé©é¦ééé®é£éééééé§é½ééé¡é©é«é¬é¨é¦"],["f3a1","é³é·é¶éééé¡é¡é¡é¡é¢¿é¢½é¢»é¢¾é¥é¥é¥é¦¦é¦§é¨é¨é¨¥é¨é¨¤é¨é¨¢é¨ é¨§é¨£é¨é¨é¨é«é¬é¬é¬é¬é¬·é¯ªé¯«é¯ é¯é¯¤é¯¦é¯¢é¯°é¯é¯é¯¬é¯é¯é¯¥é¯é¯¡é¯éµ·é¶é¶é¶é¶éµ±é¶éµ¸é¶é¶é¶éµ½éµ«éµ´éµµéµ°éµ©é¶éµ³éµ»é¶éµ¯éµ¹éµ¿é¶éµ¨éºéºé»é»¼é¼­é½é½é½é½é½é½å·å²"],["f440","åµå³å££å­å·å·å»®å»¯å¿å¿æ¹ææææææ¨æ£æ¤æ«³æ«°æ«ªæ«¨æ«¹æ«±æ«®æ«¯ç¼çµç¯ç·ç´ç±çç¸ç¿çºç¹çç»ç³çççç¨ç½ç¼çºç«çªç¾ç­ççççç²ç¤¥ç¤£ç¤§ç¤¨ç¤¤ç¤©"],["f4a1","ç¦²ç©®ç©¬ç©­ç«·ç±ç±ç±ç±ç±ç³®ç¹»ç¹¾çºçºç¾ºç¿¿è¹èèèè¨è©è¢è¿èè¾èèè¶èèèèè½è è è è è è è¥£è¥¦è¦¹è§·è­ è­ªè­è­¨è­£è­¥è­§è­­è¶®èºèºèºè½è½è½è½è½è½éééé·éµé²é³ééé»é ééé¾ééé¨éééµéé·éééééºéé¸éé¿"],["f540","é¼éé¶éééé éé®é¯é¹é»é½é¾é¡ é¡¢é¡£é¡é£é£é¥é¥é¥é¥é¥é¥é¨²é¨´é¨±é¨¬é¨ªé¨¶é¨©é¨®é¨¸é¨­é«é«é«é¬é¬é¬é°é°é¯·é°é°é¯¸é±é°é°é°é°é°é°é¶é¶é¶¤é¶é¶é¶é¶é¶"],["f5a1","é¶ é¶é¶é¶ªé¶é¶¡é¶é¶¢é¶¨é¶é¶£é¶¿é¶©é¶é¶¦é¶§éºéºéºé»¥é»¤é»§é»¦é¼°é¼®é½é½ é½é½é½é¾åºå¹åååå½å¾å­å­å·å·å»±æ½ææ¬æ«¼æ¬æ«¸æ¬ççççççççççç¾ççªçç¤­ç¤±ç¤¯ç±ç±ç³²çºçºçºçºçºçºç½ç¾»è°èèèªè¦èè£èèè§è®è¡è è©èè¥"],["f640","è ©è è è  è ¤è è «è¡è¥­è¥©è¥®è¥«è§ºè­¹è­¸è­è­ºè­»è´è´è¶¯èºèºè½è½è½éééé¹é¿é»é¶é©é½é¼é°é¹éªé·é¬éé±é¥é¤é£éµéºé¿é¡é¡¤é£é£é£é¥é¥é¨¹é¨½é©é©é©é©é¨º"],["f6a1","é¨¿é«é¬é¬é¬é¬é¬ºé­é°«é°é°é°¬é°£é°¨é°©é°¤é°¡é¶·é¶¶é¶¼é·é·é·é·é¶¾é·é·é¶»é¶µé·é¶¹é¶ºé¶¬é·é¶±é¶­é·é¶³é·é¶²é¹ºéºé»«é»®é»­é¼é¼é¼é¼±é½é½¥é½¤é¾äº¹åååå¥±å­å­å·å·å»²æ¡æ æ¦æ¢æ¬æ¬æ¬æ°ççççççç©ç¿ççççç­ç­ç¤µç¦´ç©°ç©±ç±ç±ç±ç±ç±"],["f740","ç³´ç³±çºç½ç¾èè«è´èµè³è¬è²è¶è ¬è ¨è ¦è ªè ¥è¥±è¦¿è¦¾è§»è­¾è®è®è®è®è­¿è´èºèºèºèºèºèºèºè½ è½¢éééééééééééé¿é£é¡ªé¡©é£é¥é¥é©é©é©é©é©é©é©"],["f7a1","é©é©é©é«é¬é¬«é¬»é­é­é±é±é°¿é±é°¹é°³é±é°¼é°·é°´é°²é°½é°¶é·é·é·é·é·é·é·é·é·é·©é·é·é·é·µé·é·éº¶é»°é¼µé¼³é¼²é½é½«é¾é¾¢å½åå£¨å£§å¥²å­å·è ¯å½ææææ©æ¥ææ«æ¬æ¬æ¬æ¯ççç¢çççç°çç±§ç±¦çºè¬èºèè¹è¼è±è»è¾è °è ²è ®è ³è¥¶è¥´è¥³è§¾"],["f840","è®è®è®è®è±è´èºè½¤è½£é¼é¢ééééééé é©é©é¬é¬é¬ é±é±é±é±é±é±é±é±é±é±é·»é··é·¯é·£é·«é·¸é·¤é·¶é·¡é·®é·¦é·²é·°é·¢é·¬é·´é·³é·¨é·­é»é»é»²é»³é¼é¼é¼¸é¼·é¼¶é½é½"],["f8a1","é½±é½°é½®é½¯ååå­å±­æ­æ­æ®æ¬çç¡çç ç£çç¥çç¤¸ç¦·ç¦¶ç±ªçºç¾è­èè ¸è ·è µè¡è®è®èºèºèº èºé¾é½éé«é¨é©é¥ééééé¥é©é«é­é±£é±§é±¦é±¢é±é± é¸é·¾é¸é¸é¸é¸é¸é¸é¸é·¿é·½é¸éº é¼é½é½´é½µé½¶åæ®æ¸æ¬æ¬æ¬æ¬ç¢ç¦çªççç¤¹ç±©ç±«ç³¶çº"],["f940","çºçºçºè è¡èèèè¥¹è¥ºè¥¼è¥»è§¿è®è®èº¥èº¤èº£é®é­é¯é±é³éé¡²é¥é±¨é±®é±­é¸é¸é¸é¸é¸é¸éº¡é»µé¼é½é½¸é½»é½ºé½¹åç¦ç±¯è ¼è¶²èº¦éé´é¸é¶éµé© é±´é±³é±±é±µé¸é¸é»¶é¼"],["f9a1","é¾¤ç¨ç¥ç³·èªè ¾è ½è ¿è®è²èº©è»éé¡³é¡´é£é¥¡é¦«é©¤é©¦é©§é¬¤é¸é¸é½ææ¬ç§èèº¨éééé©©é©¨é¬®é¸ç©èè®éé±¹éº·çµé©«é±ºé¸ç©çªéº¤é½¾é½é¾ç¢é¹è£å¢»æç²§å«ºââ¦ââ â¬â£ââ©âââ¤âââªâ¡ââ§âââ¥âââ«â¢ââ¨ââââ­â®â°â¯â"]]');
            }
          ),
          /***/
          31532: (
            /***/
            function(l) {
              l.exports = JSON.parse('[["0","\\u0000",127],["8ea1","ï½¡",62],["a1a1","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±ÃÃ·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââ"],["a2a1","ââ¡â â³â²â½â¼â»ãââââã"],["a2ba","âââââââªâ©"],["a2ca","â§â¨ï¿¢ââââ"],["a2dc","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["a2f2","â«â°â¯â­âªâ â¡Â¶"],["a2fe","â¯"],["a3b0","ï¼",9],["a3c1","ï¼¡",25],["a3e1","ï½",25],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a8a1","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["ada1","â ",19,"â ",9],["adc0","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["addf","ã»ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["b0a1","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["b1a1","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­ååå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿"],["b2a1","æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["b3a1","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±"],["b4a1","ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["b5a1","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥ææ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬"],["b6a1","ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["b7a1","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²"],["b8a1","æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["b9a1","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤éé é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼"],["baa1","æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["bba1","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºæææ"],["bca1","æ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["bda1","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·å"],["bea1","åå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["bfa1","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾"],["c0a1","æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["c1a1","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æ"],["c2a1","èèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["c3a1","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­èéç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µ"],["c4a1","å¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["c5a1","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°"],["c6a1","è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["c7a1","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦"],["c8a1","å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["c9a1","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æ"],["caa1","ç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["cba1","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡çæ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æº"],["cca1","æ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["cda1","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨çç"],["cea1","ç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["cfa1","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["d0a1","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["d1a1","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨"],["d2a1","è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["d3a1","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿åå"],["d4a1","ååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["d5a1","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±"],["d6a1","å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["d7a1","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææ"],["d8a1","ææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["d9a1","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼"],["daa1","æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["dba1","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£"],["dca1","æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["dda1","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾"],["dea1","æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["dfa1","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®çççççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼"],["e0a1","ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e1a1","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°"],["e2a1","ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e3a1","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­"],["e4a1","ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e5a1","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼º"],["e6a1","ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e7a1","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèè"],["e8a1","èµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e9a1","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®è"],["eaa1","èè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["eba1","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«"],["eca1","è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["eda1","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸"],["eea1","ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["efa1","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿éééééééé é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·éé"],["f0a1","ééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["f1a1","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·"],["f2a1","é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["f3a1","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ "],["f4a1","å ¯æ§éç¤åç"],["f9a1","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·"],["faa1","å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["fba1","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§é"],["fca1","ééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["fcf1","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["8fa2af","ËËÂ¸ËËÂ¯ËËï½ÎÎ"],["8fa2c2","Â¡Â¦Â¿"],["8fa2eb","ÂºÂªÂ©Â®â¢Â¤â"],["8fa6e1","ÎÎÎÎÎª"],["8fa6e7","Î"],["8fa6e9","ÎÎ«"],["8fa6ec","Î"],["8fa6f1","Î¬Î­Î®Î¯ÏÎÏÏÏÏÎ°Ï"],["8fa7c2","Ð",10,"ÐÐ"],["8fa7f2","Ñ",10,"ÑÑ"],["8fa9a1","ÃÄ"],["8fa9a4","Ä¦"],["8fa9a6","Ä²"],["8fa9a8","ÅÄ¿"],["8fa9ab","ÅÃÅ"],["8fa9af","Å¦Ã"],["8fa9c1","Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÅÅÃ¸ÅÃÅ§Ã¾"],["8faaa1","ÃÃÃÃÄÇÄÄÃÃÄÄÄÃÄÄÃÃÃÃÄÄÄÄ"],["8faaba","ÄÄÄ¢Ä Ä¤ÃÃÃÃÇÄ°ÄªÄ®Ä¨Ä´Ä¶Ä¹Ä½Ä»ÅÅÅÃÃÃÃÃÇÅÅÃÅÅÅÅÅÅ ÅÅ¤Å¢ÃÃÃÃÅ¬ÇÅ°ÅªÅ²Å®Å¨ÇÇÇÇÅ´ÃÅ¸Å¶Å¹Å½Å»"],["8faba1","Ã¡Ã Ã¤Ã¢ÄÇÄÄÃ¥Ã£ÄÄÄÃ§ÄÄÃ©Ã¨Ã«ÃªÄÄÄÄÇµÄÄ"],["8fabbd","Ä¡Ä¥Ã­Ã¬Ã¯Ã®Ç"],["8fabc5","Ä«Ä¯Ä©ÄµÄ·ÄºÄ¾Ä¼ÅÅÅÃ±Ã³Ã²Ã¶Ã´ÇÅÅÃµÅÅÅÅÅÅ¡ÅÅ¥Å£ÃºÃ¹Ã¼Ã»Å­ÇÅ±Å«Å³Å¯Å©ÇÇÇÇÅµÃ½Ã¿Å·ÅºÅ¾Å¼"],["8fb0a1","ä¸ä¸ä¸ä¸ä¸ä¸ä¸£ä¸¤ä¸¨ä¸«ä¸®ä¸¯ä¸°ä¸µä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹£ä¹¨ä¹©ä¹´ä¹µä¹¹ä¹¿äºäºäºäºäº¯äº¹ä»ä»ä»ä»ä» ä»¡ä»¢ä»¨ä»¯ä»±ä»³ä»µä»½ä»¾ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼®ä¼±ä½ ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½£ä½ªä½¬ä½®ä½±ä½·ä½¸ä½¹ä½ºä½½ä½¾ä¾ä¾ä¾"],["8fb1a1","ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾²ä¾·ä¾¹ä¾»ä¾¼ä¾½ä¾¾ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ ä¿¢ä¿°ä¿²ä¿¼ä¿½ä¿¿åååååååååååååååå¢å§å®å°å²å³åµååååååååååååååå å¢å£å¦å§åªå­å°å±å»åååååååå"],["8fb2a1","ååååååå",4,"åªå¯å°å¹åºå½åååååååååååååå¢å¤å¦å¨å©å¯å±å¶åºå¾ååååååååå²åååååååå£å§å¨å¬å­å¯å±å³å´åµå¸å¹ååååååååå¤å¦å¾ååååååå¡å£å­å¸åºå¼å¾å¿å"],["8fb3a1","ååååååååå¢å¥å®å²å³å´å·ååååååååå¢å¨å±å²åµå¼ååååååååå å¡å¦å®å·å¸å¹ååååååååååååå¤å¥å¦å§å¯å°å¶å·å¸åºå»å½åååååååååååå¡å¥å¨å©åªå¬å°å±å´å¶å·åååå"],["8fb4a1","ååååååååå¥å§å¨å©å«å¬å­å°å²åµå¼å½å¾åååååå¡å£å¥å¬å­å²å¹å¾ååååååååå¡å¤åªå«å¯å²å´åµå·å¸åºå½åååååååååå å¦å§åµåååå¡å§å¨åªå¯å±å´åµååååååå¢å¤å¦å§å©å«å­å®å´å¿"],["8fb5a1","åååååååååååå¡å¦å§å©åªå­å®å±å·å¹åºå»å¿ååååå åªå¬å¯å¶å¼å¾å¿ååååååååååªå«å²åµå¶å»å¼å½åååååååååååå å¡å¤å¦å¿åååååååååååå£å¤å­å²å¿ååååååååå"],["8fb6a1","åååååå¢å©å¶å¿åååå",5,"åå¬å°å³åµå·å¹å»å¼å½å¿åååååååååååå å¡å¢å£å¦å©å­å¯å±å²åµåååååååååååå¦å§å¨å©å«å¬å­å±å³å·å¾ååååååååååååå¡å¤",4,"å±å«å­"],["8fb7a1","å¶å·ååååååååååå å¢å£å¤å¥å©åªå¬å®å¯å³å´å½å¾å¿åååååå¢å¥å§å¨å«å­",4,"å³å´åµå·å¹åºå»å¼å¾åååååååååååå¡åå§å¨å©å¬å¸å½åååååååå¤å¦å§å©å­å°åµå¶å¸å½å¾å¿å å å å å¡"],["8fb8a1","å å å å å å  å ¦å §å ­å ²å ¹å ¿å¡å¡å¡å¡å¡å¡å¡å¡¡å¡¤å¡§å¡¨å¡¸å¡¼å¡¿å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢ å¢¡å¢¢å¢¦å¢©å¢±å¢²å£å¢¼å£å£å£å£å£å£å£å£å£å£å£¡å£¢å£©å£³å¤å¤å¤å¤å¤å¤å¤èå¤å¤¡å¤£å¤¤å¤¨å¤¯å¤°å¤³å¤µå¤¶å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥¡å¥£å¥«å¥­"],["8fb9a1","å¥¯å¥²å¥µå¥¶å¥¹å¥»å¥¼å¦å¦å¦å¦å¦å¦å¦å¦¤å¦§å¦­å¦®å¦¯å¦°å¦³å¦·å¦ºå¦¼å§å§å§å§å§å§å§å§å§å§å§£å§¤å§§å§®å§¯å§±å§²å§´å§·å¨å¨å¨å¨å¨å¨å¨å¨å¨£å¨¤å¨§å¨¨å¨ªå¨­å¨°å©å©å©å©å©å©å©å©å©£å©¥å©§å©­å©·å©ºå©»å©¾åªåªåªåªåªåªåªåªåª åª¢åª§åª¬åª±åª²åª³åªµåª¸åªºåª»åª¿"],["8fbaa1","å«å«å«å«å«å«å« å«¥å«ªå«®å«µå«¶å«½å¬å¬å¬å¬å¬´å¬å¬å¬å¬¡å¬¥å¬­å¬¸å­å­å­å­å­å­å­¨å­®å­¯å­¼å­½å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®¨å®©å®¬å®­å®¯å®±å®²å®·å®ºå®¼å¯å¯å¯å¯å¯",4,"å¯ å¯¯å¯±å¯´å¯½å°å°å°å°å°£å°¦å°©å°«å°¬å°®å°°å°²å°µå°¶å±å±å±å±¢å±£å±§å±¨å±©"],["8fbba1","å±­å±°å±´å±µå±ºå±»å±¼å±½å²å²å²å²å²å²å²å² å²¢å²£å²¦å²ªå²²å²´å²µå²ºå³å³å³å³å³å³®å³±å³²å³´å´å´å´å´å´«å´£å´¤å´¦å´§å´±å´´å´¹å´½å´¿åµåµåµåµåµåµåµåµåµåµ åµ¡åµ¢åµ¤åµªåµ­åµ°åµ¹åµºåµ¾åµ¿å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶ å¶§å¶«å¶°å¶´å¶¸å¶¹å·å·å·å·å·å·å·å· å·¤"],["8fbca1","å·©å·¸å·¹å¸å¸å¸å¸å¸å¸å¸å¸å¸ å¸®å¸¨å¸²å¸µå¸¾å¹å¹å¹å¹å¹å¹å¹å¹å¹å¹¨å¹ª",4,"å¹°åºåºåºåº¢åº¤åº¥åº¨åºªåº¬åº±åº³åº½åº¾åº¿å»å»å»å»å»å»å»å»å»å»å»¥å»«å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤å¼¨å¼«å¼¬å¼®å¼°å¼´å¼¶å¼»å¼½å¼¿å½å½å½å½å½å½å½å½å½å½ å½£å½¤å½§"],["8fbda1","å½¯å½²å½´å½µå½¸å½ºå½½å½¾å¾å¾å¾å¾å¾å¾å¾¢å¾§å¾«å¾¤å¾¬å¾¯å¾°å¾±å¾¸å¿å¿å¿å¿å¿å¿",4,"å¿å¿¡å¿¢å¿¨å¿©å¿ªå¿¬å¿­å¿®å¿¯å¿²å¿³å¿¶å¿ºå¿¼ææææææææææ¤æ­æ³æµæææææææææææ¡æ§æ±æ¾æ¿ææææææææææææ¢æ¤æ¥æ¨æ°æ±æ·"],["8fbea1","æ»æ¾æææææææææææææææ¢æ¥æ²æµæ¸æ¼æ½æææææ",4,"ææææææ¢æªæ«æ°æ±æµæ¶æ·æ¹ææææææ æ¬æ²æ¸æ»æ¼æ¿ææææææææææææææ æ¥æ¨æªæ­æ¸æ¹æ¼æææææææææææ¡æ¢æ§æ©æ¥"],["8fbfa1","æ¬æ­æ¯ææææææææ æ¢æ£æ§æ©æ«æ¹æ½æææææææææææææ¤æ­æ¯æ³æºæ½æææææ¦æ¨æ³æ¶æ·æºæ¾æ¿ææææææªæ²æ´æ¼æ½ææææææææææ©æªæ­æµæ¶æ¹æ¼ææææææææææææææ¥æ¦æ¬æ­æ±æ´æµ"],["8fc0a1","æ¸æ¼æ½æ¿æææææææææææ¤æ¦æ­æ®æ¯æ½ææææææææææ æ¥æªæ¬æ²æ³æµæ¸æ¹ææææææææ æ¢æ¤æ¥æ©æªæ¯æ°æµæ½æ¿ææææææææææææ æ¡æ£æ­æ³æ´æ»æ½æææææææææææ¡æ£æ¦æ¨æ¬æ³æ½æ¾æ¿"],["8fc1a1","æææææææææææ¤æ¥æ©æªæ­æ°æµæ·æ»æ¿ææææææææææææææ¢æ¦æ©æ®æ±æºæ¼æ½ææææææææ æ§æ«æºæ½ææææææææ æ£æ¦æ®æ²æ³æ´æ¿ææææææææææ°æ²æ´æµæ¹æ¾æ¿ææææææææææ"],["8fc2a1","ææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ±æ³æ¹æ·æææææææææææææ æ¡æ»æªæ«æ¬æ¾æ³æµæ¿æ·æ¸æ¹æ»ææ¼æææææææææææ æ¤æ­æ±æ²æµæ»æ¿æææææææææææ¨æ«æ¬æ®æºæææææææ æ¢æ³æ¾æææææææ"],["8fc3a1","æ¦æ¬æ®æ´æ¶æ»æææææææææææ°æ±æ²æµæ»æ¼æ½æ¹æææææææææææ¡æ¦æ°æ²æ¶æ·æ¡æ æ æ æ æ ¨æ §æ ¬æ ­æ ¯æ °æ ±æ ³æ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡«æ¡®",4,"æ¡µæ¡¹æ¡ºæ¡»æ¡¼æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢¡æ¢£æ¢¥æ¢©æ¢ªæ¢®æ¢²æ¢»æ£æ£æ£æ£"],["8fc4a1","æ£æ£æ£æ£æ£æ£æ£æ£¥æ£¨æ£ªæ£«æ£¬æ£­æ£°æ£±æ£µæ£¶æ£»æ£¼æ£½æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤±æ¤³æ¤µæ¤¸æ¤»æ¥æ¥æ¥æ¥æ¥æ¥æ¥£æ¥¤æ¥¥æ¥¦æ¥¨æ¥©æ¥¬æ¥°æ¥±æ¥²æ¥ºæ¥»æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦¡æ¦¥æ¦¦æ¦¨æ¦«æ¦­æ¦¯æ¦·æ¦¸æ¦ºæ¦¼æ§æ§æ§æ§æ§æ§¢æ§¥æ§®æ§¯æ§±æ§³æ§µæ§¾æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨ æ¨¤æ¨¨æ¨°æ¨²"],["8fc5a1","æ¨´æ¨·æ¨»æ¨¾æ¨¿æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©¤æ©§æ©ªæ©±æ©³æ©¾æªæªæªæªæªæªæªæªæªæªæªæª¥æª«æª¯æª°æª±æª´æª½æª¾æª¿æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«¤æ«§æ«¬æ«°æ«±æ«²æ«¼æ«½æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬¤æ¬¨æ¬«æ¬¬æ¬¯æ¬µæ¬¶æ¬»æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­ æ­§æ­«æ­®æ­°æ­µæ­½"],["8fc6a1","æ­¾æ®æ®æ®æ®æ®æ® æ®¢æ®£æ®¨æ®©æ®¬æ®­æ®®æ®°æ®¸æ®¹æ®½æ®¾æ¯æ¯æ¯æ¯æ¯æ¯æ¯¡æ¯£æ¯¦æ¯§æ¯®æ¯±æ¯·æ¯¹æ¯¿æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°¦æ°§æ°¨æ°¬æ°®æ°³æ°µæ°¶æ°ºæ°»æ°¿æ±æ±æ±æ±æ±æ±æ±æ±æ±æ±«æ±­æ±¯æ±´æ±¶æ±¸æ±¹æ±»æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²°æ²²æ²´æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["8fc7a1","æ³æ³æ³ æ³§æ³©æ³«æ³¬æ³®æ³²æ³´æ´æ´æ´æ´æ´æ´æ´æ´æ´¦æ´§æ´¨æ±§æ´®æ´¯æ´±æ´¹æ´¼æ´¿æµæµæµæµ¡æµ¥æµ§æµ¯æµ°æµ¼æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶ªæ¶¬æ¶´æ¶·æ¶¹æ¶½æ¶¿æ·æ·æ·æ·æ·æ·æ·æ·æ·æ· æ·¢æ·¥æ·©æ·¯æ·°æ·´æ·¶æ·¼æ¸æ¸æ¸æ¸¢æ¸§æ¸²æ¸¶æ¸¹æ¸»æ¸¼æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹"],["8fc8a1","æ¹¢æ¹£æ¹¨æ¹³æ¹»æ¹½æºæºæºæº æº§æº­æº®æº±æº³æº»æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»«æ»­æ»®æ»¹æ»»æ»½æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼¦æ¼©æ¼ªæ¼¯æ¼°æ¼³æ¼¶æ¼»æ¼¼æ¼­æ½æ½æ½æ½æ½æ½æ½æ½æ½æ½¡æ½¢æ½¨æ½¬æ½½æ½¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾ æ¾¥æ¾¦æ¾§æ¾¨æ¾®æ¾¯æ¾°æ¾µæ¾¶æ¾¼æ¿æ¿æ¿æ¿"],["8fc9a1","æ¿æ¿æ¿¨æ¿©æ¿°æ¿µæ¿¹æ¿¼æ¿½ççççççç ç£ç¯ç´ç·ç¹ç¼çççççççççççç¤ç¥ç¬ç®çµç¶ç¾çççç",4,"çç¤ç«ç°ç±ç´ç·ççççççççç¤çºç",4,"ççççç ç«ç­ç¯ç°ç±ç¸ççççççççççççç "],["8fcaa1","ç¨ç¹çççççççç ç¢ç¯ç°ç²ç³çºç¿ççççççççççç¸ç¾çççççççççç¤ç«ç¯ç´ç¸ç¹çççççççççççççç ç£ç¨ç«ç®ç¯ç±ç·ç¸ç»ç¼ç¿ççççççç¨ç­ç®ç±ç´ç¾ççççççççç¥ç³ç´çºç»"],["8fcba1","ç¾çççççççççççç¢ç¤ç§ç¨ç¬ç±ç²çµçºç»ç½çççççççççç ç¦ç§ç©ç«ç¬ç®ç¯ç±ç·ç¹ç¼ççççççççççççççç ç¢ç¥ç¦çªç«ç­çµç·ç¹ç¼ç½ç¿çççççççççççç¡ç£ç¦ç§ç©ç´çµç·ç¹çºç»ç½"],["8fcca1","ç¿ççççççççç¤ç¦ç¨",9,"ç¹çççççççççççç¢ç¦ç§ç¨ç«ç­ç®ç±ç²çççççççççççççççç ç¡ç£ç¦ç¨ç©çªç«ç®ç¯ç±ç²çµç¹ç»ç¿ççççççççççç¤ç¨çªç«ç¯ç´çºç»ç¼ç¿ç"],["8fcda1","çççç ç¡ç¤ç§ç©çªç¯ç¶ç¹ç½ç¾ç¿ççççççççççç¡ç¯ç±ç¹",5,"ççççççççç¢ç¤ç´çºç¿ççççççççççç ç¡ç¤ç§ç¬ç®ç¯ç±ç¹ççççççççççççççççççç£ç¥ç¦ç©ç­ç²ç³çµç¸ç¹"],["8fcea1","çºç¼çççççççççççç¤ç¥ç­ç®ç¯ç±ç´çççççççççç ç¢",6,"çªç­ç½ççççççççç ç¦ç¨ç¬ç°ç±ç¶ç¹ç¼çççççççççççç¢ç¨ç­ç®ç¯ç´çµç¶ç¹ç½ç¾çççççççççççççç ç¢"],["8fcfa1","ç¤ç§çªç¬ç°ç²ç³ç´çºç½çççççççççç¢ç§çªç®ç¯ç±çµç¾ççççççççç ç¤ç¦çªç¬ç°ç±ç´ç¸ç»ç ç ç ç ç ç ç ç ¡ç ¢ç £ç ­ç ®ç °ç µç ·ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ ç¡¡ç¡£ç¡¤ç¡¨ç¡ªç¡®ç¡ºç¡¾ç¢ç¢ç¢ç¢ç¢¡ç¢ç¢ç¢ç¢¤ç¢¨ç¢¬ç¢­ç¢°ç¢±ç¢²ç¢³"],["8fd0a1","ç¢»ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£¤ç£ç£ç£ ç£¡ç£¦ç£ªç£²ç£³ç¤ç£¶ç£·ç£ºç£»ç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¤ ç¤¥ç¤§ç¤©ç¤­ç¤±ç¤´ç¤µç¤»ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥§ç¥©ç¥«ç¥²ç¥¹ç¥»ç¥¼ç¥¾ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦¡ç¦¨ç¦©ç¦«ç¦¯ç¦±ç¦´ç¦¸ç¦»ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§"],["8fd1a1","ç§ ç§¢ç§¥ç§ªç§«ç§­ç§±ç§¸ç§¼ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨¡ç¨§ç¨«ç¨­ç¨¯ç¨°ç¨´ç¨µç¨¸ç¨¹ç¨ºç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç© ç©¥ç©§ç©ªç©­ç©µç©¸ç©¾çªçªçªçªçªçªçªçªçªçªçª çª£çª¬çª³çªµçª¹çª»çª¼ç«ç«ç«ç«ç«ç«ç«¨ç«©ç««ç«¬ç«±ç«´ç«»ç«½ç«¾ç¬ç¬ç¬ç¬£ç¬§ç¬©ç¬ªç¬«ç¬­ç¬®ç¬¯ç¬°"],["8fd2a1","ç¬±ç¬´ç¬½ç¬¿ç­ç­ç­ç­ç­ç­ ç­¤ç­¦ç­©ç­ªç­­ç­¯ç­²ç­³ç­·ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®¥ç®¬ç®¯ç®°ç®²ç®µç®¶ç®ºç®»ç®¼ç®½ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯¨ç¯ªç¯²ç¯´ç¯µç¯¸ç¯¹ç¯ºç¯¼ç¯¾ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç° ç°¥ç°¦ç°¨ç°¬ç°±ç°³ç°´ç°¶ç°¹ç°ºç±ç±ç±ç±ç±ç±ç±",5],["8fd3a1","ç±¡ç±£ç±§ç±©ç±­ç±®ç±°ç±²ç±¹ç±¼ç±½ç²ç²ç²ç²ç²ç² ç²¦ç²°ç²¶ç²·ç²ºç²»ç²¼ç²¿ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³¦ç³©ç³«ç³µç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´£ç´¦ç´ªç´­ç´±ç´¼ç´½ç´¾çµçµçµçµçµçµçµçµçµçµçµçµçµ¥çµ§çµªçµ°çµ¸çµºçµ»çµ¿ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶"],["8fd4a1","ç¶ç¶¦ç¶§ç¶ªç¶³ç¶¶ç¶·ç¶¹ç·",4,"ç·ç·ç·ç·ç·ç¸ç·¢ç·¥ç·¦ç·ªç·«ç·­ç·±ç·µç·¶ç·¹ç·ºç¸ç¸ç¸ç¸ç¸ç¸ç¸ç¸ ç¸§ç¸¨ç¸¬ç¸­ç¸¯ç¸³ç¸¶ç¸¿ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹¡ç¹¢ç¹¥ç¹«ç¹®ç¹¯ç¹³ç¹¸ç¹¾çºçºçºçºçºçºçºçºçºçºçºç¼¼ç¼»ç¼½ç¼¾ç¼¿ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½¡ç½£ç½¤ç½¥ç½¦ç½­"],["8fd5a1","ç½±ç½½ç½¾ç½¿ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾¡ç¾¢ç¾¦ç¾ªç¾­ç¾´ç¾¼ç¾¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿£ç¿¥ç¿¨ç¿¬ç¿®ç¿¯ç¿²ç¿ºç¿½ç¿¾ç¿¿èèèèèèèèèèèèèè è¤è¦è¬è®è°è´èµè·è¹èºè¼è¾èèè è¤è¦è­è±èµèèèèèè¦è§è«è¸è¹èèèèèèèèè è­è®"],["8fd6a1","è°è²è³è¶è¹èºè¾èèèèèèèè è¤è§è¬è°èµèºè¼èèèèèèè è¡è§è¨è©è­è¯è·èèèèèèèèèèèè¢è®è²è´è»èèèèèèèèèèèè¡è¤è«è¬è°è±è²èµè¶è¸è¹è½è¿èèèèèèèèè¡è¢è¨è²è´èºèèèè"],["8fd7a1","èèèèèèè è£è§è­è´è»è½è¿èèèèèèèèèèèèèèè è¡è£è¤è§è¨è©èªè®è°è²è´è·èºè¼è¾è¿èèèèè è¢è¤è¨èªè­è¯è¶è·è½è¾èèèèèèèèèèèè¡è¢è¬è­è®è°è³è·èºè¼è½èèèèèèèèèèè°è¸"],["8fd8a1","è½è¿èèèèèèèèèèèèèè¦è§è©è¬è¾è¿èèèèèèèèèè¨èªè¶è¸è¹è¼èèèèèèèè­è¯è¹èèèèèèèèèèèèèè è¤è¥è§èªè°è³è´è¶è¸è¼è½èèèèèèè¦è¨è©èªè¯è±è´èºè½è¾èèèèèèè"],["8fd9a1","èè§èªè¯è°è±è²è·è²èºè»è½èèèèèèèèè¢è£è¤è¥è§èªè«è¯è³è´è¶è¿èè",4,"èèè",6,"è¤è«è¯è¹èºè»è½è¿èèèèèèèèèèèè è¢è¥è§è´è¶è·è¸è¼è½è¾è¿èèèèèè­èèèè è¦è¨è­è³è¶è¼"],["8fdaa1","è¿èèèèèèèèèèèèè¡è§è©è¶è¸èºè¼è½èèèèèèèèèèè ",4,"è©è¬è¯èµè¶è·èºèèèèèèè¡è¦è§è¨è­è±è³è´èµè·è¸è¹è¿èèèèèèèèèèè è£è¥è§èèºè¼è½èèèèèèèèèèèèè¡è£"],["8fdba1","è¨è®è¯è±è²è¹èºè¼è½è¾èèèèèèè¡è¤è¥è¯è±è²è»è",6,"èèèèèèèèèè è£è§è¬è­è®è±èµè¾è¿èèèèèèèèèèèè¢è£è¤èªè«è­è±è³è¸èºè¿è è è è è è è è è è è è è è è è è è ¨è ­è ®è °è ²è µ"],["8fdca1","è ºè ¼è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡ è¡¤è¡©è¡±è¡¹è¡»è¢è¢è¢è¢è¢è¢è¢ è¢¨è¢ªè¢ºè¢½è¢¾è£è£",4,"è£è£è£è£è£è£§è£¯è£°è£±è£µè£·è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤ è¤¦è¤§è¤¨è¤°è¤±è¤²è¤µè¤¹è¤ºè¤¾è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥¡è¥¢è¥£è¥«è¥®è¥°è¥³è¥µè¥º"],["8fdda1","è¥»è¥¼è¥½è¦è¦è¦è¦è¦è¦è¦è¦è¦ è¦¥è¦°è¦´è¦µè¦¶è¦·è¦¼è§",4,"è§¥è§©è§«è§­è§±è§³è§¶è§¹è§½è§¿è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨ è¨¢è¨¤è¨¦è¨«è¨¬è¨¯è¨µè¨·è¨½è¨¾è©è©è©è©è©è©è©è©è©è©è©è©è©è©¡è©¥è©§è©µè©¶è©·è©¹è©ºè©»è©¾è©¿èªèªèªèªèªèªèªèªèªèªèªèª§èª©èª®èª¯èª³"],["8fdea1","èª¶èª·èª»èª¾è«è«è«è«è«è«è«è«è«è«è«è«è«¬è«°è«´è«µè«¶è«¼è«¿è¬è¬è¬è¬è¬è¬è¬è¬è¬­è¬°è¬·è¬¼è­",4,"è­è­è­è­è­è­è­è­£è­­è­¶è­¸è­¹è­¼è­¾è®è®è®è®è®è®è®è®è®è®è®è°¸è°¹è°½è°¾è±è±è±è±è±è±è±è±è±è±è±è±è±è±£è±¤è±¦è±¨è±©è±­è±³è±µè±¶è±»è±¾è²"],["8fdfa1","è²è²è²è²è²è²è²è²è²¤è²¹è²ºè³è³è³è³è³è³è³è³è³è³¡è³¨è³¬è³¯è³°è³²è³µè³·è³¸è³¾è³¿è´è´è´è´è´è´èµ¥èµ©èµ¬èµ®èµ¿è¶è¶è¶è¶è¶è¶è¶è¶è¶è¶ è¶¦è¶«è¶¬è¶¯è¶²è¶µè¶·è¶¹è¶»è·è·è·è·è·è·è·è·è·è·è·è·è·¤è·¥è·§è·¬è·°è¶¼è·±è·²è·´è·½è¸è¸è¸è¸è¸è¸è¸è¸è¸ è¸¡è¸¢"],["8fe0a1","è¸£è¸¦è¸§è¸±è¸³è¸¶è¸·è¸¸è¸¹è¸½è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹¡è¹¢è¹©è¹¬è¹­è¹¯è¹°è¹±è¹¹è¹ºè¹»èºèºèºèºèºèºèºèºèºèºèº¢èº§èº©èº­èº®èº³èºµèººèº»è»è»è»è»è»è»è»è»è»è»¨è»®è»°è»±è»·è»¹è»ºè»­è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼ è¼¡è¼£è¼¥è¼§è¼¨è¼¬è¼­è¼®è¼´è¼µè¼¶è¼·è¼ºè½è½"],["8fe1a1","è½è½è½è½",4,"è½è½è½è½¥è¾è¾ è¾¡è¾¤è¾¥è¾¦è¾µè¾¶è¾¸è¾¾è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿ è¿£è¿¤è¿¨è¿®è¿±è¿µè¿¶è¿»è¿¾ééééééé¨é©é¯éªé¬é­é³é´é·é¿éééééé¢é¦é§é¬é°é´é¹éééééééééééé é¡é¢é¥é°é²é³é´é¶é½éé¾é"],["8fe2a1","éééééééééééé¥éé¶é«é¯é°é´é¾é¿ééééééééééééééé é¥é¢é£é§é©é®é¯é±é´é¶é·é¹éºé¼é½éééééééééé¡é¤é§é­é´é¹éºé»ééééééééééééé¡é¦é¨é¬é­é®é°é±é²é³é¶é»é¼é½é¿"],["8fe3a1","éééééééééé¤é¥é©éªé¬",5,"é·é¹é»é½ééééééééééééééééé£é¤é¥é¦é¨é®é¯é°é³éµé¶é¸é¹éºé¼é¾ééééééééééééééé é¡é¥é§é¨é©é®é¯é°éµ",4,"é»é¼é½é¿ééééééé"],["8fe4a1","ééé é¤é¥é§é¨é«é¯é²é¶é¸éºé»é¼é½é¿",4,"éééééééééééééééééé é¡é£é¥é§é¨é¬é®é°é¹é»é¿éééééééééééé¡é¤é¥é§é©éªé³é´é¶é·éééééééééééé¤é¥é§é©éªé­é¯é°é±é³é´é¶"],["8fe5a1","éºé½é¿éééééééééééééé¡é£é¤é¦é¨é«é´éµé¶éºé©éééééé",4,"éééééé¢é¦é§é¹é·é¸éºé»é½ééééééééééééé®é¯é±é²é³é´é»é¿é½éééééééééé¡é£é¨é«é­é®é¯é±é²ééé¸é¹"],["8fe6a1","é¾ééééééééé¡é¦é©é«é¬é´é¶éºé½é¿éééééééééééééé é¤é¦ééé¢é¤é¥é¦é¬é±é³é·é¸é¹éºé¼é½ééééééé¡é®é´é»é¼é¾é¿ééééééééééé¤é¥é¦é©é®é¯é³éºééå¶²éééééé©é¯é±éºé"],["8fe7a1","ééééééé¡é¢é£é¨é±é³ééééééééééé£é§éªé®é³é¶é·é¸é»é½é¿éééééééééé¢é¬é®é±é²éµé¶é¸é¹éºé¼é¾é¿éééééééééééééééééé éé¡é¤é¯é±é´é·é¸éºé é é é é é é é é é  é £é ¦"],["8fe8a1","é «é ®é ¯é °é ²é ³é µé ¥é ¾é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡¢é¡£é¡¥é¡¦é¡ªé¡¬é¢«é¢­é¢®é¢°é¢´é¢·é¢¸é¢ºé¢»é¢¿é£é£é£é£é£¡é££é£¥é£¦é£§é£ªé£³é£¶é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤¢é¤¦é¤§é¤«é¤±",4,"é¤¹é¤ºé¤»é¤¼é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥ é¦é¦é¦é¦¦é¦°é¦±é¦²é¦µ"],["8fe9a1","é¦¹é¦ºé¦½é¦¿é§é§é§é§é§é§é§é§é§§é§ªé§«é§¬é§°é§´é§µé§¹é§½é§¾é¨é¨é¨é¨é¨é¨é¨é¨é¨é¨ é¨¢é¨£é¨¤é¨§é¨­é¨®é¨³é¨µé¨¶é¨¸é©é©é©é©é©é©é©é©é©é©é©éªªéª¬éª®éª¯éª²éª´éªµéª¶éª¹éª»éª¾éª¿é«é«é«é«é«é«é«é«é«é«é«é«é« é«¤é«¥é«§é«©é«¬é«²é«³é«µé«¹é«ºé«½é«¿",4],["8feaa1","é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬ é¬¦é¬«é¬­é¬³é¬´é¬µé¬·é¬¹é¬ºé¬½é­é­é­é­é­é­é­é­é­¡é­£é­¥é­¦é­¨é­ª",4,"é­³é­µé­·é­¸é­¹é­¿é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®¦é®§é®©é®¬é®°é®±é®²é®·é®¸é®»é®¼é®¾é®¿é¯é¯é¯é¯é¯é¯é¯é¯é¯é¯¥é¯§é¯ªé¯«é¯¯é¯³é¯·é¯¸"],["8feba1","é¯¹é¯ºé¯½é¯¿é°é°é°é°é°é°é°é°é°é°é°é°¢é°£é°¦",4,"é°±é°µé°¶é°·é°½é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±£é±©é±ªé±é±«é±¨é±®é±°é±²é±µé±·é±»é³¦é³²é³·é³¹é´é´é´é´é´é´é´é´é´¯é´°é´²é´³é´´é´ºé´¼éµé´½éµéµéµéµéµéµéµéµ£éµ¢éµ¥éµ©éµªéµ«éµ°éµ¶éµ·éµ»"],["8feca1","éµ¼éµ¾é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶¡é¶ªé¶¬é¶®é¶±é¶µé¶¹é¶¼é¶¿é·é·é·é·é·é·é·é·é·é·é·é· é·¥é·§é·©é·«é·®é·°é·³é·´é·¾é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¹ºé¹»é¹¼éºéºéºéºéºéºéºéºéºéºéºéºéº¤éº¨éº¬éº®éº¯éº°éº³éº´éºµé»é»é»é»é»é»¤é»§é»¬é»­é»®é»°é»±é»²é»µ"],["8feda1","é»¸é»¿é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼¢é¼¦é¼ªé¼«é¼¯é¼±é¼²é¼´é¼·é¼¹é¼ºé¼¼é¼½é¼¿é½é½",4,"é½é½é½é½é½é½é½é½é½¨é½©é½­",4,"é½³é½µé½ºé½½é¾é¾é¾é¾é¾é¾é¾é¾é¾¡é¾¢é¾£é¾¥"]]');
            }
          ),
          /***/
          36258: (
            /***/
            function(l) {
              l.exports = JSON.parse('{"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}');
            }
          ),
          /***/
          44346: (
            /***/
            function(l) {
              l.exports = JSON.parse('[["a140","î",62],["a180","î",32],["a240","î¦",62],["a280","î¥",32],["a2ab","î¦",5],["a2e3","â¬î­"],["a2ef","î®î¯"],["a2fd","î°î±"],["a340","î",62],["a380","î",31,"ã"],["a440","î¦",62],["a480","î¥",32],["a4f4","î²",10],["a540","î",62],["a580","î",32],["a5f7","î½",7],["a640","î¦",62],["a680","î¥",32],["a6b9","î",7],["a6d9","î",6],["a6ec","îî"],["a6f3","î"],["a6f6","î",8],["a740","î",62],["a780","î",32],["a7c2","î ",14],["a7f2","î¯",12],["a896","î¼",10],["a8bc","á¸¿"],["a8bf","Ç¹"],["a8c1","îîîî"],["a8ea","î",20],["a958","î¢"],["a95b","î£"],["a95d","î¤î¥î¦"],["a989","ã¾â¿°",11],["a997","î´",12],["a9f0","î ",14],["aaa1","î",93],["aba1","î",93],["aca1","î¼",93],["ada1","î",93],["aea1","î¸",93],["afa1","î",93],["d7fa","î ",4],["f8a1","î´",93],["f9a1","î",93],["faa1","î°",93],["fba1","î",93],["fca1","î¬",93],["fda1","î",93],["fe50","âºî î î âºã³ãâºâºî ãããâºâºã¥®ã¤î ¦ã§ã§ã©³ã§î «î ¬ã­ã±®ã³ âº§î ±î ²âºªääâº®ä·âº³âº¶âº·î »ä±ä¬âº»äää¡äî¡"],["fe80","ä£ä©ä¼äâ»ä¥ä¥ºä¥½ä¦ä¦ä¦ä¦ä¦ä¦ä¦·ä¦¶î¡î¡ä²£ä²ä² ä²¡ä±·ä²¢ä´",6,"ä¶®î¡¤î¨",93],["8135f437","î"]]');
            }
          ),
          /***/
          27014: (
            /***/
            function(l) {
              l.exports = JSON.parse('[["0","\\u0000",128],["a1","ï½¡",62],["8140","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±Ã"],["8180","Ã·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââââ¡â â³â²â½â¼â»ãââââã"],["81b8","âââââââªâ©"],["81c8","â§â¨ï¿¢ââââ"],["81da","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["81f0","â«â°â¯â­âªâ â¡Â¶"],["81fc","â¯"],["824f","ï¼",9],["8260","ï¼¡",25],["8281","ï½",25],["829f","ã",82],["8340","ã¡",62],["8380","ã ",22],["839f","Î",16,"Î£",6],["83bf","Î±",16,"Ï",6],["8440","Ð",5,"ÐÐ",25],["8470","Ð°",5,"ÑÐ¶",7],["8480","Ð¾",17],["849f","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["8740","â ",19,"â ",9],["875f","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["877e","ã»"],["8780","ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["889f","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["8940","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­å"],["8980","åå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["8a40","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«"],["8a80","æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["8b40","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥æ"],["8b80","æ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["8c40","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨"],["8c80","åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["8d40","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤é"],["8d80","é é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["8e40","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢"],["8e80","æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºææææ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["8f40","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³"],["8f80","æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·ååå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["9040","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨"],["9080","éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["9140","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»"],["9180","ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æèèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["9240","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­è"],["9280","éç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µå¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["9340","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬"],["9380","åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["9440","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢"],["9480","æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["9540","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·"],["9580","æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["9640","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡ç"],["9680","æ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æºæ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["9740","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²"],["9780","æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨ççç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["9840","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["989f","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["9940","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­"],["9980","å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["9a40","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸"],["9a80","å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿ååååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["9b40","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®"],["9b80","å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["9c40","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ "],["9c80","æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["9d40","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«"],["9d80","æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["9e40","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡"],["9e80","æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["9f40","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯"],["9f80","éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["e040","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®ççç"],["e080","ççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e140","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿"],["e180","ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e240","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°"],["e280","çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e340","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·"],["e380","ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼ºç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e440","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤"],["e480","è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèèèµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e540","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬"],["e580","èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®èèè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["e640","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§"],["e680","è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["e740","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½"],["e780","è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["e840","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿ééééééé"],["e880","é é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·ééééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["e940","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©"],["e980","é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["ea40","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯"],["ea80","é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ å ¯æ§éç¤åç"],["ed40","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨"],["ed80","ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["ee40","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èè"],["ee80","è«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["eeef","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["f040","î",62],["f080","î¿",124],["f140","î¼",62],["f180","î»",124],["f240","î¸",62],["f280","î·",124],["f340","î´",62],["f380","î³",124],["f440","î°",62],["f480","î¯",124],["f540","î¬",62],["f580","î«",124],["f640","î¨",62],["f680","î§",124],["f740","î¤",62],["f780","î£",124],["f840","î ",62],["f880","î",124],["f940","î"],["fa40","â°",9,"â ",9,"ï¿¢ï¿¤ï¼ï¼ã±ââ¡âµçºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´åå"],["fa80","å¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯"],["fb40","æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨"],["fb80","ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«"],["fc40","é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"]]');
            }
          )
          /******/
        }, w = {};
        function I(l) {
          var c = w[l];
          if (c !== void 0)
            return c.exports;
          var t = w[l] = {
            /******/
            id: l,
            /******/
            loaded: !1,
            /******/
            exports: {}
            /******/
          };
          return g[l].call(t.exports, t, t.exports, I), t.loaded = !0, t.exports;
        }
        (function() {
          I.g = function() {
            if (typeof globalThis == "object")
              return globalThis;
            try {
              return this || new Function("return this")();
            } catch (l) {
              if (typeof window == "object")
                return window;
            }
          }();
        })(), function() {
          I.nmd = function(l) {
            return l.paths = [], l.children || (l.children = []), l;
          };
        }();
        var F = I(26949);
        return F;
      }()
    );
  });
})(F1);
/*! Buttons for DataTables 3.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
let Te = Ln;
var I1 = 0, D1 = 0, ta = se.ext.buttons, r0 = null;
function T0(n, v, g) {
  Te.fn.animate ? n.stop().fadeIn(v, g) : (n.css("display", "block"), g && g.call(n));
}
function F0(n, v, g) {
  Te.fn.animate ? n.stop().fadeOut(v, g) : (n.css("display", "none"), g && g.call(n));
}
var an = function(n, v) {
  if (!se.versionCheck("2"))
    throw "Warning: Buttons requires DataTables 2 or newer";
  if (!(this instanceof an))
    return function(g) {
      return new an(g, n).container();
    };
  typeof v == "undefined" && (v = {}), v === !0 && (v = {}), Array.isArray(v) && (v = { buttons: v }), this.c = Te.extend(!0, {}, an.defaults, v), v.buttons && (this.c.buttons = v.buttons), this.s = {
    dt: new se.Api(n),
    buttons: [],
    listenKeys: "",
    namespace: "dtb" + I1++
  }, this.dom = {
    container: Te("<" + this.c.dom.container.tag + "/>").addClass(
      this.c.dom.container.className
    )
  }, this._constructor();
};
Te.extend(an.prototype, {
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Public methods
   */
  /**
   * Get the action of a button
   * @param  {int|string} Button index
   * @return {function}
   */
  /**
  * Set the action of a button
  * @param  {node} node Button element
  * @param  {function} action Function to set
  * @return {Buttons} Self for chaining
  */
  action: function(n, v) {
    var g = this._nodeToButton(n);
    return v === void 0 ? g.conf.action : (g.conf.action = v, this);
  },
  /**
   * Add an active class to the button to make to look active or get current
   * active state.
   * @param  {node} node Button element
   * @param  {boolean} [flag] Enable / disable flag
   * @return {Buttons} Self for chaining or boolean for getter
   */
  active: function(n, v) {
    var g = this._nodeToButton(n), w = this.c.dom.button.active, I = Te(g.node);
    return g.inCollection && this.c.dom.collection.button && this.c.dom.collection.button.active !== void 0 && (w = this.c.dom.collection.button.active), v === void 0 ? I.hasClass(w) : (I.toggleClass(w, v === void 0 ? !0 : v), this);
  },
  /**
   * Add a new button
   * @param {object} config Button configuration object, base string name or function
   * @param {int|string} [idx] Button index for where to insert the button
   * @param {boolean} [draw=true] Trigger a draw. Set a false when adding
   *   lots of buttons, until the last button.
   * @return {Buttons} Self for chaining
   */
  add: function(n, v, g) {
    var w = this.s.buttons;
    if (typeof v == "string") {
      for (var I = v.split("-"), F = this.s, l = 0, c = I.length - 1; l < c; l++)
        F = F.buttons[I[l] * 1];
      w = F.buttons, v = I[I.length - 1] * 1;
    }
    return this._expandButton(
      w,
      n,
      n !== void 0 ? n.split : void 0,
      (n === void 0 || n.split === void 0 || n.split.length === 0) && F !== void 0,
      !1,
      v
    ), (g === void 0 || g === !0) && this._draw(), this;
  },
  /**
   * Clear buttons from a collection and then insert new buttons
   */
  collectionRebuild: function(n, v) {
    var g = this._nodeToButton(n);
    if (v !== void 0) {
      var w;
      for (w = g.buttons.length - 1; w >= 0; w--)
        this.remove(g.buttons[w].node);
      for (g.conf.prefixButtons && v.unshift.apply(v, g.conf.prefixButtons), g.conf.postfixButtons && v.push.apply(v, g.conf.postfixButtons), w = 0; w < v.length; w++) {
        var I = v[w];
        this._expandButton(
          g.buttons,
          I,
          I !== void 0 && I.config !== void 0 && I.config.split !== void 0,
          !0,
          I.parentConf !== void 0 && I.parentConf.split !== void 0,
          null,
          I.parentConf
        );
      }
    }
    this._draw(g.collection, g.buttons);
  },
  /**
   * Get the container node for the buttons
   * @return {jQuery} Buttons node
   */
  container: function() {
    return this.dom.container;
  },
  /**
   * Disable a button
   * @param  {node} node Button node
   * @return {Buttons} Self for chaining
   */
  disable: function(n) {
    var v = this._nodeToButton(n);
    return Te(v.node).addClass(this.c.dom.button.disabled).prop("disabled", !0), this;
  },
  /**
   * Destroy the instance, cleaning up event handlers and removing DOM
   * elements
   * @return {Buttons} Self for chaining
   */
  destroy: function() {
    Te("body").off("keyup." + this.s.namespace);
    var n = this.s.buttons.slice(), v, g;
    for (v = 0, g = n.length; v < g; v++)
      this.remove(n[v].node);
    this.dom.container.remove();
    var w = this.s.dt.settings()[0];
    for (v = 0, g = w.length; v < g; v++)
      if (w.inst === this) {
        w.splice(v, 1);
        break;
      }
    return this;
  },
  /**
   * Enable / disable a button
   * @param  {node} node Button node
   * @param  {boolean} [flag=true] Enable / disable flag
   * @return {Buttons} Self for chaining
   */
  enable: function(n, v) {
    if (v === !1)
      return this.disable(n);
    var g = this._nodeToButton(n);
    return Te(g.node).removeClass(this.c.dom.button.disabled).prop("disabled", !1), this;
  },
  /**
   * Get a button's index
   *
   * This is internally recursive
   * @param {element} node Button to get the index of
   * @return {string} Button index
   */
  index: function(n, v, g) {
    v || (v = "", g = this.s.buttons);
    for (var w = 0, I = g.length; w < I; w++) {
      var F = g[w].buttons;
      if (g[w].node === n)
        return v + w;
      if (F && F.length) {
        var l = this.index(n, w + "-", F);
        if (l !== null)
          return l;
      }
    }
    return null;
  },
  /**
   * Get the instance name for the button set selector
   * @return {string} Instance name
   */
  name: function() {
    return this.c.name;
  },
  /**
   * Get a button's node of the buttons container if no button is given
   * @param  {node} [node] Button node
   * @return {jQuery} Button element, or container
   */
  node: function(n) {
    if (!n)
      return this.dom.container;
    var v = this._nodeToButton(n);
    return Te(v.node);
  },
  /**
   * Set / get a processing class on the selected button
   * @param {element} node Triggering button node
   * @param  {boolean} flag true to add, false to remove, undefined to get
   * @return {boolean|Buttons} Getter value or this if a setter.
   */
  processing: function(n, v) {
    var g = this.s.dt, w = this._nodeToButton(n);
    return v === void 0 ? Te(w.node).hasClass("processing") : (Te(w.node).toggleClass("processing", v), Te(g.table().node()).triggerHandler("buttons-processing.dt", [
      v,
      g.button(n),
      g,
      Te(n),
      w.conf
    ]), this);
  },
  /**
   * Remove a button.
   * @param  {node} node Button node
   * @return {Buttons} Self for chaining
   */
  remove: function(n) {
    var v = this._nodeToButton(n), g = this._nodeToHost(n), w = this.s.dt;
    if (v.buttons.length)
      for (var I = v.buttons.length - 1; I >= 0; I--)
        this.remove(v.buttons[I].node);
    v.conf.destroying = !0, v.conf.destroy && v.conf.destroy.call(w.button(n), w, Te(n), v.conf), this._removeKey(v.conf), Te(v.node).remove();
    var F = Te.inArray(v, g);
    return g.splice(F, 1), this;
  },
  /**
   * Get the text for a button
   * @param  {int|string} node Button index
   * @return {string} Button text
   */
  /**
  * Set the text for a button
  * @param  {int|string|function} node Button index
  * @param  {string} label Text
  * @return {Buttons} Self for chaining
  */
  text: function(n, v) {
    var g = this._nodeToButton(n), w = g.textNode, I = this.s.dt, F = Te(g.node), l = function(c) {
      return typeof c == "function" ? c(I, F, g.conf) : c;
    };
    return v === void 0 ? l(g.conf.text) : (g.conf.text = v, w.html(l(v)), this);
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Constructor
   */
  /**
   * Buttons constructor
   * @private
   */
  _constructor: function() {
    var n = this, v = this.s.dt, g = v.settings()[0], w = this.c.buttons;
    g._buttons || (g._buttons = []), g._buttons.push({
      inst: this,
      name: this.c.name
    });
    for (var I = 0, F = w.length; I < F; I++)
      this.add(w[I]);
    v.on("destroy", function(l, c) {
      c === g && n.destroy();
    }), Te("body").on("keyup." + this.s.namespace, function(l) {
      if (!document.activeElement || document.activeElement === document.body) {
        var c = String.fromCharCode(l.keyCode).toLowerCase();
        n.s.listenKeys.toLowerCase().indexOf(c) !== -1 && n._keypress(c, l);
      }
    });
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Private methods
   */
  /**
   * Add a new button to the key press listener
   * @param {object} conf Resolved button configuration object
   * @private
   */
  _addKey: function(n) {
    n.key && (this.s.listenKeys += Te.isPlainObject(n.key) ? n.key.key : n.key);
  },
  /**
   * Insert the buttons into the container. Call without parameters!
   * @param  {node} [container] Recursive only - Insert point
   * @param  {array} [buttons] Recursive only - Buttons array
   * @private
   */
  _draw: function(n, v) {
    n || (n = this.dom.container, v = this.s.buttons), n.children().detach();
    for (var g = 0, w = v.length; g < w; g++)
      n.append(v[g].inserter), n.append(" "), v[g].buttons && v[g].buttons.length && this._draw(v[g].collection, v[g].buttons);
  },
  /**
   * Create buttons from an array of buttons
   * @param  {array} attachTo Buttons array to attach to
   * @param  {object} button Button definition
   * @param  {boolean} inCollection true if the button is in a collection
   * @private
   */
  _expandButton: function(n, v, g, w, I, F, l) {
    var c = this.s.dt, t = !1, s = this.c.dom.collection, r = Array.isArray(v) ? v : [v];
    v === void 0 && (r = Array.isArray(g) ? g : [g]);
    for (var a = 0, o = r.length; a < o; a++) {
      var f = this._resolveExtends(r[a]);
      if (f) {
        if (t = !!(f.config && f.config.split), Array.isArray(f)) {
          this._expandButton(
            n,
            f,
            u !== void 0 && u.conf !== void 0 ? u.conf.split : void 0,
            w,
            l !== void 0 && l.split !== void 0,
            F,
            l
          );
          continue;
        }
        var u = this._buildButton(
          f,
          w,
          f.split !== void 0 || f.config !== void 0 && f.config.split !== void 0,
          I
        );
        if (u) {
          if (F != null ? (n.splice(F, 0, u), F++) : n.push(u), u.conf.buttons && (u.collection = Te(
            "<" + s.container.content.tag + "/>"
          ), u.conf._collection = u.collection, Te(u.node).append(s.action.dropHtml), this._expandButton(
            u.buttons,
            u.conf.buttons,
            u.conf.split,
            !t,
            t,
            F,
            u.conf
          )), u.conf.split) {
            u.collection = Te("<" + s.container.tag + "/>"), u.conf._collection = u.collection;
            for (var h = 0; h < u.conf.split.length; h++) {
              var d = u.conf.split[h];
              typeof d == "object" && (d.parent = l, d.collectionLayout === void 0 && (d.collectionLayout = u.conf.collectionLayout), d.dropup === void 0 && (d.dropup = u.conf.dropup), d.fade === void 0 && (d.fade = u.conf.fade));
            }
            this._expandButton(
              u.buttons,
              u.conf.buttons,
              u.conf.split,
              !t,
              t,
              F,
              u.conf
            );
          }
          u.conf.parent = l, f.init && f.init.call(c.button(u.node), c, Te(u.node), f);
        }
      }
    }
  },
  /**
   * Create an individual button
   * @param  {object} config            Resolved button configuration
   * @param  {boolean} inCollection `true` if a collection button
   * @return {object} Completed button description object
   * @private
   */
  _buildButton: function(n, v, g, w) {
    var I = this, F = this.c.dom, l, c = this.s.dt, t = function(O) {
      return typeof O == "function" ? O(c, a, n) : O;
    }, s = Te.extend(!0, {}, F.button);
    if (v && g && F.collection.split ? Te.extend(!0, s, F.collection.split.action) : w || v ? Te.extend(!0, s, F.collection.button) : g && Te.extend(!0, s, F.split.button), n.spacer) {
      var r = Te("<" + s.spacer.tag + "/>").addClass(
        "dt-button-spacer " + n.style + " " + s.spacer.className
      ).html(t(n.text));
      return {
        conf: n,
        node: r,
        inserter: r,
        buttons: [],
        inCollection: v,
        isSplit: g,
        collection: null,
        textNode: r
      };
    }
    if (n.available && !n.available(c, n) && !n.html)
      return !1;
    var a;
    if (n.html)
      a = Te(n.html);
    else {
      var o = function(O, T, A, E, D) {
        E.action.call(T.button(A), O, T, A, E, D), Te(T.table().node()).triggerHandler("buttons-action.dt", [
          T.button(A),
          T,
          A,
          E
        ]);
      }, f = function(O, T, A, E) {
        E.async ? (I.processing(A[0], !0), setTimeout(function() {
          o(O, T, A, E, function() {
            I.processing(A[0], !1);
          });
        }, E.async)) : o(O, T, A, E, function() {
        });
      }, u = n.tag || s.tag, h = n.clickBlurs === void 0 ? !0 : n.clickBlurs;
      if (a = Te("<" + u + "/>").addClass(s.className).attr("tabindex", this.s.dt.settings()[0].iTabIndex).attr("aria-controls", this.s.dt.table().node().id).on("click.dtb", function(O) {
        O.preventDefault(), !a.hasClass(s.disabled) && n.action && f(O, c, a, n), h && a.trigger("blur");
      }).on("keypress.dtb", function(O) {
        O.keyCode === 13 && (O.preventDefault(), !a.hasClass(s.disabled) && n.action && f(O, c, a, n));
      }), u.toLowerCase() === "a" && a.attr("href", "#"), u.toLowerCase() === "button" && a.attr("type", "button"), s.liner.tag) {
        var d = Te("<" + s.liner.tag + "/>").html(t(n.text)).addClass(s.liner.className);
        s.liner.tag.toLowerCase() === "a" && d.attr("href", "#"), a.append(d), l = d;
      } else
        a.html(t(n.text)), l = a;
      n.enabled === !1 && a.addClass(s.disabled), n.className && a.addClass(n.className), n.titleAttr && a.attr("title", t(n.titleAttr)), n.attr && a.attr(n.attr), n.namespace || (n.namespace = ".dt-button-" + D1++), n.config !== void 0 && n.config.split && (n.split = n.config.split);
    }
    var i = this.c.dom.buttonContainer, p;
    i && i.tag ? p = Te("<" + i.tag + "/>").addClass(i.className).append(a) : p = a, this._addKey(n), this.c.buttonCreated && (p = this.c.buttonCreated(n, p));
    var y;
    if (g) {
      var m = v ? Te.extend(!0, this.c.dom.split, this.c.dom.collection.split) : this.c.dom.split, e = m.wrapper;
      y = Te("<" + e.tag + "/>").addClass(e.className).append(a);
      var x = Te.extend(n, {
        align: m.dropdown.align,
        attr: {
          "aria-haspopup": "dialog",
          "aria-expanded": !1
        },
        className: m.dropdown.className,
        closeButton: !1,
        splitAlignClass: m.dropdown.splitAlignClass,
        text: m.dropdown.text
      });
      this._addKey(x);
      var S = function(O, T, A, E) {
        ta.split.action.call(
          T.button(y),
          O,
          T,
          A,
          E
        ), Te(T.table().node()).triggerHandler("buttons-action.dt", [
          T.button(A),
          T,
          A,
          E
        ]), A.attr("aria-expanded", !0);
      }, P = Te(
        '<button class="' + m.dropdown.className + ' dt-button"></button>'
      ).html(m.dropdown.dropHtml).on("click.dtb", function(O) {
        O.preventDefault(), O.stopPropagation(), P.hasClass(s.disabled) || S(O, c, P, x), h && P.trigger("blur");
      }).on("keypress.dtb", function(O) {
        O.keyCode === 13 && (O.preventDefault(), P.hasClass(s.disabled) || S(O, c, P, x));
      });
      n.split.length === 0 && P.addClass("dtb-hide-drop"), y.append(P).attr(x.attr);
    }
    return {
      conf: n,
      node: g ? y.get(0) : a.get(0),
      inserter: g ? y : p,
      buttons: [],
      inCollection: v,
      isSplit: g,
      inSplit: w,
      collection: null,
      textNode: l
    };
  },
  /**
   * Get the button object from a node (recursive)
   * @param  {node} node Button node
   * @param  {array} [buttons] Button array, uses base if not defined
   * @return {object} Button object
   * @private
   */
  _nodeToButton: function(n, v) {
    v || (v = this.s.buttons);
    for (var g = 0, w = v.length; g < w; g++) {
      if (v[g].node === n)
        return v[g];
      if (v[g].buttons.length) {
        var I = this._nodeToButton(n, v[g].buttons);
        if (I)
          return I;
      }
    }
  },
  /**
   * Get container array for a button from a button node (recursive)
   * @param  {node} node Button node
   * @param  {array} [buttons] Button array, uses base if not defined
   * @return {array} Button's host array
   * @private
   */
  _nodeToHost: function(n, v) {
    v || (v = this.s.buttons);
    for (var g = 0, w = v.length; g < w; g++) {
      if (v[g].node === n)
        return v;
      if (v[g].buttons.length) {
        var I = this._nodeToHost(n, v[g].buttons);
        if (I)
          return I;
      }
    }
  },
  /**
   * Handle a key press - determine if any button's key configured matches
   * what was typed and trigger the action if so.
   * @param  {string} character The character pressed
   * @param  {object} e Key event that triggered this call
   * @private
   */
  _keypress: function(n, v) {
    if (!v._buttonsHandled) {
      var g = function(I, F) {
        if (I.key) {
          if (I.key === n)
            v._buttonsHandled = !0, Te(F).click();
          else if (Te.isPlainObject(I.key)) {
            if (I.key.key !== n || I.key.shiftKey && !v.shiftKey || I.key.altKey && !v.altKey || I.key.ctrlKey && !v.ctrlKey || I.key.metaKey && !v.metaKey)
              return;
            v._buttonsHandled = !0, Te(F).click();
          }
        }
      }, w = function(I) {
        for (var F = 0, l = I.length; F < l; F++)
          g(I[F].conf, I[F].node), I[F].buttons.length && w(I[F].buttons);
      };
      w(this.s.buttons);
    }
  },
  /**
   * Remove a key from the key listener for this instance (to be used when a
   * button is removed)
   * @param  {object} conf Button configuration
   * @private
   */
  _removeKey: function(n) {
    if (n.key) {
      var v = Te.isPlainObject(n.key) ? n.key.key : n.key, g = this.s.listenKeys.split(""), w = Te.inArray(v, g);
      g.splice(w, 1), this.s.listenKeys = g.join("");
    }
  },
  /**
   * Resolve a button configuration
   * @param  {string|function|object} conf Button config to resolve
   * @return {object} Button configuration
   * @private
   */
  _resolveExtends: function(n) {
    var v = this, g = this.s.dt, w, I, F = function(r) {
      for (var a = 0; !Te.isPlainObject(r) && !Array.isArray(r); ) {
        if (r === void 0)
          return;
        if (typeof r == "function") {
          if (r = r.call(v, g, n), !r)
            return !1;
        } else if (typeof r == "string") {
          if (!ta[r])
            return { html: r };
          r = ta[r];
        }
        if (a++, a > 30)
          throw "Buttons: Too many iterations";
      }
      return Array.isArray(r) ? r : Te.extend({}, r);
    };
    for (n = F(n); n && n.extend; ) {
      if (!ta[n.extend])
        throw "Cannot extend unknown button type: " + n.extend;
      var l = F(ta[n.extend]);
      if (Array.isArray(l))
        return l;
      if (!l)
        return !1;
      var c = l.className;
      n.config !== void 0 && l.config !== void 0 && (n.config = Te.extend({}, l.config, n.config)), n = Te.extend({}, l, n), c && n.className !== c && (n.className = c + " " + n.className), n.extend = l.extend;
    }
    var t = n.postfixButtons;
    if (t)
      for (n.buttons || (n.buttons = []), w = 0, I = t.length; w < I; w++)
        n.buttons.push(t[w]);
    var s = n.prefixButtons;
    if (s)
      for (n.buttons || (n.buttons = []), w = 0, I = s.length; w < I; w++)
        n.buttons.splice(w, 0, s[w]);
    return n;
  },
  /**
   * Display (and replace if there is an existing one) a popover attached to a button
   * @param {string|node} content Content to show
   * @param {DataTable.Api} hostButton DT API instance of the button
   * @param {object} inOpts Options (see object below for all options)
   */
  _popover: function(n, v, g) {
    var w = v, I = this.c, F = !1, l = Te.extend(
      {
        align: "button-left",
        // button-right, dt-container, split-left, split-right
        autoClose: !1,
        background: !0,
        backgroundClassName: "dt-button-background",
        closeButton: !0,
        containerClassName: I.dom.collection.container.className,
        contentClassName: I.dom.collection.container.content.className,
        collectionLayout: "",
        collectionTitle: "",
        dropup: !1,
        fade: 400,
        popoverTitle: "",
        rightAlignClassName: "dt-button-right",
        tag: I.dom.collection.container.tag
      },
      g
    ), c = l.tag + "." + l.containerClassName.replace(/ /g, "."), t = v.node(), s = function() {
      F = !0, F0(Te(c), l.fade, function() {
        Te(this).detach();
      }), Te(
        w.buttons('[aria-haspopup="dialog"][aria-expanded="true"]').nodes()
      ).attr("aria-expanded", "false"), Te("div.dt-button-background").off("click.dtb-collection"), an.background(
        !1,
        l.backgroundClassName,
        l.fade,
        t
      ), Te(window).off("resize.resize.dtb-collection"), Te("body").off(".dtb-collection"), w.off("buttons-action.b-internal"), w.off("destroy");
    };
    if (n === !1) {
      s();
      return;
    }
    var r = Te(
      w.buttons('[aria-haspopup="dialog"][aria-expanded="true"]').nodes()
    );
    r.length && (t.closest(c).length && (t = r.eq(0)), s());
    var a = Te(".dt-button", n).length, o = "";
    a === 3 ? o = "dtb-b3" : a === 2 ? o = "dtb-b2" : a === 1 && (o = "dtb-b1");
    var f = Te("<" + l.tag + "/>").addClass(l.containerClassName).addClass(l.collectionLayout).addClass(l.splitAlignClass).addClass(o).css("display", "none").attr({
      "aria-modal": !0,
      role: "dialog"
    });
    n = Te(n).addClass(l.contentClassName).attr("role", "menu").appendTo(f), t.attr("aria-expanded", "true"), t.parents("body")[0] !== document.body && (t = document.body.lastChild), l.popoverTitle ? f.prepend(
      '<div class="dt-button-collection-title">' + l.popoverTitle + "</div>"
    ) : l.collectionTitle && f.prepend(
      '<div class="dt-button-collection-title">' + l.collectionTitle + "</div>"
    ), l.closeButton && f.prepend('<div class="dtb-popover-close">&times;</div>').addClass("dtb-collection-closeable"), T0(f.insertAfter(t), l.fade);
    var u = Te(v.table().container()), h = f.css("position");
    if ((l.span === "container" || l.align === "dt-container") && (t = t.parent(), f.css("width", u.width())), h === "absolute") {
      var d = Te(t[0].offsetParent), i = t.position(), p = t.offset(), y = d.offset(), m = d.position(), e = window.getComputedStyle(d[0]);
      y.height = d.outerHeight(), y.width = d.width() + parseFloat(e.paddingLeft), y.right = y.left + y.width, y.bottom = y.top + y.height;
      var x = i.top + t.outerHeight(), S = i.left;
      f.css({
        top: x,
        left: S
      }), e = window.getComputedStyle(f[0]);
      var P = f.offset();
      P.height = f.outerHeight(), P.width = f.outerWidth(), P.right = P.left + P.width, P.bottom = P.top + P.height, P.marginTop = parseFloat(e.marginTop), P.marginBottom = parseFloat(e.marginBottom), l.dropup && (x = i.top - P.height - P.marginTop - P.marginBottom), (l.align === "button-right" || f.hasClass(l.rightAlignClassName)) && (S = i.left - P.width + t.outerWidth()), (l.align === "dt-container" || l.align === "container") && S < i.left && (S = -i.left), m.left + S + P.width > Te(window).width() && (S = Te(window).width() - P.width - m.left), p.left + S < 0 && (S = -p.left), m.top + x + P.height > Te(window).height() + Te(window).scrollTop() && (x = i.top - P.height - P.marginTop - P.marginBottom), m.top + x < Te(window).scrollTop() && (x = i.top + t.outerHeight()), f.css({
        top: x,
        left: S
      });
    } else {
      var O = function() {
        var T = Te(window).height() / 2, A = f.height() / 2;
        A > T && (A = T), f.css("marginTop", A * -1);
      };
      O(), Te(window).on("resize.dtb-collection", function() {
        O();
      });
    }
    l.background && an.background(
      !0,
      l.backgroundClassName,
      l.fade,
      l.backgroundHost || t
    ), Te("div.dt-button-background").on(
      "click.dtb-collection",
      function() {
      }
    ), l.autoClose && setTimeout(function() {
      w.on("buttons-action.b-internal", function(T, A, E, D) {
        D[0] !== t[0] && s();
      });
    }, 0), Te(f).trigger("buttons-popover.dt"), w.on("destroy", s), setTimeout(function() {
      F = !1, Te("body").on("click.dtb-collection", function(T) {
        if (!F) {
          var A = Te.fn.addBack ? "addBack" : "andSelf", E = Te(T.target).parent()[0];
          (!Te(T.target).parents()[A]().filter(n).length && !Te(E).hasClass("dt-buttons") || Te(T.target).hasClass("dt-button-background")) && s();
        }
      }).on("keyup.dtb-collection", function(T) {
        T.keyCode === 27 && s();
      }).on("keydown.dtb-collection", function(T) {
        var A = Te("a, button", n), E = document.activeElement;
        T.keyCode === 9 && (A.index(E) === -1 ? (A.first().focus(), T.preventDefault()) : T.shiftKey ? E === A[0] && (A.last().focus(), T.preventDefault()) : E === A.last()[0] && (A.first().focus(), T.preventDefault()));
      });
    }, 0);
  }
});
an.background = function(n, v, g, w) {
  g === void 0 && (g = 400), w || (w = document.body), n ? T0(
    Te("<div/>").addClass(v).css("display", "none").insertAfter(w),
    g
  ) : F0(Te("div." + v), g, function() {
    Te(this).removeClass(v).remove();
  });
};
an.instanceSelector = function(n, v) {
  if (n == null)
    return Te.map(v, function(F) {
      return F.inst;
    });
  var g = [], w = Te.map(v, function(F) {
    return F.name;
  }), I = function(F) {
    if (Array.isArray(F)) {
      for (var l = 0, c = F.length; l < c; l++)
        I(F[l]);
      return;
    }
    if (typeof F == "string")
      if (F.indexOf(",") !== -1)
        I(F.split(","));
      else {
        var t = Te.inArray(F.trim(), w);
        t !== -1 && g.push(v[t].inst);
      }
    else
      typeof F == "number" ? g.push(v[F].inst) : typeof F == "object" && g.push(F);
  };
  return I(n), g;
};
an.buttonSelector = function(n, v) {
  for (var g = [], w = function(t, s, r) {
    for (var a, o, f = 0, u = s.length; f < u; f++)
      a = s[f], a && (o = r !== void 0 ? r + f : f + "", t.push({
        node: a.node,
        name: a.conf.name,
        idx: o
      }), a.buttons && w(t, a.buttons, o + "-"));
  }, I = function(t, s) {
    var r, a, o = [];
    w(o, s.s.buttons);
    var f = Te.map(o, function(p) {
      return p.node;
    });
    if (Array.isArray(t) || t instanceof Te) {
      for (r = 0, a = t.length; r < a; r++)
        I(t[r], s);
      return;
    }
    if (t == null || t === "*")
      for (r = 0, a = o.length; r < a; r++)
        g.push({
          inst: s,
          node: o[r].node
        });
    else if (typeof t == "number")
      s.s.buttons[t] && g.push({
        inst: s,
        node: s.s.buttons[t].node
      });
    else if (typeof t == "string")
      if (t.indexOf(",") !== -1) {
        var u = t.split(",");
        for (r = 0, a = u.length; r < a; r++)
          I(u[r].trim(), s);
      } else if (t.match(/^\d+(\-\d+)*$/)) {
        var h = Te.map(o, function(p) {
          return p.idx;
        });
        g.push({
          inst: s,
          node: o[Te.inArray(t, h)].node
        });
      } else if (t.indexOf(":name") !== -1) {
        var d = t.replace(":name", "");
        for (r = 0, a = o.length; r < a; r++)
          o[r].name === d && g.push({
            inst: s,
            node: o[r].node
          });
      } else
        Te(f).filter(t).each(function() {
          g.push({
            inst: s,
            node: this
          });
        });
    else if (typeof t == "object" && t.nodeName) {
      var i = Te.inArray(t, f);
      i !== -1 && g.push({
        inst: s,
        node: f[i]
      });
    }
  }, F = 0, l = n.length; F < l; F++) {
    var c = n[F];
    I(v, c);
  }
  return g;
};
an.stripData = function(n, v) {
  return typeof n != "string" || (n = n.replace(
    /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
    ""
  ), n = n.replace(/<!\-\-.*?\-\->/g, ""), (!v || v.stripHtml) && (n = n.replace(/<[^>]*>/g, "")), (!v || v.trim) && (n = n.replace(/^\s+|\s+$/g, "")), (!v || v.stripNewlines) && (n = n.replace(/\n/g, " ")), (!v || v.decodeEntities) && (r0 ? n = r0(n) : (Wl.innerHTML = n, n = Wl.value))), n;
};
an.entityDecoder = function(n) {
  r0 = n;
};
an.defaults = {
  buttons: ["copy", "excel", "csv", "pdf", "print"],
  name: "main",
  tabIndex: 0,
  dom: {
    container: {
      tag: "div",
      className: "dt-buttons"
    },
    collection: {
      action: {
        // action button
        dropHtml: '<span class="dt-button-down-arrow">&#x25BC;</span>'
      },
      container: {
        // The element used for the dropdown
        className: "dt-button-collection",
        content: {
          className: "",
          tag: "div"
        },
        tag: "div"
      }
      // optionally
      // , button: IButton - buttons inside the collection container
      // , split: ISplit - splits inside the collection container
    },
    button: {
      tag: "button",
      className: "dt-button",
      active: "dt-button-active",
      // class name
      disabled: "disabled",
      // class name
      spacer: {
        className: "dt-button-spacer",
        tag: "span"
      },
      liner: {
        tag: "span",
        className: ""
      }
    },
    split: {
      action: {
        // action button
        className: "dt-button-split-drop-button dt-button",
        tag: "button"
      },
      dropdown: {
        // button to trigger the dropdown
        align: "split-right",
        className: "dt-button-split-drop",
        dropHtml: '<span class="dt-button-down-arrow">&#x25BC;</span>',
        splitAlignClass: "dt-button-split-left",
        tag: "button"
      },
      wrapper: {
        // wrap around both
        className: "dt-button-split",
        tag: "div"
      }
    }
  }
};
an.version = "3.0.0";
Te.extend(ta, {
  collection: {
    text: function(n) {
      return n.i18n("buttons.collection", "Collection");
    },
    className: "buttons-collection",
    closeButton: !1,
    init: function(n, v) {
      v.attr("aria-expanded", !1);
    },
    action: function(n, v, g, w) {
      w._collection.parents("body").length ? this.popover(!1, w) : this.popover(w._collection, w), n.type === "keypress" && Te("a, button", w._collection).eq(0).focus();
    },
    attr: {
      "aria-haspopup": "dialog"
    }
    // Also the popover options, defined in Buttons.popover
  },
  split: {
    text: function(n) {
      return n.i18n("buttons.split", "Split");
    },
    className: "buttons-split",
    closeButton: !1,
    init: function(n, v) {
      return v.attr("aria-expanded", !1);
    },
    action: function(n, v, g, w) {
      this.popover(w._collection, w);
    },
    attr: {
      "aria-haspopup": "dialog"
    }
    // Also the popover options, defined in Buttons.popover
  },
  copy: function() {
    if (ta.copyHtml5)
      return "copyHtml5";
  },
  csv: function(n, v) {
    if (ta.csvHtml5 && ta.csvHtml5.available(n, v))
      return "csvHtml5";
  },
  excel: function(n, v) {
    if (ta.excelHtml5 && ta.excelHtml5.available(n, v))
      return "excelHtml5";
  },
  pdf: function(n, v) {
    if (ta.pdfHtml5 && ta.pdfHtml5.available(n, v))
      return "pdfHtml5";
  },
  pageLength: function(n) {
    var v = n.settings()[0].aLengthMenu, g = [], w = [], I = function(c) {
      return c.i18n(
        "buttons.pageLength",
        {
          "-1": "Show all rows",
          _: "Show %d rows"
        },
        c.page.len()
      );
    };
    if (Array.isArray(v[0]))
      g = v[0], w = v[1];
    else
      for (var F = 0; F < v.length; F++) {
        var l = v[F];
        Te.isPlainObject(l) ? (g.push(l.value), w.push(l.label)) : (g.push(l), w.push(l));
      }
    return {
      extend: "collection",
      text: I,
      className: "buttons-page-length",
      autoClose: !0,
      buttons: Te.map(g, function(c, t) {
        return {
          text: w[t],
          className: "button-page-length",
          action: function(s, r) {
            r.page.len(c).draw();
          },
          init: function(s, r, a) {
            var o = this, f = function() {
              o.active(s.page.len() === c);
            };
            s.on("length.dt" + a.namespace, f), f();
          },
          destroy: function(s, r, a) {
            s.off("length.dt" + a.namespace);
          }
        };
      }),
      init: function(c, t, s) {
        var r = this;
        c.on("length.dt" + s.namespace, function() {
          r.text(s.text);
        });
      },
      destroy: function(c, t, s) {
        c.off("length.dt" + s.namespace);
      }
    };
  },
  spacer: {
    style: "empty",
    spacer: !0,
    text: function(n) {
      return n.i18n("buttons.spacer", "");
    }
  }
});
se.Api.register("buttons()", function(n, v) {
  v === void 0 && (v = n, n = void 0), this.selector.buttonGroup = n;
  var g = this.iterator(
    !0,
    "table",
    function(w) {
      if (w._buttons)
        return an.buttonSelector(
          an.instanceSelector(n, w._buttons),
          v
        );
    },
    !0
  );
  return g._groupSelector = n, g;
});
se.Api.register("button()", function(n, v) {
  var g = this.buttons(n, v);
  return g.length > 1 && g.splice(1, g.length), g;
});
se.Api.registerPlural(
  "buttons().active()",
  "button().active()",
  function(n) {
    return n === void 0 ? this.map(function(v) {
      return v.inst.active(v.node);
    }) : this.each(function(v) {
      v.inst.active(v.node, n);
    });
  }
);
se.Api.registerPlural(
  "buttons().action()",
  "button().action()",
  function(n) {
    return n === void 0 ? this.map(function(v) {
      return v.inst.action(v.node);
    }) : this.each(function(v) {
      v.inst.action(v.node, n);
    });
  }
);
se.Api.registerPlural(
  "buttons().collectionRebuild()",
  "button().collectionRebuild()",
  function(n) {
    return this.each(function(v) {
      for (var g = 0; g < n.length; g++)
        typeof n[g] == "object" && (n[g].parentConf = v);
      v.inst.collectionRebuild(v.node, n);
    });
  }
);
se.Api.register(
  ["buttons().enable()", "button().enable()"],
  function(n) {
    return this.each(function(v) {
      v.inst.enable(v.node, n);
    });
  }
);
se.Api.register(
  ["buttons().disable()", "button().disable()"],
  function() {
    return this.each(function(n) {
      n.inst.disable(n.node);
    });
  }
);
se.Api.register("button().index()", function() {
  var n = null;
  return this.each(function(v) {
    var g = v.inst.index(v.node);
    g !== null && (n = g);
  }), n;
});
se.Api.registerPlural(
  "buttons().nodes()",
  "button().node()",
  function() {
    var n = Te();
    return Te(
      this.each(function(v) {
        n = n.add(v.inst.node(v.node));
      })
    ), n;
  }
);
se.Api.registerPlural(
  "buttons().processing()",
  "button().processing()",
  function(n) {
    return n === void 0 ? this.map(function(v) {
      return v.inst.processing(v.node);
    }) : this.each(function(v) {
      v.inst.processing(v.node, n);
    });
  }
);
se.Api.registerPlural(
  "buttons().text()",
  "button().text()",
  function(n) {
    return n === void 0 ? this.map(function(v) {
      return v.inst.text(v.node);
    }) : this.each(function(v) {
      v.inst.text(v.node, n);
    });
  }
);
se.Api.registerPlural(
  "buttons().trigger()",
  "button().trigger()",
  function() {
    return this.each(function(n) {
      n.inst.node(n.node).trigger("click");
    });
  }
);
se.Api.register("button().popover()", function(n, v) {
  return this.map(function(g) {
    return g.inst._popover(n, this.button(this[0].node), v);
  });
});
se.Api.register("buttons().containers()", function() {
  var n = Te(), v = this._groupSelector;
  return this.iterator(!0, "table", function(g) {
    if (g._buttons)
      for (var w = an.instanceSelector(v, g._buttons), I = 0, F = w.length; I < F; I++)
        n = n.add(w[I].container());
  }), n;
});
se.Api.register("buttons().container()", function() {
  return this.containers().eq(0);
});
se.Api.register("button().add()", function(n, v, g) {
  var w = this.context;
  if (w.length) {
    var I = an.instanceSelector(
      this._groupSelector,
      w[0]._buttons
    );
    I.length && I[0].add(v, n, g);
  }
  return this.button(this._groupSelector, n);
});
se.Api.register("buttons().destroy()", function() {
  return this.pluck("inst").unique().each(function(n) {
    n.destroy();
  }), this;
});
se.Api.registerPlural(
  "buttons().remove()",
  "buttons().remove()",
  function() {
    return this.each(function(n) {
      n.inst.remove(n.node);
    }), this;
  }
);
var oo;
se.Api.register("buttons.info()", function(n, v, g) {
  var w = this;
  return n === !1 ? (this.off("destroy.btn-info"), F0(Te("#datatables_buttons_info"), 400, function() {
    Te(this).remove();
  }), clearTimeout(oo), oo = null, this) : (oo && clearTimeout(oo), Te("#datatables_buttons_info").length && Te("#datatables_buttons_info").remove(), n = n ? "<h2>" + n + "</h2>" : "", T0(
    Te('<div id="datatables_buttons_info" class="dt-button-info"/>').html(n).append(
      Te("<div/>")[typeof v == "string" ? "html" : "append"](
        v
      )
    ).css("display", "none").appendTo("body")
  ), g !== void 0 && g !== 0 && (oo = setTimeout(function() {
    w.buttons.info(!1);
  }, g)), this.on("destroy.btn-info", function() {
    w.buttons.info(!1);
  }), this);
});
se.Api.register("buttons.exportData()", function(n) {
  if (this.context.length)
    return B1(new se.Api(this.context[0]), n);
});
se.Api.register("buttons.exportInfo()", function(n) {
  return n || (n = {}), {
    filename: O1(n, this),
    title: P1(n, this),
    messageTop: zl(this, n, n.message || n.messageTop, "top"),
    messageBottom: zl(this, n, n.messageBottom, "bottom")
  };
});
var O1 = function(n, v) {
  var g = n.filename === "*" && n.title !== "*" && n.title !== void 0 && n.title !== null && n.title !== "" ? n.title : n.filename;
  if (typeof g == "function" && (g = g(n, v)), g == null)
    return null;
  g.indexOf("*") !== -1 && (g = g.replace("*", Te("head > title").text()).trim()), g = g.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, "");
  var w = I0(n.extension, n, v);
  return w || (w = ""), g + w;
}, I0 = function(n, v, g) {
  return n == null ? null : typeof n == "function" ? n(v, g) : n;
}, P1 = function(n, v) {
  var g = I0(n.title, n, v);
  return g === null ? null : g.indexOf("*") !== -1 ? g.replace("*", Te("head > title").text() || "Exported data") : g;
}, zl = function(n, v, g, w) {
  var I = I0(g, v, n);
  if (I === null)
    return null;
  var F = Te("caption", n.table().container()).eq(0);
  if (I === "*") {
    var l = F.css("caption-side");
    return l !== w ? null : F.length ? F.text() : "";
  }
  return I;
}, Wl = Te("<textarea/>")[0], B1 = function(n, v) {
  var g = Te.extend(
    !0,
    {},
    {
      rows: null,
      columns: "",
      modifier: {
        search: "applied",
        order: "applied"
      },
      orthogonal: "display",
      stripHtml: !0,
      stripNewlines: !0,
      decodeEntities: !0,
      trim: !0,
      format: {
        header: function(m) {
          return an.stripData(m, g);
        },
        footer: function(m) {
          return an.stripData(m, g);
        },
        body: function(m) {
          return an.stripData(m, g);
        }
      },
      customizeData: null
    },
    v
  ), w = n.columns(g.columns).indexes().map(function(m) {
    var e = n.column(m);
    return g.format.header(e.title(), m, e.header());
  }).toArray(), I = n.table().footer() ? n.columns(g.columns).indexes().map(function(m) {
    var e = n.column(m).footer();
    return g.format.footer(
      e ? Te(".dt-column-title", e).html() : "",
      m,
      e
    );
  }).toArray() : null, F = Te.extend({}, g.modifier);
  n.select && typeof n.select.info == "function" && F.selected === void 0 && n.rows(g.rows, Te.extend({ selected: !0 }, F)).any() && Te.extend(F, { selected: !0 });
  for (var l = n.rows(g.rows, F).indexes().toArray(), c = n.cells(l, g.columns, {
    order: F.order
  }), t = c.render(g.orthogonal).toArray(), s = c.nodes().toArray(), r = c.indexes().toArray(), a = w.length, o = a > 0 ? t.length / a : 0, f = [], u = 0, h = 0, d = o; h < d; h++) {
    for (var i = [a], p = 0; p < a; p++)
      i[p] = g.format.body(
        t[u],
        r[h + p].row,
        r[h + p].column,
        s[u]
      ), u++;
    f[h] = i;
  }
  var y = {
    header: w,
    headerStructure: n.table().header.structure(g.columns),
    footer: I,
    footerStructure: n.table().footer.structure(g.columns),
    body: f
  };
  return g.customizeData && g.customizeData(y), y;
};
Te.fn.dataTable.Buttons = an;
Te.fn.DataTable.Buttons = an;
Te(document).on("init.dt plugin-init.dt", function(n, v) {
  if (n.namespace === "dt") {
    var g = v.oInit.buttons || se.defaults.buttons;
    g && !v._buttons && new an(v, g).container();
  }
});
function Df(n, v) {
  var g = new se.Api(n), w = v || g.init().buttons || se.defaults.buttons;
  return new an(g, w).container();
}
se.ext.feature.push({
  fnInit: Df,
  cFeature: "B"
});
se.feature && se.feature.register("buttons", Df);
/*!
 * Column visibility buttons for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
let R1 = Ln;
R1.extend(se.ext.buttons, {
  // A collection of column visibility buttons
  colvis: function(n, v) {
    var g = null, w = {
      extend: "collection",
      init: function(I, F) {
        g = F;
      },
      text: function(I) {
        return I.i18n("buttons.colvis", "Column visibility");
      },
      className: "buttons-colvis",
      closeButton: !1,
      buttons: [
        {
          extend: "columnsToggle",
          columns: v.columns,
          columnText: v.columnText
        }
      ]
    };
    return n.on("column-reorder.dt" + v.namespace, function() {
      n.button(null, n.button(null, g).node()).collectionRebuild([
        {
          extend: "columnsToggle",
          columns: v.columns,
          columnText: v.columnText
        }
      ]);
    }), w;
  },
  // Selected columns with individual buttons - toggle column visibility
  columnsToggle: function(n, v) {
    var g = n.columns(v.columns).indexes().map(function(w) {
      return {
        extend: "columnToggle",
        columns: w,
        columnText: v.columnText
      };
    }).toArray();
    return g;
  },
  // Single button to toggle column visibility
  columnToggle: function(n, v) {
    return {
      extend: "columnVisibility",
      columns: v.columns,
      columnText: v.columnText
    };
  },
  // Selected columns with individual buttons - set column visibility
  columnsVisibility: function(n, v) {
    var g = n.columns(v.columns).indexes().map(function(w) {
      return {
        extend: "columnVisibility",
        columns: w,
        visibility: v.visibility,
        columnText: v.columnText
      };
    }).toArray();
    return g;
  },
  // Single button to set column visibility
  columnVisibility: {
    columns: void 0,
    // column selector
    text: function(n, v, g) {
      return g._columnText(n, g);
    },
    className: "buttons-columnVisibility",
    action: function(n, v, g, w) {
      var I = v.columns(w.columns), F = I.visible();
      I.visible(
        w.visibility !== void 0 ? w.visibility : !(F.length && F[0])
      );
    },
    init: function(n, v, g) {
      var w = this;
      v.attr("data-cv-idx", g.columns), n.on("column-visibility.dt" + g.namespace, function(I, F) {
        !F.bDestroying && F.nTable == n.settings()[0].nTable && w.active(n.column(g.columns).visible());
      }).on("column-reorder.dt" + g.namespace, function() {
        g.destroying || n.columns(g.columns).count() === 1 && (w.text(g._columnText(n, g)), w.active(n.column(g.columns).visible()));
      }), this.active(n.column(g.columns).visible());
    },
    destroy: function(n, v, g) {
      n.off("column-visibility.dt" + g.namespace).off(
        "column-reorder.dt" + g.namespace
      );
    },
    _columnText: function(n, v) {
      if (typeof v.text == "string")
        return v.text;
      var g = n.column(v.columns).index(), w = n.settings()[0].aoColumns[g].sTitle;
      return w || (w = n.column(g).header().innerHTML), w = w.replace(/\n/g, " ").replace(/<br\s*\/?>/gi, " ").replace(/<select(.*?)<\/select>/g, "").replace(/<!\-\-.*?\-\->/g, "").replace(/<.*?>/g, "").replace(/^\s+|\s+$/g, ""), v.columnText ? v.columnText(n, g, w) : w;
    }
  },
  colvisRestore: {
    className: "buttons-colvisRestore",
    text: function(n) {
      return n.i18n("buttons.colvisRestore", "Restore visibility");
    },
    init: function(n, v, g) {
      n.columns().every(function() {
        var w = this.init();
        w.__visOriginal === void 0 && (w.__visOriginal = this.visible());
      });
    },
    action: function(n, v, g, w) {
      v.columns().every(function(I) {
        var F = this.init();
        this.visible(F.__visOriginal);
      });
    }
  },
  colvisGroup: {
    className: "buttons-colvisGroup",
    action: function(n, v, g, w) {
      v.columns(w.show).visible(!0, !1), v.columns(w.hide).visible(!1, !1), v.columns.adjust();
    },
    show: [],
    hide: []
  }
});
/*!
 * HTML5 export buttons for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 *
 * FileSaver.js (1.3.3) - MIT license
 * Copyright Â© 2016 Eli Grey - http://eligrey.com
 */
let xn = Ln;
var Of, Pf;
function n0() {
  return Of || window.JSZip;
}
function a0() {
  return Pf || window.pdfMake;
}
se.Buttons.pdfMake = function(n) {
  if (!n)
    return a0();
  Pf = n;
};
se.Buttons.jszip = function(n) {
  if (!n)
    return n0();
  Of = n;
};
var ss = function(n) {
  if (!(typeof n == "undefined" || typeof navigator != "undefined" && /MSIE [1-9]\./.test(navigator.userAgent))) {
    var v = n.document, g = function() {
      return n.URL || n.webkitURL || n;
    }, w = v.createElementNS("http://www.w3.org/1999/xhtml", "a"), I = "download" in w, F = function(i) {
      var p = new MouseEvent("click");
      i.dispatchEvent(p);
    }, l = /constructor/i.test(n.HTMLElement) || n.safari, c = /CriOS\/[\d]+/.test(navigator.userAgent), t = function(i) {
      (n.setImmediate || n.setTimeout)(function() {
        throw i;
      }, 0);
    }, s = "application/octet-stream", r = 1e3 * 40, a = function(i) {
      var p = function() {
        typeof i == "string" ? g().revokeObjectURL(i) : i.remove();
      };
      setTimeout(p, r);
    }, o = function(i, p, y) {
      p = [].concat(p);
      for (var m = p.length; m--; ) {
        var e = i["on" + p[m]];
        if (typeof e == "function")
          try {
            e.call(i, y || i);
          } catch (x) {
            t(x);
          }
      }
    }, f = function(i) {
      return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
        i.type
      ) ? new Blob([String.fromCharCode(65279), i], {
        type: i.type
      }) : i;
    }, u = function(i, p, y) {
      y || (i = f(i));
      var m = this, e = i.type, x = e === s, S, P = function() {
        o(
          m,
          "writestart progress write writeend".split(" ")
        );
      }, O = function() {
        if ((c || x && l) && n.FileReader) {
          var T = new FileReader();
          T.onloadend = function() {
            var E = c ? T.result : T.result.replace(
              /^data:[^;]*;/,
              "data:attachment/file;"
            ), D = n.open(E, "_blank");
            D || (n.location.href = E), E = void 0, m.readyState = m.DONE, P();
          }, T.readAsDataURL(i), m.readyState = m.INIT;
          return;
        }
        if (S || (S = g().createObjectURL(i)), x)
          n.location.href = S;
        else {
          var A = n.open(S, "_blank");
          A || (n.location.href = S);
        }
        m.readyState = m.DONE, P(), a(S);
      };
      if (m.readyState = m.INIT, I) {
        S = g().createObjectURL(i), setTimeout(function() {
          w.href = S, w.download = p, F(w), P(), a(S), m.readyState = m.DONE;
        });
        return;
      }
      O();
    }, h = u.prototype, d = function(i, p, y) {
      return new u(
        i,
        p || i.name || "download",
        y
      );
    };
    return typeof navigator != "undefined" && navigator.msSaveOrOpenBlob ? function(i, p, y) {
      return p = p || i.name || "download", y || (i = f(i)), navigator.msSaveOrOpenBlob(i, p);
    } : (h.abort = function() {
    }, h.readyState = h.INIT = 0, h.WRITING = 1, h.DONE = 2, h.error = h.onwritestart = h.onprogress = h.onwrite = h.onabort = h.onerror = h.onwriteend = null, d);
  }
}(
  typeof self != "undefined" && self || typeof window != "undefined" && window || globalThis.content
);
se.fileSave = ss;
var Hl = function(n) {
  var v = "Sheet1";
  return n.sheetName && (v = n.sheetName.replace(/[\[\]\*\/\\\?\:]/g, "")), v;
}, Bf = function(n) {
  return n.newline ? n.newline : navigator.userAgent.match(/Windows/) ? `\r
` : `
`;
}, Rf = function(n, v) {
  var g = Bf(v), w = n.buttons.exportData(v.exportOptions), I = v.fieldBoundary, F = v.fieldSeparator, l = new RegExp(I, "g"), c = v.escapeChar !== void 0 ? v.escapeChar : "\\", t = function(u) {
    for (var h = "", d = 0, i = u.length; d < i; d++)
      d > 0 && (h += F), h += I ? I + ("" + u[d]).replace(l, c + I) + I : u[d];
    return h;
  }, s = "", r = "", a = [];
  v.header && (s = w.headerStructure.map(function(u) {
    return t(
      u.map(function(h) {
        return h ? h.title : "";
      })
    );
  }).join(g) + g), v.footer && w.footer && (r = w.footerStructure.map(function(u) {
    return t(
      u.map(function(h) {
        return h ? h.title : "";
      })
    );
  }).join(g) + g);
  for (var o = 0, f = w.body.length; o < f; o++)
    a.push(t(w.body[o]));
  return {
    str: s + a.join(g) + r,
    rows: a.length
  };
}, Lf = function() {
  var n = navigator.userAgent.indexOf("Safari") !== -1 && navigator.userAgent.indexOf("Chrome") === -1 && navigator.userAgent.indexOf("Opera") === -1;
  if (!n)
    return !1;
  var v = navigator.userAgent.match(/AppleWebKit\/(\d+\.\d+)/);
  return !!(v && v.length > 1 && v[1] * 1 < 603.1);
};
function fo(n) {
  for (var v = "A".charCodeAt(0), g = "Z".charCodeAt(0), w = g - v + 1, I = ""; n >= 0; )
    I = String.fromCharCode(n % w + v) + I, n = Math.floor(n / w) - 1;
  return I;
}
try {
  var i0 = new XMLSerializer(), _o;
} catch (n) {
}
function Nf(n, v) {
  _o === void 0 && (_o = i0.serializeToString(
    new window.DOMParser().parseFromString(
      Mf["xl/worksheets/sheet1.xml"],
      "text/xml"
    )
  ).indexOf("xmlns:r") === -1), xn.each(v, function(g, w) {
    if (xn.isPlainObject(w)) {
      var I = n.folder(g);
      Nf(I, w);
    } else {
      if (_o) {
        var F = w.childNodes[0], l, c, t = [];
        for (l = F.attributes.length - 1; l >= 0; l--) {
          var s = F.attributes[l].nodeName, r = F.attributes[l].nodeValue;
          s.indexOf(":") !== -1 && (t.push({ name: s, value: r }), F.removeAttribute(s));
        }
        for (l = 0, c = t.length; l < c; l++) {
          var a = w.createAttribute(
            t[l].name.replace(":", "_dt_b_namespace_token_")
          );
          a.value = t[l].value, F.setAttributeNode(a);
        }
      }
      var o = i0.serializeToString(w);
      _o && (o.indexOf("<?xml") === -1 && (o = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' + o), o = o.replace(/_dt_b_namespace_token_/g, ":"), o = o.replace(/xmlns:NS[\d]+="" NS[\d]+:/g, "")), o = o.replace(/<([^<>]*?) xmlns=""([^<>]*?)>/g, "<$1 $2>"), n.file(g, o);
    }
  });
}
function $n(n, v, g) {
  var w = n.createElement(v);
  return g && (g.attr && xn(w).attr(g.attr), g.children && xn.each(g.children, function(I, F) {
    w.appendChild(F);
  }), g.text !== null && g.text !== void 0 && w.appendChild(n.createTextNode(g.text))), w;
}
function L1(n, v) {
  var g = n.header[v].length, w, I, F;
  n.footer && n.footer[v].length > g && (g = n.footer[v].length);
  for (var l = 0, c = n.body.length; l < c; l++) {
    var t = n.body[l][v];
    if (F = t != null ? t.toString() : "", F.indexOf(`
`) !== -1 ? (I = F.split(`
`), I.sort(function(s, r) {
      return r.length - s.length;
    }), w = I[0].length) : w = F.length, w > g && (g = w), g > 40)
      return 54;
  }
  return g *= 1.35, g > 6 ? g : 6;
}
var Mf = {
  "_rels/.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',
  "xl/_rels/workbook.xml.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',
  "[Content_Types].xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
  "xl/workbook.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="Sheet1" sheetId="1" r:id="rId1"/></sheets><definedNames/></workbook>',
  "xl/worksheets/sheet1.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/><mergeCells count="0"/></worksheet>',
  "xl/styles.xml": '<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><numFmts count="6"><numFmt numFmtId="164" formatCode="[$$-409]#,##0.00;-[$$-409]#,##0.00"/><numFmt numFmtId="165" formatCode="&quot;Â£&quot;#,##0.00"/><numFmt numFmtId="166" formatCode="[$â¬-2] #,##0.00"/><numFmt numFmtId="167" formatCode="0.0%"/><numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/><numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/></numFmts><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="68"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf><xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="14" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'
}, jl = [
  {
    match: /^\-?\d+\.\d%$/,
    style: 60,
    fmt: function(n) {
      return n / 100;
    }
  },
  // Percent with d.p.
  {
    match: /^\-?\d+\.?\d*%$/,
    style: 56,
    fmt: function(n) {
      return n / 100;
    }
  },
  // Percent
  { match: /^\-?\$[\d,]+.?\d*$/, style: 57 },
  // Dollars
  { match: /^\-?Â£[\d,]+.?\d*$/, style: 58 },
  // Pounds
  { match: /^\-?â¬[\d,]+.?\d*$/, style: 59 },
  // Euros
  { match: /^\-?\d+$/, style: 65 },
  // Numbers without thousand separators
  { match: /^\-?\d+\.\d{2}$/, style: 66 },
  // Numbers 2 d.p. without thousands separators
  {
    match: /^\([\d,]+\)$/,
    style: 61,
    fmt: function(n) {
      return -1 * n.replace(/[\(\)]/g, "");
    }
  },
  // Negative numbers indicated by brackets
  {
    match: /^\([\d,]+\.\d{2}\)$/,
    style: 62,
    fmt: function(n) {
      return -1 * n.replace(/[\(\)]/g, "");
    }
  },
  // Negative numbers indicated by brackets - 2d.p.
  { match: /^\-?[\d,]+$/, style: 63 },
  // Numbers with thousand separators
  { match: /^\-?[\d,]+\.\d{2}$/, style: 64 },
  {
    match: /^[\d]{4}\-[01][\d]\-[0123][\d]$/,
    style: 67,
    fmt: function(n) {
      return Math.round(25569 + Date.parse(n) / (86400 * 1e3));
    }
  }
  //Date yyyy-mm-dd
], $o = function(n, v, g, w, I) {
  var F = xn("mergeCells", n);
  F[0].appendChild(
    $n(n, "mergeCell", {
      attr: {
        ref: fo(g) + v + ":" + fo(g + I - 1) + (v + w - 1)
      }
    })
  ), F.attr("count", parseFloat(F.attr("count")) + 1);
};
se.ext.buttons.copyHtml5 = {
  className: "buttons-copy buttons-html5",
  text: function(n) {
    return n.i18n("buttons.copy", "Copy");
  },
  action: function(n, v, g, w, I) {
    var F = Rf(v, w), l = v.buttons.exportInfo(w), c = Bf(w), t = F.str, s = xn("<div/>").css({
      height: 1,
      width: 1,
      overflow: "hidden",
      position: "fixed",
      top: 0,
      left: 0
    });
    l.title && (t = l.title + c + c + t), l.messageTop && (t = l.messageTop + c + c + t), l.messageBottom && (t = t + c + c + l.messageBottom), w.customize && (t = w.customize(t, w, v));
    var r = xn("<textarea readonly/>").val(t).appendTo(s);
    if (document.queryCommandSupported("copy")) {
      s.appendTo(v.table().container()), r[0].focus(), r[0].select();
      try {
        var a = document.execCommand("copy");
        if (s.remove(), a) {
          v.buttons.info(
            v.i18n("buttons.copyTitle", "Copy to clipboard"),
            v.i18n(
              "buttons.copySuccess",
              {
                1: "Copied one row to clipboard",
                _: "Copied %d rows to clipboard"
              },
              F.rows
            ),
            2e3
          ), I();
          return;
        }
      } catch (h) {
      }
    }
    var o = xn(
      "<span>" + v.i18n(
        "buttons.copyKeys",
        "Press <i>ctrl</i> or <i>â</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape."
      ) + "</span>"
    ).append(s);
    v.buttons.info(
      v.i18n("buttons.copyTitle", "Copy to clipboard"),
      o,
      0
    ), r[0].focus(), r[0].select();
    var f = xn(o).closest(".dt-button-info"), u = function() {
      f.off("click.buttons-copy"), xn(document).off(".buttons-copy"), v.buttons.info(!1);
    };
    f.on("click.buttons-copy", u), xn(document).on("keydown.buttons-copy", function(h) {
      h.keyCode === 27 && (u(), I());
    }).on("copy.buttons-copy cut.buttons-copy", function() {
      u(), I();
    });
  },
  async: 100,
  exportOptions: {},
  fieldSeparator: "	",
  fieldBoundary: "",
  header: !0,
  footer: !1,
  title: "*",
  messageTop: "*",
  messageBottom: "*"
};
se.ext.buttons.csvHtml5 = {
  bom: !1,
  className: "buttons-csv buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && window.Blob;
  },
  text: function(n) {
    return n.i18n("buttons.csv", "CSV");
  },
  action: function(n, v, g, w, I) {
    var F = Rf(v, w).str, l = v.buttons.exportInfo(w), c = w.charset;
    w.customize && (F = w.customize(F, w, v)), c !== !1 ? (c || (c = document.characterSet || document.charset), c && (c = ";charset=" + c)) : c = "", w.bom && (F = String.fromCharCode(65279) + F), ss(
      new Blob([F], { type: "text/csv" + c }),
      l.filename,
      !0
    ), I();
  },
  async: 100,
  filename: "*",
  extension: ".csv",
  exportOptions: {},
  fieldSeparator: ",",
  fieldBoundary: '"',
  escapeChar: '"',
  charset: null,
  header: !0,
  footer: !1
};
se.ext.buttons.excelHtml5 = {
  className: "buttons-excel buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && n0() !== void 0 && !Lf() && i0;
  },
  text: function(n) {
    return n.i18n("buttons.excel", "Excel");
  },
  action: function(n, v, g, w, I) {
    var F = 0, l, c, t = function(E) {
      var D = Mf[E];
      return xn.parseXML(D);
    }, s = t("xl/worksheets/sheet1.xml"), r = s.getElementsByTagName("sheetData")[0], a = {
      _rels: {
        ".rels": t("_rels/.rels")
      },
      xl: {
        _rels: {
          "workbook.xml.rels": t("xl/_rels/workbook.xml.rels")
        },
        "workbook.xml": t("xl/workbook.xml"),
        "styles.xml": t("xl/styles.xml"),
        worksheets: {
          "sheet1.xml": s
        }
      },
      "[Content_Types].xml": t("[Content_Types].xml")
    }, o = v.buttons.exportData(w.exportOptions), f, u, h = function(E) {
      f = F + 1, u = $n(s, "row", { attr: { r: f } });
      for (var D = 0, b = E.length; D < b; D++) {
        var R = fo(D) + "" + f, L = null;
        if (E[D] === null || E[D] === void 0 || E[D] === "")
          if (w.createEmptyCells === !0)
            E[D] = "";
          else
            continue;
        var N = E[D];
        E[D] = typeof E[D].trim == "function" ? E[D].trim() : E[D];
        for (var M = 0, K = jl.length; M < K; M++) {
          var ct = jl[M];
          if (E[D].match && !E[D].match(/^0\d+/) && E[D].match(ct.match)) {
            var J = E[D].replace(/[^\d\.\-]/g, "");
            ct.fmt && (J = ct.fmt(J)), L = $n(s, "c", {
              attr: {
                r: R,
                s: ct.style
              },
              children: [$n(s, "v", { text: J })]
            });
            break;
          }
        }
        if (!L)
          if (typeof E[D] == "number" || E[D].match && E[D].match(/^-?\d+(\.\d+)?([eE]\-?\d+)?$/) && // Includes exponential format
          !E[D].match(/^0\d+/))
            L = $n(s, "c", {
              attr: {
                t: "n",
                r: R
              },
              children: [$n(s, "v", { text: E[D] })]
            });
          else {
            var nt = N.replace ? N.replace(
              /[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g,
              ""
            ) : N;
            L = $n(s, "c", {
              attr: {
                t: "inlineStr",
                r: R
              },
              children: {
                row: $n(s, "is", {
                  children: {
                    row: $n(s, "t", {
                      text: nt,
                      attr: {
                        "xml:space": "preserve"
                      }
                    })
                  }
                })
              }
            });
          }
        u.appendChild(L);
      }
      r.appendChild(u), F++;
    }, d = function(E) {
      E.forEach(function(D) {
        h(
          D.map(function(b) {
            return b ? b.title : "";
          })
        ), xn("row:last c", s).attr("s", "2"), D.forEach(function(b, R) {
          b && (b.colSpan > 1 || b.rowSpan > 1) && $o(
            s,
            F,
            R,
            b.rowSpan,
            b.colSpan
          );
        });
      });
    };
    w.customizeData && w.customizeData(o);
    var i = v.buttons.exportInfo(w);
    i.title && (h([i.title]), $o(s, F, 0, 1, o.header.length), xn("row:last c", s).attr("s", "51")), i.messageTop && (h([i.messageTop]), $o(s, F, 0, 1, o.header.length)), w.header && d(o.headerStructure), l = F;
    for (var p = 0, y = o.body.length; p < y; p++)
      h(o.body[p]);
    c = F, w.footer && o.footer && d(o.footerStructure), i.messageBottom && (h([i.messageBottom]), $o(s, F, 0, 1, o.header.length));
    var m = $n(s, "cols");
    xn("worksheet", s).prepend(m);
    for (var e = 0, x = o.header.length; e < x; e++)
      m.appendChild(
        $n(s, "col", {
          attr: {
            min: e + 1,
            max: e + 1,
            width: L1(o, e),
            customWidth: 1
          }
        })
      );
    var S = a.xl["workbook.xml"];
    xn("sheets sheet", S).attr("name", Hl(w)), w.autoFilter && (xn("mergeCells", s).before(
      $n(s, "autoFilter", {
        attr: {
          ref: "A" + l + ":" + fo(o.header.length - 1) + c
        }
      })
    ), xn("definedNames", S).append(
      $n(S, "definedName", {
        attr: {
          name: "_xlnm._FilterDatabase",
          localSheetId: "0",
          hidden: 1
        },
        text: Hl(w) + "!$A$" + l + ":" + fo(o.header.length - 1) + c
      })
    )), w.customize && w.customize(a, w, v), xn("mergeCells", s).children().length === 0 && xn("mergeCells", s).remove();
    var P = n0(), O = new P(), T = {
      compression: "DEFLATE",
      type: "blob",
      mimeType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    };
    Nf(O, a);
    var A = i.filename;
    A > 175 && (A = A.substr(0, 175)), O.generateAsync ? O.generateAsync(T).then(function(E) {
      ss(E, A), I();
    }) : (ss(O.generate(T), A), I());
  },
  async: 100,
  filename: "*",
  extension: ".xlsx",
  exportOptions: {},
  header: !0,
  footer: !0,
  title: "*",
  messageTop: "*",
  messageBottom: "*",
  createEmptyCells: !1,
  autoFilter: !1,
  sheetName: ""
};
se.ext.buttons.pdfHtml5 = {
  className: "buttons-pdf buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && a0();
  },
  text: function(n) {
    return n.i18n("buttons.pdf", "PDF");
  },
  action: function(n, v, g, w, I) {
    var F = v.buttons.exportData(w.exportOptions), l = v.buttons.exportInfo(w), c = [];
    w.header && F.headerStructure.forEach(function(o) {
      c.push(
        o.map(function(f) {
          return f ? {
            text: f.title,
            colSpan: f.colspan,
            rowSpan: f.rowspan,
            style: "tableHeader"
          } : {};
        })
      );
    });
    for (var t = 0, s = F.body.length; t < s; t++)
      c.push(
        F.body[t].map(function(o) {
          return {
            text: o == null ? "" : typeof o == "string" ? o : o.toString()
          };
        })
      );
    w.footer && F.footerStructure.forEach(function(o) {
      c.push(
        o.map(function(f) {
          return f ? {
            text: f.title,
            colSpan: f.colspan,
            rowSpan: f.rowspan,
            style: "tableHeader"
          } : {};
        })
      );
    });
    var r = {
      pageSize: w.pageSize,
      pageOrientation: w.orientation,
      content: [
        {
          style: "table",
          table: {
            headerRows: F.headerStructure.length,
            footerRows: F.footerStructure.length,
            // Used for styling, doesn't do anything in pdfmake
            body: c
          },
          layout: {
            hLineWidth: function(o, f) {
              return o === 0 || o === f.table.body.length ? 0 : 0.5;
            },
            vLineWidth: function() {
              return 0;
            },
            hLineColor: function(o, f) {
              return o === f.table.headerRows || o === f.table.body.length - f.table.footerRows ? "#333" : "#ddd";
            },
            fillColor: function(o) {
              return o < F.headerStructure.length ? "#fff" : o % 2 === 0 ? "#f3f3f3" : null;
            },
            paddingTop: function() {
              return 5;
            },
            paddingBottom: function() {
              return 5;
            }
          }
        }
      ],
      styles: {
        tableHeader: {
          bold: !0,
          fontSize: 11,
          alignment: "center"
        },
        tableFooter: {
          bold: !0,
          fontSize: 11
        },
        table: {
          margin: [0, 5, 0, 5]
        },
        title: {
          alignment: "center",
          fontSize: 13
        },
        message: {}
      },
      defaultStyle: {
        fontSize: 10
      }
    };
    l.messageTop && r.content.unshift({
      text: l.messageTop,
      style: "message",
      margin: [0, 0, 0, 12]
    }), l.messageBottom && r.content.push({
      text: l.messageBottom,
      style: "message",
      margin: [0, 0, 0, 12]
    }), l.title && r.content.unshift({
      text: l.title,
      style: "title",
      margin: [0, 0, 0, 12]
    }), w.customize && w.customize(r, w, v);
    var a = a0().createPdf(r);
    w.download === "open" && !Lf() ? a.open() : a.download(l.filename), I();
  },
  async: 100,
  title: "*",
  filename: "*",
  extension: ".pdf",
  exportOptions: {},
  orientation: "portrait",
  // This isn't perfect, but it is close
  pageSize: navigator.language === "en-US" || navigator.language === "en-CA" ? "LETTER" : "A4",
  header: !0,
  footer: !0,
  messageTop: "*",
  messageBottom: "*",
  customize: null,
  download: "download"
};
/*!
 * Print button for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
let mi = Ln;
var pi = document.createElement("a"), N1 = function(n) {
  var v = mi(n).clone()[0];
  return v.nodeName.toLowerCase() === "link" && (v.href = kf(v.href)), v.outerHTML;
}, kf = function(n) {
  pi.href = n;
  var v = pi.host;
  return v.indexOf("/") === -1 && pi.pathname.indexOf("/") !== 0 && (v += "/"), pi.protocol + "//" + v + pi.pathname + pi.search;
};
se.ext.buttons.print = {
  className: "buttons-print",
  text: function(n) {
    return n.i18n("buttons.print", "Print");
  },
  action: function(n, v, g, w, I) {
    var F = v.buttons.exportData(
      mi.extend({ decodeEntities: !1 }, w.exportOptions)
      // XSS protection
    ), l = v.buttons.exportInfo(w), c = v.columns(w.exportOptions.columns).nodes().map(function(i) {
      return i.className;
    }).toArray(), t = function(i, p) {
      for (var y = "<tr>", m = 0, e = i.length; m < e; m++) {
        var x = i[m] === null || i[m] === void 0 ? "" : i[m], S = c[m] ? 'class="' + c[m] + '"' : "";
        y += "<" + p + " " + S + ">" + x + "</" + p + ">";
      }
      return y + "</tr>";
    }, s = '<table class="' + v.table().node().className + '">';
    if (w.header) {
      var r = F.headerStructure.map(function(i) {
        return "<tr>" + i.map(function(p) {
          return p ? '<th colspan="' + p.colspan + '" rowspan="' + p.rowspan + '">' + p.title + "</th>" : "";
        }).join("") + "</tr>";
      });
      s += "<thead>" + r.join("") + "</thead>";
    }
    s += "<tbody>";
    for (var a = 0, o = F.body.length; a < o; a++)
      s += t(F.body[a], "td");
    if (s += "</tbody>", w.footer && F.footer) {
      var f = F.footerStructure.map(function(i) {
        return "<tr>" + i.map(function(p) {
          return p ? '<th colspan="' + p.colspan + '" rowspan="' + p.rowspan + '">' + p.title + "</th>" : "";
        }).join("") + "</tr>";
      });
      s += "<tfoot>" + f.join("") + "</tfoot>";
    }
    s += "</table>";
    var u = window.open("", "");
    if (!u) {
      v.buttons.info(
        v.i18n("buttons.printErrorTitle", "Unable to open print view"),
        v.i18n(
          "buttons.printErrorMsg",
          "Please allow popups in your browser for this site to be able to view the print view."
        ),
        5e3
      );
      return;
    }
    u.document.close();
    var h = "<title>" + l.title + "</title>";
    mi("style, link").each(function() {
      h += N1(this);
    });
    try {
      u.document.head.innerHTML = h;
    } catch (i) {
      mi(u.document.head).html(h);
    }
    u.document.body.innerHTML = "<h1>" + l.title + "</h1><div>" + (l.messageTop || "") + "</div>" + s + "<div>" + (l.messageBottom || "") + "</div>", mi(u.document.body).addClass("dt-print-view"), mi("img", u.document.body).each(function(i, p) {
      p.setAttribute("src", kf(p.getAttribute("src")));
    }), w.customize && w.customize(u, w, v);
    var d = function() {
      w.autoPrint && (u.print(), u.close());
    };
    u.setTimeout(d, 1e3), I();
  },
  async: 100,
  title: "*",
  messageTop: "*",
  messageBottom: "*",
  exportOptions: {},
  header: !0,
  footer: !1,
  autoPrint: !0,
  customize: null
};
/*! Select for DataTables 3.0.0
 * Â© SpryMedia Ltd - datatables.net/license/mit
 */
let or = Ln;
se.select = {};
se.select.classes = {
  checkbox: "dt-select-checkbox"
};
se.select.version = "3.0.0";
se.select.init = function(n) {
  var v = n.settings()[0];
  if (!se.versionCheck("2"))
    throw "Warning: Select requires DataTables 2 or newer";
  if (!v._select) {
    var g = n.state.loaded(), w = function(p, y, m) {
      if (!(m === null || m.select === void 0)) {
        if (n.rows({ selected: !0 }).any() && n.rows().deselect(), m.select.rows !== void 0 && n.rows(m.select.rows).select(), n.columns({ selected: !0 }).any() && n.columns().deselect(), m.select.columns !== void 0 && n.columns(m.select.columns).select(), n.cells({ selected: !0 }).any() && n.cells().deselect(), m.select.cells !== void 0)
          for (var e = 0; e < m.select.cells.length; e++)
            n.cell(m.select.cells[e].row, m.select.cells[e].column).select();
        n.state.save();
      }
    };
    n.on("stateSaveParams", function(p, y, m) {
      m.select = {}, m.select.rows = n.rows({ selected: !0 }).ids(!0).toArray(), m.select.columns = n.columns({ selected: !0 })[0], m.select.cells = n.cells({ selected: !0 })[0].map(function(e) {
        return { row: n.row(e.row).id(!0), column: e.column };
      });
    }).on("stateLoadParams", w).one("init", function() {
      w(void 0, void 0, g);
    });
    var I = v.oInit.select, F = se.defaults.select, l = I === void 0 ? F : I, c = "row", t = "api", s = !1, r = !0, a = null, o = !0, f = "td, th", u = "selected", h = !0, d = !1, i = !1;
    v._select = {
      infoEls: []
    }, l === !0 ? (t = "os", d = !0) : typeof l == "string" ? (t = l, d = !0) : or.isPlainObject(l) && (l.blurable !== void 0 && (s = l.blurable), l.toggleable !== void 0 && (r = l.toggleable), l.info !== void 0 && (o = l.info), l.items !== void 0 && (c = l.items), l.style !== void 0 ? (t = l.style, d = !0) : (t = "os", d = !0), l.selector !== void 0 && (f = l.selector), l.className !== void 0 && (u = l.className), l.headerCheckbox !== void 0 && (h = l.headerCheckbox), l.selectable !== void 0 && (a = l.selectable), l.keys !== void 0 && (i = l.keys)), n.select.selector(f), n.select.items(c), n.select.style(t), n.select.blurable(s), n.select.toggleable(r), n.select.info(o), n.select.keys(i), n.select.selectable(a), v._select.className = u, !d && or(n.table().node()).hasClass("selectable") && n.select.style("os"), (h || h === "select-page" || h === "select-all") && n.ready(function() {
      M1(n, h);
    });
  }
};
function Gl(n, v, g) {
  var w, I, F, l = function(t, s) {
    if (t > s) {
      var r = s;
      s = t, t = r;
    }
    var a = !1;
    return n.columns(":visible").indexes().filter(function(o) {
      return o === t && (a = !0), o === s ? (a = !1, !0) : a;
    });
  }, c = function(t, s) {
    var r = n.rows({ search: "applied" }).indexes();
    if (r.indexOf(t) > r.indexOf(s)) {
      var a = s;
      s = t, t = a;
    }
    var o = !1;
    return r.filter(function(f) {
      return f === t && (o = !0), f === s ? (o = !1, !0) : o;
    });
  };
  !n.cells({ selected: !0 }).any() && !g ? (I = l(0, v.column), F = c(0, v.row)) : (I = l(g.column, v.column), F = c(g.row, v.row)), w = n.cells(F, I).flatten(), n.cells(v, { selected: !0 }).any() ? n.cells(w).deselect() : n.cells(w).select();
}
function Bi(n) {
  var v = se.select.classes.checkbox;
  return n ? v.replace(/ /g, ".") : v;
}
function Si(n) {
  var v = n.settings()[0], g = v._select.selector;
  or(n.table().container()).off("mousedown.dtSelect", g).off("mouseup.dtSelect", g).off("click.dtSelect", g), or("body").off("click.dtSelect" + D0(n.table().node()));
}
function Uf(n) {
  var v = or(n.table().container()), g = n.settings()[0], w = g._select.selector, I;
  v.on("mousedown.dtSelect", w, function(F) {
    (F.shiftKey || F.metaKey || F.ctrlKey) && v.css("-moz-user-select", "none").one("selectstart.dtSelect", w, function() {
      return !1;
    }), window.getSelection && (I = window.getSelection());
  }).on("mouseup.dtSelect", w, function() {
    v.css("-moz-user-select", "");
  }).on("click.dtSelect", w, function(F) {
    var l = n.select.items(), c;
    if (I) {
      var t = window.getSelection();
      if ((!t.anchorNode || or(t.anchorNode).closest("table")[0] === n.table().node()) && t !== I)
        return;
    }
    var s = n.settings()[0], r = n.table().container();
    if (or(F.target).closest("div.dt-container")[0] == r) {
      var a = n.cell(or(F.target).closest("td, th"));
      if (a.any()) {
        var o = or.Event("user-select.dt");
        if (Aa(n, o, [l, a, F]), !o.isDefaultPrevented()) {
          var f = a.index();
          l === "row" ? (c = f.row, Zs(F, n, s, "row", c)) : l === "column" ? (c = a.index().column, Zs(F, n, s, "column", c)) : l === "cell" && (c = a.index(), Zs(F, n, s, "cell", c)), s._select_lastCell = f;
        }
      }
    }
  }), or("body").on("click.dtSelect" + D0(n.table().node()), function(F) {
    if (g._select.blurable) {
      if (or(F.target).parents().filter(n.table().container()).length || or(F.target).parents("html").length === 0 || or(F.target).parents("div.DTE").length)
        return;
      var l = or.Event("select-blur.dt");
      if (Aa(n, l, [F.target, F]), l.isDefaultPrevented())
        return;
      yo(g, !0);
    }
  });
}
function Aa(n, v, g, w) {
  w && !n.flatten().length || (typeof v == "string" && (v = v + ".dt"), g.unshift(n), or(n.table().node()).trigger(v, g));
}
function bs(n) {
  return n.mRender && n.mRender._name === "selectCheckbox";
}
function Vl(n, v) {
  if (!(n.select.style() === "api" || n.select.info() === !1)) {
    var g = n.settings()[0], w = g._select_set.length, I = w || n.rows({ selected: !0 }).count(), F = n.columns({ selected: !0 }).count(), l = n.cells({ selected: !0 }).count();
    g._select_mode === "subtractive" && (I = n.page.info().recordsDisplay - w);
    var c = function(a, o, f) {
      a.append(
        or('<span class="select-item"/>').append(
          n.i18n(
            "select." + o + "s",
            { _: "%d " + o + "s selected", 0: "", 1: "1 " + o + " selected" },
            f
          )
        )
      );
    }, t = or(v), s = or('<span class="select-info"/>');
    c(s, "row", I), c(s, "column", F), c(s, "cell", l);
    var r = t.children("span.select-info");
    r.length && r.remove(), s.text() !== "" && t.append(s);
  }
}
function M1(n, v) {
  var g = n.settings()[0], w = g.aoColumns;
  n.columns().iterator("column", function(I, F) {
    var l = w[F];
    if (bs(l)) {
      var c = n.column(F).header();
      if (!or("input", c).length) {
        var t = or("<input>").attr({
          class: Bi(!0),
          type: "checkbox",
          "aria-label": n.i18n("select.aria.headerCheckbox") || "Select all rows"
        }).appendTo(c).on("change", function() {
          this.checked ? v == "select-page" ? n.rows({ page: "current" }).select() : n.rows({ search: "applied" }).select() : v == "select-page" ? n.rows({ page: "current", selected: !0 }).deselect() : n.rows({ selected: !0 }).deselect();
        }).on("click", function(s) {
          s.stopPropagation();
        });
        n.on("draw select deselect", function(s, r, a) {
          if (a === "row" || !a) {
            var o = U1(n, v);
            o.search && o.search <= o.count && o.search === o.available ? t.prop("checked", !0).prop("indeterminate", !1) : o.search === 0 && o.count === 0 ? t.prop("checked", !1).prop("indeterminate", !1) : t.prop("checked", !1).prop("indeterminate", !0);
          }
        });
      }
    }
  });
}
function k1(n) {
  var v = n.settings()[0], g = v._select.keys, w = "dts-keys-" + v.sTableId;
  g ? (or(n.rows({ page: "current" }).nodes()).attr("tabindex", 0), n.on("draw." + w, function() {
    or(n.rows({ page: "current" }).nodes()).attr("tabindex", 0);
  }), or(document).on("keydown." + w, function(I) {
    var F = I.keyCode, l = document.activeElement;
    if ([9, 13, 32, 38, 40].includes(F)) {
      var c = n.rows({ page: "current" }).nodes().toArray(), t = c.indexOf(l), s = !0;
      if (t !== -1) {
        if (F === 9)
          I.shift === !1 && t === c.length - 1 ? Xl(n) : I.shift === !0 && t === 0 ? Zl(n) : s = !1;
        else if (F === 13 || F === 32) {
          var r = n.row(l);
          r.selected() ? r.deselect() : r.select();
        } else
          F === 38 ? t > 0 ? c[t - 1].focus() : Zl(n) : t < c.length - 1 ? c[t + 1].focus() : Xl(n);
        s && (I.stopPropagation(), I.preventDefault());
      }
    }
  })) : (or(n.rows().nodes()).removeAttr("tabindex"), n.off("draw." + w), or(document).off("keydown." + w));
}
function Xl(n) {
  var v = n.page.info();
  v.page < v.pages - 1 && n.one("draw", function() {
    n.row(":first-child").node().focus();
  }).page("next").draw(!1);
}
function Zl(n) {
  var v = n.page.info();
  v.page > 0 && n.one("draw", function() {
    n.row(":last-child").node().focus();
  }).page("previous").draw(!1);
}
function U1(n, v) {
  var g = n.settings()[0], w = g._select.selectable, I = 0, F = v == "select-page" ? n.rows({ page: "current", selected: !0 }).count() : n.rows({ selected: !0 }).count(), l = v == "select-page" ? n.rows({ page: "current", selected: !0 }).count() : n.rows({ search: "applied", selected: !0 }).count();
  if (!w)
    I = v == "select-page" ? n.rows({ page: "current" }).count() : n.rows({ search: "applied" }).count();
  else
    for (var c = v == "select-page" ? n.rows({ page: "current" }).indexes() : n.rows({ search: "applied" }).indexes(), t = 0; t < c.length; t++) {
      var s = g.aoData[c[t]], r = w(s._aData, s.nTr, c[t]);
      r && I++;
    }
  return {
    available: I,
    count: F,
    search: l
  };
}
function z1(n) {
  var v = new se.Api(n);
  n._select_init = !0, n._select_mode = "additive", n._select_set = [], n.aoRowCreatedCallback.push(
    function(g, w, I) {
      var F, l, c = n.aoData[I], t = v.row(I).id();
      for ((c._select_selected || n._select_mode === "additive" && n._select_set.includes(t) || n._select_mode === "subtractive" && !n._select_set.includes(t)) && (c._select_selected = !0, or(g).addClass(n._select.className).find("input." + Bi(!0)).prop("checked", !0)), F = 0, l = n.aoColumns.length; F < l; F++)
        (n.aoColumns[F]._select_selected || c._selected_cells && c._selected_cells[F]) && or(c.anCells[F]).addClass(n._select.className);
    }
  ), W1(v), v.on("info.dt", function(g, w, I) {
    w._select.infoEls.includes(I) || w._select.infoEls.push(I), Vl(v, I);
  }), v.on("select.dtSelect.dt deselect.dtSelect.dt", function() {
    n._select.infoEls.forEach(function(g) {
      Vl(v, g);
    }), v.state.save();
  }), v.on("destroy.dtSelect", function() {
    or(v.rows({ selected: !0 }).nodes()).removeClass(v.settings()[0]._select.className), or("input." + Bi(!0), v.table().header()).remove(), Si(v), v.off(".dtSelect"), or("body").off(".dtSelect" + D0(v.table().node()));
  });
}
function Yl(n, v, g, w) {
  var I = n[v + "s"]({ search: "applied" }).indexes(), F = I.indexOf(w), l = I.indexOf(g);
  if (!n[v + "s"]({ selected: !0 }).any() && F === -1)
    I.splice(I.indexOf(g) + 1, I.length);
  else {
    if (F > l) {
      var c = l;
      l = F, F = c;
    }
    I.splice(l + 1, I.length), I.splice(0, F);
  }
  n[v](g, { selected: !0 }).any() ? (I.splice(I.indexOf(g), 1), n[v + "s"](I).deselect()) : n[v + "s"](I).select();
}
function yo(n, v) {
  if (v || n._select.style === "single") {
    var g = new se.Api(n);
    g.rows({ selected: !0 }).deselect(), g.columns({ selected: !0 }).deselect(), g.cells({ selected: !0 }).deselect();
  }
}
function Zs(n, v, g, w, I) {
  var F = v.select.style(), l = v.select.toggleable(), c = v[w](I, { selected: !0 }).any();
  if (!(c && !l))
    if (F === "os")
      if (n.ctrlKey || n.metaKey)
        v[w](I).select(!c);
      else if (n.shiftKey)
        w === "cell" ? Gl(v, I, g._select_lastCell || null) : Yl(
          v,
          w,
          I,
          g._select_lastCell ? g._select_lastCell[w] : null
        );
      else {
        var t = v[w + "s"]({ selected: !0 });
        c && t.flatten().length === 1 ? v[w](I).deselect() : (t.deselect(), v[w](I).select());
      }
    else
      F == "multi+shift" && n.shiftKey ? w === "cell" ? Gl(v, I, g._select_lastCell || null) : Yl(
        v,
        w,
        I,
        g._select_lastCell ? g._select_lastCell[w] : null
      ) : v[w](I).select(!c);
}
function D0(n) {
  return n.id.replace(/[^a-zA-Z0-9\-\_]/g, "-");
}
function W1(n) {
  n.on("select", function(v, g, w, I) {
    if (w === "row") {
      var F = n.settings()[0];
      F._select_mode === "additive" ? Kl(n, F._select_set, I) : Jl(n, F._select_set, I);
    }
  }), n.on("deselect", function(v, g, w, I) {
    if (w === "row") {
      var F = n.settings()[0];
      F._select_mode === "additive" ? Jl(n, F._select_set, I) : Kl(n, F._select_set, I);
    }
  });
}
function Kl(n, v, g) {
  for (var w = 0; w < g.length; w++) {
    var I = n.row(g[w]).id();
    I && I !== "undefined" && !v.includes(I) && v.push(I);
  }
}
function Jl(n, v, g) {
  for (var w = 0; w < g.length; w++) {
    var I = n.row(g[w]).id(), F = v.indexOf(I);
    F !== -1 && v.splice(F, 1);
  }
}
or.each(
  [
    { type: "row", prop: "aoData" },
    { type: "column", prop: "aoColumns" }
  ],
  function(n, v) {
    se.ext.selector[v.type].push(function(g, w, I) {
      var F = w.selected, l, c = [];
      if (F !== !0 && F !== !1)
        return I;
      for (var t = 0, s = I.length; t < s; t++)
        l = g[v.prop][I[t]], l && (F === !0 && l._select_selected === !0 || F === !1 && !l._select_selected) && c.push(I[t]);
      return c;
    });
  }
);
se.ext.selector.cell.push(function(n, v, g) {
  var w = v.selected, I, F = [];
  if (w === void 0)
    return g;
  for (var l = 0, c = g.length; l < c; l++)
    I = n.aoData[g[l].row], I && (w === !0 && I._selected_cells && I._selected_cells[g[l].column] === !0 || w === !1 && (!I._selected_cells || !I._selected_cells[g[l].column])) && F.push(g[l]);
  return F;
});
var Nn = se.Api.register, Li = se.Api.registerPlural;
Nn("select()", function() {
  return this.iterator("table", function(n) {
    se.select.init(new se.Api(n));
  });
});
Nn("select.blurable()", function(n) {
  return n === void 0 ? this.context[0]._select.blurable : this.iterator("table", function(v) {
    v._select.blurable = n;
  });
});
Nn("select.toggleable()", function(n) {
  return n === void 0 ? this.context[0]._select.toggleable : this.iterator("table", function(v) {
    v._select.toggleable = n;
  });
});
Nn("select.info()", function(n) {
  return n === void 0 ? this.context[0]._select.info : this.iterator("table", function(v) {
    v._select.info = n;
  });
});
Nn("select.items()", function(n) {
  return n === void 0 ? this.context[0]._select.items : this.iterator("table", function(v) {
    v._select.items = n, Aa(new se.Api(v), "selectItems", [n]);
  });
});
Nn("select.keys()", function(n) {
  return n === void 0 ? this.context[0]._select.keys : this.iterator("table", function(v) {
    v._select || se.select.init(new se.Api(v)), v._select.keys = n, k1(new se.Api(v));
  });
});
Nn("select.style()", function(n) {
  return n === void 0 ? this.context[0]._select.style : this.iterator("table", function(v) {
    v._select || se.select.init(new se.Api(v)), v._select_init || z1(v), v._select.style = n;
    var g = new se.Api(v);
    n !== "api" ? g.ready(function() {
      Si(g), Uf(g);
    }) : Si(g), Aa(new se.Api(v), "selectStyle", [n]);
  });
});
Nn("select.selector()", function(n) {
  return n === void 0 ? this.context[0]._select.selector : this.iterator("table", function(v) {
    var g = new se.Api(v), w = v._select.style;
    Si(g), v._select.selector = n, w && w !== "api" ? g.ready(function() {
      Si(g), Uf(g);
    }) : Si(g);
  });
});
Nn("select.selectable()", function(n) {
  let v = this.context[0];
  return n ? (v._select.selectable = n, this) : v._select.selectable;
});
Nn("select.last()", function(n) {
  let v = this.context[0];
  return n ? (v._select_lastCell = n, this) : v._select_lastCell;
});
Nn("select.cumulative()", function(n) {
  if (n)
    return this.iterator("table", function(g) {
      if (g._select_mode !== n) {
        var w = new se.Api(g);
        if (n === "subtractive") {
          var I = w.rows({ selected: !1 }).ids().toArray();
          g._select_mode = n, g._select_set.length = 0, g._select_set.push.apply(g._select_set, I);
        } else {
          var F = w.rows({ selected: !0 }).ids().toArray();
          g._select_mode = n, g._select_set.length = 0, g._select_set.push.apply(g._select_set, F);
        }
      }
    }).draw(!1);
  let v = this.context[0];
  return v && v._select_set ? {
    mode: v._select_mode,
    rows: v._select_set
  } : null;
});
Li("rows().select()", "row().select()", function(n) {
  var v = this, g = [];
  return n === !1 ? this.deselect() : (this.iterator("row", function(w, I) {
    yo(w);
    var F = w.aoData[I], l = w.aoColumns;
    if (w._select.selectable) {
      var c = w._select.selectable(F._aData, F.nTr, I);
      if (c === !1)
        return;
    }
    or(F.nTr).addClass(w._select.className), F._select_selected = !0, g.push(I);
    for (var t = 0; t < l.length; t++) {
      var s = l[t];
      if (s.sType === null && v.columns().types(), bs(s)) {
        var r = F.anCells;
        r && r[t] && or("input." + Bi(!0), r[t]).prop("checked", !0), F._aSortData !== null && (F._aSortData[t] = null);
      }
    }
  }), this.iterator("table", function(w) {
    Aa(v, "select", ["row", g], !0);
  }), this);
});
Nn("row().selected()", function() {
  var n = this.context[0];
  return !!(n && this.length && n.aoData[this[0]] && n.aoData[this[0]]._select_selected);
});
Nn("row().focus()", function() {
  var n = this.context[0];
  n && this.length && n.aoData[this[0]] && n.aoData[this[0]].nTr && n.aoData[this[0]].nTr.focus();
});
Nn("row().blur()", function() {
  var n = this.context[0];
  n && this.length && n.aoData[this[0]] && n.aoData[this[0]].nTr && n.aoData[this[0]].nTr.blur();
});
Li("columns().select()", "column().select()", function(n) {
  var v = this;
  return n === !1 ? this.deselect() : (this.iterator("column", function(g, w) {
    yo(g), g.aoColumns[w]._select_selected = !0;
    var I = new se.Api(g).column(w);
    or(I.header()).addClass(g._select.className), or(I.footer()).addClass(g._select.className), I.nodes().to$().addClass(g._select.className);
  }), this.iterator("table", function(g, w) {
    Aa(v, "select", ["column", v[w]], !0);
  }), this);
});
Nn("column().selected()", function() {
  var n = this.context[0];
  return !!(n && this.length && n.aoColumns[this[0]] && n.aoColumns[this[0]]._select_selected);
});
Li("cells().select()", "cell().select()", function(n) {
  var v = this;
  return n === !1 ? this.deselect() : (this.iterator("cell", function(g, w, I) {
    yo(g);
    var F = g.aoData[w];
    F._selected_cells === void 0 && (F._selected_cells = []), F._selected_cells[I] = !0, F.anCells && or(F.anCells[I]).addClass(g._select.className);
  }), this.iterator("table", function(g, w) {
    Aa(v, "select", ["cell", v.cells(v[w]).indexes().toArray()], !0);
  }), this);
});
Nn("cell().selected()", function() {
  var n = this.context[0];
  if (n && this.length) {
    var v = n.aoData[this[0][0].row];
    if (v && v._selected_cells && v._selected_cells[this[0][0].column])
      return !0;
  }
  return !1;
});
Li("rows().deselect()", "row().deselect()", function() {
  var n = this;
  return this.iterator("row", function(v, g) {
    var w = v.aoData[g], I = v.aoColumns;
    or(w.nTr).removeClass(v._select.className), w._select_selected = !1, v._select_lastCell = null;
    for (var F = 0; F < I.length; F++) {
      var l = I[F];
      if (l.sType === null && n.columns().types(), bs(l)) {
        var c = w.anCells;
        c && c[F] && or("input." + Bi(!0), w.anCells[F]).prop("checked", !1), w._aSortData !== null && (w._aSortData[F] = null);
      }
    }
  }), this.iterator("table", function(v, g) {
    Aa(n, "deselect", ["row", n[g]], !0);
  }), this;
});
Li("columns().deselect()", "column().deselect()", function() {
  var n = this;
  return this.iterator("column", function(v, g) {
    v.aoColumns[g]._select_selected = !1;
    var w = new se.Api(v), I = w.column(g);
    or(I.header()).removeClass(v._select.className), or(I.footer()).removeClass(v._select.className), w.cells(null, g).indexes().each(function(F) {
      var l = v.aoData[F.row], c = l._selected_cells;
      l.anCells && (!c || !c[F.column]) && or(l.anCells[F.column]).removeClass(v._select.className);
    });
  }), this.iterator("table", function(v, g) {
    Aa(n, "deselect", ["column", n[g]], !0);
  }), this;
});
Li("cells().deselect()", "cell().deselect()", function() {
  var n = this;
  return this.iterator("cell", function(v, g, w) {
    var I = v.aoData[g];
    I._selected_cells !== void 0 && (I._selected_cells[w] = !1), I.anCells && !v.aoColumns[w]._select_selected && or(I.anCells[w]).removeClass(v._select.className);
  }), this.iterator("table", function(v, g) {
    Aa(n, "deselect", ["cell", n[g]], !0);
  }), this;
});
function yi(n, v) {
  return function(g) {
    return g.i18n("buttons." + n, v);
  };
}
function Ys(n) {
  var v = n._eventNamespace;
  return "draw.dt.DT" + v + " select.dt.DT" + v + " deselect.dt.DT" + v;
}
function H1(n, v) {
  return !!(v.limitTo.indexOf("rows") !== -1 && n.rows({ selected: !0 }).any() || v.limitTo.indexOf("columns") !== -1 && n.columns({ selected: !0 }).any() || v.limitTo.indexOf("cells") !== -1 && n.cells({ selected: !0 }).any());
}
var Ks = 0;
or.extend(se.ext.buttons, {
  selected: {
    text: yi("selected", "Selected"),
    className: "buttons-selected",
    limitTo: ["rows", "columns", "cells"],
    init: function(n, v, g) {
      var w = this;
      g._eventNamespace = ".select" + Ks++, n.on(Ys(g), function() {
        w.enable(H1(n, g));
      }), this.disable();
    },
    destroy: function(n, v, g) {
      n.off(g._eventNamespace);
    }
  },
  selectedSingle: {
    text: yi("selectedSingle", "Selected single"),
    className: "buttons-selected-single",
    init: function(n, v, g) {
      var w = this;
      g._eventNamespace = ".select" + Ks++, n.on(Ys(g), function() {
        var I = n.rows({ selected: !0 }).flatten().length + n.columns({ selected: !0 }).flatten().length + n.cells({ selected: !0 }).flatten().length;
        w.enable(I === 1);
      }), this.disable();
    },
    destroy: function(n, v, g) {
      n.off(g._eventNamespace);
    }
  },
  selectAll: {
    text: yi("selectAll", "Select all"),
    className: "buttons-select-all",
    action: function(n, v, g, w) {
      var I = this.select.items(), F = w.selectorModifier;
      F ? (typeof F == "function" && (F = F.call(v, n, v, g, w)), this[I + "s"](F).select()) : this[I + "s"]().select();
    }
    // selectorModifier can be specified
  },
  selectNone: {
    text: yi("selectNone", "Deselect all"),
    className: "buttons-select-none",
    action: function() {
      yo(this.settings()[0], !0);
    },
    init: function(n, v, g) {
      var w = this;
      g._eventNamespace = ".select" + Ks++, n.on(Ys(g), function() {
        var I = n.rows({ selected: !0 }).flatten().length + n.columns({ selected: !0 }).flatten().length + n.cells({ selected: !0 }).flatten().length;
        w.enable(I > 0);
      }), this.disable();
    },
    destroy: function(n, v, g) {
      n.off(g._eventNamespace);
    }
  },
  showSelected: {
    text: yi("showSelected", "Show only selected"),
    className: "buttons-show-selected",
    action: function(n, v) {
      if (v.search.fixed("dt-select"))
        v.search.fixed("dt-select", null), this.active(!1);
      else {
        var g = v.settings()[0].aoData;
        v.search.fixed("dt-select", function(w, I, F) {
          return g[F]._select_selected;
        }), this.active(!0);
      }
      v.draw();
    }
  }
});
or.each(["Row", "Column", "Cell"], function(n, v) {
  var g = v.toLowerCase();
  se.ext.buttons["select" + v + "s"] = {
    text: yi("select" + v + "s", "Select " + g + "s"),
    className: "buttons-select-" + g + "s",
    action: function() {
      this.select.items(g);
    },
    init: function(w) {
      var I = this;
      this.active(w.select.items() === g), w.on("selectItems.dt.DT", function(F, l, c) {
        I.active(c === g);
      });
    }
  };
});
se.type("select-checkbox", {
  className: "dt-select",
  detect: se.versionCheck("2.1") ? {
    oneOf: function() {
      return !1;
    },
    allOf: function() {
      return !1;
    },
    init: function(n, v, g) {
      return bs(v);
    }
  } : function(n) {
    return n === "select-checkbox" ? n : !1;
  },
  order: {
    pre: function(n) {
      return n === "X" ? -1 : 0;
    }
  }
});
or.extend(!0, se.defaults.oLanguage, {
  select: {
    aria: {
      rowCheckbox: "Select row"
    }
  }
});
se.render.select = function(n, v) {
  var g = n ? se.util.get(n) : null, w = v ? se.util.get(v) : null, I = function(F, l, c, t) {
    var s = t.settings.aoData[t.row], r = s._select_selected, a = t.settings.oLanguage.select.aria.rowCheckbox, o = t.settings._select.selectable;
    if (l === "display") {
      if (o) {
        var f = o(c, s.nTr, t.row);
        if (f === !1)
          return "";
      }
      return or("<input>").attr({
        "aria-label": a,
        class: Bi(),
        name: w ? w(c) : null,
        type: "checkbox",
        value: g ? g(c) : null,
        checked: r
      }).on("input", function(u) {
        u.preventDefault(), this.checked = or(this).closest("tr").hasClass("selected");
      })[0];
    } else {
      if (l === "type")
        return "select-checkbox";
      if (l === "filter")
        return "";
    }
    return r ? "X" : "";
  };
  return I._name = "selectCheckbox", I;
};
se.ext.order["select-checkbox"] = function(n, v) {
  return this.api().column(v, { order: "index" }).nodes().map(function(g) {
    return n._select.items === "row" ? or(g).parent().hasClass(n._select.className).toString() : n._select.items === "cell" ? or(g).hasClass(n._select.className).toString() : !1;
  });
};
or.fn.DataTable.select = se.select;
or(document).on("i18n.dt.dtSelect preInit.dt.dtSelect", function(n, v) {
  n.namespace === "dt" && se.select.init(new se.Api(v));
});
class Ql extends Error {
  constructor(v) {
    super(`Configuration Error : ${v}`), this.name = "ConfigError", this.stack = new Error().stack;
  }
}
class j1 {
  constructor() {
    pr(this, "instance");
    pr(this, "initEvent", (v) => new CustomEvent("datatable:init", {
      detail: v
    }));
  }
  validateConfig(v) {
    var g;
    if (!v)
      throw new Ql("Object not found");
    if (!v.data && !((g = v.lxConfig) != null && g.url))
      throw new Ql("You must provide data source or an URL");
    if (v.lxConfig && v.lxConfig.row_action) {
      if (!v.lxConfig.row_action.width)
        throw new Error("Param width is missing from row_action");
      if (!v.lxConfig.row_action.actions)
        throw new Error("Param actions is missing from row_action");
      if (!Array.isArray(v.lxConfig.row_action.actions))
        throw new TypeError("Param actions must be of type Array");
    }
    return v;
  }
  _splitConfig(v) {
    let g = null, w = null;
    return "lxConfig" in v && (g = v.lxConfig, delete v.lxConfig), w = v, { standardConfig: w, lxConfig: g };
  }
}
var lo = /* @__PURE__ */ ((n) => (n.NONE = "NONE", n))(lo || {});
class G1 {
  constructor(v) {
    pr(this, "config");
    pr(this, "headersGroup");
    pr(this, "cols");
    pr(this, "groupByHeadersGroup", (v) => {
      var w;
      const g = {};
      for (let I = 0; I < v.length; I++) {
        const F = v[I], l = (w = F.headerGroup) != null ? w : `NONE_${I}`;
        g[l] = F.columns;
      }
      return g;
    });
    pr(this, "getColumns", () => this.cols);
    pr(this, "getGroupHeaders", () => this.headersGroup);
    pr(this, "getConfig", () => this.config);
    this.config = v, this.headersGroup = [], this.cols = [];
  }
  setColsDef(v) {
    return this.config = v, this;
  }
  generate() {
    var v;
    return !this.config || !((v = this.config) != null && v.headers) ? this : (this.headersGroup = this.generateHeadersGroup(this.config.headers), this);
  }
  generateHeadersGroup(v) {
    const g = /* @__PURE__ */ new Set();
    return v.map((w) => {
      w.headerGroup && g.add(w.headerGroup), w.columns.forEach((I) => this.cols.push(I));
    }), Array.from(g);
  }
}
var qn, ri;
class V1 {
  constructor(v) {
    Qn(this, qn, void 0);
    Qn(this, ri, []);
    Rn(this, qn, v);
  }
  get value() {
    return dn(this, qn);
  }
  set value(v) {
    Rn(this, qn, v);
  }
  getState(v) {
    return v != null ? dn(this, qn)[v] : dn(this, qn);
  }
  setState(v) {
    return v instanceof Function ? Rn(this, qn, v(dn(this, qn))) : Rn(this, qn, v), dn(this, ri).forEach((g) => g(dn(this, qn))), dn(this, qn);
  }
  subscribe(v) {
    return dn(this, ri).push(v), () => {
      Rn(this, ri, dn(this, ri).filter((g) => g !== v));
    };
  }
}
qn = new WeakMap(), ri = new WeakMap();
class zf extends Error {
  constructor(v) {
    super(`Data Acquisition Error : ${v}`), this.name = "DaoError", this.stack = new Error().stack;
  }
}
class X1 {
  constructor() {
    pr(this, "state");
    this.state = new V1({
      loading: !1,
      error: null,
      data: null
    });
  }
  fetchData(v) {
    return _n(this, null, function* () {
      if (!v)
        throw new zf("you must provide data or an URL");
      this.state.setState((g) => (g.loading = !1, g));
      try {
        if (!v)
          throw new Error("Error : Url is not defined");
        const g = yield fetch(v);
        if (g.ok) {
          const w = yield g.json();
          this.state.setState((I) => (I.data = w, I));
        } else
          this.state.setState((w) => (w.error = new Error(
            `Error during fetch => Status : ${g.status}`
          ), w));
      } catch (g) {
        process.env.NODE_ENV !== "test" && console.error(g), this.state.setState((w) => (w.error = g, w));
      } finally {
        return this.state.setState((w) => (w.loading = !1, w)), this.state.getState();
      }
    });
  }
}
1.005.toFixed(2) == "1.01" || function(n) {
  const v = function(w) {
    if (Math.abs(w) < 1) {
      var I = parseInt(w.toString().split("e-")[1]);
      I && (w *= Math.pow(10, I - 1), w = "0." + new Array(I).join("0") + w.toString().substring(2));
    } else {
      var I = parseInt(w.toString().split("+")[1]);
      I > 20 && (I -= 20, w /= Math.pow(10, I), w += new Array(I + 1).join("0"));
    }
    return w;
  };
  var g = n.toFixed;
  n.toFixed = function(w) {
    var I = v(this).toString().split("."), F = +(I[1] ? I.join(".") + (I[1].length > w && "1" || "") : I[0]);
    return g.call(F, w);
  };
}(Number.prototype);
var Wf = { exports: {} };
(function(n, v) {
  (function(g, w) {
    n.exports = w();
  })(xi, function() {
    var g = 1e3, w = 6e4, I = 36e5, F = "millisecond", l = "second", c = "minute", t = "hour", s = "day", r = "week", a = "month", o = "quarter", f = "year", u = "date", h = "Invalid Date", d = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, i = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, p = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ordinal: function(b) {
      var R = ["th", "st", "nd", "rd"], L = b % 100;
      return "[" + b + (R[(L - 20) % 10] || R[L] || R[0]) + "]";
    } }, y = function(b, R, L) {
      var N = String(b);
      return !N || N.length >= R ? b : "" + Array(R + 1 - N.length).join(L) + b;
    }, m = { s: y, z: function(b) {
      var R = -b.utcOffset(), L = Math.abs(R), N = Math.floor(L / 60), M = L % 60;
      return (R <= 0 ? "+" : "-") + y(N, 2, "0") + ":" + y(M, 2, "0");
    }, m: function b(R, L) {
      if (R.date() < L.date())
        return -b(L, R);
      var N = 12 * (L.year() - R.year()) + (L.month() - R.month()), M = R.clone().add(N, a), K = L - M < 0, ct = R.clone().add(N + (K ? -1 : 1), a);
      return +(-(N + (L - M) / (K ? M - ct : ct - M)) || 0);
    }, a: function(b) {
      return b < 0 ? Math.ceil(b) || 0 : Math.floor(b);
    }, p: function(b) {
      return { M: a, y: f, w: r, d: s, D: u, h: t, m: c, s: l, ms: F, Q: o }[b] || String(b || "").toLowerCase().replace(/s$/, "");
    }, u: function(b) {
      return b === void 0;
    } }, e = "en", x = {};
    x[e] = p;
    var S = "$isDayjsObject", P = function(b) {
      return b instanceof E || !(!b || !b[S]);
    }, O = function b(R, L, N) {
      var M;
      if (!R)
        return e;
      if (typeof R == "string") {
        var K = R.toLowerCase();
        x[K] && (M = K), L && (x[K] = L, M = K);
        var ct = R.split("-");
        if (!M && ct.length > 1)
          return b(ct[0]);
      } else {
        var J = R.name;
        x[J] = R, M = J;
      }
      return !N && M && (e = M), M || !N && e;
    }, T = function(b, R) {
      if (P(b))
        return b.clone();
      var L = typeof R == "object" ? R : {};
      return L.date = b, L.args = arguments, new E(L);
    }, A = m;
    A.l = O, A.i = P, A.w = function(b, R) {
      return T(b, { locale: R.$L, utc: R.$u, x: R.$x, $offset: R.$offset });
    };
    var E = function() {
      function b(L) {
        this.$L = O(L.locale, null, !0), this.parse(L), this.$x = this.$x || L.x || {}, this[S] = !0;
      }
      var R = b.prototype;
      return R.parse = function(L) {
        this.$d = function(N) {
          var M = N.date, K = N.utc;
          if (M === null)
            return /* @__PURE__ */ new Date(NaN);
          if (A.u(M))
            return /* @__PURE__ */ new Date();
          if (M instanceof Date)
            return new Date(M);
          if (typeof M == "string" && !/Z$/i.test(M)) {
            var ct = M.match(d);
            if (ct) {
              var J = ct[2] - 1 || 0, nt = (ct[7] || "0").substring(0, 3);
              return K ? new Date(Date.UTC(ct[1], J, ct[3] || 1, ct[4] || 0, ct[5] || 0, ct[6] || 0, nt)) : new Date(ct[1], J, ct[3] || 1, ct[4] || 0, ct[5] || 0, ct[6] || 0, nt);
            }
          }
          return new Date(M);
        }(L), this.init();
      }, R.init = function() {
        var L = this.$d;
        this.$y = L.getFullYear(), this.$M = L.getMonth(), this.$D = L.getDate(), this.$W = L.getDay(), this.$H = L.getHours(), this.$m = L.getMinutes(), this.$s = L.getSeconds(), this.$ms = L.getMilliseconds();
      }, R.$utils = function() {
        return A;
      }, R.isValid = function() {
        return this.$d.toString() !== h;
      }, R.isSame = function(L, N) {
        var M = T(L);
        return this.startOf(N) <= M && M <= this.endOf(N);
      }, R.isAfter = function(L, N) {
        return T(L) < this.startOf(N);
      }, R.isBefore = function(L, N) {
        return this.endOf(N) < T(L);
      }, R.$g = function(L, N, M) {
        return A.u(L) ? this[N] : this.set(M, L);
      }, R.unix = function() {
        return Math.floor(this.valueOf() / 1e3);
      }, R.valueOf = function() {
        return this.$d.getTime();
      }, R.startOf = function(L, N) {
        var M = this, K = !!A.u(N) || N, ct = A.p(L), J = function(Q, gt) {
          var ht = A.w(M.$u ? Date.UTC(M.$y, gt, Q) : new Date(M.$y, gt, Q), M);
          return K ? ht : ht.endOf(s);
        }, nt = function(Q, gt) {
          return A.w(M.toDate()[Q].apply(M.toDate("s"), (K ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(gt)), M);
        }, yt = this.$W, bt = this.$M, Tt = this.$D, It = "set" + (this.$u ? "UTC" : "");
        switch (ct) {
          case f:
            return K ? J(1, 0) : J(31, 11);
          case a:
            return K ? J(1, bt) : J(0, bt + 1);
          case r:
            var Lt = this.$locale().weekStart || 0, zt = (yt < Lt ? yt + 7 : yt) - Lt;
            return J(K ? Tt - zt : Tt + (6 - zt), bt);
          case s:
          case u:
            return nt(It + "Hours", 0);
          case t:
            return nt(It + "Minutes", 1);
          case c:
            return nt(It + "Seconds", 2);
          case l:
            return nt(It + "Milliseconds", 3);
          default:
            return this.clone();
        }
      }, R.endOf = function(L) {
        return this.startOf(L, !1);
      }, R.$set = function(L, N) {
        var M, K = A.p(L), ct = "set" + (this.$u ? "UTC" : ""), J = (M = {}, M[s] = ct + "Date", M[u] = ct + "Date", M[a] = ct + "Month", M[f] = ct + "FullYear", M[t] = ct + "Hours", M[c] = ct + "Minutes", M[l] = ct + "Seconds", M[F] = ct + "Milliseconds", M)[K], nt = K === s ? this.$D + (N - this.$W) : N;
        if (K === a || K === f) {
          var yt = this.clone().set(u, 1);
          yt.$d[J](nt), yt.init(), this.$d = yt.set(u, Math.min(this.$D, yt.daysInMonth())).$d;
        } else
          J && this.$d[J](nt);
        return this.init(), this;
      }, R.set = function(L, N) {
        return this.clone().$set(L, N);
      }, R.get = function(L) {
        return this[A.p(L)]();
      }, R.add = function(L, N) {
        var M, K = this;
        L = Number(L);
        var ct = A.p(N), J = function(bt) {
          var Tt = T(K);
          return A.w(Tt.date(Tt.date() + Math.round(bt * L)), K);
        };
        if (ct === a)
          return this.set(a, this.$M + L);
        if (ct === f)
          return this.set(f, this.$y + L);
        if (ct === s)
          return J(1);
        if (ct === r)
          return J(7);
        var nt = (M = {}, M[c] = w, M[t] = I, M[l] = g, M)[ct] || 1, yt = this.$d.getTime() + L * nt;
        return A.w(yt, this);
      }, R.subtract = function(L, N) {
        return this.add(-1 * L, N);
      }, R.format = function(L) {
        var N = this, M = this.$locale();
        if (!this.isValid())
          return M.invalidDate || h;
        var K = L || "YYYY-MM-DDTHH:mm:ssZ", ct = A.z(this), J = this.$H, nt = this.$m, yt = this.$M, bt = M.weekdays, Tt = M.months, It = M.meridiem, Lt = function(gt, ht, st, xt) {
          return gt && (gt[ht] || gt(N, K)) || st[ht].slice(0, xt);
        }, zt = function(gt) {
          return A.s(J % 12 || 12, gt, "0");
        }, Q = It || function(gt, ht, st) {
          var xt = gt < 12 ? "AM" : "PM";
          return st ? xt.toLowerCase() : xt;
        };
        return K.replace(i, function(gt, ht) {
          return ht || function(st) {
            switch (st) {
              case "YY":
                return String(N.$y).slice(-2);
              case "YYYY":
                return A.s(N.$y, 4, "0");
              case "M":
                return yt + 1;
              case "MM":
                return A.s(yt + 1, 2, "0");
              case "MMM":
                return Lt(M.monthsShort, yt, Tt, 3);
              case "MMMM":
                return Lt(Tt, yt);
              case "D":
                return N.$D;
              case "DD":
                return A.s(N.$D, 2, "0");
              case "d":
                return String(N.$W);
              case "dd":
                return Lt(M.weekdaysMin, N.$W, bt, 2);
              case "ddd":
                return Lt(M.weekdaysShort, N.$W, bt, 3);
              case "dddd":
                return bt[N.$W];
              case "H":
                return String(J);
              case "HH":
                return A.s(J, 2, "0");
              case "h":
                return zt(1);
              case "hh":
                return zt(2);
              case "a":
                return Q(J, nt, !0);
              case "A":
                return Q(J, nt, !1);
              case "m":
                return String(nt);
              case "mm":
                return A.s(nt, 2, "0");
              case "s":
                return String(N.$s);
              case "ss":
                return A.s(N.$s, 2, "0");
              case "SSS":
                return A.s(N.$ms, 3, "0");
              case "Z":
                return ct;
            }
            return null;
          }(gt) || ct.replace(":", "");
        });
      }, R.utcOffset = function() {
        return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
      }, R.diff = function(L, N, M) {
        var K, ct = this, J = A.p(N), nt = T(L), yt = (nt.utcOffset() - this.utcOffset()) * w, bt = this - nt, Tt = function() {
          return A.m(ct, nt);
        };
        switch (J) {
          case f:
            K = Tt() / 12;
            break;
          case a:
            K = Tt();
            break;
          case o:
            K = Tt() / 3;
            break;
          case r:
            K = (bt - yt) / 6048e5;
            break;
          case s:
            K = (bt - yt) / 864e5;
            break;
          case t:
            K = bt / I;
            break;
          case c:
            K = bt / w;
            break;
          case l:
            K = bt / g;
            break;
          default:
            K = bt;
        }
        return M ? K : A.a(K);
      }, R.daysInMonth = function() {
        return this.endOf(a).$D;
      }, R.$locale = function() {
        return x[this.$L];
      }, R.locale = function(L, N) {
        if (!L)
          return this.$L;
        var M = this.clone(), K = O(L, N, !0);
        return K && (M.$L = K), M;
      }, R.clone = function() {
        return A.w(this.$d, this);
      }, R.toDate = function() {
        return new Date(this.valueOf());
      }, R.toJSON = function() {
        return this.isValid() ? this.toISOString() : null;
      }, R.toISOString = function() {
        return this.$d.toISOString();
      }, R.toString = function() {
        return this.$d.toUTCString();
      }, b;
    }(), D = E.prototype;
    return T.prototype = D, [["$ms", F], ["$s", l], ["$m", c], ["$H", t], ["$W", s], ["$M", a], ["$y", f], ["$D", u]].forEach(function(b) {
      D[b[1]] = function(R) {
        return this.$g(R, b[0], b[1]);
      };
    }), T.extend = function(b, R) {
      return b.$i || (b(R, E, T), b.$i = !0), T;
    }, T.locale = O, T.isDayjs = P, T.unix = function(b) {
      return T(1e3 * b);
    }, T.en = x[e], T.Ls = x, T.p = {}, T;
  });
})(Wf);
var Z1 = Wf.exports;
const Js = /* @__PURE__ */ Ff(Z1), ei = {
  DATE_DAY: {
    render: function(n, v) {
      return v === "display" || v === "filter" || v === "export" ? Js(n).format("DD/MM/YYYY") : n;
    }
  },
  DATE_WITH_SECOND: {
    render: function(n, v) {
      return v === "display" || v === "filter" || v === "export" ? Js(n).format("DD/MM/YYYY HH:mm:ss") : n;
    }
  },
  LOCAL_NUMBER: {
    render: function(n, v) {
      return v === "display" || v === "filter" || v === "export" ? n.toLocaleString() : n;
    }
  },
  BOOLEAN_OUI_NON: {
    render: function(n, v) {
      return v === "display" || v === "filter" || v === "export" ? n === !0 ? "Oui" : "Non" : n;
    }
  },
  NUMBER_FIXED_2: {
    render: function(n) {
      if (typeof n == "number")
        return n.toFixed(2);
      if (typeof n == "string") {
        const v = parseFloat(n);
        return isNaN(v) ? n : v.toFixed(2);
      }
    }
  },
  NUMBER_2_DIGIT_MAX: {
    render: function(n) {
      if (typeof n == "number")
        return n % 1 === 0 ? n : n.toFixed(2);
      if (typeof n == "string") {
        const v = parseFloat(n);
        return isNaN(v) || v % 1 === 0 ? n : v.toFixed(2);
      } else
        return n;
    }
  },
  PARSE_INT: {
    render: function(n) {
      return parseInt(n);
    }
  },
  UPPERCASE: {
    render: (n) => typeof n == "string" ? n.toUpperCase() : n
  },
  LOWERCASE: {
    render: (n) => typeof n == "string" ? n.toLowerCase() : n
  },
  CUT_LONG_TEXT: {
    render: function(n, v) {
      return v === "display" && typeof n == "string" && n.length > 30 ? n.substring(0, 28) + "â¦" : n;
    }
  },
  CHECKBOX: {
    checkboxes: {
      selectRow: !0
    }
  },
  _dynamic: [
    {
      pattern: /^DATE_TO_FORMAT_(.+)$/,
      handler: (n) => {
        const v = n[1];
        return {
          render: function(g, w) {
            return w === "display" || w === "filter" || w === "export" ? Js(g).format(v) : g;
          }
        };
      }
    }
  ]
};
function Y1(n) {
  if (typeof n == "string") {
    if (n in ei)
      return ei[n];
    for (const v of ei._dynamic || []) {
      const g = n.match(v.pattern);
      if (g)
        return v.handler(g);
    }
    return {};
  }
  return n;
}
class K1 {
  constructor(v) {
    v.headers && v.headers.map((g) => {
      for (const w of g.columns) {
        if (!w.renderer)
          continue;
        Array.isArray(w.renderer) && (console.warn(
          "Multiple renderers are not supported yet. Please use a single renderer."
        ), w.renderer = w.renderer[0]);
        const I = Y1(w.renderer);
        I.render && (w.render = I.render), I.createdCell && (w.createdCell = I.createdCell), I.checkboxes && (w.checkboxes = I.checkboxes);
      }
    });
  }
}
class J1 {
  getDataFormatted(v, g) {
    return v.map((w) => {
      const I = {};
      return g.forEach((F) => {
        w[F.name] && (I[F.name] = w[F.name]);
      }), I;
    }).filter((w) => Object.keys(w).length > 0);
  }
  addRenderer(v, g) {
    if (typeof v != "string" || !g)
      throw new Error("Invalid renderer declaration");
    ei[v] = g;
  }
  addDynamicRenderer(v, g) {
    ei._dynamic || (ei._dynamic = []), ei._dynamic.push({ pattern: v, handler: g });
  }
}
var Ci;
class Qs {
  constructor(v) {
    Qn(this, Ci, void 0);
    Rn(this, Ci, v);
  }
  get colsDef() {
    return dn(this, Ci);
  }
  setColsDef(v) {
    return Rn(this, Ci, v), this;
  }
  /**
   * @description set default value from columnsDefaultKey config key
   */
  static setDefaultKeyValue(v = null, g) {
    return v && g.forEach((w) => {
      Object.entries(v).map(([I, F]) => {
        I in w || (w[I] = F);
      });
    }), g;
  }
  static mergeColumns(v, g) {
    const w = {};
    for (let I = 0; I < v.length; I++) {
      const F = v[I];
      w[F.name] = F;
    }
    for (let I = 0; I < g.length; I++) {
      const F = g[I];
      w[F.name] ? w[F.name] = Yo(Yo({}, w[F.name]), F) : w[F.name] = F;
    }
    return Object.values(w);
  }
}
Ci = new WeakMap();
class O0 {
  $element(v, {
    classList: g,
    attributes: w,
    content: I,
    children: F,
    html: l,
    style: c,
    onClick: t,
    onChange: s
  }) {
    const r = document.createElement(v);
    if (g && g.forEach((a) => r.classList.add(a)), I && (r.textContent = I), F && r.append(...F), l && (r.innerHTML = l), c)
      for (const [a, o] of Object.entries(c))
        r.style[a] = String(o);
    return w && Object.entries(w).forEach(([a, o]) => {
      typeof o == "boolean" ? r.toggleAttribute(a, o) : r.setAttribute(a, o);
    }), t && t.forEach((a) => a), s && s.forEach((a) => a), r;
  }
}
class Hf extends Error {
  constructor(v) {
    super(`DOM Error : ${v}`), this.name = "DomError", this.stack = new Error().stack;
  }
}
class Q1 extends O0 {
  constructor(g, { headers: w, config: I }) {
    super();
    pr(this, "tableRef");
    pr(this, "headerRef", null);
    pr(this, "config");
    pr(this, "headers");
    pr(this, "MAIN_HEADER_ID", "main_header");
    pr(this, "GROUP_HEADER_ID", "group_header");
    pr(this, "appendTableHeader", () => {
      var g;
      return (g = this.tableRef) == null ? void 0 : g.append(this.$element("thead", {}));
    });
    pr(this, "getHeaderElement", () => {
      var g, w;
      return this.headerRef = (w = (g = this.tableRef) == null ? void 0 : g.querySelector("thead")) != null ? w : null, this.headerRef;
    });
    pr(this, "$headerWrapper", (g, w, I) => this.$element("tr", {
      attributes: { class: w, id: g },
      children: I
    }));
    this.tableRef = g, this.headers = w, this.config = I, this.appendTableHeader(), this.getHeaderElement();
  }
  build() {
    return _n(this, null, function* () {
      var w, I, F;
      if (!this.headerRef)
        throw new Hf("Cannot select the dom header ref");
      if (!this.headers.getConfig())
        return this.headerRef;
      const g = this.headers.groupByHeadersGroup(
        (w = this.config.headers) != null ? w : []
      );
      if (!Object.keys(g).length)
        return this.headerRef;
      if (Object.keys(g).some(
        (l) => !l.startsWith(lo.NONE)
      )) {
        const [l, c] = yield Promise.all([
          this.$groupHeaders(g),
          this.$mainHeader(g)
        ]), t = this.$headerWrapper(
          this.GROUP_HEADER_ID,
          "group_header",
          l
        ), s = this.$headerWrapper(
          this.MAIN_HEADER_ID,
          "main_header",
          c
        );
        (F = this.headerRef) == null || F.append(t, s);
      } else {
        const l = this.$mainRowHeader(g), c = this.$headerWrapper(
          this.MAIN_HEADER_ID,
          "main_header",
          l
        );
        (I = this.headerRef) == null || I.append(c);
      }
      return this.headerRef;
    });
  }
  /**
   * Build main headers columns
   */
  $mainHeader(g) {
    return _n(this, null, function* () {
      const w = [];
      for (const [I, F] of Object.entries(g))
        if (!I.startsWith(lo.NONE))
          for (let l = 0; l < F.length; l++)
            w.push(
              this.$element("th", {
                classList: ["colspan-border"],
                attributes: {
                  rowspan: "1",
                  colspan: "1"
                },
                content: F[l].title,
                style: F[l].style
              })
            );
      return w;
    });
  }
  $mainRowHeader(g) {
    const w = [];
    for (const [I, F] of Object.entries(g))
      for (let l = 0; l < F.length; l++)
        I.startsWith(lo.NONE) && w.push(
          this.$element("th", {
            classList: ["colspan-border"],
            attributes: {
              rowspan: "1",
              colspan: "1"
            },
            content: F[l].title,
            style: F[l].style
          })
        );
    return w;
  }
  /**
   * Build Group headers
   */
  $groupHeaders(g) {
    return _n(this, null, function* () {
      const w = [];
      for (const [I, F] of Object.entries(g))
        if (!I.startsWith(lo.NONE))
          w.push(
            this.$element("th", {
              classList: ["colspan-border"],
              attributes: {
                rowspan: "1",
                colspan: String(F.length)
              },
              content: I
            })
          );
        else
          for (let l = 0; l < F.length; l++)
            w.push(
              this.$element("th", {
                classList: ["colspan-border"],
                attributes: {
                  rowspan: "2",
                  colspan: "1"
                },
                content: F[l].title,
                style: F[l].style
              })
            );
      return w;
    });
  }
}
class _1 {
  constructor() {
    pr(this, "transformers");
    /**
     * Add transformer to the data submitted
     */
    pr(this, "add", (v) => this.transformers.push(v));
    /**
     * Execute each transformer
     */
    pr(this, "exec", (v) => (this.transformers.forEach((g) => {
      v = g(v);
    }), v));
    this.transformers = [];
  }
}
class gi extends Error {
  constructor(v) {
    super(`Action plugin Error : ${v}`), this.name = "ActionError", this.stack = new Error().stack;
  }
}
class $1 extends O0 {
  constructor() {
    super();
  }
  $actionButton({
    name: v,
    title: g,
    icon: w,
    iconClassList: I,
    btnClassList: F,
    style: l,
    effect: c
  }) {
    let t;
    return I && (t = this.$element("i", {
      classList: ["fa"].concat(I || [])
    })), w && (t = w.cloneNode(!0)), this.$element("button", {
      classList: ["btn"].concat(F || []),
      children: [t],
      attributes: {
        name: v,
        title: g != null ? g : "",
        "aria-label": g != null ? g : v
      },
      style: Yo({}, l),
      onClick: Array.isArray(c) ? c : [c]
    });
  }
  defineDefaultCellStyle(v) {
    v.style.display = "flex", v.style.justifyContent = "center", v.style.alignItems = "center", v.style.gap = "6px";
  }
}
class q1 {
  static fetchUrl(v) {
    return _n(this, null, function* () {
      try {
        return yield (yield fetch(v)).json();
      } catch (g) {
        throw g;
      }
    });
  }
}
class tv {
  constructor(v, g) {
    pr(this, "customActions");
    pr(this, "retrieve", () => this.customActions);
    this.customActions = [
      {
        name: "FOLLOW_URL_REDIRECT",
        effect: (w) => _n(this, null, function* () {
          if (!v.url)
            throw new Error("URL is not defined");
          try {
            const I = g(v.url, w), F = yield q1.fetchUrl(I);
            F.url && window.open(F.url, v.blank ? "_blank" : "_self");
          } catch (I) {
            throw I;
          }
        })
      }
    ];
  }
}
var co, Ai, Ei, ho, Ti, es;
class ev {
  constructor({ width: v, className: g, actions: w }) {
    Qn(this, Ti);
    pr(this, "actions");
    pr(this, "customActions");
    Qn(this, co, void 0);
    Qn(this, Ai, void 0);
    Qn(this, Ei, void 0);
    Qn(this, ho, void 0);
    this.actions = [], Rn(this, co, v), Rn(this, Ei, g), Rn(this, Ai, w), Rn(this, ho, new $1());
  }
  generateColDefConfig() {
    return _n(this, null, function* () {
      return {
        data: null,
        defaultContent: "",
        targets: -1,
        width: dn(this, co),
        createdCell: (v, g) => _n(this, null, function* () {
          for (const w of dn(this, Ai))
            if (w.effect)
              Ko(this, Ti, es).call(this, v, g, w);
            else if (w.customAction) {
              if (!w.url || w.url === "")
                throw new Error("Cannnot open URL, URL is missing");
              new tv(w, this.parseUrlString.bind(this)).retrieve().map((I) => {
                I.name === w.customAction && (w.effect = I.effect, Ko(this, Ti, es).call(this, v, g, w));
              });
            } else
              w.effect = (I) => {
                if (!w.url || w.url === "")
                  throw new Error("Cannnot open URL, URL is missing");
                const F = this.parseUrlString(w.url, I);
                window.open(F, w.blank ? "_blank" : "_self");
              }, Ko(this, Ti, es).call(this, v, g, w);
        })
      };
    });
  }
  _getUrlParams(v) {
    const g = Array.from(v.matchAll(/\{(.+?)\}/g)), w = Array.from(g).filter((I) => I[1] !== "}{").map((I) => I[1]);
    return Array.from(new Set(w));
  }
  parseUrlString(v, g) {
    const w = this._getUrlParams(v);
    return w.length && w.forEach((I) => {
      v.includes(`{${I}}`) && g[I] && (v = v.replaceAll(`{${I}}`, g[I]));
    }), v;
  }
  /**
   * @throws ActionError if an error occured
   */
  validateConfig() {
    return dn(this, Ai).map((v) => {
      if (!v.icon && !v.iconClassList)
        throw new gi("You must provide an icon name or an icon title");
      if (v.icon && !(v.icon instanceof HTMLElement))
        throw new gi("Icon must be of type HTMLElement");
      if (!v.name)
        throw new gi("Name is not set");
      if (!v.effect && !v.url)
        throw new gi("You must provide an URL or an Effect function");
      if (v.url && v.url === "")
        throw new gi("Invalid URL");
      if (v.effect && !(v.effect instanceof Function))
        throw new gi("Effect must be a function");
    }), this;
  }
}
co = new WeakMap(), Ai = new WeakMap(), Ei = new WeakMap(), ho = new WeakMap(), Ti = new WeakSet(), es = function(v, g, w) {
  const I = dn(this, ho).$actionButton(w);
  I.addEventListener("click", () => _n(this, null, function* () {
    try {
      yield w.effect(g), w.onComplete && w.onComplete(g);
    } catch (F) {
      w.onError && w.onError(F, g);
    }
  })), dn(this, Ei) && v.classList.add(dn(this, Ei)), v.appendChild(I);
};
class rv {
  getDefaults() {
    return [
      {
        extend: "copyHtml5",
        exportOptions: {
          orthogonal: "export"
        }
      },
      {
        extend: "excelHtml5",
        exportOptions: {
          orthogonal: "export"
        }
      },
      {
        extend: "csvHtml5",
        exportOptions: {
          orthogonal: "export"
        }
      },
      {
        text: "JSON",
        action: function(v, g) {
          var w = g.rows({ orthogonal: "export" }).data().toArray();
          Ln.fn.dataTable.fileSave(
            new Blob([JSON.stringify(w)]),
            "Exported_data.json"
          );
        }
      },
      "colvis"
    ];
  }
  parse(v) {
    return Array.isArray(v) && v.forEach((g) => {
    }), v;
  }
}
class nv extends O0 {
  constructor(g, w) {
    super();
    pr(this, "tableRef");
    pr(this, "footerRef", null);
    pr(this, "config");
    pr(this, "appendTableFooter", () => {
      var g, w;
      (g = this.tableRef) != null && g.querySelector("tfoot") || (w = this.tableRef) == null || w.append(this.$element("tfoot", {}));
    });
    pr(this, "getFooterElement", () => {
      var g, w;
      return this.footerRef = (w = (g = this.tableRef) == null ? void 0 : g.querySelector("tfoot")) != null ? w : null, this.footerRef;
    });
    this.tableRef = g, this.config = w, this.appendTableFooter(), this.getFooterElement();
  }
  build(g = "main_footer", w = "main_footer") {
    return _n(this, null, function* () {
      var l, c, t;
      if (!this.footerRef)
        throw new Hf("Cannot select the dom footer ref");
      if (!((l = this.config.headers) != null && l.length))
        return this.footerRef;
      const I = [];
      (c = this.config.headers) == null || c.forEach((s) => {
        var r;
        (r = s.columns) == null || r.forEach((a) => {
          I.push(
            this.$element("th", {
              classList: ["colspan-border"],
              attributes: {
                rowspan: "1",
                colspan: "1"
              },
              //content: column.title,
              style: a.style
            })
          );
        });
      });
      const F = this.$element("tr", {
        attributes: { class: w, id: g },
        children: I
      });
      return (t = this.footerRef) == null || t.append(F), this.footerRef;
    });
  }
}
class av {
  constructor(v, g) {
    pr(this, "tableRef");
    pr(this, "config");
    pr(this, "footerUiBuilder");
    this.tableRef = v, this.config = g, this.footerUiBuilder = new nv(this.tableRef, g);
  }
  build(v = "main_filter", g = "main_filter") {
    return _n(this, null, function* () {
      return this.footerUiBuilder.build(v, g);
    });
  }
  init(v, g) {
    v.columns().every(function() {
      let w = this.footer().textContent;
      if (g == "input") {
        let I = document.createElement("div");
        I.classList.add("column_search_container");
        let F = document.createElement("input");
        F.setAttribute("type", "text"), F.classList.add("column_search"), F.placeholder = w;
        let l = document.createElement("i");
        l.classList.add("fa", "fa-search"), I.appendChild(F), I.appendChild(l), this.footer().replaceChildren(I), F.addEventListener("keyup", () => {
          this.search() !== this.value && this.search(F.value).draw();
        });
      }
    });
  }
}
window.JSZip = T1;
var vo, Fi, Ii, ls;
class sv extends j1 {
  constructor(g, w) {
    super();
    pr(this, "config");
    pr(this, "_ref");
    pr(this, "refElement");
    pr(this, "dao");
    pr(this, "dto");
    pr(this, "tranformer");
    Qn(this, vo, void 0);
    Qn(this, Fi, void 0);
    Qn(this, Ii, void 0);
    // @ts-ignore
    Qn(this, ls, void 0);
    pr(this, "filterColumn");
    this._ref = g, this.refElement = document.querySelector(g), this.config = w, this.dao = new X1(), this.dto = new J1(), this.tranformer = new _1();
  }
  /**
   * Get the default datatable config if not set
   */
  setDefaults(g) {
    var w, I, F, l, c, t;
    return !g.dom && !g.layout && (g.dom = '<"top"Bf>rt<"bottom"lip><"clear">'), g.scrollX || (g.scrollX = (w = g.scrollX) != null ? w : !0), g.fixedHeader || (g.fixedHeader = (I = g.fixedHeader) != null ? I : !0), g.paging || (g.paging = (F = g.paging) != null ? F : !0), g.lxConfig && (g.lxConfig.filters = (l = g.lxConfig.filters) != null ? l : !0, g.lxConfig.handleBootrapTabChange = (c = g.lxConfig.handleBootrapTabChange) != null ? c : !0, g.lxConfig.scrollYFitToScreen = (t = g.lxConfig.scrollYFitToScreen) != null ? t : !1), g;
  }
  /**
   * Main function of datatable
   *
   * Instantiating the lx datatable
   * Generate cols, create dom content etc...
   */
  init() {
    return _n(this, null, function* () {
      var l, c;
      try {
        this.config = this.validateConfig(this.config);
      } catch (t) {
        return console.error(t.message), this;
      }
      this.setDefaults(this.config);
      let g = [], w = [];
      if (!this.refElement)
        throw new DOMException("Error: element selected doesn't exist");
      const { standardConfig: I, lxConfig: F } = this._splitConfig(this.config);
      if (Rn(this, vo, new Qs()), Rn(this, Fi, new G1()), Rn(this, Ii, new rv()), I && (g = (l = dn(this, vo).setColsDef(I.columns).colsDef) != null ? l : []), F) {
        g != null && g.length && (F.headers = F.headers ? [{ columns: [...g] }, ...F.headers] : [{ columns: [...g] }]), new K1(F);
        const t = dn(this, Fi).setColsDef(F).generate();
        w = t.getColumns();
        const s = new Q1(this.refElement, {
          headers: t,
          config: F
        });
        if (Rn(this, ls, yield s.build()), F && F.filters && (this.filterColumn = new av(this.refElement, F), yield this.filterColumn.build()), !this.config.data)
          try {
            const { data: r, error: a } = yield this.dao.fetchData(F.url);
            if (a)
              throw new zf(a.message);
            this.config.data = r != null ? r : [];
          } catch (r) {
            return console.error(r.message), this;
          }
      }
      if (this.config.columns = Qs.setDefaultKeyValue(
        (c = dn(this, Fi).getConfig()) == null ? void 0 : c.columnsDefaultKey,
        w
      ), this.config.columns = Qs.mergeColumns(
        g,
        w
      ), !this.config.data)
        throw new Error("Error : no data provided");
      if (this.config.data = this.tranformer.exec(this.config.data), F != null && F.row_action && F.row_action.actions.length) {
        const t = new ev(F.row_action);
        try {
          const s = yield t.validateConfig().generateColDefConfig();
          this.config.columnDefs ? this.config.columnDefs = [...this.config.columnDefs, s] : this.config.columnDefs = Array(s);
        } catch (s) {
          console.error(s.message);
        }
      }
      return this.config.buttons || (this.config.buttons = dn(this, Ii).getDefaults()), dn(this, Ii).parse(
        this.config.buttons
      ), Ln(`${this._ref}`).on("init.dt", (t, s) => {
        var o, f;
        if (t.namespace !== "dt")
          return;
        const r = s.oInstance.api();
        if (F && F.filters)
          if ((o = this.filterColumn) == null || o.init(r, "input"), (f = this.config) != null && f.scrollX) {
            Ln(`${this._ref}_wrapper .dt-scroll-foot tfoot tr th`).removeAttr(
              "data-dt-column"
            );
            var a = Ln(`${this._ref}_wrapper .dt-scroll-foot tfoot tr`);
            Ln(`${this._ref}_wrapper .dt-scroll-head thead`).append(a);
          } else {
            Ln(`${this._ref} tfoot tr th`).removeAttr("data-dt-column");
            var a = Ln(`${this._ref} tfoot tr`);
            Ln(`${this._ref} thead`).append(a);
          }
        if (F != null && F.scrollYFitToScreen) {
          const u = this._convertToScrollYFitToScreenConfig(
            F.scrollYFitToScreen
          );
          this._scrollYFitToScreen(u), r.draw();
        }
      }), this.instance = new se(`${this._ref}`, this.config), this.refElement.dispatchEvent(this.initEvent(this.instance)), F && F.handleBootrapTabChange && this.handleBootrapTabChange(this.instance), F != null && F.keepFixedHeaderInDT && this._ref && this.__keepFixedHeaderInDT(), this;
    });
  }
  __filterDataWithKey() {
  }
  __keepFixedHeaderInDT() {
    new MutationObserver((w) => {
      for (const I of w)
        for (const F of I.addedNodes)
          if (F instanceof HTMLElement && F.classList.contains("dtfh-floatingparent")) {
            const l = document.querySelector(this._ref);
            if (!l)
              return;
            const t = `${this._ref.startsWith("#") || this._ref.startsWith(".") ? this._ref.slice(1) : this._ref}_info`, s = F.querySelector("table");
            (s == null ? void 0 : s.getAttribute("aria-describedby")) === t && (l.contains(F) || l.insertBefore(F, l.firstChild));
          }
    }).observe(document.body, {
      childList: !0,
      subtree: !0
    });
  }
  _scrollYFitToScreen(g) {
    const w = this, I = g && g.addStaticMargin ? g.addStaticMargin : 0;
    Ln(`${this._ref}`).on("draw.dt", (F, l) => {
      if (F.namespace !== "dt")
        return;
      const c = document.querySelector(
        `${w._ref}_wrapper`
      );
      if (c) {
        const t = c.getBoundingClientRect().top, s = (document.querySelector(
          `${w._ref}_wrapper .dt-scroll-head`
        ) || { offsetHeight: 0 }).offsetHeight, r = (document.querySelector(
          `${w._ref}_wrapper .top`
        ) || { offsetHeight: 0 }).offsetHeight, a = (document.querySelector(
          `${w._ref}_wrapper .bottom`
        ) || { offsetHeight: 0 }).offsetHeight, o = (document.querySelector(
          `${w._ref}_wrapper .dt-scroll-foot`
        ) || { offsetHeight: 0 }).offsetHeight, f = document.querySelectorAll(
          `${w._ref}_wrapper .dt-layout-row:not(.dt-layout-table)`
        ), u = Array.from(f).reduce(
          (i, p) => i + p.offsetHeight,
          0
        ), h = window.innerHeight - // La taille de la fenÃªtre complete
        t - // L'ordonnÃ©e du haut du tableau
        r - // La taille du top (lorsqu'on utilise `dom`)
        a - // La taille du bottom (lorsqu'on utilise `dom`)
        s - // La taille du header (lorsqu'on utilise `layout`)
        o - // La taille du footer (lorsqu'on utilise `layout`)
        u - // La taille de toutes les rows (lorsqu'on utilise `layout`)
        I, d = document.querySelector(
          `${w._ref}_wrapper .dt-scroll-body`
        );
        t + c.offsetHeight > window.innerHeight && (d.style.minHeight = h + "px", d.style.height = h + "px");
      }
    });
  }
  handleBootrapTabChange(g) {
    typeof $ == "function" && $('a[data-toggle="tab"]').on("shown.bs.tab", function() {
      g.draw();
    }), document.querySelectorAll('button[data-bs-toggle="tab"]').forEach((w) => {
      w.addEventListener("shown.bs.tab", () => {
        g.draw();
      });
    });
  }
  // CrÃ©er une fonction utilitaire pour convertir le paramÃ¨tre
  _convertToScrollYFitToScreenConfig(g) {
    return typeof g == "boolean" && g === !0 ? {
      addStaticMargin: 0
    } : g;
  }
}
vo = new WeakMap(), Fi = new WeakMap(), Ii = new WeakMap(), ls = new WeakMap();
export {
  se as DataTable,
  sv as default
};
